{"1": [{"determining": "( ( Min( ( BR + FirstVNF_Mem ) ,ARS ) + Const ) / ( ACS + CRS ) )", "choosing": "( ( DS + ( ( Min( DS ,MUR ) - ( ( RCSe / MUM ) / CS ) ) / MLU ) ) - ( CS * MUC ) )", "obj1": 0.33271375464684017, "obj2": 0.5334253149354363}, {"determining": "( ( ( Max( Const,Max( DDR,CRS ) ) + RRS ) * BR ) * ( MDR * DDR ) )", "choosing": "Max( ( ( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) * ( ( MUM * MLU ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + MRS ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) )", "choosing": "Max( Min( MUC ,MUC ),( RCSe + DS ) )", "obj1": 0.46654275092936803, "obj2": 0.44510015248075785}, {"determining": "( Min( RRS ,MDR ) - ( ( FirstVNF_RAM + PN ) * BR ) )", "choosing": "Max( ( RMSe + RCSe ),Max( MUC,( Min( RRSe ,MUR ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + BR ) - ( ARS * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUR * MUC ) / ( ( MLU * Min( MLU ,MUR ) ) - DS ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) )", "choosing": "Max( ( RRSe + CS ),( ( MUC / RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,Min( MDR ,( ( Const + MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) / ( ( CS + RMSe ) * ( CS + RRSe ) ) ) * ( Max( MUC,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR / PN ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),Min( MLU ,RRSe ) )", "obj1": 0.2992565055762082, "obj2": 0.5663281050145008}, {"determining": "( Max( FirstVNF_RAM,DDR ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( MUC * DS ) )", "obj1": 0.07992565055762081, "obj2": 0.8162681327746593}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS + MDR ),( MDR / CRS ) )", "choosing": "( Min( CS ,CS ) / ( MLU - CS ) )", "obj1": 0.1524163568773234, "obj2": 0.78837761355846}, {"determining": "( Min( FirstVNF_CPU ,DDR ) + Min( DDR ,ARS ) )", "choosing": "( Min( MUC ,MLU ) - ( RRSe + RMSe ) )", "obj1": 0.19330855018587362, "obj2": 0.6753149994433729}, {"determining": "( ( MDR * DDR ) + ( DDR / ARS ) )", "choosing": "( Max( RMSe,MLU ) * ( RCSe / RMSe ) )", "obj1": 0.16728624535315986, "obj2": 0.7487666288939276}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Min( FirstVNF_CPU ,AMS ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( RMSe / RCSe ) - Min( MUM ,Max( RCSe,( ( MUM - CS ) * RCSe ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( ( Max( MRS,ARS ) - ( MRS + FirstVNF_CPU ) ) / Max( ( Min( RRS ,Const ) - FirstVNF_RAM ),FirstVNF_RAM ) )", "choosing": "Max( Max( MUM,( RRSe + ( RCSe - Max( ( Min( MUM ,RCSe ) + ( MUR / ( MUR * RCSe ) ) ),MUR ) ) ) ),Min( ( DS + MUM ) ,( MUM / RCSe ) ) )", "obj1": 0.5018587360594795, "obj2": 0.43448352759220266}, {"determining": "( ( BR - ( ( RRS - RRS ) / ACS ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( RMSe,( MUC + ( RCSe + ( ( MUR + RCSe ) + MUM ) ) ) ) / ( CS + ( ( ( MUC + MUM ) + Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,DDR ) + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / ( MUM / ( RRSe + CS ) ) ),RMSe ) * Min( MUM ,MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.2774311029917044}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const * BR ) ,( MDR + MRS ) )", "choosing": "Max( ( RCSe / MUM ),( CS * Max( DS,RCSe ) ) )", "obj1": 0.1821561338289963, "obj2": 0.7186430471205763}, {"determining": "( Max( ( ARS * AMS ),AMS ) - ( Const * ( ( AMS + Max( FirstVNF_RAM_Server,( RRS + ( AMS * CRS ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC + ( DS - ( Max( RMSe,DS ) * MUM ) ) ) / ( CS + RRSe ) )", "obj1": 0.26765799256505574, "obj2": 0.5838621240516834}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - ( Max( DS,( RCSe + ( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) - ( RRSe - RCSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( Max( FirstVNF_CPU,AMS ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( Const,MRS ) ) ) )", "choosing": "( ( ( Max( ( RCSe - CS ),RRSe ) * ( MUC / RMSe ) ) + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( ( Min( Min( MUC ,MUR ) ,MUM ) / CS ) + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( DDR - FirstVNF_CPU_Server ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( Max( RMSe,( ( Min( RCSe ,MUM ) / ( ( RRSe / MUC ) + Min( RRSe ,MUC ) ) ) * ( MUM * ( ( CS * RRSe ) / ( RMSe - RCSe ) ) ) ) ) + ( Max( MLU,RCSe ) + RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( DDR,RRS ) - Min( ( DDR / FirstVNF_Mem ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUR,Min( MUM ,MLU ) ) ,Max( CS,Min( RCSe ,DS ) ) ) / Min( MUM ,MUC ) ) - Max( Min( MUM ,( RRSe / MUR ) ),MUC ) )", "obj1": 0.8940520446096655, "obj2": 0.10364409161405694}, {"determining": "Min( ( Const / ( ( FirstVNF_Mem * ARS ) - FirstVNF_Mem_Server ) ) ,( PN / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe + RMSe ) + ( CS - MUM ) ) ,Min( ( MUC - RCSe ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + Min( ( MUR * MLU ) ,( MUR / RMSe ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.0326631672001495}, {"determining": "( ( MDR + ( Const * FirstVNF_CPU ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( Max( MRS,BR ) / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - ( MLU - Max( Max( DS,MLU ),( Min( RRSe ,DS ) - ( MLU / MUM ) ) ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ACS * DDR ) - ARS ),FirstVNF_RAM ) / ( AMS / ( RRS + ( DDR + DDR ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,( MUC + MUC ) ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( Max( MUC,MUR ) - ( MUR - RRSe ) ) + ( ( RCSe * MUR ) * ( MLU - DS ) ) ) )", "obj1": 0.20074349442379183, "obj2": 0.6725077233325243}, {"determining": "Min( ( ( MRS + ( Const + MDR ) ) * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,Max( Min( PN ,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( ( CRS - DDR ) / ( CRS + ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( Max( RCSe,CS ) * ( ( ( MLU * CS ) * ( RRSe * DS ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / RRS ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,MUM ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.803389483780645}, {"determining": "( ( ( Min( Min( PN ,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * Min( Const ,ACS ) ) )", "choosing": "( ( RMSe * ( ( Max( Min( MLU ,( CS + RCSe ) ),RCSe ) / DS ) * ( MUC - MLU ) ) ) * ( RMSe - MUM ) )", "obj1": 0.6319702602230484, "obj2": 0.3203912666156116}, {"determining": "Min( ( Const / ( FirstVNF_RAM + RRS ) ) ,( ( FirstVNF_Mem_Server / Max( Min( DDR ,MDR ),Max( BR,Min( FirstVNF_RAM_Server ,ACS ) ) ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),( MUR + CS ) ) ) * ( ( MUC * RCSe ) + RRSe ) ) ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,DS ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( Min( ( BR + FirstVNF_Mem ) ,ARS ) + Const ) / ( ACS + CRS ) )", "choosing": "( ( DS + ( ( Min( DS ,MUR ) - ( ( RCSe / MUM ) / CS ) ) / MLU ) ) - ( CS * MUC ) )", "obj1": 0.33271375464684017, "obj2": 0.5334253149354363}, {"determining": "( ( ( Max( Const,Max( DDR,CRS ) ) + RRS ) * BR ) * ( MDR * DDR ) )", "choosing": "Max( ( ( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) * ( ( MUM * MLU ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MDR ) - ( ( FirstVNF_RAM + PN ) * BR ) )", "choosing": "Max( ( RMSe + RCSe ),Max( MUC,( Min( RRSe ,MUR ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + BR ) - ( ARS * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUR * MUC ) / ( ( MLU * Min( MLU ,MUR ) ) - DS ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) )", "choosing": "Max( ( RRSe + CS ),( ( MUC / RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,Min( MDR ,( ( Const + MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) / ( ( CS + RMSe ) * ( CS + RRSe ) ) ) * ( Max( MUC,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR / PN ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),Min( MLU ,RRSe ) )", "obj1": 0.2992565055762082, "obj2": 0.5663281050145008}, {"determining": "( Max( FirstVNF_RAM,DDR ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( MUC * DS ) )", "obj1": 0.07992565055762081, "obj2": 0.8162681327746593}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Min( FirstVNF_CPU ,AMS ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( RMSe / RCSe ) - Min( MUM ,Max( RCSe,( ( MUM - CS ) * RCSe ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( ( BR - ( ( RRS - RRS ) / ACS ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( RMSe,( MUC + ( RCSe + ( ( MUR + RCSe ) + MUM ) ) ) ) / ( CS + ( ( ( MUC + MUM ) + Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,DDR ) + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / ( MUM / ( RRSe + CS ) ) ),RMSe ) * Min( MUM ,MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.2774311029917044}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ARS * AMS ),AMS ) - ( Const * ( ( AMS + Max( FirstVNF_RAM_Server,( RRS + ( AMS * CRS ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC + ( DS - ( Max( RMSe,DS ) * MUM ) ) ) / ( CS + RRSe ) )", "obj1": 0.26765799256505574, "obj2": 0.5838621240516834}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - ( Max( DS,( RCSe + ( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) - ( RRSe - RCSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( Max( FirstVNF_CPU,AMS ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( Const,MRS ) ) ) )", "choosing": "( ( ( Max( ( RCSe - CS ),RRSe ) * ( MUC / RMSe ) ) + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( ( Min( Min( MUC ,MUR ) ,MUM ) / CS ) + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( DDR - FirstVNF_CPU_Server ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( Max( RMSe,( ( Min( RCSe ,MUM ) / ( ( RRSe / MUC ) + Min( RRSe ,MUC ) ) ) * ( MUM * ( ( CS * RRSe ) / ( RMSe - RCSe ) ) ) ) ) + ( Max( MLU,RCSe ) + RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( ( Const / ( ( FirstVNF_Mem * ARS ) - FirstVNF_Mem_Server ) ) ,( PN / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe + RMSe ) + ( CS - MUM ) ) ,Min( ( MUC - RCSe ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + Min( ( MUR * MLU ) ,( MUR / RMSe ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.0326631672001495}, {"determining": "( ( MDR + ( Const * FirstVNF_CPU ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( Max( MRS,BR ) / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - ( MLU - Max( Max( DS,MLU ),( Min( RRSe ,DS ) - ( MLU / MUM ) ) ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( Const + MDR ) ) * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,Max( Min( PN ,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( ( CRS - DDR ) / ( CRS + ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( Max( RCSe,CS ) * ( ( ( MLU * CS ) * ( RRSe * DS ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / RRS ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,MUM ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.803389483780645}, {"determining": "( ( ( Min( Min( PN ,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * Min( Const ,ACS ) ) )", "choosing": "( ( RMSe * ( ( Max( Min( MLU ,( CS + RCSe ) ),RCSe ) / DS ) * ( MUC - MLU ) ) ) * ( RMSe - MUM ) )", "obj1": 0.6319702602230484, "obj2": 0.3203912666156116}, {"determining": "Min( ( Const / ( FirstVNF_RAM + RRS ) ) ,( ( FirstVNF_Mem_Server / Max( Min( DDR ,MDR ),Max( BR,Min( FirstVNF_RAM_Server ,ACS ) ) ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),( MUR + CS ) ) ) * ( ( MUC * RCSe ) + RRSe ) ) ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,DS ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( ( RRS * ( FirstVNF_RAM - MRS ) ) + PN ) / ( ARS - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM + ACS ) - ARS ) ) / BR ) ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( ( RMSe * ( Max( MUM,RRSe ) * ( MUC - MLU ) ) ) * Min( MUM ,DS ) ) ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - Min( ( RRS * ( ( FirstVNF_RAM_Server / AMS ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) - MRS ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ),( ( Min( ( ( Max( ( DS + MUC ),MUM ) - ( MLU / MLU ) ) + Max( RRSe,RRSe ) ) ,MUR ) + MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Max( ( Min( PN ,FirstVNF_Mem ) * MRS ),Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ,( PN - RRS ) ) ) )", "choosing": "( ( DS + Min( MUC ,MUM ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( Min( FirstVNF_CPU ,RRS ) + ( Max( Min( BR ,FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( ( MLU / ( ( Min( RRSe ,Min( MLU ,DS ) ) / ( ( MUC / MLU ) + RMSe ) ) - MUR ) ),Max( CS,( MUC / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( MDR,( AMS / FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) )", "choosing": "( ( Min( ( MLU - DS ) ,MUR ) / Max( CS,MUR ) ) - ( MUC + MUR ) )", "obj1": 0.19144981412639406, "obj2": 0.6570535107236832}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - ( ( RRSe - MLU ) * DS ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.9275092936802974, "obj2": 0.06484113399457991}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) * DDR ) / Max( ( ( AMS / ( FirstVNF_Mem / MRS ) ) + FirstVNF_CPU_Server ),CRS ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( DS * Max( MUC,( ( RMSe * MUR ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,CRS ) ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( DS * Min( Min( DS ,( MUC + DS ) ) ,( CS - DS ) ) ) - ( ( RCSe + MLU ) * RCSe ) ) - Min( DS ,MUC ) )", "obj1": 0.07063197026022305, "obj2": 0.8878210580210939}, {"determining": "( ( ( Min( Max( FirstVNF_RAM,( AMS / FirstVNF_RAM ) ) ,ACS ) / ( FirstVNF_RAM + BR ) ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR / MUR ) ,( CS + ( ( ( MUR * ( MUR / Min( MUR ,( MUM + CS ) ) ) ) / MUM ) * ( CS + MUM ) ) ) )", "obj1": 0.1691449814126394, "obj2": 0.7030835762200319}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( FirstVNF_RAM_Server + Max( Max( Min( MRS ,CRS ),ARS ),FirstVNF_RAM_Server ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( RMSe - ( Min( Max( MUR,Max( Max( MUM,DS ),RMSe ) ) ,MUM ) - ( MLU / ( MUC - RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS / ACS ) ,( FirstVNF_RAM - FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + MLU ) * ( ( DS - ( MLU / ( MUR * DS ) ) ) / MUR ) )", "obj1": 0.9442379182156134, "obj2": 0.04602427033513888}, {"determining": "Min( ( ( ( CRS * FirstVNF_RAM ) * Const ) / PN ) ,( PN / BR ) )", "choosing": "Max( ( ( MUR + RMSe ) - MLU ),( RRSe / MUR ) )", "obj1": 0.30855018587360594, "obj2": 0.5470714823242387}, {"determining": "( ( RRS - ( PN / Max( RRS,( FirstVNF_Mem / MRS ) ) ) ) / ( DDR / RRS ) )", "choosing": "Min( ( Min( ( MUM - Min( MUM ,Min( Min( CS ,Max( MUC,CS ) ) ,Max( RMSe,( MUC + MUR ) ) ) ) ) ,MUC ) / MUR ) ,( MUC * Min( ( MUC + ( ( ( ( RMSe + RRSe ) - RMSe ) / Max( DS,RMSe ) ) * Max( MLU,RMSe ) ) ) ,( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( BR ,ARS ) - FirstVNF_RAM_Server ) ,( BR / AMS ) ) ,( MRS + FirstVNF_CPU ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( ( CS - MUC ) / ( Max( MUR,MUR ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / RRS ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + ( ( Max( PN,FirstVNF_Mem ) / ( ACS * ARS ) ) + ( ( Const - FirstVNF_CPU_Server ) + Max( CRS,PN ) ) ) ) )", "choosing": "Min( ( ( Max( RRSe,MUM ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,Min( Max( MUC,MUC ) ,( DS + CS ) ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.8008681105264214}, {"determining": "Min( ( MRS / Min( CRS ,MRS ) ) ,( ( MDR + Max( Max( Const,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ),CRS ) ) * ( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( Max( ( CS + Min( Min( MUR ,DS ) ,Max( MLU,MUC ) ) ),Min( RCSe ,RRSe ) ) + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 0.08736059479553904, "obj2": 0.8098623024383668}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / ARS ) / ( MDR * Const ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - ( ( RCSe - ( MUC / MUC ) ) - ( MLU + ( CS / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / PN ) ,MDR ) + ( CRS / DDR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( ( DS - ( MUR - MUC ) ) - ( MUC / MUM ) ) * Min( ( MUM + MUM ) ,RRSe ) )", "obj1": 0.9962825278810409, "obj2": 0.004893656754861196}, {"determining": "Min( ( Const - ARS ) ,RRS )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,( ( MLU / DS ) * Max( MUC,RCSe ) ) ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem_Server ) ,( Const - Max( PN,PN ) ) )", "choosing": "( Max( ( ( MUM / RCSe ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) ),MUR ) / ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) / MDR ) ,FirstVNF_Mem ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( MUC * RCSe ) - ( MUR * Min( ( RRSe / ( ( ( MUM * MLU ) + ( DS / MUR ) ) / RMSe ) ) ,MUC ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( CRS / BR ) ) - Const ) + ( RRS * ( Min( FirstVNF_CPU ,MDR ) / ( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( RRS,( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) )", "choosing": "( Max( MUM,Max( MUR,Min( MUC ,MUM ) ) ) - ( MUC + MUR ) )", "obj1": 0.19144981412639406, "obj2": 0.6570535107236832}, {"determining": "Min( Min( ( FirstVNF_Mem + Const ) ,Max( ( CRS * CRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( ( CRS + AMS ) / MRS ) ) / Min( ( DDR / RRS ) ,Min( FirstVNF_Mem ,AMS ) ) ) )", "choosing": "( ( ( ( ( Min( RMSe ,MLU ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Min( ( RMSe - ( CS * MUC ) ) ,MLU ) ) ) / Max( RMSe,DS ) ) + Min( ( CS + RCSe ) ,( RMSe + MUC ) ) ) - ( ( ( RRSe / MLU ) * Max( MLU,CS ) ) / ( ( DS / DS ) + ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ACS * DDR ) - ARS ),( ( Min( PN ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) ) / ( AMS / ( RRS + ( DDR + DDR ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RRSe ) ,( MUC + MUC ) ) - ( ( DS * RMSe ) * Min( RMSe ,MUM ) ) ) - ( ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) * Min( DS ,MLU ) ) )", "obj1": 0.1579925650557621, "obj2": 0.7439012911542833}, {"determining": "( ( Min( DDR ,MDR ) / ACS ) + Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "( ( ( ( MUC * DS ) - Max( MUR,MUR ) ) * Max( ( MLU * ( Max( RMSe,Max( ( MLU + DS ),RMSe ) ) * MUR ) ),Min( CS ,MUC ) ) ) * ( MUM - MLU ) )", "obj1": 0.16356877323420074, "obj2": 0.7436559718486991}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( ( ( Max( DS,Min( MLU ,MUC ) ) + RRSe ) / MUC ) + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.6777951512545415}, {"determining": "( ( Max( ( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / RRS ) * ( ( Min( FirstVNF_Mem_Server ,BR ) - MRS ) * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( MRS - DDR ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,( CS - Min( Min( ( RCSe * RRSe ) ,CS ) ,MLU ) ) ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,Min( ( MUR / MUR ) ,( MUC * MUR ) ) ) ) )", "obj1": 0.11895910780669144, "obj2": 0.7851308970562825}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.17100371747211895, "obj2": 0.6990456039525635}, {"determining": "Min( ( PN * MDR ) ,Max( RRS,PN ) )", "choosing": "( ( ( MUR + DS ) - ( RRSe + CS ) ) - Min( ( MLU / DS ) ,( MUR * MUR ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5846552851356903}, {"determining": "Min( ( MRS / Min( CRS ,Const ) ) ,( Const - ARS ) )", "choosing": "( MUR + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Const * MRS ) )", "choosing": "Max( Max( Min( ( ( Min( MLU ,RRSe ) - RCSe ) - MUR ) ,Min( MUM ,( MUM - CS ) ) ),RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_CPU + Min( FirstVNF_CPU_Server ,PN ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( ( ACS * Min( FirstVNF_RAM_Server ,Const ) ),MDR ) )", "choosing": "( Min( DS ,( ( ( CS + RMSe ) - ( MLU * CS ) ) + Min( RRSe ,RCSe ) ) ) / ( MUR - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( AMS / RRS ) ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - Max( ( ( RCSe - ( CS * Min( ( CS - RRSe ) ,MLU ) ) ) + CS ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Const,Max( DDR,CRS ) ) + RRS ) * BR ) * ( MDR * DDR ) )", "choosing": "Max( ( ( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) * ( ( MUM * MLU ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,CRS ) ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( DS * Min( Min( DS ,( MUC + DS ) ) ,( CS - DS ) ) ) - ( ( RCSe + MLU ) * RCSe ) ) - Min( DS ,MUC ) )", "obj1": 0.07063197026022305, "obj2": 0.8878210580210939}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,Min( MRS ,( PN - ( FirstVNF_RAM_Server - Min( FirstVNF_RAM ,ARS ) ) ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - ( MUR - Min( Min( ( CS + ( MUC / RCSe ) ) ,RMSe ) ,( ( MUC + DS ) + MLU ) ) ) ) ) )", "obj1": 0.6003717472118959, "obj2": 0.3994633377764596}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,Min( MRS ,( PN - ( FirstVNF_RAM_Server - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),( DS / RMSe ) )", "obj1": 0.7174721189591078, "obj2": 0.23783712211193467}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( PN + BR ) - ( ARS * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUR * MUC ) / ( ( MLU * Min( MLU ,MUR ) ) - DS ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ( Min( Min( PN ,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * Min( Const ,ACS ) ) )", "choosing": "( ( RMSe * ( ( Max( Min( MLU ,( CS + RCSe ) ),RCSe ) / DS ) * ( MUC - MLU ) ) ) * ( RMSe - MUM ) )", "obj1": 0.6319702602230484, "obj2": 0.3203912666156116}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( ( ( DDR / ARS ) - Const ) + ( RRS * Const ) )", "choosing": "( ( MUC / RCSe ) * ( RMSe + DS ) )", "obj1": 0.9200743494423792, "obj2": 0.07356395024472705}, {"determining": "( ( ( Max( AMS,DDR ) + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / ( MUM / ( RRSe + CS ) ) ),RMSe ) * Min( MUM ,MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.2774311029917044}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( ( Const / ( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * Max( ( AMS - MRS ),( FirstVNF_RAM_Server + MRS ) ) ) ) ,( PN / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe + RMSe ) + ( ( Min( MUR ,MUC ) - RMSe ) + ( RCSe - RRSe ) ) ) ,Min( ( ( Min( MUC ,( RRSe * ( CS + CS ) ) ) - RCSe ) - Max( Min( RCSe ,Min( ( CS * MLU ) ,CS ) ),RCSe ) ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + Min( ( MUR * MLU ) ,( MUR / RMSe ) ) ) )", "obj1": 0.15055762081784388, "obj2": 0.7353647983684667}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( ( Max( ( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / RRS ) * ( ( Min( FirstVNF_Mem_Server ,BR ) - MRS ) * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( MRS - DDR ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,( CS - Min( Min( ( RCSe * RRSe ) ,CS ) ,MLU ) ) ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,Min( ( MUR / MUR ) ,( MUC * MUR ) ) ) ) )", "obj1": 0.11895910780669144, "obj2": 0.7851308970562825}, {"determining": "( ( Min( ( PN / PN ) ,MDR ) + ( CRS / DDR ) ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( ( DS - ( MUR - MUC ) ) - ( MUC / MUM ) ) * Min( ( MUM + MUM ) ,RRSe ) )", "obj1": 0.9962825278810409, "obj2": 0.004893656754861196}, {"determining": "Min( ( BR / PN ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),Min( MLU ,RRSe ) )", "obj1": 0.2992565055762082, "obj2": 0.5663281050145008}, {"determining": "Max( Min( ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM_Server ),MRS ) - ( FirstVNF_Mem_Server * AMS ) ) ,FirstVNF_CPU_Server ),ARS )", "choosing": "( ( MUR - RRSe ) + ( Max( Min( MUM ,DS ),MUC ) + ( DS * MUR ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Max( ( MRS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - ( ( RRSe - MLU ) * DS ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.9275092936802974, "obj2": 0.06484113399457991}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( ( ( ( ACS + RRS ) - MRS ) + AMS ) * MDR ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Min( RRSe ,Max( DS,( RMSe / CS ) ) ) / ( MLU / Min( CS ,MUC ) ) ) ,MUM ) ) ) - ( MUC + MUR ) )", "obj1": 0.21189591078066913, "obj2": 0.6458691452517187}, {"determining": "( Max( ( ARS * AMS ),AMS ) - ( Const * ( ( AMS + Max( FirstVNF_RAM_Server,( RRS + ( AMS * CRS ) ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC + ( DS - ( Max( RMSe,DS ) * MUM ) ) ) / ( CS + RRSe ) )", "obj1": 0.26765799256505574, "obj2": 0.5838621240516834}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( MRS - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( CS,CS ) ) - ( MUC + MUR ) )", "obj1": 0.23605947955390336, "obj2": 0.6054072618819576}, {"determining": "Min( ( Const - Min( MRS ,( PN - ( FirstVNF_RAM_Server - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,RRS )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,( ( MLU / DS ) * Max( MUC,RCSe ) ) ) / Min( ( CS + ( MUC / RCSe ) ) ,RMSe ) ) )", "obj1": 0.16728624535315986, "obj2": 0.7288167763329585}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( ( ( Max( DS,Min( MLU ,MUC ) ) + RRSe ) / MUC ) + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.6777951512545415}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5980317608011204}, {"determining": "( ( Min( ( BR + FirstVNF_Mem ) ,ARS ) + Const ) / ( ACS + CRS ) )", "choosing": "( ( DS + ( ( Min( DS ,MUR ) - ( ( RCSe / MUM ) / CS ) ) / MLU ) ) - ( CS * MUC ) )", "obj1": 0.33271375464684017, "obj2": 0.5334253149354363}, {"determining": "Min( ( ( ( CRS * FirstVNF_RAM ) * Const ) / PN ) ,( PN / BR ) )", "choosing": "Max( ( ( MUR + RMSe ) - MLU ),( RRSe / MUR ) )", "obj1": 0.30855018587360594, "obj2": 0.5470714823242387}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / RRS ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,MUM ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.803389483780645}, {"determining": "Max( Max( ( ( BR / CRS ) - FirstVNF_RAM_Server ),Max( ACS,ACS ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Max( MLU,CS ) - ( CS + ( MUM - ( MLU + RMSe ) ) ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.19144981412639406, "obj2": 0.6570535107236832}, {"determining": "Min( ( PN * MDR ) ,Max( RRS,PN ) )", "choosing": "( ( ( MUR + DS ) - ( RRSe + CS ) ) - Min( ( MLU / DS ) ,( MUR * MUR ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5846552851356903}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Min( FirstVNF_CPU ,AMS ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( RMSe / RCSe ) - Min( MUM ,Max( RCSe,( ( MUM - CS ) * RCSe ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( ( Max( ( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / RRS ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + ( ARS * MRS ) ) )", "choosing": "Min( ( ( Max( RRSe,( CS - Min( Min( ( RCSe * CS ) ,CS ) ,MLU ) ) ) / ( RCSe * RMSe ) ) / MUC ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,Min( ( MUR / MUR ) ,( MUC * MUR ) ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7925049461054294}, {"determining": "( ( ( Min( Max( FirstVNF_RAM,( AMS / FirstVNF_RAM ) ) ,ACS ) / ( FirstVNF_RAM + BR ) ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR / MUR ) ,( CS + ( ( ( MUR * ( MUR / Min( MUR ,( MUM + CS ) ) ) ) / MUM ) * ( CS + MUM ) ) ) )", "obj1": 0.1691449814126394, "obj2": 0.7030835762200319}, {"determining": "( ( MDR + Min( ( Const * FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Min( ( RRSe + MUR ) ,MUM ) * Max( RMSe,MUC ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( Max( RRSe,MLU ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.08736059479553904, "obj2": 0.8082220323462147}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * ( Max( Const,Max( RRS,CRS ) ) * ( Const * FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( Min( Min( DS ,( MUC + DS ) ) ,( CS - DS ) ) * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.17472118959107807, "obj2": 0.6895595700282275}, {"determining": "Max( Max( MDR,( AMS / FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) )", "choosing": "( ( Min( ( MLU - DS ) ,MUR ) / Max( CS,MUR ) ) - ( MUC + MUR ) )", "obj1": 0.19144981412639406, "obj2": 0.6570535107236832}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.17100371747211895, "obj2": 0.6990456039525635}, {"determining": "( Min( RRS ,MDR ) - ( ( FirstVNF_RAM + PN ) * BR ) )", "choosing": "Max( ( RMSe + RCSe ),Max( MUC,( Min( RRSe ,MUR ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) )", "choosing": "Max( ( RRSe + CS ),( ( MUC / RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,Min( MDR ,( ( Const + MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) / ( ( CS + RMSe ) * ( CS + RRSe ) ) ) * ( Max( MUC,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( ( RRS - RRS ) / ACS ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( RMSe,( MUC + ( RCSe + ( ( MUR + RCSe ) + MUM ) ) ) ) / ( CS + ( ( ( MUC + MUM ) + Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - ( Max( DS,( RCSe + ( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) - ( RRSe - RCSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( Max( FirstVNF_CPU,AMS ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( Const,MRS ) ) ) )", "choosing": "( ( ( Max( ( RCSe - CS ),RRSe ) * ( MUC / RMSe ) ) + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( ( Min( Min( MUC ,MUR ) ,MUM ) / CS ) + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( DDR - FirstVNF_CPU_Server ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( Max( RMSe,( ( Min( RCSe ,MUM ) / ( ( RRSe / MUC ) + Min( RRSe ,MUC ) ) ) * ( MUM * ( ( CS * RRSe ) / ( RMSe - RCSe ) ) ) ) ) + ( Max( MLU,RCSe ) + RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( Const * FirstVNF_CPU ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( Max( MRS,BR ) / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - ( MLU - Max( Max( DS,MLU ),( Min( RRSe ,DS ) - ( MLU / MUM ) ) ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( Const + MDR ) ) * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,Max( Min( PN ,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( ( CRS - DDR ) / ( CRS + ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( Max( RCSe,CS ) * ( ( ( MLU * CS ) * ( RRSe * DS ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( FirstVNF_RAM + RRS ) ) ,( ( FirstVNF_Mem_Server / Max( Min( DDR ,MDR ),Max( BR,Min( FirstVNF_RAM_Server ,ACS ) ) ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),( MUR + CS ) ) ) * ( ( MUC * RCSe ) + RRSe ) ) ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,DS ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( ( RRS * ( FirstVNF_RAM - MRS ) ) + PN ) / ( ARS - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM + ACS ) - ARS ) ) / BR ) ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( ( RMSe * ( Max( MUM,RRSe ) * ( MUC - MLU ) ) ) * Min( MUM ,DS ) ) ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - Min( ( RRS * ( ( FirstVNF_RAM_Server / AMS ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) - MRS ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ),( ( Min( ( ( Max( ( DS + MUC ),MUM ) - ( MLU / MLU ) ) + Max( RRSe,RRSe ) ) ,MUR ) + MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Max( ( Min( PN ,FirstVNF_Mem ) * MRS ),Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ,( PN - RRS ) ) ) )", "choosing": "( ( DS + Min( MUC ,MUM ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( Min( FirstVNF_CPU ,RRS ) + ( Max( Min( BR ,FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( ( MLU / ( ( Min( RRSe ,Min( MLU ,DS ) ) / ( ( MUC / MLU ) + RMSe ) ) - MUR ) ),Max( CS,( MUC / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) * DDR ) / Max( ( ( AMS / ( FirstVNF_Mem / MRS ) ) + FirstVNF_CPU_Server ),CRS ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( DS * Max( MUC,( ( RMSe * MUR ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + Max( Max( Min( MRS ,CRS ),ARS ),FirstVNF_RAM_Server ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( RMSe - ( Min( Max( MUR,Max( Max( MUM,DS ),RMSe ) ) ,MUM ) - ( MLU / ( MUC - RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( PN / Max( RRS,( FirstVNF_Mem / MRS ) ) ) ) / ( DDR / RRS ) )", "choosing": "Min( ( Min( ( MUM - Min( MUM ,Min( Min( CS ,Max( MUC,CS ) ) ,Max( RMSe,( MUC + MUR ) ) ) ) ) ,MUC ) / MUR ) ,( MUC * Min( ( MUC + ( ( ( ( RMSe + RRSe ) - RMSe ) / Max( DS,RMSe ) ) * Max( MLU,RMSe ) ) ) ,( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( BR ,ARS ) - FirstVNF_RAM_Server ) ,( BR / AMS ) ) ,( MRS + FirstVNF_CPU ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( ( CS - MUC ) / ( Max( MUR,MUR ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / ARS ) / ( MDR * Const ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - ( ( RCSe - ( MUC / MUC ) ) - ( MLU + ( CS / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,RRS )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,( ( MLU / DS ) * Max( MUC,RCSe ) ) ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem_Server ) ,( Const - Max( PN,PN ) ) )", "choosing": "( Max( ( ( MUM / RCSe ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) ),MUR ) / ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) / MDR ) ,FirstVNF_Mem ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( MUC * RCSe ) - ( MUR * Min( ( RRSe / ( ( ( MUM * MLU ) + ( DS / MUR ) ) / RMSe ) ) ,MUC ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( CRS / BR ) ) - Const ) + ( RRS * ( Min( FirstVNF_CPU ,MDR ) / ( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem + Const ) ,Max( ( CRS * CRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( ( CRS + AMS ) / MRS ) ) / Min( ( DDR / RRS ) ,Min( FirstVNF_Mem ,AMS ) ) ) )", "choosing": "( ( ( ( ( Min( RMSe ,MLU ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Min( ( RMSe - ( CS * MUC ) ) ,MLU ) ) ) / Max( RMSe,DS ) ) + Min( ( CS + RCSe ) ,( RMSe + MUC ) ) ) - ( ( ( RRSe / MLU ) * Max( MLU,CS ) ) / ( ( DS / DS ) + ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / Min( CRS ,Const ) ) ,( Const - ARS ) )", "choosing": "( MUR + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Const * MRS ) )", "choosing": "Max( Max( Min( ( ( Min( MLU ,RRSe ) - RCSe ) - MUR ) ,Min( MUM ,( MUM - CS ) ) ),RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_CPU + Min( FirstVNF_CPU_Server ,PN ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( ( ACS * Min( FirstVNF_RAM_Server ,Const ) ),MDR ) )", "choosing": "( Min( DS ,( ( ( CS + RMSe ) - ( MLU * CS ) ) + Min( RRSe ,RCSe ) ) ) / ( MUR - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( AMS / RRS ) ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - Max( ( ( RCSe - ( CS * Min( ( CS - RRSe ) ,MLU ) ) ) + CS ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Const * MRS ) )", "choosing": "Max( Max( Min( ( ( Min( MLU ,RRSe ) - RCSe ) - MUR ) ,Min( MUM ,( MUM - CS ) ) ),RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( ( ( RRSe - ( RCSe + RCSe ) ) - ( MUM + RRSe ) ) ,MLU ),( RMSe / MUC ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - Min( ( CRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,( RRS / ACS ) ) ) ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUC ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Max( ( PN + BR ),( MRS / Min( CRS ,MRS ) ) ) / ( BR / RRS ) ) )", "choosing": "Max( ( Max( Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / MLU ) ),( MUM / MUR ) ),MUM ) * ( RCSe * RRSe ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,MDR ) - Max( ( ( MRS - Const ) * MRS ),Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( CS / CS ) ) ,MLU ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - DDR ) ,( DDR * MRS ) ) - Max( ( ( Const + Const ) * MRS ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + MUM ) ) / ( Min( ( MUC + CS ) ,Min( ( MUR / MUR ) ,( ( ( RMSe + DS ) * RCSe ) * MUR ) ) ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem ) / MRS )", "choosing": "Min( ( MUR / RRSe ) ,( MUC * Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS * MRS ) ,( ( PN / FirstVNF_Mem ) / Min( Max( ( CRS * CRS ),( ( Min( MRS ,BR ) * FirstVNF_CPU_Server ) + ARS ) ) ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + ( MUC + CS ) ) / Max( ( MLU * MUR ),( RMSe - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,RRS ) - ( Max( ( ( FirstVNF_CPU_Server + DDR ) / Min( MRS ,AMS ) ),FirstVNF_CPU ) * Const ) )", "choosing": "( ( MUM - Min( ( ( RRSe - ( RCSe + RCSe ) ) - ( MUM + RRSe ) ) ,MLU ) ) - Max( Min( MUM ,( Max( ( MLU - Min( RCSe ,Min( RCSe ,DS ) ) ),RRSe ) + CS ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( MDR,BR ) + Max( DDR,BR ) ) / Min( RRS ,MDR ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / CRS ) ) ,( FirstVNF_RAM * Min( FirstVNF_RAM_Server ,Min( ( DDR * BR ) ,( PN - ( FirstVNF_RAM_Server - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - Max( ( RRSe + CS ),( MUR + DS ) ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + ( MUC / RCSe ) ) ,RMSe ) ,( ( MUR / RRSe ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / CRS ) ) ,( Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_RAM ) ) * Min( FirstVNF_CPU ,( ( RRS + ( RRS * Max( ACS,MRS ) ) ) + Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( ( RCSe * ( ( Max( Max( MLU,RMSe ),MUM ) * MLU ) + RCSe ) ) * MUR ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / CRS ) ) ,( Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,Min( MRS ,( PN - ( ( ( ARS * Const ) / PN ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Max( ( MUC / CS ),( RRSe / MUR ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_Mem ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,( MUC + CS ) ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ( FirstVNF_CPU / RRS ) ) * FirstVNF_RAM_Server ) * ( RRS - ( ( FirstVNF_RAM + ( FirstVNF_CPU + DDR ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( MUR ,RRSe ),Min( ( ( MUC - MUC ) + CS ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Max( DDR,FirstVNF_RAM ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( MUM + MUM ) ,RRSe ) / ( ( ( MUR * MUR ) / ( ( Min( ( RMSe + DS ) ,RMSe ) - CS ) - MUC ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( ( RMSe + RCSe ),Max( RRSe,MLU ) ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( PN,CRS ) ) ) ,( ( ( BR + Max( Const,Max( RRS,CRS ) ) ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( MUC + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( ( ( RRS / ( CRS / BR ) ) - Const ) - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( PN,CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,DS ) ) + ( Max( RMSe,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( RRS ,BR ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( MLU + ( CS - MUC ) ) / ( MUR + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Max( ( CRS * CRS ),Max( FirstVNF_RAM_Server,Min( ( AMS / MDR ) ,( MRS + FirstVNF_CPU ) ) ) ) ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - Max( PN,CRS ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) / ( CRS / BR ) ) - Const ) + ( RRS * Const ) )", "choosing": "( ( ( MUM - RMSe ) / ( RMSe - CS ) ) * ( RMSe + DS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Min( Const ,FirstVNF_RAM ) / Max( PN,MDR ) ) * ( MDR * DDR ) )", "choosing": "Max( ( MLU * ( Min( Max( RRSe,( ( ( RRSe / MUC ) - Max( RRSe,DS ) ) + RCSe ) ) ,( Min( ( MUR * MUM ) ,RRSe ) / MUC ) ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,CRS ) ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( DS * Min( Min( DS ,( MUC + DS ) ) ,( CS - DS ) ) ) - ( ( RCSe + MLU ) * RCSe ) ) - Min( DS ,MUC ) )", "obj1": 0.07063197026022305, "obj2": 0.8878210580210939}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,Min( MRS ,( PN - ( FirstVNF_RAM_Server - Min( FirstVNF_RAM ,ARS ) ) ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( MLU + MUR ) - ( MUR - Min( Min( ( CS + ( MUC / RCSe ) ) ,RMSe ) ,( ( MUC + DS ) + MLU ) ) ) ) ) )", "obj1": 0.6003717472118959, "obj2": 0.3994633377764596}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( PN + BR ) - ( ARS * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUR * MUC ) / ( ( MLU * Min( MLU ,MUR ) ) - DS ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,Min( MRS ,( PN - ( FirstVNF_RAM_Server - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),( DS / RMSe ) )", "obj1": 0.7174721189591078, "obj2": 0.23783712211193467}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( Max( ( MRS / Min( MRS ,( PN - ( ( ( ARS * Const ) / PN ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - ( ( RRSe - MLU ) * DS ) ),Min( RCSe ,( RCSe + MUR ) ) ) + Max( ( MUC / CS ),( RRSe / MUR ) ) )", "obj1": 0.9163568773234201, "obj2": 0.07785899683943881}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( ( ( Min( Min( PN ,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * Min( Const ,ACS ) ) )", "choosing": "( ( RMSe * ( ( Max( Min( MLU ,( CS + RCSe ) ),RCSe ) / DS ) * ( MUC - MLU ) ) ) * ( RMSe - MUM ) )", "obj1": 0.6319702602230484, "obj2": 0.3203912666156116}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( ( Const / ( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * Max( ( AMS - MRS ),( FirstVNF_RAM_Server + MRS ) ) ) ) ,( PN / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RRSe + RMSe ) + ( ( Min( MUR ,MUC ) - RMSe ) + ( RCSe - RRSe ) ) ) ,Min( ( ( Min( MUC ,( RRSe * ( CS + CS ) ) ) - RCSe ) - Max( Min( RCSe ,Min( ( CS * MLU ) ,CS ) ),RCSe ) ) ,( RMSe * CS ) ) ) * ( ( ( CS + RMSe ) + Min( DS ,RCSe ) ) + Min( ( MUR * MLU ) ,( MUR / RMSe ) ) ) )", "obj1": 0.15055762081784388, "obj2": 0.7353647983684667}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) - ARS ) + MDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( ( DS - ( Min( ( CS + MUR ) ,( MUC + MUM ) ) / ( ( RRSe - Max( CS,DS ) ) - Min( Min( Min( MUM ,RCSe ) ,MUM ) ,( Min( CS ,MUC ) / Max( RRSe,MUC ) ) ) ) ) ) - ( MUC / MUM ) ) * Min( ( MUM + MUM ) ,RRSe ) )", "obj1": 0.9925650557620818, "obj2": 0.009689642896753668}, {"determining": "( ( ( Max( AMS,DDR ) + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / ( MUM / ( RRSe + CS ) ) ),RMSe ) * Min( MUM ,MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.2774311029917044}, {"determining": "Max( Min( ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM_Server ),MRS ) - ( FirstVNF_Mem_Server * AMS ) ) ,FirstVNF_CPU_Server ),ARS )", "choosing": "( ( MUR - RRSe ) + ( Max( Min( MUM ,DS ),MUC ) + ( DS * MUR ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( ( ( Max( AMS,DDR ) + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / ( MUM / ( RRSe + CS ) ) ),RMSe ) * Min( MUM ,MUM ) )", "obj1": 0.7137546468401487, "obj2": 0.24432323665052894}, {"determining": "Min( ( BR / PN ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),Min( MLU ,RRSe ) )", "obj1": 0.2992565055762082, "obj2": 0.5663281050145008}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7810633432468673}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7810633432468673}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( DDR + ( FirstVNF_Mem_Server / ( PN + FirstVNF_RAM_Server ) ) ) ) ,( ACS * ( ( PN / MRS ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( Max( Max( ( RRSe / ( MLU * ( MUR * MUR ) ) ),RCSe ),MUC ) ,( Max( MLU,DS ) / Max( ( MLU - MUR ),MUR ) ) ) ) / ( MUC + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.2958134086916686}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( MRS - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( CS,CS ) ) - ( MUC + MUR ) )", "obj1": 0.23605947955390336, "obj2": 0.6054072618819576}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Min( ( Const + FirstVNF_Mem_Server ) ,( Const - ARS ) ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + MUM ) ) / ( CS + ( MUC + CS ) ) )", "obj1": 0.6412639405204461, "obj2": 0.30576321279376073}, {"determining": "Min( ( Const - Min( MRS ,( PN - ( FirstVNF_RAM_Server - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ,RRS )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,( ( MLU / DS ) * Max( MUC,RCSe ) ) ) / Min( ( CS + ( MUC / RCSe ) ) ,RMSe ) ) )", "obj1": 0.16728624535315986, "obj2": 0.7288167763329585}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( ( ( Max( DS,Min( MLU ,MUC ) ) + RRSe ) / MUC ) + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.6777951512545415}, {"determining": "Min( ( FirstVNF_Mem_Server * ARS ) ,( ( ( Max( CRS,( ACS * FirstVNF_RAM ) ) / ARS ) - Const ) + ( RRS * Const ) ) )", "choosing": "( Max( ( ( DS * ( ( ( DS - DS ) - ( ( CS / MUC ) / ( DS - MUM ) ) ) * RMSe ) ) + DS ),MUR ) - Max( CS,CS ) )", "obj1": 0.9349442379182156, "obj2": 0.051256738453767756}, {"determining": "( ( Min( ( BR + FirstVNF_Mem ) ,ARS ) + Const ) / ( ACS + CRS ) )", "choosing": "( ( DS + ( ( Min( DS ,MUR ) - ( ( RCSe / MUM ) / CS ) ) / MLU ) ) - ( CS * MUC ) )", "obj1": 0.33271375464684017, "obj2": 0.5334253149354363}, {"determining": "Min( ( ( ( CRS * FirstVNF_RAM ) * Const ) / PN ) ,( PN / BR ) )", "choosing": "Max( ( ( MUR + RMSe ) - MLU ),( RRSe / MUR ) )", "obj1": 0.30855018587360594, "obj2": 0.5470714823242387}, {"determining": "Min( ( PN * MDR ) ,Max( RRS,PN ) )", "choosing": "( ( ( MUR + DS ) - ( RRSe + CS ) ) - Min( ( MLU / DS ) ,( MUR * MUR ) ) )", "obj1": 0.26394052044609667, "obj2": 0.5846552851356903}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / MLU ),RMSe ) * Min( ( DS + MUM ) ,( MLU / MLU ) ) )", "obj1": 0.6728624535315985, "obj2": 0.2844310734492158}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Min( FirstVNF_CPU ,AMS ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( RMSe / RCSe ) - Min( MUM ,Max( RCSe,( ( MUM - CS ) * RCSe ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( Max( ( MRS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - ( ( RRSe - MLU ) * DS ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.9275092936802974, "obj2": 0.06484113399457991}, {"determining": "Max( Max( MDR,( AMS / FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) )", "choosing": "( ( Min( ( MLU - DS ) ,MUR ) / Max( CS,MUR ) ) - ( MUC + MUR ) )", "obj1": 0.19144981412639406, "obj2": 0.6570535107236832}, {"determining": "( ( MDR + Min( ( Const * FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Min( ( RRSe + MUR ) ,MUM ) * Max( RMSe,MUC ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( Max( RRSe,MLU ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7991970647160932}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( ( Min( Max( FirstVNF_RAM,( AMS / FirstVNF_RAM ) ) ,ACS ) / ( FirstVNF_RAM + BR ) ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUR / MUR ) ,( CS + ( ( ( MUR * ( MUR / Min( MUR ,( MUM + CS ) ) ) ) / MUM ) * ( CS + MUM ) ) ) )", "obj1": 0.1691449814126394, "obj2": 0.7030835762200319}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( ( ( ( ACS + RRS ) - MRS ) + AMS ) * MDR ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Min( RRSe ,Max( DS,( RMSe / CS ) ) ) / ( MLU / Min( CS ,MUC ) ) ) ,MUM ) ) ) - ( MUC + MUR ) )", "obj1": 0.21189591078066913, "obj2": 0.6458691452517187}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( ( ( Max( DS,Min( MLU ,MUC ) ) + RRSe ) / MUC ) + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6468720503503148}, {"determining": "( ( MDR + Min( ( Const * FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Min( ( RRSe + MUR ) ,MUM ) * Max( RMSe,MUC ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( Max( RRSe,MLU ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.08736059479553904, "obj2": 0.8082220323462147}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * ( Max( Const,Max( RRS,CRS ) ) * ( Const * FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( Min( Min( DS ,( MUC + DS ) ) ,( CS - DS ) ) * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.17472118959107807, "obj2": 0.6895595700282275}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / RRS ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,MUM ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.803389483780645}, {"determining": "( ( ( DDR / ARS ) - Const ) + ( RRS * Const ) )", "choosing": "( ( MUC / RCSe ) * ( RMSe + DS ) )", "obj1": 0.9200743494423792, "obj2": 0.07356395024472705}, {"determining": "Max( Max( ( ( BR / CRS ) - FirstVNF_RAM_Server ),Max( ACS,ACS ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Max( MLU,CS ) - ( CS + ( MUM - ( MLU + RMSe ) ) ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.19144981412639406, "obj2": 0.6570535107236832}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5980317608011204}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.17100371747211895, "obj2": 0.6990456039525635}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( ( BR - MRS ) - ( Min( ( FirstVNF_Mem_Server + DDR ) ,Max( ARS,ACS ) ) + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( CS - ( RCSe * ( DS - MUM ) ) ) * MUM ) - MUR ) ,Max( RMSe,MUR ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( Max( Const,Max( DDR,CRS ) ) + RRS ) * BR ) * ( MDR * DDR ) )", "choosing": "Max( ( ( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) * ( ( MUM * MLU ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MDR ) - ( ( FirstVNF_RAM + PN ) * BR ) )", "choosing": "Max( ( RMSe + RCSe ),Max( MUC,( Min( RRSe ,MUR ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) )", "choosing": "Max( ( RRSe + CS ),( ( MUC / RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,Min( MDR ,( ( Const + MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) / ( ( CS + RMSe ) * ( CS + RRSe ) ) ) * ( Max( MUC,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( ( RRS - RRS ) / ACS ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( RMSe,( MUC + ( RCSe + ( ( MUR + RCSe ) + MUM ) ) ) ) / ( CS + ( ( ( MUC + MUM ) + Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - ( Max( DS,( RCSe + ( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) - ( RRSe - RCSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( Max( FirstVNF_CPU,AMS ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( Const,MRS ) ) ) )", "choosing": "( ( ( Max( ( RCSe - CS ),RRSe ) * ( MUC / RMSe ) ) + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( ( Min( Min( MUC ,MUR ) ,MUM ) / CS ) + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( DDR - FirstVNF_CPU_Server ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( Max( RMSe,( ( Min( RCSe ,MUM ) / ( ( RRSe / MUC ) + Min( RRSe ,MUC ) ) ) * ( MUM * ( ( CS * RRSe ) / ( RMSe - RCSe ) ) ) ) ) + ( Max( MLU,RCSe ) + RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( Const * FirstVNF_CPU ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( Max( MRS,BR ) / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - ( MLU - Max( Max( DS,MLU ),( Min( RRSe ,DS ) - ( MLU / MUM ) ) ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( Const + MDR ) ) * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,Max( Min( PN ,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( ( CRS - DDR ) / ( CRS + ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( Max( RCSe,CS ) * ( ( ( MLU * CS ) * ( RRSe * DS ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( FirstVNF_RAM + RRS ) ) ,( ( FirstVNF_Mem_Server / Max( Min( DDR ,MDR ),Max( BR,Min( FirstVNF_RAM_Server ,ACS ) ) ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),( MUR + CS ) ) ) * ( ( MUC * RCSe ) + RRSe ) ) ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,DS ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( ( RRS * ( FirstVNF_RAM - MRS ) ) + PN ) / ( ARS - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM + ACS ) - ARS ) ) / BR ) ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( ( RMSe * ( Max( MUM,RRSe ) * ( MUC - MLU ) ) ) * Min( MUM ,DS ) ) ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - Min( ( RRS * ( ( FirstVNF_RAM_Server / AMS ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) - MRS ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ),( ( Min( ( ( Max( ( DS + MUC ),MUM ) - ( MLU / MLU ) ) + Max( RRSe,RRSe ) ) ,MUR ) + MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Max( ( Min( PN ,FirstVNF_Mem ) * MRS ),Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ,( PN - RRS ) ) ) )", "choosing": "( ( DS + Min( MUC ,MUM ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( Min( FirstVNF_CPU ,RRS ) + ( Max( Min( BR ,FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( ( MLU / ( ( Min( RRSe ,Min( MLU ,DS ) ) / ( ( MUC / MLU ) + RMSe ) ) - MUR ) ),Max( CS,( MUC / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) * DDR ) / Max( ( ( AMS / ( FirstVNF_Mem / MRS ) ) + FirstVNF_CPU_Server ),CRS ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( DS * Max( MUC,( ( RMSe * MUR ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + Max( Max( Min( MRS ,CRS ),ARS ),FirstVNF_RAM_Server ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( RMSe - ( Min( Max( MUR,Max( Max( MUM,DS ),RMSe ) ) ,MUM ) - ( MLU / ( MUC - RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( PN / Max( RRS,( FirstVNF_Mem / MRS ) ) ) ) / ( DDR / RRS ) )", "choosing": "Min( ( Min( ( MUM - Min( MUM ,Min( Min( CS ,Max( MUC,CS ) ) ,Max( RMSe,( MUC + MUR ) ) ) ) ) ,MUC ) / MUR ) ,( MUC * Min( ( MUC + ( ( ( ( RMSe + RRSe ) - RMSe ) / Max( DS,RMSe ) ) * Max( MLU,RMSe ) ) ) ,( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( BR ,ARS ) - FirstVNF_RAM_Server ) ,( BR / AMS ) ) ,( MRS + FirstVNF_CPU ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( ( CS - MUC ) / ( Max( MUR,MUR ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / ARS ) / ( MDR * Const ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - ( ( RCSe - ( MUC / MUC ) ) - ( MLU + ( CS / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,RRS )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,( ( MLU / DS ) * Max( MUC,RCSe ) ) ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem_Server ) ,( Const - Max( PN,PN ) ) )", "choosing": "( Max( ( ( MUM / RCSe ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) ),MUR ) / ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) / MDR ) ,FirstVNF_Mem ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( MUC * RCSe ) - ( MUR * Min( ( RRSe / ( ( ( MUM * MLU ) + ( DS / MUR ) ) / RMSe ) ) ,MUC ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( CRS / BR ) ) - Const ) + ( RRS * ( Min( FirstVNF_CPU ,MDR ) / ( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem + Const ) ,Max( ( CRS * CRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( ( CRS + AMS ) / MRS ) ) / Min( ( DDR / RRS ) ,Min( FirstVNF_Mem ,AMS ) ) ) )", "choosing": "( ( ( ( ( Min( RMSe ,MLU ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Min( ( RMSe - ( CS * MUC ) ) ,MLU ) ) ) / Max( RMSe,DS ) ) + Min( ( CS + RCSe ) ,( RMSe + MUC ) ) ) - ( ( ( RRSe / MLU ) * Max( MLU,CS ) ) / ( ( DS / DS ) + ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / Min( CRS ,Const ) ) ,( Const - ARS ) )", "choosing": "( MUR + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Const * MRS ) )", "choosing": "Max( Max( Min( ( ( Min( MLU ,RRSe ) - RCSe ) - MUR ) ,Min( MUM ,( MUM - CS ) ) ),RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_CPU + Min( FirstVNF_CPU_Server ,PN ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( ( ACS * Min( FirstVNF_RAM_Server ,Const ) ),MDR ) )", "choosing": "( Min( DS ,( ( ( CS + RMSe ) - ( MLU * CS ) ) + Min( RRSe ,RCSe ) ) ) / ( MUR - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( AMS / RRS ) ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - Max( ( ( RCSe - ( CS * Min( ( CS - RRSe ) ,MLU ) ) ) + CS ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Const * MRS ) )", "choosing": "Max( Max( Min( ( ( Min( MLU ,RRSe ) - RCSe ) - MUR ) ,Min( MUM ,( MUM - CS ) ) ),RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( ( ( RRSe - ( RCSe + RCSe ) ) - ( MUM + RRSe ) ) ,MLU ),( RMSe / MUC ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - Min( ( CRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,( RRS / ACS ) ) ) ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUC ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Max( ( PN + BR ),( MRS / Min( CRS ,MRS ) ) ) / ( BR / RRS ) ) )", "choosing": "Max( ( Max( Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / MLU ) ),( MUM / MUR ) ),MUM ) * ( RCSe * RRSe ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,MDR ) - Max( ( ( MRS - Const ) * MRS ),Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( CS / CS ) ) ,MLU ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - DDR ) ,( DDR * MRS ) ) - Max( ( ( Const + Const ) * MRS ),ARS ) )", "choosing": "( Min( ( CS + MLU ) ,( MUC + MUM ) ) / ( Min( ( MUC + CS ) ,Min( ( MUR / MUR ) ,( ( ( RMSe + DS ) * RCSe ) * MUR ) ) ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem ) / MRS )", "choosing": "Min( ( MUR / RRSe ) ,( MUC * Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS * MRS ) ,( ( PN / FirstVNF_Mem ) / Min( Max( ( CRS * CRS ),( ( Min( MRS ,BR ) * FirstVNF_CPU_Server ) + ARS ) ) ,MRS ) ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + ( MUC + CS ) ) / Max( ( MLU * MUR ),( RMSe - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,RRS ) - ( Max( ( ( FirstVNF_CPU_Server + DDR ) / Min( MRS ,AMS ) ),FirstVNF_CPU ) * Const ) )", "choosing": "( ( MUM - Min( ( ( RRSe - ( RCSe + RCSe ) ) - ( MUM + RRSe ) ) ,MLU ) ) - Max( Min( MUM ,( Max( ( MLU - Min( RCSe ,Min( RCSe ,DS ) ) ),RRSe ) + CS ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( MDR,BR ) + Max( DDR,BR ) ) / Min( RRS ,MDR ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / CRS ) ) ,( FirstVNF_RAM * Min( FirstVNF_RAM_Server ,Min( ( DDR * BR ) ,( PN - ( FirstVNF_RAM_Server - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - Max( ( RRSe + CS ),( MUR + DS ) ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + ( MUC / RCSe ) ) ,RMSe ) ,( ( MUR / RRSe ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / CRS ) ) ,( Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_RAM ) ) * Min( FirstVNF_CPU ,( ( RRS + ( RRS * Max( ACS,MRS ) ) ) + Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( ( RCSe * ( ( Max( Max( MLU,RMSe ),MUM ) * MLU ) + RCSe ) ) * MUR ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( MRS * Min( Max( FirstVNF_RAM_Server,( RRS / ( ( ( DDR + ACS ) / FirstVNF_RAM ) - ARS ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( MLU * MUM ) + ( MUC / RCSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) / Max( PN,MDR ) ) * ( MDR * DDR ) )", "choosing": "Max( ( MLU * ( Min( Max( RRSe,( ( ( RRSe / MUC ) - Max( RRSe,DS ) ) + RCSe ) ) ,( Min( ( MUR * MUM ) ,RRSe ) / MUC ) ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,CRS ) ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( DS * Min( Min( DS ,( MUC + DS ) ) ,( CS - DS ) ) ) - ( ( RCSe + MLU ) * RCSe ) ) - Min( DS ,MUC ) )", "obj1": 0.07063197026022305, "obj2": 0.8878210580210939}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) )", "obj1": 0.483271375464684, "obj2": 0.3779238470063349}, {"determining": "Min( ( ( ARS * Const ) / PN ) ,( PN + FirstVNF_CPU ) )", "choosing": "Max( ( MUC / CS ),Min( Max( ( ( ( Max( MLU,DS ) / ( RCSe + MUC ) ) * CS ) / ( MUC - ( ( MUM * ( MUC - MUC ) ) / RMSe ) ) ),RMSe ) ,RMSe ) )", "obj1": 0.7044609665427509, "obj2": 0.22856996514783987}, {"determining": "( ( ( Min( Min( PN ,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * Min( Const ,ACS ) ) )", "choosing": "( ( RMSe * ( ( Max( Min( MLU ,( CS + RCSe ) ),RCSe ) / DS ) * ( MUC - MLU ) ) ) * ( RMSe - MUM ) )", "obj1": 0.6319702602230484, "obj2": 0.3203912666156116}, {"determining": "( ( PN + BR ) - ( ARS * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUR * MUC ) / ( ( MLU * Min( MLU ,MUR ) ) - DS ) )", "obj1": 0.7713754646840149, "obj2": 0.10719246075060176}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Max( ( MRS / Min( MRS ,( PN - ( ( ( ARS * Const ) / PN ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - ( ( RRSe - MLU ) * DS ) ),Min( RCSe ,( RCSe + MUR ) ) ) + Max( ( MUC / CS ),( RRSe / MUR ) ) )", "obj1": 0.9163568773234201, "obj2": 0.07785899683943881}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.14869888475836432, "obj2": 0.702789572836885}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( FirstVNF_RAM - Const ) / ( ( BR + BR ) * MRS ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( ( ( MUC * MUM ) - MUR ) / DS ),( ( ( RRSe / MUR ) * Max( CS,CS ) ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( CS,MUM ) )", "obj1": 0.1171003717472119, "obj2": 0.7734984913023848}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( ( ( Max( AMS,DDR ) + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / ( MUM / ( RRSe + CS ) ) ),RMSe ) * Min( MUM ,MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.2774311029917044}, {"determining": "( ( ( ( ACS - FirstVNF_RAM_Server ) - ARS ) + MDR ) - ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( ( DS - ( Min( ( CS + MUR ) ,( MUC + MUM ) ) / ( ( RRSe - Max( CS,DS ) ) - Min( Min( Min( MUM ,RCSe ) ,MUM ) ,( Min( CS ,MUC ) / Max( RRSe,MUC ) ) ) ) ) ) - ( MUC / MUM ) ) * Min( ( MUM + MUM ) ,RRSe ) )", "obj1": 0.9925650557620818, "obj2": 0.009689642896753668}, {"determining": "Max( Min( ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM_Server ),MRS ) - ( FirstVNF_Mem_Server * AMS ) ) ,FirstVNF_CPU_Server ),ARS )", "choosing": "( ( MUR - RRSe ) + ( Max( Min( MUM ,DS ),MUC ) + ( DS * MUR ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - ( Max( ( PN + BR ),( MRS / Min( CRS ,MRS ) ) ) / ( BR / RRS ) ) ) ) - Min( ( Const + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - ( RRS - ACS ) ) ) )", "choosing": "( Min( ( CS + MLU ) ,Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / MLU ) ),( MUM / MUR ) ) ) / ( ( RMSe * ( MUC * Max( CS,CS ) ) ) + ( MUC + CS ) ) )", "obj1": 0.637546468401487, "obj2": 0.3000292484527416}, {"determining": "( ( ( ( AMS / ACS ) + ( FirstVNF_RAM / ( BR * Const ) ) ) * Min( ARS ,FirstVNF_CPU_Server ) ) - ( Const * FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUC,( ( RMSe * ( Max( Max( MUM,RMSe ),RRSe ) * ( MUC - MLU ) ) ) * Min( DS ,MLU ) ) ) ) / ( Min( MUR ,CS ) + ( CS / MLU ) ) )", "obj1": 0.2825278810408922, "obj2": 0.5673423613795098}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( DDR + ( FirstVNF_Mem_Server / ( PN + FirstVNF_RAM_Server ) ) ) ) ,( ACS * ( ( PN / MRS ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( Max( Max( ( RRSe / ( MLU * ( MUR * MUR ) ) ),RCSe ),MUC ) ,( Max( MLU,DS ) / Max( ( MLU - MUR ),MUR ) ) ) ) / ( MUC + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.2958134086916686}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( ( ( Max( DS,Min( MLU ,MUC ) ) + RRSe ) / MUC ) + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.6777951512545415}, {"determining": "Min( ( FirstVNF_Mem_Server * ARS ) ,( ( ( Max( CRS,( ACS * FirstVNF_RAM ) ) / ARS ) - Const ) + ( RRS * Const ) ) )", "choosing": "( Max( ( ( DS * ( ( ( DS - DS ) - ( ( CS / MUC ) / ( DS - MUM ) ) ) * RMSe ) ) + DS ),MUR ) - Max( CS,CS ) )", "obj1": 0.9349442379182156, "obj2": 0.051256738453767756}, {"determining": "( ( Min( ( BR + FirstVNF_Mem ) ,ARS ) + Const ) / ( ACS + CRS ) )", "choosing": "( ( DS + ( ( Min( DS ,MUR ) - ( ( RCSe / MUM ) / CS ) ) / MLU ) ) - ( CS * MUC ) )", "obj1": 0.33271375464684017, "obj2": 0.5334253149354363}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / MLU ),RMSe ) * Min( ( DS + MUM ) ,( MLU / MLU ) ) )", "obj1": 0.6728624535315985, "obj2": 0.2844310734492158}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.17100371747211895, "obj2": 0.6990456039525635}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Min( FirstVNF_CPU ,AMS ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( RMSe / RCSe ) - Min( MUM ,Max( RCSe,( ( MUM - CS ) * RCSe ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "Max( Max( ( ( BR / CRS ) - FirstVNF_RAM_Server ),Max( ACS,ACS ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Max( MLU,CS ) - ( CS + ( MUM - ( MLU + RMSe ) ) ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.19144981412639406, "obj2": 0.6570535107236832}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( ( ( Max( DS,Min( MLU ,MUC ) ) + RRSe ) / MUC ) + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6468720503503148}, {"determining": "Min( ( Min( ARS ,AMS ) * Min( FirstVNF_RAM_Server ,Min( MRS ,( PN - ( Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),( DS / Max( ( RRSe + ( MUR * RRSe ) ),( ( ( Max( ( CS / RCSe ),Min( MUC ,MUM ) ) / RCSe ) * RCSe ) - MLU ) ) ) )", "obj1": 0.2992565055762082, "obj2": 0.554668981597504}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * ( Max( Const,Max( RRS,CRS ) ) * ( Const * FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( Min( Min( DS ,( MUC + DS ) ) ,( CS - DS ) ) * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.17472118959107807, "obj2": 0.6895595700282275}, {"determining": "Min( ( ( ( CRS * FirstVNF_RAM ) * Const ) / PN ) ,( PN / BR ) )", "choosing": "Max( ( ( MUR + RMSe ) - MLU ),( RRSe / MUR ) )", "obj1": 0.30855018587360594, "obj2": 0.5470714823242387}, {"determining": "( ( Max( Min( PN ,Const ),( FirstVNF_RAM_Server - MRS ) ) * ( ( FirstVNF_RAM / RRS ) * ( CRS * AMS ) ) ) / ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ) )", "choosing": "Min( ( ( Max( RRSe,MUM ) / ( RCSe * RMSe ) ) / ( ( RRSe / MUC ) + Min( MLU ,CS ) ) ) ,( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) )", "obj1": 0.10037174721189591, "obj2": 0.803389483780645}, {"determining": "( Max( ( MRS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - ( ( RRSe - MLU ) * DS ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.9275092936802974, "obj2": 0.06484113399457991}, {"determining": "( ( MDR + Min( ( Const * FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Min( ( RRSe + MUR ) ,MUM ) * Max( RMSe,MUC ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( Max( RRSe,MLU ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7991970647160932}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( ( ( ( ACS + RRS ) - ( ( FirstVNF_RAM + PN ) * BR ) ) + AMS ) * MDR ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Min( RRSe ,Max( DS,( RMSe / CS ) ) ) / ( MLU / ( RMSe + RCSe ) ) ) ,MUM ) ) ) - ( MUC + MUR ) )", "obj1": 0.21189591078066913, "obj2": 0.6397690670274563}, {"determining": "( ( MDR + Min( ( Const * FirstVNF_CPU_Server ) ,Max( MRS,FirstVNF_Mem_Server ) ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Min( ( RRSe + MUR ) ,MUM ) * Max( RMSe,MUC ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( Max( RRSe,MLU ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.08736059479553904, "obj2": 0.8082220323462147}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7810633432468673}, {"determining": "Max( Max( MDR,( AMS / FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) )", "choosing": "( ( Min( ( MLU - DS ) ,MUR ) / Max( CS,MUR ) ) - ( MUC + MUR ) )", "obj1": 0.19144981412639406, "obj2": 0.6570535107236832}, {"determining": "( ( ( DDR / ARS ) - Const ) + ( RRS * Const ) )", "choosing": "( ( MUC / RCSe ) * ( RMSe + DS ) )", "obj1": 0.9200743494423792, "obj2": 0.07356395024472705}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5980317608011204}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / RRS ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RCSe - Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) ) ),CS ) )", "obj1": 0.30111524163568776, "obj2": 0.5532604620688912}, {"determining": "( Max( ( Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - ( MDR + MDR ) ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) / Max( Const,Min( ACS ,FirstVNF_Mem ) ) ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( ( ( Max( MUM,RCSe ) - ( DS * RMSe ) ) * Min( MUM ,MUC ) ) - MUC ),DS ) - ( ( RRSe - MLU ) * DS ) ),Min( RCSe ,( MUC + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.9256505576208178, "obj2": 0.06650587183701251}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 0.11338289962825279, "obj2": 0.7810633432468673}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + Max( ( MRS / FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( ( FirstVNF_RAM * Min( ( DDR + FirstVNF_RAM_Server ) ,( Min( ARS ,FirstVNF_Mem_Server ) * MDR ) ) ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + RMSe ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( MUM - RCSe ) )", "obj1": 0.2100371747211896, "obj2": 0.6418914481335763}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( MDR + Max( ( ARS / Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) ),FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Min( ( MUR + MUR ) ,MUM ) * Max( RMSe,MUC ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.10594795539033457, "obj2": 0.7991970647160932}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ( PN / BR ) ) ) ) ) ,( ( ACS / ( Const - CRS ) ) / ( ( ( FirstVNF_Mem * ARS ) - CRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / ( Max( DS,MUR ) + CS ) ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) - ( RRSe + ( MUR - ( ( RRSe + ( CS / MUR ) ) + ( CS / RCSe ) ) ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5980317608011204}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( ( BR - MRS ) - ( Min( ( FirstVNF_Mem_Server + DDR ) ,Max( ARS,ACS ) ) + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( CS - ( RCSe * ( DS - MUM ) ) ) * MUM ) - MUR ) ,Max( RMSe,MUR ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Const,Max( DDR,CRS ) ) + RRS ) * BR ) * ( MDR * DDR ) )", "choosing": "Max( ( ( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) * ( ( MUM * MLU ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MDR ) - ( ( FirstVNF_RAM + PN ) * BR ) )", "choosing": "Max( ( RMSe + RCSe ),Max( MUC,( Min( RRSe ,MUR ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) )", "choosing": "Max( ( RRSe + CS ),( ( MUC / RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,Min( MDR ,( ( Const + MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) / ( ( CS + RMSe ) * ( CS + RRSe ) ) ) * ( Max( MUC,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( ( RRS - RRS ) / ACS ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( RMSe,( MUC + ( RCSe + ( ( MUR + RCSe ) + MUM ) ) ) ) / ( CS + ( ( ( MUC + MUM ) + Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - ( Max( DS,( RCSe + ( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) - ( RRSe - RCSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( Max( FirstVNF_CPU,AMS ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( Const,MRS ) ) ) )", "choosing": "( ( ( Max( ( RCSe - CS ),RRSe ) * ( MUC / RMSe ) ) + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( ( Min( Min( MUC ,MUR ) ,MUM ) / CS ) + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( DDR - FirstVNF_CPU_Server ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( Max( RMSe,( ( Min( RCSe ,MUM ) / ( ( RRSe / MUC ) + Min( RRSe ,MUC ) ) ) * ( MUM * ( ( CS * RRSe ) / ( RMSe - RCSe ) ) ) ) ) + ( Max( MLU,RCSe ) + RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( Const * FirstVNF_CPU ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( Max( MRS,BR ) / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - ( MLU - Max( Max( DS,MLU ),( Min( RRSe ,DS ) - ( MLU / MUM ) ) ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( Const + MDR ) ) * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,Max( Min( PN ,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( ( CRS - DDR ) / ( CRS + ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( Max( RCSe,CS ) * ( ( ( MLU * CS ) * ( RRSe * DS ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( FirstVNF_RAM + RRS ) ) ,( ( FirstVNF_Mem_Server / Max( Min( DDR ,MDR ),Max( BR,Min( FirstVNF_RAM_Server ,ACS ) ) ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),( MUR + CS ) ) ) * ( ( MUC * RCSe ) + RRSe ) ) ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,DS ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( ( RRS * ( FirstVNF_RAM - MRS ) ) + PN ) / ( ARS - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM + ACS ) - ARS ) ) / BR ) ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( ( RMSe * ( Max( MUM,RRSe ) * ( MUC - MLU ) ) ) * Min( MUM ,DS ) ) ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - Min( ( RRS * ( ( FirstVNF_RAM_Server / AMS ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) - MRS ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ),( ( Min( ( ( Max( ( DS + MUC ),MUM ) - ( MLU / MLU ) ) + Max( RRSe,RRSe ) ) ,MUR ) + MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Max( ( Min( PN ,FirstVNF_Mem ) * MRS ),Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ,( PN - RRS ) ) ) )", "choosing": "( ( DS + Min( MUC ,MUM ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( Min( FirstVNF_CPU ,RRS ) + ( Max( Min( BR ,FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( ( MLU / ( ( Min( RRSe ,Min( MLU ,DS ) ) / ( ( MUC / MLU ) + RMSe ) ) - MUR ) ),Max( CS,( MUC / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) * DDR ) / Max( ( ( AMS / ( FirstVNF_Mem / MRS ) ) + FirstVNF_CPU_Server ),CRS ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( DS * Max( MUC,( ( RMSe * MUR ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + Max( Max( Min( MRS ,CRS ),ARS ),FirstVNF_RAM_Server ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( RMSe - ( Min( Max( MUR,Max( Max( MUM,DS ),RMSe ) ) ,MUM ) - ( MLU / ( MUC - RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( PN / Max( RRS,( FirstVNF_Mem / MRS ) ) ) ) / ( DDR / RRS ) )", "choosing": "Min( ( Min( ( MUM - Min( MUM ,Min( Min( CS ,Max( MUC,CS ) ) ,Max( RMSe,( MUC + MUR ) ) ) ) ) ,MUC ) / MUR ) ,( MUC * Min( ( MUC + ( ( ( ( RMSe + RRSe ) - RMSe ) / Max( DS,RMSe ) ) * Max( MLU,RMSe ) ) ) ,( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( BR ,ARS ) - FirstVNF_RAM_Server ) ,( BR / AMS ) ) ,( MRS + FirstVNF_CPU ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( ( CS - MUC ) / ( Max( MUR,MUR ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / ARS ) / ( MDR * Const ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - ( ( RCSe - ( MUC / MUC ) ) - ( MLU + ( CS / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,RRS )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,( ( MLU / DS ) * Max( MUC,RCSe ) ) ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem_Server ) ,( Const - Max( PN,PN ) ) )", "choosing": "( Max( ( ( MUM / RCSe ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) ),MUR ) / ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) / MDR ) ,FirstVNF_Mem ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( MUC * RCSe ) - ( MUR * Min( ( RRSe / ( ( ( MUM * MLU ) + ( DS / MUR ) ) / RMSe ) ) ,MUC ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( CRS / BR ) ) - Const ) + ( RRS * ( Min( FirstVNF_CPU ,MDR ) / ( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem + Const ) ,Max( ( CRS * CRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( ( CRS + AMS ) / MRS ) ) / Min( ( DDR / RRS ) ,Min( FirstVNF_Mem ,AMS ) ) ) )", "choosing": "( ( ( ( ( Min( RMSe ,MLU ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Min( ( RMSe - ( CS * MUC ) ) ,MLU ) ) ) / Max( RMSe,DS ) ) + Min( ( CS + RCSe ) ,( RMSe + MUC ) ) ) - ( ( ( RRSe / MLU ) * Max( MLU,CS ) ) / ( ( DS / DS ) + ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / Min( CRS ,Const ) ) ,( Const - ARS ) )", "choosing": "( MUR + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Const * MRS ) )", "choosing": "Max( Max( Min( ( ( Min( MLU ,RRSe ) - RCSe ) - MUR ) ,Min( MUM ,( MUM - CS ) ) ),RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_CPU + Min( FirstVNF_CPU_Server ,PN ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( ( ACS * Min( FirstVNF_RAM_Server ,Const ) ),MDR ) )", "choosing": "( Min( DS ,( ( ( CS + RMSe ) - ( MLU * CS ) ) + Min( RRSe ,RCSe ) ) ) / ( MUR - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( AMS / RRS ) ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - Max( ( ( RCSe - ( CS * Min( ( CS - RRSe ) ,MLU ) ) ) + CS ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Const * MRS ) )", "choosing": "Max( Max( Min( ( ( Min( MLU ,RRSe ) - RCSe ) - MUR ) ,Min( MUM ,( MUM - CS ) ) ),RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( ( ( RRSe - ( RCSe + RCSe ) ) - ( MUM + RRSe ) ) ,MLU ),( RMSe / MUC ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - Min( ( CRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,( RRS / ACS ) ) ) ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUC ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Max( ( PN + BR ),( MRS / Min( CRS ,MRS ) ) ) / ( BR / RRS ) ) )", "choosing": "Max( ( Max( Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / MLU ) ),( MUM / MUR ) ),MUM ) * ( RCSe * RRSe ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( ( RRS - DDR ) ,( Max( ( PN + BR ),( MRS / Min( CRS ,( BR + BR ) ) ) ) / ( BR / RRS ) ) )", "choosing": "Max( ( Max( Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ),( MUM / MUR ) ),MUM ) * ( RCSe * RRSe ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( MRS * Min( Max( FirstVNF_RAM_Server,( RRS / ( ( ( DDR + ACS ) / FirstVNF_RAM ) - ARS ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( MLU * MUM ) + ( MUC / RCSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,CRS ) ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( DS * Min( Min( DS ,( MUC + DS ) ) ,( CS - DS ) ) ) - ( ( RCSe + MLU ) * RCSe ) ) - Min( DS ,MUC ) )", "obj1": 0.07063197026022305, "obj2": 0.8878210580210939}, {"determining": "Min( ( ( ARS * Const ) / PN ) ,( PN + FirstVNF_CPU ) )", "choosing": "Max( ( MUC / CS ),Min( Max( ( ( ( Max( MLU,DS ) / ( RCSe + MUC ) ) * CS ) / ( MUC - ( ( MUM * ( MUC - MUC ) ) / RMSe ) ) ),RMSe ) ,RMSe ) )", "obj1": 0.7044609665427509, "obj2": 0.22856996514783987}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) )", "obj1": 0.483271375464684, "obj2": 0.3779238470063349}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "Min( ( ( ARS * Const ) / PN ) ,( PN / Min( Max( ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ),PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) ),( RRSe / MUR ) )", "obj1": 0.5836431226765799, "obj2": 0.34700795846361693}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.14869888475836432, "obj2": 0.702789572836885}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Max( ( MRS / Min( MRS ,( PN - ( ( ( ARS * Const ) / PN ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - ( ( RRSe - MLU ) * DS ) ),Min( RCSe ,( RCSe + MUR ) ) ) + Max( ( MUC / CS ),( RRSe / MUR ) ) )", "obj1": 0.9163568773234201, "obj2": 0.07785899683943881}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( FirstVNF_Mem * ACS ) ,FirstVNF_CPU_Server ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / DS ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RCSe + ( Min( MUR ,CS ) * ( RCSe - MUR ) ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( ( ( Max( AMS,DDR ) + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / ( MUM / ( RRSe + CS ) ) ),RMSe ) * Min( MUM ,MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.2774311029917044}, {"determining": "Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ,( ( ( BR + Max( Const,Max( RRS,CRS ) ) ) / ( AMS * Const ) ) / ( Min( RRS ,MDR ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * BR ) ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( MUC + ( Max( RMSe,( MUC + RRSe ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 0.9795539033457249, "obj2": 0.021033503833462884}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "( Max( ( Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - ( ( RRSe - CS ) * DS ) ),Min( RCSe ,( MUC + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.4070631970260223, "obj2": 0.4614408471826314}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "Max( Min( ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM_Server ),MRS ) - ( FirstVNF_Mem_Server * AMS ) ) ,FirstVNF_CPU_Server ),ARS )", "choosing": "( ( MUR - RRSe ) + ( Max( Min( MUM ,DS ),MUC ) + ( DS * MUR ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) / Max( Const,Min( ACS ,FirstVNF_Mem ) ) ) ),( ( ARS / FirstVNF_Mem ) - Max( PN,CRS ) ) ) ,( ( ( BR + Max( Const,Max( RRS,CRS ) ) ) / ( AMS * Const ) ) / ( Min( RRS ,MDR ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * BR ) ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / Max( ( Max( ( ( ( Max( MUM,RCSe ) - DS ) * Min( MUM ,MUC ) ) - MUC ),DS ) - ( ( RRSe - MLU ) * DS ) ),Min( RCSe ,( MUC + MUR ) ) ) )", "obj1": 0.604089219330855, "obj2": 0.33548195286653054}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * ( Min( ( PN + DDR ) ,( PN - PN ) ) * ( Const * FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,( ( MLU / MUC ) - Max( MUC,CS ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( Min( Min( DS ,( MUC + DS ) ) ,( CS - DS ) ) * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6834420655271597}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - ( Max( ( PN + BR ),( MRS / Min( CRS ,MRS ) ) ) / ( BR / RRS ) ) ) ) - Min( ( Const + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - ( RRS - ACS ) ) ) )", "choosing": "( Min( ( CS + MLU ) ,Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / MLU ) ),( MUM / MUR ) ) ) / ( ( RMSe * ( MUC * Max( CS,CS ) ) ) + ( MUC + CS ) ) )", "obj1": 0.637546468401487, "obj2": 0.3000292484527416}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( DDR + ( FirstVNF_Mem_Server / ( PN + FirstVNF_RAM_Server ) ) ) ) ,( ACS * ( ( PN / MRS ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( Max( Max( ( RRSe / ( MLU * ( MUR * MUR ) ) ),RCSe ),MUC ) ,( Max( MLU,DS ) / Max( ( MLU - MUR ),MUR ) ) ) ) / ( MUC + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.2958134086916686}, {"determining": "Min( ( FirstVNF_Mem_Server * ARS ) ,( ( ( Max( CRS,( ACS * FirstVNF_RAM ) ) / ARS ) - Const ) + ( RRS * Const ) ) )", "choosing": "( Max( ( ( DS * ( ( ( DS - DS ) - ( ( CS / MUC ) / ( DS - MUM ) ) ) * RMSe ) ) + DS ),MUR ) - Max( CS,CS ) )", "obj1": 0.9349442379182156, "obj2": 0.051256738453767756}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( ( ( Max( DS,Min( MLU ,MUC ) ) + RRSe ) / MUC ) + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.6777951512545415}, {"determining": "( ( Min( ( BR + FirstVNF_Mem ) ,ARS ) + Const ) / ( ACS + CRS ) )", "choosing": "( ( DS + ( ( Min( DS ,MUR ) - ( ( RCSe / MUM ) / CS ) ) / MLU ) ) - ( CS * MUC ) )", "obj1": 0.33271375464684017, "obj2": 0.5334253149354363}, {"determining": "( ( ( PN + FirstVNF_RAM ) + ( Min( ( ( ARS * Const ) / PN ) ,( PN / Min( Max( FirstVNF_RAM,PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / Max( ( MUC / CS ),( RRSe / MUR ) ) ),RMSe ) * Min( MUM ,MUM ) )", "obj1": 0.6263940520446096, "obj2": 0.32985522278425145}, {"determining": "( ( ( Min( Min( PN ,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * Min( Const ,ACS ) ) )", "choosing": "( ( RMSe * ( ( Max( Min( MLU ,( CS + RCSe ) ),RCSe ) / DS ) * ( MUC - MLU ) ) ) * ( RMSe - MUM ) )", "obj1": 0.6319702602230484, "obj2": 0.3203912666156116}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / MLU ),RMSe ) * Min( ( DS + MUM ) ,( MLU / MLU ) ) )", "obj1": 0.6728624535315985, "obj2": 0.2844310734492158}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "Max( Max( MDR,( AMS / FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) )", "choosing": "( ( Min( ( MLU - DS ) ,MUR ) / Max( CS,MUR ) ) - ( MUC + MUR ) )", "obj1": 0.19144981412639406, "obj2": 0.6570535107236832}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Min( FirstVNF_CPU ,AMS ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( RMSe / RCSe ) - Min( MUM ,Max( RCSe,( ( MUM - CS ) * RCSe ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( ( ( Max( DS,Min( MLU ,MUC ) ) + RRSe ) / MUC ) + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6468720503503148}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( ( ( ( AMS / ACS ) + ( FirstVNF_RAM / ( BR * Const ) ) ) * Min( ARS ,FirstVNF_CPU_Server ) ) - ( Const * FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUC,( ( RMSe * ( Max( Max( MUM,RMSe ),RRSe ) * ( MUC - MLU ) ) ) * Min( DS ,MLU ) ) ) ) / ( Min( MUR ,CS ) + ( CS / MLU ) ) )", "obj1": 0.2825278810408922, "obj2": 0.5673423613795098}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,( DDR / ( PN + BR ) ) ) * Min( FirstVNF_RAM_Server ,Min( MRS ,( PN - ( Min( CRS ,Min( DDR ,PN ) ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),( DS / Max( ( MUR / DS ),( ( ( MLU * Min( MLU ,MUR ) ) - DS ) - MLU ) ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5664329050873563}, {"determining": "( Max( ( MRS / FirstVNF_RAM_Server ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - ( ( RRSe - MLU ) * DS ) ),Min( RCSe ,( RCSe + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.9275092936802974, "obj2": 0.06484113399457991}, {"determining": "Min( ( Min( ARS ,AMS ) * Min( FirstVNF_RAM_Server ,Min( MRS ,( PN - ( Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),( DS / Max( ( RRSe + ( MUR * RRSe ) ),( ( ( Max( ( CS / RCSe ),Min( MUC ,MUM ) ) / RCSe ) * RCSe ) - MLU ) ) ) )", "obj1": 0.2992565055762082, "obj2": 0.554668981597504}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( ( ( ( ACS + RRS ) - ( ( FirstVNF_RAM + PN ) * BR ) ) + AMS ) * MDR ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Min( RRSe ,Max( DS,( RMSe / CS ) ) ) / ( MLU / ( RMSe + RCSe ) ) ) ,MUM ) ) ) - ( MUC + MUR ) )", "obj1": 0.21189591078066913, "obj2": 0.6397690670274563}, {"determining": "Max( Max( ( ( BR / CRS ) - FirstVNF_RAM_Server ),Max( ACS,ACS ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Max( MLU,CS ) - ( CS + ( MUM - ( MLU + RMSe ) ) ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.19144981412639406, "obj2": 0.6570535107236832}, {"determining": "( Max( ( MRS / Min( MRS ,( ( PN - ( ( BR + FirstVNF_CPU_Server ) * MDR ) ) - ( ( ( ARS * Const ) / PN ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( RRSe - MLU ) * DS ) ),Min( RCSe ,( RCSe + MUR ) ) ) + Max( ( MUC / CS ),( RRSe / MUR ) ) )", "obj1": 0.9200743494423792, "obj2": 0.07189140680306318}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5980317608011204}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / RRS ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RCSe - Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) ) ),CS ) )", "obj1": 0.30111524163568776, "obj2": 0.5532604620688912}, {"determining": "Min( ( ( ( CRS * FirstVNF_RAM ) * Const ) / PN ) ,( PN / BR ) )", "choosing": "Max( ( ( MUR + RMSe ) - MLU ),( RRSe / MUR ) )", "obj1": 0.30855018587360594, "obj2": 0.5470714823242387}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RCSe - Min( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) ,( Min( ( MUR * MUM ) ,RRSe ) / MUC ) ) ) ),CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5463826788572619}, {"determining": "( Max( ( Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - ( MDR + MDR ) ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) / Max( Const,Min( ACS ,FirstVNF_Mem ) ) ),FirstVNF_CPU ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( ( ( Max( MUM,RCSe ) - ( DS * RMSe ) ) * Min( MUM ,MUC ) ) - MUC ),DS ) - ( ( RRSe - MLU ) * DS ) ),Min( RCSe ,( MUC + MUR ) ) ) + ( DS - CS ) )", "obj1": 0.9256505576208178, "obj2": 0.06650587183701251}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + Max( ( MRS / FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( ( FirstVNF_RAM * Min( ( DDR + FirstVNF_RAM_Server ) ,( Min( ARS ,FirstVNF_Mem_Server ) * MDR ) ) ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + RMSe ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( MUM - RCSe ) )", "obj1": 0.2100371747211896, "obj2": 0.6418914481335763}, {"determining": "Max( Min( ARS ,( DDR * ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - CRS ) ) ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( CS * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ( PN / BR ) ) ) ) ) ,( ( ACS / ( Const - CRS ) ) / ( ( ( FirstVNF_Mem * ARS ) - CRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / ( Max( DS,MUR ) + CS ) ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) - ( RRSe + ( MUR - ( ( RRSe + ( CS / MUR ) ) + ( CS / RCSe ) ) ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5980317608011204}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( ARS / FirstVNF_Mem_Server ) / CRS ) ) ,Max( ARS,ACS ) ) + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * ( DS / RMSe ) ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,MUR ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) / Max( PN,MDR ) ) * ( MDR * DDR ) )", "choosing": "Max( ( MLU * ( Min( Max( RRSe,( ( ( RRSe / MUC ) - Max( RRSe,DS ) ) + RCSe ) ) ,( Min( ( MUR * MUM ) ,RRSe ) / MUC ) ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Const,Max( DDR,CRS ) ) + RRS ) * BR ) * ( MDR * DDR ) )", "choosing": "Max( ( ( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) * ( ( MUM * MLU ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MDR ) - ( ( FirstVNF_RAM + PN ) * BR ) )", "choosing": "Max( ( RMSe + RCSe ),Max( MUC,( Min( RRSe ,MUR ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) )", "choosing": "Max( ( RRSe + CS ),( ( MUC / RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,Min( MDR ,( ( Const + MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) / ( ( CS + RMSe ) * ( CS + RRSe ) ) ) * ( Max( MUC,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( ( RRS - RRS ) / ACS ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( RMSe,( MUC + ( RCSe + ( ( MUR + RCSe ) + MUM ) ) ) ) / ( CS + ( ( ( MUC + MUM ) + Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - ( Max( DS,( RCSe + ( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) - ( RRSe - RCSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( Max( FirstVNF_CPU,AMS ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( Const,MRS ) ) ) )", "choosing": "( ( ( Max( ( RCSe - CS ),RRSe ) * ( MUC / RMSe ) ) + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( ( Min( Min( MUC ,MUR ) ,MUM ) / CS ) + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( DDR - FirstVNF_CPU_Server ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( Max( RMSe,( ( Min( RCSe ,MUM ) / ( ( RRSe / MUC ) + Min( RRSe ,MUC ) ) ) * ( MUM * ( ( CS * RRSe ) / ( RMSe - RCSe ) ) ) ) ) + ( Max( MLU,RCSe ) + RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( Const * FirstVNF_CPU ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( Max( MRS,BR ) / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - ( MLU - Max( Max( DS,MLU ),( Min( RRSe ,DS ) - ( MLU / MUM ) ) ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( Const + MDR ) ) * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,Max( Min( PN ,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( ( CRS - DDR ) / ( CRS + ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( Max( RCSe,CS ) * ( ( ( MLU * CS ) * ( RRSe * DS ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( FirstVNF_RAM + RRS ) ) ,( ( FirstVNF_Mem_Server / Max( Min( DDR ,MDR ),Max( BR,Min( FirstVNF_RAM_Server ,ACS ) ) ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),( MUR + CS ) ) ) * ( ( MUC * RCSe ) + RRSe ) ) ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,DS ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( ( RRS * ( FirstVNF_RAM - MRS ) ) + PN ) / ( ARS - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM + ACS ) - ARS ) ) / BR ) ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( ( RMSe * ( Max( MUM,RRSe ) * ( MUC - MLU ) ) ) * Min( MUM ,DS ) ) ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - Min( ( RRS * ( ( FirstVNF_RAM_Server / AMS ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) - MRS ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ),( ( Min( ( ( Max( ( DS + MUC ),MUM ) - ( MLU / MLU ) ) + Max( RRSe,RRSe ) ) ,MUR ) + MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Max( ( Min( PN ,FirstVNF_Mem ) * MRS ),Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ,( PN - RRS ) ) ) )", "choosing": "( ( DS + Min( MUC ,MUM ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( Min( FirstVNF_CPU ,RRS ) + ( Max( Min( BR ,FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( ( MLU / ( ( Min( RRSe ,Min( MLU ,DS ) ) / ( ( MUC / MLU ) + RMSe ) ) - MUR ) ),Max( CS,( MUC / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) * DDR ) / Max( ( ( AMS / ( FirstVNF_Mem / MRS ) ) + FirstVNF_CPU_Server ),CRS ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( DS * Max( MUC,( ( RMSe * MUR ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + Max( Max( Min( MRS ,CRS ),ARS ),FirstVNF_RAM_Server ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( RMSe - ( Min( Max( MUR,Max( Max( MUM,DS ),RMSe ) ) ,MUM ) - ( MLU / ( MUC - RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( PN / Max( RRS,( FirstVNF_Mem / MRS ) ) ) ) / ( DDR / RRS ) )", "choosing": "Min( ( Min( ( MUM - Min( MUM ,Min( Min( CS ,Max( MUC,CS ) ) ,Max( RMSe,( MUC + MUR ) ) ) ) ) ,MUC ) / MUR ) ,( MUC * Min( ( MUC + ( ( ( ( RMSe + RRSe ) - RMSe ) / Max( DS,RMSe ) ) * Max( MLU,RMSe ) ) ) ,( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( BR ,ARS ) - FirstVNF_RAM_Server ) ,( BR / AMS ) ) ,( MRS + FirstVNF_CPU ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( ( CS - MUC ) / ( Max( MUR,MUR ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / ARS ) / ( MDR * Const ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - ( ( RCSe - ( MUC / MUC ) ) - ( MLU + ( CS / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,RRS )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,( ( MLU / DS ) * Max( MUC,RCSe ) ) ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem_Server ) ,( Const - Max( PN,PN ) ) )", "choosing": "( Max( ( ( MUM / RCSe ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) ),MUR ) / ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) / MDR ) ,FirstVNF_Mem ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( MUC * RCSe ) - ( MUR * Min( ( RRSe / ( ( ( MUM * MLU ) + ( DS / MUR ) ) / RMSe ) ) ,MUC ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( CRS / BR ) ) - Const ) + ( RRS * ( Min( FirstVNF_CPU ,MDR ) / ( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem + Const ) ,Max( ( CRS * CRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( ( CRS + AMS ) / MRS ) ) / Min( ( DDR / RRS ) ,Min( FirstVNF_Mem ,AMS ) ) ) )", "choosing": "( ( ( ( ( Min( RMSe ,MLU ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Min( ( RMSe - ( CS * MUC ) ) ,MLU ) ) ) / Max( RMSe,DS ) ) + Min( ( CS + RCSe ) ,( RMSe + MUC ) ) ) - ( ( ( RRSe / MLU ) * Max( MLU,CS ) ) / ( ( DS / DS ) + ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / Min( CRS ,Const ) ) ,( Const - ARS ) )", "choosing": "( MUR + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Const * MRS ) )", "choosing": "Max( Max( Min( ( ( Min( MLU ,RRSe ) - RCSe ) - MUR ) ,Min( MUM ,( MUM - CS ) ) ),RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_CPU + Min( FirstVNF_CPU_Server ,PN ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( ( ACS * Min( FirstVNF_RAM_Server ,Const ) ),MDR ) )", "choosing": "( Min( DS ,( ( ( CS + RMSe ) - ( MLU * CS ) ) + Min( RRSe ,RCSe ) ) ) / ( MUR - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ( AMS / RRS ) ) - ( FirstVNF_CPU - ARS ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - Max( ( ( RCSe - ( CS * Min( ( CS - RRSe ) ,MLU ) ) ) + CS ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Const * MRS ) )", "choosing": "Max( Max( Min( ( ( Min( MLU ,RRSe ) - RCSe ) - MUR ) ,Min( MUM ,( MUM - CS ) ) ),RRSe ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( RRS - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( Min( ( ( RRSe - ( RCSe + RCSe ) ) - ( MUM + RRSe ) ) ,MLU ),( RMSe / MUC ) ) + ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( Min( Const ,( CRS / FirstVNF_Mem ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * ( ( CS - ( MLU - Min( RRSe ,MLU ) ) ) + Min( ( ( MUC / MUM ) - RMSe ) ,Max( CS,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Max( ( PN + BR ),( MRS / Min( CRS ,( BR + BR ) ) ) ) / ( BR / RRS ) ) )", "choosing": "Max( ( Max( Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ),( MUM / MUR ) ),MUM ) * ( RCSe * RRSe ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,CRS ) ) * ( Const * FirstVNF_RAM ) )", "choosing": "( ( ( DS * Min( Min( DS ,( MUC + DS ) ) ,( CS - DS ) ) ) - ( ( RCSe + MLU ) * RCSe ) ) - Min( DS ,MUC ) )", "obj1": 0.07063197026022305, "obj2": 0.8878210580210939}, {"determining": "Min( ( ( ARS * Const ) / PN ) ,( PN + FirstVNF_CPU ) )", "choosing": "Max( ( MUC / CS ),Min( Max( ( ( ( Max( MLU,DS ) / ( RCSe + MUC ) ) * CS ) / ( MUC - ( ( MUM * ( MUC - MUC ) ) / RMSe ) ) ),RMSe ) ,RMSe ) )", "obj1": 0.7044609665427509, "obj2": 0.22856996514783987}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) )", "obj1": 0.483271375464684, "obj2": 0.3779238470063349}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,Min( Const ,MDR ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( MLU / ( MUR * MUM ) ) * CS ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.06228941054208822}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( ( ( ARS * Const ) / PN ) ,( PN / Min( Max( ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ),PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) ),( RRSe / MUR ) )", "obj1": 0.5836431226765799, "obj2": 0.34700795846361693}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.14869888475836432, "obj2": 0.702789572836885}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( FirstVNF_Mem * ACS ) ,FirstVNF_CPU_Server ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / DS ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RCSe + ( Min( MUR ,CS ) * ( RCSe - MUR ) ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( ( ( Max( AMS,DDR ) + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / ( MUM / ( RRSe + CS ) ) ),RMSe ) * Min( MUM ,MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.2774311029917044}, {"determining": "( ( DDR * FirstVNF_RAM ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - DS ),Min( RCSe ,( MUC + ( RCSe / ( ( RRSe * Min( RRSe ,RMSe ) ) * Max( Max( RRSe,RCSe ),RRSe ) ) ) ) ) ) + ( DS - CS ) )", "obj1": 0.4052044609665427, "obj2": 0.4587279753776345}, {"determining": "Max( Min( ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM_Server ),MRS ) - ( FirstVNF_Mem_Server * AMS ) ) ,FirstVNF_CPU_Server ),ARS )", "choosing": "( ( MUR - RRSe ) + ( Max( Min( MUM ,DS ),MUC ) + ( DS * MUR ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "Min( ( FirstVNF_Mem_Server * ARS ) ,( ( ( Max( CRS,( ACS * FirstVNF_RAM ) ) / ARS ) - Const ) + ( RRS * Const ) ) )", "choosing": "( Max( ( ( DS * ( ( ( DS - DS ) - ( ( CS / MUC ) / ( DS - MUM ) ) ) * RMSe ) ) + DS ),MUR ) - Max( CS,CS ) )", "obj1": 0.9349442379182156, "obj2": 0.051256738453767756}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "( ( ( ( FirstVNF_RAM_Server * MRS ) - ( ACS * PN ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( FirstVNF_Mem - ACS ) ) ) * ( Min( ( PN + DDR ) ,( PN - PN ) ) * ( Const * FirstVNF_RAM ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,( ( MLU / MUC ) - Max( MUC,CS ) ) ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( Min( Min( DS ,( MUC + DS ) ) ,( CS - DS ) ) * MUR ) - ( MUR + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6834420655271597}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) / Max( Const,Min( ACS ,FirstVNF_Mem ) ) ) ),( ( ARS / FirstVNF_Mem ) - Max( PN,CRS ) ) ) ,( ( ( BR + Max( Const,Max( RRS,CRS ) ) ) / ( AMS * Const ) ) / ( Min( RRS ,MDR ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * BR ) ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / Max( ( Max( ( ( ( Max( MUM,RCSe ) - DS ) * Min( MUM ,MUC ) ) - MUC ),DS ) - ( ( RRSe - MLU ) * DS ) ),Min( RCSe ,( MUC + MUR ) ) ) )", "obj1": 0.604089219330855, "obj2": 0.33548195286653054}, {"determining": "( ( ( Min( Min( PN ,FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) + ( BR / MDR ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / DDR ) ) ) + ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * Min( Const ,ACS ) ) )", "choosing": "( ( RMSe * ( ( Max( Min( MLU ,( CS + RCSe ) ),RCSe ) / DS ) * ( MUC - MLU ) ) ) * ( RMSe - MUM ) )", "obj1": 0.6319702602230484, "obj2": 0.3203912666156116}, {"determining": "Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - Max( Max( ACS,FirstVNF_Mem ),PN ) ) ) ,( BR * ( ARS + MRS ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( ( MUC / ( ( MUM + ( ( MUR - RRSe ) - MUR ) ) - RRSe ) ) ,( RCSe + MUM ) ) ) / ( MUC + ( Max( RMSe,( MUC + RRSe ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 0.9702602230483272, "obj2": 0.02922315635243915}, {"determining": "Max( Min( ARS ,( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3271375464684015, "obj2": 0.5303958259604747}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - ( Max( ( PN + BR ),( MRS / Min( CRS ,MRS ) ) ) / ( BR / RRS ) ) ) ) - Min( ( Const + FirstVNF_Mem_Server ) ,( FirstVNF_Mem - ( RRS - ACS ) ) ) )", "choosing": "( Min( ( CS + MLU ) ,Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / MLU ) ),( MUM / MUR ) ) ) / ( ( RMSe * ( MUC * Max( CS,CS ) ) ) + ( MUC + CS ) ) )", "obj1": 0.637546468401487, "obj2": 0.3000292484527416}, {"determining": "Min( ( ( ARS * Const ) / PN ) ,( PN / Min( Max( ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( PN + DDR ) ,( PN - PN ) ) ),PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( Min( MUM ,DS ) / ( ( Max( DS,Min( MLU ,MUC ) ) + RRSe ) / MUC ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) ),( RRSe / MUR ) )", "obj1": 0.6152416356877324, "obj2": 0.3275623144851764}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / MLU ),RMSe ) * Min( ( DS + MUM ) ,( MLU / MLU ) ) )", "obj1": 0.6728624535315985, "obj2": 0.2844310734492158}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( ( ( Max( DS,Min( MLU ,MUC ) ) + RRSe ) / MUC ) + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6468720503503148}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Min( FirstVNF_CPU ,AMS ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( RMSe / RCSe ) - Min( MUM ,Max( RCSe,( ( MUM - CS ) * RCSe ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( DDR + ( FirstVNF_Mem_Server / ( PN + FirstVNF_RAM_Server ) ) ) ) ,( ACS * ( ( PN / MRS ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( Max( Max( ( RRSe / ( MLU * ( MUR * MUR ) ) ),RCSe ),MUC ) ,( Max( MLU,DS ) / Max( ( MLU - MUR ),MUR ) ) ) ) / ( MUC + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.2958134086916686}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * Min( Min( ( PN + Max( ( MRS / FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + RMSe ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( ( ( Max( DS,Min( MUM ,MUC ) ) + RRSe ) / MUC ) + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.18773234200743494, "obj2": 0.6731289182278072}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( ( ( ( ACS + RRS ) - ( ( Min( CRS ,Const ) + PN ) * BR ) ) + AMS ) * MDR ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Min( RRSe ,Max( DS,( RMSe / CS ) ) ) / ( MLU / ( RMSe + RCSe ) ) ) ,MUM ) ) ) - ( MUC + MUR ) )", "obj1": 0.19144981412639406, "obj2": 0.6570535107236832}, {"determining": "( ( ( ( AMS / ACS ) + ( FirstVNF_RAM / ( BR * Const ) ) ) * Min( ARS ,FirstVNF_CPU_Server ) ) - ( Const * FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUC,( ( RMSe * ( Max( Max( MUM,RMSe ),RRSe ) * ( MUC - MLU ) ) ) * Min( DS ,MLU ) ) ) ) / ( Min( MUR ,CS ) + ( CS / MLU ) ) )", "obj1": 0.2825278810408922, "obj2": 0.5673423613795098}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,( DDR / ( PN + BR ) ) ) * Min( FirstVNF_RAM_Server ,Min( MRS ,( PN - ( Min( CRS ,Min( DDR ,PN ) ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),( DS / Max( ( MUR / DS ),( ( ( MLU * Min( MLU ,MUR ) ) - DS ) - MLU ) ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5664329050873563}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( ( ( Max( DS,Min( MLU ,MUC ) ) + RRSe ) / MUC ) + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.6777951512545415}, {"determining": "Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ,( ( ( BR + Max( Const,Max( RRS,CRS ) ) ) / ( AMS * Const ) ) / ( Min( RRS ,MDR ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * BR ) ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( MUC + ( Max( RMSe,( MUC + RRSe ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 0.9795539033457249, "obj2": 0.021033503833462884}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR / MLU ),RMSe ) * Min( ( DS + MUM ) ,( MLU / MLU ) ) )", "obj1": 0.6561338289962825, "obj2": 0.29987549751358866}, {"determining": "Min( ( Min( ARS ,AMS ) * Min( FirstVNF_RAM_Server ,Min( MRS ,( PN - ( Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),( DS / Max( ( RRSe + ( MUR * RRSe ) ),( ( ( Max( ( CS / RCSe ),Min( MUC ,MUM ) ) / RCSe ) * RCSe ) - MLU ) ) ) )", "obj1": 0.2992565055762082, "obj2": 0.554668981597504}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( ( ( ( ACS + RRS ) - ( ( FirstVNF_RAM + PN ) * BR ) ) + AMS ) * MDR ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Min( RRSe ,Max( DS,( RMSe / CS ) ) ) / ( MLU / ( RMSe + RCSe ) ) ) ,MUM ) ) ) - ( MUC + MUR ) )", "obj1": 0.21189591078066913, "obj2": 0.6397690670274563}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Min( ( ( ( RRS - ( MDR + MDR ) ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ,( ( ( BR + Max( Const,Max( RRS,CRS ) ) ) / ( AMS * Const ) ) / ( Min( RRS ,MDR ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * BR ) ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( MUC + ( Max( RMSe,( MUC + RRSe ) ) / ( Min( Min( MUM ,MUC ) ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 0.9795539033457249, "obj2": 0.021033503833462884}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5980317608011204}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RCSe - Min( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) ,( Min( ( MUR * MUM ) ,RRSe ) / MUC ) ) ) ),CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5463826788572619}, {"determining": "Max( Max( MDR,( AMS / FirstVNF_CPU_Server ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) )", "choosing": "( ( Min( ( MLU - DS ) ,MUR ) / Max( CS,MUR ) ) - ( MUC + MUR ) )", "obj1": 0.19144981412639406, "obj2": 0.6570535107236832}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Const * FirstVNF_Mem_Server ) ) ) ,( ARS / DDR ) )", "choosing": "( ( MLU * MUC ) - Max( ( DS - ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.30297397769516726, "obj2": 0.5473919921802555}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + Max( ( MRS / FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( ( FirstVNF_RAM * Min( ( DDR + FirstVNF_RAM_Server ) ,( Min( ARS ,FirstVNF_Mem_Server ) * MDR ) ) ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + RMSe ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( MUM - RCSe ) )", "obj1": 0.2100371747211896, "obj2": 0.6418914481335763}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / RRS ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RCSe - Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) ) ),CS ) )", "obj1": 0.30111524163568776, "obj2": 0.5532604620688912}, {"determining": "Min( ( ( ( CRS * FirstVNF_RAM ) * Const ) / PN ) ,( PN / BR ) )", "choosing": "Max( ( ( MUR + RMSe ) - MLU ),( RRSe / MUR ) )", "obj1": 0.30855018587360594, "obj2": 0.5470714823242387}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ( PN / BR ) ) ) ) ) ,( ( ACS / ( Const - CRS ) ) / ( ( ( FirstVNF_Mem * ARS ) - CRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / ( Max( DS,MUR ) + CS ) ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) - ( RRSe + ( MUR - ( ( RRSe + ( CS / MUR ) ) + ( CS / RCSe ) ) ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5980317608011204}, {"determining": "Max( Min( ARS ,( DDR * ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - CRS ) ) ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( CS * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( ARS / FirstVNF_Mem_Server ) / CRS ) ) ,Max( ARS,ACS ) ) + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * ( DS / RMSe ) ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,MUR ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( MRS * Min( Max( FirstVNF_RAM_Server,( RRS / ( ( ( DDR + ACS ) / FirstVNF_RAM ) - ARS ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( MLU * MUM ) + ( MUC / RCSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) / Max( PN,MDR ) ) * ( MDR * DDR ) )", "choosing": "Max( ( MLU * ( Min( Max( RRSe,( ( ( RRSe / MUC ) - Max( RRSe,DS ) ) + RCSe ) ) ,( Min( ( MUR * MUM ) ,RRSe ) / MUC ) ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Const,Max( DDR,CRS ) ) + RRS ) * BR ) * ( MDR * DDR ) )", "choosing": "Max( ( ( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) * ( ( MUM * MLU ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MDR ) - ( ( FirstVNF_RAM + PN ) * BR ) )", "choosing": "Max( ( RMSe + RCSe ),Max( MUC,( Min( RRSe ,MUR ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) )", "choosing": "Max( ( RRSe + CS ),( ( MUC / RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,Min( MDR ,( ( Const + MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) / ( ( CS + RMSe ) * ( CS + RRSe ) ) ) * ( Max( MUC,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( ( RRS - RRS ) / ACS ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( RMSe,( MUC + ( RCSe + ( ( MUR + RCSe ) + MUM ) ) ) ) / ( CS + ( ( ( MUC + MUM ) + Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - ( Max( DS,( RCSe + ( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) - ( RRSe - RCSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( Max( FirstVNF_CPU,AMS ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( Const,MRS ) ) ) )", "choosing": "( ( ( Max( ( RCSe - CS ),RRSe ) * ( MUC / RMSe ) ) + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( ( Min( Min( MUC ,MUR ) ,MUM ) / CS ) + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( DDR - FirstVNF_CPU_Server ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( Max( RMSe,( ( Min( RCSe ,MUM ) / ( ( RRSe / MUC ) + Min( RRSe ,MUC ) ) ) * ( MUM * ( ( CS * RRSe ) / ( RMSe - RCSe ) ) ) ) ) + ( Max( MLU,RCSe ) + RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( Const * FirstVNF_CPU ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( Max( MRS,BR ) / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - ( MLU - Max( Max( DS,MLU ),( Min( RRSe ,DS ) - ( MLU / MUM ) ) ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( Const + MDR ) ) * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,Max( Min( PN ,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( ( CRS - DDR ) / ( CRS + ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( Max( RCSe,CS ) * ( ( ( MLU * CS ) * ( RRSe * DS ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( FirstVNF_RAM + RRS ) ) ,( ( FirstVNF_Mem_Server / Max( Min( DDR ,MDR ),Max( BR,Min( FirstVNF_RAM_Server ,ACS ) ) ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),( MUR + CS ) ) ) * ( ( MUC * RCSe ) + RRSe ) ) ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,DS ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( ( RRS * ( FirstVNF_RAM - MRS ) ) + PN ) / ( ARS - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM + ACS ) - ARS ) ) / BR ) ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( ( RMSe * ( Max( MUM,RRSe ) * ( MUC - MLU ) ) ) * Min( MUM ,DS ) ) ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - Min( ( RRS * ( ( FirstVNF_RAM_Server / AMS ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) - MRS ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ),( ( Min( ( ( Max( ( DS + MUC ),MUM ) - ( MLU / MLU ) ) + Max( RRSe,RRSe ) ) ,MUR ) + MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Max( ( Min( PN ,FirstVNF_Mem ) * MRS ),Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ,( PN - RRS ) ) ) )", "choosing": "( ( DS + Min( MUC ,MUM ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( Min( FirstVNF_CPU ,RRS ) + ( Max( Min( BR ,FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( ( MLU / ( ( Min( RRSe ,Min( MLU ,DS ) ) / ( ( MUC / MLU ) + RMSe ) ) - MUR ) ),Max( CS,( MUC / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) * DDR ) / Max( ( ( AMS / ( FirstVNF_Mem / MRS ) ) + FirstVNF_CPU_Server ),CRS ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( DS * Max( MUC,( ( RMSe * MUR ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + Max( Max( Min( MRS ,CRS ),ARS ),FirstVNF_RAM_Server ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( RMSe - ( Min( Max( MUR,Max( Max( MUM,DS ),RMSe ) ) ,MUM ) - ( MLU / ( MUC - RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( PN / Max( RRS,( FirstVNF_Mem / MRS ) ) ) ) / ( DDR / RRS ) )", "choosing": "Min( ( Min( ( MUM - Min( MUM ,Min( Min( CS ,Max( MUC,CS ) ) ,Max( RMSe,( MUC + MUR ) ) ) ) ) ,MUC ) / MUR ) ,( MUC * Min( ( MUC + ( ( ( ( RMSe + RRSe ) - RMSe ) / Max( DS,RMSe ) ) * Max( MLU,RMSe ) ) ) ,( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( BR ,ARS ) - FirstVNF_RAM_Server ) ,( BR / AMS ) ) ,( MRS + FirstVNF_CPU ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( ( CS - MUC ) / ( Max( MUR,MUR ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / ARS ) / ( MDR * Const ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - ( ( RCSe - ( MUC / MUC ) ) - ( MLU + ( CS / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,RRS )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,( ( MLU / DS ) * Max( MUC,RCSe ) ) ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem_Server ) ,( Const - Max( PN,PN ) ) )", "choosing": "( Max( ( ( MUM / RCSe ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) ),MUR ) / ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) / MDR ) ,FirstVNF_Mem ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( MUC * RCSe ) - ( MUR * Min( ( RRSe / ( ( ( MUM * MLU ) + ( DS / MUR ) ) / RMSe ) ) ,MUC ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( CRS / BR ) ) - Const ) + ( RRS * ( Min( FirstVNF_CPU ,MDR ) / ( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem + Const ) ,Max( ( CRS * CRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( ( CRS + AMS ) / MRS ) ) / Min( ( DDR / RRS ) ,Min( FirstVNF_Mem ,AMS ) ) ) )", "choosing": "( ( ( ( ( Min( RMSe ,MLU ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Min( ( RMSe - ( CS * MUC ) ) ,MLU ) ) ) / Max( RMSe,DS ) ) + Min( ( CS + RCSe ) ,( RMSe + MUC ) ) ) - ( ( ( RRSe / MLU ) * Max( MLU,CS ) ) / ( ( DS / DS ) + ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ( ACS - FirstVNF_CPU_Server ) ) ,ARS ) ) ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) / ( ( RCSe - CS ) / ( MLU - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( CRS / FirstVNF_Mem ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * ( ( CS - ( MLU - Min( RRSe ,MLU ) ) ) + Min( ( ( MUC / MUM ) - RMSe ) ,Max( CS,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( PN + DDR ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / Max( PN,DDR ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( ( ( MUC + RRSe ) - MUR ) + ( CS - MLU ) ) ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RRSe / MUR ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8710343243588412}, {"determining": "Min( ( ( ARS * Const ) / PN ) ,( PN + FirstVNF_CPU ) )", "choosing": "Max( ( MUC / CS ),Min( Max( ( ( ( Max( MLU,DS ) / ( RCSe + MUC ) ) * CS ) / ( MUC - ( ( MUM * ( MUC - MUC ) ) / RMSe ) ) ),RMSe ) ,RMSe ) )", "obj1": 0.7044609665427509, "obj2": 0.22856996514783987}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - ( PN * CRS ) ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,PN ) ,( ( PN / ( Const + MRS ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( MUR / Min( ( Min( ( ( MLU - MUC ) / ( MUC + MUR ) ) ,CS ) / RMSe ) ,Max( CS,( Min( ( RCSe * MLU ) ,Min( MUM ,MUC ) ) + Max( MUC,MUR ) ) ) ) ),RMSe ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.24774268508507108}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) )", "obj1": 0.483271375464684, "obj2": 0.3779238470063349}, {"determining": "Min( ( ( ARS * Const ) / PN ) ,( PN / Min( Max( ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ),PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) ),( RRSe / MUR ) )", "obj1": 0.5836431226765799, "obj2": 0.34700795846361693}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - ( Max( ( PN + BR ),( MRS / Min( CRS ,MRS ) ) ) / ( ( DDR * FirstVNF_RAM_Server ) / RRS ) ) ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - ( ( ( Max( ( MUM / MUC ),MLU ) - ( Min( RMSe ,MUC ) - MUR ) ) + ( MUC + ( DS / CS ) ) ) * CS ) ) ) - MLU )", "obj1": 0.9089219330855018, "obj2": 0.07900168622531038}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * Min( Min( ( PN + AMS ) ,( PN - PN ) ) ,( ( Max( ( RRS - Const ),FirstVNF_RAM ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + RMSe ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( Max( RMSe,DS ) * RMSe ) / Max( ( ( Min( ( MLU - DS ) ,MUR ) / Max( CS,MUR ) ) * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.1449814126394052, "obj2": 0.7434489268269795}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.14869888475836432, "obj2": 0.702789572836885}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( FirstVNF_Mem * ACS ) ,FirstVNF_CPU_Server ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / DS ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RCSe + ( Min( MUR ,CS ) * ( RCSe - MUR ) ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) ) ) - DS )", "obj1": 0.0724907063197026, "obj2": 0.8195683343406337}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( ( MDR + FirstVNF_CPU_Server ) - Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( DDR - RRS ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) - ( MUC + MUR ) ) - ( CS + ( DS * ( ( ( ( MUM / CS ) - Max( RRSe,( RCSe + RMSe ) ) ) + ( MUM / Max( RCSe,( RCSe / MUR ) ) ) ) - ( RRSe - DS ) ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6659885051491126}, {"determining": "( ( DDR * FirstVNF_RAM ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - DS ),Min( RCSe ,( MUC + ( RCSe / ( ( RRSe * Min( RRSe ,RMSe ) ) * Max( Max( RRSe,RCSe ),RRSe ) ) ) ) ) ) + ( DS - CS ) )", "obj1": 0.4052044609665427, "obj2": 0.4587279753776345}, {"determining": "Max( Min( ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM_Server ),MRS ) - ( FirstVNF_Mem_Server * AMS ) ) ,FirstVNF_CPU_Server ),ARS )", "choosing": "( ( MUR - RRSe ) + ( Max( Min( MUM ,DS ),MUC ) + ( DS * MUR ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,Min( Const ,MDR ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( MLU / ( MUR * MUM ) ) * CS ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.06228941054208822}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),RRS ) - ( ARS * MDR ) ) ,( PN / Min( Max( ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( PN + DDR ) ,( PN - PN ) ) ),PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( RCSe + CS ) ) ) ) / CS ) ),( RRSe / MUR ) )", "obj1": 0.5836431226765799, "obj2": 0.34700795846361693}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - Max( Max( ACS,FirstVNF_Mem ),PN ) ) ) ,( BR * ( ARS + MRS ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( ( MUC / ( ( MUM + ( ( MUR - RRSe ) - MUR ) ) - RRSe ) ) ,( RCSe + MUM ) ) ) / ( MUC + ( Max( RMSe,( MUC + RRSe ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 0.9702602230483272, "obj2": 0.02922315635243915}, {"determining": "Max( Min( ARS ,( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3271375464684015, "obj2": 0.5303958259604747}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( ( ( ( AMS / ACS ) + ( FirstVNF_RAM / ( BR * Const ) ) ) * Min( ARS ,FirstVNF_CPU_Server ) ) - ( Const * FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUC,( ( RMSe * ( Max( Max( MUM,RMSe ),RRSe ) * ( MUC - MLU ) ) ) * Min( DS ,MLU ) ) ) ) / ( Min( MUR ,CS ) + ( CS / MLU ) ) )", "obj1": 0.2825278810408922, "obj2": 0.5673423613795098}, {"determining": "Min( ( ( Min( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( MUR - Max( ( ( MUC * DS ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.18773234200743494, "obj2": 0.6492399417783457}, {"determining": "Min( ( FirstVNF_Mem_Server * ARS ) ,( ( ( Max( CRS,( ACS * FirstVNF_RAM ) ) / ARS ) - Const ) + ( RRS * Const ) ) )", "choosing": "( Max( ( ( DS * ( ( ( DS - DS ) - ( ( CS / MUC ) / ( DS - MUM ) ) ) * RMSe ) ) + DS ),MUR ) - Max( CS,CS ) )", "obj1": 0.9349442379182156, "obj2": 0.051256738453767756}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "( ( FirstVNF_Mem - ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.659261990458729}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Min( FirstVNF_CPU ,AMS ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( RMSe / RCSe ) - Min( MUM ,Max( RCSe,( ( MUM - CS ) * RCSe ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,BR ) + ( Min( ACS ,BR ) * FirstVNF_Mem ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,MRS ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( Max( RMSe,Min( RRSe ,RCSe ) ) / Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5568671896922542}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( ( RRSe * MUR ) - ( ( ( Max( DS,Min( MLU ,MUC ) ) + RRSe ) / MUC ) + MUR ) ) / Max( ( CS * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.20631970260223048, "obj2": 0.6468720503503148}, {"determining": "( Max( FirstVNF_RAM,( ( FirstVNF_Mem - FirstVNF_RAM ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( ( Min( MUM ,Max( ( MUM + MLU ),Min( MUC ,CS ) ) ) / DS ) ,( RMSe / MUM ) ) - CS ) ,MLU ) / Max( ( RCSe + ( Min( Max( MUR,Max( Max( MUM,DS ),RMSe ) ) ,MUM ) / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 0.9386617100371747, "obj2": 0.049612332294771105}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( ( ( ( ACS + RRS ) - ( ( FirstVNF_RAM + PN ) * BR ) ) + AMS ) * MDR ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Min( RRSe ,Max( DS,( RMSe / CS ) ) ) / ( MLU / ( RMSe + RCSe ) ) ) ,MUM ) ) ) - ( MUC + MUR ) )", "obj1": 0.21189591078066913, "obj2": 0.6397690670274563}, {"determining": "Min( ( FirstVNF_Mem_Server * ( ( DDR / Max( ( FirstVNF_Mem - AMS ),( ARS / PN ) ) ) - FirstVNF_Mem_Server ) ) ,( ( ( BR + Max( Const,Max( RRS,CRS ) ) ) / ( AMS * Const ) ) / ( Min( RRS ,MDR ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * ( BR / RRS ) ) ) ) )", "choosing": "( ( Max( ( RCSe + CS ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( MUC + ( ( MUC + CS ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 0.9814126394052045, "obj2": 0.02023504925957502}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5980317608011204}, {"determining": "Min( ( Min( ARS ,AMS ) * Min( FirstVNF_RAM_Server ,Min( MRS ,( PN - ( Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),( DS / Max( ( RRSe + ( MUR * RRSe ) ),( ( ( Max( ( CS / RCSe ),Min( MUC ,MUM ) ) / RCSe ) * RCSe ) - MLU ) ) ) )", "obj1": 0.2992565055762082, "obj2": 0.554668981597504}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_Mem ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RCSe - Min( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) ,( Min( ( MUR * MUM ) ,RRSe ) / MUC ) ) ) ),CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5463826788572619}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Const * FirstVNF_Mem_Server ) ) ) ,( ARS / DDR ) )", "choosing": "( ( MLU * MUC ) - Max( ( DS - ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.30297397769516726, "obj2": 0.5473919921802555}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + Max( ( MRS / FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( ( FirstVNF_RAM * Min( ( DDR + FirstVNF_RAM_Server ) ,( Min( ARS ,FirstVNF_Mem_Server ) * MDR ) ) ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + RMSe ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( MUM - RCSe ) )", "obj1": 0.2100371747211896, "obj2": 0.6418914481335763}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / RRS ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RCSe - Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) ) ),CS ) )", "obj1": 0.30111524163568776, "obj2": 0.5532604620688912}, {"determining": "Min( ( ( ( RRS - ( MDR + MDR ) ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ,( ( ( BR + Max( Const,Max( RRS,CRS ) ) ) / ( AMS * Const ) ) / ( Min( RRS ,MDR ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * BR ) ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( MUC + ( Max( RMSe,( MUC + RRSe ) ) / ( Min( Min( MUM ,MUC ) ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 0.9795539033457249, "obj2": 0.021033503833462884}, {"determining": "Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ,( ( ( BR + Max( Const,Max( RRS,CRS ) ) ) / ( AMS * Const ) ) / ( Min( RRS ,MDR ) - ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) * BR ) ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( MUC + ( Max( RMSe,( MUC + RRSe ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 0.9795539033457249, "obj2": 0.021033503833462884}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ( PN / BR ) ) ) ) ) ,( ( ACS / ( Const - CRS ) ) / ( ( ( FirstVNF_Mem * ARS ) - CRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / ( Max( DS,MUR ) + CS ) ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) - ( RRSe + ( MUR - ( ( RRSe + ( CS / MUR ) ) + ( CS / RCSe ) ) ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5980317608011204}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "Min( ( ( ( CRS * FirstVNF_RAM ) * Const ) / PN ) ,( PN / BR ) )", "choosing": "Max( ( ( MUR + RMSe ) - MLU ),( RRSe / MUR ) )", "obj1": 0.30855018587360594, "obj2": 0.5470714823242387}, {"determining": "Max( Min( ARS ,( DDR * ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - CRS ) ) ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( CS * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( Min( Min( ( FirstVNF_CPU + Min( Max( ARS,ACS ) ,PN ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( RCSe - MUC ) * ( MLU + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( ARS / FirstVNF_Mem_Server ) / CRS ) ) ,Max( ARS,ACS ) ) + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * ( DS / RMSe ) ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,MUR ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "Min( ( RRS - DDR ) ,( Max( ( PN + BR ),( MRS / Min( CRS ,( BR + BR ) ) ) ) / ( BR / RRS ) ) )", "choosing": "Max( ( Max( Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ),( MUM / MUR ) ),MUM ) * ( RCSe * RRSe ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( MRS * Min( Max( FirstVNF_RAM_Server,( RRS / ( ( ( DDR + ACS ) / FirstVNF_RAM ) - ARS ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( MLU * MUM ) + ( MUC / RCSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) / Max( PN,MDR ) ) * ( MDR * DDR ) )", "choosing": "Max( ( MLU * ( Min( Max( RRSe,( ( ( RRSe / MUC ) - Max( RRSe,DS ) ) + RCSe ) ) ,( Min( ( MUR * MUM ) ,RRSe ) / MUC ) ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Const,Max( DDR,CRS ) ) + RRS ) * BR ) * ( MDR * DDR ) )", "choosing": "Max( ( ( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) * ( ( MUM * MLU ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MDR ) - ( ( FirstVNF_RAM + PN ) * BR ) )", "choosing": "Max( ( RMSe + RCSe ),Max( MUC,( Min( RRSe ,MUR ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) )", "choosing": "Max( ( RRSe + CS ),( ( MUC / RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,Min( MDR ,( ( Const + MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) / ( ( CS + RMSe ) * ( CS + RRSe ) ) ) * ( Max( MUC,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( ( RRS - RRS ) / ACS ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( RMSe,( MUC + ( RCSe + ( ( MUR + RCSe ) + MUM ) ) ) ) / ( CS + ( ( ( MUC + MUM ) + Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - ( Max( DS,( RCSe + ( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) - ( RRSe - RCSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( Max( FirstVNF_CPU,AMS ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( Const,MRS ) ) ) )", "choosing": "( ( ( Max( ( RCSe - CS ),RRSe ) * ( MUC / RMSe ) ) + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( ( Min( Min( MUC ,MUR ) ,MUM ) / CS ) + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( DDR - FirstVNF_CPU_Server ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( Max( RMSe,( ( Min( RCSe ,MUM ) / ( ( RRSe / MUC ) + Min( RRSe ,MUC ) ) ) * ( MUM * ( ( CS * RRSe ) / ( RMSe - RCSe ) ) ) ) ) + ( Max( MLU,RCSe ) + RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( Const * FirstVNF_CPU ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( Max( MRS,BR ) / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - ( MLU - Max( Max( DS,MLU ),( Min( RRSe ,DS ) - ( MLU / MUM ) ) ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( Const + MDR ) ) * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,Max( Min( PN ,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( ( CRS - DDR ) / ( CRS + ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( Max( RCSe,CS ) * ( ( ( MLU * CS ) * ( RRSe * DS ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( FirstVNF_RAM + RRS ) ) ,( ( FirstVNF_Mem_Server / Max( Min( DDR ,MDR ),Max( BR,Min( FirstVNF_RAM_Server ,ACS ) ) ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),( MUR + CS ) ) ) * ( ( MUC * RCSe ) + RRSe ) ) ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,DS ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( ( RRS * ( FirstVNF_RAM - MRS ) ) + PN ) / ( ARS - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM + ACS ) - ARS ) ) / BR ) ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( ( RMSe * ( Max( MUM,RRSe ) * ( MUC - MLU ) ) ) * Min( MUM ,DS ) ) ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - Min( ( RRS * ( ( FirstVNF_RAM_Server / AMS ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) - MRS ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ),( ( Min( ( ( Max( ( DS + MUC ),MUM ) - ( MLU / MLU ) ) + Max( RRSe,RRSe ) ) ,MUR ) + MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Max( ( Min( PN ,FirstVNF_Mem ) * MRS ),Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ,( PN - RRS ) ) ) )", "choosing": "( ( DS + Min( MUC ,MUM ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( Min( FirstVNF_CPU ,RRS ) + ( Max( Min( BR ,FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( ( MLU / ( ( Min( RRSe ,Min( MLU ,DS ) ) / ( ( MUC / MLU ) + RMSe ) ) - MUR ) ),Max( CS,( MUC / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) * DDR ) / Max( ( ( AMS / ( FirstVNF_Mem / MRS ) ) + FirstVNF_CPU_Server ),CRS ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( DS * Max( MUC,( ( RMSe * MUR ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + Max( Max( Min( MRS ,CRS ),ARS ),FirstVNF_RAM_Server ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( RMSe - ( Min( Max( MUR,Max( Max( MUM,DS ),RMSe ) ) ,MUM ) - ( MLU / ( MUC - RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( PN / Max( RRS,( FirstVNF_Mem / MRS ) ) ) ) / ( DDR / RRS ) )", "choosing": "Min( ( Min( ( MUM - Min( MUM ,Min( Min( CS ,Max( MUC,CS ) ) ,Max( RMSe,( MUC + MUR ) ) ) ) ) ,MUC ) / MUR ) ,( MUC * Min( ( MUC + ( ( ( ( RMSe + RRSe ) - RMSe ) / Max( DS,RMSe ) ) * Max( MLU,RMSe ) ) ) ,( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( BR ,ARS ) - FirstVNF_RAM_Server ) ,( BR / AMS ) ) ,( MRS + FirstVNF_CPU ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( ( CS - MUC ) / ( Max( MUR,MUR ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / ARS ) / ( MDR * Const ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - ( ( RCSe - ( MUC / MUC ) ) - ( MLU + ( CS / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,RRS )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,( ( MLU / DS ) * Max( MUC,RCSe ) ) ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const + FirstVNF_Mem_Server ) ,( Const - Max( PN,PN ) ) )", "choosing": "( Max( ( ( MUM / RCSe ) + ( Max( ( MLU + DS ),( DS / RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) ),MUR ) / ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_RAM * RRS ) / MDR ) ,FirstVNF_Mem ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( ( MUC * RCSe ) - ( MUR * Min( ( RRSe / ( ( ( MUM * MLU ) + ( DS / MUR ) ) / RMSe ) ) ,MUC ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( CRS / BR ) ) - Const ) + ( RRS * ( Min( FirstVNF_CPU ,MDR ) / ( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( BR + ( Max( ( FirstVNF_Mem - ACS ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( RRSe,Max( CS,( ( CS + RRSe ) / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ( ACS - FirstVNF_CPU_Server ) ) ,ARS ) ) ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) / ( ( RCSe - CS ) / ( MLU - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( PN + DDR ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / Max( PN,DDR ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( ( ( MUC + RRSe ) - MUR ) + ( CS - MLU ) ) ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RRSe / MUR ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8710343243588412}, {"determining": "Min( ( ( ARS * Const ) / PN ) ,( PN + FirstVNF_CPU ) )", "choosing": "Max( ( MUC / CS ),Min( Max( ( ( ( Max( MLU,DS ) / ( RCSe + MUC ) ) * CS ) / ( MUC - ( ( MUM * ( MUC - MUC ) ) / RMSe ) ) ),RMSe ) ,RMSe ) )", "obj1": 0.7044609665427509, "obj2": 0.22856996514783987}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - ( PN * CRS ) ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,PN ) ,( ( PN / ( Const + MRS ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( MUR / Min( ( Min( ( ( MLU - MUC ) / ( MUC + MUR ) ) ,CS ) / RMSe ) ,Max( CS,( Min( ( RCSe * MLU ) ,Min( MUM ,MUC ) ) + Max( MUC,MUR ) ) ) ) ),RMSe ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.24774268508507108}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) )", "obj1": 0.483271375464684, "obj2": 0.3779238470063349}, {"determining": "Min( ( ( ARS * Const ) / PN ) ,( PN / Min( Max( ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ),PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) ),( RRSe / MUR ) )", "obj1": 0.5836431226765799, "obj2": 0.34700795846361693}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.0813098239927746}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.14869888475836432, "obj2": 0.702789572836885}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) ) ) - DS )", "obj1": 0.0724907063197026, "obj2": 0.8195683343406337}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( ( MDR + FirstVNF_CPU_Server ) - Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( DDR - RRS ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) - ( MUC + MUR ) ) - ( CS + ( DS * ( ( ( ( MUM / CS ) - Max( RRSe,( RCSe + RMSe ) ) ) + ( MUM / Max( RCSe,( RCSe / MUR ) ) ) ) - ( RRSe - DS ) ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6659885051491126}, {"determining": "( ( DDR * FirstVNF_RAM ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - DS ),Min( RCSe ,( MUC + ( RCSe / ( ( RRSe * Min( RRSe ,RMSe ) ) * Max( Max( RRSe,RCSe ),RRSe ) ) ) ) ) ) + ( DS - CS ) )", "obj1": 0.4052044609665427, "obj2": 0.4587279753776345}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( FirstVNF_Mem * ACS ) ,FirstVNF_CPU_Server ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / DS ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RCSe + ( Min( MUR ,CS ) * ( RCSe - MUR ) ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Max( Min( ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM_Server ),MRS ) - ( FirstVNF_Mem_Server * AMS ) ) ,FirstVNF_CPU_Server ),ARS )", "choosing": "( ( MUR - RRSe ) + ( Max( Min( MUM ,DS ),MUC ) + ( DS * MUR ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * Min( Min( ( PN + AMS ) ,( PN - PN ) ) ,( ( Max( ( RRS - Const ),FirstVNF_RAM ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + RMSe ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( Max( RMSe,DS ) * RMSe ) / Max( ( ( Min( ( MLU - DS ) ,MUR ) / Max( CS,MUR ) ) * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.1449814126394052, "obj2": 0.7434489268269795}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( Max( BR,MDR ) ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( ( ( MLU / DS ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) ),( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) ) ) - ( MUM + MUM ) )", "obj1": 0.13940520446096655, "obj2": 0.7611802828703964}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - Max( Max( ACS,FirstVNF_Mem ),PN ) ) ) ,( BR * ( ARS + MRS ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( ( MUC / ( ( MUM + ( ( MUR - RRSe ) - MUR ) ) - RRSe ) ) ,( RCSe + MUM ) ) ) / ( MUC + ( Max( RMSe,( MUC + RRSe ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 0.9702602230483272, "obj2": 0.02922315635243915}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,Min( Const ,MDR ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( MLU / ( MUR * MUM ) ) * CS ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.06228941054208822}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( ( Max( ( FirstVNF_Mem_Server * DDR ),RRS ) - ( ARS * MDR ) ) ,( PN / Min( Max( ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( PN + DDR ) ,( PN - PN ) ) ),PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( RCSe + CS ) ) ) ) / CS ) ),( RRSe / MUR ) )", "obj1": 0.5836431226765799, "obj2": 0.34700795846361693}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "( Min( CRS ,RRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + DS ) ,( ( MUC / ( ( MUC - MUM ) + CS ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6448187896594058}, {"determining": "Max( Min( ARS ,( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3271375464684015, "obj2": 0.5303958259604747}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( ( ( ( AMS / ACS ) + ( FirstVNF_RAM / ( BR * Const ) ) ) * Min( ARS ,FirstVNF_CPU_Server ) ) - ( Const * FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,Max( MUC,( ( RMSe * ( Max( Max( MUM,RMSe ),RRSe ) * ( MUC - MLU ) ) ) * Min( DS ,MLU ) ) ) ) / ( Min( MUR ,CS ) + ( CS / MLU ) ) )", "obj1": 0.2825278810408922, "obj2": 0.5673423613795098}, {"determining": "Min( ( FirstVNF_Mem_Server * ARS ) ,( ( ( Max( CRS,( ACS * FirstVNF_RAM ) ) / ARS ) - Const ) + ( RRS * Const ) ) )", "choosing": "( Max( ( ( DS * ( ( ( DS - DS ) - ( ( CS / MUC ) / ( DS - MUM ) ) ) * RMSe ) ) + DS ),MUR ) - Max( CS,CS ) )", "obj1": 0.9349442379182156, "obj2": 0.051256738453767756}, {"determining": "( ( FirstVNF_Mem - ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.659261990458729}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM_Server ) + FirstVNF_RAM ),Max( Max( MDR,Max( ( FirstVNF_CPU_Server + DDR ),Min( ARS ,( Max( ( AMS - FirstVNF_Mem ),CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) )", "choosing": "( ( Max( Max( ( ( MLU - ( ( MUM * RMSe ) / ( MUR / MUC ) ) ) + MUM ),RRSe ),MUR ) - Max( ( Min( ( MUM + ( Max( CS,MLU ) - CS ) ) ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + Max( ( MRS / FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( ( FirstVNF_RAM * Min( ( DDR + FirstVNF_RAM_Server ) ,( Min( ARS ,FirstVNF_Mem_Server ) * MDR ) ) ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + RMSe ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( MUM - RCSe ) )", "obj1": 0.2100371747211896, "obj2": 0.6418914481335763}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Min( FirstVNF_CPU ,AMS ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( RMSe / RCSe ) - Min( MUM ,Max( RCSe,( ( MUM - CS ) * RCSe ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.537178780877131}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,BR ) + ( Min( ACS ,BR ) * FirstVNF_Mem ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,MRS ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( Max( RMSe,Min( RRSe ,RCSe ) ) / Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5568671896922542}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - ( Max( ( PN + BR ),( MRS / Min( CRS ,MRS ) ) ) / ( ( DDR * FirstVNF_RAM_Server ) / RRS ) ) ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + Max( RCSe,MUC ) ),( ( MLU / MUC ) - ( ( ( Max( ( MUM / MUC ),MLU ) - ( Min( RMSe ,MUC ) - MUR ) ) + ( MUC + ( DS / CS ) ) ) * CS ) ) ) - MLU )", "obj1": 0.9089219330855018, "obj2": 0.07900168622531038}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( ( ( ( ACS + RRS ) - ( ( FirstVNF_RAM + PN ) * BR ) ) + AMS ) * MDR ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Min( RRSe ,Max( DS,( RMSe / CS ) ) ) / ( MLU / ( RMSe + RCSe ) ) ) ,MUM ) ) ) - ( MUC + MUR ) )", "obj1": 0.21189591078066913, "obj2": 0.6397690670274563}, {"determining": "( Max( FirstVNF_RAM,( ( FirstVNF_Mem - FirstVNF_RAM ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( ( Min( ( Min( MUM ,Max( ( MUM + MLU ),Min( MUC ,CS ) ) ) / DS ) ,( RMSe / MUM ) ) - CS ) ,MLU ) / Max( ( RCSe + ( Min( Max( MUR,Max( Max( MUM,DS ),RMSe ) ) ,MUM ) / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 0.9386617100371747, "obj2": 0.049612332294771105}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "Min( ( Min( ARS ,AMS ) * Min( FirstVNF_RAM_Server ,Min( MRS ,( PN - ( Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),( DS / Max( ( RRSe + ( MUR * RRSe ) ),( ( ( Max( ( CS / RCSe ),Min( MUC ,MUM ) ) / RCSe ) * RCSe ) - MLU ) ) ) )", "obj1": 0.2992565055762082, "obj2": 0.554668981597504}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * DS ) - ( RRSe + RCSe ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5980317608011204}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( DDR + MDR ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( RMSe / RCSe ) - Min( MUM ,Max( RCSe,( ( MUM - CS ) * ( CS - RCSe ) ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5432464979975614}, {"determining": "Min( ( ( ( CRS * FirstVNF_RAM ) * Const ) / PN ) ,( PN / BR ) )", "choosing": "Max( ( ( MUR + RMSe ) - MLU ),( RRSe / MUR ) )", "obj1": 0.30855018587360594, "obj2": 0.5470714823242387}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( MDR + ACS ),ACS ) )", "choosing": "( ( ( RMSe * ( DS * ( MUR * RRSe ) ) ) / ( MUR - ( ( MLU * RRSe ) / RCSe ) ) ) - Max( ( ( CS - DS ) - ( MUM * MUR ) ),CS ) )", "obj1": 0.30111524163568776, "obj2": 0.5491304619989041}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Const * FirstVNF_Mem_Server ) ) ) ,( ARS / DDR ) )", "choosing": "( ( MLU * MUC ) - Max( ( DS - ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.30297397769516726, "obj2": 0.5473919921802555}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ( PN / BR ) ) ) ) ) ,( ( ACS / ( Const - CRS ) ) / ( ( ( FirstVNF_Mem * ARS ) - CRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / ( Max( DS,MUR ) + CS ) ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) - ( RRSe + ( MUR - ( ( RRSe + ( CS / MUR ) ) + ( CS / RCSe ) ) ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.241635687732342, "obj2": 0.5980317608011204}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "Max( Min( ARS ,( DDR * ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - CRS ) ) ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( CS * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "( Max( Min( PN ,FirstVNF_CPU ),( ( MDR / ( ( AMS / RRS ) * FirstVNF_CPU_Server ) ) / CRS ) ) / ( FirstVNF_CPU_Server + FirstVNF_CPU ) )", "choosing": "Min( ( RMSe + Min( RCSe ,MUM ) ) ,( ( ( MLU / RRSe ) + CS ) - Min( MUR ,( CS * RMSe ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( Min( Min( ( FirstVNF_CPU + Min( Max( ARS,ACS ) ,PN ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( RCSe - MUC ) * ( MLU + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "( Max( ( ( DDR + FirstVNF_RAM ) * ( ARS - MRS ) ),( Max( ARS,ACS ) - Min( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + Min( ( DS + ( ( MLU / MUM ) / MUM ) ) ,( ( CS + ( MUR * MUR ) ) + RRSe ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - Min( MUM ,Max( RCSe,( ( MUM - CS ) * RCSe ) ) ) ) ) ) )", "obj1": 0.9386617100371747, "obj2": 0.049612332294771105}, {"determining": "( Min( Const ,( CRS / FirstVNF_Mem ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * ( ( CS - ( MLU - Min( RRSe ,MLU ) ) ) + Min( ( ( MUC / MUM ) - RMSe ) ,Max( CS,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Max( ( PN + BR ),( MRS / Min( CRS ,( BR + BR ) ) ) ) / ( BR / RRS ) ) )", "choosing": "Max( ( Max( Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ),( MUM / MUR ) ),MUM ) * ( RCSe * RRSe ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( MRS * Min( Max( FirstVNF_RAM_Server,( RRS / ( ( ( DDR + ACS ) / FirstVNF_RAM ) - ARS ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( MLU * MUM ) + ( MUC / RCSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) / Max( PN,MDR ) ) * ( MDR * DDR ) )", "choosing": "Max( ( MLU * ( Min( Max( RRSe,( ( ( RRSe / MUC ) - Max( RRSe,DS ) ) + RCSe ) ) ,( Min( ( MUR * MUM ) ,RRSe ) / MUC ) ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Const,Max( DDR,CRS ) ) + RRS ) * BR ) * ( MDR * DDR ) )", "choosing": "Max( ( ( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) * ( ( MUM * MLU ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MDR ) - ( ( FirstVNF_RAM + PN ) * BR ) )", "choosing": "Max( ( RMSe + RCSe ),Max( MUC,( Min( RRSe ,MUR ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) )", "choosing": "Max( ( RRSe + CS ),( ( MUC / RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,Min( MDR ,( ( Const + MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) / ( ( CS + RMSe ) * ( CS + RRSe ) ) ) * ( Max( MUC,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( ( RRS - RRS ) / ACS ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( RMSe,( MUC + ( RCSe + ( ( MUR + RCSe ) + MUM ) ) ) ) / ( CS + ( ( ( MUC + MUM ) + Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - ( Max( DS,( RCSe + ( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) - ( RRSe - RCSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( Max( FirstVNF_CPU,AMS ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( Const,MRS ) ) ) )", "choosing": "( ( ( Max( ( RCSe - CS ),RRSe ) * ( MUC / RMSe ) ) + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( ( Min( Min( MUC ,MUR ) ,MUM ) / CS ) + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( DDR - FirstVNF_CPU_Server ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( Max( RMSe,( ( Min( RCSe ,MUM ) / ( ( RRSe / MUC ) + Min( RRSe ,MUC ) ) ) * ( MUM * ( ( CS * RRSe ) / ( RMSe - RCSe ) ) ) ) ) + ( Max( MLU,RCSe ) + RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( Const * FirstVNF_CPU ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( Max( MRS,BR ) / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - ( MLU - Max( Max( DS,MLU ),( Min( RRSe ,DS ) - ( MLU / MUM ) ) ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( Const + MDR ) ) * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,Max( Min( PN ,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( ( CRS - DDR ) / ( CRS + ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( Max( RCSe,CS ) * ( ( ( MLU * CS ) * ( RRSe * DS ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( FirstVNF_RAM + RRS ) ) ,( ( FirstVNF_Mem_Server / Max( Min( DDR ,MDR ),Max( BR,Min( FirstVNF_RAM_Server ,ACS ) ) ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),( MUR + CS ) ) ) * ( ( MUC * RCSe ) + RRSe ) ) ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,DS ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( ( RRS * ( FirstVNF_RAM - MRS ) ) + PN ) / ( ARS - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM + ACS ) - ARS ) ) / BR ) ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( ( RMSe * ( Max( MUM,RRSe ) * ( MUC - MLU ) ) ) * Min( MUM ,DS ) ) ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - Min( ( RRS * ( ( FirstVNF_RAM_Server / AMS ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) - MRS ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ),( ( Min( ( ( Max( ( DS + MUC ),MUM ) - ( MLU / MLU ) ) + Max( RRSe,RRSe ) ) ,MUR ) + MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Max( ( Min( PN ,FirstVNF_Mem ) * MRS ),Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ,( PN - RRS ) ) ) )", "choosing": "( ( DS + Min( MUC ,MUM ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( Min( FirstVNF_CPU ,RRS ) + ( Max( Min( BR ,FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( ( MLU / ( ( Min( RRSe ,Min( MLU ,DS ) ) / ( ( MUC / MLU ) + RMSe ) ) - MUR ) ),Max( CS,( MUC / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) * DDR ) / Max( ( ( AMS / ( FirstVNF_Mem / MRS ) ) + FirstVNF_CPU_Server ),CRS ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( DS * Max( MUC,( ( RMSe * MUR ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + Max( Max( Min( MRS ,CRS ),ARS ),FirstVNF_RAM_Server ) ) * ( ( ( PN * MDR ) - ( RRS / FirstVNF_RAM ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( FirstVNF_CPU + AMS ) ) ) )", "choosing": "( ( MLU + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( RMSe - ( Min( Max( MUR,Max( Max( MUM,DS ),RMSe ) ) ,MUM ) - ( MLU / ( MUC - RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( PN / Max( RRS,( FirstVNF_Mem / MRS ) ) ) ) / ( DDR / RRS ) )", "choosing": "Min( ( Min( ( MUM - Min( MUM ,Min( Min( CS ,Max( MUC,CS ) ) ,Max( RMSe,( MUC + MUR ) ) ) ) ) ,MUC ) / MUR ) ,( MUC * Min( ( MUC + ( ( ( ( RMSe + RRSe ) - RMSe ) / Max( DS,RMSe ) ) * Max( MLU,RMSe ) ) ) ,( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( BR ,ARS ) - FirstVNF_RAM_Server ) ,( BR / AMS ) ) ,( MRS + FirstVNF_CPU ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( ( CS - MUC ) / ( Max( MUR,MUR ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / ARS ) / ( MDR * Const ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / ( MUR - ( ( RCSe - ( MUC / MUC ) ) - ( MLU + ( CS / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,RRS )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,( ( MLU / DS ) * Max( MUC,RCSe ) ) ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( ( ( ( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU ) / Const ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) + Min( Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,Min( Const ,MDR ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( Min( MUC ,RMSe ) + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( BR + ( Max( ( FirstVNF_Mem - ACS ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( RRSe,Max( CS,( ( CS + RRSe ) / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( PN + DDR ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / Max( PN,DDR ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( ( ( MUC + RRSe ) - MUR ) + ( CS - MLU ) ) ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RRSe / MUR ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8710343243588412}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( MUR,RMSe ) * ( DS + MUM ) )", "obj1": 0.6338289962825279, "obj2": 0.22374099216558774}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) )", "obj1": 0.483271375464684, "obj2": 0.3779238470063349}, {"determining": "Min( ( ( ARS * Const ) / PN ) ,( PN / Min( Max( ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ),PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) ),( RRSe / MUR ) )", "obj1": 0.5836431226765799, "obj2": 0.34700795846361693}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - ( PN * CRS ) ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,PN ) ,( ( PN / ( Const + MRS ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( MUR / Min( ( Min( ( ( MLU - MUC ) / ( MUC + MUR ) ) ,CS ) / RMSe ) ,Max( CS,( Min( ( RCSe * MLU ) ,Min( MUM ,MUC ) ) + Max( MUC,MUR ) ) ) ) ),RMSe ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.24774268508507108}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,( Const * FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUR ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07695975769201886}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.14869888475836432, "obj2": 0.702789572836885}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( ( MDR + FirstVNF_CPU_Server ) - Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( DDR - RRS ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) - ( MUC + MUR ) ) - ( CS + ( DS * ( ( ( ( MUM / CS ) - Max( RRSe,( RCSe + RMSe ) ) ) + ( MUM / Max( RCSe,( RCSe / MUR ) ) ) ) - ( RRSe - DS ) ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6659885051491126}, {"determining": "( ( DDR * FirstVNF_RAM ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - DS ),Min( RCSe ,( MUC + ( RCSe / ( ( RRSe * Min( RRSe ,RMSe ) ) * Max( Max( RRSe,RCSe ),RRSe ) ) ) ) ) ) + ( DS - CS ) )", "obj1": 0.4052044609665427, "obj2": 0.4587279753776345}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( FirstVNF_Mem * ACS ) ,FirstVNF_CPU_Server ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / DS ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RCSe + ( Min( MUR ,CS ) * ( RCSe - MUR ) ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) * Min( Min( ( PN + AMS ) ,( PN - PN ) ) ,( ( Max( ( RRS - Const ),FirstVNF_RAM ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + RMSe ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( ( Max( RMSe,DS ) * RMSe ) / Max( ( ( Min( ( MLU - DS ) ,MUR ) / Max( CS,MUR ) ) * CS ),Min( MLU ,MUC ) ) ) )", "obj1": 0.1449814126394052, "obj2": 0.7434489268269795}, {"determining": "Max( Min( ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM_Server ),MRS ) - ( FirstVNF_Mem_Server * AMS ) ) ,FirstVNF_CPU_Server ),ARS )", "choosing": "( ( MUR - RRSe ) + ( Max( Min( MUM ,DS ),MUC ) + ( DS * MUR ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( Max( BR,MDR ) ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( ( ( MLU / DS ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) ),( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) ) ) - ( MUM + MUM ) )", "obj1": 0.13940520446096655, "obj2": 0.7611802828703964}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( MDR / ( ( AMS / RRS ) * FirstVNF_CPU_Server ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + Min( ( RMSe + Min( RCSe ,MUM ) ) ,( ( ( MLU / RRSe ) + CS ) - Min( MUR ,( CS * RMSe ) ) ) ) ) ) ) - DS )", "obj1": 0.0724907063197026, "obj2": 0.8195683343406337}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - Max( Max( ACS,FirstVNF_Mem ),PN ) ) ) ,( BR * ( ARS + MRS ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( ( MUC / ( ( MUM + ( ( MUR - RRSe ) - MUR ) ) - RRSe ) ) ,( RCSe + MUM ) ) ) / ( MUC + ( Max( RMSe,( MUC + RRSe ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 0.9702602230483272, "obj2": 0.02922315635243915}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( ( AMS - Min( BR ,FirstVNF_Mem ) ) ,( PN / Min( Max( ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ),PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + RMSe ) ,( MUR / MUC ) ) ) ),( RRSe / MUR ) )", "obj1": 0.5836431226765799, "obj2": 0.34700795846361693}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "( Min( CRS ,RRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + DS ) ,( ( MUC / ( ( MUC - MUM ) + CS ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6448187896594058}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + FirstVNF_Mem ) - CRS ) ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( ( DS + MUC ) - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 0.9386617100371747, "obj2": 0.04961233229477109}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,BR ) + ( Min( ACS ,BR ) * FirstVNF_Mem ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,MRS ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( Max( RMSe,Min( RRSe ,RCSe ) ) / Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5568671896922542}, {"determining": "( Max( DDR,( Max( BR,FirstVNF_Mem_Server ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + ( ACS * MRS ) ) ) * MDR ) )", "choosing": "( ( MUC * MUC ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5658824181130301}, {"determining": "( ( FirstVNF_Mem - ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.659261990458729}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM / ( FirstVNF_Mem - Const ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( RMSe + ( MLU * RCSe ) ) / Min( RMSe ,Min( MUR ,MUR ) ) ) ) / RCSe ) ) ) / ( MUM + RRSe ) )", "obj1": 0.9219330855018587, "obj2": 0.05060345217063093}, {"determining": "( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + Max( ( MRS / FirstVNF_RAM_Server ),FirstVNF_CPU ) ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( ( FirstVNF_RAM * Min( ( DDR + FirstVNF_RAM_Server ) ,( Min( ARS ,FirstVNF_Mem_Server ) * MDR ) ) ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MLU - MUM ) + RMSe ),( ( MLU / MUC ) - Max( MUC,CS ) ) ) - ( MUM - RCSe ) )", "obj1": 0.2100371747211896, "obj2": 0.6418914481335763}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * ( ( ( PN * ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_Mem_Server ) ) / BR ) * ACS ) ) ) - ( ( Min( DDR ,MRS ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( ( MUR - RRSe ) / CS ),( ( ( ( MUR * Max( MUR,Min( MLU ,CS ) ) ) + MUR ) + ( MUR * MLU ) ) + RCSe ) ) / RCSe )", "obj1": 0.2527881040892193, "obj2": 0.5887129915576814}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) + MDR ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RRSe - Min( MUM ,DS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "Max( Min( ARS ,( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3271375464684015, "obj2": 0.5303958259604747}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,( DDR / FirstVNF_RAM ) ) * Min( FirstVNF_RAM_Server ,Min( MRS ,( PN - ( Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) ,Max( Min( ( DDR * CRS ) ,AMS ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUC / CS ),( DS / Max( ( MUR / DS ),( ( ( Max( ( CS / RCSe ),( MLU / MUC ) ) / Max( Max( MUM,DS ),RMSe ) ) * RCSe ) - MLU ) ) ) )", "obj1": 0.3308550185873606, "obj2": 0.5271833391872562}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) ) ) - DS )", "obj1": 0.0724907063197026, "obj2": 0.8195683343406337}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( FirstVNF_RAM_Server / Min( ( Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,DDR ) ) ,ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / Min( MUM ,RRSe ) ),CS ) ) - ( RMSe * Max( MUR,Max( MUM,RCSe ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5978895218011231}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( MRS * ARS ) )", "choosing": "( Min( Min( RMSe ,( RCSe + RCSe ) ) ,MUC ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9107806691449815, "obj2": 0.06407932793384148}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( ( ( ( ACS + RRS ) - ( ( FirstVNF_RAM + PN ) * BR ) ) + AMS ) * MDR ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Min( RRSe ,Max( DS,( RMSe / CS ) ) ) / ( MLU / ( RMSe + RCSe ) ) ) ,MUM ) ) ) - ( MUC + MUR ) )", "obj1": 0.21189591078066913, "obj2": 0.6397690670274563}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM_Server ) + FirstVNF_RAM ),Max( Max( MDR,Max( ( FirstVNF_CPU_Server + DDR ),Min( ARS ,( Max( ( AMS - FirstVNF_Mem ),CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) )", "choosing": "( ( Max( Max( ( ( MLU - ( ( MUM * RMSe ) / ( MUR / MUC ) ) ) + MUM ),RRSe ),MUR ) - Max( ( Min( ( MUM + ( Max( CS,MLU ) - CS ) ) ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "Min( ( Min( ARS ,AMS ) * Min( FirstVNF_RAM_Server ,Min( MRS ,( PN - ( Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) - Min( FirstVNF_RAM ,ARS ) ) ) ) ) ) ,( PN / BR ) )", "choosing": "Max( ( MUC / CS ),( DS / Max( ( RRSe + ( MUR * RRSe ) ),( ( ( Max( ( CS / RCSe ),Min( MUC ,MUM ) ) / RCSe ) * RCSe ) - MLU ) ) ) )", "obj1": 0.2992565055762082, "obj2": 0.554668981597504}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,Min( Const ,MDR ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( MLU / ( MUR * MUM ) ) * CS ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.9182156133828996, "obj2": 0.06219955911872093}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5406592828323058}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / AMS ) ) - FirstVNF_Mem_Server ) ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,( CS / MUR ) ) - Max( ( DS - MUM ),( RMSe * MLU ) ) )", "obj1": 0.3066914498141264, "obj2": 0.5446770082953926}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( MDR + ACS ),ACS ) )", "choosing": "( ( ( RMSe * ( DS * ( MUR * RRSe ) ) ) / ( MUR - ( ( MLU * RRSe ) / RCSe ) ) ) - Max( ( ( CS - DS ) - ( MUM * MUR ) ),CS ) )", "obj1": 0.30111524163568776, "obj2": 0.5491304619989041}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Const * FirstVNF_Mem_Server ) ) ) ,( ARS / DDR ) )", "choosing": "( ( MLU * MUC ) - Max( ( DS - ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.30297397769516726, "obj2": 0.5473919921802555}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,Min( Const ,MDR ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( MLU / ( MUR * MUM ) ) * CS ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.06228941054208822}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( ACS ,ARS ) ) ) ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( ( ( MLU / DS ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) ),( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( DS / DS ) ) ) ) - DS )", "obj1": 0.13940520446096655, "obj2": 0.7611802828703964}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,Max( ACS,ACS ) ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( Min( DS ,MLU ) * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( ARS / FirstVNF_Mem_Server ) / CRS ) ) ,Max( ARS,( CRS / MDR ) ) ) + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,Max( Min( ARS ,( ARS / MRS ) ),( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MLU * ( DS / RCSe ) ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,MUR ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( Min( Min( ( FirstVNF_CPU + Min( Max( ARS,ACS ) ,PN ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( RCSe - MUC ) * ( MLU + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),BR ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}, {"determining": "Max( Min( ARS ,( DDR * ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - CRS ) ) ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( CS * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "( ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ( ACS - FirstVNF_CPU_Server ) ) ,ARS ) ) ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) / ( ( RCSe - CS ) / ( MLU - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( CRS / FirstVNF_Mem ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * ( ( CS - ( MLU - Min( RRSe ,MLU ) ) ) + Min( ( ( MUC / MUM ) - RMSe ) ,Max( CS,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Max( ( PN + BR ),( MRS / Min( CRS ,( BR + BR ) ) ) ) / ( BR / RRS ) ) )", "choosing": "Max( ( Max( Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ),( MUM / MUR ) ),MUM ) * ( RCSe * RRSe ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( MRS * Min( Max( FirstVNF_RAM_Server,( RRS / ( ( ( DDR + ACS ) / FirstVNF_RAM ) - ARS ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( MLU * MUM ) + ( MUC / RCSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) / Max( PN,MDR ) ) * ( MDR * DDR ) )", "choosing": "Max( ( MLU * ( Min( Max( RRSe,( ( ( RRSe / MUC ) - Max( RRSe,DS ) ) + RCSe ) ) ,( Min( ( MUR * MUM ) ,RRSe ) / MUC ) ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Const,Max( DDR,CRS ) ) + RRS ) * BR ) * ( MDR * DDR ) )", "choosing": "Max( ( ( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) * ( ( MUM * MLU ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MDR ) - ( ( FirstVNF_RAM + PN ) * BR ) )", "choosing": "Max( ( RMSe + RCSe ),Max( MUC,( Min( RRSe ,MUR ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) )", "choosing": "Max( ( RRSe + CS ),( ( MUC / RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,Min( MDR ,( ( Const + MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) / ( ( CS + RMSe ) * ( CS + RRSe ) ) ) * ( Max( MUC,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( ( RRS - RRS ) / ACS ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( RMSe,( MUC + ( RCSe + ( ( MUR + RCSe ) + MUM ) ) ) ) / ( CS + ( ( ( MUC + MUM ) + Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - ( Max( DS,( RCSe + ( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) - ( RRSe - RCSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( Max( FirstVNF_CPU,AMS ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( Const,MRS ) ) ) )", "choosing": "( ( ( Max( ( RCSe - CS ),RRSe ) * ( MUC / RMSe ) ) + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( ( Min( Min( MUC ,MUR ) ,MUM ) / CS ) + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( DDR - FirstVNF_CPU_Server ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( Max( RMSe,( ( Min( RCSe ,MUM ) / ( ( RRSe / MUC ) + Min( RRSe ,MUC ) ) ) * ( MUM * ( ( CS * RRSe ) / ( RMSe - RCSe ) ) ) ) ) + ( Max( MLU,RCSe ) + RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( Const * FirstVNF_CPU ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( Max( MRS,BR ) / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - ( MLU - Max( Max( DS,MLU ),( Min( RRSe ,DS ) - ( MLU / MUM ) ) ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( Const + MDR ) ) * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,Max( Min( PN ,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( ( CRS - DDR ) / ( CRS + ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( Max( RCSe,CS ) * ( ( ( MLU * CS ) * ( RRSe * DS ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( FirstVNF_RAM + RRS ) ) ,( ( FirstVNF_Mem_Server / Max( Min( DDR ,MDR ),Max( BR,Min( FirstVNF_RAM_Server ,ACS ) ) ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),( MUR + CS ) ) ) * ( ( MUC * RCSe ) + RRSe ) ) ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,DS ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( DDR - ACS ) ,Max( ACS,DDR ) ) * ( ( ( RRS * ( FirstVNF_RAM - MRS ) ) + PN ) / ( ARS - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM + ACS ) - ARS ) ) / BR ) ) ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) )", "choosing": "( ( Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) * Min( ( MUR / RMSe ) ,( RCSe + MUM ) ) ) / ( Max( ( RMSe - CS ),Max( MUC,( ( RMSe * ( Max( MUM,RRSe ) * ( MUC - MLU ) ) ) * Min( MUM ,DS ) ) ) ) + ( Max( MLU,MUR ) / ( RCSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - Min( ( RRS * ( ( FirstVNF_RAM_Server / AMS ) / ( ( FirstVNF_RAM * FirstVNF_CPU ) - MRS ) ) ) ,FirstVNF_RAM ) ) )", "choosing": "Max( Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ),( ( Min( ( ( Max( ( DS + MUC ),MUM ) - ( MLU / MLU ) ) + Max( RRSe,RRSe ) ) ,MUR ) + MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - Max( ( Min( PN ,FirstVNF_Mem ) * MRS ),Min( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ,( PN - RRS ) ) ) )", "choosing": "( ( DS + Min( MUC ,MUM ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( Min( FirstVNF_CPU ,RRS ) + ( Max( Min( BR ,FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( ( MLU / ( ( Min( RRSe ,Min( MLU ,DS ) ) / ( ( MUC / MLU ) + RMSe ) ) - MUR ) ),Max( CS,( MUC / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) * DDR ) / Max( ( ( AMS / ( FirstVNF_Mem / MRS ) ) + FirstVNF_CPU_Server ),CRS ) ) - ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) )", "choosing": "( DS * Max( MUC,( ( RMSe * MUR ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( RMSe - CS ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU ) / Const ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) + Min( Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,Min( Const ,MDR ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( Min( MUC ,RMSe ) + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( PN + DDR ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / Max( PN,DDR ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( ( ( MUC + RRSe ) - MUR ) + ( CS - MLU ) ) ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RRSe / MUR ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8710343243588412}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( MUR,RMSe ) * ( DS + MUM ) )", "obj1": 0.6338289962825279, "obj2": 0.22374099216558774}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) )", "obj1": 0.483271375464684, "obj2": 0.3779238470063349}, {"determining": "Min( ( ( ARS * Const ) / PN ) ,( PN / Min( Max( ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ),PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) ),( RRSe / MUR ) )", "obj1": 0.5836431226765799, "obj2": 0.34700795846361693}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - ( PN * CRS ) ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,PN ) ,( ( PN / ( Const + MRS ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( MUR / Min( ( Min( ( ( MLU - MUC ) / ( MUC + MUR ) ) ,CS ) / RMSe ) ,Max( CS,( Min( ( RCSe * MLU ) ,Min( MUM ,MUC ) ) + Max( MUC,MUR ) ) ) ) ),RMSe ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.24774268508507108}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,( Const * FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUR ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07695975769201886}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.14869888475836432, "obj2": 0.702789572836885}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( FirstVNF_Mem * ACS ) ,FirstVNF_CPU_Server ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / DS ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RCSe + ( Min( MUR ,CS ) * ( RCSe - MUR ) ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Min( Max( ARS,Min( Min( BR ,( MDR + CRS ) ) ,CRS ) ) ,Max( ( ACS - Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( RCSe,( Max( ( MLU * MUR ),( MUR - MLU ) ) * ( RMSe + ( MUR / DS ) ) ) ) - DS )", "obj1": 0.13940520446096655, "obj2": 0.7554085007787469}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( ( MDR + FirstVNF_CPU_Server ) - Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( DDR - RRS ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) - ( MUC + MUR ) ) - ( CS + ( DS * ( ( ( ( MUM / CS ) - Max( RRSe,( RCSe + RMSe ) ) ) + ( MUM / Max( RCSe,( RCSe / MUR ) ) ) ) - ( RRSe - DS ) ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6659885051491126}, {"determining": "( ( DDR * FirstVNF_RAM ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - DS ),Min( RCSe ,( MUC + ( RCSe / ( ( RRSe * Min( RRSe ,RMSe ) ) * Max( Max( RRSe,RCSe ),RRSe ) ) ) ) ) ) + ( DS - CS ) )", "obj1": 0.4052044609665427, "obj2": 0.4587279753776345}, {"determining": "Max( Min( ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM_Server ),MRS ) - ( FirstVNF_Mem_Server * AMS ) ) ,FirstVNF_CPU_Server ),ARS )", "choosing": "( ( MUR - RRSe ) + ( Max( Min( MUM ,DS ),MUC ) + ( DS * MUR ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - MRS ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( CS ,CS ) - Min( MLU ,MUM ) ) - Max( ( ( MUC * DS ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.1449814126394052, "obj2": 0.7353869715785081}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) ) ) - DS )", "obj1": 0.0724907063197026, "obj2": 0.8195683343406337}, {"determining": "Min( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - Max( Max( ACS,FirstVNF_Mem ),PN ) ) ) ,( BR * ( ARS + MRS ) ) )", "choosing": "( ( Max( Max( MUC,MUM ),Min( MUR ,MLU ) ) * Min( ( MUC / ( ( MUM + ( ( MUR - RRSe ) - MUR ) ) - RRSe ) ) ,( RCSe + MUM ) ) ) / ( MUC + ( Max( RMSe,( MUC + RRSe ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 0.9702602230483272, "obj2": 0.02922315635243915}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( ( AMS - Min( BR ,FirstVNF_Mem ) ) ,( PN / Min( Max( ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ),PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + RMSe ) ,( MUR / MUC ) ) ) ),( RRSe / MUR ) )", "obj1": 0.5836431226765799, "obj2": 0.34700795846361693}, {"determining": "( Min( CRS ,RRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + DS ) ,( ( MUC / ( ( MUC - MUM ) + CS ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6448187896594058}, {"determining": "( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM / ( FirstVNF_Mem - Const ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( RMSe + ( MLU * RCSe ) ) / Min( RMSe ,Min( MUR ,MUR ) ) ) ) / RCSe ) ) ) / ( MUM + RRSe ) )", "obj1": 0.9219330855018587, "obj2": 0.05060345217063093}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( ( FirstVNF_Mem - ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.659261990458729}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( CRS + MDR ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * Min( MUM ,MUM ) ) - MUM ),CS ) )", "obj1": 0.3271375464684015, "obj2": 0.5257619257441648}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( PN,AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( MUC / CS ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( Max( DDR,( Max( BR,FirstVNF_Mem_Server ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + ( ACS * MRS ) ) ) * MDR ) )", "choosing": "( ( MUC * MUC ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5658824181130301}, {"determining": "( Min( FirstVNF_RAM_Server ,Max( ( ACS - Min( ( PN + DDR ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RRSe / Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( MLU ,MUM ) ) ) ),CS ) ) ) - DS )", "obj1": 0.20631970260223048, "obj2": 0.6408293918403878}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM_Server ) + FirstVNF_RAM ),Max( Max( MDR,Max( ( FirstVNF_CPU_Server + DDR ),Min( ARS ,( Max( ( AMS - FirstVNF_Mem ),CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) )", "choosing": "( ( Max( Max( ( ( MLU - ( ( MUM * RMSe ) / ( MUR / MUC ) ) ) + MUM ),RRSe ),MUR ) - Max( ( Min( ( MUM + ( Max( CS,MLU ) - CS ) ) ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( ( ( ( ACS + RRS ) - ( ( FirstVNF_RAM + PN ) * BR ) ) + AMS ) * MDR ) )", "choosing": "( Max( MUM,Max( MUR,Min( ( Min( RRSe ,Max( DS,( RMSe / CS ) ) ) / ( MLU / ( RMSe + RCSe ) ) ) ,MUM ) ) ) - ( MUC + MUR ) )", "obj1": 0.21189591078066913, "obj2": 0.6397690670274563}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( Const ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,MRS ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( RMSe - CS ) ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5594976562922017}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,BR ) + ( Min( ACS ,BR ) * FirstVNF_Mem ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,MRS ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( Max( RMSe,Min( RRSe ,RCSe ) ) / Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5568671896922542}, {"determining": "Min( Max( MDR,( ARS + ( FirstVNF_RAM_Server / ARS ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + RCSe ) ) - ( RMSe / ( Min( CS ,MUR ) / ( ( RRSe + MUR ) - Min( ( MUC - CS ) ,( RRSe + CS ) ) ) ) ) ),CS ) )", "obj1": 0.3215613382899628, "obj2": 0.5331567759522351}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( MRS * ARS ) )", "choosing": "( Min( Min( RMSe ,( RCSe + RCSe ) ) ,MUC ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9107806691449815, "obj2": 0.06407932793384148}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( FirstVNF_RAM_Server / Min( ( Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,DDR ) ) ,ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / Min( MUM ,RRSe ) ),CS ) ) - ( RMSe * Max( MUR,Max( MUM,RCSe ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5978895218011231}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Max( MDR,Max( ACS,ACS ) ) ) ) - Max( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server * RRS ) ) * MDR ) / PN ),Min( DDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,MUM ) ) ) / Max( ( ( MLU / ( ( Min( MUM ,( RRSe + CS ) ) + MUM ) + RCSe ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.2992565055762082, "obj2": 0.5514286466071145}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( MDR / ( ( AMS / RRS ) * FirstVNF_CPU_Server ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + Min( ( RMSe + Min( RCSe ,MUM ) ) ,( ( ( MLU / RRSe ) + CS ) - Min( MUR ,( CS * RMSe ) ) ) ) ) ) ) - DS )", "obj1": 0.0724907063197026, "obj2": 0.8195683343406337}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,Min( Const ,MDR ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( MLU / ( MUR * MUM ) ) * CS ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.9182156133828996, "obj2": 0.06219955911872093}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - Max( Min( ( Max( ( AMS - FirstVNF_RAM ),MRS ) - AMS ) ,FirstVNF_CPU_Server ),ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( ( MUR - RRSe ) ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.25464684014869887, "obj2": 0.5875661444884098}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5406592828323058}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * ( ( ( PN * ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_Mem_Server ) ) / BR ) * ACS ) ) ) - ( ( Min( DDR ,MRS ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( ( MUR - RRSe ) / CS ),( ( ( ( MUR * Max( MUR,Min( MLU ,CS ) ) ) + MUR ) + ( MUR * MLU ) ) + RCSe ) ) / RCSe )", "obj1": 0.2527881040892193, "obj2": 0.5887129915576814}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / AMS ) ) - FirstVNF_Mem_Server ) ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,( CS / MUR ) ) - Max( ( DS - MUM ),( RMSe * MLU ) ) )", "obj1": 0.3066914498141264, "obj2": 0.5446770082953926}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( FirstVNF_RAM + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( MUC / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) ) ) - DS )", "obj1": 0.0762081784386617, "obj2": 0.8193957083996056}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) ) / CRS ) ) ,( Const * FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUR ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / ( MUC + CS ) ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07695975769201886}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5733597888076081}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( MLU / MLU ) ,MLU ) ) - DS ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.241635687732342, "obj2": 0.5961306143996682}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( PN,PN ) ) + MDR ) ) ) ,( AMS - RRS ) )", "choosing": "( Max( RMSe,( Min( ( RMSe + MLU ) ,( MUC / ( MUC - ( Max( MUR,RMSe ) + DS ) ) ) ) - MUM ) ) - Max( ( Min( ( DS + MUM ) ,( ( RMSe - CS ) / CS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Const * FirstVNF_Mem_Server ) ) ) ,( ARS / DDR ) )", "choosing": "( ( MLU * MUC ) - Max( ( DS - ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.30297397769516726, "obj2": 0.5473919921802555}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,Min( Const ,MDR ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( ( MLU / ( MUR * MUM ) ) * CS ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.06228941054208822}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( MDR + ACS ),ACS ) )", "choosing": "( ( ( RMSe * ( DS * ( MUR * RRSe ) ) ) / ( MUR - ( ( MLU * RRSe ) / RCSe ) ) ) - Max( ( ( CS - DS ) - ( MUM * MUR ) ),CS ) )", "obj1": 0.30111524163568776, "obj2": 0.5491304619989041}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) + MDR ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RRSe - Min( MUM ,DS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,Max( ACS,ACS ) ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( Min( DS ,MLU ) * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( FirstVNF_CPU / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,MUR ) ),RMSe ) ,( ( ( MLU / RRSe ) + ( RCSe + ( RRSe - RCSe ) ) ) - DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),BR ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}, {"determining": "( ( ( Min( Min( ( FirstVNF_CPU + Min( Max( ARS,ACS ) ,PN ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( RCSe - MUC ) * ( MLU + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "Max( Min( ARS ,( DDR * ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - CRS ) ) ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( CS * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( BR + ( Max( ( FirstVNF_Mem - ACS ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( RRSe,Max( CS,( ( CS + RRSe ) / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ( ACS - FirstVNF_CPU_Server ) ) ,ARS ) ) ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) / ( ( RCSe - CS ) / ( MLU - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( CRS / FirstVNF_Mem ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * ( ( CS - ( MLU - Min( RRSe ,MLU ) ) ) + Min( ( ( MUC / MUM ) - RMSe ) ,Max( CS,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Max( ( PN + BR ),( MRS / Min( CRS ,( BR + BR ) ) ) ) / ( BR / RRS ) ) )", "choosing": "Max( ( Max( Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ),( MUM / MUR ) ),MUM ) * ( RCSe * RRSe ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( MRS * Min( Max( FirstVNF_RAM_Server,( RRS / ( ( ( DDR + ACS ) / FirstVNF_RAM ) - ARS ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( MLU * MUM ) + ( MUC / RCSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) / Max( PN,MDR ) ) * ( MDR * DDR ) )", "choosing": "Max( ( MLU * ( Min( Max( RRSe,( ( ( RRSe / MUC ) - Max( RRSe,DS ) ) + RCSe ) ) ,( Min( ( MUR * MUM ) ,RRSe ) / MUC ) ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Const,Max( DDR,CRS ) ) + RRS ) * BR ) * ( MDR * DDR ) )", "choosing": "Max( ( ( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) * ( ( MUM * MLU ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MDR ) - ( ( FirstVNF_RAM + PN ) * BR ) )", "choosing": "Max( ( RMSe + RCSe ),Max( MUC,( Min( RRSe ,MUR ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) )", "choosing": "Max( ( RRSe + CS ),( ( MUC / RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,Min( MDR ,( ( Const + MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) / ( ( CS + RMSe ) * ( CS + RRSe ) ) ) * ( Max( MUC,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( ( RRS - RRS ) / ACS ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( RMSe,( MUC + ( RCSe + ( ( MUR + RCSe ) + MUM ) ) ) ) / ( CS + ( ( ( MUC + MUM ) + Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - ( Max( DS,( RCSe + ( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) - ( RRSe - RCSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( Max( FirstVNF_CPU,AMS ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( Const,MRS ) ) ) )", "choosing": "( ( ( Max( ( RCSe - CS ),RRSe ) * ( MUC / RMSe ) ) + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( ( Min( Min( MUC ,MUR ) ,MUM ) / CS ) + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( DDR - FirstVNF_CPU_Server ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( Max( RMSe,( ( Min( RCSe ,MUM ) / ( ( RRSe / MUC ) + Min( RRSe ,MUC ) ) ) * ( MUM * ( ( CS * RRSe ) / ( RMSe - RCSe ) ) ) ) ) + ( Max( MLU,RCSe ) + RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( Const * FirstVNF_CPU ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( Max( MRS,BR ) / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - ( MLU - Max( Max( DS,MLU ),( Min( RRSe ,DS ) - ( MLU / MUM ) ) ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( Const + MDR ) ) * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,Max( Min( PN ,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( ( CRS - DDR ) / ( CRS + ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( Max( RCSe,CS ) * ( ( ( MLU * CS ) * ( RRSe * DS ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( FirstVNF_Mem / ( AMS * Max( Max( ( ACS / ( PN + FirstVNF_RAM_Server ) ),ACS ),FirstVNF_CPU ) ) ) ) ,Max( Max( DDR,MRS ),ARS ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( MUR - Min( Min( ( CS + Min( MUC ,RMSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( RRSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "Min( ( Max( FirstVNF_RAM,Max( BR,CRS ) ) * ( ( ( PN / Const ) - ( ( Const + FirstVNF_CPU ) * MDR ) ) - FirstVNF_Mem_Server ) ) ,( BR * ( ARS + MRS ) ) )", "choosing": "( RMSe / ( MUC + ( Max( MUR,Max( ( RMSe - CS ),MUC ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( RMSe - CS ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( MUR,RMSe ) * ( DS + MUM ) )", "obj1": 0.6338289962825279, "obj2": 0.22374099216558774}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) )", "obj1": 0.483271375464684, "obj2": 0.3779238470063349}, {"determining": "Min( ( ( ARS * Const ) / PN ) ,( PN / Min( Max( ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ),PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + CS ) ,( MUR / MUC ) ) ) ),( RRSe / MUR ) )", "obj1": 0.5836431226765799, "obj2": 0.34700795846361693}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - ( PN * CRS ) ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,PN ) ,( ( PN / ( Const + MRS ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( MUR / Min( ( Min( ( ( MLU - MUC ) / ( MUC + MUR ) ) ,CS ) / RMSe ) ,Max( CS,( Min( ( RCSe * MLU ) ,Min( MUM ,MUC ) ) + Max( MUC,MUR ) ) ) ) ),RMSe ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.24774268508507108}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,( Const * FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUR ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07695975769201886}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.14869888475836432, "obj2": 0.702789572836885}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( FirstVNF_Mem * ACS ) ,FirstVNF_CPU_Server ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / DS ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RCSe + ( Min( MUR ,CS ) * ( RCSe - MUR ) ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Min( Max( ARS,Min( Min( BR ,( MDR + CRS ) ) ,CRS ) ) ,Max( ( ACS - Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( RCSe,( Max( ( MLU * MUR ),( MUR - MLU ) ) * ( RMSe + ( MUR / DS ) ) ) ) - DS )", "obj1": 0.13940520446096655, "obj2": 0.7554085007787469}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( ( MDR + FirstVNF_CPU_Server ) - Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( DDR - RRS ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) - ( MUC + MUR ) ) - ( CS + ( DS * ( ( ( ( MUM / CS ) - Max( RRSe,( RCSe + RMSe ) ) ) + ( MUM / Max( RCSe,( RCSe / MUR ) ) ) ) - ( RRSe - DS ) ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6659885051491126}, {"determining": "( ( DDR * FirstVNF_RAM ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - DS ),Min( RCSe ,( MUC + ( RCSe / ( ( RRSe * Min( RRSe ,RMSe ) ) * Max( Max( RRSe,RCSe ),RRSe ) ) ) ) ) ) + ( DS - CS ) )", "obj1": 0.4052044609665427, "obj2": 0.4587279753776345}, {"determining": "Max( Min( ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM_Server ),MRS ) - ( FirstVNF_Mem_Server * AMS ) ) ,FirstVNF_CPU_Server ),ARS )", "choosing": "( ( MUR - RRSe ) + ( Max( Min( MUM ,DS ),MUC ) + ( DS * MUR ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - MRS ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( CS ,CS ) - Min( MLU ,MUM ) ) - Max( ( ( MUC * DS ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.1449814126394052, "obj2": 0.7353869715785081}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( MDR / ( ( AMS / RRS ) * FirstVNF_CPU_Server ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + Min( ( RMSe + Min( RCSe ,MUM ) ) ,( ( ( MLU / RRSe ) + CS ) - Min( MUR ,( CS * RMSe ) ) ) ) ) ) ) - DS )", "obj1": 0.0724907063197026, "obj2": 0.8195683343406337}, {"determining": "( ( PN / ( BR + Min( Min( ( Max( Max( ACS,MDR ),ACS ) + RRS ) ,Min( Min( CRS ,FirstVNF_CPU_Server ) ,( ACS / FirstVNF_Mem ) ) ) ,FirstVNF_CPU ) ) ) - FirstVNF_CPU )", "choosing": "( ( ( ( RMSe - CS ) * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / Max( DS,RMSe ) ) ) / RCSe ) ) ) / Max( MUR,( Min( ( ( Min( RMSe ,RMSe ) + MUC ) - Max( RCSe,CS ) ) ,MUC ) - ( ( MUR * Min( MUM ,MUC ) ) / MUR ) ) ) )", "obj1": 0.9628252788104089, "obj2": 0.025130412771402027}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( ( AMS - Min( BR ,FirstVNF_Mem ) ) ,( PN / Min( Max( ( ( ( FirstVNF_RAM + DDR ) / ( RRS * AMS ) ) + Min( ( ARS * FirstVNF_Mem_Server ) ,( DDR * MRS ) ) ),PN ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( MUC / ( ( Min( MUM ,DS ) / ( DS - MUR ) ) / Min( ( MUC + RMSe ) ,( MUR / MUC ) ) ) ),( RRSe / MUR ) )", "obj1": 0.5836431226765799, "obj2": 0.34700795846361693}, {"determining": "( Max( DDR,( ( ( BR - FirstVNF_CPU_Server ) - ( DDR + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.20446096654275092, "obj2": 0.6340179698824602}, {"determining": "( Min( CRS ,RRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + DS ) ,( ( MUC / ( ( MUC - MUM ) + CS ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6448187896594058}, {"determining": "( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM / ( FirstVNF_Mem - Const ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( RMSe + ( MLU * RCSe ) ) / Min( RMSe ,Min( MUR ,MUR ) ) ) ) / RCSe ) ) ) / ( MUM + RRSe ) )", "obj1": 0.9219330855018587, "obj2": 0.05060345217063093}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "( ( FirstVNF_Mem - ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.659261990458729}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( Max( DDR,( Max( BR,FirstVNF_Mem_Server ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + ( ACS * MRS ) ) ) * MDR ) )", "choosing": "( ( MUC * MUC ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5658824181130301}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( CRS + MDR ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * Min( MUM ,MUM ) ) - MUM ),CS ) )", "obj1": 0.3271375464684015, "obj2": 0.5257619257441648}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( Const ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,MRS ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( RMSe - CS ) ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5594976562922017}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( PN,AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( MUC / CS ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( ( ( BR + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU,Const ) ) ,PN ) ) * ( FirstVNF_Mem / FirstVNF_CPU ) ) * MRS ) )", "choosing": "( ( MUR / ( CS + ( CS - ( RCSe + ( RRSe - RCSe ) ) ) ) ) - ( Min( ( Max( ( RMSe - MUC ),DS ) - DS ) ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9144981412639405, "obj2": 0.06204509493935512}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( MRS * ARS ) )", "choosing": "( Min( Min( RMSe ,( RCSe + RCSe ) ) ,MUC ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9107806691449815, "obj2": 0.06407932793384148}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,BR ) + ( Min( ACS ,BR ) * FirstVNF_Mem ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,MRS ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( Max( RMSe,Min( RRSe ,RCSe ) ) / Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5568671896922542}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( FirstVNF_RAM_Server / Min( ( Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,DDR ) ) ,ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / Min( MUM ,RRSe ) ),CS ) ) - ( RMSe * Max( MUR,Max( MUM,RCSe ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5978895218011231}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM_Server ) + FirstVNF_RAM ),Max( Max( MDR,Max( ( FirstVNF_CPU_Server + DDR ),Min( ARS ,( Max( ( AMS - FirstVNF_Mem ),CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) )", "choosing": "( ( Max( Max( ( ( MLU - ( ( MUM * RMSe ) / ( MUR / MUC ) ) ) + MUM ),RRSe ),MUR ) - Max( ( Min( ( MUM + ( Max( CS,MLU ) - CS ) ) ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Max( MDR,Max( ACS,ACS ) ) ) ) - Max( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_Mem_Server * RRS ) ) * MDR ) / PN ),Min( DDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,MUM ) ) ) / Max( ( ( MLU / ( ( Min( MUM ,( RRSe + CS ) ) + MUM ) + RCSe ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.2992565055762082, "obj2": 0.5514286466071145}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) ) ) - DS )", "obj1": 0.0724907063197026, "obj2": 0.8195683343406337}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "( Max( ( PN + FirstVNF_CPU ),Min( Const ,( ARS * ( BR - Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) + Max( BR,BR ) )", "choosing": "( ( DS / RCSe ) - Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( RRSe * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.3215613382899628, "obj2": 0.5273893770684686}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + RCSe ) ) - ( RMSe / ( Min( CS ,MUR ) / ( ( RRSe + MUR ) - Min( CS ,( RMSe + CS ) ) ) ) ) ),CS ) )", "obj1": 0.3159851301115242, "obj2": 0.5340847051095994}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - Max( Min( ( Max( ( AMS - FirstVNF_RAM ),MRS ) - AMS ) ,FirstVNF_CPU_Server ),ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( ( MUR - RRSe ) ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.25464684014869887, "obj2": 0.5875661444884098}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5406592828323058}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * ( ( ( PN * ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_Mem_Server ) ) / BR ) * ACS ) ) ) - ( ( Min( DDR ,MRS ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( ( MUR - RRSe ) / CS ),( ( ( ( MUR * Max( MUR,Min( MLU ,CS ) ) ) + MUR ) + ( MUR * MLU ) ) + RCSe ) ) / RCSe )", "obj1": 0.2527881040892193, "obj2": 0.5887129915576814}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( FirstVNF_RAM + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( MUC / RMSe ) / DS ) ) + ( RMSe / MUC ) ) ) ),( ( ( MUM - RMSe ) / ( RMSe / MUR ) ) * ( RMSe + ( MUR / DS ) ) ) ) - DS )", "obj1": 0.0762081784386617, "obj2": 0.8193957083996056}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) ) / CRS ) ) ,( Const * FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUR ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / ( MUC + CS ) ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07695975769201886}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5733597888076081}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( MLU / MLU ) ,MLU ) ) - DS ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.241635687732342, "obj2": 0.5961306143996682}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Const * FirstVNF_Mem_Server ) ) ) ,( ARS / DDR ) )", "choosing": "( ( MLU * MUC ) - Max( ( DS - ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.30297397769516726, "obj2": 0.5473919921802555}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( MDR + ACS ),ACS ) )", "choosing": "( ( ( RMSe * ( DS * ( MUR * RRSe ) ) ) / ( MUR - ( ( MLU * RRSe ) / RCSe ) ) ) - Max( ( ( CS - DS ) - ( MUM * MUR ) ),CS ) )", "obj1": 0.30111524163568776, "obj2": 0.5491304619989041}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / AMS ) ) - FirstVNF_Mem_Server ) ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,( CS / MUR ) ) - Max( ( DS - MUM ),( RMSe * MLU ) ) )", "obj1": 0.3066914498141264, "obj2": 0.5446770082953926}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( Min( Min( Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( ( MRS - AMS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( PN,PN ) ) + MDR ) ) ) ,( AMS - RRS ) )", "choosing": "( Max( RMSe,( Min( ( RMSe + MLU ) ,( MUC / ( MUC - ( Max( MUR,RMSe ) + DS ) ) ) ) - MUM ) ) - Max( ( Min( ( DS + MUM ) ,( ( RMSe - CS ) / CS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( ( Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ),CS ) )", "obj1": 0.3066914498141264, "obj2": 0.5446770082953926}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( FirstVNF_CPU / CRS ) / CRS ) ) ,Max( RRS,ACS ) ) + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,( RMSe / Min( MUC ,DS ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + ( RCSe + ( RRSe - RCSe ) ) ) - DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( Min( Min( ( FirstVNF_CPU + Min( Max( ARS,ACS ) ,PN ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( RCSe - MUC ) * ( MLU + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) + MDR ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RRSe - Min( MUM ,DS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),BR ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "Max( Min( ARS ,( DDR * ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - CRS ) ) ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( CS * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( ( ( ( ( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU ) / Const ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) + Min( Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,Min( Const ,MDR ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( Min( MUC ,RMSe ) + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( BR + ( Max( ( FirstVNF_Mem - ACS ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( RRSe,Max( CS,( ( CS + RRSe ) / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ( ACS - FirstVNF_CPU_Server ) ) ,ARS ) ) ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) / ( ( RCSe - CS ) / ( MLU - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( CRS / FirstVNF_Mem ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * ( ( CS - ( MLU - Min( RRSe ,MLU ) ) ) + Min( ( ( MUC / MUM ) - RMSe ) ,Max( CS,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Max( ( PN + BR ),( MRS / Min( CRS ,( BR + BR ) ) ) ) / ( BR / RRS ) ) )", "choosing": "Max( ( Max( Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ),( MUM / MUR ) ),MUM ) * ( RCSe * RRSe ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( MRS * Min( Max( FirstVNF_RAM_Server,( RRS / ( ( ( DDR + ACS ) / FirstVNF_RAM ) - ARS ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( MLU * MUM ) + ( MUC / RCSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) / Max( PN,MDR ) ) * ( MDR * DDR ) )", "choosing": "Max( ( MLU * ( Min( Max( RRSe,( ( ( RRSe / MUC ) - Max( RRSe,DS ) ) + RCSe ) ) ,( Min( ( MUR * MUM ) ,RRSe ) / MUC ) ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Const,Max( DDR,CRS ) ) + RRS ) * BR ) * ( MDR * DDR ) )", "choosing": "Max( ( ( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) * ( ( MUM * MLU ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MDR ) - ( ( FirstVNF_RAM + PN ) * BR ) )", "choosing": "Max( ( RMSe + RCSe ),Max( MUC,( Min( RRSe ,MUR ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) )", "choosing": "Max( ( RRSe + CS ),( ( MUC / RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,Min( MDR ,( ( Const + MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) / ( ( CS + RMSe ) * ( CS + RRSe ) ) ) * ( Max( MUC,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( ( RRS - RRS ) / ACS ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( RMSe,( MUC + ( RCSe + ( ( MUR + RCSe ) + MUM ) ) ) ) / ( CS + ( ( ( MUC + MUM ) + Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) - Max( PN,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR + RRSe ) * Min( CS ,( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,Min( AMS ,Const ) )", "choosing": "Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( Min( MUC ,CS ) / ( RMSe - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( DS ,DS ) - RRSe ) - ( Max( DS,( RCSe + ( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) - ( RRSe - RCSe ) ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ) ,( ( PN / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) * ( Max( FirstVNF_CPU,AMS ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( Const,MRS ) ) ) )", "choosing": "( ( ( Max( ( RCSe - CS ),RRSe ) * ( MUC / RMSe ) ) + CS ) / Max( ( ( RRSe - MUM ) + MUR ),( ( ( Min( Min( MUC ,MUR ) ,MUM ) / CS ) + MUR ) - Max( MLU,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS / ( DDR - FirstVNF_CPU_Server ) ) ,( Const - ARS ) )", "choosing": "( Max( ( ( RRSe / DS ) + Min( RRSe ,DS ) ),Max( ( MLU - DS ),( MUM / MUR ) ) ) + ( ( Max( RMSe,( ( Min( RCSe ,MUM ) / ( ( RRSe / MUC ) + Min( RRSe ,MUC ) ) ) * ( MUM * ( ( CS * RRSe ) / ( RMSe - RCSe ) ) ) ) ) + ( Max( MLU,RCSe ) + RMSe ) ) - Max( Min( RRSe ,CS ),( RRSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + ( Const * FirstVNF_CPU ) ) / ( ( ( BR - MRS ) - ( DDR + MDR ) ) * Max( ( Max( MRS,BR ) / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( RRSe - ( MLU - Max( Max( DS,MLU ),( Min( RRSe ,DS ) - ( MLU / MUM ) ) ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ,( ( ( MLU / RRSe ) + CS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS + ( Const + MDR ) ) * ( ( DDR * RRS ) - Min( DDR ,FirstVNF_RAM ) ) ) ,Max( Min( PN ,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( ( CRS - DDR ) / ( CRS + ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( Max( RCSe,CS ) * ( ( ( MLU * CS ) * ( RRSe * DS ) ) - MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( Max( DDR,( AMS + FirstVNF_CPU ) ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,ARS ) ) ) - ( PN + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( DS * MUM ) + CS ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM,Max( BR,CRS ) ) * ( ( ( PN / Const ) - ( ( Const + FirstVNF_CPU ) * MDR ) ) - FirstVNF_Mem_Server ) ) ,( BR * ( ARS + MRS ) ) )", "choosing": "( RMSe / ( MUC + ( Max( MUR,Max( ( RMSe - CS ),MUC ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( MUR,RMSe ) * ( DS + MUM ) )", "obj1": 0.6338289962825279, "obj2": 0.22374099216558774}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( ACS ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( MUR,RMSe ) * CS )", "obj1": 0.5446096654275093, "obj2": 0.35541228556828536}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) )", "obj1": 0.483271375464684, "obj2": 0.3779238470063349}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( PN + DDR ) ,( PN - PN ) ) ),AMS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( MUR,RMSe ) * ( DS + MUM ) ),( RRSe / MUR ) ) - DS )", "obj1": 0.5836431226765799, "obj2": 0.2582756425918711}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,( Const * FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUR ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07695975769201886}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( DDR,( FirstVNF_CPU - RRS ) ) - ( ( FirstVNF_RAM * Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( MLU / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + CS ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.14869888475836432, "obj2": 0.702789572836885}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - ( PN * CRS ) ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,PN ) ,( ( PN / ( Const + MRS ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( MUR / Min( ( Min( ( ( MLU - MUC ) / ( MUC + MUR ) ) ,CS ) / RMSe ) ,Max( CS,( Min( ( RCSe * MLU ) ,Min( MUM ,MUC ) ) + Max( MUC,MUR ) ) ) ) ),RMSe ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.24774268508507108}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( ( MDR + FirstVNF_CPU_Server ) - Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( DDR - RRS ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) - ( MUC + MUR ) ) - ( CS + ( DS * ( ( ( ( MUM / CS ) - Max( RRSe,( RCSe + RMSe ) ) ) + ( MUM / Max( RCSe,( RCSe / MUR ) ) ) ) - ( RRSe - DS ) ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6659885051491126}, {"determining": "( ( DDR * FirstVNF_RAM ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - DS ),Min( RCSe ,( MUC + ( RCSe / ( ( RRSe * Min( RRSe ,RMSe ) ) * Max( Max( RRSe,RCSe ),RRSe ) ) ) ) ) ) + ( DS - CS ) )", "obj1": 0.4052044609665427, "obj2": 0.4587279753776345}, {"determining": "Max( Min( ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM_Server ),MRS ) - ( FirstVNF_Mem_Server * AMS ) ) ,FirstVNF_CPU_Server ),ARS )", "choosing": "( ( MUR - RRSe ) + ( Max( Min( MUM ,DS ),MUC ) + ( DS * MUR ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - MRS ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( CS ,CS ) - Min( MLU ,MUM ) ) - Max( ( ( MUC * DS ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.1449814126394052, "obj2": 0.7353869715785081}, {"determining": "( Min( Max( ARS,Min( Min( BR ,( MDR + CRS ) ) ,CRS ) ) ,Max( ( ACS - Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - Max( Min( ( ( Const + MRS ) / AMS ) ,RRS ),( FirstVNF_Mem_Server * ACS ) ) ) ) )", "choosing": "( Max( RCSe,( Max( ( MLU * MUR ),( MUR - MLU ) ) * ( RMSe + ( MUR / DS ) ) ) ) - DS )", "obj1": 0.13940520446096655, "obj2": 0.7554085007787469}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Max( DDR,( ( ( BR - FirstVNF_CPU_Server ) - ( DDR + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.20446096654275092, "obj2": 0.6340179698824602}, {"determining": "( Min( CRS ,RRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + DS ) ,( ( MUC / ( ( MUC - MUM ) + CS ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6448187896594058}, {"determining": "( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM / ( FirstVNF_Mem - Const ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( RMSe + ( MLU * RCSe ) ) / Min( RMSe ,Min( MUR ,MUR ) ) ) ) / RCSe ) ) ) / ( MUM + RRSe ) )", "obj1": 0.9219330855018587, "obj2": 0.05060345217063093}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( ( PN / ( BR + Min( Min( ( Max( Max( ACS,MDR ),ACS ) + RRS ) ,Min( Min( CRS ,FirstVNF_CPU_Server ) ,( ACS / FirstVNF_Mem ) ) ) ,FirstVNF_CPU ) ) ) - FirstVNF_CPU )", "choosing": "( ( ( ( RMSe - CS ) * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / Max( DS,RMSe ) ) ) / RCSe ) ) ) / Max( MUR,( Min( ( ( Min( RMSe ,RMSe ) + MUC ) - Max( RCSe,CS ) ) ,MUC ) - ( ( MUR * Min( MUM ,MUC ) ) / MUR ) ) ) )", "obj1": 0.9628252788104089, "obj2": 0.025130412771402027}, {"determining": "( ( FirstVNF_Mem - ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.659261990458729}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( CRS + MDR ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * Min( MUM ,MUM ) ) - MUM ),CS ) )", "obj1": 0.3271375464684015, "obj2": 0.5257619257441648}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,Min( ( ( ACS - MRS ) + Const ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / RMSe ) - ( MUR / DS ) )", "obj1": 0.9275092936802974, "obj2": 0.03622607152568976}, {"determining": "( ( PN / ( BR + Min( Min( ( Max( MDR,FirstVNF_RAM_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) - FirstVNF_CPU )", "choosing": "( ( ( ( RMSe - ( ( RRSe + MUR ) - Min( CS ,( RMSe + CS ) ) ) ) * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / Max( MUM,CS ) )", "obj1": 0.9572490706319703, "obj2": 0.028322706188809}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,BR ) + ( Min( ACS ,BR ) * FirstVNF_Mem ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,MRS ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( Max( RMSe,Min( RRSe ,RCSe ) ) / Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5568671896922542}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM_Server ) + FirstVNF_RAM ),Max( Max( MDR,Max( ( FirstVNF_CPU_Server + DDR ),Min( ARS ,( Max( ( AMS - FirstVNF_Mem ),CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) )", "choosing": "( ( Max( Max( ( ( MLU - ( ( MUM * RMSe ) / ( MUR / MUC ) ) ) + MUM ),RRSe ),MUR ) - Max( ( Min( ( MUM + ( Max( CS,MLU ) - CS ) ) ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( ( ( BR + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU,Const ) ) ,PN ) ) * ( FirstVNF_Mem / FirstVNF_CPU ) ) * MRS ) )", "choosing": "( ( MUR / ( CS + ( CS - ( RCSe + ( RRSe - RCSe ) ) ) ) ) - ( Min( ( Max( ( RMSe - MUC ),DS ) - DS ) ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9144981412639405, "obj2": 0.06204509493935512}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( MRS * ARS ) )", "choosing": "( Min( Min( RMSe ,( RCSe + RCSe ) ) ,MUC ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9107806691449815, "obj2": 0.06407932793384148}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "( Max( DDR,( Max( BR,FirstVNF_Mem_Server ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + ( ACS * MRS ) ) ) * MDR ) )", "choosing": "( ( MUC * MUC ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5658824181130301}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( FirstVNF_RAM_Server / Min( ( Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,DDR ) ) ,ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / Min( MUM ,RRSe ) ),CS ) ) - ( RMSe * Max( MUR,Max( MUM,RCSe ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5978895218011231}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ( FirstVNF_CPU_Server + DDR ),Min( ARS ,Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ) ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) - Max( ( Max( ( RCSe - ( RCSe * ( DS + RRSe ) ) ),MUR ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.2992565055762082, "obj2": 0.5501268499706392}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "( Max( ( PN + FirstVNF_CPU ),Min( Const ,( ARS * ( BR - Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) + Max( BR,BR ) )", "choosing": "( ( DS / RCSe ) - Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( RRSe * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.3215613382899628, "obj2": 0.5273893770684686}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + RCSe ) ) - ( RMSe / ( Min( CS ,MUR ) / ( ( RRSe + MUR ) - Min( CS ,( RMSe + CS ) ) ) ) ) ),CS ) )", "obj1": 0.3159851301115242, "obj2": 0.5340847051095994}, {"determining": "( Max( DDR,CRS ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) ) ) ) / RCSe )", "obj1": 0.2788104089219331, "obj2": 0.5622734063073711}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( FirstVNF_Mem * ACS ) ,FirstVNF_CPU_Server ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / DS ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RCSe + ( Min( MUR ,CS ) * ( RCSe - MUR ) ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * ( ( ( PN * ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_Mem_Server ) ) / BR ) * ACS ) ) ) - ( ( Min( DDR ,MRS ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( ( MUR - RRSe ) / CS ),( ( ( ( MUR * Max( MUR,Min( MLU ,CS ) ) ) + MUR ) + ( MUR * MLU ) ) + RCSe ) ) / RCSe )", "obj1": 0.2527881040892193, "obj2": 0.5887129915576814}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,( Min( FirstVNF_Mem ,ACS ) / FirstVNF_Mem ) ) / CRS ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Min( DS ,MLU ) * Min( MUM ,( RCSe - MUM ) ) ) ) / RCSe )", "obj1": 0.28066914498141265, "obj2": 0.5587279078396185}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( ( Const - FirstVNF_CPU_Server ) + ( CRS / FirstVNF_RAM_Server ) ) ,Max( Min( FirstVNF_Mem_Server ,MDR ),( Max( DDR,FirstVNF_RAM_Server ) * ( ARS + FirstVNF_CPU_Server ) ) ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ),( FirstVNF_CPU_Server - ( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) ) ) ) )", "choosing": "( Max( RCSe,( ( ( MUM - RMSe ) / RCSe ) * ( RMSe + ( MUR / DS ) ) ) ) - DS )", "obj1": 0.13940520446096655, "obj2": 0.7554085007787469}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) ) / CRS ) ) ,( Const * FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUR ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / ( MUC + CS ) ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07695975769201886}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5733597888076081}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - Max( Min( ( Max( ( AMS - FirstVNF_RAM ),MRS ) - AMS ) ,FirstVNF_CPU_Server ),ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( ( MUR - RRSe ) ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.25464684014869887, "obj2": 0.5875661444884098}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5406592828323058}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( MLU / MLU ) ,MLU ) ) - DS ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.241635687732342, "obj2": 0.5961306143996682}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Const * FirstVNF_Mem_Server ) ) ) ,( ARS / DDR ) )", "choosing": "( ( MLU * MUC ) - Max( ( DS - ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.30297397769516726, "obj2": 0.5473919921802555}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "Min( Min( MRS ,Max( MDR,Max( ( Min( CRS ,RRS ) - ( MRS / FirstVNF_CPU ) ),ACS ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + RCSe ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.30855018587360594, "obj2": 0.5432119471544293}, {"determining": "( ( ( Min( Min( Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( ( MRS - AMS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( PN,PN ) ) + MDR ) ) ) ,( AMS - RRS ) )", "choosing": "( Max( RMSe,( Min( ( RMSe + MLU ) ,( MUC / ( MUC - ( Max( MUR,RMSe ) + DS ) ) ) ) - MUM ) ) - Max( ( Min( ( DS + MUM ) ,( ( RMSe - CS ) / CS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( MDR + ACS ),ACS ) )", "choosing": "( ( ( RMSe * ( DS * ( MUR * RRSe ) ) ) / ( MUR - ( ( MLU * RRSe ) / RCSe ) ) ) - Max( ( ( CS - DS ) - ( MUM * MUR ) ),CS ) )", "obj1": 0.30111524163568776, "obj2": 0.5491304619989041}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + RRSe ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) + MDR ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RRSe - Min( MUM ,DS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "( PN - ( BR + Min( Const ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Max( ( ( ( ( MLU + MUM ) * MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / AMS ) ) - FirstVNF_Mem_Server ) ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,( CS / MUR ) ) - Max( ( DS - MUM ),( RMSe * MLU ) ) )", "obj1": 0.3066914498141264, "obj2": 0.5446770082953926}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),BR ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,( DDR - FirstVNF_CPU_Server ) ) - ( MDR - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( RRSe - ( Max( RRSe,MLU ) + MUR ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.25464684014869887, "obj2": 0.5875661444884098}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( ( Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ),CS ) )", "obj1": 0.3066914498141264, "obj2": 0.5446770082953926}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( FirstVNF_CPU / CRS ) / CRS ) ) ,Max( RRS,ACS ) ) + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,( RMSe / Min( MUC ,DS ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + ( RCSe + ( RRSe - RCSe ) ) ) - DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( ( Min( Min( ( FirstVNF_CPU + Min( Max( ARS,ACS ) ,PN ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( MUR / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( RCSe - MUC ) * ( MLU + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "Max( Min( ARS ,( DDR * ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - CRS ) ) ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( CS * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( RMSe - CS ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU ) / Const ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) + Min( Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,Min( Const ,MDR ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( Min( MUC ,RMSe ) + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( BR + ( Max( ( FirstVNF_Mem - ACS ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( RRSe,Max( CS,( ( CS + RRSe ) / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ( ACS - FirstVNF_CPU_Server ) ) ,ARS ) ) ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) / ( ( RCSe - CS ) / ( MLU - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( CRS / FirstVNF_Mem ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * ( ( CS - ( MLU - Min( RRSe ,MLU ) ) ) + Min( ( ( MUC / MUM ) - RMSe ) ,Max( CS,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Max( ( PN + BR ),( MRS / Min( CRS ,( BR + BR ) ) ) ) / ( BR / RRS ) ) )", "choosing": "Max( ( Max( Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ),( MUM / MUR ) ),MUM ) * ( RCSe * RRSe ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( MRS * Min( Max( FirstVNF_RAM_Server,( RRS / ( ( ( DDR + ACS ) / FirstVNF_RAM ) - ARS ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( MLU * MUM ) + ( MUC / RCSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,FirstVNF_RAM ) / Max( PN,MDR ) ) * ( MDR * DDR ) )", "choosing": "Max( ( MLU * ( Min( Max( RRSe,( ( ( RRSe / MUC ) - Max( RRSe,DS ) ) + RCSe ) ) ,( Min( ( MUR * MUM ) ,RRSe ) / MUC ) ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( ( ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) + Min( ( ARS - Max( ARS,FirstVNF_RAM_Server ) ) ,MRS ) ) - CRS ) / FirstVNF_Mem_Server ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( MUM,MUR ),Min( MLU ,MLU ) ) * ( Max( ( MUR / DS ),( ( ( MUR / ( DS + MUC ) ) * RCSe ) - MLU ) ) / ( MLU / RRSe ) ) ),Max( Max( CS,( ( ( Max( MLU,MLU ) + ( ( MUC * MUC ) - Min( RMSe ,CS ) ) ) - MLU ) * ( ( CS * ( MLU - ( CS - MUR ) ) ) * ( RCSe / RRSe ) ) ) ),( ( MLU * ( MUM - DS ) ) / ( RMSe - ( MUM - MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Const,Max( DDR,CRS ) ) + RRS ) * BR ) * ( MDR * DDR ) )", "choosing": "Max( ( ( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) * ( ( MUM * MLU ) * MUR ) ),( MUR + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,MDR ) - ( ( FirstVNF_RAM + PN ) * BR ) )", "choosing": "Max( ( RMSe + RCSe ),Max( MUC,( Min( RRSe ,MUR ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MDR ) - Max( DDR,Max( MDR,DDR ) ) )", "choosing": "Max( ( RRSe + CS ),( ( MUC / RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,Min( MDR ,( ( Const + MRS ) * AMS ) ) ) ) )", "choosing": "( ( ( RCSe / CS ) / ( ( CS + RMSe ) * ( CS + RRSe ) ) ) * ( Max( MUC,MLU ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,( AMS - Min( BR ,FirstVNF_Mem ) ) ) - Max( CRS,FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MLU ) / Max( ( RCSe + ( RMSe / ( ( Max( ( CS / MUM ),Max( RCSe,MUR ) ) * MLU ) + MUR ) ) ),( Max( CS,MLU ) - ( ( RCSe - Max( CS,Max( Max( MUM,MUC ),( MUC + RMSe ) ) ) ) - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ( ( RRS - RRS ) / ACS ) ) - Min( ARS ,CRS ) )", "choosing": "( Max( RMSe,( MUC + ( RCSe + ( ( MUR + RCSe ) + MUM ) ) ) ) / ( CS + ( ( ( MUC + MUM ) + Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,ACS ) / ( PN - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) )", "choosing": "( ( Min( CS ,MUC ) / ( CS + RRSe ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( Min( DDR ,MRS ) - ( ( Min( PN ,AMS ) * CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( RCSe / Max( ( CS / ( CS * Min( CS ,( RRSe - Max( CS,MUM ) ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( Max( DDR,( AMS + FirstVNF_CPU ) ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,ARS ) ) ) - ( PN + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( DS * MUM ) + CS ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * Min( RRS ,( BR - ( BR - PN ) ) ) ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( MLU / RCSe ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.570631970260223, "obj2": 0.23719798609444778}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( ACS ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( MUR,RMSe ) * CS )", "obj1": 0.5446096654275093, "obj2": 0.35541228556828536}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( MUR,RMSe ) * ( DS + MUM ) )", "obj1": 0.6338289962825279, "obj2": 0.22374099216558774}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,( Const * FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUR ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07695975769201886}, {"determining": "( ( PN / Min( Max( MRS,( FirstVNF_Mem / PN ) ) ,FirstVNF_RAM_Server ) ) - ( ARS * MDR ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( ( MUR - ( RCSe + CS ) ) - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),( ( ( ( DS + RCSe ) * RMSe ) + MUM ) * RCSe ) ) / ( MUM - DS ) ) )", "obj1": 0.6840148698884758, "obj2": 0.1631939869596998}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( Max( DDR,ACS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( ( MUC / CS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.16333217778199915}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) )", "obj1": 0.483271375464684, "obj2": 0.3779238470063349}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) )", "choosing": "( ( ( MUC * RCSe ) - ( Max( ( ( RMSe - CS ) / RCSe ),MUC ) * ( MUC - MLU ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) )", "obj1": 0.4851301115241636, "obj2": 0.3620803431795722}, {"determining": "( ( DDR * FirstVNF_RAM ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - DS ),Min( RCSe ,( MUC + ( RCSe / ( ( RRSe * Min( RRSe ,RMSe ) ) * Max( Max( RRSe,RCSe ),RRSe ) ) ) ) ) ) + ( DS - CS ) )", "obj1": 0.4052044609665427, "obj2": 0.4587279753776345}, {"determining": "Max( Min( ( Max( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM_Server ),MRS ) - ( FirstVNF_Mem_Server * AMS ) ) ,FirstVNF_CPU_Server ),ARS )", "choosing": "( ( MUR - RRSe ) + ( Max( Min( MUM ,DS ),MUC ) + ( DS * MUR ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( ( MDR + FirstVNF_CPU_Server ) - Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( DDR - RRS ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) - ( MUC + MUR ) ) - ( CS + ( DS * ( ( ( ( MUM / CS ) - Max( RRSe,( RCSe + RMSe ) ) ) + ( MUM / Max( RCSe,( RCSe / MUR ) ) ) ) - ( RRSe - DS ) ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6659885051491126}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( FirstVNF_Mem * ACS ) ,FirstVNF_CPU_Server ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / DS ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RCSe + ( Min( MUR ,CS ) * ( RCSe - MUR ) ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM / ( FirstVNF_Mem - Const ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( RMSe + ( MLU * RCSe ) ) / Min( RMSe ,Min( MUR ,MUR ) ) ) ) / RCSe ) ) ) / ( MUM + RRSe ) )", "obj1": 0.9219330855018587, "obj2": 0.05060345217063093}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( ( PN / ( BR + Min( Min( ( Max( Max( ACS,MDR ),ACS ) + RRS ) ,Min( Min( CRS ,FirstVNF_CPU_Server ) ,( ACS / FirstVNF_Mem ) ) ) ,FirstVNF_CPU ) ) ) - FirstVNF_CPU )", "choosing": "( ( ( ( RMSe - CS ) * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / Max( DS,RMSe ) ) ) / RCSe ) ) ) / Max( MUR,( Min( ( ( Min( RMSe ,RMSe ) + MUC ) - Max( RCSe,CS ) ) ,MUC ) - ( ( MUR * Min( MUM ,MUC ) ) / MUR ) ) ) )", "obj1": 0.9628252788104089, "obj2": 0.025130412771402027}, {"determining": "( Min( CRS ,RRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + DS ) ,( ( MUC / ( ( MUC - MUM ) + CS ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6448187896594058}, {"determining": "( ( FirstVNF_Mem - ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.659261990458729}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( MDR - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( CS ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.19888475836431227, "obj2": 0.6410073416102534}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( RMSe / RMSe ) / MLU ) ) + ( MUC / CS ) ) ) ),DS ) - DS )", "obj1": 0.09293680297397769, "obj2": 0.7802402191597134}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( CRS + MDR ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * Min( MUM ,MUM ) ) - MUM ),CS ) )", "obj1": 0.3271375464684015, "obj2": 0.5257619257441648}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,Min( ( ( ACS - MRS ) + Const ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / RMSe ) - ( MUR / DS ) )", "obj1": 0.9275092936802974, "obj2": 0.03622607152568976}, {"determining": "( ( PN / ( BR + Min( Min( ( Max( MDR,FirstVNF_RAM_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) - FirstVNF_CPU )", "choosing": "( ( ( ( RMSe - ( ( RRSe + MUR ) - Min( CS ,( RMSe + CS ) ) ) ) * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / Max( MUM,CS ) )", "obj1": 0.9572490706319703, "obj2": 0.028322706188809}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( ( ( BR + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU,Const ) ) ,PN ) ) * ( FirstVNF_Mem / FirstVNF_CPU ) ) * MRS ) )", "choosing": "( ( MUR / ( CS + ( CS - ( RCSe + ( RRSe - RCSe ) ) ) ) ) - ( Min( ( Max( ( RMSe - MUC ),DS ) - DS ) ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9144981412639405, "obj2": 0.06204509493935512}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( MRS * ARS ) )", "choosing": "( Min( Min( RMSe ,( RCSe + RCSe ) ) ,MUC ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9107806691449815, "obj2": 0.06407932793384148}, {"determining": "( Max( DDR,( Max( BR,FirstVNF_Mem_Server ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + ( ACS * MRS ) ) ) * MDR ) )", "choosing": "( ( MUC * MUC ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5658824181130301}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( FirstVNF_RAM_Server / Min( ( Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,DDR ) ) ,ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / Min( MUM ,RRSe ) ),CS ) ) - ( RMSe * Max( MUR,Max( MUM,RCSe ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5978895218011231}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM_Server ) + FirstVNF_RAM ),Max( Max( MDR,Max( ( FirstVNF_CPU_Server + DDR ),Min( ARS ,( Max( ( AMS - FirstVNF_Mem ),CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) )", "choosing": "( ( Max( Max( ( ( MLU - ( ( MUM * RMSe ) / ( MUR / MUC ) ) ) + MUM ),RRSe ),MUR ) - Max( ( Min( ( MUM + ( Max( CS,MLU ) - CS ) ) ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( Max( ( PN + FirstVNF_CPU ),Min( Const ,( ARS * ( BR - Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) + Max( BR,BR ) )", "choosing": "( ( DS / RCSe ) - Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( RRSe * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.3215613382899628, "obj2": 0.5273893770684686}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "( Max( ( PN + FirstVNF_CPU ),Min( Const ,( ARS * ( ACS - Min( ARS ,( Const * FirstVNF_CPU_Server ) ) ) ) ) ) + Max( BR,BR ) )", "choosing": "( ( DS / RCSe ) - Max( ( RRSe * RCSe ),( DS / Max( ( RRSe * ( ( Max( MUR,RRSe ) * ( MUC - MLU ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5560579284652909}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + RCSe ) ) - ( RMSe / ( Min( CS ,MUR ) / ( ( RRSe + MUR ) - Min( CS ,( RMSe + CS ) ) ) ) ) ),CS ) )", "obj1": 0.3159851301115242, "obj2": 0.5340847051095994}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,BR ) + ( Min( ACS ,BR ) * FirstVNF_Mem ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,MRS ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( Max( RMSe,Min( RRSe ,RCSe ) ) / Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5568671896922542}, {"determining": "( Max( DDR,CRS ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) ) ) ) / RCSe )", "obj1": 0.2788104089219331, "obj2": 0.5622734063073711}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * ( ( ( PN * ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_Mem_Server ) ) / BR ) * ACS ) ) ) - ( ( Min( DDR ,MRS ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( ( MUR - RRSe ) / CS ),( ( ( ( MUR * Max( MUR,Min( MLU ,CS ) ) ) + MUR ) + ( MUR * MLU ) ) + RCSe ) ) / RCSe )", "obj1": 0.2527881040892193, "obj2": 0.5887129915576814}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,( Min( FirstVNF_Mem ,ACS ) / FirstVNF_Mem ) ) / CRS ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Min( DS ,MLU ) * Min( MUM ,( RCSe - MUM ) ) ) ) / RCSe )", "obj1": 0.28066914498141265, "obj2": 0.5587279078396185}, {"determining": "( ( ( Min( Min( Max( ( ( RRS - RRS ) * FirstVNF_RAM ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( ( CRS / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( Min( ( MUC / ( ( Max( ( Max( MUR,RMSe ) + Max( CS,RCSe ) ),( MUC - ( RMSe + RMSe ) ) ) * ( MUC - MUM ) ) * ( ( MUC * CS ) * RRSe ) ) ) ,( RCSe + MUM ) ) - ( ( Min( DS ,Max( ( RCSe + MLU ),( Min( CS ,MUC ) - MUC ) ) ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9851301115241635, "obj2": 0.0070892854853644134}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( ( ( RMSe - DS ) / RCSe ),MUC ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) ) / CRS ) ) ,( PN / ( MDR / BR ) ) )", "choosing": "( ( MUM + RRSe ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / ( MUC + CS ) ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07695975769201886}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5733597888076081}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - Max( Min( ( Max( ( AMS - FirstVNF_RAM ),MRS ) - AMS ) ,FirstVNF_CPU_Server ),ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( ( MUR - RRSe ) ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.25464684014869887, "obj2": 0.5875661444884098}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( MLU / MLU ) ,MLU ) ) - DS ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.241635687732342, "obj2": 0.5961306143996682}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5406592828323058}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Const * FirstVNF_Mem_Server ) ) ) ,( ARS / DDR ) )", "choosing": "( ( MLU * MUC ) - Max( ( DS - ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.30297397769516726, "obj2": 0.5473919921802555}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ( FirstVNF_CPU_Server + DDR ),Min( ARS ,Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server * MRS ) ) ) ) ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) - Max( ( Max( ( RCSe - ( RCSe * ( DS + RRSe ) ) ),MUR ) / ( MUR - ( Min( CS ,CS ) - Min( ( MUR / DS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.2992565055762082, "obj2": 0.5501268499706392}, {"determining": "Min( Max( ( RRS / FirstVNF_Mem_Server ),( AMS + ( AMS / ACS ) ) ) ,Max( Min( ARS ,( DDR * RRS ) ),ACS ) )", "choosing": "( Min( DS ,MLU ) - Max( ( ( MUR + RMSe ) + DS ),( ( RCSe / CS ) - RMSe ) ) )", "obj1": 0.30855018587360594, "obj2": 0.541860227560312}, {"determining": "( PN - ( FirstVNF_CPU_Server * Max( Min( Max( Const,ACS ) ,( Max( FirstVNF_Mem_Server,Min( MDR ,Max( FirstVNF_Mem,CRS ) ) ) - FirstVNF_CPU_Server ) ),CRS ) ) )", "choosing": "( Max( ( Max( ( ( Min( DS ,Max( DS,MLU ) ) - MUM ) * ( RRSe - MUM ) ),( RCSe - RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MUR * RCSe ) - DS ) )", "obj1": 0.9925650557620818, "obj2": 0.0025248669404042633}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( PN,PN ) ) + MDR ) ) ) ,( AMS - RRS ) )", "choosing": "( Max( RMSe,( Min( ( RMSe + MLU ) ,( MUC / ( MUC - ( Max( MUR,RMSe ) + DS ) ) ) ) - MUM ) ) - Max( ( Min( ( DS + MUM ) ,( ( RMSe - CS ) / CS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( DDR * ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / AMS ) ) - FirstVNF_Mem_Server ) ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,( CS / MUR ) ) - Max( ( DS - MUM ),( RMSe * MLU ) ) )", "obj1": 0.3066914498141264, "obj2": 0.5446770082953926}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( MDR + ACS ),ACS ) )", "choosing": "( ( ( RMSe * ( DS * ( MUR * RRSe ) ) ) / ( MUR - ( ( MLU * RRSe ) / RCSe ) ) ) - Max( ( ( CS - DS ) - ( MUM * MUR ) ),CS ) )", "obj1": 0.30111524163568776, "obj2": 0.5491304619989041}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) + MDR ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RRSe - Min( MUM ,DS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "Max( ( Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) / MRS ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( MDR - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,( MUC + MUR ) ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.25464684014869887, "obj2": 0.5875661444884098}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( ( Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ),CS ) )", "obj1": 0.3066914498141264, "obj2": 0.5446770082953926}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ( FirstVNF_CPU_Server + DDR ),Min( ARS ,Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ) ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) - Max( ( Max( ( RCSe - ( RCSe * ( DS + RRSe ) ) ),MUR ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.2992565055762082, "obj2": 0.5501268499706392}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "( ( ( Min( Min( Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( ( MRS - AMS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + RRSe ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "Max( Min( ARS ,( DDR * ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - CRS ) ) ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( CS * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5243107466322541}, {"determining": "( ( PN / Max( PN,Max( FirstVNF_RAM,MDR ) ) ) - FirstVNF_CPU )", "choosing": "( Min( ( MUM * ( RCSe * ( Min( Min( DS ,MUC ) ,MUM ) / MUM ) ) ) ,MUC ) / Max( MUM,CS ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ( Min( Min( Max( Min( ( PN / FirstVNF_Mem ) ,( ARS / MRS ) ),( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( FirstVNF_CPU / CRS ) / CRS ) ) ,Max( RRS,ACS ) ) + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,( RMSe / Min( MUC ,DS ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + ( RCSe + ( RRSe - RCSe ) ) ) - DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( PN - ( BR + Min( Const ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Max( ( ( ( ( MLU + MUM ) * MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + RRSe ) / MLU ) * ( MLU + ( MUR + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),BR ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}, {"determining": "Min( ( Max( FirstVNF_RAM,Max( BR,CRS ) ) * ( ( ( PN / Const ) - ( ( Const + FirstVNF_CPU ) * MDR ) ) - FirstVNF_Mem_Server ) ) ,( BR * ( ARS + MRS ) ) )", "choosing": "( RMSe / ( MUC + ( Max( MUR,Max( ( RMSe - CS ),MUC ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( RMSe - CS ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU ) / Const ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) + Min( Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,Min( Const ,MDR ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( Min( MUC ,RMSe ) + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( BR + ( Max( ( FirstVNF_Mem - ACS ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( RRSe,Max( CS,( ( CS + RRSe ) / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( ( FirstVNF_Mem - ( ACS - FirstVNF_CPU_Server ) ) ,ARS ) ) ) - ( PN + FirstVNF_CPU ) )", "choosing": "( ( MLU / DS ) / ( ( RCSe - CS ) / ( MLU - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,( CRS / FirstVNF_Mem ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / ( AMS * Const ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * ( ( CS - ( MLU - Min( RRSe ,MLU ) ) ) + Min( ( ( MUC / MUM ) - RMSe ) ,Max( CS,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - DDR ) ,( Max( ( PN + BR ),( MRS / Min( CRS ,( BR + BR ) ) ) ) / ( BR / RRS ) ) )", "choosing": "Max( ( Max( Max( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ),( MUM / MUR ) ),MUM ) * ( RCSe * RRSe ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( MRS * Min( Max( FirstVNF_RAM_Server,( RRS / ( ( ( DDR + ACS ) / FirstVNF_RAM ) - ARS ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( MLU * MUM ) + ( MUC / RCSe ) ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( ( PN / ( Min( Max( ( ( RRS - RRS ) * FirstVNF_RAM ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) - ( ( BR / ( BR - FirstVNF_RAM_Server ) ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( Max( MUR,MUC ) + Max( CS,RCSe ) ),( MUC - ( RMSe + RMSe ) ) ) * ( MUC - MUM ) ) * ( ( MUC * CS ) * RRSe ) ) / ( ( ( RMSe + Max( Max( MLU,RRSe ),( DS / ( MUM - ( MUR / MUM ) ) ) ) ) / ( MLU * ( DS / DS ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,MRS ) - ( ( Min( PN ,AMS ) * CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( RCSe / Max( ( CS / ( CS * Min( CS ,( RRSe - Max( CS,MUM ) ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * Min( RRS ,( BR - ( BR - PN ) ) ) ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( MLU / RCSe ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.570631970260223, "obj2": 0.23719798609444778}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,( Const * FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUR ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07695975769201886}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.45539033457249073, "obj2": 0.3751571698271038}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( ( ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( RRSe / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6412639405204461, "obj2": 0.19965490401101835}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( Const ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,Max( MDR,FirstVNF_CPU ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( MUR / DS ) - ( RMSe - ( RMSe / Min( RMSe ,Min( MUR ,MUR ) ) ) ) ),( RMSe - CS ) ) / RCSe )", "obj1": 0.06505576208178439, "obj2": 0.8445535322625675}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) ) )", "choosing": "( ( ( MUC * RCSe ) - ( Max( ( ( RMSe - CS ) / RCSe ),MUC ) * ( MUC - MLU ) ) ) / ( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) )", "obj1": 0.6189591078066915, "obj2": 0.2371232547187654}, {"determining": "( ( DDR * FirstVNF_RAM ) - Max( FirstVNF_RAM,AMS ) )", "choosing": "( Max( ( Max( ( RMSe - MUC ),DS ) - DS ),Min( RCSe ,( MUC + ( RCSe / ( ( RRSe * Min( RRSe ,RMSe ) ) * Max( Max( RRSe,RCSe ),RRSe ) ) ) ) ) ) + ( DS - CS ) )", "obj1": 0.4052044609665427, "obj2": 0.4587279753776345}, {"determining": "( ( PN / Min( MRS ,ACS ) ) - ( ( DDR + FirstVNF_CPU ) / AMS ) )", "choosing": "( Max( ( RRSe - RRSe ),Min( RCSe ,Min( MUR ,RCSe ) ) ) + ( ( Min( RMSe ,( MUM * Max( MUM,CS ) ) ) + ( RMSe / ( ( MUR + Max( ( DS + MUC ),MLU ) ) - ( CS + ( ( DS + RRSe ) + DS ) ) ) ) ) - RMSe ) )", "obj1": 0.40892193308550184, "obj2": 0.4578081915096128}, {"determining": "Max( Min( ARS ,( DDR * BR ) ),ARS )", "choosing": "( ( MUR - RRSe ) + ( ( Max( ( MUR * RCSe ),( DS - MLU ) ) - ( ( MUM - MUR ) - ( DS * MUR ) ) ) + ( Min( Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( Min( RCSe ,CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) ) ,( RMSe / RCSe ) ) / Min( Max( CS,Min( Min( CS ,CS ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( MUR + MLU ) ) ) ) )", "obj1": 0.3475836431226766, "obj2": 0.5239001725173879}, {"determining": "Min( Max( DDR,ACS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( ( MUC / CS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.16333217778199915}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( MUR,RMSe ) * ( DS + MUM ) )", "obj1": 0.6338289962825279, "obj2": 0.22374099216558774}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / RRSe ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - ( RMSe - MUC ) ) - RMSe ) / ( MUR + Max( RRSe,( RCSe + RMSe ) ) ) )", "obj1": 0.15613382899628253, "obj2": 0.6666810412658265}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( FirstVNF_Mem * ACS ) ,FirstVNF_CPU_Server ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / DS ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RCSe + ( Min( MUR ,CS ) * ( RCSe - MUR ) ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( Max( MDR,FirstVNF_CPU ) - ( FirstVNF_RAM / ( FirstVNF_Mem - Const ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( RMSe + ( MLU * RCSe ) ) / Min( RMSe ,Min( MUR ,MUR ) ) ) ) / RCSe ) ) ) / ( MUM + RRSe ) )", "obj1": 0.9219330855018587, "obj2": 0.05060345217063093}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( Min( CRS ,RRS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + DS ) ,( ( MUC / ( ( MUC - MUM ) + CS ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + ( MUC + CS ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6448187896594058}, {"determining": "( ( FirstVNF_Mem - ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.18029739776951673, "obj2": 0.659261990458729}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( MDR - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( CS ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.19888475836431227, "obj2": 0.6410073416102534}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( ( MDR + FirstVNF_CPU_Server ) - Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( DDR - RRS ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) - ( MUC + MUR ) ) - ( CS + ( DS * ( ( ( ( MUM / CS ) - Max( RRSe,( RCSe + RMSe ) ) ) + ( MUM / Max( RCSe,( RCSe / MUR ) ) ) ) - ( RRSe - DS ) ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6659885051491126}, {"determining": "( ( ( Min( ( Min( BR ,Max( FirstVNF_Mem_Server,ACS ) ) - BR ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RMSe + MUM ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9739776951672863, "obj2": 0.01683442105312505}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( RMSe / RMSe ) / MLU ) ) + ( MUC / CS ) ) ) ),DS ) - DS )", "obj1": 0.09293680297397769, "obj2": 0.7802402191597134}, {"determining": "( ( PN / ( BR + Min( Min( ( Max( Max( ACS,MDR ),ACS ) + RRS ) ,Min( Min( CRS ,FirstVNF_CPU_Server ) ,( ACS / FirstVNF_Mem ) ) ) ,FirstVNF_CPU ) ) ) - FirstVNF_CPU )", "choosing": "( ( ( ( RMSe - CS ) * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / Max( DS,RMSe ) ) ) / RCSe ) ) ) / Max( MUR,( Min( ( ( Min( RMSe ,RMSe ) + MUC ) - Max( RCSe,CS ) ) ,MUC ) - ( ( MUR * Min( MUM ,MUC ) ) / MUR ) ) ) )", "obj1": 0.9628252788104089, "obj2": 0.025130412771402027}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,Min( ( ( ACS - MRS ) + Const ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / RMSe ) - ( MUR / DS ) )", "obj1": 0.9275092936802974, "obj2": 0.03622607152568976}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM_Server ) + FirstVNF_RAM ),Max( Max( MDR,Max( ( FirstVNF_CPU_Server + DDR ),Min( ARS ,( Max( ( AMS - FirstVNF_Mem ),CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) )", "choosing": "( ( Max( Max( ( ( MLU - ( ( MUM * RMSe ) / ( MUR / MUC ) ) ) + MUM ),RRSe ),MUR ) - Max( ( Min( ( MUM + ( Max( CS,MLU ) - CS ) ) ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( Max( DDR,( Max( BR,FirstVNF_Mem_Server ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + ( ACS * MRS ) ) ) * MDR ) )", "choosing": "( ( MUC * MUC ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5658824181130301}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,BR ) + ( Min( ACS ,BR ) * FirstVNF_Mem ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,MRS ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( Max( RMSe,Min( RRSe ,RCSe ) ) / Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5568671896922542}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( ( ( BR + Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_CPU,( PN + FirstVNF_CPU ) ) ) ,PN ) ) * ( FirstVNF_Mem / FirstVNF_CPU ) ) * MRS ) )", "choosing": "( ( MUR / ( CS + ( CS - ( RCSe + ( RRSe - RCSe ) ) ) ) ) - ( Min( ( Max( ( RMSe - MUC ),DS ) - DS ) ,MUC ) / ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) )", "obj1": 0.9144981412639405, "obj2": 0.06148092283842251}, {"determining": "Min( Min( MRS ,( Min( Min( MRS ,( FirstVNF_RAM / ( Const * FirstVNF_Mem_Server ) ) ) ,Max( Min( ARS ,( DDR * RRS ) ),ACS ) ) / ( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) + MDR ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RRSe - Min( MUM ,DS ) ) - Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ),CS ) )", "obj1": 0.3345724907063197, "obj2": 0.5257344002230683}, {"determining": "( ( PN / ( BR + Min( Min( ( Max( MDR,FirstVNF_RAM_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) - FirstVNF_CPU )", "choosing": "( ( ( ( RMSe - ( ( RRSe + MUR ) - Min( CS ,( RMSe + CS ) ) ) ) * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / Max( MUM,CS ) )", "obj1": 0.9572490706319703, "obj2": 0.028322706188809}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( MRS * ARS ) )", "choosing": "( Min( Min( RMSe ,( RCSe + RCSe ) ) ,MUC ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9107806691449815, "obj2": 0.06407932793384148}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( FirstVNF_RAM_Server / Min( ( Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,DDR ) ) ,ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / Min( MUM ,RRSe ) ),CS ) ) - ( RMSe * Max( MUR,Max( MUM,RCSe ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5978895218011231}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( Max( ( PN + FirstVNF_CPU ),Min( Const ,( ARS * ( BR - Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) + Max( BR,BR ) )", "choosing": "( ( DS / RCSe ) - Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( RRSe * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.3215613382899628, "obj2": 0.5273893770684686}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_CPU / CRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( BR * CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( MUC,MUC ) * ( MUC - MLU ) ) ) ),( MUR + CS ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5503965204047563}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( BR * FirstVNF_Mem_Server ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),( MLU / MLU ) )", "obj1": 0.9460966542750929, "obj2": 0.030196166899741996}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + RCSe ) ) - ( RMSe / ( Min( CS ,MUR ) / ( ( RRSe + MUR ) - Min( CS ,( RMSe + CS ) ) ) ) ) ),CS ) )", "obj1": 0.3159851301115242, "obj2": 0.5340847051095994}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "( Max( DDR,CRS ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( Max( CS,RCSe ),Max( RMSe,MUR ) ) - MUR ) ) ) ) / RCSe )", "obj1": 0.2788104089219331, "obj2": 0.5622734063073711}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * ( ( ( PN * ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_Mem_Server ) ) / BR ) * ACS ) ) ) - ( ( Min( DDR ,MRS ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( ( MUR - RRSe ) / CS ),( ( ( ( MUR * Max( MUR,Min( MLU ,CS ) ) ) + MUR ) + ( MUR * MLU ) ) + RCSe ) ) / RCSe )", "obj1": 0.2527881040892193, "obj2": 0.5887129915576814}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,( Min( FirstVNF_Mem ,ACS ) / FirstVNF_Mem ) ) / CRS ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Min( DS ,MLU ) * Min( MUM ,( RCSe - MUM ) ) ) ) / RCSe )", "obj1": 0.28066914498141265, "obj2": 0.5587279078396185}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( CRS + MDR ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * Min( MUM ,MUM ) ) - MUM ),CS ) )", "obj1": 0.3271375464684015, "obj2": 0.5257619257441648}, {"determining": "( PN - ( ( Min( ( Max( FirstVNF_CPU_Server,CRS ) - DDR ) ,DDR ) - AMS ) * Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( ( CS - Min( MLU ,( DS + RRSe ) ) ),( MUC / ( ( Min( RCSe ,MLU ) + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - DS ) )", "obj1": 0.9851301115241635, "obj2": 0.006564292171286463}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Const * FirstVNF_Mem_Server ) ) ) ,( ARS / DDR ) )", "choosing": "( ( MLU * MUC ) - Max( ( DS - ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.30297397769516726, "obj2": 0.5473919921802555}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) ) / CRS ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( MUM + RRSe ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( RMSe + MUC ) / ( MUC + CS ) ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07695975769201886}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5733597888076081}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - Max( Min( ( Max( ( AMS - FirstVNF_RAM ),MRS ) - AMS ) ,FirstVNF_CPU_Server ),ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( ( MUR - RRSe ) ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.25464684014869887, "obj2": 0.5875661444884098}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ARS * FirstVNF_Mem_Server ) ) ) ,Max( Min( ARS ,( DDR * RRS ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( ( RRSe - Min( MUM ,DS ) ) - ( RCSe - MUC ) ) ) ),CS ) )", "obj1": 0.3066914498141264, "obj2": 0.5434027346688458}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( MLU / MLU ) ,MLU ) ) - DS ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.241635687732342, "obj2": 0.5961306143996682}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5406592828323058}, {"determining": "Min( Min( MRS ,Max( MDR,Max( ACS,ACS ) ) ) ,Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + ( Min( CS ,( MUC + MUR ) ) - ( Max( RRSe,MLU ) + MUR ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.29739776951672864, "obj2": 0.5479425717201934}, {"determining": "( PN - ( FirstVNF_CPU_Server * Max( Min( Max( Const,ACS ) ,( Max( FirstVNF_Mem_Server,Min( MDR ,Max( FirstVNF_Mem,CRS ) ) ) - FirstVNF_CPU_Server ) ),CRS ) ) )", "choosing": "( Max( ( Max( ( ( Min( DS ,Max( DS,MLU ) ) - MUM ) * ( RRSe - MUM ) ),( RCSe - RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MUR * RCSe ) - DS ) )", "obj1": 0.9925650557620818, "obj2": 0.0025248669404042633}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( PN,PN ) ) + MDR ) ) ) ,( AMS - RRS ) )", "choosing": "( Max( RMSe,( Min( ( RMSe + MLU ) ,( MUC / ( MUC - ( Max( MUR,RMSe ) + DS ) ) ) ) - MUM ) ) - Max( ( Min( ( DS + MUM ) ,( ( RMSe - CS ) / CS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "Min( Max( ( RRS / FirstVNF_Mem_Server ),( AMS + ( AMS / ACS ) ) ) ,Max( Min( ARS ,( DDR * RRS ) ),ACS ) )", "choosing": "( Min( DS ,MLU ) - Max( ( ( MUR + RMSe ) + DS ),( ( RCSe / CS ) - RMSe ) ) )", "obj1": 0.30855018587360594, "obj2": 0.541860227560312}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( ( ( BR + Min( Max( FirstVNF_RAM,Max( FirstVNF_CPU,Const ) ) ,PN ) ) * Const ) * MRS ) )", "choosing": "( ( MUR / ( CS + ( CS - ( RCSe + ( RRSe - RCSe ) ) ) ) ) - ( Min( MLU ,MUC ) / MUR ) )", "obj1": 0.912639405204461, "obj2": 0.06354245477292424}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) + MDR ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RRSe - Min( MUM ,DS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) + MDR ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MUR ) / ( MUR - ( Min( ( MUR - RRSe ) ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.25464684014869887, "obj2": 0.5875661444884098}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( ( ( RMSe - DS ) / RCSe ),MUC ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + RRSe ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "( PN - ( BR + Min( Const ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Max( ( ( ( ( MLU + MUM ) * MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / FirstVNF_RAM_Server ) ),BR ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}, {"determining": "( ( ( Min( Min( Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( ( MRS - AMS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( FirstVNF_CPU / CRS ) / CRS ) ) ,Max( RRS,ACS ) ) + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,( RMSe / Min( MUC ,DS ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + ( RCSe + ( RRSe - RCSe ) ) ) - DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( PN / Max( PN,Max( FirstVNF_RAM,MDR ) ) ) - FirstVNF_CPU )", "choosing": "( Min( ( MUM * ( RCSe * ( Min( Min( DS ,MUC ) ,MUM ) / MUM ) ) ) ,MUC ) / Max( MUM,CS ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / FirstVNF_CPU_Server ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( MDR,Max( ACS,ACS ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( CS + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + RRSe ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782067}, {"determining": "( ( ( Min( Min( Max( Min( ( PN / FirstVNF_Mem ) ,( ARS / MRS ) ),( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}, {"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( Max( DDR,( AMS + FirstVNF_CPU ) ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,ARS ) ) ) - ( PN + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( DS * MUM ) + CS ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_RAM,Max( BR,CRS ) ) * ( ( ( PN / Const ) - ( ( Const + FirstVNF_CPU ) * MDR ) ) - FirstVNF_Mem_Server ) ) ,( BR * ( ARS + MRS ) ) )", "choosing": "( RMSe / ( MUC + ( Max( MUR,Max( ( RMSe - CS ),MUC ) ) / ( Min( MUR ,CS ) + ( MUC + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( RMSe - CS ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( CRS * FirstVNF_RAM ) * FirstVNF_CPU ) / Const ) - Max( FirstVNF_Mem,FirstVNF_CPU ) ) + Min( Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,Min( ARS ,FirstVNF_RAM ) ) / CRS ) ) ,Min( Const ,MDR ) ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( MLU + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( Min( MUC ,RMSe ) + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_RAM_Server ) * ( RRS - ( ( BR + ( Max( ( FirstVNF_Mem - ACS ),FirstVNF_Mem_Server ) + ( ( CRS / DDR ) * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * CS ),Min( Max( RRSe,Max( CS,( ( CS + RRSe ) / MUR ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( ( FirstVNF_Mem - ACS ) - ( MRS / ( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( MUM,Max( RRSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( Min( Max( ( ( RRS - RRS ) * FirstVNF_RAM ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) - ( ( BR / ( BR - FirstVNF_RAM_Server ) ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( Max( MUR,MUC ) + Max( CS,RCSe ) ),( MUC - ( RMSe + RMSe ) ) ) * ( MUC - MUM ) ) * ( ( MUC * CS ) * RRSe ) ) / ( ( ( RMSe + Max( Max( MLU,RRSe ),( DS / ( MUM - ( MUR / MUM ) ) ) ) ) / ( MLU * ( DS / DS ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * Min( RRS ,( BR - ( BR - PN ) ) ) ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( MLU / RCSe ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.570631970260223, "obj2": 0.23719798609444778}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.3847583643122677, "obj2": 0.44609428986370137}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,DDR ) / CRS ) ) ,( Const * FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( ( RRSe * MLU ) * CS ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07685012650331098}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.45539033457249073, "obj2": 0.3751571698271038}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( Const ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,Max( MDR,FirstVNF_CPU ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( MUR / DS ) - ( RMSe - ( RMSe / Min( RMSe ,Min( MUR ,MUR ) ) ) ) ),( RMSe - CS ) ) / RCSe )", "obj1": 0.06505576208178439, "obj2": 0.8445535322625675}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) ) )", "choosing": "( ( ( MUC * RCSe ) - ( Max( ( ( RMSe - CS ) / RCSe ),MUC ) * ( MUC - MLU ) ) ) / ( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) )", "obj1": 0.6189591078066915, "obj2": 0.2371232547187654}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / ( PN / ( ARS * MDR ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( RCSe * ( MUC - RCSe ) ) ) ),CS ) )", "obj1": 0.4479553903345725, "obj2": 0.3782798117323175}, {"determining": "Min( Min( MRS ,( ARS + Min( CRS ,RRS ) ) ) ,Max( ARS,ACS ) )", "choosing": "( ( MLU + ( Min( MUM ,RCSe ) - MLU ) ) - Max( ( ( RRSe - Min( ( MLU - Max( MUM,( MUC * RMSe ) ) ) ,DS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.34572490706319703, "obj2": 0.5158796825016075}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( MUR,RMSe ) * ( DS + MUM ) )", "obj1": 0.6338289962825279, "obj2": 0.22374099216558774}, {"determining": "( Max( ( ( ( ( PN / FirstVNF_Mem_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( Min( MUM ,RRSe ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6412639405204461, "obj2": 0.19960487774337857}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / RRSe ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - ( RMSe - MUC ) ) - RMSe ) / ( MUR + Max( RRSe,( RCSe + RMSe ) ) ) )", "obj1": 0.15613382899628253, "obj2": 0.6666810412658265}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ( FirstVNF_Mem * ACS ) ,FirstVNF_CPU_Server ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( DS / DS ) / DS ) ) + ( RMSe / MUC ) ) ) ),( RCSe + ( Min( MUR ,CS ) * ( RCSe - MUR ) ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,FirstVNF_CPU_Server ) - ( ( MDR + FirstVNF_CPU_Server ) - Max( ( RRS / ARS ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( DDR - RRS ) / ( ( MRS - RRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) - ( MUC + MUR ) ) - ( CS + ( DS * ( ( ( ( MUM / CS ) - Max( RRSe,( RCSe + RMSe ) ) ) + ( MUM / Max( RCSe,( RCSe / MUR ) ) ) ) - ( RRSe - DS ) ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6659885051491126}, {"determining": "( ( ( FirstVNF_Mem_Server * AMS ) - FirstVNF_CPU_Server ) + ( ( ( BR + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( FirstVNF_Mem / FirstVNF_CPU ) ) * MRS ) )", "choosing": "( ( MUR / ( Min( Max( CS,MLU ) ,DS ) + ( CS - ( RCSe + ( Max( ( RRSe / MUC ),MUM ) - RCSe ) ) ) ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9107806691449815, "obj2": 0.06400034637873553}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "( ( AMS + ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( CS / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( ( MUC * CS ) * MLU ) ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( ( RMSe + MUM ) * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6446240002537368}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( Max( DDR,AMS ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * Min( CS ,( MUR / MUM ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6406114185146071}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ( ( PN - ( PN - PN ) ) * DDR ) + PN ),Min( ACS ,MRS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( CS ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Max( DS,DS ),Max( RRSe,CS ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6157755229818022}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.654275092936803, "obj2": 0.17130304362970722}, {"determining": "( ( PN / ( BR + Min( Min( ( Max( Max( ACS,MDR ),ACS ) + RRS ) ,Min( Min( CRS ,FirstVNF_CPU_Server ) ,( ACS / FirstVNF_Mem ) ) ) ,FirstVNF_CPU ) ) ) - FirstVNF_CPU )", "choosing": "( ( ( ( RMSe - CS ) * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / Max( DS,RMSe ) ) ) / RCSe ) ) ) / Max( MUR,( Min( ( ( Min( RMSe ,RMSe ) + MUC ) - Max( RCSe,CS ) ) ,MUC ) - ( ( MUR * Min( MUM ,MUC ) ) / MUR ) ) ) )", "obj1": 0.9628252788104089, "obj2": 0.025130412771402027}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.912639405204461, "obj2": 0.038306684105462376}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ( Min( ( Min( BR ,Max( FirstVNF_Mem_Server,ACS ) ) - BR ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RMSe + MUM ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9739776951672863, "obj2": 0.01683442105312505}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( RMSe / RMSe ) / MLU ) ) + ( MUC / CS ) ) ) ),DS ) - DS )", "obj1": 0.09293680297397769, "obj2": 0.7802402191597134}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( FirstVNF_Mem - MDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( MUR * ( ( RCSe * MUM ) * ( MUC - ( ( RCSe - CS ) - ( CS * CS ) ) ) ) ) ),CS ) )", "obj1": 0.33271375464684017, "obj2": 0.5172555217415391}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,BR ) + ( Min( ACS ,BR ) * FirstVNF_Mem ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,MRS ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( Max( RMSe,Min( RRSe ,RCSe ) ) / Max( Max( MUC,RCSe ),Min( MUR ,MLU ) ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5568671896922542}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( ( MDR / PN ) ,Const ),PN ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR / Max( ( DS / MUR ),DS ) ) - ( ( ( MLU + ( Min( MUM ,RCSe ) - MLU ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Max( CS,( Min( CS ,RRSe ) + MUC ) ) ) ) ),CS ) )", "obj1": 0.949814126394052, "obj2": 0.0254270221311868}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / CRS ) ) ,Max( ( ( Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( CRS + MDR ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) * FirstVNF_RAM_Server ) * ( MDR * DDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * Min( MUM ,MUM ) ) - MUM ),CS ) )", "obj1": 0.3271375464684015, "obj2": 0.5257619257441648}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( FirstVNF_RAM_Server / Min( ( Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,DDR ) ) ,ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / Min( MUM ,RRSe ) ),CS ) ) - ( RMSe * Max( MUR,Max( MUM,RCSe ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5978895218011231}, {"determining": "Min( Max( DDR,ACS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( ( MUC / CS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.16333217778199915}, {"determining": "( Max( DDR,( Max( BR,FirstVNF_Mem_Server ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + ( ACS * MRS ) ) ) * MDR ) )", "choosing": "( ( MUC * MUC ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5658824181130301}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * ( ( ( PN * ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_Mem_Server ) ) / BR ) * ACS ) ) ) - ( ( Min( DDR ,MRS ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( ( MUR - RRSe ) / CS ),( ( ( ( MUR * Max( MUR,Min( MLU ,CS ) ) ) + MUR ) + ( MUR * MLU ) ) + RCSe ) ) / RCSe )", "obj1": 0.2527881040892193, "obj2": 0.5887129915576814}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUR / ( CS + ( CS - ( MLU / DS ) ) ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9070631970260223, "obj2": 0.07526298727196667}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_CPU / CRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( BR * CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( MUC,MUC ) * ( MUC - MLU ) ) ) ),( MUR + CS ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5503965204047563}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "( ( PN / FirstVNF_Mem ) - ( PN + ( MDR - FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( ( RCSe - CS ) / ( RMSe - RCSe ) ) )", "obj1": 0.9423791821561338, "obj2": 0.03204437522043263}, {"determining": "( Max( DDR,( ( ARS + ARS ) - MRS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.25464684014869887, "obj2": 0.5837744874456303}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,Min( ( ( ACS - MRS ) + Const ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / RMSe ) - ( MUR / DS ) )", "obj1": 0.9275092936802974, "obj2": 0.03622607152568976}, {"determining": "Min( Min( ( DDR * RRS ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - Max( ( DS - ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.037250822458092206}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "( Max( ( PN + FirstVNF_CPU ),Min( Const ,( ARS * ( BR - Min( ARS ,FirstVNF_Mem_Server ) ) ) ) ) + Max( BR,BR ) )", "choosing": "( ( DS / RCSe ) - Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( RRSe * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.3215613382899628, "obj2": 0.5273893770684686}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( PN / Const ) - ( ( Const + FirstVNF_CPU ) * ( FirstVNF_CPU * ARS ) ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( MUC + ( ( RCSe / DS ) / Min( RMSe ,MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.27695167286245354, "obj2": 0.5637286168709106}, {"determining": "( PN - ( ( Min( ( Max( FirstVNF_CPU_Server,CRS ) - DDR ) ,DDR ) - AMS ) * Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( ( CS - Min( MLU ,( DS + RRSe ) ) ),( MUC / ( ( Min( RCSe ,MLU ) + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - DS ) )", "obj1": 0.9851301115241635, "obj2": 0.006564292171286463}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( BR * FirstVNF_Mem_Server ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),( MLU / MLU ) )", "obj1": 0.9460966542750929, "obj2": 0.030196166899741996}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Const * FirstVNF_Mem_Server ) ) ) ,( ARS / DDR ) )", "choosing": "( ( MLU * MUC ) - Max( ( DS - ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.30297397769516726, "obj2": 0.5473919921802555}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( ( ( RMSe - DS ) / RCSe ),MUC ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + Max( BR,FirstVNF_CPU_Server ) ) * RRS ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RCSe + RCSe ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.31970260223048325, "obj2": 0.5329915845280588}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5733597888076081}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,( Min( FirstVNF_Mem ,ACS ) / FirstVNF_Mem ) ) / CRS ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Min( DS ,MLU ) * Min( MUM ,( RCSe - MUM ) ) ) ) / RCSe )", "obj1": 0.28066914498141265, "obj2": 0.5587279078396185}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ARS * FirstVNF_Mem_Server ) ) ) ,Max( Min( ARS ,( DDR * RRS ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( ( RRSe - Min( MUM ,DS ) ) - ( RCSe - MUC ) ) ) ),CS ) )", "obj1": 0.3066914498141264, "obj2": 0.5434027346688458}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( MLU / MLU ) ,MLU ) ) - DS ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.241635687732342, "obj2": 0.5961306143996682}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5406592828323058}, {"determining": "Min( Min( MRS ,Max( MDR,Max( ACS,ACS ) ) ) ,Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + ( Min( CS ,( MUC + MUR ) ) - ( Max( RRSe,MLU ) + MUR ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.29739776951672864, "obj2": 0.5479425717201934}, {"determining": "Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + RCSe ) ) - ( RMSe / ( Min( CS ,MUR ) / ( ( RRSe + MUR ) - Min( CS ,( RMSe + CS ) ) ) ) ) ),CS ) )", "obj1": 0.3159851301115242, "obj2": 0.5340847051095994}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / ( ( ( DDR / ACS ) + ARS ) - ( FirstVNF_CPU / Max( Const,MRS ) ) ) ) ) * Min( ( CRS + Const ) ,( Min( Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Max( FirstVNF_CPU,( PN - ( Max( FirstVNF_Mem,AMS ) * MDR ) ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( Min( MUM ,RCSe ),MUR ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.2788104089219331, "obj2": 0.5590625785684238}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM_Server ) + FirstVNF_RAM ),Max( Max( MDR,Max( ( FirstVNF_CPU_Server + DDR ),Min( ARS ,( Max( ( AMS - FirstVNF_Mem ),CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) )", "choosing": "( ( Max( Max( ( ( MLU - ( ( MUM * RMSe ) / ( MUR / MUC ) ) ) + MUM ),RRSe ),MUR ) - Max( ( Min( ( MUM + ( Max( CS,MLU ) - CS ) ) ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( PN - ( FirstVNF_CPU_Server * Max( Min( Max( Const,ACS ) ,( Max( FirstVNF_Mem_Server,Min( MDR ,Max( FirstVNF_Mem,CRS ) ) ) - FirstVNF_CPU_Server ) ),CRS ) ) )", "choosing": "( Max( ( Max( ( ( Min( DS ,Max( DS,MLU ) ) - MUM ) * ( RRSe - MUM ) ),( RCSe - RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MUR * RCSe ) - DS ) )", "obj1": 0.9925650557620818, "obj2": 0.0025248669404042633}, {"determining": "( ( ( Min( Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ,PN ) - Min( PN ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RCSe + ( CS * CS ) ) - ( ( ( ( ( CS + MLU ) * RMSe ) - Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) ) / MUC ) / MUM ) )", "obj1": 0.9776951672862454, "obj2": 0.010408142571013941}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( DDR - ( CRS + MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ),CS ) )", "obj1": 0.929368029739777, "obj2": 0.0350679930990895}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( PN,PN ) ) + MDR ) ) ) ,( AMS - RRS ) )", "choosing": "( Max( RMSe,( Min( ( RMSe + MLU ) ,( MUC / ( MUC - ( Max( MUR,RMSe ) + DS ) ) ) ) - MUM ) ) - Max( ( Min( ( DS + MUM ) ,( ( RMSe - CS ) / CS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "Min( Max( ( RRS / FirstVNF_Mem_Server ),( AMS + ( AMS / ACS ) ) ) ,Max( Min( ARS ,( DDR * RRS ) ),ACS ) )", "choosing": "( Min( DS ,MLU ) - Max( ( ( MUR + RMSe ) + DS ),( ( RCSe / CS ) - RMSe ) ) )", "obj1": 0.30855018587360594, "obj2": 0.541860227560312}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( CRS + FirstVNF_RAM_Server ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( MDR,Max( ACS,ACS ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( CS + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + RRSe ) / MLU ) * ( MLU + MUR ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782066}, {"determining": "Min( Min( MRS ,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) / ( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) + MDR ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RRSe - Min( MUM ,CS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( PN / Max( PN,Max( FirstVNF_RAM,MDR ) ) ) - FirstVNF_CPU )", "choosing": "( Min( ( MUM * ( RCSe * ( Min( Min( DS ,MUC ) ,MUM ) / MUM ) ) ) ,MUC ) / Max( MUM,CS ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ( Min( Min( Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( ( MRS - AMS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / FirstVNF_RAM_Server ) ),BR ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ) / ( MUR - MLU ) ) / Min( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / MRS ) ),( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( FirstVNF_CPU / CRS ) / CRS ) ) ,Max( RRS,ACS ) ) + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,( RMSe / Min( MUC ,DS ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + ( RCSe + ( RRSe - RCSe ) ) ) - DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( PN - ( BR + Min( Const ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Max( ( ( ( ( MLU + MUM ) * MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / FirstVNF_RAM_Server ) ),BR ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}, {"determining": "( Min( DDR ,MRS ) - ( ( Min( PN ,AMS ) * CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( RCSe / Max( ( CS / ( CS * Min( CS ,( RRSe - Max( CS,MUM ) ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - ( ( AMS + FirstVNF_CPU ) / ( Min( DDR ,FirstVNF_Mem_Server ) * Min( Min( ( PN + DDR ) ,( PN - PN ) ) ,( Max( DDR,( AMS + FirstVNF_CPU ) ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) ) ,( ( ( RRS * ARS ) - ( FirstVNF_RAM_Server / Min( MRS ,ARS ) ) ) - ( PN + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Max( MUR,MUR ) - ( CS - DS ) ) * ( Min( MUR ,MUM ) * ( ( RRSe * MUR ) - Min( Min( ( ( DS * MUM ) + CS ) ,Max( DS,RCSe ) ) ,( ( MUC + DS ) + MLU ) ) ) ) ) ,( ( ( MUC * MLU ) + ( CS + MUC ) ) + Max( ( DS / RMSe ),( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( Max( FirstVNF_Mem,Const ) - ( ( BR / ( BR - FirstVNF_RAM_Server ) ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( Max( MUR,MUC ) + Max( CS,RCSe ) ),( ( ( RMSe + MUR ) + MLU ) - ( RMSe + RMSe ) ) ) * ( MUC - MUM ) ) * ( ( MUC * CS ) * RRSe ) ) / ( ( ( RMSe + Max( Min( RRSe ,RCSe ),( DS / ( MUM - ( MUR / MUM ) ) ) ) ) / ( MLU * ( DS - Max( MLU,RMSe ) ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - ACS ) - ( MRS / ( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( MUM,Max( RRSe,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * Min( RRS ,( BR - ( BR - PN ) ) ) ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( MLU / RCSe ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.570631970260223, "obj2": 0.23719798609444778}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( MRS ,( Min( ( FirstVNF_Mem - ACS ) ,DDR ) / CRS ) ) ,( Const * FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( ( RRSe * MLU ) * CS ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9052044609665427, "obj2": 0.07685012650331098}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.3847583643122677, "obj2": 0.44609428986370137}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.45539033457249073, "obj2": 0.3751571698271038}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( Const ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,Max( MDR,FirstVNF_CPU ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( MUR / DS ) - ( RMSe - ( RMSe / Min( RMSe ,Min( MUR ,MUR ) ) ) ) ),( RMSe - CS ) ) / RCSe )", "obj1": 0.06505576208178439, "obj2": 0.8445535322625675}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) ) )", "choosing": "( ( ( MUC * RCSe ) - ( Max( ( ( RMSe - CS ) / RCSe ),MUC ) * ( MUC - MLU ) ) ) / ( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) )", "obj1": 0.6189591078066915, "obj2": 0.2371232547187654}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / ( PN / ( ARS * MDR ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( RCSe * ( MUC - RCSe ) ) ) ),CS ) )", "obj1": 0.4479553903345725, "obj2": 0.3782798117323175}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / RRSe ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - ( RMSe - MUC ) ) - RMSe ) / ( MUR + Max( RRSe,( RCSe + RMSe ) ) ) )", "obj1": 0.15613382899628253, "obj2": 0.6666810412658265}, {"determining": "Min( Min( MRS ,( ARS + Min( CRS ,RRS ) ) ) ,Max( ARS,ACS ) )", "choosing": "( ( MLU + ( Min( MUM ,RCSe ) - MLU ) ) - Max( ( ( RRSe - Min( ( MLU - Max( MUM,( MUC * RMSe ) ) ) ,DS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.34572490706319703, "obj2": 0.5158796825016075}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( MUR,RMSe ) * ( DS + MUM ) )", "obj1": 0.6338289962825279, "obj2": 0.22374099216558774}, {"determining": "( Max( ( ( ( ( PN / FirstVNF_Mem_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( Min( MUM ,RRSe ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6412639405204461, "obj2": 0.19960487774337857}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ( ( PN - ( PN - PN ) ) * DDR ) + PN ),Min( ACS ,MRS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( CS ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Max( DS,DS ),Max( RRSe,CS ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6157755229818022}, {"determining": "Min( Min( Max( ( ( CRS - ARS ) - ARS ),( FirstVNF_Mem / AMS ) ) ,( FirstVNF_RAM / ( ( ( ( ( RRS / FirstVNF_RAM ) * ( ACS / FirstVNF_CPU ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / ( Min( RRS ,AMS ) + FirstVNF_Mem ) ) / CRS ) )", "choosing": "( ( Min( DS ,MUR ) + Max( RMSe,( Max( MUM,( MUR * RRSe ) ) * Max( RRSe,DS ) ) ) ) - Max( RCSe,Min( Max( MLU,( CS * DS ) ) ,RCSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.5201276380651199}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.654275092936803, "obj2": 0.17130304362970722}, {"determining": "( ( PN / ( BR + Min( Min( ( Max( Max( ACS,MDR ),ACS ) + RRS ) ,Min( Min( CRS ,FirstVNF_CPU_Server ) ,( ACS / FirstVNF_Mem ) ) ) ,FirstVNF_CPU ) ) ) - FirstVNF_CPU )", "choosing": "( ( ( ( RMSe - CS ) * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / Max( DS,RMSe ) ) ) / RCSe ) ) ) / Max( MUR,( Min( ( ( Min( RMSe ,RMSe ) + MUC ) - Max( RCSe,CS ) ) ,MUC ) - ( ( MUR * Min( MUM ,MUC ) ) / MUR ) ) ) )", "obj1": 0.9628252788104089, "obj2": 0.025130412771402027}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( Max( DDR,AMS ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * Min( CS ,( MUR / MUM ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6406114185146071}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.912639405204461, "obj2": 0.038306684105462376}, {"determining": "( ( ( FirstVNF_Mem_Server * AMS ) - FirstVNF_CPU_Server ) + ( ( ( BR + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( FirstVNF_Mem / FirstVNF_CPU ) ) * MRS ) )", "choosing": "( ( MUR / ( Min( Max( CS,MLU ) ,DS ) + ( CS - ( RCSe + ( Max( ( RRSe / MUC ),MUM ) - RCSe ) ) ) ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9107806691449815, "obj2": 0.06400034637873553}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( FirstVNF_Mem - MDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( MUR * ( ( RCSe * MUM ) * ( MUC - ( ( RCSe - CS ) - ( CS * CS ) ) ) ) ) ),CS ) )", "obj1": 0.33271375464684017, "obj2": 0.5172555217415391}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( RMSe / RMSe ) / MLU ) ) + ( MUC / CS ) ) ) ),DS ) - DS )", "obj1": 0.09293680297397769, "obj2": 0.7802402191597134}, {"determining": "( ( ( Min( ( Min( BR ,Max( FirstVNF_Mem_Server,ACS ) ) - BR ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RMSe + MUM ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9739776951672863, "obj2": 0.01683442105312505}, {"determining": "( ( AMS + ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( CS / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( ( MUC * CS ) * MLU ) ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( ( RMSe + MUM ) * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6446240002537368}, {"determining": "( Max( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ACS ) ) - FirstVNF_Mem_Server ),CRS ) - Max( CRS,Max( ARS,Const ) ) )", "choosing": "( Max( ( MUC / CS ),Min( DS ,Max( DS,MLU ) ) ) / Min( MUM ,( MUR * RCSe ) ) )", "obj1": 0.28066914498141265, "obj2": 0.5543717541421864}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + RCSe ) ) - ( RMSe / ( Min( CS ,MUR ) / ( ( RRSe + MUR ) - Min( CS ,( RMSe + CS ) ) ) ) ) ),CS ) )", "obj1": 0.3159851301115242, "obj2": 0.5340847051095994}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_CPU / CRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( BR * CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( MUC,MUC ) * ( MUC - MLU ) ) ) ),( MUR + CS ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5503965204047563}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( ( ACS * MDR ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / Max( CRS,BR ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * Min( ( MUR / Max( ( RRSe * RCSe ),RRSe ) ) ,Max( MUR,Max( MUR,DS ) ) ) ) ) ) )", "obj1": 0.9758364312267658, "obj2": 0.009802113993772526}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( FirstVNF_RAM_Server / Min( ( Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,DDR ) ) ,ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / Min( MUM ,RRSe ) ),CS ) ) - ( RMSe * Max( MUR,Max( MUM,RCSe ) ) ) )", "obj1": 0.23605947955390336, "obj2": 0.5978895218011231}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( BR * FirstVNF_Mem_Server ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),( MLU / MLU ) )", "obj1": 0.9460966542750929, "obj2": 0.030196166899741996}, {"determining": "Min( Max( DDR,ACS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( ( MUC / CS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.16333217778199915}, {"determining": "( Max( DDR,( Max( BR,FirstVNF_Mem_Server ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + ( ACS * MRS ) ) ) * MDR ) )", "choosing": "( ( MUC * MUC ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5658824181130301}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM_Server ) + FirstVNF_RAM ),Max( Max( MDR,Max( ( FirstVNF_CPU_Server + DDR ),Min( ARS ,( Max( ( AMS - FirstVNF_Mem ),CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) )", "choosing": "( ( Max( Max( ( ( MLU - ( ( MUM * RMSe ) / ( MUR / MUC ) ) ) + MUM ),RRSe ),MUR ) - Max( ( Min( ( MUM + ( Max( CS,MLU ) - CS ) ) ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * ( ( ( PN * ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_Mem_Server ) ) / BR ) * ACS ) ) ) - ( ( Min( DDR ,MRS ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( ( MUR - RRSe ) / CS ),( ( ( ( MUR * Max( MUR,Min( MLU ,CS ) ) ) + MUR ) + ( MUR * MLU ) ) + RCSe ) ) / RCSe )", "obj1": 0.2527881040892193, "obj2": 0.5887129915576814}, {"determining": "( ( FirstVNF_Mem - ACS ) + ( FirstVNF_CPU * MRS ) )", "choosing": "( ( MUR / ( CS + ( CS - ( MLU / DS ) ) ) ) - ( Min( MLU ,MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.9070631970260223, "obj2": 0.07526298727196667}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( ( Const * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server * MRS ) ),PN ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( RRSe * ( Min( DS ,( ( MLU + CS ) + RRSe ) ) - Min( ( MLU - RRSe ) ,RMSe ) ) ) / RRSe ) )", "obj1": 0.949814126394052, "obj2": 0.0254270221311868}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * RMSe ) - DS ),CS ) )", "obj1": 0.9349442379182156, "obj2": 0.03168399218013617}, {"determining": "( Max( DDR,( ( ARS + ARS ) - MRS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.25464684014869887, "obj2": 0.5837744874456303}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,Min( ( ( ACS - MRS ) + Const ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / RMSe ) - ( MUR / DS ) )", "obj1": 0.9275092936802974, "obj2": 0.03622607152568976}, {"determining": "Min( Min( ( DDR * RRS ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - Max( ( DS - ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.037250822458092206}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "( PN - ( ( Min( ( Max( FirstVNF_CPU_Server,CRS ) - DDR ) ,DDR ) - AMS ) * Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( ( CS - Min( MLU ,( DS + RRSe ) ) ),( MUC / ( ( Min( RCSe ,MLU ) + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - DS ) )", "obj1": 0.9851301115241635, "obj2": 0.006564292171286463}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( PN / Const ) - ( ( Const + FirstVNF_CPU ) * ( FirstVNF_CPU * ARS ) ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( MUC + ( ( RCSe / DS ) / Min( RMSe ,MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.27695167286245354, "obj2": 0.5637286168709106}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Const * FirstVNF_Mem_Server ) ) ) ,( ARS / DDR ) )", "choosing": "( ( MLU * MUC ) - Max( ( DS - ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.30297397769516726, "obj2": 0.5473919921802555}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) + ( ( ( BR + Min( Max( Max( Min( FirstVNF_RAM_Server ,MDR ),( RRS - FirstVNF_RAM ) ),( CRS + MDR ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) ) * ( FirstVNF_Mem / FirstVNF_CPU ) ) * MRS ) )", "choosing": "( ( MUR / ( CS + ( CS - ( RCSe + ( Max( ( RRSe / MUC ),MUM ) - RCSe ) ) ) ) ) - ( Min( MLU ,MUC ) / Max( ( ( MUR * Min( MUM ,MUM ) ) - MUM ),MLU ) ) )", "obj1": 0.9107806691449815, "obj2": 0.06400034637873553}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / ( ( ( DDR / ACS ) + ARS ) - ( FirstVNF_CPU / Max( Const,MRS ) ) ) ) ) * Min( ( CRS + Const ) ,( Min( Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Max( FirstVNF_CPU,( PN - ( Max( FirstVNF_Mem,AMS ) * MDR ) ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( Min( MUM ,RCSe ),MUR ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.2788104089219331, "obj2": 0.5590625785684238}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5733597888076081}, {"determining": "( ( Max( ( Max( DDR,( ( BR - RRS ) + ( FirstVNF_CPU_Server + ( BR + FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - Min( MUM ,MUC ) ) / ( RRSe * ( MUC * MUC ) ) ) + CS ) ,( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,MUM ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6434213970516993}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ARS * FirstVNF_Mem_Server ) ) ) ,Max( Min( ARS ,( DDR * RRS ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( ( RRSe - Min( MUM ,DS ) ) - ( RCSe - MUC ) ) ) ),CS ) )", "obj1": 0.3066914498141264, "obj2": 0.5434027346688458}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( MLU / MLU ) ,MLU ) ) - DS ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.241635687732342, "obj2": 0.5961306143996682}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5406592828323058}, {"determining": "Min( Min( MRS ,Max( MDR,Max( ACS,ACS ) ) ) ,Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + ( Min( CS ,( MUC + MUR ) ) - ( Max( RRSe,MLU ) + MUR ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.29739776951672864, "obj2": 0.5479425717201934}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "( PN - ( FirstVNF_CPU_Server * Max( Min( Max( Const,ACS ) ,( Max( FirstVNF_Mem_Server,Min( MDR ,Max( FirstVNF_Mem,CRS ) ) ) - FirstVNF_CPU_Server ) ),CRS ) ) )", "choosing": "( Max( ( Max( ( ( Min( DS ,Max( DS,MLU ) ) - MUM ) * ( RRSe - MUM ) ),( RCSe - RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MUR * RCSe ) - DS ) )", "obj1": 0.9925650557620818, "obj2": 0.0025248669404042633}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( DDR - ( CRS + MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ),CS ) )", "obj1": 0.929368029739777, "obj2": 0.0350679930990895}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( PN,PN ) ) + MDR ) ) ) ,( AMS - RRS ) )", "choosing": "( Max( RMSe,( Min( ( RMSe + MLU ) ,( MUC / ( MUC - ( Max( MUR,RMSe ) + DS ) ) ) ) - MUM ) ) - Max( ( Min( ( DS + MUM ) ,( ( RMSe - CS ) / CS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "Min( Max( ( RRS / FirstVNF_Mem_Server ),( AMS + ( AMS / ACS ) ) ) ,Max( Min( ARS ,( DDR * RRS ) ),ACS ) )", "choosing": "( Min( DS ,MLU ) - Max( ( ( MUR + RMSe ) + DS ),( ( RCSe / CS ) - RMSe ) ) )", "obj1": 0.30855018587360594, "obj2": 0.541860227560312}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( CRS + FirstVNF_RAM_Server ) ),FirstVNF_CPU ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( MDR,Max( ACS,ACS ) ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( Min( RRSe ,( ( CS + ( MLU - CS ) ) * MLU ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + RRSe ) / MLU ) * ( MLU + MUR ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.004173603685782066}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "Min( Min( MRS ,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) / ( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) + MDR ) ) ) ,Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( ( MDR / PN ) ,Const ),PN ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR / Max( ( DS / MUR ),DS ) ) - ( ( ( MLU + ( Min( MUM ,RCSe ) - MLU ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Max( CS,( Min( CS ,RRSe ) + MUC ) ) ) ) ),CS ) )", "obj1": 0.949814126394052, "obj2": 0.0254270221311868}, {"determining": "( PN - ( BR + Min( Const ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Max( ( ( ( ( MLU + MUM ) * MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( ( ( RMSe - DS ) / RCSe ),MUC ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "( ( ( Min( Min( Max( ( FirstVNF_CPU_Server + ( BR - BR ) ),( FirstVNF_RAM_Server / ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + MUC ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,ARS ),BR ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( ( MUM + CS ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}, {"determining": "( ( ( Min( Min( Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( ( MRS - AMS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( FirstVNF_CPU / CRS ) / CRS ) ) ,( ACS * MDR ) ) + MDR ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,( RMSe / Min( MUC ,DS ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + ( RCSe + ( DS - RCSe ) ) ) - DS ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( ( PN / Max( PN,Max( FirstVNF_RAM,MDR ) ) ) - FirstVNF_CPU )", "choosing": "( Min( ( MUM * ( RCSe * ( Min( Min( DS ,MUC ) ,MUM ) / MUM ) ) ) ,MUC ) / Max( MUM,CS ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,( ARS / FirstVNF_RAM_Server ) ),BR ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ) / ( MUR - MLU ) ) / Min( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}, {"determining": "( ( PN / ( Min( Max( ( ( RRS - RRS ) * FirstVNF_RAM ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( RRS - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ) ) ) - ( ( BR / ( BR - FirstVNF_RAM_Server ) ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( Max( MUR,MUC ) + Max( CS,RCSe ) ),( MUC - ( RMSe + RMSe ) ) ) * ( MUC - MUM ) ) * ( ( MUC * CS ) * RRSe ) ) / ( ( ( RMSe + Max( Max( MLU,RRSe ),( DS / ( MUM - ( MUR / MUM ) ) ) ) ) / ( MLU * ( DS / DS ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,MRS ) - ( ( Min( PN ,AMS ) * CRS ) - FirstVNF_CPU_Server ) )", "choosing": "( RCSe / Max( ( CS / ( CS * Min( CS ,( RRSe - Max( CS,MUM ) ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,Const ) - ( ( BR / ( BR - FirstVNF_RAM_Server ) ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( ( Max( MUR,MUC ) + Max( CS,RCSe ) ),( ( ( RMSe + MUR ) + MLU ) - ( RMSe + RMSe ) ) ) * ( MUC - MUM ) ) * ( ( MUC * CS ) * RRSe ) ) / ( ( ( RMSe + Max( Min( RRSe ,RCSe ),( DS / ( MUM - ( MUR / MUM ) ) ) ) ) / ( MLU * ( DS - Max( MLU,RMSe ) ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) - ( RMSe * MUR ) )", "obj1": 0.5483271375464684, "obj2": 0.2527761214777269}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * RMSe ) - DS ),Max( ( RRSe - Min( MUM ,DS ) ),MUR ) ) )", "obj1": 0.8717472118959108, "obj2": 0.06542212702249349}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.3847583643122677, "obj2": 0.44609428986370137}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * Min( RRS ,( BR - ( BR - PN ) ) ) ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( MLU / RCSe ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.570631970260223, "obj2": 0.23719798609444778}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.45539033457249073, "obj2": 0.3751571698271038}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( ( PN / FirstVNF_Mem ) - ( ARS * ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) ) )", "choosing": "( ( ( MUC * RCSe ) - ( Max( ( ( RMSe - CS ) / RCSe ),MUC ) * ( MUC - MLU ) ) ) / ( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) )", "obj1": 0.6189591078066915, "obj2": 0.2371232547187654}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ACS ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( RMSe + Max( Min( RRSe ,RCSe ),( DS / ( MUM - ( MUR / MUM ) ) ) ) ) / ( MLU * ( DS / DS ) ) ) )", "obj1": 0.9070631970260223, "obj2": 0.04985852487349277}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / RRSe ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - ( RMSe - MUC ) ) - RMSe ) / ( MUR + Max( RRSe,( RCSe + RMSe ) ) ) )", "obj1": 0.15613382899628253, "obj2": 0.6666810412658265}, {"determining": "Min( FirstVNF_RAM ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.5128520004725472}, {"determining": "( Max( ( Max( PN,FirstVNF_CPU ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( MUR,RMSe ) * ( DS + MUM ) )", "obj1": 0.6338289962825279, "obj2": 0.22374099216558774}, {"determining": "( Max( ( ( ( ( PN / FirstVNF_Mem_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( Min( MUM ,RRSe ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6412639405204461, "obj2": 0.19960487774337857}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4275092936802974, "obj2": 0.3846506779827674}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / ( PN / ( ARS * MDR ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( RCSe * ( MUC - RCSe ) ) ) ),CS ) )", "obj1": 0.4479553903345725, "obj2": 0.3782798117323175}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ( ( PN - ( PN - PN ) ) * DDR ) + PN ),Min( ACS ,MRS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( CS ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Max( DS,DS ),Max( RRSe,CS ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6157755229818022}, {"determining": "Min( Min( Max( ( ( CRS - ARS ) - ARS ),( FirstVNF_Mem / AMS ) ) ,( FirstVNF_RAM / ( ( ( ( ( RRS / FirstVNF_RAM ) * ( ACS / FirstVNF_CPU ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / ( Min( RRS ,AMS ) + FirstVNF_Mem ) ) / CRS ) )", "choosing": "( ( Min( DS ,MUR ) + Max( RMSe,( Max( MUM,( MUR * RRSe ) ) * Max( RRSe,DS ) ) ) ) - Max( RCSe,Min( Max( MLU,( CS * DS ) ) ,RCSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.5201276380651199}, {"determining": "( ( PN / ( BR + Min( Min( ( Max( Max( ACS,MDR ),ACS ) + RRS ) ,Min( Min( CRS ,FirstVNF_CPU_Server ) ,( ACS / FirstVNF_Mem ) ) ) ,FirstVNF_CPU ) ) ) - FirstVNF_CPU )", "choosing": "( ( ( ( RMSe - CS ) * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / Max( DS,RMSe ) ) ) / RCSe ) ) ) / Max( MUR,( Min( ( ( Min( RMSe ,RMSe ) + MUC ) - Max( RCSe,CS ) ) ,MUC ) - ( ( MUR * Min( MUM ,MUC ) ) / MUR ) ) ) )", "obj1": 0.9628252788104089, "obj2": 0.025130412771402027}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( FirstVNF_Mem - MDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( MUR * ( ( RCSe * MUM ) * ( MUC - ( ( RCSe - CS ) - ( CS * CS ) ) ) ) ) ),CS ) )", "obj1": 0.33271375464684017, "obj2": 0.5172555217415391}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( RMSe / RMSe ) / MLU ) ) + ( MUC / CS ) ) ) ),DS ) - DS )", "obj1": 0.09293680297397769, "obj2": 0.7802402191597134}, {"determining": "( ( ( Min( ( Min( BR ,Max( FirstVNF_Mem_Server,ACS ) ) - BR ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RMSe + MUM ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9739776951672863, "obj2": 0.01683442105312505}, {"determining": "( ( AMS + ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( CS / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( ( MUC * CS ) * MLU ) ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( ( RMSe + MUM ) * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6446240002537368}, {"determining": "( Max( DDR,( Max( BR,( Min( ( ( CRS + CRS ) / FirstVNF_RAM ) ,( MRS - BR ) ) - ACS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * DS ) - ( MUM - MUM ) ) / ( MUR + Max( Min( Max( DS,( CS * ( ( MUC * MUC ) * RCSe ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.1895910780669145, "obj2": 0.6385969450987298}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + RCSe ) ) - ( RMSe / ( Min( CS ,MUR ) / ( ( RRSe + MUR ) - Min( CS ,( RMSe + CS ) ) ) ) ) ),CS ) )", "obj1": 0.3159851301115242, "obj2": 0.5340847051095994}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( ( ACS * MDR ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / Max( CRS,BR ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * Min( ( MUR / Max( ( RRSe * RCSe ),RRSe ) ) ,Max( MUR,Max( MUR,DS ) ) ) ) ) ) )", "obj1": 0.9758364312267658, "obj2": 0.009802113993772526}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( BR * FirstVNF_Mem_Server ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),( MLU / MLU ) )", "obj1": 0.9460966542750929, "obj2": 0.030196166899741996}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5655983396054997}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.654275092936803, "obj2": 0.17130304362970722}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.912639405204461, "obj2": 0.038306684105462376}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_CPU / CRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( BR * CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( MUC,MUC ) * ( MUC - MLU ) ) ) ),( MUR + CS ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5503965204047563}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * ( ( ( PN * ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_Mem_Server ) ) / BR ) * ACS ) ) ) - ( ( Min( DDR ,MRS ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( ( MUR - RRSe ) / CS ),( ( ( ( MUR * Max( MUR,Min( MLU ,CS ) ) ) + MUR ) + ( MUR * MLU ) ) + RCSe ) ) / RCSe )", "obj1": 0.2527881040892193, "obj2": 0.5887129915576814}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( MUM,MUR ) - ( MUM - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5533012743186397}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( ( MDR / PN ) ,Const ),PN ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR / Max( ( DS / MUR ),DS ) ) - ( ( ( MLU + ( Min( MUM ,RCSe ) - MLU ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Max( CS,( Min( CS ,RRSe ) + MUC ) ) ) ) ),CS ) )", "obj1": 0.949814126394052, "obj2": 0.0254270221311868}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),Max( Max( MDR,Max( ACS,ACS ) ),( CRS / Min( ACS ,BR ) ) ) )", "choosing": "( ( Max( Max( MUM,( MLU / ( ( ( RRSe * DS ) - Max( MUR,RMSe ) ) - CS ) ) ),MUR ) - Max( ( Min( DS ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * RMSe ) - DS ),CS ) )", "obj1": 0.9349442379182156, "obj2": 0.03168399218013617}, {"determining": "( Max( DDR,( ( ARS + ARS ) - MRS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.25464684014869887, "obj2": 0.5837744874456303}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,Min( ( ( ACS - MRS ) + Const ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / RMSe ) - ( MUR / DS ) )", "obj1": 0.9275092936802974, "obj2": 0.03622607152568976}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "Min( Min( ( DDR * RRS ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - Max( ( DS - ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.037250822458092206}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "( PN - ( ( Min( ( Max( FirstVNF_CPU_Server,CRS ) - DDR ) ,DDR ) - AMS ) * Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( ( CS - Min( MLU ,( DS + RRSe ) ) ),( MUC / ( ( Min( RCSe ,MLU ) + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - DS ) )", "obj1": 0.9851301115241635, "obj2": 0.006564292171286463}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( PN / Const ) - ( ( Const + FirstVNF_CPU ) * ( FirstVNF_CPU * ARS ) ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( MUC + ( ( RCSe / DS ) / Min( RMSe ,MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.27695167286245354, "obj2": 0.5637286168709106}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Const * FirstVNF_Mem_Server ) ) ) ,( ARS / DDR ) )", "choosing": "( ( MLU * MUC ) - Max( ( DS - ( RMSe * ( Max( MUR,RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.30297397769516726, "obj2": 0.5473919921802555}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / ( ( ( DDR / ACS ) + ARS ) - ( FirstVNF_CPU / Max( Const,MRS ) ) ) ) ) * Min( ( CRS + Const ) ,( Min( Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Max( FirstVNF_CPU,( PN - ( Max( FirstVNF_Mem,AMS ) * MDR ) ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( Min( MUM ,RCSe ),MUR ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.2788104089219331, "obj2": 0.5590625785684238}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5733597888076081}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_Mem / AMS ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * RCSe ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.16775538353680083}, {"determining": "Min( Max( DDR,ACS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( ( MUC / CS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.16333217778199915}, {"determining": "( ( Max( ( Max( DDR,( ( BR - RRS ) + ( FirstVNF_CPU_Server + ( BR + FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - Min( MUM ,MUC ) ) / ( RRSe * ( MUC * MUC ) ) ) + CS ) ,( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,MUM ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6434213970516993}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ARS * FirstVNF_Mem_Server ) ) ) ,Max( Min( ARS ,( DDR * RRS ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( ( RRSe - Min( MUM ,DS ) ) - ( RCSe - MUC ) ) ) ),CS ) )", "obj1": 0.3066914498141264, "obj2": 0.5434027346688458}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.3104089219330855, "obj2": 0.5406592828323058}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( Max( DDR,AMS ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * Min( CS ,( MUR / MUM ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6406114185146071}, {"determining": "Min( Min( MRS ,Max( MDR,Max( ACS,ACS ) ) ) ,Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + ( Min( CS ,( MUC + MUR ) ) - ( Max( RRSe,MLU ) + MUR ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.29739776951672864, "obj2": 0.5479425717201934}, {"determining": "( Max( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ACS ) ) - FirstVNF_Mem_Server ),CRS ) - Max( CRS,Max( ARS,Const ) ) )", "choosing": "( Max( ( MUC / CS ),Min( DS ,Max( DS,MLU ) ) ) / Min( MUM ,( MUR * RCSe ) ) )", "obj1": 0.28066914498141265, "obj2": 0.5543717541421864}, {"determining": "Max( ( Max( MDR,FirstVNF_RAM_Server ) + FirstVNF_RAM ),Max( Max( MDR,Max( ( FirstVNF_CPU_Server + DDR ),Min( ARS ,( Max( ( AMS - FirstVNF_Mem ),CRS ) - Max( PN,FirstVNF_CPU_Server ) ) ) ) ),( Max( BR,FirstVNF_CPU_Server ) - ( MRS - ARS ) ) ) )", "choosing": "( ( Max( Max( ( ( MLU - ( ( MUM * RMSe ) / ( MUR / MUC ) ) ) + MUM ),RRSe ),MUR ) - Max( ( Min( ( MUM + ( Max( CS,MLU ) - CS ) ) ,MLU ) / ( MUR - ( Min( CS ,CS ) - Min( ( CS / CS ) ,MUM ) ) ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6042678521456473}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( FirstVNF_RAM_Server + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - MUM ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6561338289962825, "obj2": 0.1696805961441516}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( MDR + DDR ) ) ) ,( MDR / Min( Max( Const,MDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( Max( Min( RRSe ,MLU ),CS ) + MUR ) ) - ( ( MUC / MLU ) + ( ( MUR * CS ) - CS ) ) )", "obj1": 0.2379182156133829, "obj2": 0.5969882120429084}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( MLU / MLU ) ,MLU ) ) - DS ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.241635687732342, "obj2": 0.5961306143996682}, {"determining": "( PN - ( FirstVNF_CPU_Server * Max( Min( Max( Const,ACS ) ,( Max( FirstVNF_Mem_Server,Min( MDR ,Max( FirstVNF_Mem,CRS ) ) ) - FirstVNF_CPU_Server ) ),CRS ) ) )", "choosing": "( Max( ( Max( ( ( Min( DS ,Max( DS,MLU ) ) - MUM ) * ( RRSe - MUM ) ),( RCSe - RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MUR * RCSe ) - DS ) )", "obj1": 0.9925650557620818, "obj2": 0.0025248669404042633}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( DDR - ( CRS + MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ),CS ) )", "obj1": 0.929368029739777, "obj2": 0.0350679930990895}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( PN,PN ) ) + MDR ) ) ) ,( AMS - RRS ) )", "choosing": "( Max( RMSe,( Min( ( RMSe + MLU ) ,( MUC / ( MUC - ( Max( MUR,RMSe ) + DS ) ) ) ) - MUM ) ) - Max( ( Min( ( DS + MUM ) ,( ( RMSe - CS ) / CS ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "( ( ( Min( Min( Max( ( FirstVNF_CPU_Server + ( BR - BR ) ),( FirstVNF_RAM_Server / ( FirstVNF_CPU / CRS ) ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( ( Max( MUC,MUC ) * ( MUC - MLU ) ) ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( RRSe + Min( ( ( ( MLU + RRSe ) * DS ) * MUM ) ,MUC ) ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + MUC ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.0038781857283892223}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( ( ( RMSe - DS ) / RCSe ),MUC ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "Min( Min( MRS ,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) / ( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) + MDR ) ) ) ,Min( Max( ( BR * Max( FirstVNF_CPU,MRS ) ),FirstVNF_CPU ) ,FirstVNF_CPU_Server ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( ( RRSe + Min( ( RRSe + MUM ) ,MUM ) ) ,CS ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.3141263940520446, "obj2": 0.5370187700377881}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( ( Const * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server * MRS ) ),PN ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( RRSe * ( Min( DS ,( ( MLU + CS ) + RRSe ) ) - Min( ( MLU - RRSe ) ,RMSe ) ) ) / RRSe ) )", "obj1": 0.949814126394052, "obj2": 0.0254270221311868}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ARS * FirstVNF_Mem_Server ) ) ) ,Max( Min( ARS ,( BR - Min( ARS ,FirstVNF_Mem_Server ) ) ),ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - Min( Max( CS,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) ,( ( RRSe - Min( MUM ,RCSe ) ) - ( RCSe - MUC ) ) ) ),CS ) )", "obj1": 0.30855018587360594, "obj2": 0.541860227560312}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * RMSe ) - DS ),Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "Min( Max( ( RRS / FirstVNF_Mem_Server ),( AMS + ( AMS / ACS ) ) ) ,Max( Min( ARS ,( DDR * RRS ) ),ACS ) )", "choosing": "( Min( DS ,MLU ) - Max( ( ( MUR + RMSe ) + DS ),( ( RCSe / CS ) - RMSe ) ) )", "obj1": 0.30855018587360594, "obj2": 0.541860227560312}, {"determining": "( ( ( Min( Min( Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( ( MRS - AMS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,ARS ),BR ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( ( MUM + CS ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}], "19": [{"determining": "( Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) + ( Min( ( AMS * CRS ) ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - ( ( ( MUM - ( CS + RCSe ) ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) ) ) / DS ) - ( ( Min( DS ,MLU ) / ( Min( ( DS + ( MLU - ( RMSe + MLU ) ) ) ,Max( ( RRSe * ( MUM - DS ) ),MUM ) ) - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) - ( RMSe * MUR ) )", "obj1": 0.5483271375464684, "obj2": 0.2527761214777269}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * RMSe ) - DS ),Max( ( RRSe - Min( MUM ,DS ) ),MUR ) ) )", "obj1": 0.8717472118959108, "obj2": 0.06542212702249349}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( ARS * FirstVNF_Mem_Server ),ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( ( Max( MLU,CS ) - Max( MUM,MLU ) ) - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.1604900081223229}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.2206077363701108}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.3847583643122677, "obj2": 0.44609428986370137}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * Min( RRS ,( BR - ( BR - PN ) ) ) ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( MLU / RCSe ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.570631970260223, "obj2": 0.23719798609444778}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( Max( ( ( ( ( PN / FirstVNF_Mem_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( Min( MUM ,RRSe ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6412639405204461, "obj2": 0.19960487774337857}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / ( PN / ( ARS * MDR ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( RCSe * ( MUC - RCSe ) ) ) ),CS ) )", "obj1": 0.4479553903345725, "obj2": 0.3782798117323175}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / RRSe ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - ( RMSe - MUC ) ) - RMSe ) / ( MUR + Max( RRSe,( RCSe + RMSe ) ) ) )", "obj1": 0.15613382899628253, "obj2": 0.6666810412658265}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.34014869888475835, "obj2": 0.5078445126631471}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4275092936802974, "obj2": 0.3846506779827674}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - ( CRS + FirstVNF_RAM_Server ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( MLU - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( Max( RCSe,RMSe ) / ( MUM / Min( ( RRSe / MLU ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "( Min( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,RMSe ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.9033457249070632, "obj2": 0.05373464908998366}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "Min( Min( Max( ( ( CRS - ARS ) - ARS ),( FirstVNF_Mem / AMS ) ) ,( FirstVNF_RAM / ( ( ( ( ( RRS / FirstVNF_RAM ) * ( ACS / FirstVNF_CPU ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / ( Min( RRS ,AMS ) + FirstVNF_Mem ) ) / CRS ) )", "choosing": "( ( Min( DS ,MUR ) + Max( RMSe,( Max( MUM,( MUR * RRSe ) ) * Max( RRSe,DS ) ) ) ) - Max( RCSe,Min( Max( MLU,( CS * DS ) ) ,RCSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.5201276380651199}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( ( ( ( BR - MRS ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ( ( PN - ( PN - PN ) ) * DDR ) + PN ),Min( ACS ,MRS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( CS ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / ( MUR + Max( Max( DS,DS ),Max( RRSe,CS ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6157755229818022}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( ( Min( ( Min( BR ,Max( FirstVNF_Mem_Server,ACS ) ) - BR ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RMSe + MUM ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9739776951672863, "obj2": 0.01683442105312505}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( FirstVNF_Mem - MDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( MUR * ( ( RCSe * MUM ) * ( MUC - ( ( RCSe - CS ) - ( CS * CS ) ) ) ) ) ),CS ) )", "obj1": 0.33271375464684017, "obj2": 0.5172555217415391}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + Max( RRS,FirstVNF_CPU_Server ) ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) - ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUR ,( MUC * RRSe ) ) / DS ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.01896583625099484}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( RMSe / RMSe ) / MLU ) ) + ( MUC / CS ) ) ) ),DS ) - DS )", "obj1": 0.09293680297397769, "obj2": 0.7802402191597134}, {"determining": "Min( Min( MRS ,Max( MDR,Max( ACS,ACS ) ) ) ,Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + ( Min( CS ,( MUC + MUR ) ) - ( Max( RRSe,MLU ) + MUR ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.29739776951672864, "obj2": 0.5479425717201934}, {"determining": "( Max( DDR,( Max( BR,( Min( ( ( CRS + CRS ) / FirstVNF_RAM ) ,( MRS - BR ) ) - ACS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * DS ) - ( MUM - MUM ) ) / ( MUR + Max( Min( Max( DS,( CS * ( ( MUC * MUC ) * RCSe ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.1895910780669145, "obj2": 0.6385969450987298}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ACS ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( RMSe + Max( Min( RRSe ,RCSe ),( DS / ( MUM - ( MUR / MUM ) ) ) ) ) / ( MLU * ( DS / DS ) ) ) )", "obj1": 0.9070631970260223, "obj2": 0.04985852487349277}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5655983396054997}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.912639405204461, "obj2": 0.038306684105462376}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_CPU / CRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( BR * CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( MUC,MUC ) * ( MUC - MLU ) ) ) ),( MUR + CS ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5503965204047563}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( ( ACS * MDR ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / Max( CRS,BR ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * Min( ( MUR / Max( ( RRSe * RCSe ),RRSe ) ) ,Max( MUR,Max( MUR,DS ) ) ) ) ) ) )", "obj1": 0.9758364312267658, "obj2": 0.009802113993772526}, {"determining": "( Max( ( FirstVNF_Mem_Server * Min( Max( MRS,( ( ARS / Max( FirstVNF_RAM_Server,AMS ) ) + ARS ) ) ,FirstVNF_RAM_Server ) ),RRS ) - ( ARS * ( MRS - ARS ) ) )", "choosing": "( Max( ( ( ( MUR / CS ) * ( Min( ( MUC / MUR ) ,MUC ) / ( MUR - ( ( MLU + MLU ) + CS ) ) ) ) / CS ),Min( ( ( Max( MLU,Max( ( MUM + DS ),DS ) ) + MUR ) + ( DS / Min( MLU ,MUC ) ) ) ,RRSe ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5730906498244424}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( MUM,MUR ) - ( MUM - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5533012743186397}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "Min( Min( ( ( RRS * ( ( FirstVNF_RAM / ( ARS * FirstVNF_Mem_Server ) ) / PN ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) + Max( ( CRS / MDR ),Max( Min( ( Const * FirstVNF_CPU_Server ) ,Const ),PN ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( Min( RRSe ,Max( MUR,Max( CS,MLU ) ) ) / MUC ) - ( ( ( MLU + ( Min( MUM ,RCSe ) - ( DS - MUR ) ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Max( CS,( Min( CS ,RRSe ) + MUC ) ) ) ) ),CS ) )", "obj1": 0.9423791821561338, "obj2": 0.027466574362055605}, {"determining": "( Max( DDR,( ( ARS + ARS ) - MRS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.25464684014869887, "obj2": 0.5837744874456303}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,Min( ( ( ACS - MRS ) + Const ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / RMSe ) - ( MUR / DS ) )", "obj1": 0.9275092936802974, "obj2": 0.03622607152568976}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.258364312267658, "obj2": 0.5777910105802202}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * RMSe ) - DS ),CS ) )", "obj1": 0.9349442379182156, "obj2": 0.03168399218013617}, {"determining": "Min( Min( ( DDR * RRS ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - Max( ( DS - ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.037250822458092206}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( PN / Const ) - ( ( Const + FirstVNF_CPU ) * ( FirstVNF_CPU * ARS ) ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( MUC + ( ( RCSe / DS ) / Min( RMSe ,MUM ) ) ) ) ) ) / RCSe )", "obj1": 0.27695167286245354, "obj2": 0.5637286168709106}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / ( ( ( DDR / ACS ) + ARS ) - ( FirstVNF_CPU / Max( Const,MRS ) ) ) ) ) * Min( ( CRS + Const ) ,( Min( Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Max( FirstVNF_CPU,( PN - ( Max( FirstVNF_Mem,AMS ) * MDR ) ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( Min( MUM ,RCSe ),MUR ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.2788104089219331, "obj2": 0.5590625785684238}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * ( ( ( PN * ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_Mem_Server ) ) / BR ) * ACS ) ) ) - ( ( Min( DDR ,MRS ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( ( MUR - RRSe ) / CS ),( ( ( ( MUR * Max( MUR,Min( MLU ,CS ) ) ) + MUR ) + ( MUR * MLU ) ) + RCSe ) ) / RCSe )", "obj1": 0.2527881040892193, "obj2": 0.5887129915576814}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.654275092936803, "obj2": 0.17130304362970722}, {"determining": "( ( ( Min( Min( Max( ( FirstVNF_CPU_Server + ( BR - BR ) ),( FirstVNF_RAM_Server / ( FirstVNF_CPU / CRS ) ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( ( Max( MUC,MUC ) * ( MUC - MLU ) ) ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( RRSe + Min( ( ( ( MLU + RRSe ) * DS ) * MUM ) ,MUC ) ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + MUC ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.983271375464684, "obj2": 0.007507845838256927}, {"determining": "( ( AMS + ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( CS / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( ( MUC * CS ) * MLU ) ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( ( RMSe + MUM ) * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6446240002537368}, {"determining": "( Max( DDR,( FirstVNF_Mem - MRS ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / ( MUC + ( CS + RCSe ) ) ) ),RMSe ) * RMSe ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5731497787555002}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_Mem / AMS ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * RCSe ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.16775538353680083}, {"determining": "Min( Max( DDR,ACS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( ( MUC / CS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.16333217778199915}, {"determining": "( ( Max( ( Max( DDR,( ( BR - RRS ) + ( FirstVNF_CPU_Server + ( BR + FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - Min( MUM ,MUC ) ) / ( RRSe * ( MUC * MUC ) ) ) + CS ) ,( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,MUM ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6434213970516993}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( Max( DDR,AMS ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * Min( CS ,( MUR / MUM ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6406114185146071}, {"determining": "( Max( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ACS ) ) - FirstVNF_Mem_Server ),CRS ) - Max( CRS,Max( ARS,Const ) ) )", "choosing": "( Max( ( MUC / CS ),Min( DS ,Max( DS,MLU ) ) ) / Min( MUM ,( MUR * RCSe ) ) )", "obj1": 0.28066914498141265, "obj2": 0.5543717541421864}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( BR * FirstVNF_Mem_Server ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),( MLU / MLU ) )", "obj1": 0.9479553903345725, "obj2": 0.027204873361105417}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( FirstVNF_RAM_Server + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - MUM ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6561338289962825, "obj2": 0.1696805961441516}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( ( MDR / PN ) ,Const ),PN ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR / Max( ( DS / MUR ),DS ) ) - ( ( ( MLU + ( Min( MUM ,RCSe ) - MLU ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Max( CS,( Min( CS ,RRSe ) + MUC ) ) ) ) ),CS ) )", "obj1": 0.949814126394052, "obj2": 0.0254270221311868}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( MDR + DDR ) ) ) ,( MDR / Min( Max( Const,MDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( Max( Min( RRSe ,MLU ),CS ) + MUR ) ) - ( ( MUC / MLU ) + ( ( MUR * CS ) - CS ) ) )", "obj1": 0.2379182156133829, "obj2": 0.5969882120429084}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( MLU / MLU ) ,MLU ) ) - DS ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.241635687732342, "obj2": 0.5961306143996682}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) )", "choosing": "( Max( RMSe,( ( MUR * RMSe ) - DS ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.654275092936803, "obj2": 0.17130304362970722}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( PN - ( FirstVNF_CPU_Server * Max( Min( Max( Const,ACS ) ,( Max( FirstVNF_Mem_Server,Min( MDR ,Max( FirstVNF_Mem,CRS ) ) ) - FirstVNF_CPU_Server ) ),CRS ) ) )", "choosing": "( Max( ( Max( ( ( Min( DS ,Max( DS,MLU ) ) - MUM ) * ( RRSe - MUM ) ),( RCSe - RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MUR * RCSe ) - DS ) )", "obj1": 0.9925650557620818, "obj2": 0.0025248669404042633}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_RAM_Server + Max( BR,FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( MUR - ( Min( MLU ,Min( MLU ,RRSe ) ) - DS ) ) - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) - Max( MUR,DS ) )", "obj1": 0.24907063197026022, "obj2": 0.5909799641334449}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * RRS ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / RCSe ) ) )", "obj1": 0.24907063197026022, "obj2": 0.5909799641334449}, {"determining": "( ( ( Min( Min( Max( ( FirstVNF_CPU_Server + ( BR - BR ) ),( FirstVNF_RAM_Server / ( FirstVNF_CPU / CRS ) ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( ( Max( MUC,MUC ) * ( MUC - MLU ) ) ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( RRSe + Min( ( ( ( MLU + RRSe ) * DS ) * MUM ) ,MUC ) ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + MUC ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.0038781857283892223}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "( PN - ( ( Min( ( Max( FirstVNF_CPU_Server,CRS ) - DDR ) ,DDR ) - AMS ) * Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( ( CS - Min( MLU ,( DS + RRSe ) ) ),( MUC / ( ( Min( RCSe ,MLU ) + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - DS ) )", "obj1": 0.9851301115241635, "obj2": 0.006564292171286463}, {"determining": "( ( ( Min( Min( Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( ( MRS - AMS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,ARS ),BR ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( ( MUM + CS ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( DDR - ( CRS + MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ),CS ) )", "obj1": 0.929368029739777, "obj2": 0.0350679930990895}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( ( Const * FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server * MRS ) ),PN ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( RRSe * ( Min( DS ,( ( MLU + CS ) + RRSe ) ) - Min( ( MLU - RRSe ) ,RMSe ) ) ) / RRSe ) )", "obj1": 0.949814126394052, "obj2": 0.0254270221311868}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / BR ) ) ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_CPU_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * RMSe ) - DS ),Max( Max( ( ( MLU - ( ( MUM * RMSe ) / ( MUR / MUC ) ) ) + MUM ),RRSe ),DS ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( Const - ( CRS + MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( ( ( RMSe - DS ) / RCSe ),MUC ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / Min( ( BR + ARS ) ,( ( ( BR + ARS ) / ( AMS * Const ) ) / ( DDR - ( CRS + MDR ) ) ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( ( CS / ( ( MUR - MUR ) + DS ) ) + CS ) ),CS ) )", "obj1": 0.929368029739777, "obj2": 0.0350679930990895}], "20": [{"determining": "( Min( ( CRS + Const ) ,( Min( ( DDR - MRS ) ,MDR ) - FirstVNF_RAM_Server ) ) + ( Min( ( Const - ACS ) ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - ( ( ( MUM - ( CS + RCSe ) ) - CS ) + Max( Min( MLU ,RMSe ),MUR ) ) ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) + ( Min( ( AMS * CRS ) ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - ( ( ( MUM - ( CS + RCSe ) ) - DS ) + Max( Min( MLU ,RMSe ),MUR ) ) ) ) / DS ) - ( ( Min( DS ,MLU ) / ( Min( ( DS + ( MLU - ( RMSe + MLU ) ) ) ,Max( ( RRSe * ( MUM - DS ) ),MUM ) ) - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) - ( RMSe * MUR ) )", "obj1": 0.5483271375464684, "obj2": 0.2527761214777269}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( ARS * FirstVNF_Mem_Server ),ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( ( Max( MLU,CS ) - Max( MUM,MLU ) ) - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.1604900081223229}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * RMSe ) - DS ),Max( ( RRSe - Min( MUM ,DS ) ),MUR ) ) )", "obj1": 0.8717472118959108, "obj2": 0.06542212702249349}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.2206077363701108}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.3847583643122677, "obj2": 0.44609428986370137}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * Min( RRS ,( BR - ( BR - PN ) ) ) ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( MLU / RCSe ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.570631970260223, "obj2": 0.23719798609444778}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( Max( ( ( ( ( PN / FirstVNF_Mem_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( Min( MUM ,RRSe ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6412639405204461, "obj2": 0.19960487774337857}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / ( PN / ( ARS * MDR ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( RCSe * ( MUC - RCSe ) ) ) ),CS ) )", "obj1": 0.4479553903345725, "obj2": 0.3782798117323175}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / RRSe ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - ( RMSe - MUC ) ) - RMSe ) / ( MUR + Max( RRSe,( RCSe + RMSe ) ) ) )", "obj1": 0.15613382899628253, "obj2": 0.6666810412658265}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.34014869888475835, "obj2": 0.5078445126631471}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - ( CRS + FirstVNF_RAM_Server ) ),AMS ) ) * ( ( Min( MDR ,( Min( MRS ,MDR ) * DDR ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( MLU - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( Max( ( ( MUR * RMSe ) - DS ),CS ),( ( ( Min( MUR ,RRSe ) / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( Max( RCSe,RMSe ) / ( MUM / Min( ( RRSe / MLU ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "( Min( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,RMSe ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.9033457249070632, "obj2": 0.05373464908998366}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( Max( FirstVNF_CPU,Const ) / FirstVNF_RAM_Server ),( ( FirstVNF_RAM * FirstVNF_CPU ) / MRS ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( RRSe + Max( ( Min( ( MUM * RRSe ) ,Max( RMSe,( RMSe + DS ) ) ) / Max( MLU,MUC ) ),MUR ) ),Max( ( RRSe - Min( MUM ,DS ) ),MUR ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06445678555143437}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4275092936802974, "obj2": 0.3846506779827674}, {"determining": "Min( Min( Max( ( ( CRS - ARS ) - ARS ),( FirstVNF_Mem / AMS ) ) ,( FirstVNF_RAM / ( ( ( ( ( RRS / FirstVNF_RAM ) * ( ACS / FirstVNF_CPU ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / ( Min( RRS ,AMS ) + FirstVNF_Mem ) ) / CRS ) )", "choosing": "( ( Min( DS ,MUR ) + Max( RMSe,( Max( MUM,( MUR * RRSe ) ) * Max( RRSe,DS ) ) ) ) - Max( RCSe,Min( Max( MLU,( CS * DS ) ) ,RCSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.5201276380651199}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,( ( DDR - MRS ) - ARS ) ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + ( DDR - CRS ) ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( Min( ( MLU / MLU ) ,( CS - MUM ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6099172440229799}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( ( Min( ( Min( BR ,Max( FirstVNF_Mem_Server,ACS ) ) - BR ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RMSe + MUM ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9739776951672863, "obj2": 0.01683442105312505}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( FirstVNF_Mem - MDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( MUR * ( ( RCSe * MUM ) * ( MUC - ( ( RCSe - CS ) - ( CS * CS ) ) ) ) ) ),CS ) )", "obj1": 0.33271375464684017, "obj2": 0.5172555217415391}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + Max( RRS,FirstVNF_CPU_Server ) ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) - ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUR ,( MUC * RRSe ) ) / DS ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.01896583625099484}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Min( Max( MDR,FirstVNF_RAM_Server ) ,Max( ( Min( DDR ,MRS ) - ( CRS + MDR ) ),ACS ) ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( MLU ,( ( MUC + ( ( RMSe / RMSe ) / MLU ) ) + ( MUC / CS ) ) ) ),DS ) - DS )", "obj1": 0.09293680297397769, "obj2": 0.7802402191597134}, {"determining": "Min( Min( MRS ,Max( MDR,Max( ACS,ACS ) ) ) ,Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + ( Min( CS ,( MUC + MUR ) ) - ( Max( RRSe,MLU ) + MUR ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.29739776951672864, "obj2": 0.5479425717201934}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / Min( RRS ,DDR ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUC ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,Min( RMSe ,MUM ) ) ) / ( MUM - DS ) ) ) )", "obj1": 0.42193308550185876, "obj2": 0.3943361180656197}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( ( Max( ( Max( DDR,( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM + ACS ) ) * Min( ( CRS + Const ) ,( ARS / FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( DS - ( ( RRSe / MUR ) + RCSe ) ) - MUM ) - ( MUM - MUM ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( DS / ( MUR + MLU ) ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.19330855018587362, "obj2": 0.6371186840066495}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.912639405204461, "obj2": 0.038306684105462376}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ACS ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( RMSe + Max( Min( RRSe ,RCSe ),( DS / ( MUM - ( MUR / MUM ) ) ) ) ) / ( MLU * ( DS / DS ) ) ) )", "obj1": 0.9070631970260223, "obj2": 0.04985852487349277}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_CPU / CRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( BR * CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( MUC,MUC ) * ( MUC - MLU ) ) ) ),( MUR + CS ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5503965204047563}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5655983396054997}, {"determining": "( Max( DDR,( FirstVNF_Mem - MRS ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / ( MUC + ( CS + RCSe ) ) ) ),RMSe ) * RMSe ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5731497787555002}, {"determining": "( Max( DDR,CRS ) - ( Min( Const ,MRS ) * MDR ) )", "choosing": "( Max( ( Max( RCSe,Max( MUR,( ( RRSe * RCSe ) - ( MUM / Max( MUC,DS ) ) ) ) ) / CS ),( MUR * Min( ( CS - ( RMSe - ( RMSe + CS ) ) ) ,( ( RRSe * MUR ) + ( MUC / ( ( CS + CS ) * RRSe ) ) ) ) ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5659923351785641}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( MUM,MUR ) - ( MUM - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5533012743186397}, {"determining": "( Max( DDR,( ( ARS + ARS ) - MRS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.25464684014869887, "obj2": 0.5837744874456303}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( ( ACS * MDR ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / Max( CRS,BR ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * Min( ( MUR / Max( ( RRSe * RCSe ),RRSe ) ) ,Max( MUR,Max( MUR,DS ) ) ) ) ) ) )", "obj1": 0.9758364312267658, "obj2": 0.009802113993772526}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,Min( ( ( ACS - MRS ) + Const ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / RMSe ) - ( MUR / DS ) )", "obj1": 0.9275092936802974, "obj2": 0.03622607152568976}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( BR * ( MRS * DDR ) ) + Min( AMS ,PN ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( ( RMSe + MLU ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.575422000711748}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * RMSe ) - DS ),CS ) )", "obj1": 0.9349442379182156, "obj2": 0.03168399218013617}, {"determining": "Min( Min( ( DDR * RRS ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,Max( ARS,ACS ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - Max( ( DS - ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.037250822458092206}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.654275092936803, "obj2": 0.17130304362970722}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "( ( PN / Const ) - Min( ACS ,BR ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( Max( MUR,( Max( DS,RRSe ) + ( DS * RRSe ) ) ),( MUR - ( MUR * DS ) ) ) )", "obj1": 0.9814126394052045, "obj2": 0.0071612687173893755}, {"determining": "Min( ( PN * MRS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( ( DS - ( ( ( ( RRSe / CS ) - MUR ) / ( ( ( RCSe + MUR ) - MUR ) + DS ) ) + CS ) ),MUR ) - Max( ( ( MUR / DS ) - ( ( ( MLU + ( Min( MUM ,RCSe ) - MLU ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Max( CS,( Min( CS ,RRSe ) + MUC ) ) ) ) ),CS ) )", "obj1": 0.949814126394052, "obj2": 0.025278193518103235}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( CRS + RRS ),ARS ) ) ) ) ,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( Min( RMSe ,RMSe ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.6728624535315985, "obj2": 0.1617605546090906}, {"determining": "( ( AMS + ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( CS / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( ( MUC * CS ) * MLU ) ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( ( RMSe + MUM ) * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6446240002537368}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_Mem / AMS ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * RCSe ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.16775538353680083}, {"determining": "Min( Max( DDR,ACS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( ( MUC / CS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.16333217778199915}, {"determining": "( ( Max( ( Max( DDR,( ( BR - RRS ) + ( FirstVNF_CPU_Server + ( BR + FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - Min( MUM ,MUC ) ) / ( RRSe * ( MUC * MUC ) ) ) + CS ) ,( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,MUM ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6434213970516993}, {"determining": "( Max( DDR,( Max( BR,( Min( ( ( CRS + CRS ) / FirstVNF_RAM ) ,( MRS - BR ) ) - ACS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * DS ) - ( MUM - MUM ) ) / ( MUR + Max( Min( Max( DS,( CS * ( ( MUC * MUC ) * RCSe ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.1895910780669145, "obj2": 0.6385969450987298}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( Max( DDR,AMS ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * Min( CS ,( MUR / MUM ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6406114185146071}, {"determining": "( Max( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ACS ) ) - FirstVNF_Mem_Server ),CRS ) - Max( CRS,Max( ARS,Const ) ) )", "choosing": "( Max( ( MUC / CS ),Min( DS ,Max( DS,MLU ) ) ) / Min( MUM ,( MUR * RCSe ) ) )", "obj1": 0.28066914498141265, "obj2": 0.5543717541421864}, {"determining": "Min( Min( ( ( RRS * ( ( FirstVNF_RAM / ( ARS * FirstVNF_Mem_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( ( Const * Const ) ,Const ),PN ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR / DS ) - ( ( ( MLU + ( Min( RMSe ,RMSe ) - ( DS - MUR ) ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Max( CS,( Min( CS ,RRSe ) + MUC ) ) ) ) ),CS ) )", "obj1": 0.9423791821561338, "obj2": 0.027466574362055605}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( BR * FirstVNF_Mem_Server ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),( MLU / MLU ) )", "obj1": 0.9479553903345725, "obj2": 0.027204873361105417}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * ( ( ( PN * ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_Mem_Server ) ) / BR ) * ACS ) ) ) - ( ( Min( DDR ,MRS ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( ( MUR - RRSe ) / CS ),( ( ( ( MUR * Max( MUR,Min( MLU ,CS ) ) ) + MUR ) + ( MUR * MLU ) ) + RCSe ) ) / RCSe )", "obj1": 0.2527881040892193, "obj2": 0.5887129915576814}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( FirstVNF_RAM_Server + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - MUM ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6561338289962825, "obj2": 0.1696805961441516}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( MDR + DDR ) ) ) ,( MDR / Min( Max( Const,MDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( Max( Min( RRSe ,MLU ),CS ) + MUR ) ) - ( ( MUC / MLU ) + ( ( MUR * CS ) - CS ) ) )", "obj1": 0.2379182156133829, "obj2": 0.5969882120429084}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( MLU / MLU ) ,MLU ) ) - DS ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.241635687732342, "obj2": 0.5961306143996682}, {"determining": "Min( Min( RRS ,FirstVNF_Mem ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) )", "choosing": "( Max( RMSe,( ( MUR * RMSe ) - DS ) ) - Max( ( RMSe - ( ( ( ( MUC - ( DS / MUC ) ) + Max( MUC,DS ) ) + ( ( ( MUC / RCSe ) * ( MUM - CS ) ) + CS ) ) * RMSe ) ),CS ) )", "obj1": 0.654275092936803, "obj2": 0.17130304362970722}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( ( MUC * MUR ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.9052044609665427, "obj2": 0.05074022650727685}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( PN - ( FirstVNF_CPU_Server * Max( Min( Max( Const,ACS ) ,( Max( FirstVNF_Mem_Server,Min( MDR ,Max( FirstVNF_Mem,CRS ) ) ) - FirstVNF_CPU_Server ) ),CRS ) ) )", "choosing": "( Max( ( Max( ( ( Min( DS ,Max( DS,MLU ) ) - MUM ) * ( RRSe - MUM ) ),( RCSe - RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MUR * RCSe ) - DS ) )", "obj1": 0.9925650557620818, "obj2": 0.0025248669404042633}, {"determining": "Min( Min( ( ( RRS * ( ( FirstVNF_RAM / ( ARS * FirstVNF_Mem_Server ) ) / PN ) ) * ( Min( CRS ,FirstVNF_CPU_Server ) + Max( ( CRS / MDR ),Max( Min( ( Const * FirstVNF_CPU_Server ) ,Const ),PN ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( Min( RRSe ,Max( MUR,Max( CS,MLU ) ) ) / MUC ) - ( ( ( MLU + ( Min( MUM ,RCSe ) - ( DS - MUR ) ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Max( CS,( Min( CS ,RRSe ) + MUC ) ) ) ) ),CS ) )", "obj1": 0.9423791821561338, "obj2": 0.027466574362055605}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( PN - ( ( Min( ( Max( FirstVNF_CPU_Server,CRS ) - DDR ) ,DDR ) - AMS ) * Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( ( CS - Min( MLU ,( DS + RRSe ) ) ),( MUC / ( ( Min( RCSe ,MLU ) + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - DS ) )", "obj1": 0.9851301115241635, "obj2": 0.006564292171286463}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * RRS ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) )", "choosing": "( ( ( ( MUC * MUM ) + MUM ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - MUM ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.25092936802973975, "obj2": 0.5890493984880235}, {"determining": "( ( ( Min( Min( Max( ( FirstVNF_CPU_Server + ( BR - BR ) ),( FirstVNF_RAM_Server / ( FirstVNF_CPU / CRS ) ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( ( Max( MUC,MUC ) * ( MUC - MLU ) ) ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( RRSe + Min( ( ( ( MLU + RRSe ) * DS ) * MUM ) ,MUC ) ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + MUC ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9907063197026023, "obj2": 0.0038781857283892223}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,Min( FirstVNF_Mem ,MRS ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( ( ( RMSe - MUM ) / RCSe ),MUC ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_RAM_Server + Max( BR,FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( MUR - ( Min( MLU ,Min( MLU ,RRSe ) ) - DS ) ) - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) - Max( MUR,DS ) )", "obj1": 0.24907063197026022, "obj2": 0.5909799641334449}, {"determining": "( ( ( Min( Min( Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( ( MRS - AMS ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005434880652528307}, {"determining": "( ( ( Min( Min( Max( Min( ARS ,ARS ),BR ) ,( Const - FirstVNF_Mem ) ) ,PN ) - Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( Min( RRS ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - MUC ) ) / DS ) - ( ( ( MLU - ( Min( DS ,Max( MUM,RRSe ) ) / Max( MUM,MUR ) ) ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( ( MUM + CS ) + DS ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9888475836431226, "obj2": 0.0046602460610770235}], "21": [{"determining": "( ( Max( ( Max( ( ACS - CRS ),FirstVNF_CPU ) - FirstVNF_RAM_Server ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( ( Max( ( ( ( MUR + RCSe ) / ( ( MUR - MUR ) + DS ) ) + CS ),RMSe ) * ( ( CS + RCSe ) + MUM ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + Const ) ,( Min( ( DDR - MRS ) ,MDR ) - FirstVNF_RAM_Server ) ) + ( Min( ( Const - ACS ) ,MDR ) * MRS ) )", "choosing": "( ( ( RCSe * ( ( RMSe / Min( MUC ,DS ) ) - ( ( ( MUM - ( CS + RCSe ) ) - CS ) + Max( Min( MLU ,RMSe ),MUR ) ) ) ) / DS ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( ( MUR + MUM ) / MLU ) * ( ( MUC - RRSe ) + DS ) ) + MUM ),MUM ) ,( MUC + ( ( DS / RMSe ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( CRS + RRS ),ARS ) ) ) ) ,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( Min( RMSe ,RMSe ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,ACS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * Max( MUC,MUC ) ) ) - ( ( ( ( MLU * Min( ( DS / MLU ) ,MLU ) ) - DS ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.15678231674191354}, {"determining": "( Min( Min( ( DDR * RRS ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,Max( ARS,ACS ) ) * ( ( Min( MDR ,Max( ARS,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( RMSe - CS ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,RMSe ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.862453531598513, "obj2": 0.07044088089473569}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.3847583643122677, "obj2": 0.44609428986370137}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * Min( RRS ,( BR - ( BR - PN ) ) ) ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( MLU / RCSe ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.570631970260223, "obj2": 0.23719798609444778}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / ( PN / ( ARS * MDR ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( RCSe * ( MUC - RCSe ) ) ) ),CS ) )", "obj1": 0.4479553903345725, "obj2": 0.3782798117323175}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( ( Max( PN,( FirstVNF_Mem * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ),( ( BR * FirstVNF_Mem_Server ) / ( Min( DDR ,MRS ) - ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Max( ( DS / Min( RMSe ,MUR ) ),CS ),( MLU / MLU ) )", "obj1": 0.8996282527881041, "obj2": 0.04751103610605208}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.34014869888475835, "obj2": 0.5078445126631471}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * ( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),RMSe ) * RMSe )", "obj1": 0.604089219330855, "obj2": 0.22797001921633497}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.2206077363701108}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( Max( RCSe,RMSe ) / ( MUM / Min( ( RRSe / MLU ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Min( Min( MRS ,Max( DDR,FirstVNF_Mem ) ) ,( ( PN / ( ARS * Max( CRS,PN ) ) ) - FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUC,RRSe ) + ( RRSe / ( ( ( RRSe / Min( MUR ,RCSe ) ) / MUC ) - DS ) ) ),MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( Min( RCSe ,( MUC - MUR ) ) ,Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) ) )", "obj1": 0.6394052044609665, "obj2": 0.20663717789789368}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - ( CRS + FirstVNF_RAM_Server ) ),AMS ) ) * ( ( Min( MDR ,( Min( MRS ,MDR ) * DDR ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( MLU - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( Max( ( ( MUR * RMSe ) - DS ),CS ),( ( ( Min( MUR ,RRSe ) / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4275092936802974, "obj2": 0.3846506779827674}, {"determining": "Min( Min( Max( ( ( CRS - ARS ) - ARS ),( FirstVNF_Mem / AMS ) ) ,( FirstVNF_RAM / ( ( ( ( ( RRS / FirstVNF_RAM ) * ( ACS / FirstVNF_CPU ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / ( Min( RRS ,AMS ) + FirstVNF_Mem ) ) / CRS ) )", "choosing": "( ( Min( DS ,MUR ) + Max( RMSe,( Max( MUM,( MUR * RRSe ) ) * Max( RRSe,DS ) ) ) ) - Max( RCSe,Min( Max( MLU,( CS * DS ) ) ,RCSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.5201276380651199}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Max( ( ( ( ( PN / FirstVNF_Mem_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( Min( MUM ,RRSe ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6412639405204461, "obj2": 0.19960487774337857}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "( ( ( Min( ( Min( BR ,Max( FirstVNF_Mem_Server,ACS ) ) - BR ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RMSe + MUM ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9739776951672863, "obj2": 0.01683442105312505}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( FirstVNF_Mem - MDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( MUR * ( ( RCSe * MUM ) * ( MUC - ( ( RCSe - CS ) - ( CS * CS ) ) ) ) ) ),CS ) )", "obj1": 0.33271375464684017, "obj2": 0.5172555217415391}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "Min( Min( MRS ,Max( MDR,Max( ACS,ACS ) ) ) ,Max( ( ACS / Min( DDR ,DDR ) ),FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MLU / ( RMSe + ( Min( CS ,( MUC + MUR ) ) - ( Max( RRSe,MLU ) + MUR ) ) ) ) - ( RCSe - MUC ) ),CS ) )", "obj1": 0.29739776951672864, "obj2": 0.5479425717201934}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Max( FirstVNF_CPU_Server,CRS ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) - ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / ( ( MUM + ( MUM + Min( MLU ,MLU ) ) ) + RRSe ) ) ) ) )", "obj1": 0.9516728624535316, "obj2": 0.01896583625099484}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / Min( RRS ,DDR ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUC ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,Min( RMSe ,MUM ) ) ) / ( MUM - DS ) ) ) )", "obj1": 0.42193308550185876, "obj2": 0.3943361180656197}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( Max( FirstVNF_CPU,Const ) / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_CPU / CRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( RRSe + Max( RRSe,MUR ) ),Max( ( RRSe - Min( MUM ,( MUM - ( MUR / MUM ) ) ) ),MUR ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06445678555143437}, {"determining": "Min( ( Min( RRS ,AMS ) + FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_Mem_Server ),Max( BR,( MDR / PN ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( Max( ( ( Max( MUM,RRSe ) * RRSe ) - Max( RCSe,Min( DS ,MUC ) ) ),RMSe ) * ( ( DS / RCSe ) + ( RRSe - ( RMSe * MUC ) ) ) ) ),Min( MUM ,RMSe ) ) )", "obj1": 0.912639405204461, "obj2": 0.038306684105462376}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( ( Max( ( Max( DDR,( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM + ACS ) ) * Min( ( CRS + Const ) ,( ARS / FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( DS - ( ( RRSe / MUR ) + RCSe ) ) - MUM ) - ( MUM - MUM ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( DS / ( MUR + MLU ) ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.19330855018587362, "obj2": 0.6371186840066495}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_Mem_Server * RRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( ( PN / ( ARS * Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( MUC / Max( RMSe,( CS - MUM ) ) ) ) ),CS ) )", "obj1": 0.9386617100371747, "obj2": 0.025425434959709475}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_CPU / CRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( BR * CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( MUC,MUC ) * ( MUC - MLU ) ) ) ),( MUR + CS ) ) )", "obj1": 0.2955390334572491, "obj2": 0.5503965204047563}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( Max( FirstVNF_CPU,Const ) / FirstVNF_RAM_Server ),( ( FirstVNF_RAM * FirstVNF_CPU ) / MRS ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( RRSe + Max( ( Min( ( MUM * RRSe ) ,Max( RMSe,( RMSe + DS ) ) ) / Max( MLU,MUC ) ),MUR ) ),Max( ( RRSe - Min( MUM ,DS ) ),MUR ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06445678555143437}, {"determining": "Min( ( PN * MRS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( ( DS - ( ( ( ( RRSe / CS ) - MUR ) / ( ( ( RCSe + MUR ) - MUR ) + DS ) ) + CS ) ),MUR ) - Max( ( ( MUR / DS ) - ( ( ( MLU + ( Min( MUM ,RCSe ) - MLU ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Max( CS,( Min( CS ,RRSe ) + MUC ) ) ) ) ),CS ) )", "obj1": 0.949814126394052, "obj2": 0.025278193518103235}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5655983396054997}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,( ( DDR - MRS ) - ARS ) ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + ( DDR - CRS ) ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( Min( ( MLU / MLU ) ,( CS - MUM ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6099172440229799}, {"determining": "( Max( DDR,( FirstVNF_Mem - MRS ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / ( MUC + ( CS + RCSe ) ) ) ),RMSe ) * RMSe ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5731497787555002}, {"determining": "( Max( DDR,CRS ) - ( Min( Const ,MRS ) * MDR ) )", "choosing": "( Max( ( Max( RCSe,Max( MUR,( ( RRSe * RCSe ) - ( MUM / Max( MUC,DS ) ) ) ) ) / CS ),( MUR * Min( ( CS - ( RMSe - ( RMSe + CS ) ) ) ,( ( RRSe * MUR ) + ( MUC / ( ( CS + CS ) * RRSe ) ) ) ) ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5659923351785641}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( MUM,MUR ) - ( MUM - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5533012743186397}, {"determining": "( Max( DDR,( ( ARS + ARS ) - MRS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.25464684014869887, "obj2": 0.5837744874456303}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( ( ACS * MDR ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / Max( CRS,BR ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * Min( ( MUR / Max( ( RRSe * RCSe ),RRSe ) ) ,Max( MUR,Max( MUR,DS ) ) ) ) ) ) )", "obj1": 0.9758364312267658, "obj2": 0.009802113993772526}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * RMSe ) - DS ),Max( ( RRSe - Min( MUM ,DS ) ),MUR ) ) )", "obj1": 0.8717472118959108, "obj2": 0.06542212702249349}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( BR * ( MRS * DDR ) ) + Min( AMS ,PN ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( ( RMSe + MLU ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.575422000711748}, {"determining": "Min( Min( ( DDR * RRS ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - Max( ( DS - ( ( MLU / RMSe ) * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.037163921490092046}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,Min( ( ( ACS - MRS ) + Const ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / RMSe ) - ( MUR / DS ) )", "obj1": 0.9275092936802974, "obj2": 0.03622607152568976}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + ARS ) - MDR ) - Max( PN,( ( DDR - MRS ) - ARS ) ) ) + ( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Min( ACS ,BR ) * FirstVNF_Mem ) ) - ARS ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( MUC - ( MUR - ( RRSe - RCSe ) ) ) ) - ( ( ( MLU * Min( ( RRSe / MLU ) ,MLU ) ) - DS ) + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6099172440229799}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * RMSe ) - DS ),CS ) )", "obj1": 0.9349442379182156, "obj2": 0.03168399218013617}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( CRS + RRS ),ARS ) ) ) ) ,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( Min( RMSe ,RMSe ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.6728624535315985, "obj2": 0.1617605546090906}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_CPU / CRS ) / CRS ) / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( ( DDR * FirstVNF_RAM ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUC * ( RMSe + DS ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6486988847583643, "obj2": 0.17479154709246167}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "Min( Min( MRS ,( ( AMS * Const ) / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Min( FirstVNF_Mem ,MRS ) ) ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MLU ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( Max( ( Max( CS,CS ) - CS ),( RRSe * Min( MUC ,RCSe ) ) ) ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.15860000565965834}, {"determining": "( ( PN / Const ) - Min( ACS ,BR ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( Max( MUR,( Max( DS,RRSe ) + ( DS * RRSe ) ) ),( MUR - ( MUR * DS ) ) ) )", "obj1": 0.9814126394052045, "obj2": 0.0071612687173893755}, {"determining": "( ( AMS + ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( CS / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( ( MUC * CS ) * MLU ) ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( ( RMSe + MUM ) * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6446240002537368}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_Mem / AMS ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * RCSe ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.16775538353680083}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / Min( Max( Max( DDR,( RRS - FirstVNF_RAM ) ),( ( ARS / FirstVNF_CPU_Server ) - RRS ) ) ,Min( FirstVNF_Mem ,MRS ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( Max( ( ( RMSe - MUM ) / RCSe ),MUC ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9312267657992565, "obj2": 0.032964585840220856}, {"determining": "Min( Max( DDR,ACS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( ( MUC / CS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.16333217778199915}, {"determining": "( ( Max( ( Max( DDR,( ( BR - RRS ) + ( FirstVNF_CPU_Server + ( BR + FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - Min( MUM ,MUC ) ) / ( RRSe * ( MUC * MUC ) ) ) + CS ) ,( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,MUM ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6434213970516993}, {"determining": "( Max( DDR,( Max( BR,( Min( ( ( CRS + CRS ) / FirstVNF_RAM ) ,( MRS - BR ) ) - ACS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * DS ) - ( MUM - MUM ) ) / ( MUR + Max( Min( Max( DS,( CS * ( ( MUC * MUC ) * RCSe ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.1895910780669145, "obj2": 0.6385969450987298}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( Max( DDR,AMS ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * Min( CS ,( MUR / MUM ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6406114185146071}, {"determining": "( Max( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ACS ) ) - FirstVNF_Mem_Server ),CRS ) - Max( CRS,Max( ARS,Const ) ) )", "choosing": "( Max( ( MUC / CS ),Min( DS ,Max( DS,MLU ) ) ) / Min( MUM ,( MUR * RCSe ) ) )", "obj1": 0.28066914498141265, "obj2": 0.5543717541421864}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_RAM_Server + Max( BR,FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( MUR - ( Min( MLU ,Min( MLU ,RRSe ) ) - DS ) ) - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) - Max( MUR,DS ) )", "obj1": 0.24907063197026022, "obj2": 0.5909799641334449}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / Min( Max( ( FirstVNF_CPU_Server + ( BR - BR ) ),( FirstVNF_RAM_Server / ( FirstVNF_CPU / CRS ) ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( ( Min( MUM ,MUR ) / RCSe ) + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUC ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6524163568773235, "obj2": 0.17358206034590942}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * ( ( ( PN * ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_Mem_Server ) ) / BR ) * ACS ) ) ) - ( ( Min( DDR ,MRS ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( ( MUR - RRSe ) / CS ),( ( ( ( MUR * Max( MUR,Min( MLU ,CS ) ) ) + MUR ) + ( MUR * MLU ) ) + RCSe ) ) / RCSe )", "obj1": 0.2527881040892193, "obj2": 0.5887129915576814}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( FirstVNF_RAM_Server + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - MUM ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6561338289962825, "obj2": 0.1696805961441516}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( MDR + DDR ) ) ) ,( MDR / Min( Max( Const,MDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( Max( Min( RRSe ,MLU ),CS ) + MUR ) ) - ( ( MUC / MLU ) + ( ( MUR * CS ) - CS ) ) )", "obj1": 0.2379182156133829, "obj2": 0.5969882120429084}, {"determining": "Max( Max( MDR,Max( ACS,ACS ) ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( MLU / MLU ) ,MLU ) ) - DS ) ),CS ) ) - ( MUC + MUR ) )", "obj1": 0.241635687732342, "obj2": 0.5961306143996682}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( DDR * ( ( RRS + MRS ) / FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,( ( Max( ( MUR / MLU ),MLU ) / RMSe ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MLU * DS ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.654275092936803, "obj2": 0.17078409864276806}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( PN - ( FirstVNF_CPU_Server * Max( Min( Max( Const,ACS ) ,( Max( FirstVNF_Mem_Server,Min( MDR ,Max( FirstVNF_Mem,CRS ) ) ) - FirstVNF_CPU_Server ) ),CRS ) ) )", "choosing": "( Max( ( Max( ( ( Min( DS ,Max( DS,MLU ) ) - MUM ) * ( RRSe - MUM ) ),( RCSe - RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MUR * RCSe ) - DS ) )", "obj1": 0.9925650557620818, "obj2": 0.0025248669404042633}, {"determining": "( PN - ( ( Min( ( Max( FirstVNF_CPU_Server,CRS ) - DDR ) ,DDR ) - AMS ) * Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( ( CS - Min( MLU ,( DS + RRSe ) ) ),( MUC / ( ( Min( RCSe ,MLU ) + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - DS ) )", "obj1": 0.9851301115241635, "obj2": 0.006564292171286463}, {"determining": "Min( ( ( Max( ACS,CRS ) - ( FirstVNF_CPU_Server * ARS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( ( ( FirstVNF_RAM + RRS ) + ( MDR + FirstVNF_Mem ) ) / ( MRS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( CS / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - Min( RRSe ,MUR ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.24349442379182157, "obj2": 0.5942057739909321}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + FirstVNF_RAM ) ) ) ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * RRS ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) )", "choosing": "( ( ( ( MUC * MUM ) + MUM ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( ( MUC - MUM ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.25092936802973975, "obj2": 0.5890493984880235}], "22": [{"determining": "( Max( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ACS ) ) - ( ( FirstVNF_CPU / CRS ) / CRS ) ),CRS ) - Max( CRS,Max( ARS,Const ) ) )", "choosing": "( Max( ( MUC / CS ),Min( ( ( RCSe - CS ) - ( CS * CS ) ) ,Max( DS,MLU ) ) ) / Min( MUM ,( MUR * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Max( ( ACS - CRS ),FirstVNF_CPU ) - FirstVNF_RAM_Server ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( ( Max( ( ( ( MUR + RCSe ) / ( ( MUR - MUR ) + DS ) ) + CS ),RMSe ) * ( ( CS + RCSe ) + MUM ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( CRS + RRS ),ARS ) ) ) ) ,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( Min( RMSe ,RMSe ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ( FirstVNF_RAM / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) * Max( Max( RRS,Min( ( CRS / MRS ) ,DDR ) ),ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( Max( ( MUR / MLU ),MLU ) / RMSe ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * RMSe ) + MUM ) ) / ( MUC / CS ) ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.15462562634381788}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.3847583643122677, "obj2": 0.44609428986370137}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( Max( RRS,FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM - CS ) * DS ) - ( ( ( ( MLU * Min( ( DS / MLU ) ,MLU ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.8605947955390335, "obj2": 0.0719833355427984}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * Min( RRS ,( BR - ( BR - PN ) ) ) ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( MLU / RCSe ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.570631970260223, "obj2": 0.23719798609444778}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / ( PN / ( ARS * MDR ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( RCSe * ( MUC - RCSe ) ) ) ),CS ) )", "obj1": 0.4479553903345725, "obj2": 0.3782798117323175}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.34014869888475835, "obj2": 0.5078445126631471}, {"determining": "( ( ( Const / MRS ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( ( FirstVNF_Mem_Server - ( AMS + Const ) ) ,( ( PN / FirstVNF_Mem ) - Min( ( Min( DDR ,BR ) - ARS ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MUC / ( ( MUM + Min( MLU ,CS ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2212579979618508}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( Max( RCSe,RMSe ) / ( MUM / Min( ( RRSe / MLU ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6245353159851301, "obj2": 0.1999783864513288}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - ( CRS + FirstVNF_RAM_Server ) ),AMS ) ) * ( ( Min( MDR ,( Min( MRS ,MDR ) * DDR ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( MLU - ( Max( RRSe,MLU ) + MUR ) ) ) ),Max( Max( ( ( MUR * RMSe ) - DS ),CS ),( ( ( Min( MUR ,RRSe ) / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4275092936802974, "obj2": 0.3846506779827674}, {"determining": "Min( Min( Max( ( ( CRS - ARS ) - ARS ),( FirstVNF_Mem / AMS ) ) ,( FirstVNF_RAM / ( ( ( ( ( RRS / FirstVNF_RAM ) * ( ACS / FirstVNF_CPU ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / ( Min( RRS ,AMS ) + FirstVNF_Mem ) ) / CRS ) )", "choosing": "( ( Min( DS ,MUR ) + Max( RMSe,( Max( MUM,( MUR * RRSe ) ) * Max( RRSe,DS ) ) ) ) - Max( RCSe,Min( Max( MLU,( CS * DS ) ) ,RCSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.5201276380651199}, {"determining": "( Max( ( ( ( ( PN / FirstVNF_Mem_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( Min( MUM ,RRSe ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6412639405204461, "obj2": 0.19960487774337857}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( Max( DDR,( Max( FirstVNF_CPU,( ACS * ( FirstVNF_CPU / CRS ) ) ) * Min( Max( RRS,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ,( Min( ( FirstVNF_Mem_Server - ( BR + BR ) ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,RRS ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( RCSe - ( RMSe * ( MUM * MLU ) ) ) ) ) ) / ( ( ( Max( CS,RMSe ) * RCSe ) / MUC ) * ( MUM - DS ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5444248498715188}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "( ( ( Min( ( Min( BR ,Max( FirstVNF_Mem_Server,ACS ) ) - BR ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RMSe + MUM ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9739776951672863, "obj2": 0.01683442105312505}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,ACS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * Max( MUC,MUC ) ) ) - ( ( ( ( MLU * Min( ( DS / MLU ) ,MLU ) ) - DS ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.15678231674191354}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( FirstVNF_Mem - MDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( MUR * ( ( RCSe * MUM ) * ( MUC - ( ( RCSe - CS ) - ( CS * CS ) ) ) ) ) ),CS ) )", "obj1": 0.33271375464684017, "obj2": 0.5172555217415391}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( ( Max( PN,( FirstVNF_Mem * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ),( ( BR * FirstVNF_Mem_Server ) / ( Min( DDR ,MRS ) - ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Max( ( DS / Min( RMSe ,MUR ) ),CS ),( MLU / MLU ) )", "obj1": 0.8996282527881041, "obj2": 0.04751103610605208}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_Mem_Server * RRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( ( PN / ( ARS * Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( MUC / Max( RMSe,( CS - MUM ) ) ) ) ),CS ) )", "obj1": 0.9386617100371747, "obj2": 0.025425434959709475}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.2206077363701108}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( DDR * ( ( RRS + MRS ) / FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,( ( Max( ( MUR / MLU ),MLU ) / RMSe ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MLU * DS ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9219330855018587, "obj2": 0.02950351733189799}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( BR + Max( FirstVNF_RAM,CRS ) ) - ( ( ( PN * ARS ) * MRS ) * AMS ) )", "choosing": "Max( ( ( MLU + ( RRSe - MUM ) ) + CS ),( MLU / MLU ) )", "obj1": 0.8996282527881041, "obj2": 0.04751103610605208}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( BR / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) - Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.9516728624535316, "obj2": 0.01896583625099484}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / Min( RRS ,DDR ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUC ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,Min( RMSe ,MUM ) ) ) / ( MUM - DS ) ) ) )", "obj1": 0.42193308550185876, "obj2": 0.3943361180656197}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) + Max( ( CRS / MDR ),Max( ( Max( FirstVNF_CPU,Const ) / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( RRSe + Max( RRSe,MUR ) ),( MUM - DS ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06445678555143437}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( FirstVNF_RAM / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.9107806691449815, "obj2": 0.04042191545269144}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( ( Max( ( Max( DDR,( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM + ACS ) ) * Min( ( CRS + Const ) ,( ARS / FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( DS - ( ( RRSe / MUR ) + RCSe ) ) - MUM ) - ( MUM - MUM ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( DS / ( MUR + MLU ) ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.19330855018587362, "obj2": 0.6371186840066495}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( Max( FirstVNF_CPU,Const ) / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_CPU / CRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( RRSe + Max( RRSe,MUR ) ),Max( ( RRSe - Min( MUM ,( MUM - ( MUR / MUM ) ) ) ),MUR ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06445678555143437}, {"determining": "Min( ( PN * MRS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( ( DS - ( ( ( ( RRSe / CS ) - MUR ) / ( ( ( RCSe + MUR ) - MUR ) + DS ) ) + CS ) ),MUR ) - Max( ( ( MUR / DS ) - ( ( ( MLU + ( Min( MUM ,RCSe ) - MLU ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Max( CS,( Min( CS ,RRSe ) + MUC ) ) ) ) ),CS ) )", "obj1": 0.949814126394052, "obj2": 0.025278193518103235}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5655983396054997}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,( ( DDR - MRS ) - ARS ) ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + ( DDR - CRS ) ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( Min( ( MLU / MLU ) ,( CS - MUM ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6099172440229799}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "( Min( Min( ( DDR * RRS ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,Max( ARS,ACS ) ) * ( ( Min( MDR ,Max( ARS,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( RMSe - CS ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,RMSe ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.862453531598513, "obj2": 0.07044088089473569}, {"determining": "( Max( DDR,( ( ARS + ARS ) - MRS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.25464684014869887, "obj2": 0.5837744874456303}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( ( ACS * MDR ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / Max( CRS,BR ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * Min( ( MUR / Max( ( RRSe * RCSe ),RRSe ) ) ,Max( MUR,Max( MUR,DS ) ) ) ) ) ) )", "obj1": 0.9758364312267658, "obj2": 0.009802113993772526}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * RMSe ) - DS ),Max( ( RRSe - Min( MUM ,DS ) ),MUR ) ) )", "obj1": 0.8717472118959108, "obj2": 0.06542212702249349}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( BR * ( MRS * DDR ) ) + Min( AMS ,PN ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( ( RMSe + MLU ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.575422000711748}, {"determining": "( Max( CRS,Max( ARS,Const ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( RCSe,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5518870915019836}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( PN - ( FirstVNF_CPU_Server * Max( Min( Max( Const,ACS ) ,( Max( FirstVNF_Mem_Server,Min( MDR ,Max( FirstVNF_Mem,CRS ) ) ) - FirstVNF_CPU_Server ) ),CRS ) ) )", "choosing": "( Max( ( Max( ( ( Min( DS ,Max( DS,MLU ) ) - MUM ) * ( RRSe - MUM ) ),( RCSe - RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( ( MUR * RCSe ) - DS ) )", "obj1": 0.9925650557620818, "obj2": 0.0025248669404042633}, {"determining": "( PN - ( ( Min( ( Max( FirstVNF_CPU_Server,CRS ) - DDR ) ,DDR ) - AMS ) * Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( ( CS - Min( MLU ,( DS + RRSe ) ) ),( MUC / ( ( Min( RCSe ,MLU ) + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - DS ) )", "obj1": 0.9851301115241635, "obj2": 0.006564292171286463}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + ARS ) - MDR ) - Max( PN,( ( DDR - MRS ) - ARS ) ) ) + ( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Min( ACS ,BR ) * FirstVNF_Mem ) ) - ARS ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( MUC - ( MUR - ( RRSe - RCSe ) ) ) ) - ( ( ( MLU * Min( ( RRSe / MLU ) ,MLU ) ) - DS ) + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6099172440229799}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUR * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9200743494423792, "obj2": 0.03601686666342314}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( CRS + RRS ),ARS ) ) ) ) ,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( Min( RMSe ,RMSe ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.6728624535315985, "obj2": 0.1617605546090906}, {"determining": "( Max( DDR,CRS ) - ( Min( Const ,MRS ) * MDR ) )", "choosing": "( Max( ( Max( RCSe,Max( MUR,( ( RRSe * RCSe ) - ( MUM / Max( MUC,DS ) ) ) ) ) / CS ),( MUR * Min( ( CS - ( RMSe - ( RMSe + CS ) ) ) ,( ( RRSe * MUR ) + ( MUC / ( ( CS + CS ) * RRSe ) ) ) ) ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5659923351785641}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( PN / Const ) - ( ( MRS + FirstVNF_CPU ) * MDR ) ) - FirstVNF_Mem_Server ) ,( ( CRS * CRS ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( MUC + ( ( RCSe - CS ) - ( CS * CS ) ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5716077745771433}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "Min( Min( MRS ,( ( AMS * Const ) / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Min( FirstVNF_Mem ,MRS ) ) ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MLU ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( Max( ( Max( CS,CS ) - CS ),( RRSe * Min( MUC ,RCSe ) ) ) ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.15860000565965834}, {"determining": "( ( PN / Const ) - Min( ACS ,BR ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( Max( MUR,( Max( DS,RRSe ) + ( DS * RRSe ) ) ),( MUR - ( MUR * DS ) ) ) )", "obj1": 0.9814126394052045, "obj2": 0.0071612687173893755}, {"determining": "( ( AMS + ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( CS / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( ( MUC * CS ) * MLU ) ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( ( RMSe + MUM ) * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6446240002537368}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_Mem / AMS ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * RCSe ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.16775538353680083}, {"determining": "Min( Max( DDR,ACS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( ( MUC / CS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.16333217778199915}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,DS ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.2206077363701108}, {"determining": "( ( Max( ( Max( DDR,( ( BR - RRS ) + ( FirstVNF_CPU_Server + ( BR + FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - Min( MUM ,MUC ) ) / ( RRSe * ( MUC * MUC ) ) ) + CS ) ,( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,MUM ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6434213970516993}, {"determining": "( Max( DDR,( FirstVNF_Mem - MRS ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / ( MUC + ( CS + RCSe ) ) ) ),RMSe ) * RMSe ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5731497787555002}, {"determining": "( Max( DDR,( Max( BR,( Min( ( ( CRS + CRS ) / FirstVNF_RAM ) ,( MRS - BR ) ) - ACS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * DS ) - ( MUM - MUM ) ) / ( MUR + Max( Min( Max( DS,( CS * ( ( MUC * MUC ) * RCSe ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.1895910780669145, "obj2": 0.6385969450987298}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( Max( DDR,AMS ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * Min( CS ,( MUR / MUM ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6406114185146071}, {"determining": "( Max( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ACS ) ) - FirstVNF_Mem_Server ),CRS ) - Max( CRS,Max( ARS,Const ) ) )", "choosing": "( Max( ( MUC / CS ),Min( DS ,Max( DS,MLU ) ) ) / Min( MUM ,( MUR * RCSe ) ) )", "obj1": 0.28066914498141265, "obj2": 0.5543717541421864}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_RAM_Server + Max( BR,FirstVNF_CPU_Server ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( ( Max( ( RMSe * CS ),( ( MUR - ( Min( MLU ,Min( MLU ,RRSe ) ) - DS ) ) - DS ) ) / ( ( MUC * CS ) * Min( CS ,MUC ) ) ) - Max( MUR,DS ) )", "obj1": 0.24907063197026022, "obj2": 0.5909799641334449}, {"determining": "( Max( DDR,( Const / CRS ) ) / ( ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( Min( MRS ,( ( ARS / CRS ) / CRS ) ) ,Max( ARS,ACS ) ) + ( ( RRS * ( ACS - FirstVNF_Mem ) ) - Max( PN,ACS ) ) ) ) * Max( ( ARS / CRS ),Min( ACS ,MRS ) ) ) )", "choosing": "Min( Max( Min( ( ( ( ( MUR * MUM ) - MUR ) * MUM ) - MUR ) ,Max( RMSe,( ( RMSe - RRSe ) * ( ( ( RRSe * MLU ) * CS ) + MUM ) ) ) ),RMSe ) ,( ( ( MLU / RRSe ) + CS ) - ( ( RRSe - RCSe ) + ( DS + Max( RRSe,MUC ) ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.0018815931860919444}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( MUM,MUR ) - ( MUM - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5533012743186397}, {"determining": "Min( Min( ( DDR * RRS ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - Max( ( DS - ( ( MLU / RMSe ) * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.037163921490092046}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * ( ( ( PN * ( Min( FirstVNF_CPU_Server ,MRS ) / FirstVNF_Mem_Server ) ) / BR ) * ACS ) ) ) - ( ( Min( DDR ,MRS ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( ( MUR - RRSe ) / CS ),( ( ( ( MUR * Max( MUR,Min( MLU ,CS ) ) ) + MUR ) + ( MUR * MLU ) ) + RCSe ) ) / RCSe )", "obj1": 0.2527881040892193, "obj2": 0.5887129915576814}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_CPU / CRS ) / CRS ) / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) / ( BR + Min( ( DDR * FirstVNF_RAM ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUC * ( RMSe + DS ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6468401486988847, "obj2": 0.17507421803222786}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / Min( Max( ( ( ARS - FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,PN ) ),( FirstVNF_RAM_Server / ( Min( FirstVNF_CPU ,PN ) / CRS ) ) ) ,Max( FirstVNF_CPU_Server,RRS ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( ( Min( MUM ,MUR ) / RCSe ) + MUM ) ,( ( ( ( MUC - MLU ) + RRSe ) - ( ( MUC * MUC ) + MUC ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( Max( RMSe,MUR ) - DS ) ) ) )", "obj1": 0.6524163568773235, "obj2": 0.17256636370732895}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( FirstVNF_RAM_Server + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - MUM ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6561338289962825, "obj2": 0.1696805961441516}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( MDR + DDR ) ) ) ,( MDR / Min( Max( Const,MDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( Max( Min( RRSe ,MLU ),CS ) + MUR ) ) - ( ( MUC / MLU ) + ( ( MUR * CS ) - CS ) ) )", "obj1": 0.2379182156133829, "obj2": 0.5969882120429084}], "23": [{"determining": "( ( Max( ( Max( ( ACS - CRS ),FirstVNF_CPU ) - FirstVNF_RAM_Server ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - Min( Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,FirstVNF_CPU ) ,MDR ) )", "choosing": "( ( Max( ( ( DS + MUM ) + CS ),RMSe ) * ( ( CS + RCSe ) + MUM ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ACS ) ) - ( ( FirstVNF_CPU / CRS ) / CRS ) ),CRS ) - Max( CRS,Max( ARS,Const ) ) )", "choosing": "( Max( ( MUC / CS ),Min( ( ( RCSe - CS ) - ( CS * CS ) ) ,Max( DS,MLU ) ) ) / Min( MUM ,( MUR * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( CRS + RRS ),ARS ) ) ) ) ,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( Min( RMSe ,RMSe ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + ( AMS * ( ARS * MDR ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( MUR + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( MUC - ( ( MLU - MLU ) / RMSe ) ) - Min( ( DS - ( MUM - MUR ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.12639405204460966, "obj2": 0.7608652385420206}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ( FirstVNF_RAM / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) * Max( Max( RRS,Min( ( CRS / MRS ) ,DDR ) ),ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( Max( ( MUR / MLU ),MLU ) / RMSe ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * RMSe ) + MUM ) ) / ( MUC / CS ) ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.15462562634381788}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.3847583643122677, "obj2": 0.44609428986370137}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * Min( RRS ,( BR - ( BR - PN ) ) ) ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( MLU / RCSe ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.570631970260223, "obj2": 0.23719798609444778}, {"determining": "Min( Min( Max( RRS,FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM - CS ) * DS ) - ( ( ( ( MLU * Min( ( DS / MLU ) ,MLU ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.8605947955390335, "obj2": 0.0719833355427984}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / ( PN / ( ARS * MDR ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( RCSe * ( MUC - RCSe ) ) ) ),CS ) )", "obj1": 0.4479553903345725, "obj2": 0.3782798117323175}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Min( ( Const / MRS ) ,Max( ARS,ACS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( RMSe * CS ) - ( RCSe - Min( MUM ,MLU ) ) ),CS ) )", "obj1": 0.34014869888475835, "obj2": 0.5078445126631471}, {"determining": "( ( ( Const / MRS ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( ( FirstVNF_Mem_Server - ( AMS + Const ) ) ,( ( PN / FirstVNF_Mem ) - Min( ( Min( DDR ,BR ) - ARS ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MUC / ( ( MUM + Min( MLU ,CS ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2212579979618508}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6245353159851301, "obj2": 0.1999783864513288}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( RMSe * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8504853120122445}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( Max( RCSe,RMSe ) / ( MUM / Min( ( RRSe / MLU ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4275092936802974, "obj2": 0.3846506779827674}, {"determining": "Min( Min( Max( ( ( CRS - ARS ) - ARS ),( FirstVNF_Mem / AMS ) ) ,( FirstVNF_RAM / ( ( ( ( ( RRS / FirstVNF_RAM ) * ( ACS / FirstVNF_CPU ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / ( Min( RRS ,AMS ) + FirstVNF_Mem ) ) / CRS ) )", "choosing": "( ( Min( DS ,MUR ) + Max( RMSe,( Max( MUM,( MUR * RRSe ) ) * Max( RRSe,DS ) ) ) ) - Max( RCSe,Min( Max( MLU,( CS * DS ) ) ,RCSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.5201276380651199}, {"determining": "( Max( ( ( ( ( PN / FirstVNF_Mem_Server ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( Min( MUM ,RRSe ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6412639405204461, "obj2": 0.19960487774337857}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) * ( ( Min( MDR ,( FirstVNF_CPU_Server + ( BR - BR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe - ( MUR - Max( DS,MUC ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "( ( ( Min( ( Min( BR ,Max( FirstVNF_Mem_Server,ACS ) ) - BR ) ,PN ) - FirstVNF_RAM_Server ) + Min( ( Const * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MRS ) )", "choosing": "( ( RMSe + MUM ) - ( ( Min( DS ,MLU ) / ( MUR - MLU ) ) / Min( Max( ( ( ( MUM / MLU ) * ( MLU + ( RCSe + RMSe ) ) ) + MUM ),MUM ) ,MLU ) ) )", "obj1": 0.9739776951672863, "obj2": 0.01683442105312505}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,ACS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * Max( MUC,MUC ) ) ) - ( ( ( ( MLU * Min( ( DS / MLU ) ,MLU ) ) - DS ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.15678231674191354}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( FirstVNF_Mem - MDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( MUR * ( ( RCSe * MUM ) * ( MUC - ( ( RCSe - CS ) - ( CS * CS ) ) ) ) ) ),CS ) )", "obj1": 0.33271375464684017, "obj2": 0.5172555217415391}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( ( Max( PN,( FirstVNF_Mem * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ),( ( BR * FirstVNF_Mem_Server ) / ( Min( DDR ,MRS ) - ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Max( ( DS / Min( RMSe ,MUR ) ),CS ),( MLU / MLU ) )", "obj1": 0.8996282527881041, "obj2": 0.04751103610605208}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_Mem_Server * RRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( ( PN / ( ARS * Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( MUC / Max( RMSe,( CS - MUM ) ) ) ) ),CS ) )", "obj1": 0.9386617100371747, "obj2": 0.025425434959709475}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.2206077363701108}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( DDR * ( ( RRS + MRS ) / FirstVNF_Mem ) ) ) )", "choosing": "( Max( RMSe,( ( Max( ( MUR / MLU ),MLU ) / RMSe ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MLU * DS ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9219330855018587, "obj2": 0.02950351733189799}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( BR + Max( FirstVNF_RAM,CRS ) ) - ( ( ( PN * ARS ) * MRS ) * AMS ) )", "choosing": "Max( ( ( MLU + ( RRSe - MUM ) ) + CS ),( MLU / MLU ) )", "obj1": 0.8996282527881041, "obj2": 0.04751103610605208}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( BR / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) - Max( Min( DS ,( Min( MUM ,MUR ) / RCSe ) ),MUC ) )", "obj1": 0.9516728624535316, "obj2": 0.01896583625099484}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2955390334572491, "obj2": 0.5406951148096317}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / Min( RRS ,DDR ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUC ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,Min( RMSe ,MUM ) ) ) / ( MUM - DS ) ) ) )", "obj1": 0.42193308550185876, "obj2": 0.3943361180656197}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( Max( FirstVNF_CPU,Const ) / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_CPU / CRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( RRSe + Max( RRSe,MUR ) ),Max( ( RRSe - Min( MUM ,( MUM - ( MUR / MUM ) ) ) ),MUR ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06445678555143437}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( FirstVNF_RAM / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.9107806691449815, "obj2": 0.04042191545269144}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "( Max( DDR,( ( ARS + ARS ) - MRS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.25464684014869887, "obj2": 0.5837744874456303}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( ( Max( ( Max( DDR,( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM + ACS ) ) * Min( ( CRS + Const ) ,( ARS / FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( DS - ( ( RRSe / MUR ) + RCSe ) ) - MUM ) - ( MUM - MUM ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( DS / ( MUR + MLU ) ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.19330855018587362, "obj2": 0.6371186840066495}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) + Max( ( CRS / MDR ),Max( ( Max( FirstVNF_CPU,Const ) / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( RRSe + Max( RRSe,MUR ) ),( MUM - DS ) ) )", "obj1": 0.8736059479553904, "obj2": 0.06445678555143437}, {"determining": "Min( ( PN * MRS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( ( DS - ( ( ( ( RRSe / CS ) - MUR ) / ( ( ( RCSe + MUR ) - MUR ) + DS ) ) + CS ) ),MUR ) - Max( ( ( MUR / DS ) - ( ( ( MLU + ( Min( MUM ,RCSe ) - MLU ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Max( CS,( Min( CS ,RRSe ) + MUC ) ) ) ) ),CS ) )", "obj1": 0.949814126394052, "obj2": 0.025278193518103235}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5655983396054997}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,( ( DDR - MRS ) - ARS ) ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + ( DDR - CRS ) ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( Min( ( MLU / MLU ) ,( CS - MUM ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6099172440229799}, {"determining": "( Max( DDR,( Max( FirstVNF_CPU,( ACS * ( FirstVNF_CPU / CRS ) ) ) * Min( Max( RRS,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ,( Min( ( FirstVNF_Mem_Server - ( BR + BR ) ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,RRS ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( RCSe - ( RMSe * ( MUM * MLU ) ) ) ) ) ) / ( ( ( Max( CS,RMSe ) * RCSe ) / MUC ) * ( MUM - DS ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5444248498715188}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( ( ACS * MDR ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / Max( CRS,BR ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * Min( ( MUR / Max( ( RRSe * RCSe ),RRSe ) ) ,Max( MUR,Max( MUR,DS ) ) ) ) ) ) )", "obj1": 0.9758364312267658, "obj2": 0.009802113993772526}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_CPU / CRS ) / CRS ) / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) / ( BR + Min( ( DDR * FirstVNF_RAM ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUC * ( RMSe + DS ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6468401486988847, "obj2": 0.17507421803222786}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( BR * ( MRS * DDR ) ) + Min( AMS ,PN ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( ( RMSe + MLU ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.575422000711748}, {"determining": "( Max( CRS,Max( ARS,Const ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( RCSe,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5518870915019836}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( PN - ( ( Min( ( Max( FirstVNF_CPU_Server,CRS ) - DDR ) ,DDR ) - AMS ) * Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( ( CS - Min( MLU ,( DS + RRSe ) ) ),( MUC / ( ( Min( RCSe ,MLU ) + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - DS ) )", "obj1": 0.9851301115241635, "obj2": 0.006564292171286463}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( Max( MDR,MDR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ,( ( BR / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU ) + RRS ) ,( FirstVNF_Mem - RRS ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( RCSe - CS ) ) - Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.9925650557620818, "obj2": 0.0023648778955542623}, {"determining": "Min( ( ( ( RRS - BR ) - Max( PN,( ( DDR - MRS ) - ARS ) ) ) + ( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Min( ACS ,BR ) * FirstVNF_Mem ) ) - ARS ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( MUM,Max( ( RCSe - DS ),Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( Min( ( MLU / MLU ) ,MLU ) - CS ) ) ) - ( ( ( MLU * Min( ( RRSe / MLU ) ,MLU ) ) - DS ) + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( MLU / ( MLU + DS ) ) ,( ( MLU / MLU ) / MUC ) ) + CS ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6099172440229799}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUR * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9200743494423792, "obj2": 0.03601686666342314}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( ( MUR * RMSe ) - DS ),Max( ( RRSe - Min( MUM ,DS ) ),MUR ) ) )", "obj1": 0.8717472118959108, "obj2": 0.06542212702249349}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( MDR + DDR ) ) ) ,( MDR / Min( Max( Const,MDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( Max( Min( RRSe ,MLU ),CS ) + MUR ) ) - ( ( MUC / MLU ) + ( ( MUR * CS ) - CS ) ) )", "obj1": 0.2379182156133829, "obj2": 0.5969882120429084}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( FirstVNF_RAM - RRS ) )", "choosing": "( ( RMSe - ( MUR * Min( ( MUC * Min( DS ,( ( RCSe / MLU ) + RRSe ) ) ) ,( MUM / RMSe ) ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - MUM ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6524163568773235, "obj2": 0.16991150381766343}, {"determining": "Min( Min( MRS ,( PN / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( MLU * Min( ( DS / MLU ) ,RRSe ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.8605947955390335, "obj2": 0.0719833355427984}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( CRS + RRS ),ARS ) ) ) ) ,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( Min( RMSe ,RMSe ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.6728624535315985, "obj2": 0.1617605546090906}, {"determining": "Min( Min( ( DDR * RRS ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - Max( ( DS - ( ( MLU / RMSe ) * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.037163921490092046}, {"determining": "( Max( DDR,CRS ) - ( Min( Const ,MRS ) * MDR ) )", "choosing": "( Max( ( Max( RCSe,Max( MUR,( ( RRSe * RCSe ) - ( MUM / Max( MUC,DS ) ) ) ) ) / CS ),( MUR * Min( ( CS - ( RMSe - ( RMSe + CS ) ) ) ,( ( RRSe * MUR ) + ( MUC / ( ( CS + CS ) * RRSe ) ) ) ) ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5659923351785641}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( PN / Const ) - ( ( MRS + FirstVNF_CPU ) * MDR ) ) - FirstVNF_Mem_Server ) ,( ( CRS * CRS ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( MUC + ( ( RCSe - CS ) - ( CS * CS ) ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5716077745771433}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "Min( Min( MRS ,( ( AMS * Const ) / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Min( FirstVNF_Mem ,MRS ) ) ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MLU ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( Max( ( Max( CS,CS ) - CS ),( RRSe * Min( MUC ,RCSe ) ) ) ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6765799256505576, "obj2": 0.15860000565965834}, {"determining": "( ( PN / Const ) - Min( ACS ,BR ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( Max( MUR,( Max( DS,RRSe ) + ( DS * RRSe ) ) ),( MUR - ( MUR * DS ) ) ) )", "obj1": 0.9814126394052045, "obj2": 0.0071612687173893755}, {"determining": "( ( AMS + ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( CS / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( ( MUC * CS ) * MLU ) ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( ( RMSe + MUM ) * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6446240002537368}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_Mem / AMS ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * RCSe ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.16775538353680083}, {"determining": "Min( Max( DDR,ACS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( ( MUC / CS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.16333217778199915}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( FirstVNF_CPU_Server + ( BR - BR ) ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.2206077363701108}, {"determining": "( ( Max( ( Max( DDR,( ( BR - RRS ) + ( FirstVNF_CPU_Server + ( BR + FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - Min( MUM ,MUC ) ) / ( RRSe * ( MUC * MUC ) ) ) + CS ) ,( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,MUM ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6434213970516993}, {"determining": "( Max( DDR,( FirstVNF_Mem - MRS ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / ( MUC + ( CS + RCSe ) ) ) ),RMSe ) * RMSe ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5731497787555002}, {"determining": "( Max( DDR,( Max( BR,( Min( ( ( CRS + CRS ) / FirstVNF_RAM ) ,( MRS - BR ) ) - ACS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * DS ) - ( MUM - MUM ) ) / ( MUR + Max( Min( Max( DS,( CS * ( ( MUC * MUC ) * RCSe ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.1895910780669145, "obj2": 0.6385969450987298}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( Max( DDR,AMS ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * Min( CS ,( MUR / MUM ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6406114185146071}, {"determining": "( Max( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ACS ) ) - FirstVNF_Mem_Server ),CRS ) - Max( CRS,Max( ARS,Const ) ) )", "choosing": "( Max( ( MUC / CS ),Min( DS ,Max( DS,MLU ) ) ) / Min( MUM ,( MUR * RCSe ) ) )", "obj1": 0.28066914498141265, "obj2": 0.5543717541421864}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( MUM,MUR ) - ( MUM - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5533012743186397}], "24": [{"determining": "( PN - ( Min( ( Max( Max( RRS,MRS ),FirstVNF_RAM ) + ( BR / FirstVNF_Mem ) ) ,FirstVNF_CPU ) * ( ARS * ( ( Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),Min( ( RRS * ACS ) ,ACS ) ) * ACS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( ( MLU + RMSe ) + MUM ) ,MUM ) / Max( ( RRSe + Max( RRSe,MUR ) ),Max( ( RRSe - Min( MUM ,( MUM - ( MUR / MUM ) ) ) ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Max( ( ACS - CRS ),FirstVNF_CPU ) - FirstVNF_RAM_Server ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - Min( Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,FirstVNF_CPU ) ,MDR ) )", "choosing": "( ( Max( ( ( DS + MUM ) + CS ),RMSe ) * ( ( CS + RCSe ) + MUM ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - Min( ( ( BR + ( ACS - FirstVNF_Mem_Server ) ) / ACS ) ,FirstVNF_CPU ) ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( RCSe + CS ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,MUR ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.533457249070632, "obj2": 0.3007682626769369}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + ( AMS * ( ARS * MDR ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( MUR + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( MUC - ( ( MLU - MLU ) / RMSe ) ) - Min( ( DS - ( MUM - MUR ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.12639405204460966, "obj2": 0.7608652385420206}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6970260223048327, "obj2": 0.1366944470166365}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( CRS + RRS ),ARS ) ) ) ) ,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( Min( RMSe ,RMSe ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.3847583643122677, "obj2": 0.44609428986370137}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( Max( RRS,FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM - CS ) * DS ) - ( ( ( ( MLU * Min( ( DS / MLU ) ,MLU ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.8568773234200744, "obj2": 0.07439381145207005}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * Min( RRS ,( BR - ( BR - PN ) ) ) ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( MLU / RCSe ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.570631970260223, "obj2": 0.23719798609444778}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - ( Min( DS ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( Max( CRS,( PN / FirstVNF_Mem_Server ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( MUM - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.3215613382899628, "obj2": 0.500895885804047}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / ( PN / ( ARS * MDR ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( RCSe * ( MUC - RCSe ) ) ) ),CS ) )", "obj1": 0.4479553903345725, "obj2": 0.3782798117323175}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "( ( ( Const / MRS ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( ( FirstVNF_Mem_Server - ( AMS + Const ) ) ,( ( PN / FirstVNF_Mem ) - Min( ( Min( DDR ,BR ) - ARS ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MUC / ( ( MUM + Min( MLU ,CS ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2212579979618508}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "Min( Min( Max( ( ( CRS - ARS ) - ARS ),( FirstVNF_Mem / AMS ) ) ,( FirstVNF_RAM / ( ( ( ( ( RRS / FirstVNF_RAM ) * ( ACS / FirstVNF_CPU ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / ( Min( RRS ,AMS ) + FirstVNF_Mem ) ) / CRS ) )", "choosing": "( ( Min( DS ,MUR ) + Max( RMSe,( Max( MUM,( MUR * RRSe ) ) * Max( RRSe,DS ) ) ) ) - Max( RCSe,Min( Max( MLU,( CS * DS ) ) ,RCSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.5201276380651199}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( Max( RCSe,RMSe ) / ( MUM / Min( ( RRSe / MLU ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,ACS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * Max( MUC,MUC ) ) ) - ( ( ( ( MLU * Min( ( DS / MLU ) ,MLU ) ) - DS ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.15678231674191354}, {"determining": "( Max( ( ( ( BR - FirstVNF_RAM ) - Const ) - Min( ARS ,Const ) ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe + MUR ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + ( DS * CS ) ) )", "obj1": 0.6301115241635687, "obj2": 0.1984990411497409}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - ( Const + ( ( BR + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,ACS ) ) - Max( FirstVNF_RAM,BR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / ( RRSe / CS ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( RMSe * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8504853120122445}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6245353159851301, "obj2": 0.1999783864513288}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( ( Max( PN,( FirstVNF_Mem * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ),( ( BR * FirstVNF_Mem_Server ) / ( Min( DDR ,MRS ) - ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Max( ( DS / Min( RMSe ,MUR ) ),CS ),( MLU / MLU ) )", "obj1": 0.8996282527881041, "obj2": 0.04751103610605208}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( PN / ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) ) ) ,( BR + PN ) )", "choosing": "( Max( RMSe,( MLU * RCSe ) ) - ( ( ( ( MLU * Min( ( DS / MLU ) ,RRSe ) ) - ( Min( ( MLU + RMSe ) ,MUC ) / ( MLU * MUC ) ) ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9702602230483272, "obj2": 0.015267070196766923}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.2206077363701108}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_Mem_Server * RRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( ( PN / ( ARS * Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( MUC / Max( RMSe,( CS - MUM ) ) ) ) ),CS ) )", "obj1": 0.9386617100371747, "obj2": 0.025425434959709475}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),ARS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4275092936802974, "obj2": 0.3846506779827674}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9219330855018587, "obj2": 0.02933865687026758}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2955390334572491, "obj2": 0.5406951148096317}, {"determining": "( ( BR + Max( FirstVNF_RAM,CRS ) ) - ( ( ( PN * ARS ) * MRS ) * AMS ) )", "choosing": "Max( ( ( MLU + ( RRSe - MUM ) ) + CS ),( MLU / MLU ) )", "obj1": 0.8996282527881041, "obj2": 0.04751103610605208}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( BR / BR ) / Min( BR ,ACS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) - Max( Min( DS ,( ( MUR - MUR ) / RCSe ) ),MUC ) )", "obj1": 0.9516728624535316, "obj2": 0.01896583625099484}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( ( Max( ( Max( DDR,( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM + ACS ) ) * Min( ( CRS + Const ) ,( ARS / FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( DS - ( ( RRSe / MUR ) + RCSe ) ) - MUM ) - ( MUM - MUM ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( DS / ( MUR + MLU ) ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.19330855018587362, "obj2": 0.6371186840066495}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + ( ( MRS / ( Max( FirstVNF_Mem,BR ) / MDR ) ) - Max( FirstVNF_Mem_Server,BR ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( ( BR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - FirstVNF_RAM ) / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * ( RRSe * DS ) ) + ( RRSe + Max( MUC,RRSe ) ) ) ) / RCSe ) ) - Max( Min( DS ,( ( Min( MLU ,MUC ) * CS ) / RCSe ) ),MUC ) )", "obj1": 0.9460966542750929, "obj2": 0.02255519116702232}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( ( ACS * MDR ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / Max( CRS,BR ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * Min( ( MUR / Max( ( RRSe * RCSe ),RRSe ) ) ,Max( MUR,Max( MUR,DS ) ) ) ) ) ) )", "obj1": 0.9758364312267658, "obj2": 0.009802113993772526}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5655983396054997}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,( ( DDR - MRS ) - ARS ) ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + ( DDR - CRS ) ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( Min( ( MLU / MLU ) ,( CS - MUM ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6099172440229799}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( Max( MDR,MDR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ,( ( BR / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU ) + RRS ) ,( FirstVNF_Mem - RRS ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( RCSe - CS ) ) - Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.9925650557620818, "obj2": 0.0023648778955542623}, {"determining": "( Max( DDR,( Max( FirstVNF_CPU,( ACS * ( FirstVNF_CPU / CRS ) ) ) * Min( Max( RRS,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ,( Min( ( FirstVNF_Mem_Server - ( BR + BR ) ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,RRS ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( RCSe - ( RMSe * ( MUM * MLU ) ) ) ) ) ) / ( ( ( Max( CS,RMSe ) * RCSe ) / MUC ) * ( MUM - DS ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5444248498715188}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "( Max( CRS,Max( ARS,Const ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( RCSe,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5518870915019836}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "Min( Min( MRS ,( ARS / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,FirstVNF_Mem_Server )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + MUM ) ) / RCSe ) ) ) / Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) )", "obj1": 0.6561338289962825, "obj2": 0.16663861859628362}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( BR * ( MRS * DDR ) ) + Min( AMS ,PN ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( ( RMSe + MLU ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.575422000711748}, {"determining": "( PN - ( ( Min( ( Max( FirstVNF_CPU_Server,CRS ) - DDR ) ,DDR ) - AMS ) * Max( FirstVNF_Mem,FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( ( CS - Min( MLU ,( DS + RRSe ) ) ),( MUC / ( ( Min( RCSe ,MLU ) + Min( MLU ,MUC ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - DS ) )", "obj1": 0.9851301115241635, "obj2": 0.006564292171286463}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / Min( RRS ,DDR ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUC ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,Min( RMSe ,MUM ) ) ) / ( MUM - DS ) ) ) )", "obj1": 0.42193308550185876, "obj2": 0.3943361180656197}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUR * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9200743494423792, "obj2": 0.03601686666342314}, {"determining": "Min( ( ( ( RRS - BR ) - Max( PN,( ( DDR - MRS ) - ARS ) ) ) + ( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Min( ACS ,BR ) * FirstVNF_Mem ) ) - ARS ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( MUM,Max( ( RCSe - DS ),Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( Min( ( MLU / MLU ) ,MLU ) - CS ) ) ) - ( ( ( MLU * Min( ( RRSe / MLU ) ,MLU ) ) - DS ) + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( MLU / ( MLU + DS ) ) ,( ( MLU / MLU ) / MUC ) ) + CS ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6099172440229799}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( MDR + DDR ) ) ) ,( MDR / Min( Max( Const,MDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( Max( Min( RRSe ,MLU ),CS ) + MUR ) ) - ( ( MUC / MLU ) + ( ( MUR * CS ) - CS ) ) )", "obj1": 0.2379182156133829, "obj2": 0.5969882120429084}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( FirstVNF_RAM / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.9107806691449815, "obj2": 0.04042191545269144}, {"determining": "Min( Min( ( FirstVNF_Mem + FirstVNF_Mem_Server ) ,BR ) ,Min( MRS ,( Max( ( ARS / AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( MUC + CS ) / ( Max( ( MUC / ( ( ( CS * CS ) + ( MUC / MUC ) ) / MUR ) ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6728624535315985, "obj2": 0.15976615375484474}, {"determining": "Min( Max( DDR,ACS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( ( MUC / CS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.16333217778199915}, {"determining": "Min( Min( ( DDR * RRS ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - Max( ( DS - ( ( MLU / RMSe ) * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.037163921490092046}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( PN / Const ) - ( ( MRS + FirstVNF_CPU ) * ( PN - MRS ) ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( ( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( MUC + ( ( ( CS - CS ) + ( RMSe + MUR ) ) * MUC ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5700940690163332}, {"determining": "( Max( DDR,( FirstVNF_Mem - MRS ) ) - ( ARS * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( MUR / ( MUM / ( MUC + ( CS + RCSe ) ) ) ),RMSe ) * RMSe ) ) / RCSe )", "obj1": 0.26022304832713755, "obj2": 0.5731497787555002}, {"determining": "( ( PN / Const ) - Min( ACS ,BR ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( Max( MUR,( Max( DS,RRSe ) + ( DS * RRSe ) ) ),( MUR - ( MUR * DS ) ) ) )", "obj1": 0.9814126394052045, "obj2": 0.0071612687173893755}, {"determining": "( ( AMS + ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( CS / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( ( MUC * CS ) * MLU ) ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( ( RMSe + MUM ) * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6446240002537368}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4275092936802974, "obj2": 0.3846506779827674}, {"determining": "( Max( DDR,CRS ) - ( Min( Const ,MRS ) * MDR ) )", "choosing": "( Max( ( Max( RCSe,Max( MUR,( ( RRSe * RCSe ) - ( MUM / Max( MUC,DS ) ) ) ) ) / CS ),( MUR * Min( ( CS - ( RMSe - ( RMSe + CS ) ) ) ,( ( RRSe * MUR ) + ( MUC / ( ( CS + CS ) * RRSe ) ) ) ) ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5659923351785641}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / Min( RRS ,DDR ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUC ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,Min( RMSe ,MUM ) ) ) / ( MUM - DS ) ) ) )", "obj1": 0.42193308550185876, "obj2": 0.3943361180656197}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( FirstVNF_CPU_Server + ( BR - BR ) ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( ( FirstVNF_RAM_Server - ( ACS * Const ) ) ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.2206077363701108}, {"determining": "( ( Max( ( Max( DDR,( ( BR - RRS ) + ( FirstVNF_CPU_Server + ( BR + FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - Min( MUM ,MUC ) ) / ( RRSe * ( MUC * MUC ) ) ) + CS ) ,( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,MUM ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6434213970516993}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( FirstVNF_RAM / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( ( ARS * MDR ) / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + MUR ) + ( MLU / Max( RMSe,MUR ) ) ) - RCSe ) ),CS ) )", "obj1": 0.9107806691449815, "obj2": 0.04042191545269144}, {"determining": "( Max( DDR,( Max( BR,( Min( ( ( CRS + CRS ) / FirstVNF_RAM ) ,( MRS - BR ) ) - ACS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * DS ) - ( MUM - MUM ) ) / ( MUR + Max( Min( Max( DS,( CS * ( ( MUC * MUC ) * RCSe ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.1895910780669145, "obj2": 0.6385969450987298}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - Min( ( ( RRSe - RRSe ) / ( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ) - RRSe ) ) ,RMSe ) )", "obj1": 0.6486988847583643, "obj2": 0.17350823834670176}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( Max( DDR,AMS ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * Min( CS ,( MUR / MUM ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6406114185146071}, {"determining": "( Max( ( ( FirstVNF_CPU / ( FirstVNF_CPU / ACS ) ) - FirstVNF_Mem_Server ),CRS ) - Max( CRS,Max( ARS,Const ) ) )", "choosing": "( Max( ( MUC / CS ),Min( DS ,Max( DS,MLU ) ) ) / Min( MUM ,( MUR * RCSe ) ) )", "obj1": 0.28066914498141265, "obj2": 0.5543717541421864}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( MUM,MUR ) - ( MUM - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5533012743186397}], "25": [{"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( PN ,BR ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + Max( ( MUC / CS ),Min( DS ,Max( DS,MLU ) ) ) ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( ( Max( Max( RRS,MRS ),FirstVNF_RAM ) + ( BR / FirstVNF_Mem ) ) ,FirstVNF_CPU ) * ( ARS * ( ( Max( ( FirstVNF_CPU_Server + FirstVNF_CPU ),Min( ( RRS * ACS ) ,ACS ) ) * ACS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( ( ( MLU + RMSe ) + MUM ) ,MUM ) / Max( ( RRSe + Max( RRSe,MUR ) ),Max( ( RRSe - Min( MUM ,( MUM - ( MUR / MUM ) ) ) ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - Min( ( ( BR + ( ACS - FirstVNF_Mem_Server ) ) / ACS ) ,FirstVNF_CPU ) ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( RCSe + CS ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,MUR ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.533457249070632, "obj2": 0.3007682626769369}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( FirstVNF_RAM_Server + ( AMS * ( ARS * MDR ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( MUR + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( MUC - ( ( MLU - MLU ) / RMSe ) ) - Min( ( DS - ( MUM - MUR ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.12639405204460966, "obj2": 0.7608652385420206}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( CRS,( PN / FirstVNF_Mem_Server ) ) - ( ( Max( BR,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * RMSe ) ) / RCSe )", "obj1": 0.31970260223048325, "obj2": 0.49933400760752406}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( CRS + RRS ),ARS ) ) ) ) ,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( Min( RMSe ,RMSe ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ACS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( MUR,DS ) )", "obj1": 0.3847583643122677, "obj2": 0.44609428986370137}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6970260223048327, "obj2": 0.1366944470166365}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * Min( RRS ,( BR - ( BR - PN ) ) ) ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( MLU / RCSe ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.570631970260223, "obj2": 0.23719798609444778}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / ( PN / ( ARS * MDR ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( RCSe * ( MUC - RCSe ) ) ) ),CS ) )", "obj1": 0.4479553903345725, "obj2": 0.3782798117323175}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( ( CRS + Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * CS )", "obj1": 0.5947955390334573, "obj2": 0.2214020001633613}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( DS + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.14583917650158185}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - ( Const + ( ( BR + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,ACS ) ) - Max( FirstVNF_RAM,BR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / ( RRSe / CS ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.20943869392170503}, {"determining": "( Max( ( ( ( BR - FirstVNF_RAM ) - Const ) - Min( ARS ,Const ) ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe + MUR ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + ( DS * CS ) ) )", "obj1": 0.6301115241635687, "obj2": 0.1984990411497409}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( RMSe * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8504853120122445}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( CRS ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( ( Max( PN,( FirstVNF_Mem * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ),( ( BR * FirstVNF_Mem_Server ) / ( Min( DDR ,MRS ) - ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( Max( ( DS / Min( RMSe ,MUR ) ),CS ),( MLU / MLU ) )", "obj1": 0.8996282527881041, "obj2": 0.04751103610605208}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - ( Min( DS ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( PN / ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) ) ) ,( BR + PN ) )", "choosing": "( Max( RMSe,( MLU * RCSe ) ) - ( ( ( ( MLU * Min( ( DS / MLU ) ,RRSe ) ) - ( Min( ( MLU + RMSe ) ,MUC ) / ( MLU * MUC ) ) ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9702602230483272, "obj2": 0.015267070196766923}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( Max( RCSe,RMSe ) / ( MUM / Min( ( RRSe / MLU ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Min( Min( ( FirstVNF_Mem + FirstVNF_Mem_Server ) ,BR ) ,Min( MRS ,( Max( ( ARS / AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( MUC + CS ) / ( Max( ( MUC / ( ( ( CS * CS ) + ( MUC / MUC ) ) / MUR ) ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6728624535315985, "obj2": 0.15976615375484474}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( BR / BR ) / Min( BR ,ACS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) - Max( Min( DS ,( ( MUR - MUR ) / RCSe ) ),MUC ) )", "obj1": 0.9516728624535316, "obj2": 0.01896583625099484}, {"determining": "( ( ( Const / MRS ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( ( FirstVNF_Mem_Server - ( AMS + Const ) ) ,( ( PN / FirstVNF_Mem ) - Min( ( Min( DDR ,BR ) - ARS ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MUC / ( ( MUM + Min( MLU ,CS ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2212579979618508}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_Mem_Server * RRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( ( PN / ( ARS * Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( MUC / Max( RMSe,( CS - MUM ) ) ) ) ),CS ) )", "obj1": 0.9386617100371747, "obj2": 0.025425434959709475}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,Max( FirstVNF_RAM,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( Min( RCSe ,MUR ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,RMSe ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.08550185873605948, "obj2": 0.7908627489443175}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9219330855018587, "obj2": 0.02933865687026758}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4275092936802974, "obj2": 0.3846506779827674}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6245353159851301, "obj2": 0.1999783864513288}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Min( ( ARS + RRS ) ,ACS ) / Min( RRS ,DDR ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( MLU - ( ( MUC * MUC ) + MUC ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,Min( RMSe ,MUM ) ) ) / ( MUM - DS ) ) ) )", "obj1": 0.42193308550185876, "obj2": 0.3933288295538536}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2955390334572491, "obj2": 0.5406951148096317}, {"determining": "( ( BR + Max( FirstVNF_RAM,CRS ) ) - ( ( ( PN * ARS ) * MRS ) * AMS ) )", "choosing": "Max( ( ( MLU + ( RRSe - MUM ) ) + CS ),( MLU / MLU ) )", "obj1": 0.8996282527881041, "obj2": 0.04751103610605208}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - Min( ( ( RRSe - RRSe ) / ( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ) - RRSe ) ) ,RMSe ) )", "obj1": 0.6486988847583643, "obj2": 0.17350823834670176}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( ( Max( ( Max( DDR,( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM + ACS ) ) * Min( ( CRS + Const ) ,( ARS / FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( DS - ( ( RRSe / MUR ) + RCSe ) ) - MUM ) - ( MUM - MUM ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( DS / ( MUR + MLU ) ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.19330855018587362, "obj2": 0.6371186840066495}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( ( BR + Min( ( ( PN / FirstVNF_Mem ) - Min( Min( ( ACS * MDR ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) ,FirstVNF_CPU ) ) - Max( DDR,( ( ( MDR * ( MDR / RRS ) ) / Max( CRS,BR ) ) / ( Min( DDR ,MRS ) - ( CRS + MDR ) ) ) ) )", "choosing": "Max( ( RRSe + CS ),Min( ( MUR / RMSe ) ,( RCSe + ( Max( Max( RCSe,( MUM * MUR ) ),Max( Max( MUM,RMSe ),DS ) ) * Min( ( MUR / Max( ( RRSe * RCSe ),RRSe ) ) ,Max( MUR,Max( MUR,DS ) ) ) ) ) ) )", "obj1": 0.9758364312267658, "obj2": 0.009802113993772526}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5655983396054997}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,( ( DDR - MRS ) - ARS ) ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + ( DDR - CRS ) ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( Min( ( MLU / MLU ) ,( CS - MUM ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6099172440229799}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "( Max( CRS,Max( ARS,Const ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( RCSe,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5518870915019836}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( BR * ( MRS * DDR ) ) + Min( AMS ,PN ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( ( RMSe + MLU ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.575422000711748}, {"determining": "Min( ( ( ( RRS - BR ) - Max( PN,( ( DDR - MRS ) - ARS ) ) ) + ( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Min( ACS ,BR ) * FirstVNF_Mem ) ) - ARS ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( MUM,Max( ( RCSe - DS ),Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( Min( ( MLU / MLU ) ,MLU ) - CS ) ) ) - ( ( ( MLU * Min( ( RRSe / MLU ) ,MLU ) ) - DS ) + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( MLU / ( MLU + DS ) ) ,( ( MLU / MLU ) / MUC ) ) + CS ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6099172440229799}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( MDR + DDR ) ) ) ,( MDR / Min( Max( Const,MDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( Max( Min( RRSe ,MLU ),CS ) + MUR ) ) - ( ( MUC / MLU ) + ( ( MUR * CS ) - CS ) ) )", "obj1": 0.2379182156133829, "obj2": 0.5969882120429084}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( FirstVNF_RAM / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.9107806691449815, "obj2": 0.04042191545269144}, {"determining": "Min( Max( DDR,ACS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( ( MUC / CS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.16333217778199915}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( Max( MDR,MDR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ,( ( BR / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU ) + RRS ) ,( FirstVNF_Mem - RRS ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( RCSe - CS ) ) - Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.9925650557620818, "obj2": 0.0023648778955542623}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( Const * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,( MDR + AMS ) ) ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) * Min( ( DS / MLU ) ,MLU ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( ( RCSe / ( MLU / MLU ) ) / ( MUM - DS ) ) ) )", "obj1": 0.8661710037174721, "obj2": 0.06345010069963986}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( PN / Const ) - ( ( MRS + FirstVNF_CPU ) * ( PN - MRS ) ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( ( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( MUC + ( ( ( CS - CS ) + ( RMSe + MUR ) ) * MUC ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5700940690163332}, {"determining": "( ( PN / Const ) - Min( ACS ,BR ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( Max( MUR,( Max( DS,RRSe ) + ( DS * RRSe ) ) ),( MUR - ( MUR * DS ) ) ) )", "obj1": 0.9814126394052045, "obj2": 0.0071612687173893755}, {"determining": "( ( AMS + ACS ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( CS / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( ( MUC * CS ) * MLU ) ) ,( ( MUM + ( MUM + Min( MLU ,MUM ) ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Max( ( ( RMSe + MUM ) * ( Min( ( CS * MUM ) ,( MLU / DS ) ) - MUM ) ),RRSe ) ) ) )", "obj1": 0.17843866171003717, "obj2": 0.6446240002537368}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),ARS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4275092936802974, "obj2": 0.3846506779827674}, {"determining": "( Max( DDR,CRS ) - ( Min( Const ,MRS ) * MDR ) )", "choosing": "( Max( ( Max( RCSe,Max( MUR,( ( RRSe * RCSe ) - ( MUM / Max( MUC,DS ) ) ) ) ) / CS ),( MUR * Min( ( CS - ( RMSe - ( RMSe + CS ) ) ) ,( ( RRSe * MUR ) + ( MUC / ( ( CS + CS ) * RRSe ) ) ) ) ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5659923351785641}, {"determining": "( Max( DDR,( Max( FirstVNF_CPU,( ACS * ( FirstVNF_CPU / CRS ) ) ) * Min( Max( RRS,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ,( Min( ( FirstVNF_Mem_Server - ( BR + BR ) ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,RRS ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( RCSe - ( RMSe * ( MUM * MLU ) ) ) ) ) ) / ( ( ( Max( CS,RMSe ) * RCSe ) / MUC ) * ( MUM - DS ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5444248498715188}, {"determining": "Min( Min( ARS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * ( DDR * CRS ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM - CS ) * DS ) - ( ( ( ( MLU * Min( ( DS / ( MUC + CS ) ) ,DS ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.8568773234200744, "obj2": 0.07439381145207005}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_RAM_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( ( BR + FirstVNF_Mem_Server ) - FirstVNF_RAM ) / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * ( RRSe * DS ) ) + MUM ) ) / RCSe ) ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MLU ) ,MLU ) ) - DS ) ),MUC ) )", "obj1": 0.9869888475836431, "obj2": 0.005366687124337381}, {"determining": "Min( Min( ( DDR * RRS ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - Max( ( DS - ( ( MLU / RMSe ) * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.037163921490092046}, {"determining": "( ( Max( ( Max( DDR,( ( BR - RRS ) + ( FirstVNF_CPU_Server + ( BR + FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - Min( MUM ,MUC ) ) / ( RRSe * ( MUC * MUC ) ) ) + CS ) ,( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( MUR + Max( Min( ( ( MUR * MUM ) - MUR ) ,( CS - RCSe ) ),Max( RRSe,MUM ) ) ) )", "obj1": 0.18401486988847585, "obj2": 0.6434213970516993}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( FirstVNF_RAM / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( ( ARS * MDR ) / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + MUR ) + ( MLU / Max( RMSe,MUR ) ) ) - RCSe ) ),CS ) )", "obj1": 0.9107806691449815, "obj2": 0.04042191545269144}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + ( ( MRS / ( Max( FirstVNF_Mem,BR ) / MDR ) ) - Max( FirstVNF_Mem_Server,BR ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( ( BR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - FirstVNF_RAM ) / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * ( RRSe * DS ) ) + ( RRSe + Max( MUC,RRSe ) ) ) ) / RCSe ) ) - Max( Min( DS ,( ( Min( MLU ,MUC ) * CS ) / RCSe ) ),MUC ) )", "obj1": 0.9460966542750929, "obj2": 0.02255519116702232}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUR * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9200743494423792, "obj2": 0.03601686666342314}, {"determining": "( Max( DDR,( Max( BR,( Min( ( ( CRS + CRS ) / FirstVNF_RAM ) ,( MRS - BR ) ) - ACS ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( RMSe * DS ) - ( MUM - MUM ) ) / ( MUR + Max( Min( Max( DS,( CS * ( ( MUC * MUC ) * RCSe ) ) ) ,( CS - RCSe ) ),Max( RRSe,CS ) ) ) )", "obj1": 0.1895910780669145, "obj2": 0.6385969450987298}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( Max( DDR,AMS ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * Min( CS ,( MUR / MUM ) ) ) )", "obj1": 0.18587360594795538, "obj2": 0.6406114185146071}], "26": [{"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( Max( DDR,AMS ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * Min( CS ,( MUR / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( PN ,BR ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + Max( ( MUC / CS ),Min( DS ,Max( DS,MLU ) ) ) ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - Min( ( ( BR + ( ACS - FirstVNF_Mem_Server ) ) / ACS ) ,FirstVNF_CPU ) ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( RCSe + CS ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,MUR ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.533457249070632, "obj2": 0.3007682626769369}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( ( PN / Const ) - Min( ACS ,BR ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( Max( MUR,( Max( DS,RRSe ) + ( DS * RRSe ) ) ),( MUR - ( MUR * DS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7511131013547414}, {"determining": "( Max( CRS,( PN / FirstVNF_Mem_Server ) ) - ( ( Max( BR,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * RMSe ) ) / RCSe )", "obj1": 0.31970260223048325, "obj2": 0.49933400760752406}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( CRS + RRS ),ARS ) ) ) ) ,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( Min( RMSe ,RMSe ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6970260223048327, "obj2": 0.1366944470166365}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.3736059479553903, "obj2": 0.4358397673877705}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * Min( RRS ,( BR - ( BR - PN ) ) ) ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( MLU / RCSe ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.570631970260223, "obj2": 0.23719798609444778}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ( CRS / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + MLU ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4661906062147041}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / ( PN / ( ARS * MDR ) ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( RCSe * ( MUC - RCSe ) ) ) ),CS ) )", "obj1": 0.4479553903345725, "obj2": 0.3782798117323175}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( ( CRS + Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * CS )", "obj1": 0.5947955390334573, "obj2": 0.2214020001633613}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( DS + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.14583917650158185}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "( Max( ( ( ( BR - FirstVNF_RAM ) - Const ) - Min( ARS ,Const ) ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe + MUR ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + ( DS * CS ) ) )", "obj1": 0.6301115241635687, "obj2": 0.1984990411497409}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( ( BR + FirstVNF_RAM ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,( ARS / MDR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( RMSe * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8504853120122445}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( Max( RCSe,RMSe ) / ( MUM / Min( ( RRSe / MLU ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Min( Min( MRS ,( PN / ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) ) ) ,( BR + PN ) )", "choosing": "( Max( RMSe,( MLU * RCSe ) ) - ( ( ( ( MLU * Min( ( DS / MLU ) ,RRSe ) ) - ( Min( ( MLU + RMSe ) ,MUC ) / ( MLU * MUC ) ) ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9702602230483272, "obj2": 0.015267070196766923}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.20943869392170503}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Min( Min( ( FirstVNF_Mem + FirstVNF_Mem_Server ) ,BR ) ,Min( MRS ,( Max( ( ARS / AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( MUC + CS ) / ( Max( ( MUC / ( ( ( CS * CS ) + ( MUC / MUC ) ) / MUR ) ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6728624535315985, "obj2": 0.15976615375484474}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( BR / BR ) / Min( BR ,ACS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) - Max( Min( DS ,( ( MUR - MUR ) / RCSe ) ),MUC ) )", "obj1": 0.9516728624535316, "obj2": 0.01896583625099484}, {"determining": "( ( ( Const / MRS ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( ( FirstVNF_Mem_Server - ( AMS + Const ) ) ,( ( PN / FirstVNF_Mem ) - Min( ( Min( DDR ,BR ) - ARS ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MUC / ( ( MUM + Min( MLU ,CS ) ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2212579979618508}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_Mem_Server * RRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( ( PN / ( ARS * Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( MUC / Max( RMSe,( CS - MUM ) ) ) ) ),CS ) )", "obj1": 0.9386617100371747, "obj2": 0.025425434959709475}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,Max( FirstVNF_RAM,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( Min( RCSe ,MUR ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,RMSe ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.08550185873605948, "obj2": 0.7908627489443175}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "Min( Min( Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Max( Const,Min( BR ,Const ) ) * RRS ) )", "choosing": "( ( ( MUM - CS ) * DS ) - ( ( ( ( MLU * Min( ( RCSe * Min( RCSe ,MUR ) ) ,DS ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ) )", "obj1": 0.8977695167286245, "obj2": 0.042570357986163876}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9219330855018587, "obj2": 0.02933865687026758}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2955390334572491, "obj2": 0.5406951148096317}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( RMSe - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.42936802973977695, "obj2": 0.3829582320788953}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( BR * ( MRS * DDR ) ) + Min( AMS ,PN ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( ( RMSe + MLU ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.575422000711748}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - ( Min( DS ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * ( DDR + Const ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( MLU / MLU ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.8940520446096655, "obj2": 0.05330519291462378}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Min( ARS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * ( DDR * CRS ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM - CS ) * DS ) - ( ( ( ( MLU * Min( ( DS / ( MUC + CS ) ) ,DS ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.8568773234200744, "obj2": 0.07439381145207005}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.8884758364312267, "obj2": 0.05501256836153204}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "( ( Max( ( Max( DDR,( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM + ACS ) ) * Min( ( CRS + Const ) ,( ARS / FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( DS - ( ( RRSe / MUR ) + RCSe ) ) - MUM ) - ( MUM - MUM ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( DS / ( MUR + MLU ) ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.19330855018587362, "obj2": 0.6371186840066495}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Min( MDR ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + RRSe ),( MUC / ( Min( DS ,MLU ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.620817843866171, "obj2": 0.20442112566485504}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + ( ( MRS / ( Max( FirstVNF_Mem,BR ) / MDR ) ) - Max( FirstVNF_Mem_Server,BR ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( ( BR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - FirstVNF_RAM ) / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * ( RRSe * DS ) ) + ( RRSe + Max( MUC,RRSe ) ) ) ) / RCSe ) ) - Max( Min( DS ,( ( Min( MLU ,MUC ) * CS ) / RCSe ) ),MUC ) )", "obj1": 0.9460966542750929, "obj2": 0.02255519116702232}, {"determining": "( ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( Min( ( MRS + ( Min( ( AMS * FirstVNF_Mem_Server ) ,( CRS - FirstVNF_CPU_Server ) ) * Min( Const ,FirstVNF_Mem_Server ) ) ) ,Min( Const ,ACS ) ),ARS ) ) - Min( PN ,BR ) )", "choosing": "( ( ( ( ( RCSe - MUM ) - MUM ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.9758364312267658, "obj2": 0.008404354887212572}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5655983396054997}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,( ( DDR - MRS ) - ARS ) ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( AMS / ( RRS + ( DDR - CRS ) ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( Min( ( MLU / MLU ) ,( CS - MUM ) ) - CS ) ) ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6099172440229799}, {"determining": "( Max( DDR,( Max( FirstVNF_CPU,( ACS * ( FirstVNF_CPU / CRS ) ) ) * Min( Max( RRS,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ,( Min( ( FirstVNF_Mem_Server - ( BR + BR ) ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,RRS ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( RCSe - ( RMSe * ( MUM * MLU ) ) ) ) ) ) / ( ( ( Max( CS,RMSe ) * RCSe ) / MUC ) * ( MUM - DS ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5444248498715188}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( PN / Const ) - ( ( MRS + FirstVNF_CPU ) * ( PN - MRS ) ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( ( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( MUC + ( ( ( CS - CS ) + ( RMSe + MUR ) ) * MUC ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5700940690163332}, {"determining": "( Max( CRS,Max( ARS,Const ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( RCSe,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5518870915019836}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( Max( MDR,MDR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ,( ( BR / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU ) + RRS ) ,( FirstVNF_Mem - RRS ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( RCSe - CS ) ) - Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.9925650557620818, "obj2": 0.0023648778955542623}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( FirstVNF_CPU - MRS ) ) - ( ( ( Min( ( ( CRS + CRS ) / FirstVNF_RAM ) ,( MRS - BR ) ) - ACS ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / ( Min( RMSe ,MUR ) / MUM ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28066914498141265, "obj2": 0.5536614626950058}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - ( Const + ( ( BR + FirstVNF_Mem_Server ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,ACS ) ) - Max( FirstVNF_RAM,BR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / ( RRSe / CS ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( FirstVNF_RAM / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.9107806691449815, "obj2": 0.04042191545269144}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUR * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9200743494423792, "obj2": 0.03601686666342314}, {"determining": "Min( ( ( ( RRS - BR ) - Max( PN,( ( DDR - MRS ) - ARS ) ) ) + ( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Min( ACS ,BR ) * FirstVNF_Mem ) ) - ARS ) ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Max( MUM,Max( ( RCSe - DS ),Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( MUC * ( ( RCSe * DS ) / ( Min( ( MLU / MLU ) ,MLU ) - CS ) ) ) - ( ( ( MLU * Min( ( RRSe / MLU ) ,MLU ) ) - DS ) + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( MLU / ( MLU + DS ) ) ,( ( MLU / MLU ) / MUC ) ) + CS ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.22676579925650558, "obj2": 0.6099172440229799}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6245353159851301, "obj2": 0.1999783864513288}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( MDR + DDR ) ) ) ,( MDR / Min( Max( Const,MDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( Max( Min( RRSe ,MLU ),CS ) + MUR ) ) - ( ( MUC / MLU ) + ( ( MUR * CS ) - CS ) ) )", "obj1": 0.2379182156133829, "obj2": 0.5969882120429084}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - Min( ( ( RRSe - RRSe ) / ( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ) - RRSe ) ) ,RMSe ) )", "obj1": 0.6486988847583643, "obj2": 0.17350823834670176}, {"determining": "Min( Max( DDR,ACS ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - ( ( ( MUC * RCSe ) - Max( MUC,MLU ) ) / Min( ( MUC / CS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6617100371747212, "obj2": 0.16333217778199915}, {"determining": "( ( PN / Const ) - Min( ACS ,BR ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( Max( MUR,( Max( DS,RRSe ) + ( DS * RRSe ) ) ),( MUR - ( MUR * DS ) ) ) )", "obj1": 0.9814126394052045, "obj2": 0.0071612687173893755}, {"determining": "Min( Min( ( DDR * RRS ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - Max( ( DS - ( ( MLU / RMSe ) * ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) ),CS ) )", "obj1": 0.9144981412639405, "obj2": 0.037163921490092046}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( Const * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,( MDR + AMS ) ) ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) * Min( ( DS / MLU ) ,MLU ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( ( RCSe / ( MLU / MLU ) ) / ( MUM - DS ) ) ) )", "obj1": 0.8661710037174721, "obj2": 0.06345010069963986}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( MUR * RMSe ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}, {"determining": "( Max( DDR,CRS ) - ( Min( Const ,MRS ) * MDR ) )", "choosing": "( Max( ( Max( RCSe,Max( MUR,( ( RRSe * RCSe ) - ( MUM / Max( MUC,DS ) ) ) ) ) / CS ),( MUR * Min( ( CS - ( RMSe - ( RMSe + CS ) ) ) ,( ( RRSe * MUR ) + ( MUC / ( ( CS + CS ) * RRSe ) ) ) ) ) ) / RCSe )", "obj1": 0.26579925650557623, "obj2": 0.5659923351785641}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.8884758364312267, "obj2": 0.05501256836153204}, {"determining": "( Max( ARS,( FirstVNF_CPU_Server * MDR ) ) * Max( Min( ( MRS + FirstVNF_CPU_Server ) ,Min( Const ,ACS ) ),( ( BR / BR ) + MRS ) ) )", "choosing": "( Max( ( RMSe - Min( ( Max( MUR,RMSe ) / ( RMSe + Max( Min( DS ,RRSe ),MUC ) ) ) ,( ( MUC + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) ) ),DS ) - DS )", "obj1": 0.08736059479553904, "obj2": 0.783882236387608}], "27": [{"determining": "( ( ( BR / BR ) + ( ( FirstVNF_Mem - ARS ) - MDR ) ) - ( MDR + AMS ) )", "choosing": "( Max( Max( RMSe,RCSe ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,MUC ),DS ) ) / ( RMSe - ( ( MUC * MUC ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( Max( DDR,AMS ) * FirstVNF_RAM ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * Min( CS ,( MUR / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - Min( ( ( BR + ( ACS - FirstVNF_Mem_Server ) ) / ACS ) ,FirstVNF_CPU ) ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( RCSe + CS ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,MUR ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.533457249070632, "obj2": 0.3007682626769369}, {"determining": "( Max( CRS,( PN / FirstVNF_Mem_Server ) ) - ( ( Max( BR,Max( ( ACS - Min( ACS ,FirstVNF_CPU_Server ) ),AMS ) ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * RMSe ) ) / RCSe )", "obj1": 0.31970260223048325, "obj2": 0.49933400760752406}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "( ( PN / Const ) - Min( ACS ,BR ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( Max( MUR,( Max( DS,RRSe ) + ( DS * RRSe ) ) ),( MUR - ( MUR * DS ) ) ) )", "obj1": 0.12639405204460966, "obj2": 0.7511131013547414}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( Max( DDR,( ( DDR - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ( Max( CRS,DDR ) - RRS ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( Min( ( CS * MLU ) ,MLU ) / ( ( MUR - MUR ) + DS ) ) + Min( RMSe ,RRSe ) ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / RCSe )", "obj1": 0.12825278810408922, "obj2": 0.6867613235568429}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - Min( ( ( RRSe - RRSe ) / ( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ) - RRSe ) ) ,RMSe ) )", "obj1": 0.570631970260223, "obj2": 0.22570371185751176}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,DDR ),ARS ) ) ) ) ,Min( Min( Min( RRS ,CRS ) ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( ( ( RRSe * MUM ) - ( ( Max( MLU,MUR ) + MLU ) + CS ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ARS * MDR ) ) / Const ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / ( PN / ( ARS * MDR ) ) ) )", "choosing": "( MUR - Max( ( DS - ( RMSe * ( RCSe * ( MUC - RCSe ) ) ) ),CS ) )", "obj1": 0.44052044609665425, "obj2": 0.3748471154024587}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( Const * ( Const / Min( ACS ,( DDR * ARS ) ) ) ) / ( Min( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - MUM ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( ( RCSe * MLU ) ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.43654082520133614}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Const - ( RRS + MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( RRSe ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6970260223048327, "obj2": 0.1366944470166365}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( ( Max( ( Max( DDR,( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM + ACS ) ) * Min( ( CRS + Const ) ,( ARS / FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( DS - ( ( RRSe / MUR ) + RCSe ) ) - MUM ) - ( MUM - MUM ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( DS / ( MUR + MLU ) ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.19330855018587362, "obj2": 0.6371186840066495}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( CRS + AMS ) ) - ( Const + ( ( Max( ARS,FirstVNF_CPU ) + FirstVNF_RAM ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( MUM,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.120817843866171, "obj2": 0.7563786363013797}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( CRS + RRS ),ARS ) ) ) ) ,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( Min( RMSe ,RMSe ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( DS + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.14583917650158185}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( RMSe * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8504853120122445}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( RMSe - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.42936802973977695, "obj2": 0.3829582320788953}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.20943869392170503}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( ( BR + FirstVNF_RAM ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,( ARS / MDR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( ( Max( DDR,( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( Min( MLU ,RRSe ),MLU ) ) ,( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),ARS ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - ACS ) ) * Min( MRS ,( ( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( RMSe - CS ) * RCSe ) ) - Max( ( ( ( RCSe + CS ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) )", "obj1": 0.637546468401487, "obj2": 0.19503834080239668}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "( ( CRS + Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * CS )", "obj1": 0.5947955390334573, "obj2": 0.2214020001633613}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ( CRS / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + MLU ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4661906062147041}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( ( AMS + ( ( FirstVNF_Mem - ARS ) - MDR ) ) - ( MDR + AMS ) ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * ( ( MLU * Min( ( MLU / DS ) ,( RCSe + MUR ) ) ) + MUM ) )", "obj1": 0.8884758364312267, "obj2": 0.054526022290057166}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( Max( RCSe,RMSe ) / ( MUM / Min( ( RRSe / MLU ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Min( Min( ( FirstVNF_Mem + FirstVNF_Mem_Server ) ,BR ) ,Min( MRS ,( Max( ( ARS / AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( MUC + CS ) / ( Max( ( MUC / ( ( ( CS * CS ) + ( MUC / MUC ) ) / MUR ) ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6728624535315985, "obj2": 0.15976615375484474}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( Max( FirstVNF_RAM,( Max( DDR,AMS ) * FirstVNF_RAM ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( Min( ( ( ( ( RRSe / CS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) ,Min( ( Max( MLU,CS ) - ( Min( DS ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6003717472118959, "obj2": 0.2208113926736594}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_Mem_Server * RRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( ( PN / ( ARS * Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( MUC / Max( RMSe,( CS - MUM ) ) ) ) ),CS ) )", "obj1": 0.9386617100371747, "obj2": 0.025425434959709475}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,Max( FirstVNF_RAM,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( Min( RCSe ,MUR ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,RMSe ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.08550185873605948, "obj2": 0.7908627489443175}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "Min( Min( Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Max( Const,Min( BR ,Const ) ) * RRS ) )", "choosing": "( ( ( MUM - CS ) * DS ) - ( ( ( ( MLU * Min( ( RCSe * Min( RCSe ,MUR ) ) ,DS ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ) )", "obj1": 0.8977695167286245, "obj2": 0.042570357986163876}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2955390334572491, "obj2": 0.5406951148096317}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( DS * RCSe ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.3736059479553903, "obj2": 0.4358397673877705}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ( CRS / RRS ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( Max( DS,RCSe ) - ( Max( MLU,RCSe ) / MUM ) ) / ( Min( RMSe ,CS ) / CS ) ) / ( Max( ( Max( ( DS * Min( MUM ,RRSe ) ),MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4661906062147041}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "Min( Min( ( FirstVNF_Mem + FirstVNF_Mem_Server ) ,BR ) ,Min( MRS ,( Max( ( ARS / AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( MUC + CS ) / ( Max( ( MUC / ( ( ( CS * CS ) + ( MUC / MUC ) ) / MUR ) ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.016576777002185433}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6970260223048327, "obj2": 0.1366944470166365}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( AMS ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( FirstVNF_CPU_Server * MRS ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,MUC ),( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( DS + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( ( MUM - MUM ) ,MUC ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6951672862453532, "obj2": 0.14042549244553082}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - Min( ( ( RRSe - RRSe ) / ( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ) - RRSe ) ) ,RMSe ) )", "obj1": 0.6486988847583643, "obj2": 0.17350823834670176}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - ACS ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Max( RMSe,( ( RMSe - MUR ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9219330855018587, "obj2": 0.02933865687026758}, {"determining": "( ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( Min( ( MRS + ( Min( ( AMS * FirstVNF_Mem_Server ) ,( CRS - FirstVNF_CPU_Server ) ) * Min( Const ,FirstVNF_Mem_Server ) ) ) ,Min( Const ,ACS ) ),ARS ) ) - Min( PN ,BR ) )", "choosing": "( ( ( ( ( RCSe - MUM ) - MUM ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.9702602230483272, "obj2": 0.011202329031446242}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "Min( Min( ARS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * ( DDR * CRS ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM - CS ) * DS ) - ( ( ( ( MLU * Min( ( DS / ( MUC + CS ) ) ,DS ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.8568773234200744, "obj2": 0.07439381145207005}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Min( MDR ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + RRSe ),( MUC / ( Min( DS ,MLU ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.620817843866171, "obj2": 0.20442112566485504}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( BR / BR ) / Min( BR ,ACS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) - Max( Min( DS ,( ( MUR - MUR ) / RCSe ) ),MUC ) )", "obj1": 0.9516728624535316, "obj2": 0.01896583625099484}, {"determining": "( Max( ( Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) - FirstVNF_RAM_Server ),Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( RCSe / ( MUC * MUR ) ) ) ) ,Min( ( Max( MLU,CS ) - ( Min( DS ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + ( ( MRS / ( Max( FirstVNF_Mem,BR ) / MDR ) ) - Max( FirstVNF_Mem_Server,BR ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( ( BR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - FirstVNF_RAM ) / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * ( RRSe * DS ) ) + ( RRSe + Max( MUC,RRSe ) ) ) ) / RCSe ) ) - Max( Min( DS ,( ( Min( MLU ,MUC ) * CS ) / RCSe ) ),MUC ) )", "obj1": 0.9460966542750929, "obj2": 0.02255519116702232}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5655983396054997}, {"determining": "( Max( DDR,( Max( FirstVNF_CPU,( ACS * ( FirstVNF_CPU / CRS ) ) ) * Min( Max( RRS,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ,( Min( ( FirstVNF_Mem_Server - ( BR + BR ) ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,RRS ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( RCSe - ( RMSe * ( MUM * MLU ) ) ) ) ) ) / ( ( ( Max( CS,RMSe ) * RCSe ) / MUC ) * ( MUM - DS ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5444248498715188}, {"determining": "( Max( CRS,Max( ARS,Const ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( RCSe,RMSe ) - MUR ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28810408921933084, "obj2": 0.5518870915019836}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( Max( ( ( ( BR - FirstVNF_RAM ) - Const ) - Min( ARS ,Const ) ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe + MUR ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + ( DS * CS ) ) )", "obj1": 0.6301115241635687, "obj2": 0.1984990411497409}, {"determining": "( Max( DDR,CRS ) - ( ( Min( ( ( ( BR * ( MRS * DDR ) ) + Min( AMS ,PN ) ) - FirstVNF_Mem_Server ) ,( ( CRS * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( ( RMSe + MLU ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.575422000711748}, {"determining": "( PN - ( Min( Min( ( BR - MRS ) ,( BR / Const ) ) ,( FirstVNF_CPU_Server * ARS ) ) * ( ( ARS * Min( FirstVNF_RAM_Server ,MRS ) ) * ( ( CRS / RRS ) / Min( PN ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( Max( ( ( MUM - MUM ) * ( RRSe - MUM ) ),( MUC / ( ( ( MUM + RCSe ) + MUC ) - RRSe ) ) ) / ( CS / DS ) ),Min( MLU ,Min( MUM ,DS ) ) ) / ( ( MLU * Min( ( MLU / DS ) ,MLU ) ) - ( ( Max( DS,RCSe ) - Max( MUM,MUR ) ) / ( Min( RMSe ,CS ) / CS ) ) ) )", "obj1": 0.7565055762081785, "obj2": 0.09336036896895052}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( FirstVNF_CPU - MRS ) ) - ( ( ( Min( ( ( CRS + CRS ) / FirstVNF_RAM ) ,( MRS - BR ) ) - ACS ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / ( Min( RMSe ,MUR ) / MUM ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28066914498141265, "obj2": 0.5536614626950058}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( FirstVNF_RAM / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.9107806691449815, "obj2": 0.04042191545269144}, {"determining": "Min( ( FirstVNF_RAM_Server * Max( DDR,Min( CRS ,BR ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Min( ( ( CS * CS ) + RCSe ) ,RRSe ) - Max( ( MUM - Min( MUC ,MUM ) ),RRSe ) ) / Min( ( Min( Max( MLU,MUM ) ,RRSe ) * MUC ) ,MUM ) ) - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( MUC - MUM ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.004839465712923337}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.8940520446096655, "obj2": 0.05211568339993766}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUR * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9200743494423792, "obj2": 0.03601686666342314}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - ( Min( DS ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( Max( MDR,MDR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ,( ( BR / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU ) + RRS ) ,( FirstVNF_Mem - RRS ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( RCSe - CS ) ) - Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.9925650557620818, "obj2": 0.0023648778955542623}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6245353159851301, "obj2": 0.1999783864513288}, {"determining": "( ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( Min( ( MRS + ( Min( ( AMS * FirstVNF_Mem_Server ) ,( CRS - FirstVNF_CPU_Server ) ) * Min( Const ,FirstVNF_Mem_Server ) ) ) ,Min( Const ,ACS ) ),ARS ) ) - Min( PN ,BR ) )", "choosing": "( ( ( ( ( RCSe - MUM ) - MUM ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.9758364312267658, "obj2": 0.008404354887212572}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( MDR + DDR ) ) ) ,( MDR / Min( Max( Const,MDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( Max( Min( RRSe ,MLU ),CS ) + MUR ) ) - ( ( MUC / MLU ) + ( ( MUR * CS ) - CS ) ) )", "obj1": 0.2379182156133829, "obj2": 0.5969882120429084}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}], "28": [{"determining": "Min( Min( ( ( ( PN / ( ( MDR - DDR ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( ( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / DS ) ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / BR ) + ( ( FirstVNF_Mem - ARS ) - MDR ) ) - ( MDR + AMS ) )", "choosing": "( Max( Max( RMSe,RCSe ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,MUC ),DS ) ) / ( RMSe - ( ( MUC * MUC ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - Min( ( ( BR + ( ACS - FirstVNF_Mem_Server ) ) / ACS ) ,FirstVNF_CPU ) ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( RCSe + CS ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,MUR ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.533457249070632, "obj2": 0.3007682626769369}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( ( BR + FirstVNF_RAM ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,( ARS / MDR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - Min( ( ( RRSe - RRSe ) / ( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ) - RRSe ) ) ,RMSe ) )", "obj1": 0.570631970260223, "obj2": 0.22570371185751176}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) ,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + ( MUM / DS ) ) + CS ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( ( Max( CS,RMSe ) * RCSe ) / MUC ),( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7267657992565055, "obj2": 0.12413526739953608}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( Const * ( Const / Min( ACS ,( DDR * ARS ) ) ) ) / ( Min( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - MUM ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( ( RCSe * MLU ) ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.43654082520133614}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,Max( FirstVNF_RAM,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( Min( RCSe ,MUR ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,RMSe ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.08550185873605948, "obj2": 0.7908627489443175}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( ( Max( ( Max( DDR,( ( ( BR + FirstVNF_Mem_Server ) - ( FirstVNF_RAM + ACS ) ) * Min( ( CRS + Const ) ,( ARS / FirstVNF_RAM ) ) ) ) - ( ARS * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( DS - ( ( RRSe / MUR ) + RCSe ) ) - MUM ) - ( MUM - MUM ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( DS / ( MUR + MLU ) ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.19330855018587362, "obj2": 0.6371186840066495}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Min( DDR ,MDR ) ) + FirstVNF_CPU ) ,Min( CRS ,MDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * ( RCSe / Min( MUM ,RCSe ) ) ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.37412678924062487}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,DDR ),ARS ) ) ) ) ,Min( Min( Min( RRS ,CRS ) ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( ( ( RRSe * MUM ) - ( ( Max( MLU,MUR ) + MLU ) + CS ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( RMSe * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8504853120122445}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( RMSe - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.42936802973977695, "obj2": 0.3829582320788953}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),ARS ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - ACS ) ) * Min( MRS ,( ( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( RMSe - CS ) * RCSe ) ) - Max( ( ( ( RCSe + CS ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) )", "obj1": 0.637546468401487, "obj2": 0.19503834080239668}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( Max( RCSe,RMSe ) / ( MUM / Min( ( RRSe / MLU ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( ( AMS + ( ( FirstVNF_Mem - ARS ) - MDR ) ) - ( MDR + AMS ) ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * ( ( MLU * Min( ( MLU / DS ) ,( RCSe + MUR ) ) ) + MUM ) )", "obj1": 0.8884758364312267, "obj2": 0.054526022290057166}, {"determining": "( ( CRS + Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * CS )", "obj1": 0.5947955390334573, "obj2": 0.2214020001633613}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ( CRS / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + MLU ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4661906062147041}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6970260223048327, "obj2": 0.1366944470166365}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - Min( Min( ( ( ( FirstVNF_Mem - DDR ) * AMS ) * ( DDR / Max( PN,Const ) ) ) ,MRS ) ,( FirstVNF_Mem_Server / DDR ) ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( MLU / Max( RCSe,( ( MUM / Max( ( DS * ( RMSe - MUC ) ),( RCSe - RMSe ) ) ) / RMSe ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.6691449814126395, "obj2": 0.15200984850890714}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( FirstVNF_Mem_Server * RRS ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( ( PN / ( ARS * Min( FirstVNF_CPU ,PN ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( DS - ( RMSe * ( MUC / Max( RMSe,( CS - MUM ) ) ) ) ),CS ) )", "obj1": 0.9386617100371747, "obj2": 0.025425434959709475}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / RRS ) ) * Min( Const ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - AMS ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( MUR / DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / Max( RCSe,MUM ) )", "obj1": 0.0687732342007435, "obj2": 0.822104886343045}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2955390334572491, "obj2": 0.5406951148096317}, {"determining": "Min( Min( MRS ,( PN / ( ( ( MDR + AMS ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ARS / ( FirstVNF_Mem_Server + Max( DDR,Max( PN,DDR ) ) ) ) )", "choosing": "( Max( RMSe,( DS * RCSe ) ) - Max( CS,CS ) )", "obj1": 0.3736059479553903, "obj2": 0.4358397673877705}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ( CRS / RRS ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( Max( DS,RCSe ) - ( Max( MLU,RCSe ) / MUM ) ) / ( Min( RMSe ,CS ) / CS ) ) / ( Max( ( Max( ( DS * Min( MUM ,RRSe ) ),MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4661906062147041}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "( Max( ( Max( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ),( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( ( ( FirstVNF_CPU + MRS ) + FirstVNF_Mem_Server ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( Min( ( ( ( ( RRSe / DS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) ,Min( ( Max( MLU,CS ) - ( Min( Min( MLU ,RRSe ) ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2178405077106329}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( DS + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.14583917650158185}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - Min( ( ( RRSe - RRSe ) / ( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ) - RRSe ) ) ,RMSe ) )", "obj1": 0.6486988847583643, "obj2": 0.17350823834670176}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - Min( ( CRS - FirstVNF_CPU ) ,MDR ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - Max( BR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MLU ,RRSe ) - ( Max( MUC,( RMSe / MLU ) ) / MLU ) )", "obj1": 0.9219330855018587, "obj2": 0.02933865687026758}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.20943869392170503}, {"determining": "( ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( Min( ( MRS + ( Min( ( AMS * FirstVNF_Mem_Server ) ,( CRS - FirstVNF_CPU_Server ) ) * Min( Const ,FirstVNF_Mem_Server ) ) ) ,Min( Const ,ACS ) ),ARS ) ) - Min( PN ,BR ) )", "choosing": "( ( ( ( ( RCSe - MUM ) - MUM ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.9758364312267658, "obj2": 0.008404354887212572}, {"determining": "Min( ( FirstVNF_RAM_Server * Max( DDR,Min( CRS ,BR ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Min( ( ( CS * CS ) + RCSe ) ,RRSe ) - Max( ( MUM - Min( MUC ,MUM ) ),RRSe ) ) / Min( ( Min( Max( MLU,MUM ) ,RRSe ) * MUC ) ,MUM ) ) - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( MUC - MUM ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.004839465712923337}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( ARS * MDR ) ) / Const ) - FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / ( PN / ( ARS * MDR ) ) ) )", "choosing": "( MUR - Max( ( DS - ( RMSe * ( RCSe * ( MUC - RCSe ) ) ) ),CS ) )", "obj1": 0.44052044609665425, "obj2": 0.3748471154024587}, {"determining": "( Max( DDR,( Max( FirstVNF_CPU,( ACS * ( FirstVNF_CPU / CRS ) ) ) * Min( Max( RRS,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ,( Min( ( FirstVNF_Mem_Server - ( BR + BR ) ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,RRS ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( RCSe - ( RMSe * ( MUM * MLU ) ) ) ) ) ) / ( ( ( Max( CS,RMSe ) * RCSe ) / MUC ) * ( MUM - DS ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5444248498715188}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.8940520446096655, "obj2": 0.05211568339993766}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Min( Min( Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( DS + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.14421181042894626}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + ( ( MRS / ( Max( FirstVNF_Mem,BR ) / MDR ) ) - Max( FirstVNF_Mem_Server,BR ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( ( BR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - FirstVNF_RAM ) / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * ( RRSe * DS ) ) + ( RRSe + Max( MUC,RRSe ) ) ) ) / RCSe ) ) - Max( Min( DS ,( ( Min( MLU ,MUC ) * CS ) / RCSe ) ),MUC ) )", "obj1": 0.9460966542750929, "obj2": 0.02255519116702232}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( Min( Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Max( Const,Min( BR ,Const ) ) * RRS ) )", "choosing": "( ( ( MUM - CS ) * DS ) - ( ( ( ( MLU * Min( ( RCSe * Min( RCSe ,MUR ) ) ,DS ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ) )", "obj1": 0.8977695167286245, "obj2": 0.042570357986163876}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( Max( MDR,MDR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ,( ( BR / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU ) + RRS ) ,( FirstVNF_Mem - RRS ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( RCSe - CS ) ) - Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.2843866171003718, "obj2": 0.5510793831052396}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( AMS ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( FirstVNF_CPU_Server * MRS ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,MUC ),( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( DS + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( ( MUM - MUM ) ,MUC ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6951672862453532, "obj2": 0.14042549244553082}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - ( Min( DS ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Max( ( ( ( BR - FirstVNF_RAM ) - Const ) - Min( ARS ,Const ) ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe + MUR ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + ( DS * CS ) ) )", "obj1": 0.6301115241635687, "obj2": 0.1984990411497409}, {"determining": "Min( Min( ( FirstVNF_Mem + FirstVNF_Mem_Server ) ,BR ) ,Min( MRS ,( Max( ( ARS / AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( MUC + CS ) / ( Max( ( MUC / ( ( ( CS * CS ) + ( MUC / MUC ) ) / MUR ) ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.016576777002185433}, {"determining": "Min( ( Const / FirstVNF_RAM ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RRSe - ( ( RCSe / MUR ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.09286547962735893}, {"determining": "( ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( Min( ( MRS + ( Min( ( AMS * FirstVNF_Mem_Server ) ,( CRS - FirstVNF_CPU_Server ) ) * Min( Const ,FirstVNF_Mem_Server ) ) ) ,Min( Const ,ACS ) ),ARS ) ) - Min( PN ,BR ) )", "choosing": "( ( ( ( ( RCSe - MUM ) - MUM ) - MUM ) - ( MUM - MUM ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.9702602230483272, "obj2": 0.011202329031446242}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5655983396054997}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( FirstVNF_RAM / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.9107806691449815, "obj2": 0.04042191545269144}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( Max( DDR,( ( DDR - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ( Max( CRS,DDR ) - RRS ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( Min( ( CS * MLU ) ,MLU ) / ( ( MUR - MUR ) + DS ) ) + Min( RMSe ,RRSe ) ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / RCSe )", "obj1": 0.12825278810408922, "obj2": 0.6867613235568429}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Min( MDR ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + RRSe ),( MUC / ( Min( DS ,MLU ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.620817843866171, "obj2": 0.20442112566485504}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6245353159851301, "obj2": 0.1999783864513288}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Const - ( RRS + MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( RRSe ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6970260223048327, "obj2": 0.1366944470166365}, {"determining": "Min( Min( Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ,( FirstVNF_RAM / ( ( ( PN / ( Min( Const ,FirstVNF_CPU ) * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) - ( ( ( ( MLU * Min( ( DS / MLU ) ,DS ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ) )", "obj1": 0.9014869888475836, "obj2": 0.04083000605270293}, {"determining": "Min( ( ( Min( FirstVNF_Mem ,MRS ) - Max( PN,ACS ) ) + Max( Max( MDR,Max( ACS,ACS ) ),( MDR + DDR ) ) ) ,( MDR / Min( Max( Const,MDR ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,CS ) ) / CS ) ,MUM ) ) ) - ( Max( Min( RRSe ,MLU ),CS ) + MUR ) ) - ( ( MUC / MLU ) + ( ( MUR * CS ) - CS ) ) )", "obj1": 0.2379182156133829, "obj2": 0.5969882120429084}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / Const ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,MUR ) / DS ) ) ) ),MUR ) - Max( MUR,DS ) )", "obj1": 0.966542750929368, "obj2": 0.015745999976922158}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( FirstVNF_CPU - MRS ) ) - ( ( ( Min( ( ( CRS + CRS ) / FirstVNF_RAM ) ,( MRS - BR ) ) - ACS ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / ( Min( RMSe ,MUR ) / MUM ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.28066914498141265, "obj2": 0.5536614626950058}, {"determining": "Max( ( Min( Max( Min( CRS ,Min( DDR ,FirstVNF_CPU ) ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / MLU ),CS ) ) - ( Max( ( MUC / RCSe ),MLU ) + MUR ) )", "obj1": 0.26765799256505574, "obj2": 0.5738281307451624}], "29": [{"determining": "( Max( ( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,ACS ) ) - FirstVNF_RAM_Server ),Max( RRS,BR ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( Max( RCSe,RMSe ) / ( Max( RMSe,( CS - MUM ) ) / Min( Max( MLU,MUM ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / ( ( CS * MLU ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - DDR ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( ( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / DS ) ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( ( BR + FirstVNF_RAM ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,( ARS / MDR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - Min( ( ( BR + ( ACS - FirstVNF_Mem_Server ) ) / ACS ) ,FirstVNF_CPU ) ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( RCSe + CS ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,MUR ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.533457249070632, "obj2": 0.3007682626769369}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - Min( ( MRS / FirstVNF_CPU ) ,FirstVNF_CPU ) ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( RCSe + CS ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,MUM ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.5315985130111525, "obj2": 0.31350368994846767}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( RRS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,MRS )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( Min( DS ,MUR ) - RCSe ) + MLU ) + CS ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - Min( ( ( RRSe - RRSe ) / ( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ) - RRSe ) ) ,RMSe ) )", "obj1": 0.570631970260223, "obj2": 0.22570371185751176}, {"determining": "Min( Min( DDR ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * ( MRS * Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_Mem,CRS ) ) ) ) ,( PN / AMS ) )", "choosing": "( ( MLU / Max( Min( MUR ,( Max( ( ( CS * CS ) + MUM ),DS ) * ( ( ( CS + RMSe ) / RCSe ) / MUM ) ) ),( ( MUC * ( ( Max( DS,MLU ) + ( MUM - MUC ) ) + MLU ) ) * Max( ( ( MUC * RCSe ) - DS ),RRSe ) ) ) ) - ( MUC + RMSe ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "( ( PN / Const ) - Max( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) + ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem * AMS ) ,( ( FirstVNF_Mem / FirstVNF_Mem_Server ) / ( DDR * FirstVNF_RAM_Server ) ) ) - MRS ) ) ),MRS ) )", "choosing": "( ( Max( RRSe,Max( ( RRSe - ( ( RCSe + Max( MUR,CS ) ) * CS ) ),RCSe ) ) * ( MLU - DS ) ) / ( Max( MLU,MUR ) + ( MUC - ( MLU * MUC ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.1136439889751638}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / RRSe ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.3066914498141264, "obj2": 0.5242428372918905}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,Max( FirstVNF_RAM,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( Min( RCSe ,MUR ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,RMSe ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.08550185873605948, "obj2": 0.7908627489443175}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Min( DDR ,MDR ) ) + FirstVNF_CPU ) ,Min( CRS ,MDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * ( RCSe / Min( MUM ,RCSe ) ) ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.37412678924062487}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) ,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + ( MUM / DS ) ) + CS ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "Min( Min( MRS ,( PN / ( ( ( MDR + AMS ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ARS / ( FirstVNF_Mem_Server + Max( DDR,Max( PN,DDR ) ) ) ) )", "choosing": "( Max( RMSe,( DS * RCSe ) ) - Max( CS,CS ) )", "obj1": 0.3736059479553903, "obj2": 0.4358397673877705}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( RMSe * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8504853120122445}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( ( BR + FirstVNF_RAM ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( Min( MDR ,Max( ARS,( ARS / MDR ) ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),ARS ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - ACS ) ) * Min( MRS ,( ( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( RMSe - CS ) * RCSe ) ) - Max( ( ( ( RCSe + CS ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) )", "obj1": 0.637546468401487, "obj2": 0.19503834080239668}, {"determining": "( Max( DDR,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) - ( ( Min( DDR ,( ( CRS * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / ( DS * RRSe ) ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.26765799256505574, "obj2": 0.5657952137208386}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( ( AMS + ( ( FirstVNF_Mem - ARS ) - MDR ) ) - ( MDR + AMS ) ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * ( ( MLU * Min( ( MLU / DS ) ,( RCSe + MUR ) ) ) + MUM ) )", "obj1": 0.8884758364312267, "obj2": 0.054526022290057166}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + ( ( MRS / ( Max( FirstVNF_Mem,BR ) / MDR ) ) - Max( FirstVNF_Mem_Server,BR ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( ( BR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - FirstVNF_RAM ) / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * ( RRSe * DS ) ) + ( RRSe + Max( MUC,RRSe ) ) ) ) / RCSe ) ) - Max( Min( DS ,( ( Min( MLU ,MUC ) * CS ) / RCSe ) ),MUC ) )", "obj1": 0.9460966542750929, "obj2": 0.02255519116702232}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Const - ( FirstVNF_RAM + MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( RRSe ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( ( Max( MLU,MUC ) - MUM ) ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6970260223048327, "obj2": 0.1366944470166365}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( RMSe - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.42936802973977695, "obj2": 0.3829582320788953}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - Min( Min( ( ( ( FirstVNF_Mem - DDR ) * AMS ) * ( DDR / Max( PN,Const ) ) ) ,MRS ) ,( FirstVNF_Mem_Server / DDR ) ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( MLU / Max( RCSe,( ( MUM / Max( ( DS * ( RMSe - MUC ) ),( RCSe - RMSe ) ) ) / RMSe ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.6691449814126395, "obj2": 0.15200984850890714}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( FirstVNF_RAM - DDR ) / ( ( ( ( Min( ACS ,AMS ) * BR ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + Max( CS,RCSe ) ) ,( ( RRSe - ( DS + CS ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9330855018587361, "obj2": 0.0227557981920091}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) + ( ( Max( ( Min( Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ),AMS ) ,CRS ) / FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) + FirstVNF_RAM ) * Max( ACS,AMS ) ) )", "choosing": "( ( MUR / ( Min( ( ( Min( DS ,( CS * MLU ) ) + RCSe ) * MUM ) ,( RCSe * MUM ) ) + RRSe ) ) - ( Min( MUR ,RCSe ) / Min( RCSe ,MLU ) ) )", "obj1": 0.08364312267657993, "obj2": 0.8091547981494243}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( ( Max( CS,RMSe ) * RCSe ) / MUC ),( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7267657992565055, "obj2": 0.12413526739953608}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / RRS ) ) * Min( Const ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - AMS ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( MUR / DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / Max( RCSe,MUM ) )", "obj1": 0.0687732342007435, "obj2": 0.822104886343045}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2955390334572491, "obj2": 0.5406951148096317}, {"determining": "Min( Max( DDR,( Max( FirstVNF_CPU,( ACS * ( FirstVNF_CPU / CRS ) ) ) * Min( Max( RRS,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ,( Min( ( FirstVNF_Mem_Server - ( BR + BR ) ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + MUC ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.5855018587360595, "obj2": 0.22548111029830548}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM_Server + Max( ACS,FirstVNF_RAM_Server ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ),( ( RMSe - CS ) * Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7323420074349443, "obj2": 0.12398444778397537}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - ( Min( DS ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "Min( Min( ( FirstVNF_Mem + FirstVNF_Mem_Server ) ,BR ) ,Min( MRS ,( Max( ( ARS / AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( MUC + CS ) / ( Max( ( MUC / ( ( ( CS * CS ) + ( MUC / MUC ) ) / MUR ) ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.016576777002185433}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( ( CRS + Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * CS )", "obj1": 0.5947955390334573, "obj2": 0.2214020001633613}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ( CRS / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + MLU ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4661906062147041}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "Min( Min( ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( FirstVNF_RAM / MDR ),Max( ( AMS / FirstVNF_RAM_Server ),( AMS / ( FirstVNF_Mem_Server / RRS ) ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + MUR ) + ( MLU / Min( MUC ,RCSe ) ) ) - RCSe ) ),CS ) )", "obj1": 0.9107806691449815, "obj2": 0.04042191545269144}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( DS + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.14583917650158185}, {"determining": "Min( ( FirstVNF_RAM_Server * Max( DDR,Min( CRS ,BR ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Min( ( ( CS * CS ) + RCSe ) ,RRSe ) - Max( ( MUM - Min( MUC ,MUM ) ),RRSe ) ) / Min( ( Min( Max( MLU,MUM ) ,RRSe ) * MUC ) ,MUM ) ) - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( MUC - MUM ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.004839465712923337}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "( Max( DDR,( Max( FirstVNF_CPU,( ACS * ( FirstVNF_CPU / CRS ) ) ) * Min( Max( RRS,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ,( Min( ( FirstVNF_Mem_Server - ( BR + BR ) ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,RRS ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( RCSe - ( RMSe * ( MUM * MLU ) ) ) ) ) ) / ( ( ( Max( CS,RMSe ) * RCSe ) / MUC ) * ( MUM - DS ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5444248498715188}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.8940520446096655, "obj2": 0.05211568339993766}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Min( MDR ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + RRSe ),( MUC / ( Min( DS ,MLU ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.620817843866171, "obj2": 0.20442112566485504}, {"determining": "( Max( ( Max( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ),( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( ( ( FirstVNF_CPU + MRS ) + FirstVNF_Mem_Server ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( Min( ( ( ( ( RRSe / DS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) ,Min( ( Max( MLU,CS ) - ( Min( Min( MLU ,RRSe ) ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2178405077106329}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( Min( Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Max( Const,Min( BR ,Const ) ) * RRS ) )", "choosing": "( ( ( MUM - CS ) * DS ) - ( ( ( ( MLU * Min( ( RCSe * Min( RCSe ,MUR ) ) ,DS ) ) - DS ) - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ) )", "obj1": 0.8977695167286245, "obj2": 0.042570357986163876}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.20943869392170503}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( Const * ( Const / Min( ACS ,( DDR * ARS ) ) ) ) / ( Min( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - MUM ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( ( RCSe * MLU ) ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.43654082520133614}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( Max( MDR,MDR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ,( ( BR / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU ) + RRS ) ,( FirstVNF_Mem - RRS ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( RCSe - CS ) ) - Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.2843866171003718, "obj2": 0.5510793831052396}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ( PN / FirstVNF_Mem ) - Max( MRS,DDR ) ) ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( ( Max( CS,RMSe ) * RCSe ) / MUC ),( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RCSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7267657992565055, "obj2": 0.12413526739953608}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( Max( ( ( ( BR - FirstVNF_RAM ) - Const ) - Min( ARS ,Const ) ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe + MUR ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + ( DS * CS ) ) )", "obj1": 0.6301115241635687, "obj2": 0.1984990411497409}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / Const ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ( DDR - DDR ) - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( FirstVNF_CPU / CRS ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Max( RRSe,RRSe ) + Min( MUM ,( Min( MUM ,MUR ) / DS ) ) ) ),MUR ) - Max( MUR,DS ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "Min( ( Const / FirstVNF_RAM ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RRSe - ( ( RCSe / MUR ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.09286547962735893}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS + Const ) ,( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( ( ( FirstVNF_Mem_Server + MDR ) * PN ) * FirstVNF_RAM ) * Const ) ) - ( CRS + MDR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( ( ( ( RMSe / CS ) - MUR ) + RRSe ) * Min( MUM ,( ( ( ( MUM - DS ) - DS ) + Max( Min( MLU ,DS ),MUR ) ) - ( RRSe - RCSe ) ) ) ) ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5655983396054997}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - Min( ( ( RRSe - RRSe ) / ( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ) - RRSe ) ) ,RMSe ) )", "obj1": 0.6486988847583643, "obj2": 0.17350823834670176}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( Max( DDR,( ( DDR - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ( Max( CRS,DDR ) - RRS ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( Min( ( CS * MLU ) ,MLU ) / ( ( MUR - MUR ) + DS ) ) + Min( RMSe ,RRSe ) ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / RCSe )", "obj1": 0.12825278810408922, "obj2": 0.6867613235568429}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6245353159851301, "obj2": 0.1999783864513288}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6970260223048327, "obj2": 0.1366944470166365}], "30": [{"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,( ( MRS / FirstVNF_CPU ) - Const ) ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,ACS ) ) - FirstVNF_RAM_Server ),Max( RRS,BR ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( Max( RCSe,RMSe ) / ( Max( RMSe,( CS - MUM ) ) / Min( Max( MLU,MUM ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / ( ( CS * MLU ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - Min( ( MRS / FirstVNF_CPU ) ,FirstVNF_CPU ) ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( RCSe + CS ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,MUM ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.5315985130111525, "obj2": 0.31350368994846767}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - Min( Min( ( ( ( FirstVNF_Mem - DDR ) * AMS ) * ( DDR / Max( PN,Const ) ) ) ,MRS ) ,( FirstVNF_Mem_Server / DDR ) ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( MLU / Max( RCSe,( ( MUM / Max( ( DS * ( RMSe - MUC ) ),( RCSe - RMSe ) ) ) / RMSe ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.570631970260223, "obj2": 0.22520237487607864}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( PN / FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5408921933085502, "obj2": 0.28874263010581463}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ( Min( AMS ,BR ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MUR - MLU ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.8884758364312267, "obj2": 0.03981448670130043}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "Min( Min( ( FirstVNF_Mem + FirstVNF_Mem_Server ) ,BR ) ,Min( MRS ,( Max( ( ARS / AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( MUC + CS ) / ( Max( ( MUC / ( ( ( CS * CS ) + ( MUC / MUC ) ) / MUR ) ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.016576777002185433}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "Min( ( FirstVNF_RAM_Server * Max( DDR,Min( CRS ,BR ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Min( ( ( CS * CS ) + RCSe ) ,RRSe ) - Max( ( MUM - Min( MUC ,MUM ) ),RRSe ) ) / Min( ( Min( Max( MLU,MUM ) ,RRSe ) * MUC ) ,MUM ) ) - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( MUC - MUM ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.004839465712923337}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * ( ACS * Const ) ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( MUC - DS ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5520446096654275, "obj2": 0.25049625429139477}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / RRSe ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.3066914498141264, "obj2": 0.5242428372918905}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Min( DDR ,MDR ) ) + FirstVNF_CPU ) ,Min( CRS ,MDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * ( RCSe / Min( MUM ,RCSe ) ) ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.37412678924062487}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / ( ( AMS + CRS ) * BR ) ) - ( Max( BR,Min( Const ,( ( AMS - FirstVNF_RAM ) - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MUR ,RCSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6988847583643123, "obj2": 0.13580911939031112}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "Min( Min( MRS ,( PN / ( ( ( MDR + AMS ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ARS / ( FirstVNF_Mem_Server + Max( DDR,Max( PN,DDR ) ) ) ) )", "choosing": "( Max( RMSe,( DS * RCSe ) ) - Max( CS,CS ) )", "obj1": 0.3736059479553903, "obj2": 0.4358397673877705}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( RMSe * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8504853120122445}, {"determining": "( ( CRS + Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * CS )", "obj1": 0.5947955390334573, "obj2": 0.2214020001633613}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "Min( Min( DDR ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * ( MRS * Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_Mem,CRS ) ) ) ) ,( PN / AMS ) )", "choosing": "( ( MLU / Max( Min( MUR ,( Max( ( ( CS * CS ) + MUM ),DS ) * ( ( ( CS + RMSe ) / RCSe ) / MUM ) ) ),( ( MUC * ( ( Max( DS,MLU ) + ( MUM - MUC ) ) + MLU ) ) * Max( ( ( MUC * RCSe ) - DS ),RRSe ) ) ) ) - ( MUC + RMSe ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Const - ( FirstVNF_RAM + MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / ( DDR + MDR ) ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( RRSe ,( ( RMSe - ( ( RMSe * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( ( Max( MLU,MUC ) - MUM ) ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.10648289501533216}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( DS + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.14583917650158185}, {"determining": "( Max( Min( FirstVNF_CPU ,( RRS * PN ) ),( Const - Min( ( ( BR + ( ACS - FirstVNF_Mem_Server ) ) / ACS ) ,FirstVNF_CPU ) ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( RCSe + CS ) * Min( RMSe ,( MUM / DS ) ) ) * ( MUR / ( Min( ( MLU - MUC ) ,( DS * Min( MUM ,MUR ) ) ) / ( RCSe / ( RCSe - MUC ) ) ) ) ),RMSe ) * ( ( CS + RCSe ) + MUM ) )", "obj1": 0.533457249070632, "obj2": 0.3007682626769369}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "Min( Min( MRS ,MDR ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Const - ( FirstVNF_RAM + MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( RRSe ,( ( RMSe - Min( ( DS + MUM ) ,( MUM / RCSe ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( ( Max( MLU,MUC ) - MUM ) ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6319702602230484, "obj2": 0.1949058603247597}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ( CRS / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + MLU ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4661906062147041}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + ( ( MRS / ( Max( FirstVNF_Mem,BR ) / MDR ) ) - Max( FirstVNF_Mem_Server,BR ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( ( BR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - FirstVNF_RAM ) / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * ( RRSe * DS ) ) + ( RRSe + Max( MUC,RRSe ) ) ) ) / RCSe ) ) - Max( Min( DS ,( ( Min( MLU ,MUC ) * CS ) / RCSe ) ),MUC ) )", "obj1": 0.9460966542750929, "obj2": 0.02255519116702232}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( PN ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * ( DDR - PN ) ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( DS * MUR ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.42936802973977695, "obj2": 0.3806801943677784}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6691449814126395, "obj2": 0.14720000622718432}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( Min( MDR ,Max( FirstVNF_RAM,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( Min( RCSe ,MUR ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,RMSe ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.08550185873605948, "obj2": 0.7908627489443175}, {"determining": "( Max( ( Max( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ),( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( ( ( FirstVNF_CPU + MRS ) + FirstVNF_Mem_Server ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( Min( ( ( ( ( RRSe / DS ) - MUR ) / Max( MUC,RRSe ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) ,Min( ( Max( MLU,CS ) - ( Min( Min( MLU ,RRSe ) ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2178405077106329}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( FirstVNF_RAM - DDR ) / ( ( ( ( Min( ACS ,AMS ) * BR ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + Max( CS,RCSe ) ) ,( ( RRSe - ( DS + CS ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9330855018587361, "obj2": 0.0227557981920091}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,FirstVNF_CPU_Server ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08364312267657993, "obj2": 0.795349671203157}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM_Server + Max( ACS,( ARS * MDR ) ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ),( ( RMSe - CS ) * Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( RRSe,MUR ) * ( MLU - DS ) ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.741635687732342, "obj2": 0.12003390436321738}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( Const * ( Const / Min( ACS ,( DDR * ARS ) ) ) ) / ( Min( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - MUM ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( ( RCSe * MLU ) ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.43654082520133614}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2955390334572491, "obj2": 0.5406951148096317}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - ( Min( DS ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( ( Max( CS,RMSe ) * RCSe ) / MUC ),( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7267657992565055, "obj2": 0.12413526739953608}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( ARS,FirstVNF_CPU ),ARS ) ) ) ,Min( Min( MRS ,( Max( MDR,MDR ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ,( ( BR / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU ) + RRS ) ,( FirstVNF_Mem - RRS ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( RCSe - CS ) ) - Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.2843866171003718, "obj2": 0.5510793831052396}, {"determining": "( FirstVNF_CPU * Min( ( BR - FirstVNF_CPU_Server ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( ( MUC * ( DS - CS ) ) * ( ( MLU * ( MUM * MUR ) ) + MUM ) )", "obj1": 0.8866171003717472, "obj2": 0.0556717902549172}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM + MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( RRSe ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUR ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( ( Max( MLU,MUC ) - MUM ) ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6951672862453532, "obj2": 0.13776160674219143}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "( ( Max( BR,( BR / ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( ( RRSe / MUC ) + MLU ) ) + RRSe ) ) - MUM ) - ( MUM - MUM ) ) / ( Max( Min( RRSe ,CS ),MUC ) / RRSe ) )", "obj1": 0.20446096654275092, "obj2": 0.6320114045599976}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - Min( ( ( RRSe - RRSe ) / ( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ) - RRSe ) ) ,RMSe ) )", "obj1": 0.6486988847583643, "obj2": 0.17350823834670176}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS * MDR ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + ( RMSe - CS ) ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.8810408921933085, "obj2": 0.058090178511062254}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS / Max( Const,( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.20943869392170503}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( Max( DDR,( Max( FirstVNF_CPU,( ACS * ( FirstVNF_CPU / CRS ) ) ) * Min( Max( RRS,( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ,( Min( ( FirstVNF_Mem_Server - ( BR + BR ) ) ,MDR ) - FirstVNF_RAM_Server ) ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,RRS ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUR * Min( MUM ,( RCSe - ( RMSe * ( MUM * MLU ) ) ) ) ) ) / ( ( ( Max( CS,RMSe ) * RCSe ) / MUC ) * ( MUM - DS ) ) )", "obj1": 0.2899628252788104, "obj2": 0.5444248498715188}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) ) ) * ( ( Min( MDR ,Max( FirstVNF_RAM,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( Min( RCSe ,MUR ) / RCSe ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,RMSe ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( ( MDR + Max( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,( BR + ( Max( AMS,ACS ) + ARS ) ) ) )", "choosing": "( Max( RMSe,MUM ) / RCSe )", "obj1": 0.2211895910780669, "obj2": 0.6175983761170347}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "( Max( Max( ARS,ACS ),( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / RRS ) ) * Min( Const ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - AMS ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( MUR / DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUR ) ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / Max( RCSe,MUM ) )", "obj1": 0.06505576208178439, "obj2": 0.8243398370247471}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM_Server + Max( ACS,FirstVNF_RAM_Server ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ),( ( RMSe - CS ) * Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7323420074349443, "obj2": 0.12398444778397537}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * ( PN / Max( Min( DDR ,PN ),AMS ) ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( ( Max( CS,RMSe ) * RCSe ) / MUC ),( ( RMSe - CS ) * Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7267657992565055, "obj2": 0.12413526739953608}, {"determining": "Min( ( Const / FirstVNF_RAM ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RRSe - ( ( RCSe / MUR ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.09286547962735893}, {"determining": "( Max( DDR,( ( DDR - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ( Max( CRS,DDR ) - RRS ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( Min( ( CS * MLU ) ,MLU ) / ( ( MUR - MUR ) + DS ) ) + Min( RMSe ,RRSe ) ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / RCSe )", "obj1": 0.12825278810408922, "obj2": 0.6867613235568429}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_RAM_Server / ARS ) + FirstVNF_Mem ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Const - ( FirstVNF_RAM + MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( DS - Max( RRSe,RMSe ) ) )", "obj1": 0.6245353159851301, "obj2": 0.19955467388301817}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / RRS ) ) * Min( Const ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( ( RRS * ( ACS / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - AMS ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( MUR / DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( RCSe / ( MUC * MUR ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / Max( RCSe,MUM ) )", "obj1": 0.0687732342007435, "obj2": 0.822104886343045}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Min( MDR ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,( ( Const * ( Const / Min( ACS ,( DDR * ARS ) ) ) ) / ( Min( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / MUC ) + MLU ) ) + ( MUC / CS ) ),( MUC / ( Min( DS ,MLU ) - RRSe ) ) ) / CS ),RMSe ) * ( DS + MUM ) )", "obj1": 0.6152416356877324, "obj2": 0.20678618118513842}, {"determining": "( Max( ( ( ( BR - FirstVNF_RAM ) - Const ) - Min( ARS ,Const ) ),FirstVNF_RAM_Server ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe + MUR ) / CS ) - MUR ) / Max( ( ( RMSe - CS ) / RCSe ),RRSe ) ) + CS ),RMSe ) * ( DS + ( DS * CS ) ) )", "obj1": 0.6301115241635687, "obj2": 0.1984990411497409}], "31": [{"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,( ( MRS / FirstVNF_CPU ) - Const ) ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "Min( Min( ( FirstVNF_Mem + FirstVNF_Mem_Server ) ,BR ) ,Min( MRS ,( Max( ( ARS / AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( MUC + CS ) / ( Max( ( MUC / ( ( ( CS * CS ) + ( MUC / MUC ) ) / MUR ) ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.016576777002185433}, {"determining": "Min( Min( DDR ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * ( MRS * Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_Mem,CRS ) ) ) ) ,( PN / AMS ) )", "choosing": "( ( MLU / Max( Min( MUR ,( Max( ( ( CS * CS ) + MUM ),DS ) * ( ( ( CS + RMSe ) / RCSe ) / MUM ) ) ),( ( MUC * ( ( Max( DS,MLU ) + ( MUM - MUC ) ) + MLU ) ) * Max( ( ( MUC * RCSe ) - DS ),RRSe ) ) ) ) - ( MUC + RMSe ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "Min( ( FirstVNF_RAM_Server * Max( DDR,Min( CRS ,BR ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Min( ( ( CS * CS ) + RCSe ) ,RRSe ) - Max( ( MUM - Min( MUC ,MUM ) ),RRSe ) ) / Min( ( Min( Max( MLU,MUM ) ,RRSe ) * MUC ) ,MUM ) ) - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( MUC - MUM ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.004839465712923337}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / RRSe ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.3066914498141264, "obj2": 0.5242428372918905}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Min( DDR ,MDR ) ) + FirstVNF_CPU ) ,Min( CRS ,MDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * ( RCSe / Min( MUM ,RCSe ) ) ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.37412678924062487}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "( ( PN / Min( MRS ,( ( PN / Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ) - ( ARS * MDR ) ) ) ) - ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),( Max( MLU,MUC ) - MUM ) ) )", "obj1": 0.5669144981412639, "obj2": 0.2299675746742673}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( MDR - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + ( RMSe - CS ) ),Min( RMSe ,RRSe ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.9144981412639405, "obj2": 0.03722388316730808}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( DS + MUM ) / ( ( MUR - MLU ) * Min( MLU ,MUM ) ) ) )", "obj1": 0.8884758364312267, "obj2": 0.03981448670130043}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * ( ACS * Const ) ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( MUC - DS ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5520446096654275, "obj2": 0.25049625429139477}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( RMSe * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8504853120122445}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "Min( Min( PN ,( FirstVNF_RAM / ( ( ( PN / ( Min( DDR ,PN ) * MDR ) ) - FirstVNF_CPU ) * ( PN / Max( Min( DDR ,PN ),AMS ) ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( ( Max( CS,RMSe ) * RCSe ) / MUC ),( ( RMSe - CS ) * Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) ) - ( ( ( RMSe + Min( DS ,CS ) ) - Min( ( DS + MUM ) ,( ( RRSe - ( ( RCSe / MUR ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7211895910780669, "obj2": 0.12786284533893275}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - Min( Min( ( ( ( FirstVNF_Mem - DDR ) * AMS ) * ( DDR / Max( PN,Const ) ) ) ,MRS ) ,( FirstVNF_Mem_Server / DDR ) ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( MLU / Max( RCSe,( ( MUM / Max( ( DS * ( RMSe - MUC ) ),( RCSe - RMSe ) ) ) / RMSe ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.570631970260223, "obj2": 0.22520237487607864}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ( CRS / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + MLU ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4661906062147041}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( ( CRS + Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) / CS ),RMSe ) * CS )", "obj1": 0.5947955390334573, "obj2": 0.2214020001633613}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + ( ( MRS / ( Max( FirstVNF_Mem,BR ) / MDR ) ) - Max( FirstVNF_Mem_Server,BR ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( ( BR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - FirstVNF_RAM ) / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * ( RRSe * DS ) ) + ( RRSe + Max( MUC,RRSe ) ) ) ) / RCSe ) ) - Max( Min( DS ,( ( Min( MLU ,MUC ) * CS ) / RCSe ) ),MUC ) )", "obj1": 0.9460966542750929, "obj2": 0.02255519116702232}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Min( FirstVNF_Mem_Server ,PN ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ARS + RRS ) ,ACS ) ,( ( ACS * BR ) * AMS ) ) ) ) )", "choosing": "( Max( RMSe,( MUC - MUR ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUC ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.16178501106483253}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / ( ( AMS + CRS ) * BR ) ) - ( Max( BR,Min( Const ,( ( AMS - FirstVNF_RAM ) - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MUR ,RCSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6988847583643123, "obj2": 0.13580911939031112}, {"determining": "( ( Max( RRS,Max( MRS,FirstVNF_RAM ) ) + AMS ) * Min( Max( FirstVNF_RAM,Min( ( ( AMS + ( ( FirstVNF_Mem - ARS ) - MDR ) ) - ( MDR + AMS ) ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,MUC ) - RRSe ) ) ) / CS ),RMSe ) * ( Max( MUM,MLU ) + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.20069473705507926}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( PN ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * ( DDR - PN ) ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( DS * MUR ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.42936802973977695, "obj2": 0.3806801943677784}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) ) ) * ( ( Min( MDR ,Max( FirstVNF_RAM,ACS ) ) - CRS ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RMSe * ( Max( ( Min( RCSe ,MUR ) / RCSe ),RRSe ) * ( MUC - MLU ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Max( RRSe,RMSe ) + MUR ) ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,FirstVNF_CPU_Server ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08364312267657993, "obj2": 0.795349671203157}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6691449814126395, "obj2": 0.14720000622718432}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) * ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Max( RMSe,( MUM * RMSe ) ) + ( ( ( Min( DS ,MUR ) + Max( RRSe,MUM ) ) + RCSe ) / ( MUR * MUR ) ) ) - DS )", "obj1": 0.08550185873605948, "obj2": 0.7895138625816386}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( FirstVNF_RAM - DDR ) / ( ( ( ( Min( ACS ,AMS ) * BR ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + Max( CS,RCSe ) ) ,( ( RRSe - ( DS + CS ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9330855018587361, "obj2": 0.0227557981920091}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2955390334572491, "obj2": 0.5406951148096317}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - ( Min( DS ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "( Max( ( Max( ( ( FirstVNF_Mem_Server / ARS ) - FirstVNF_CPU ),( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( Max( FirstVNF_RAM,( Max( DDR,AMS ) * FirstVNF_RAM ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,MUC ) - RRSe ) ) ) - MUM ) * ( DS + Max( RCSe,( Max( MUM,RCSe ) / MLU ) ) ) )", "obj1": 0.6096654275092936, "obj2": 0.2166533423353772}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "( FirstVNF_CPU * Min( ( BR - FirstVNF_CPU_Server ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( ( MUC * ( DS - CS ) ) * ( ( MLU * ( MUM * MUR ) ) + MUM ) )", "obj1": 0.8866171003717472, "obj2": 0.0556717902549172}, {"determining": "Min( Min( MRS ,( PN / ( Max( ( ARS / ( ( ACS * PN ) - MDR ) ),FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Min( RMSe ,Max( RMSe,( DS * CS ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,( ( CS * CS ) + MUM ) ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.36059479553903345, "obj2": 0.43929812870255847}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( CRS / FirstVNF_Mem_Server ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( ( MUR / RRSe ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5433307241050296}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( DS + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.14583917650158185}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - Min( ( ( RRSe - RRSe ) / ( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ) - RRSe ) ) ,RMSe ) )", "obj1": 0.6486988847583643, "obj2": 0.17350823834670176}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS * MDR ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + ( RMSe - CS ) ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.8810408921933085, "obj2": 0.058090178511062254}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * Min( CRS ,AMS ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( AMS / MDR ) - ( FirstVNF_RAM_Server + Max( ACS,FirstVNF_RAM_Server ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,( PN + ( ( PN / FirstVNF_RAM ) * MDR ) ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ),( ( RMSe - CS ) * Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - RRSe ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) ) ) - ( ( CS - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6877323420074349, "obj2": 0.141594093884597}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "Min( ( Const / FirstVNF_RAM ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RRSe - ( ( RCSe / MUR ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6412639405204461, "obj2": 0.19238253844194186}, {"determining": "( ( MDR + Max( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,( BR + ( Max( AMS,ACS ) + ARS ) ) ) )", "choosing": "( Max( RMSe,MUM ) / RCSe )", "obj1": 0.2211895910780669, "obj2": 0.6175983761170347}, {"determining": "( Max( Max( Min( DDR ,( ACS + ( RRS / FirstVNF_RAM ) ) ),ARS ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( Min( ( RCSe - ( MLU / CS ) ) ,Min( MUC ,MLU ) ) * ( DS + MUM ) )", "obj1": 0.7453531598513011, "obj2": 0.1045819271830397}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7732342007434945, "obj2": 0.08616607668659322}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Const - ( FirstVNF_RAM + MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / ( DDR + MDR ) ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( RRSe ,( ( RMSe - ( ( RMSe * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( ( Max( MLU,MUC ) - MUM ) ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.10648289501533216}, {"determining": "Min( Min( MRS ,( PN / ( ( ( MDR + AMS ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ARS / ( FirstVNF_Mem_Server + Max( DDR,Max( PN,DDR ) ) ) ) )", "choosing": "( Max( RMSe,( DS * RCSe ) ) - Max( CS,CS ) )", "obj1": 0.3736059479553903, "obj2": 0.4358397673877705}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM_Server + Max( ACS,( ARS * MDR ) ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ),( ( RMSe - CS ) * Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( RRSe,MUR ) * ( MLU - DS ) ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.741635687732342, "obj2": 0.12003390436321738}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_RAM_Server / ARS ) + FirstVNF_Mem ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Const - ( FirstVNF_RAM + MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( DS - Max( RRSe,RMSe ) ) )", "obj1": 0.6245353159851301, "obj2": 0.19955467388301817}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - PN ) * MRS ) )", "choosing": "Max( ( MUM - DS ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "Min( ( Const / FirstVNF_RAM ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RRSe - ( ( RCSe / MUR ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.09286547962735893}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( Const * ( Const / Min( ACS ,( DDR * ARS ) ) ) ) / ( Min( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - MUM ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( ( RCSe * MLU ) ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.43654082520133614}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),( ( Max( BR,( BR / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( Max( MUC,MUR ) * RRSe ) - RRSe ) * MUC ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,MUC ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.20260223048327136, "obj2": 0.6343696460518349}, {"determining": "( Max( DDR,( ( DDR - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ( Max( CRS,DDR ) - RRS ) ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( Min( ( CS * MLU ) ,MLU ) / ( ( MUR - MUR ) + DS ) ) + Min( RMSe ,RRSe ) ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / RCSe )", "obj1": 0.12825278810408922, "obj2": 0.6867613235568429}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( ( FirstVNF_CPU * MDR ) ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( MLU,MUC ) - MUM ) * Min( Min( MLU ,RRSe ) ,MLU ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.28810408921933084, "obj2": 0.5433094682406404}], "32": [{"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( MRS - FirstVNF_Mem ) - ( ( ( FirstVNF_CPU / ( PN + Const ) ) + FirstVNF_CPU ) * ( Max( DDR,FirstVNF_Mem ) - BR ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RRSe - ( DS + RRSe ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( Max( ( PN + Const ),MRS ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / CS ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - MLU )", "obj1": 0.1171003717472119, "obj2": 0.756445604761199}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Min( ACS ,PN ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - CRS ) ) ) ) ) * MDR ) ) * ( ( ACS / PN ) - Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( Max( ( DS / RCSe ),RMSe ) * RCSe ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * Max( ( ( RRSe * MUR ) * DS ),( MUR - MUM ) ) )", "obj1": 0.587360594795539, "obj2": 0.21027990228169685}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "Min( Min( PN ,( FirstVNF_RAM / ( ( ( PN / ( Min( DDR ,PN ) * MDR ) ) - FirstVNF_CPU ) * ( PN / Max( Min( DDR ,PN ),AMS ) ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( ( Max( CS,RMSe ) * RCSe ) / MUC ),( ( RMSe - CS ) * Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) ) - ( ( ( RMSe + Min( DS ,CS ) ) - Min( ( DS + MUM ) ,( ( RRSe - ( ( RCSe / MUR ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7211895910780669, "obj2": 0.12786284533893275}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / RRSe ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.3066914498141264, "obj2": 0.5242428372918905}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Min( DDR ,MDR ) ) + FirstVNF_CPU ) ,Min( CRS ,MDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * ( RCSe / Min( MUM ,RCSe ) ) ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.37412678924062487}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( Max( RRS,Max( MRS,FirstVNF_RAM ) ) + AMS ) * Min( Max( FirstVNF_RAM,Min( ( ( AMS + ( ( FirstVNF_Mem - ARS ) - MDR ) ) - ( MDR + AMS ) ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + RRSe ),( MUC / ( Max( MLU,MUC ) - RRSe ) ) ) / CS ),RMSe ) * ( Max( MUM,MLU ) + MUM ) )", "obj1": 0.6133828996282528, "obj2": 0.20069473705507926}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "( ( PN / Min( MRS ,( ( PN / Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ) - ( ARS * MDR ) ) ) ) - ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),( Max( MLU,MUC ) - MUM ) ) )", "obj1": 0.5669144981412639, "obj2": 0.2299675746742673}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM_Server + Max( ACS,( ARS * MDR ) ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ),( ( RMSe - CS ) * Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( RRSe,MUR ) * ( MLU - DS ) ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.741635687732342, "obj2": 0.12003390436321738}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( MDR - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + ( RMSe - CS ) ),Min( RMSe ,RRSe ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.9144981412639405, "obj2": 0.03722388316730808}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) * FirstVNF_CPU ) ) ) ,( PN / ( BR + Max( BR,Min( Const ,( FirstVNF_CPU - Max( Const,ACS ) ) ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( DS + MUM ) / ( ( RCSe + Max( RMSe,Max( Min( CS ,Max( MUM,RRSe ) ),DS ) ) ) * Min( MLU ,( ( MLU - MUC ) * MUM ) ) ) ) )", "obj1": 0.8884758364312267, "obj2": 0.03981448670130043}, {"determining": "Min( ( Const / FirstVNF_RAM ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RRSe - ( ( RCSe / MUR ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6412639405204461, "obj2": 0.19238253844194186}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - Min( Min( ( ( ( FirstVNF_Mem - DDR ) * AMS ) * ( DDR / Max( PN,Const ) ) ) ,MRS ) ,( FirstVNF_Mem_Server / DDR ) ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( MLU / Max( RCSe,( ( MUM / Max( ( DS * ( RMSe - MUC ) ),( RCSe - RMSe ) ) ) / RMSe ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.570631970260223, "obj2": 0.22520237487607864}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "Min( Min( DDR ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * ( MRS * Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_Mem,CRS ) ) ) ) ,( PN / AMS ) )", "choosing": "( ( MLU / Max( Min( MUR ,( Max( ( ( CS * CS ) + MUM ),DS ) * ( ( ( CS + RMSe ) / RCSe ) / MUM ) ) ),( ( MUC * ( ( Max( DS,MLU ) + ( MUM - MUC ) ) + MLU ) ) * Max( ( ( MUC * RCSe ) - DS ),RRSe ) ) ) ) - ( MUC + RMSe ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Min( Min( ( FirstVNF_Mem + FirstVNF_Mem_Server ) ,BR ) ,Min( MRS ,( Max( ( ARS / AMS ),FirstVNF_CPU ) - FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( MUC + CS ) / ( Max( ( MUC / ( ( ( CS * CS ) + ( MUC / MUC ) ) / MUR ) ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.016576777002185433}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( ( CRS - FirstVNF_CPU_Server ) - ( Min( CRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( DS,RRSe ) ) / CS ) ,MUM ) ) ) - Max( DS,( ( ( ( RCSe * RCSe ) * CS ) - MUC ) * MUM ) ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.9721189591078067, "obj2": 0.010449863789518132}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( FirstVNF_RAM_Server / ARS ) + FirstVNF_Mem ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Const - ( FirstVNF_RAM + MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( DS - Max( RRSe,RMSe ) ) )", "obj1": 0.6245353159851301, "obj2": 0.19955467388301817}, {"determining": "Min( ( FirstVNF_RAM_Server * Max( DDR,Min( CRS ,BR ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Min( ( ( CS * CS ) + RCSe ) ,RRSe ) - Max( ( MUM - Min( MUC ,MUM ) ),RRSe ) ) / Min( ( Min( Max( MLU,MUM ) ,RRSe ) * MUC ) ,MUM ) ) - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( MUC - MUM ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.004839465712923337}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ( CRS / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + MLU ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4661906062147041}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( MLU,MUC ) - MUM ) * ( RRSe - ( MUC * RCSe ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6598513011152416, "obj2": 0.15374381377667}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + ( ( MRS / ( Max( FirstVNF_Mem,BR ) / MDR ) ) - Max( FirstVNF_Mem_Server,BR ) ) ) ,Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / DDR ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( ( BR + Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - FirstVNF_RAM ) / BR ) / ( BR + Min( Min( ( ( MRS / FirstVNF_CPU_Server ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * ( RRSe * DS ) ) + ( RRSe + Max( MUC,RRSe ) ) ) ) / RCSe ) ) - Max( Min( DS ,( ( Min( MLU ,MUC ) * CS ) / RCSe ) ),MUC ) )", "obj1": 0.9460966542750929, "obj2": 0.02255519116702232}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( PN ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * ( DDR - PN ) ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( DS * MUR ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.42936802973977695, "obj2": 0.3806801943677784}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,FirstVNF_CPU_Server ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08364312267657993, "obj2": 0.795349671203157}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) * ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Max( RMSe,( MUM * RMSe ) ) + ( ( ( Min( DS ,MUR ) + Max( RRSe,MUM ) ) + RCSe ) / ( MUR * MUR ) ) ) - DS )", "obj1": 0.08550185873605948, "obj2": 0.7895138625816386}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( DS / RMSe ) / DS ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.1348183539129594}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * Min( CRS ,AMS ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( AMS / MDR ) - ( FirstVNF_RAM_Server + Max( ACS,FirstVNF_RAM_Server ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,( PN + ( ( PN / FirstVNF_RAM ) * MDR ) ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ),( ( RMSe - CS ) * Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - RRSe ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) ) ) - ( ( CS - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6877323420074349, "obj2": 0.141594093884597}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2955390334572491, "obj2": 0.5406951148096317}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,( FirstVNF_CPU_Server / Min( ACS ,FirstVNF_RAM ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( RRSe,MUM ) - CS ) / ( RRSe * DS ) ),RRSe ) * ( Min( MUC ,Max( MUM,MUC ) ) - MLU ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6691449814126395, "obj2": 0.1460812086687477}, {"determining": "( Max( ( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ),Const ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - ( Min( DS ,MLU ) / RRSe ) ) ,( ( MUM * RRSe ) * ( DS - MUR ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.47026022304832715, "obj2": 0.3223622336762923}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( FirstVNF_CPU * Min( ( BR - FirstVNF_CPU_Server ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( ( MUC * ( DS - CS ) ) * ( ( MLU * ( MUM * MUR ) ) + MUM ) )", "obj1": 0.8866171003717472, "obj2": 0.0556717902549172}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( CRS / FirstVNF_Mem_Server ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( ( MUR / RRSe ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5433307241050296}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * ( ACS * Const ) ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( MUC - DS ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5520446096654275, "obj2": 0.25049625429139477}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / ( ( AMS + CRS ) * BR ) ) - ( Max( BR,Min( Const ,( ( AMS - FirstVNF_RAM ) - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MUR ,RCSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6988847583643123, "obj2": 0.13580911939031112}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - Min( ( ( RRSe - RRSe ) / ( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ) - RRSe ) ) ,RMSe ) )", "obj1": 0.6486988847583643, "obj2": 0.17350823834670176}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS * MDR ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + ( RMSe - CS ) ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.8810408921933085, "obj2": 0.058090178511062254}, {"determining": "( ( ( FirstVNF_CPU_Server * ( Const - ( RRS + MDR ) ) ) - Min( ( FirstVNF_RAM / AMS ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - Min( FirstVNF_RAM_Server ,( AMS / ARS ) ) )", "choosing": "( Max( ( MLU + RCSe ),Min( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) ,RRSe ) ) / ( RCSe * MUR ) )", "obj1": 0.7657992565055762, "obj2": 0.09110553684055207}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( DS + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6802973977695167, "obj2": 0.14583917650158185}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( RMSe * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8504853120122445}, {"determining": "Min( ( Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( ( MUC / ( RRSe - DS ) ) * MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / MUM ) ) ) ) + ( MLU / DS ) ) ) - ( RMSe * MUR ) )", "obj1": 0.05947955390334572, "obj2": 0.8497422122661098}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( MDR + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,( DS * RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( Const * ( Const / Min( ACS ,( DDR * ARS ) ) ) ) / ( Min( ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - MUM ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( ( RCSe * MLU ) ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.43654082520133614}, {"determining": "( ( MDR + Max( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,( BR + ( Max( AMS,ACS ) + ARS ) ) ) )", "choosing": "( Max( RMSe,MUM ) / RCSe )", "obj1": 0.2211895910780669, "obj2": 0.6175983761170347}, {"determining": "( Max( Max( Min( DDR ,( ACS + ( RRS / FirstVNF_RAM ) ) ),ARS ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( Min( ( RCSe - ( MLU / CS ) ) ,Min( MUC ,MLU ) ) * ( DS + MUM ) )", "obj1": 0.7453531598513011, "obj2": 0.1045819271830397}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Const - ( FirstVNF_RAM + MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / ( DDR + MDR ) ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( RRSe ,( ( RMSe - ( ( RMSe * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( ( Max( MLU,MUC ) - MUM ) ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.10648289501533216}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_CPU ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( Max( RMSe,MUR ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.3736059479553903, "obj2": 0.43153386724082615}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( ( BR - FirstVNF_RAM ) - Const ) ) ) * MDR ) )", "choosing": "( Max( ( Max( ( RMSe + MUR ),( MUC / ( ( MUM + Min( MLU ,MUM ) ) - RRSe ) ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUC + MUR ) )", "obj1": 0.7509293680297398, "obj2": 0.09411617021175013}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "Min( Min( MRS ,( PN / ( Max( ( ARS / ( ( ACS * PN ) - MDR ) ),FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Min( RMSe ,Max( RMSe,( DS * CS ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,( ( CS * CS ) + MUM ) ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.36059479553903345, "obj2": 0.43929812870255847}, {"determining": "Min( ( Const / FirstVNF_RAM ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RRSe - ( ( RCSe / MUR ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7527881040892194, "obj2": 0.09286547962735893}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),( ( Max( BR,( BR / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( Max( MUC,MUR ) * RRSe ) - RRSe ) * MUC ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,MUC ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.20260223048327136, "obj2": 0.6343696460518349}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( RRS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( Min( CRS ,MDR ) ,( CRS * ( ACS * Const ) ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( Min( DS ,MUR ) - RRSe ) + MLU ) + CS ) ) * ( MUM + ( ( RRSe / MUC ) + MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5520446096654275, "obj2": 0.25049625429139477}], "33": [{"determining": "Min( Min( MRS ,( ( FirstVNF_RAM - DDR ) / ( ( ( ( Min( ACS ,ACS ) * BR ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( MLU,MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) ) - ( ( MUC + CS ) / ( Max( ( MUC / ( ( ( CS * CS ) + MUM ) / MUR ) ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( MRS - FirstVNF_Mem ) - ( ( ( FirstVNF_CPU / ( PN + Const ) ) + FirstVNF_CPU ) * ( Max( DDR,FirstVNF_Mem ) - BR ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RRSe - ( DS + RRSe ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( Max( ( PN + Const ),MRS ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / CS ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - MLU )", "obj1": 0.1171003717472119, "obj2": 0.756445604761199}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( ( ARS - ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,MDR ) ) / MDR ) ) / ( ( FirstVNF_RAM - ( ( Max( Min( DDR ,ACS ),( RRS + FirstVNF_RAM ) ) / ARS ) - MRS ) ) * MRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( ( Max( ( ( ( MUM / RRSe ) - MUM ) / MLU ),Max( CS,( ( MLU - MUC ) + Min( MLU ,MUR ) ) ) ) - CS ) / ( CS * RRSe ) ) ),( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * Min( DS ,( Min( CS ,Max( MUC,RCSe ) ) / ( CS / MUM ) ) ) ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4736882411150927}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Min( ACS ,PN ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - CRS ) ) ) ) ) * MDR ) ) * ( ( ACS / PN ) - Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( Max( ( DS / RCSe ),RMSe ) * RCSe ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * Max( ( ( RRSe * MUR ) * DS ),( MUR - MUM ) ) )", "obj1": 0.587360594795539, "obj2": 0.21027990228169685}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( MDR + RRS ) ,( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,ARS ) ) + FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( ( MUM / ( ( MUC + ( ( ( MLU - DS ) * ( MUM / DS ) ) - RRSe ) ) + ( RCSe - CS ) ) ) + MUM ) )", "obj1": 0.6059479553903345, "obj2": 0.19516664280023813}, {"determining": "Min( Min( PN ,( FirstVNF_RAM / ( ( ( PN / ( Min( DDR ,PN ) * MDR ) ) - FirstVNF_CPU ) * ( PN / Max( Min( DDR ,PN ),AMS ) ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( ( Max( CS,RMSe ) * RCSe ) / MUC ),( ( RMSe - CS ) * Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) ) - ( ( ( RMSe + Min( DS ,CS ) ) - Min( ( DS + MUM ) ,( ( RRSe - ( ( RCSe / MUR ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7211895910780669, "obj2": 0.12786284533893275}, {"determining": "Min( Min( DDR ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * ( MRS * Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_Mem,CRS ) ) ) ) ,( PN / AMS ) )", "choosing": "( ( MLU / Max( Min( MUR ,( Max( ( ( CS * CS ) + MUM ),DS ) * ( ( ( CS + RMSe ) / RCSe ) / MUM ) ) ),( ( MUC * ( ( Max( DS,MLU ) + ( MUM - MUC ) ) + MLU ) ) * Max( ( ( MUC * RCSe ) - DS ),RRSe ) ) ) ) - ( MUC + RMSe ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Min( PN ,Const ) + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_CPU / ( ARS - CRS ) ) ,FirstVNF_CPU ) - Max( Min( BR ,DDR ),PN ) ) ) ) )", "choosing": "( Max( RMSe,Min( DS ,MLU ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( CS + DS ) ) )", "obj1": 0.9423791821561338, "obj2": 0.02214992243134464}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Min( DDR ,MDR ) ) + FirstVNF_CPU ) ,Min( CRS ,MDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * ( RCSe / Min( MUM ,RCSe ) ) ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.37412678924062487}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "Min( Min( MRS ,( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) ) ,Const )", "choosing": "( ( MLU - Max( RMSe,DS ) ) - ( ( ( Min( ( ( ( RCSe + DS ) + ( RMSe / MUM ) ) / MUR ) ,Min( RRSe ,CS ) ) * RCSe ) - Min( ( ( MUR * ( ( MUC + RCSe ) / ( MUM - MUR ) ) ) + MUM ) ,( ( RMSe - CS ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6431226765799256, "obj2": 0.17722818663314766}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( CRS,( FirstVNF_RAM - RRS ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM_Server + Max( ACS,( ARS * MDR ) ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( ( ( MUM - DS ) + MLU ) + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ),( ( RMSe - CS ) * Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( RRSe,MUR ) * ( MLU - DS ) ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( ( ( RCSe / Max( MUR,MUM ) ) - RMSe ) ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.741635687732342, "obj2": 0.11973482916157582}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) * FirstVNF_CPU ) ) ) ,( PN / ( BR + Max( BR,Min( Const ,( FirstVNF_CPU - Max( Const,ACS ) ) ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( DS + MUM ) / ( ( RCSe + Max( RMSe,Max( Min( CS ,Max( MUM,RRSe ) ),DS ) ) ) * Min( MLU ,( ( MLU - MUC ) * MUM ) ) ) ) )", "obj1": 0.8884758364312267, "obj2": 0.03981448670130043}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.3104089219330855, "obj2": 0.5181744921071733}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,FirstVNF_RAM ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,MUC ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6691449814126395, "obj2": 0.14538955490371255}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( CRS / FirstVNF_Mem_Server ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( ( MUR / RRSe ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5433307241050296}, {"determining": "( ( ( Max( ( Min( AMS ,FirstVNF_CPU_Server ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) / Min( MRS ,( ( PN / Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ) - ( ARS * MDR ) ) ) ) - ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),( Max( ( ( Max( MUR,RMSe ) / ( ( MUR - MLU ) * Min( MLU ,MUM ) ) ) * Min( MUM ,CS ) ),MUC ) - MUM ) ) )", "obj1": 0.5650557620817844, "obj2": 0.23044329603809896}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + MUM ) ) )", "obj1": 0.9572490706319703, "obj2": 0.014887610882140804}, {"determining": "Min( ( FirstVNF_RAM_Server * Max( DDR,Min( CRS ,BR ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Min( ( ( CS * CS ) + RCSe ) ,RRSe ) - Max( ( MUM - Min( MUC ,MUM ) ),RRSe ) ) / Min( ( Min( Max( MLU,MUM ) ,RRSe ) * MUC ) ,MUM ) ) - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( MUC - MUM ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.004839465712923337}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( RCSe - ( ( ( DS - RMSe ) - DS ) / MUC ) ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.152356043855966}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( CRS * Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( MUM - ( DS + RRSe ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7602230483271375, "obj2": 0.09003989365458445}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / ( BR + Min( Min( ( ( CRS / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + MLU ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4661906062147041}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2955390334572491, "obj2": 0.5406951148096317}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( PN ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * ( DDR - PN ) ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( DS * MUR ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.42936802973977695, "obj2": 0.3806801943677784}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),AMS ) ) * ( ( MDR + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,( DS * RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) * ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Max( RMSe,( MUM * RMSe ) ) + ( ( ( Min( DS ,MUR ) + Max( RRSe,MUM ) ) + RCSe ) / ( MUR * MUR ) ) ) - DS )", "obj1": 0.08550185873605948, "obj2": 0.7895138625816386}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( DS / RMSe ) / DS ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.1348183539129594}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "( ( ( PN - PN ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( MDR - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( RCSe + MLU ) ) + ( RMSe - CS ) ),Min( RMSe ,RRSe ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.912639405204461, "obj2": 0.03842554100551762}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "( FirstVNF_CPU * Min( ( BR - FirstVNF_CPU_Server ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( ( MUC * ( DS - CS ) ) * ( ( MLU * ( MUM * MUR ) ) + MUM ) )", "obj1": 0.8866171003717472, "obj2": 0.0556717902549172}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( ( CRS - FirstVNF_CPU_Server ) - ( Min( CRS ,FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( DS,RRSe ) ) / CS ) ,MUM ) ) ) - Max( DS,( ( ( ( RCSe * RCSe ) * CS ) - MUC ) * MUM ) ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + CS ) ,( RMSe + MUC ) ) ) )", "obj1": 0.9721189591078067, "obj2": 0.010449863789518132}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / ( ( AMS + CRS ) * BR ) ) - ( Max( BR,Min( Const ,( ( AMS - FirstVNF_RAM ) - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MUR ,RCSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6988847583643123, "obj2": 0.13580911939031112}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * ( ACS * Const ) ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( MUC - DS ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5520446096654275, "obj2": 0.25049625429139477}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),( ( Max( BR,( BR / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( Max( MUC,MUR ) * RRSe ) - RRSe ) * MUC ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,MUC ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.20260223048327136, "obj2": 0.6343696460518349}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - Min( ( ( RRSe - RRSe ) / ( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ) - RRSe ) ) ,RMSe ) )", "obj1": 0.6486988847583643, "obj2": 0.17350823834670176}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS * MDR ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + ( RMSe - CS ) ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.8810408921933085, "obj2": 0.058090178511062254}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( RMSe + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( RMSe * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8504853120122445}, {"determining": "Min( ( Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,FirstVNF_Mem ) ) ) ) ) ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( ( MUC / ( RRSe - DS ) ) * MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / MUM ) ) ) ) + ( MLU / DS ) ) ) - ( RMSe * MUR ) )", "obj1": 0.05947955390334572, "obj2": 0.8497422122661098}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * ( PN - FirstVNF_CPU_Server ) ) ) ) ,( ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) * RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( Max( ( Max( MUM,Max( RRSe,MLU ) ) + RRSe ),MUR ) + Max( Min( RRSe ,CS ),MUM ) ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1419416221292814}, {"determining": "Min( Min( MRS ,( PN / ( Max( ( ARS / ( ( ACS * PN ) - MDR ) ),FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Min( RMSe ,Max( RMSe,( DS * CS ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,( ( CS * CS ) + MUM ) ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.36059479553903345, "obj2": 0.43929812870255847}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( Max( Max( Min( DDR ,( ACS + ( RRS / FirstVNF_RAM ) ) ),ARS ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( Min( ( RCSe - ( MLU / CS ) ) ,Min( MUC ,MLU ) ) * ( DS + MUM ) )", "obj1": 0.7453531598513011, "obj2": 0.1045819271830397}, {"determining": "( ( MDR + Max( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,( BR + ( Max( AMS,ACS ) + ARS ) ) ) )", "choosing": "( Max( RMSe,MUM ) / RCSe )", "obj1": 0.2211895910780669, "obj2": 0.6175983761170347}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_CPU ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( Max( RMSe,MUR ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.3736059479553903, "obj2": 0.43153386724082615}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Const - ( FirstVNF_RAM + MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / ( DDR + MDR ) ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( RRSe ,( ( RMSe - ( ( RMSe * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( ( Max( MLU,MUC ) - MUM ) ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7434944237918215, "obj2": 0.10648289501533216}, {"determining": "( ( PN / Min( MRS ,( ( PN / Max( FirstVNF_RAM,Max( RRS,( CRS + FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) ) ) ) - ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * Max( ( MUC / CS ),Min( Max( RRSe,MUC ) ,RRSe ) ) ) / Max( ( MUM + MUC ),( Max( MLU,MUC ) - MUM ) ) )", "obj1": 0.7509293680297398, "obj2": 0.09345174820998013}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / RRSe ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.3066914498141264, "obj2": 0.5242428372918905}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "Min( Min( ( ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( MUM / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.9702602230483272, "obj2": 0.013717029977387699}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * Min( CRS ,AMS ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( AMS / MDR ) - ( FirstVNF_RAM_Server + Max( ACS,FirstVNF_RAM_Server ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,( PN + ( ( PN / FirstVNF_RAM ) * MDR ) ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ),( ( RMSe - CS ) * Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - RRSe ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) ) ) - ( ( CS - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6877323420074349, "obj2": 0.141594093884597}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( FirstVNF_CPU_Server,MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( PN / AMS ) )", "choosing": "( ( Max( ( RMSe * CS ),( MUM - DS ) ) / ( ( MUC * CS ) * Max( ( ( Min( RRSe ,Max( MUR,RCSe ) ) * MLU ) + Max( ( MUM * MUC ),( MUR + MLU ) ) ),DS ) ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.9981412639405205, "obj2": 0.00048664237529495816}, {"determining": "( ( Min( Const ,FirstVNF_CPU ) + Min( DDR ,Max( Max( Min( ( FirstVNF_RAM_Server - ( MDR - MDR ) ) ,FirstVNF_RAM ),FirstVNF_RAM ),ARS ) ) ) * Min( Max( FirstVNF_RAM,Min( ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( ( MRS / ACS ) ,FirstVNF_CPU ),Max( ( ACS * FirstVNF_CPU_Server ),FirstVNF_Mem_Server ) ) ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( ( ( MUR - MUC ) + ( RRSe * RMSe ) ) + ( MUC / Min( RMSe ,RRSe ) ) ) + ( DS / Max( CS,RRSe ) ) ),Min( RMSe ,RRSe ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.9163568773234201, "obj2": 0.03679515138111108}], "34": [{"determining": "( Min( ( ( Max( FirstVNF_Mem,AMS ) - FirstVNF_RAM ) + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( Max( ( PN + Const ),MRS ) - FirstVNF_RAM ) ) ),AMS ) ) * Min( Max( FirstVNF_Mem,PN ) ,Const ) )", "choosing": "( Max( ( ( MUM / RCSe ) / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Min( MUR ,MUR ) ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,( ( FirstVNF_RAM - DDR ) / ( ( ( ( Min( ACS ,ACS ) * BR ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Max( DDR,( RRS - FirstVNF_RAM ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Max( RMSe,Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( MLU,MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) ) - ( ( MUC + CS ) / ( Max( ( MUC / ( ( ( CS * CS ) + MUM ) / MUR ) ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ( ARS * DDR ) * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( CS - Min( ( ( MLU + MUM ) * ( MUR * RCSe ) ) ,Min( ( RMSe * RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4620074086058276}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( Max( ( PN + Const ),MRS ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / CS ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - MLU )", "obj1": 0.1171003717472119, "obj2": 0.756445604761199}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Min( ACS ,PN ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - CRS ) ) ) ) ) * MDR ) ) * ( ( ACS / PN ) - Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( Max( ( DS / RCSe ),RMSe ) * RCSe ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * Max( ( ( RRSe * MUR ) * DS ),( MUR - MUM ) ) )", "obj1": 0.587360594795539, "obj2": 0.21027990228169685}, {"determining": "Min( Min( PN ,( FirstVNF_RAM / ( ( ( PN / ( Min( DDR ,PN ) * MDR ) ) - FirstVNF_CPU ) * ( PN / Max( Min( DDR ,PN ),AMS ) ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( ( Max( CS,RMSe ) * RCSe ) / MUC ),( ( RMSe - CS ) * Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) ) - ( ( ( RMSe + Min( DS ,CS ) ) - Min( ( DS + MUM ) ,( ( RRSe - ( ( RCSe / MUR ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7211895910780669, "obj2": 0.12786284533893275}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * FirstVNF_Mem ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( RMSe - ( MLU + Max( RMSe,Max( RCSe,( Min( RRSe ,CS ) * CS ) ) ) ) ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.6431226765799256, "obj2": 0.17117483422957955}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( MDR + RRS ) ,( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,ARS ) ) + FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( ( MUM / ( ( MUC + ( ( ( MLU - DS ) * ( MUM / DS ) ) - RRSe ) ) + ( RCSe - CS ) ) ) + MUM ) )", "obj1": 0.6059479553903345, "obj2": 0.19516664280023813}, {"determining": "( ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( Min( FirstVNF_CPU ,Min( ARS ,FirstVNF_Mem ) ),ARS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / ( ( ACS * MRS ) * RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( RRSe + ( ( MUC + ( Min( ( RCSe * RMSe ) ,RCSe ) - MLU ) ) * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) ) - ( Max( MUR,CS ) + RRSe ) )", "obj1": 0.7360594795539034, "obj2": 0.10689858643678475}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Min( PN ,Const ) + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_CPU / ( ARS - CRS ) ) ,FirstVNF_CPU ) - Max( Min( BR ,DDR ),PN ) ) ) ) )", "choosing": "( Max( RMSe,Min( DS ,MLU ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( CS + DS ) ) )", "obj1": 0.9423791821561338, "obj2": 0.02214992243134464}, {"determining": "Min( Min( DDR ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * ( MRS * Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_Mem,CRS ) ) ) ) ,( PN / AMS ) )", "choosing": "( ( MLU / Max( Min( MUR ,( Max( ( ( CS * CS ) + MUM ),DS ) * ( ( ( CS + RMSe ) / RCSe ) / MUM ) ) ),( ( MUC * ( ( Max( DS,MLU ) + ( MUM - MUC ) ) + MLU ) ) * Max( ( ( MUC * RCSe ) - DS ),RRSe ) ) ) ) - ( MUC + RMSe ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Min( ACS ,PN ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - CRS ) ) ) ) ) * MDR ) ) * ( ( ACS / PN ) - Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( Max( ( DS / RCSe ),RMSe ) * RCSe ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * Max( ( ( RRSe * MUR ) * DS ),( MUR - MUM ) ) )", "obj1": 0.620817843866171, "obj2": 0.18781010689655153}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( ( ( Max( ( Min( AMS ,FirstVNF_CPU_Server ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) / Min( MRS ,( ( PN / Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ) - ( ARS * MDR ) ) ) ) - ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),( Max( ( ( Max( MUR,RMSe ) / ( ( MUR - MLU ) * Min( MLU ,MUM ) ) ) * Min( MUM ,CS ) ),MUC ) - MUM ) ) )", "obj1": 0.5650557620817844, "obj2": 0.23044329603809896}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.44981412639405205, "obj2": 0.37173566298103267}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.3104089219330855, "obj2": 0.5181744921071733}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * ( ACS * Const ) ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( MUC - DS ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5520446096654275, "obj2": 0.25049625429139477}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( CRS / FirstVNF_Mem_Server ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( ( MUR / RRSe ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5433307241050296}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( RCSe - ( ( ( DS - RMSe ) - DS ) / MUC ) ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.152356043855966}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) * ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Max( RMSe,( MUM * RMSe ) ) + ( ( ( Min( DS ,MUR ) + Max( RRSe,MUM ) ) + RCSe ) / ( MUR * MUR ) ) ) - DS )", "obj1": 0.08550185873605948, "obj2": 0.7895138625816386}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2955390334572491, "obj2": 0.5406951148096317}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_CPU ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( Max( RMSe,MUR ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.3736059479553903, "obj2": 0.43153386724082615}, {"determining": "Min( Min( MRS ,( PN / ( Max( ( ARS / ( ( ACS * PN ) - MDR ) ),FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Min( RMSe ,Max( RMSe,( DS * CS ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,( ( CS * CS ) + MUM ) ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.36059479553903345, "obj2": 0.43929812870255847}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( PN ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * ( DDR - PN ) ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( DS * MUR ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.42936802973977695, "obj2": 0.3806801943677784}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) * FirstVNF_CPU ) ) ) ,( PN / ( BR + Max( BR,Min( Const ,( FirstVNF_CPU - Max( Const,ACS ) ) ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( DS + MUM ) / ( ( RCSe + Max( RMSe,Max( Min( CS ,Max( MUM,RRSe ) ),DS ) ) ) * Min( MLU ,( ( MLU - MUC ) * MUM ) ) ) ) )", "obj1": 0.8884758364312267, "obj2": 0.03981448670130043}, {"determining": "Min( ( FirstVNF_RAM_Server * Max( DDR,Min( CRS ,BR ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Min( ( ( CS * CS ) + RCSe ) ,RRSe ) - Max( ( MUM - Min( MUC ,MUM ) ),RRSe ) ) / Min( ( Min( Max( MLU,MUM ) ,RRSe ) * MUC ) ,MUM ) ) - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( MUC - MUM ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.004839465712923337}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Min( PN ,Const ) + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_CPU / ( ARS - CRS ) ) ,FirstVNF_CPU ) - Max( Min( BR ,DDR ),PN ) ) ) ) )", "choosing": "( Max( RMSe,Min( DS ,MLU ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( CS + DS ) ) )", "obj1": 0.9144981412639405, "obj2": 0.03534055486464103}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( DS / RMSe ) / DS ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.1348183539129594}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( ( PN / Min( MRS ,Max( FirstVNF_Mem_Server,MRS ) ) ) - ( ( ( ARS * ( Min( MDR ,FirstVNF_RAM ) - CRS ) ) * ( RRS + MDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * Max( ( ( MUC - ( Min( Min( MUR ,MUC ) ,MLU ) * ( MUR / ( CS / RCSe ) ) ) ) * MUC ),Min( MLU ,RRSe ) ) ) / ( DS + MUM ) )", "obj1": 0.741635687732342, "obj2": 0.09912981229360401}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "( ( PN / Min( MRS ,( ( PN / Max( FirstVNF_RAM,Max( RRS,( CRS + FirstVNF_RAM_Server ) ) ) ) - ( ARS * MDR ) ) ) ) - ( ( FirstVNF_CPU_Server * ( ACS - FirstVNF_CPU ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * Max( ( MUC / CS ),Min( Max( RRSe,MUC ) ,RRSe ) ) ) / Max( ( MUM + MUC ),( Max( MLU,MUC ) - MUM ) ) )", "obj1": 0.7509293680297398, "obj2": 0.09345174820998013}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "( FirstVNF_CPU * Min( ( BR - FirstVNF_CPU_Server ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( ( MUC * ( DS - CS ) ) * ( ( MLU * ( MUM * MUR ) ) + MUM ) )", "obj1": 0.8866171003717472, "obj2": 0.0556717902549172}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / ( ( AMS + CRS ) * BR ) ) - ( Max( BR,Min( Const ,( ( AMS - FirstVNF_RAM ) - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MUR ,RCSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6988847583643123, "obj2": 0.13580911939031112}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),( ( Max( BR,( BR / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( Max( MUC,MUR ) * RRSe ) - RRSe ) * MUC ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,MUC ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.20260223048327136, "obj2": 0.6343696460518349}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS * MDR ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + ( RMSe - CS ) ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.8810408921933085, "obj2": 0.058090178511062254}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( MDR + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( RMSe,( DS * ( Max( Max( MUR,RMSe ),( CS / RRSe ) ) / RCSe ) ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( ( MDR + Max( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,( BR + ( Max( AMS,ACS ) + ARS ) ) ) )", "choosing": "( Max( RMSe,MUM ) / RCSe )", "obj1": 0.2211895910780669, "obj2": 0.6175983761170347}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - CRS ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / Max( CS,MUM ) )", "obj1": 0.9758364312267658, "obj2": 0.010086328760122179}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / RRSe ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.3066914498141264, "obj2": 0.5242428372918905}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - ARS ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + MLU ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ) ,RMSe ) )", "obj1": 0.671003717472119, "obj2": 0.1443576666065576}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,FirstVNF_RAM ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,MUC ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6691449814126395, "obj2": 0.14503746782663418}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * ( PN - FirstVNF_CPU_Server ) ) ) ) ,( ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) * RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( Max( ( Max( MUM,Max( RRSe,MLU ) ) + RRSe ),MUR ) + Max( Min( RRSe ,CS ),MUM ) ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1419416221292814}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * Min( CRS ,AMS ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( AMS / MDR ) - ( FirstVNF_RAM_Server + Max( ACS,FirstVNF_RAM_Server ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,( PN + ( ( PN / FirstVNF_RAM ) * MDR ) ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ),( ( RMSe - CS ) * Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - RRSe ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) ) ) - ( ( CS - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6877323420074349, "obj2": 0.141594093884597}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( CRS * Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( MUM - ( DS + RRSe ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7602230483271375, "obj2": 0.09003989365458445}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Min( DDR ,MDR ) ) + FirstVNF_CPU ) ,Min( CRS ,MDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * ( RCSe / Min( MUM ,RCSe ) ) ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.37412678924062487}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) ) ,Min( MRS ,( FirstVNF_RAM / ( MDR + ( MRS - DDR ) ) ) ) )", "choosing": "( ( CS - CS ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + MUM ) ) )", "obj1": 0.9572490706319703, "obj2": 0.014887610882140804}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Min( Min( Max( BR,BR ) ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) ) ) ) ,( Max( Min( FirstVNF_CPU ,( RRS + FirstVNF_RAM ) ),( Const - ACS ) ) * Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( Min( ( MLU - MUC ) ,( DS * Min( MUM ,RRSe ) ) ),( ( ( CS / MUR ) - CS ) * RCSe ) ) - MUR )", "obj1": 0.570631970260223, "obj2": 0.22570371185751176}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + MUM ) ) )", "obj1": 0.9572490706319703, "obj2": 0.014887610882140804}], "35": [{"determining": "( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC + DS ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( FirstVNF_Mem,AMS ) - FirstVNF_RAM ) + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( Max( ( PN + Const ),MRS ) - FirstVNF_RAM ) ) ),AMS ) ) * Min( Max( FirstVNF_Mem,PN ) ,Const ) )", "choosing": "( Max( ( ( MUM / RCSe ) / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Min( MUR ,MUR ) ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ( ARS * DDR ) * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( CS - Min( ( ( MLU + MUM ) * ( MUR * RCSe ) ) ,Min( ( RMSe * RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4620074086058276}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( Max( ( PN + Const ),MRS ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / CS ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - MLU )", "obj1": 0.1171003717472119, "obj2": 0.756445604761199}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "Min( Min( PN ,( FirstVNF_RAM / ( ( ( PN / ( Min( DDR ,PN ) * MDR ) ) - FirstVNF_CPU ) * ( PN / Max( Min( DDR ,PN ),AMS ) ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( ( Max( CS,RMSe ) * RCSe ) / MUC ),( ( RMSe - CS ) * Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) ) - ( ( ( RMSe + Min( DS ,CS ) ) - Min( ( DS + MUM ) ,( ( RRSe - ( ( RCSe / MUR ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7211895910780669, "obj2": 0.12786284533893275}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * FirstVNF_Mem ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( RMSe - ( MLU + Max( RMSe,Max( RCSe,( Min( RRSe ,CS ) * CS ) ) ) ) ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.6431226765799256, "obj2": 0.17117483422957955}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( Min( FirstVNF_CPU ,Min( ARS ,FirstVNF_Mem ) ),ARS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / ( ( ACS * MRS ) * RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( RRSe + ( ( MUC + ( Min( ( RCSe * RMSe ) ,RCSe ) - MLU ) ) * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) ) - ( Max( MUR,CS ) + RRSe ) )", "obj1": 0.7360594795539034, "obj2": 0.10689858643678475}, {"determining": "Min( Min( DDR ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * ( MRS * Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_Mem,CRS ) ) ) ) ,( PN / AMS ) )", "choosing": "( ( MLU / Max( Min( MUR ,( Max( ( ( CS * CS ) + MUM ),DS ) * ( ( ( CS + RMSe ) / RCSe ) / MUM ) ) ),( ( MUC * ( ( Max( DS,MLU ) + ( MUM - MUC ) ) + MLU ) ) * Max( ( ( MUC * RCSe ) - DS ),RRSe ) ) ) ) - ( MUC + RMSe ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Min( PN ,Const ) + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_CPU / ( ARS - CRS ) ) ,FirstVNF_CPU ) - Max( Min( BR ,DDR ),PN ) ) ) ) )", "choosing": "( Max( RMSe,Min( DS ,MLU ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( CS + DS ) ) )", "obj1": 0.9423791821561338, "obj2": 0.02214992243134464}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Min( ACS ,PN ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - CRS ) ) ) ) ) * MDR ) ) * ( ( ACS / PN ) - Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( Max( ( DS / RCSe ),RMSe ) * RCSe ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * Max( ( ( RRSe * MUR ) * DS ),( MUR - MUM ) ) )", "obj1": 0.620817843866171, "obj2": 0.18781010689655153}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( CRS / FirstVNF_Mem_Server ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( ( MUR / RRSe ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5433307241050296}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.44981412639405205, "obj2": 0.37173566298103267}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.3104089219330855, "obj2": 0.5181744921071733}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( MDR + RRS ) ,( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,ARS ) ) + FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( ( MUM / ( ( MUC + ( ( ( MLU - DS ) * ( MUM / DS ) ) - RRSe ) ) + ( RCSe - CS ) ) ) + MUM ) )", "obj1": 0.6059479553903345, "obj2": 0.19516664280023813}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( AMS / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( DDR,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / CS ),RMSe ) * ( ( MUM / MUM ) + MUM ) )", "obj1": 0.587360594795539, "obj2": 0.2102115365008293}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ACS - Min( ACS ,MDR ) ),( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) * ( ( PN / ( ARS * MDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( Max( RMSe,( MUM * RMSe ) ) + ( ( ( Min( DS ,MUR ) + Max( RRSe,MUM ) ) + RCSe ) / ( MUR * MUR ) ) ) - DS )", "obj1": 0.08550185873605948, "obj2": 0.7895138625816386}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ARS ) ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe )", "obj1": 0.2936802973977695, "obj2": 0.5339605182223253}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( ( ARS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * Max( MUC,MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.5947955390334573, "obj2": 0.206970309125637}, {"determining": "( ( ( Max( ( Min( AMS ,FirstVNF_CPU_Server ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) / Min( MRS ,( ( PN / Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ) - ( ARS * MDR ) ) ) ) - ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),( Max( ( ( Max( MUR,RMSe ) / ( ( MUR - MLU ) * Min( MLU ,MUM ) ) ) * Min( Max( RMSe,RMSe ) ,CS ) ),MUC ) - MUM ) ) )", "obj1": 0.5631970260223048, "obj2": 0.23120489402745462}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_CPU ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( Max( RMSe,MUR ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.3736059479553903, "obj2": 0.43153386724082615}, {"determining": "Min( Min( MRS ,( PN / ( Max( ( ARS / ( ( ACS * PN ) - MDR ) ),FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Min( RMSe ,Max( RMSe,( DS * CS ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,( ( CS * CS ) + MUM ) ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.36059479553903345, "obj2": 0.43929812870255847}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( PN ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * ( DDR - PN ) ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( DS * MUR ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.42936802973977695, "obj2": 0.3806801943677784}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) * FirstVNF_CPU ) ) ) ,( PN / ( BR + Max( BR,Min( Const ,( FirstVNF_CPU - Max( Const,ACS ) ) ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( DS + MUM ) / ( ( RCSe + Max( RMSe,Max( Min( CS ,Max( MUM,RRSe ) ),DS ) ) ) * Min( MLU ,( ( MLU - MUC ) * MUM ) ) ) ) )", "obj1": 0.8884758364312267, "obj2": 0.03981448670130043}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - ( ( MUC * ( MLU / Max( CS,RRSe ) ) ) + CS ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.9144981412639405, "obj2": 0.027056028497736164}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( DS / RMSe ) / DS ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.1348183539129594}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "( FirstVNF_CPU * Min( ( BR - FirstVNF_CPU_Server ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( ( MUC * ( DS - CS ) ) * ( ( MLU * ( MUM * MUR ) ) + MUM ) )", "obj1": 0.8866171003717472, "obj2": 0.0556717902549172}, {"determining": "( ( PN / Min( MRS ,Max( FirstVNF_Mem_Server,MRS ) ) ) - ( ( ( ARS * ( Min( MDR ,FirstVNF_RAM ) - CRS ) ) * ( RRS + MDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * Max( ( ( MUC - ( Min( Min( MUR ,MUC ) ,MLU ) * ( MUR / ( CS / RCSe ) ) ) ) * MUC ),Min( MLU ,RRSe ) ) ) / ( DS + MUM ) )", "obj1": 0.741635687732342, "obj2": 0.09912981229360401}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),( ( Max( BR,( BR / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( Max( MUC,MUR ) * RRSe ) - RRSe ) * MUC ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,MUC ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.20260223048327136, "obj2": 0.6343696460518349}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "Min( ( FirstVNF_RAM_Server * Max( DDR,Min( CRS ,BR ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( ( ( Min( ( ( CS * CS ) + RCSe ) ,RRSe ) - Max( ( MUM - Min( MUC ,MUM ) ),RRSe ) ) / Min( ( Min( Max( MLU,MUM ) ,RRSe ) * MUC ) ,MUM ) ) - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( MUC - MUM ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.004839465712923337}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * ( ACS * Const ) ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( MUC - DS ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5520446096654275, "obj2": 0.25049625429139477}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS * MDR ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + ( RMSe - CS ) ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.8810408921933085, "obj2": 0.058090178511062254}, {"determining": "Min( ( FirstVNF_CPU_Server - ( MDR / FirstVNF_Mem ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( MUM - ( MLU + RRSe ) ) / RCSe ) ) ) ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + Max( DS,( CS - DS ) ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.014667721950597984}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Min( ( FirstVNF_Mem_Server + Min( CRS ,DDR ) ) ,Max( ( ( ( ( ( BR + MRS ) - ( MRS - DDR ) ) + ( FirstVNF_CPU / ( MDR - AMS ) ) ) - MDR ) - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( PN + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( ( CS + RRSe ) - Min( ( RCSe * MUR ) ,CS ) ) ,Min( Min( ( CS + ( RMSe * CS ) ) ,CS ) ,( MUC * ( ( MUM / MUM ) * ( MUR * RCSe ) ) ) ) ),Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( ( MDR + Max( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,( BR + ( Max( AMS,ACS ) + ARS ) ) ) )", "choosing": "( Max( RMSe,MUM ) / RCSe )", "obj1": 0.2211895910780669, "obj2": 0.6175983761170347}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - CRS ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / Max( CS,MUM ) )", "obj1": 0.9758364312267658, "obj2": 0.010086328760122179}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / RRSe ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.3066914498141264, "obj2": 0.5242428372918905}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - ARS ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + MLU ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ) ,RMSe ) )", "obj1": 0.671003717472119, "obj2": 0.1443576666065576}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( RCSe - ( ( ( DS - RMSe ) - DS ) / MUC ) ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.152356043855966}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * ( PN - FirstVNF_CPU_Server ) ) ) ) ,( ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - CS ) * RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( Max( ( Max( MUM,Max( RRSe,MLU ) ) + RRSe ),MUR ) + Max( Min( RRSe ,CS ),MUM ) ) ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1419416221292814}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( CRS * Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( MUM - ( DS + RRSe ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7602230483271375, "obj2": 0.09003989365458445}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Min( DDR ,MDR ) ) + FirstVNF_CPU ) ,Min( CRS ,MDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * ( RCSe / Min( MUM ,RCSe ) ) ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.37412678924062487}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.6561338289962825, "obj2": 0.16044891255469382}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_Mem - ARS ) ) ) ) * FirstVNF_CPU ) ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) - ARS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( RMSe,Max( MUM,MUC ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + ( RRSe - MUM ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0025115257691799746}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / ( ( AMS + CRS ) * BR ) ) - ( Max( BR,Min( Const ,( ( AMS - FirstVNF_RAM ) - RRS ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MUR ,RCSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.6988847583643123, "obj2": 0.13580911939031112}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,MUC ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ) ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6895910780669146, "obj2": 0.13623209163208655}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15057405982916736}], "36": [{"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC + ( MUM + ( MUM + RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC + DS ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( Max( ( PN + Const ),MRS ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / CS ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - MLU )", "obj1": 0.1171003717472119, "obj2": 0.756445604761199}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ( ARS * DDR ) * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( CS - Min( ( ( MLU + MUM ) * ( MUR * RCSe ) ) ,Min( ( RMSe * RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4620074086058276}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,MLU ) - MUR ) + DS ) / ( RRSe / MLU ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.32899628252788105, "obj2": 0.4981266222728501}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * FirstVNF_Mem ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( RMSe - ( MLU + Max( RMSe,Max( RCSe,( Min( RRSe ,CS ) * CS ) ) ) ) ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.6431226765799256, "obj2": 0.17117483422957955}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Min( PN ,Const ) + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_CPU / ( ARS - CRS ) ) ,FirstVNF_CPU ) - Max( Min( BR ,DDR ),PN ) ) ) ) )", "choosing": "( Max( RMSe,Min( DS ,MLU ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( CS + DS ) ) )", "obj1": 0.9423791821561338, "obj2": 0.02214992243134464}, {"determining": "( ( ( Max( ( Min( AMS ,FirstVNF_CPU_Server ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) / Min( MRS ,( ( PN / Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ) - ( ARS * MDR ) ) ) ) - ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),( Max( ( ( Max( MUR,RMSe ) / ( ( MUR - MLU ) * Min( MLU ,MUM ) ) ) * Min( Max( RMSe,RMSe ) ,CS ) ),MUC ) - MUM ) ) )", "obj1": 0.5631970260223048, "obj2": 0.23120489402745462}, {"determining": "( ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( Min( FirstVNF_CPU ,Min( ARS ,FirstVNF_Mem ) ),ARS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / ( ( ACS * MRS ) * RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( RRSe + ( ( MUC + ( Min( ( RCSe * RMSe ) ,RCSe ) - MLU ) ) * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) ) - ( Max( MUR,CS ) + RRSe ) )", "obj1": 0.7360594795539034, "obj2": 0.10689858643678475}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "Min( ( FirstVNF_CPU_Server - ( MDR / FirstVNF_Mem ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( MUM - ( MLU + RRSe ) ) / RCSe ) ) ) ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + Max( DS,( CS - DS ) ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.014667721950597984}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Min( ACS ,PN ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - CRS ) ) ) ) ) * MDR ) ) * ( ( ACS / PN ) - Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( Max( ( DS / RCSe ),RMSe ) * RCSe ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * Max( ( ( RRSe * MUR ) * DS ),( MUR - MUM ) ) )", "obj1": 0.620817843866171, "obj2": 0.18781010689655153}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Min( PN ,( FirstVNF_RAM / ( ( ( PN / ( Min( DDR ,PN ) * MDR ) ) - FirstVNF_CPU ) * ( PN / Max( Min( DDR ,PN ),AMS ) ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( ( Max( CS,RMSe ) * RCSe ) / MUC ),( ( RMSe - CS ) * Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) ) - ( ( ( RMSe + Min( DS ,CS ) ) - Min( ( DS + MUM ) ,( ( RRSe - ( ( RCSe / MUR ) + MUM ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7211895910780669, "obj2": 0.12786284533893275}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( CRS / FirstVNF_Mem_Server ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( ( MUR / RRSe ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5433307241050296}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "( Min( MRS ,( ( PN / Max( FirstVNF_RAM,Const ) ) - ( ARS * MDR ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - ( PN - FirstVNF_Mem ) ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * ( RMSe + ( ( RRSe / RRSe ) / CS ) ) ) ) / Max( CS,MUM ) )", "obj1": 0.41263940520446096, "obj2": 0.4186211530315322}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.44981412639405205, "obj2": 0.37173566298103267}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( MDR + RRS ) ,( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,ARS ) ) + FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( ( MUM / ( ( MUC + ( ( ( MLU - DS ) * ( MUM / DS ) ) - RRSe ) ) + ( RCSe - CS ) ) ) + MUM ) )", "obj1": 0.6059479553903345, "obj2": 0.19516664280023813}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( AMS / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( DDR,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / CS ),RMSe ) * ( ( MUM / MUM ) + MUM ) )", "obj1": 0.587360594795539, "obj2": 0.2102115365008293}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * ( ACS * Const ) ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( MUC - DS ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5520446096654275, "obj2": 0.25049625429139477}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ARS ) ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe )", "obj1": 0.2936802973977695, "obj2": 0.5339605182223253}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( ( ARS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * Max( MUC,MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.5947955390334573, "obj2": 0.206970309125637}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( PN * CRS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,DDR ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( Max( ( Max( Min( ( ( CS * MUR ) - RCSe ) ,( MUC / MUR ) ),MUC ) + Min( Max( MUC,RMSe ) ,( MLU + ( RCSe * ( MUR * MUC ) ) ) ) ),( MUR * MUM ) ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.42936802973977695, "obj2": 0.38034925623280397}, {"determining": "( Min( ( FirstVNF_Mem_Server + Min( CRS ,DDR ) ) ,Max( ( ( ( ( ( BR + MRS ) - ( MRS - DDR ) ) + ( FirstVNF_CPU / ( MDR - AMS ) ) ) - MDR ) - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( PN + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( ( CS + RRSe ) - Min( ( RCSe * MUR ) ,CS ) ) ,Min( Min( ( CS + ( RMSe * CS ) ) ,CS ) ,( MUC * ( ( MUM / MUM ) * ( MUR * RCSe ) ) ) ) ),Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) * FirstVNF_CPU ) ) ) ,( PN / ( BR + Max( BR,Min( Const ,( FirstVNF_CPU - Max( Const,ACS ) ) ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( DS + MUM ) / ( ( RCSe + Max( RMSe,Max( Min( CS ,Max( MUM,RRSe ) ),DS ) ) ) * Min( MLU ,( ( MLU - MUC ) * MUM ) ) ) ) )", "obj1": 0.8884758364312267, "obj2": 0.03981448670130043}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,MUC ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ) ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6840148698884758, "obj2": 0.1358587644822}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( ( PN / Min( MRS ,Max( FirstVNF_Mem_Server,MRS ) ) ) - ( ( ( ARS * ( Min( MDR ,FirstVNF_RAM ) - CRS ) ) * ( RRS + MDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * Max( ( ( MUC - ( Min( Min( MUR ,MUC ) ,MLU ) * ( MUR / ( CS / RCSe ) ) ) ) * MUC ),Min( MLU ,RRSe ) ) ) / ( DS + MUM ) )", "obj1": 0.741635687732342, "obj2": 0.09912981229360401}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - ( ( MUC * ( MLU / Max( CS,RRSe ) ) ) + CS ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.9144981412639405, "obj2": 0.027056028497736164}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( ( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) * MDR ) ) * Min( ( PN / FirstVNF_Mem ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( ( DS / RMSe ) / DS ) ) / RCSe ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.7063197026022305, "obj2": 0.1348183539129594}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - CRS ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / Max( CS,MUM ) )", "obj1": 0.9758364312267658, "obj2": 0.010086328760122179}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "Min( Min( MRS ,( PN / ( Max( ( ARS / ( ( ACS * PN ) - MDR ) ),FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Min( RMSe ,Max( RMSe,( DS * CS ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,( ( CS * CS ) + MUM ) ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.36059479553903345, "obj2": 0.43929812870255847}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,Max( DDR,ARS ) ) ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( DS - MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + ( Max( Max( MUC,( ( ( RMSe / RMSe ) * MLU ) + RRSe ) ),( CS + MUR ) ) / RCSe ) ) )", "obj1": 0.7527881040892194, "obj2": 0.09303149997772653}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),( ( Max( BR,( BR / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( Max( MUC,MUR ) * RRSe ) - RRSe ) * MUC ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,MUC ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.20260223048327136, "obj2": 0.6343696460518349}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.3104089219330855, "obj2": 0.5181744921071733}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),Min( Const ,MDR ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7885918579018925}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,ARS ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,MUC ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) ) ,RMSe ) - MUM ) * Max( RCSe,DS ) )", "obj1": 0.6933085501858736, "obj2": 0.1351811537396212}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( FirstVNF_RAM_Server,ARS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( ARS * MDR ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( RRSe + ( RRSe - ( ( RCSe / MUR ) + MUM ) ) ) - DS )", "obj1": 0.7193308550185874, "obj2": 0.13185584762949557}, {"determining": "( FirstVNF_CPU * Min( ( BR - FirstVNF_CPU_Server ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( ( MUC * ( DS - CS ) ) * ( ( MLU * ( MUM * MUR ) ) + MUM ) )", "obj1": 0.8866171003717472, "obj2": 0.0556717902549172}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Max( MUM,MUC ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.37174721189591076, "obj2": 0.4352032710082044}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS * MDR ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + ( RMSe - CS ) ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.8810408921933085, "obj2": 0.058090178511062254}, {"determining": "( ( MDR + Max( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,( BR + ( Max( AMS,ACS ) + ARS ) ) ) )", "choosing": "( Max( RMSe,MUM ) / RCSe )", "obj1": 0.2211895910780669, "obj2": 0.6175983761170347}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / RRSe ) ,MLU ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.3066914498141264, "obj2": 0.5242428372918905}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( RCSe - ( ( ( DS - RMSe ) - DS ) / MUC ) ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.152356043855966}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15057405982916736}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - ARS ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RMSe,( Min( MLU ,RCSe ) * Max( MUR,RCSe ) ) ) - Min( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ) ,RMSe ) )", "obj1": 0.671003717472119, "obj2": 0.1443576666065576}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Min( DDR ,MDR ) ) + FirstVNF_CPU ) ,Min( CRS ,MDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * ( RCSe / Min( MUM ,RCSe ) ) ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.37412678924062487}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( MLU / RMSe ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.6561338289962825, "obj2": 0.16044891255469382}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_Mem - ARS ) ) ) ) * FirstVNF_CPU ) ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) - ARS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( RMSe,Max( MUM,MUC ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + ( RRSe - MUM ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0025115257691799746}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}], "37": [{"determining": "( Max( DDR,( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / RRS ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RCSe ) / DS ) ) ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + MLU ) ) ) ) - RMSe ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC + ( MUM + ( MUM + RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( Max( ( PN + Const ),MRS ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / CS ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - MLU )", "obj1": 0.1171003717472119, "obj2": 0.756445604761199}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( FirstVNF_RAM_Server * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - ( BR * Const ) ) ) ) )", "choosing": "( ( Min( ( DS + ( Min( MUM ,RCSe ) - ( CS + MUM ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7100371747211895, "obj2": 0.12061204113956969}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,MLU ) - MUR ) + DS ) / ( RRSe / MLU ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.32899628252788105, "obj2": 0.4981266222728501}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / Min( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) ,( DS * Min( MUM ,RRSe ) ) ) ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.4644021469628841}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * FirstVNF_Mem ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( RMSe - ( MLU + Max( RMSe,Max( RCSe,( Min( RRSe ,CS ) * CS ) ) ) ) ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.6431226765799256, "obj2": 0.17117483422957955}, {"determining": "( ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( Min( FirstVNF_CPU ,Min( ARS ,FirstVNF_Mem ) ),ARS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / ( ( ACS * MRS ) * RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( RRSe + ( ( MUC + ( Min( ( RCSe * RMSe ) ,RCSe ) - MLU ) ) * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) ) - ( Max( MUR,CS ) + RRSe ) )", "obj1": 0.7360594795539034, "obj2": 0.10689858643678475}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Min( PN ,Const ) + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_CPU / ( ARS - CRS ) ) ,FirstVNF_CPU ) - Max( Min( BR ,DDR ),PN ) ) ) ) )", "choosing": "( Max( RMSe,Min( DS ,MLU ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( CS + DS ) ) )", "obj1": 0.9423791821561338, "obj2": 0.02214992243134464}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "Min( ( FirstVNF_CPU_Server - ( MDR / FirstVNF_Mem ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( MUM - ( MLU + RRSe ) ) / RCSe ) ) ) ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + Max( DS,( CS - DS ) ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.014667721950597984}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Min( ACS ,PN ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - CRS ) ) ) ) ) * MDR ) ) * ( ( ACS / PN ) - Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( Max( ( DS / RCSe ),RMSe ) * RCSe ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * Max( ( ( RRSe * MUR ) * DS ),( MUR - MUM ) ) )", "obj1": 0.620817843866171, "obj2": 0.18781010689655153}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( Max( MLU,MUC ) - MUM ) )", "obj1": 0.5631970260223048, "obj2": 0.23075213383858822}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( CRS / FirstVNF_Mem_Server ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( ( MUR / RRSe ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5433307241050296}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1335658809452099}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "( Min( MRS ,( ( PN / Max( FirstVNF_RAM,Const ) ) - ( ARS * MDR ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - ( PN - FirstVNF_Mem ) ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * ( RMSe + ( ( RRSe / RRSe ) / CS ) ) ) ) / Max( CS,MUM ) )", "obj1": 0.41263940520446096, "obj2": 0.4186211530315322}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.44981412639405205, "obj2": 0.37173566298103267}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( MDR + RRS ) ,( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,ARS ) ) + FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( ( MUM / ( ( MUC + ( ( ( MLU - DS ) * ( MUM / DS ) ) - RRSe ) ) + ( RCSe - CS ) ) ) + MUM ) )", "obj1": 0.6059479553903345, "obj2": 0.19516664280023813}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( AMS / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( DDR,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / CS ),RMSe ) * ( ( MUM / MUM ) + MUM ) )", "obj1": 0.587360594795539, "obj2": 0.2102115365008293}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ARS ) ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe )", "obj1": 0.2936802973977695, "obj2": 0.5339605182223253}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( ( ARS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * Max( MUC,MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.5947955390334573, "obj2": 0.206970309125637}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - ARS ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RMSe,( Min( MLU ,RCSe ) * Max( MUR,RCSe ) ) ) - Min( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ) ,RMSe ) )", "obj1": 0.671003717472119, "obj2": 0.1443576666065576}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( BR - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Max( MUM,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.36988847583643125, "obj2": 0.43518273339958646}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.3104089219330855, "obj2": 0.5181744921071733}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( Min( ( FirstVNF_Mem_Server + Min( CRS ,DDR ) ) ,Max( ( ( ( ( ( BR + MRS ) - ( MRS - DDR ) ) + ( FirstVNF_CPU / ( MDR - AMS ) ) ) - MDR ) - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( PN + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( ( CS + RRSe ) - Min( ( RCSe * MUR ) ,CS ) ) ,Min( Min( ( CS + ( RMSe * CS ) ) ,CS ) ,( MUC * ( ( MUM / MUM ) * ( MUR * RCSe ) ) ) ) ),Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) * FirstVNF_CPU ) ) ) ,( PN / ( BR + Max( BR,Min( Const ,( FirstVNF_CPU - Max( Const,ACS ) ) ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( DS + MUM ) / ( ( RCSe + Max( RMSe,Max( Min( CS ,Max( MUM,RRSe ) ),DS ) ) ) * Min( MLU ,( ( MLU - MUC ) * MUM ) ) ) ) )", "obj1": 0.8884758364312267, "obj2": 0.03981448670130043}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * AMS ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( Max( MUM,DS ) + ( RCSe - MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5576208178438662, "obj2": 0.24853107403560418}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( AMS / RRS ) ) * Min( ( CRS - Const ) ,PN ) ) ) - ( ( ( ACS - Min( Min( ( FirstVNF_RAM * CRS ) ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( RMSe,Max( DS,Max( MUM,( ( RRSe + DS ) / RMSe ) ) ) ) * Min( MUM ,( Max( MUM,MUR ) - ( ( MLU / RRSe ) + CS ) ) ) ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5545152292977509}, {"determining": "( ( PN / Min( MRS ,Max( FirstVNF_Mem_Server,MRS ) ) ) - ( ( ( ARS * ( Min( MDR ,FirstVNF_RAM ) - CRS ) ) * ( RRS + MDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * Max( ( ( MUC - ( Min( Min( MUR ,MUC ) ,MLU ) * ( MUR / ( CS / RCSe ) ) ) ) * MUC ),Min( MLU ,RRSe ) ) ) / ( DS + MUM ) )", "obj1": 0.741635687732342, "obj2": 0.09912981229360401}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - ( ( MUC * ( MLU / Max( CS,RRSe ) ) ) + CS ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.9144981412639405, "obj2": 0.027056028497736164}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ( ARS * DDR ) * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( CS - Min( ( ( MLU + MUM ) * ( MUR * RCSe ) ) ,Min( ( RMSe * RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4620074086058276}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "Min( ( Max( ( DDR - DDR ),DDR ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) )", "choosing": "( Max( RMSe,( ( ( DS + ( MUC / MUM ) ) - CS ) * RCSe ) ) - Max( MUC,DS ) )", "obj1": 0.8680297397769516, "obj2": 0.06093088509641682}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - CRS ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / Max( CS,MUM ) )", "obj1": 0.9758364312267658, "obj2": 0.010086328760122179}, {"determining": "( FirstVNF_CPU * Min( ( BR - FirstVNF_CPU_Server ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( ( MUC * ( DS - CS ) ) * ( ( MLU * ( MUM * MUR ) ) + MUM ) )", "obj1": 0.8866171003717472, "obj2": 0.0556717902549172}, {"determining": "Min( Min( MRS ,( PN / ( Max( ( ARS / ( ( ACS * PN ) - MDR ) ),FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Min( RMSe ,Max( RMSe,( DS * CS ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,( ( CS * CS ) + MUM ) ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.36059479553903345, "obj2": 0.43929812870255847}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,MUC ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ) ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6840148698884758, "obj2": 0.1358587644822}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),( ( Max( BR,( BR / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( Max( MUC,MUR ) * RRSe ) - RRSe ) * MUC ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,MUC ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.20260223048327136, "obj2": 0.6343696460518349}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,Max( DDR,ARS ) ) ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( DS - MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + ( Max( Max( MUC,( ( ( RMSe / RMSe ) * MLU ) + RRSe ) ),( CS + MUR ) ) / RCSe ) ) )", "obj1": 0.7527881040892194, "obj2": 0.09303149997772653}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( ( ( FirstVNF_Mem / ( ( ARS * MDR ) * ( ( CRS * MRS ) * ACS ) ) ) - ( Max( BR,Min( Const ,( ( MRS / FirstVNF_CPU ) - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( DDR - RRS ) ) ) )", "choosing": "( Max( ( Max( ( ( RMSe + ( ( RRSe / CS ) + MLU ) ) + ( RMSe - CS ) ),( MUC / ( Max( MLU,RCSe ) - RRSe ) ) ) / CS ),RMSe ) * Max( Min( DS ,RRSe ),MUC ) )", "obj1": 0.8810408921933085, "obj2": 0.058090178511062254}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( PN / FirstVNF_Mem ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.4275092936802974, "obj2": 0.38537396652897066}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( ( MDR + Max( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,( BR + ( Max( AMS,ACS ) + ARS ) ) ) )", "choosing": "( Max( RMSe,MUM ) / RCSe )", "obj1": 0.2211895910780669, "obj2": 0.6175983761170347}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),Min( Const ,MDR ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7885918579018925}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5623847950295838}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15057405982916736}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Min( DDR ,MDR ) ) + FirstVNF_CPU ) ,Min( CRS ,MDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * ( RCSe / Min( MUM ,RCSe ) ) ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.37412678924062487}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( AMS / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( DDR,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / CS ),RMSe ) * ( ( MUM / MUM ) + MUM ) )", "obj1": 0.6561338289962825, "obj2": 0.15866365717285308}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( RCSe - ( ( ( DS - RMSe ) - DS ) / MUC ) ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.152356043855966}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( PN * CRS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,DDR ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( Max( ( Max( Min( ( ( CS * MUR ) - RCSe ) ,( MUC / MUR ) ),MUC ) + Min( Max( MUC,RMSe ) ,( MLU + ( RCSe * ( MUR * MUC ) ) ) ) ),( MUR * MUM ) ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.42936802973977695, "obj2": 0.38034925623280397}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,DDR ),DDR ) ) ) - Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ) ) + MUM ) )", "obj1": 0.9925650557620818, "obj2": 0.0024952156831882454}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}], "38": [{"determining": "Min( Min( MRS ,Min( Min( ( ( Min( AMS ,BR ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,( FirstVNF_Mem * ( ( Const / BR ) + FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) ) ,( ( BR + Min( ( Max( ( DDR - DDR ),( FirstVNF_Mem - ( ACS / RRS ) ) ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUC,( Max( MUM,MUR ) * ( MUM / DS ) ) ) - Max( MUR,MUM ) ),( ( ( MLU + Min( CS ,DS ) ) + ( RMSe / ( RCSe + ( RRSe / RMSe ) ) ) ) * CS ) ) - Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / RRS ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RCSe ) / DS ) ) ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + MLU ) ) ) ) - RMSe ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( Max( ( PN + Const ),MRS ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / CS ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - MLU )", "obj1": 0.1171003717472119, "obj2": 0.756445604761199}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( RMSe - Min( ( MLU + ( MUM / ( DS * ( MLU - RMSe ) ) ) ) ,( ( Min( MUR ,RRSe ) / CS ) + ( MUC / MUR ) ) ) ) - ( DS * CS ) ) )", "obj1": 0.8661710037174721, "obj2": 0.05235046073305124}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Min( PN ,Const ) + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_CPU / ( ARS - CRS ) ) ,FirstVNF_CPU ) - Max( Min( BR ,DDR ),PN ) ) ) ) )", "choosing": "( Max( RMSe,Min( DS ,MLU ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( CS + DS ) ) )", "obj1": 0.9423791821561338, "obj2": 0.02214992243134464}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( FirstVNF_RAM_Server * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - ( BR * Const ) ) ) ) )", "choosing": "( ( Min( ( DS + ( Min( MUM ,RCSe ) - ( CS + MUM ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7100371747211895, "obj2": 0.12061204113956969}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( BR,Min( ( RRS + Min( FirstVNF_RAM ,BR ) ) ,ACS ) ) )", "choosing": "( ( DS * ( ( MLU / RRSe ) - Max( RCSe,( Min( MUR ,Min( ( MLU * DS ) ,( MUM + RCSe ) ) ) / MUC ) ) ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / ( RRSe * ( RCSe + MLU ) ) ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.3382899628252788, "obj2": 0.4698648323810837}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.3104089219330855, "obj2": 0.5181744921071733}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,MLU ) - MUR ) + DS ) / ( RRSe / MLU ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.32899628252788105, "obj2": 0.4981266222728501}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) * FirstVNF_CPU ) ) ) ,( PN / ( BR + Max( BR,Min( Const ,( FirstVNF_CPU - Max( Const,ACS ) ) ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( DS + MUM ) / ( ( RCSe + Max( RMSe,Max( Min( CS ,Max( MUM,RRSe ) ),DS ) ) ) * Min( MLU ,( ( MLU - MUC ) * MUM ) ) ) ) )", "obj1": 0.8884758364312267, "obj2": 0.03981448670130043}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_Mem * FirstVNF_Mem ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( RMSe - ( MLU + Max( RMSe,Max( RCSe,( Min( RRSe ,CS ) * CS ) ) ) ) ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.6431226765799256, "obj2": 0.17117483422957955}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "Min( ( FirstVNF_CPU_Server - ( MDR / FirstVNF_Mem ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( MUM - ( MLU + RRSe ) ) / RCSe ) ) ) ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + Max( DS,( CS - DS ) ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.014667721950597984}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Min( ACS ,PN ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - CRS ) ) ) ) ) * MDR ) ) * ( ( ACS / PN ) - Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( Max( ( DS / RCSe ),RMSe ) * RCSe ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * Max( ( ( RRSe * MUR ) * DS ),( MUR - MUM ) ) )", "obj1": 0.620817843866171, "obj2": 0.18781010689655153}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( Max( MLU,MUC ) - MUM ) )", "obj1": 0.5631970260223048, "obj2": 0.23075213383858822}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1335658809452099}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "( Min( MRS ,( ( PN / Max( FirstVNF_RAM,Const ) ) - ( ARS * MDR ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - ( PN - FirstVNF_Mem ) ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * ( RMSe + ( ( RRSe / RRSe ) / CS ) ) ) ) / Max( CS,MUM ) )", "obj1": 0.41263940520446096, "obj2": 0.4186211530315322}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.44981412639405205, "obj2": 0.37173566298103267}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ACS,PN ) ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7211895910780669, "obj2": 0.11641542144831385}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( MDR + RRS ) ,( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,ARS ) ) + FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( ( MUM / ( ( MUC + ( ( ( MLU - DS ) * ( MUM / DS ) ) - RRSe ) ) + ( RCSe - CS ) ) ) + MUM ) )", "obj1": 0.6059479553903345, "obj2": 0.19516664280023813}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "( ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( Min( FirstVNF_CPU ,Min( ARS ,FirstVNF_Mem ) ),ARS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / ( ( ACS * MRS ) * RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( RRSe + ( ( MUC + ( Min( ( RCSe * RMSe ) ,RCSe ) - MLU ) ) * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) ) - ( Max( MUR,CS ) + RRSe ) )", "obj1": 0.7360594795539034, "obj2": 0.10689858643678475}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * AMS ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( Max( MUM,DS ) + ( RCSe - MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5576208178438662, "obj2": 0.24853107403560418}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( AMS / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( DDR,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / CS ),RMSe ) * ( ( MUM / MUM ) + MUM ) )", "obj1": 0.587360594795539, "obj2": 0.2102115365008293}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( CRS / FirstVNF_Mem_Server ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( ( MUR / RRSe ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5433307241050296}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ARS ) ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe )", "obj1": 0.2936802973977695, "obj2": 0.5339605182223253}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( ( ARS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * Max( MUC,MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.5947955390334573, "obj2": 0.206970309125637}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - CRS ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / Max( CS,MUM ) )", "obj1": 0.9758364312267658, "obj2": 0.010086328760122179}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( AMS - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RRSe,( MUR + MUM ) ) / MLU ) ) / RCSe ) ) ) )", "obj1": 0.671003717472119, "obj2": 0.14419014419189063}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( Min( ( FirstVNF_Mem_Server + Min( CRS ,DDR ) ) ,Max( ( ( ( ( ( BR + MRS ) - ( MRS - DDR ) ) + ( FirstVNF_CPU / ( MDR - AMS ) ) ) - MDR ) - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( PN + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( ( CS + RRSe ) - Min( ( RCSe * MUR ) ,CS ) ) ,Min( Min( ( CS + ( RMSe * CS ) ) ,CS ) ,( MUC * ( ( MUM / MUM ) * ( MUR * RCSe ) ) ) ) ),Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( ( PN / Min( MRS ,Max( FirstVNF_Mem_Server,MRS ) ) ) - ( ( ( ARS * ( Min( MDR ,FirstVNF_RAM ) - CRS ) ) * ( RRS + MDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * Max( ( ( MUC - ( Min( Min( MUR ,MUC ) ,MLU ) * ( MUR / ( CS / RCSe ) ) ) ) * MUC ),Min( MLU ,RRSe ) ) ) / ( DS + MUM ) )", "obj1": 0.741635687732342, "obj2": 0.09912981229360401}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - ( ( MUC * ( MLU / Max( CS,RRSe ) ) ) + CS ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.9144981412639405, "obj2": 0.027056028497736164}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ( ARS * DDR ) * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( CS - Min( ( ( MLU + MUM ) * ( MUR * RCSe ) ) ,Min( ( RMSe * RRSe ) ,RRSe ) ) ) ) ) ) )", "obj1": 0.34944237918215615, "obj2": 0.4620074086058276}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,MUC ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ) ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6840148698884758, "obj2": 0.1358587644822}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),Min( Const ,MDR ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7885918579018925}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( BR - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Max( MUM,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.36988847583643125, "obj2": 0.43518273339958646}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),( ( Max( BR,( BR / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( Max( MUC,MUR ) * RRSe ) - RRSe ) * MUC ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,MUC ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.20260223048327136, "obj2": 0.6343696460518349}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,Max( DDR,ARS ) ) ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( DS - MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + ( Max( Max( MUC,( ( ( RMSe / RMSe ) * MLU ) + RRSe ) ),( CS + MUR ) ) / RCSe ) ) )", "obj1": 0.7527881040892194, "obj2": 0.09303149997772653}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "( ( ARS + Max( Min( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU * ( Const - MRS ) ) ) ,( PN / FirstVNF_Mem_Server ) ),Min( MRS ,ARS ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( RCSe + RCSe ) ,( RMSe + ( MUC + ( RCSe * RMSe ) ) ) ) - MUM ) - RMSe ) / ( MUR * ( MUM / MUM ) ) )", "obj1": 0.20817843866171004, "obj2": 0.6273380380935675}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( PN / FirstVNF_Mem ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.4275092936802974, "obj2": 0.38537396652897066}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * ARS ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + RMSe ) - RCSe ) ) ) ) )", "obj1": 0.9888475836431226, "obj2": 0.008365482170177165}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "Min( Min( MRS ,( PN / ( Max( ( ARS / ( ( ACS * PN ) - MDR ) ),FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Min( RMSe ,Max( RMSe,( DS * CS ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,( ( CS * CS ) + MUM ) ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.36059479553903345, "obj2": 0.43929812870255847}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( ( Max( BR,( Min( DDR ,FirstVNF_RAM ) * MDR ) ) * MDR ) * ( ( DDR * FirstVNF_Mem ) + ARS ) ) )", "choosing": "( Max( Max( MLU,MUR ),( Max( ( ( ( Max( CS,RMSe ) - MUR ) + DS ) / ( MUR / Max( MUR,RMSe ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2788104089219331, "obj2": 0.553396807895269}, {"determining": "( ( MDR + Max( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,( BR + ( Max( AMS,ACS ) + ARS ) ) ) )", "choosing": "( Max( RMSe,MUM ) / RCSe )", "obj1": 0.2211895910780669, "obj2": 0.6175983761170347}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5623847950295838}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15057405982916736}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / Min( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) ,( DS * Min( MUM ,RRSe ) ) ) ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.4644021469628841}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Min( DDR ,MDR ) ) + FirstVNF_CPU ) ,Min( CRS ,MDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * ( RCSe / Min( MUM ,RCSe ) ) ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.37412678924062487}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( AMS / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( DDR,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / CS ),RMSe ) * ( ( MUM / MUM ) + MUM ) )", "obj1": 0.6561338289962825, "obj2": 0.15866365717285308}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - PN ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Max( MDR,MDR ) ,Max( Min( AMS ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( ( Min( MLU ,Min( RMSe ,DS ) ) + MUM ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - ( DS / MUM ) ) ) + MUR ) ) + MUM ) )", "obj1": 0.654275092936803, "obj2": 0.16487469876513933}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( RCSe - ( ( ( DS - RMSe ) - DS ) / MUC ) ) ) ) )", "obj1": 0.6598513011152416, "obj2": 0.152356043855966}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( RRS - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / ( Min( ( ( ( MUC / MUR ) * ( DS / DS ) ) + ( RRSe * ( DS + MUC ) ) ) ,RCSe ) * MUC ) ),RMSe ) * ( MUR + MUM ) )", "obj1": 0.6449814126394052, "obj2": 0.16604764845848086}], "39": [{"determining": "Min( Min( ( ( ( PN / ( ( MDR - FirstVNF_RAM_Server ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( ( ( RCSe / RRSe ) * RCSe ) * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( AMS ,BR ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,( FirstVNF_Mem * ( ( Const / BR ) + FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) ) ,( ( BR + Min( ( Max( ( DDR - DDR ),( FirstVNF_Mem - ( ACS / RRS ) ) ) - ARS ) ,( ARS + Min( PN ,( AMS * ACS ) ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( Max( ( Max( MUC,( Max( MUM,MUR ) * ( MUM / DS ) ) ) - Max( MUR,MUM ) ),( ( ( MLU + Min( CS ,DS ) ) + ( RMSe / ( RCSe + ( RRSe / RMSe ) ) ) ) * CS ) ) - Max( RRSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( Max( ( PN + Const ),MRS ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / CS ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - MLU )", "obj1": 0.1171003717472119, "obj2": 0.756445604761199}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( BR,Min( ( RRS + Min( FirstVNF_RAM ,BR ) ) ,ACS ) ) )", "choosing": "( ( DS * ( ( MLU / RRSe ) - Max( RCSe,( Min( MUR ,Min( ( MLU * DS ) ,( MUM + RCSe ) ) ) / MUC ) ) ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / ( RRSe * ( RCSe + MLU ) ) ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.3382899628252788, "obj2": 0.4698648323810837}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( FirstVNF_RAM_Server * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - ( BR * Const ) ) ) ) )", "choosing": "( ( Min( ( DS + ( Min( MUM ,RCSe ) - ( CS + MUM ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7100371747211895, "obj2": 0.12061204113956969}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.3104089219330855, "obj2": 0.5181744921071733}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,MLU ) - MUR ) + DS ) / ( RRSe / MLU ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.32899628252788105, "obj2": 0.4981266222728501}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Min( PN ,Const ) + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_CPU / ( ARS - CRS ) ) ,FirstVNF_CPU ) - Max( Min( BR ,DDR ),PN ) ) ) ) )", "choosing": "( Max( RMSe,Min( DS ,MLU ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( CS + DS ) ) )", "obj1": 0.9423791821561338, "obj2": 0.02214992243134464}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 0.8643122676579925, "obj2": 0.07027441998083982}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( DS ,CS ) ) ) ) ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.46064950960073564}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1335658809452099}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "( Min( MRS ,( ( PN / Max( FirstVNF_RAM,Const ) ) - ( ARS * MDR ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - ( PN - FirstVNF_Mem ) ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * ( RMSe + ( ( RRSe / RRSe ) / CS ) ) ) ) / Max( CS,MUM ) )", "obj1": 0.41263940520446096, "obj2": 0.4186211530315322}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ACS,PN ) ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7211895910780669, "obj2": 0.11641542144831385}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( MDR + RRS ) ,( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,ARS ) ) + FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( ( MUM / ( ( MUC + ( ( ( MLU - DS ) * ( MUM / DS ) ) - RRSe ) ) + ( RCSe - CS ) ) ) + MUM ) )", "obj1": 0.6059479553903345, "obj2": 0.19516664280023813}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "( ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( Min( FirstVNF_CPU ,Min( ARS ,FirstVNF_Mem ) ),ARS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / ( ( ACS * MRS ) * RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( RRSe + ( ( MUC + ( Min( ( RCSe * RMSe ) ,RCSe ) - MLU ) ) * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) ) - ( Max( MUR,CS ) + RRSe ) )", "obj1": 0.7360594795539034, "obj2": 0.10689858643678475}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * AMS ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( Max( MUM,DS ) + ( RCSe - MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5576208178438662, "obj2": 0.24853107403560418}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( AMS / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( DDR,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / CS ),RMSe ) * ( ( MUM / MUM ) + MUM ) )", "obj1": 0.587360594795539, "obj2": 0.2102115365008293}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( Min( FirstVNF_CPU ,FirstVNF_CPU ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( CRS / FirstVNF_Mem_Server ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( ( MUR / RRSe ) / RCSe )", "obj1": 0.2825278810408922, "obj2": 0.5433307241050296}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),Min( Const ,MDR ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7885918579018925}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,Max( DDR,ARS ) ) ) * Min( DDR ,FirstVNF_RAM_Server ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( DS - MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + ( Max( Max( MUC,( ( ( RMSe / RMSe ) * MLU ) + RRSe ) ),( CS + MUR ) ) / RCSe ) ) )", "obj1": 0.7527881040892194, "obj2": 0.09303149997772653}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ARS ) ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe )", "obj1": 0.2936802973977695, "obj2": 0.5339605182223253}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( ( ARS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * Max( MUC,MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.5947955390334573, "obj2": 0.206970309125637}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - CRS ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / Max( CS,MUM ) )", "obj1": 0.9758364312267658, "obj2": 0.010086328760122179}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.44981412639405205, "obj2": 0.37173566298103267}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - ( ( MUC * ( MLU / Max( Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ),RRSe ) ) ) + CS ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.8698884758364313, "obj2": 0.04512694094904764}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( RMSe - Min( ( MLU + ( MUM / ( DS * ( MLU - RMSe ) ) ) ) ,( ( Min( MUR ,RRSe ) / CS ) + ( MUC / MUR ) ) ) ) - ( DS * CS ) ) )", "obj1": 0.8661710037174721, "obj2": 0.05235046073305124}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( PN / FirstVNF_Mem ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.4275092936802974, "obj2": 0.38537396652897066}, {"determining": "( Min( ( FirstVNF_Mem_Server + Min( CRS ,DDR ) ) ,Max( ( ( ( ( ( BR + MRS ) - ( MRS - DDR ) ) + ( FirstVNF_CPU / ( MDR - AMS ) ) ) - MDR ) - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( PN + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( ( CS + RRSe ) - Min( ( RCSe * MUR ) ,CS ) ) ,Min( Min( ( CS + ( RMSe * CS ) ) ,CS ) ,( MUC * ( ( MUM / MUM ) * ( MUR * RCSe ) ) ) ) ),Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - PN ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * ARS ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( RCSe * ( ( MUR + RMSe ) - RCSe ) ) ) ) )", "obj1": 0.9888475836431226, "obj2": 0.008365482170177165}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( ( Max( BR,( Min( DDR ,FirstVNF_RAM ) * MDR ) ) * MDR ) * ( ( DDR * FirstVNF_Mem ) + ARS ) ) )", "choosing": "( Max( Max( MLU,MUR ),( Max( ( ( ( Max( CS,RMSe ) - MUR ) + DS ) / ( MUR / Max( MUR,RMSe ) ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.2788104089219331, "obj2": 0.553396807895269}, {"determining": "( ( PN / Min( MRS ,Max( FirstVNF_Mem_Server,MRS ) ) ) - ( ( ( ARS * ( Min( MDR ,FirstVNF_RAM ) - CRS ) ) * ( RRS + MDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * Max( ( ( MUC - ( Min( Min( MUR ,MUC ) ,MLU ) * ( MUR / ( CS / RCSe ) ) ) ) * MUC ),Min( MLU ,RRSe ) ) ) / ( DS + MUM ) )", "obj1": 0.741635687732342, "obj2": 0.09912981229360401}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - ( ( MUC * ( MLU / Max( CS,RRSe ) ) ) + CS ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.9144981412639405, "obj2": 0.027056028497736164}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,( FirstVNF_RAM + FirstVNF_CPU ) ) * MDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * ( Max( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),( CRS + Max( ACS,Const ) ) ) - ( ( PN + DDR ) - FirstVNF_RAM ) ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,ACS ),DDR ) ) ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC + ( Max( RMSe,( MUR * RMSe ) ) - RRSe ) ) ) / CS ),RMSe ) * ( ( DS / CS ) - MUM ) )", "obj1": 0.5631970260223048, "obj2": 0.23075213383858822}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5623847950295838}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "Min( ( FirstVNF_CPU_Server - ( MDR / FirstVNF_Mem ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( MUM - ( MLU + RRSe ) ) / RCSe ) ) ) ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + Max( DS,( CS - DS ) ) ) ) )", "obj1": 0.9609665427509294, "obj2": 0.014667721950597984}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( ( FirstVNF_CPU_Server - Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( MDR ,MDR ) - RRS ) ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( ( ( ( Max( CS,RMSe ) - MUR ) + DS ) / ( MUR / Max( ( DS * MLU ),( MUC + MUM ) ) ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + Max( DS,( CS - DS ) ) ) ) )", "obj1": 0.9591078066914498, "obj2": 0.019565773446501088}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,MUC ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ) ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6840148698884758, "obj2": 0.1358587644822}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( BR - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Max( MUM,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.36988847583643125, "obj2": 0.43518273339958646}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_RAM_Server - ( Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) - ( ARS - FirstVNF_RAM_Server ) ) ) ) * ( PN / Min( Max( BR,Max( ( ARS - MRS ),FirstVNF_RAM_Server ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,( MLU - ( ( ( RRSe * ( Min( MUM ,RMSe ) + ( RCSe * MLU ) ) ) / ( MLU / MUM ) ) / ( CS / ( ( DS * RCSe ) / MUR ) ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.8866171003717472, "obj2": 0.04075336132233188}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ) )", "obj1": 0.20446096654275092, "obj2": 0.6257912472309474}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),( ( Max( BR,( BR / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) * MDR ) - ( MRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( Max( MUC,MUR ) * RRSe ) - RRSe ) * MUC ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,MUC ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.20260223048327136, "obj2": 0.6343696460518349}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "Min( Min( MRS ,( PN / ( Max( ( ARS / ( ( ACS * PN ) - MDR ) ),FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Min( RMSe ,Max( RMSe,( DS * CS ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,( ( CS * CS ) + MUM ) ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) ) )", "obj1": 0.36059479553903345, "obj2": 0.43929812870255847}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( ( MDR + Max( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,( BR + ( Max( AMS,ACS ) + ARS ) ) ) )", "choosing": "( Max( RMSe,MUM ) / RCSe )", "obj1": 0.2211895910780669, "obj2": 0.6175983761170347}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( Max( ARS,ACS ) / RRS ) ) )", "choosing": "( ( RMSe * Min( DS ,Max( ( Max( MLU,( MUM / ( MUM + RRSe ) ) ) - Max( ( Min( RMSe ,RMSe ) / ( RMSe * CS ) ),( ( RCSe * MUR ) - ( MUR / RCSe ) ) ) ),DS ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.6282527881040892, "obj2": 0.18276778006846237}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15057405982916736}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( AMS - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RRSe,Min( RRSe ,CS ) ) / MLU ) ) / RCSe ) ) ) )", "obj1": 0.671003717472119, "obj2": 0.14419014419189063}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( PN,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,( MLU + RRSe ) ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.6338289962825279, "obj2": 0.1805500440757738}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - BR ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * Max( RCSe,( Min( DS ,( ( ( RCSe - Max( RMSe,MLU ) ) / Max( MUM,MUC ) ) + RMSe ) ) + ( MUM + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.637546468401487, "obj2": 0.17318767670117427}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( RRS - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM_Server - ( MDR - MDR ) ) ,FirstVNF_RAM ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( ( ( DS / RMSe ) / DS ) / RMSe ) ) / CS ),RMSe ) * ( MUR + MUM ) )", "obj1": 0.6524163568773235, "obj2": 0.16245427367603224}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Min( ACS ,PN ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - CRS ) ) ) ) ) * MDR ) ) * ( ( ACS / PN ) - Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( Max( ( DS / RCSe ),RMSe ) * RCSe ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * Max( ( ( RRSe * MUR ) * DS ),( MUR - MUM ) ) )", "obj1": 0.620817843866171, "obj2": 0.18781010689655153}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( RRS - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / ( Min( ( ( ( MUC / MUR ) * ( DS / DS ) ) + ( RRSe * ( DS + MUC ) ) ) ,RCSe ) * MUC ) ),RMSe ) * ( MUR + MUM ) )", "obj1": 0.6449814126394052, "obj2": 0.16604764845848086}], "40": [{"determining": "( ( Max( Const,FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_Mem_Server / ( RRS * MDR ) ) ,( MRS - ( ( Min( ACS ,PN ) / Max( BR,MRS ) ) * FirstVNF_Mem ) ) ) ) ) - ( Max( CRS,Const ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,CS ) - MUM ) - ( MUM - MUM ) ) / ( ( MUM / MLU ) + Max( Min( Max( Max( Min( MUR ,MUC ),( RCSe - RRSe ) ),DS ) ,( CS - RCSe ) ),Max( RRSe,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( PN / ( ( MDR - FirstVNF_RAM_Server ) * MDR ) ) / FirstVNF_Mem ) - FirstVNF_CPU ) ,( FirstVNF_RAM / ( ( ( PN / FirstVNF_Mem ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) ) ,( PN / FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe - Min( MUM ,DS ) ),MUR ) - ( DS - ( RMSe * ( ( ( RCSe / RRSe ) * RCSe ) * ( ( MUR + ( RMSe / ( RMSe / RCSe ) ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( ( PN - DDR ) - ( Min( AMS ,MDR ) + AMS ) ) - ( Const + ( Max( ( PN + Const ),MRS ) - FirstVNF_RAM ) ) ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / CS ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - MLU )", "obj1": 0.1171003717472119, "obj2": 0.756445604761199}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( BR,Min( ( RRS + Min( FirstVNF_RAM ,BR ) ) ,ACS ) ) )", "choosing": "( ( DS * ( ( MLU / RRSe ) - Max( RCSe,( Min( MUR ,Min( ( MLU * DS ) ,( MUM + RCSe ) ) ) / MUC ) ) ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / ( RRSe * ( RCSe + MLU ) ) ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.3382899628252788, "obj2": 0.4698648323810837}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( FirstVNF_RAM_Server * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - ( BR * Const ) ) ) ) )", "choosing": "( ( Min( ( DS + ( Min( MUM ,RCSe ) - ( CS + MUM ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7100371747211895, "obj2": 0.12061204113956969}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + BR ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( ( MUR / CS ) ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( Max( RCSe,Max( Min( Min( MLU ,RCSe ) ,RCSe ),DS ) ) * MUR ) )", "obj1": 0.275092936802974, "obj2": 0.5426840254861152}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.3104089219330855, "obj2": 0.5181744921071733}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.44981412639405205, "obj2": 0.37173566298103267}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,MLU ) - MUR ) + DS ) / ( RRSe / MLU ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.32899628252788105, "obj2": 0.4981266222728501}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( Min( PN ,Const ) + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_CPU / ( ARS - CRS ) ) ,FirstVNF_CPU ) - Max( Min( BR ,DDR ),PN ) ) ) ) )", "choosing": "( Max( RMSe,Min( DS ,MLU ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( CS + DS ) ) )", "obj1": 0.9423791821561338, "obj2": 0.02214992243134464}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( PN / ( MRS * Const ) ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server - ( ACS - FirstVNF_Mem_Server ) ) ) * FirstVNF_Mem_Server ) ) ) ,( ( ( ( AMS - FirstVNF_RAM ) / Const ) - ( FirstVNF_RAM_Server - BR ) ) / CRS ) )", "choosing": "( Max( ( RCSe * ( Min( ( RCSe * MUC ) ,Max( MUM,RCSe ) ) + DS ) ),MUR ) - Min( ( ( Min( RRSe ,Max( ( MUM + RMSe ),MLU ) ) + ( ( ( DS - MUC ) * RMSe ) + ( DS + MUM ) ) ) + ( RMSe - RCSe ) ) ,( MUR + MUM ) ) )", "obj1": 0.4739776951672863, "obj2": 0.31940301287521383}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,( FirstVNF_RAM + FirstVNF_CPU ) ) * MDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * ( Max( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),( CRS + Max( ACS,Const ) ) ) - ( ( PN + DDR ) - FirstVNF_RAM ) ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,ACS ),DDR ) ) ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC + ( Max( RMSe,( MUR * RMSe ) ) - RRSe ) ) ) / CS ),RMSe ) * ( ( DS / CS ) - MUM ) )", "obj1": 0.5631970260223048, "obj2": 0.23075213383858822}, {"determining": "( PN - Min( Const ,( AMS - ( BR - ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( ( Max( ( MUR - DS ),( Min( ( MUM / RMSe ) ,( MUC - RRSe ) ) + DS ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) * ( MUC + DS ) ) )", "obj1": 0.8568773234200744, "obj2": 0.05395432939842573}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( DS ,CS ) ) ) ) ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.46064950960073564}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1335658809452099}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ARS ) ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe )", "obj1": 0.2936802973977695, "obj2": 0.5339605182223253}, {"determining": "( Min( MRS ,( ( PN / Max( FirstVNF_RAM,Const ) ) - ( ARS * MDR ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - ( PN - FirstVNF_Mem ) ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * ( RMSe + ( ( RRSe / RRSe ) / CS ) ) ) ) / Max( CS,MUM ) )", "obj1": 0.41263940520446096, "obj2": 0.4186211530315322}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( MDR + RRS ) ,( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,ARS ) ) + FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( ( MUM / ( ( MUC + ( ( ( MLU - DS ) * ( MUM / DS ) ) - RRSe ) ) + ( RCSe - CS ) ) ) + MUM ) )", "obj1": 0.6059479553903345, "obj2": 0.19516664280023813}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) / ( ( RRS + MDR ) * FirstVNF_RAM_Server ) ) ) * Max( PN,( Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( PN + ARS ) ) - ( FirstVNF_RAM / AMS ) ) ) ) ) - ( ( RRS * ( Min( DDR ,Max( Const,FirstVNF_RAM_Server ) ) / PN ) ) * ( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( BR - Const ) ) ),PN ) ) ) ) )", "choosing": "( Max( ( ( ( MUM + MUM ) + DS ) - ( ( ( MLU + ( RMSe - Max( RCSe,MUM ) ) ) / ( ( ( RMSe + MLU ) + RCSe ) / ( Min( RCSe ,DS ) * MUC ) ) ) / Min( RCSe ,Min( RMSe ,RMSe ) ) ) ),( RMSe - CS ) ) / ( Max( Min( MUC ,( ( ( ( RMSe - MUC ) * MUR ) / ( Max( RCSe,MUR ) * MUC ) ) / DS ) ),MUM ) - CS ) )", "obj1": 0.0724907063197026, "obj2": 0.8177193961357487}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * AMS ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( Max( MUM,DS ) + ( RCSe - MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5576208178438662, "obj2": 0.24853107403560418}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_RAM_Server - ( Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) - ( ARS - FirstVNF_RAM_Server ) ) ) ) * ( PN / Min( Max( BR,Max( ( ARS - MRS ),FirstVNF_RAM_Server ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,( MLU - ( ( ( RRSe * ( Min( MUM ,RMSe ) + ( RCSe * MLU ) ) ) / ( MLU / MUM ) ) / ( CS / ( ( DS * RCSe ) / MUR ) ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.8866171003717472, "obj2": 0.04075336132233188}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5623847950295838}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( AMS / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( DDR,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / CS ),RMSe ) * ( ( MUM / MUM ) + MUM ) )", "obj1": 0.587360594795539, "obj2": 0.2102115365008293}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),Min( Const ,MDR ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7885918579018925}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( AMS - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RRSe,Min( RRSe ,CS ) ) / MLU ) ) / RCSe ) ) ) )", "obj1": 0.671003717472119, "obj2": 0.14419014419189063}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - ( ( MUC * ( MLU / Max( Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ),RRSe ) ) ) + CS ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.8698884758364313, "obj2": 0.04512694094904764}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( MRS / FirstVNF_CPU ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) ) ) + MUM ) )", "obj1": 0.42379182156133827, "obj2": 0.3839875938658618}, {"determining": "( Min( ( FirstVNF_Mem_Server + Min( CRS ,DDR ) ) ,Max( ( ( ( ( ( BR + MRS ) - ( MRS - DDR ) ) + ( FirstVNF_CPU / ( MDR - AMS ) ) ) - MDR ) - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( PN + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( ( CS + RRSe ) - Min( ( RCSe * MUR ) ,CS ) ) ,Min( Min( ( CS + ( RMSe * CS ) ) ,CS ) ,( MUC * ( ( MUM / MUM ) * ( MUR * RCSe ) ) ) ) ),Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( Max( Min( ( ACS + ( FirstVNF_RAM - ( Const - MRS ) ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) )", "choosing": "( ( Min( MUM ,MUR ) / RCSe ) - Max( Min( RRSe ,( ( CS + ( RRSe - Max( RCSe,( MUC - MUC ) ) ) ) / RCSe ) ),( CS + MUM ) ) )", "obj1": 0.07992565055762081, "obj2": 0.8140559565343921}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( Min( FirstVNF_CPU ,Min( ARS ,FirstVNF_Mem ) ),ARS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / ( ( ACS * MRS ) * RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( RRSe + ( ( MUC + ( Min( ( RCSe * RMSe ) ,RCSe ) - MLU ) ) * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) ) - ( Max( MUR,CS ) + RRSe ) )", "obj1": 0.7360594795539034, "obj2": 0.10689858643678475}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),Min( ( CRS + FirstVNF_RAM ) ,( ( CRS / Min( Min( ( FirstVNF_CPU_Server + BR ) ,FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) + Const ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( MLU + RCSe ) ),MLU ) + MUR ) )", "obj1": 0.2342007434944238, "obj2": 0.5972357902246249}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15057405982916736}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - BR ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * Max( RCSe,( Min( DS ,( ( ( RCSe - Max( RMSe,MLU ) ) / Max( MUM,MUC ) ) + RMSe ) ) + ( MUM + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.637546468401487, "obj2": 0.17318767670117427}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( ( ARS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * Max( MUC,MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.5947955390334573, "obj2": 0.206970309125637}, {"determining": "Min( ( FirstVNF_CPU_Server - Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( MDR ,MDR ) - RRS ) ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( ( ( ( Max( CS,RMSe ) - MUR ) + DS ) / ( MUR / Max( ( DS * MLU ),( MUC + MUM ) ) ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + Max( DS,( CS - DS ) ) ) ) )", "obj1": 0.9591078066914498, "obj2": 0.019565773446501088}, {"determining": "( ( PN / Min( MRS ,Max( FirstVNF_Mem_Server,MRS ) ) ) - ( ( ( ARS * ( Min( MDR ,FirstVNF_RAM ) - CRS ) ) * ( RRS + MDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * Max( ( ( MUC - ( Min( Min( MUR ,MUC ) ,MLU ) * ( MUR / ( CS / RCSe ) ) ) ) * MUC ),Min( MLU ,RRSe ) ) ) / ( DS + MUM ) )", "obj1": 0.741635687732342, "obj2": 0.09912981229360401}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( RRS - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / ( Min( ( ( ( MUC / MUR ) * ( DS / DS ) ) + ( RRSe * ( DS + MUC ) ) ) ,RCSe ) * MUC ) ),RMSe ) * ( MUR + MUM ) )", "obj1": 0.6449814126394052, "obj2": 0.16604764845848086}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,MUC ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ) ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6840148698884758, "obj2": 0.1358587644822}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + ( Max( AMS,Const ) / RRS ) ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,ACS ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( RRSe / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.6617100371747212, "obj2": 0.16056042335281917}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ACS,PN ) ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7211895910780669, "obj2": 0.11641542144831385}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( MRS * ( MDR + FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Const ,Max( Min( FirstVNF_RAM_Server ,ACS ),( ( Const / FirstVNF_RAM_Server ) + BR ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( Min( Max( ( ( Min( ( DS / RRSe ) ,MUR ) * RMSe ) + ( RMSe * MUM ) ),( ( ( MLU * ( DS / MUC ) ) - MUR ) - ( MUC * DS ) ) ) ,RMSe ),RMSe ) * ( ( ( ( RRSe * RMSe ) - ( MUM / MUR ) ) / Min( ( DS + MLU ) ,Max( ( ( RRSe * ( MUC - RMSe ) ) - RMSe ),DS ) ) ) + MUM ) )", "obj1": 0.7267657992565055, "obj2": 0.11220401852664165}, {"determining": "Min( ( ( ( PN / ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,Min( CRS ,MDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( ( Min( MUM ,MUR ) / RCSe ) + ( Max( ( MUR / CS ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.983271375464684, "obj2": 0.007225658858925212}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - CRS ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / Max( CS,MUM ) )", "obj1": 0.9758364312267658, "obj2": 0.010086328760122179}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( RCSe * ( MUC + DS ) ) ),MLU ) + MUR ) )", "obj1": 0.9089219330855018, "obj2": 0.031847174541287514}, {"determining": "( Max( ( BR / FirstVNF_RAM ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - ( PN / FirstVNF_Mem ) ) ) ) ) ) ) + ( FirstVNF_RAM_Server * PN ) )", "choosing": "( Max( Max( RCSe,Max( MUR,CS ) ),CS ) - ( Min( MUR ,MUR ) + MUR ) )", "obj1": 0.19888475836431227, "obj2": 0.6298091100515549}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( RRS - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM_Server - ( MDR - MDR ) ) ,FirstVNF_RAM ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( ( ( DS / RMSe ) / DS ) / RMSe ) ) / CS ),RMSe ) * ( MUR + MUM ) )", "obj1": 0.6524163568773235, "obj2": 0.16245427367603224}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( RMSe - Min( ( MLU + ( MUM / ( DS * ( MLU - RMSe ) ) ) ) ,( ( Min( MUR ,RRSe ) / CS ) + ( MUC / MUR ) ) ) ) - ( DS * CS ) ) )", "obj1": 0.8661710037174721, "obj2": 0.05235046073305124}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ) )", "obj1": 0.20446096654275092, "obj2": 0.6257912472309474}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( ( MDR + Max( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,( BR + ( Max( AMS,ACS ) + ARS ) ) ) )", "choosing": "( Max( RMSe,MUM ) / RCSe )", "obj1": 0.2211895910780669, "obj2": 0.6175983761170347}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( Max( ARS,ACS ) / RRS ) ) )", "choosing": "( ( RMSe * Min( DS ,Max( ( Max( MLU,( MUM / ( MUM + RRSe ) ) ) - Max( ( Min( RMSe ,RMSe ) / ( RMSe * CS ) ),( ( RCSe * MUR ) - ( MUR / RCSe ) ) ) ),DS ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.6282527881040892, "obj2": 0.18276778006846237}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( ( CRS / FirstVNF_RAM_Server ) + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,Min( RCSe ,MUR ) ) * ( MUM + MUM ) )", "obj1": 0.9646840148698885, "obj2": 0.013023333119728576}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( PN,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,( MLU + RRSe ) ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.6338289962825279, "obj2": 0.1805500440757738}, {"determining": "Min( ( FirstVNF_CPU_Server - Max( ( ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( CS - RCSe ) ) / ( MUR / Max( ( DS * MLU ),RMSe ) ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + Max( DS,( CS - DS ) ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0022961082502122214}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( Min( ACS ,PN ) / Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - CRS ) ) ) ) ) * MDR ) ) * ( ( ACS / PN ) - Min( MDR ,FirstVNF_RAM ) ) )", "choosing": "( Max( ( Max( ( ( MUR + RMSe ) + ( Max( ( DS / RCSe ),RMSe ) * RCSe ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * Max( ( ( RRSe * MUR ) * DS ),( MUR - MUM ) ) )", "obj1": 0.620817843866171, "obj2": 0.18781010689655153}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "Min( Min( RRS ,( ( RRS * ( ( CRS / DDR ) - ACS ) ) + Const ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( ( MUM / MUM ) ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.43231800308516455}], "41": [{"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( ( PN / Min( ( FirstVNF_RAM_Server - ( MDR - MDR ) ) ,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( ( DS / RMSe ) * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_CPU_Server ) * Min( FirstVNF_Mem_Server ,Min( ( FirstVNF_Mem_Server / ( RRS * MDR ) ) ,( MRS - ( ( Min( ACS ,PN ) / Max( BR,MRS ) ) * FirstVNF_Mem ) ) ) ) ) - ( Max( CRS,Const ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,CS ) - MUM ) - ( MUM - MUM ) ) / ( ( MUM / MLU ) + Max( Min( Max( Max( Min( MUR ,MUC ),( RCSe - RRSe ) ),DS ) ,( CS - RCSe ) ),Max( RRSe,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.1171003717472119, "obj2": 0.7504589491932445}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( Max( DDR,( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( Min( MDR ,FirstVNF_CPU ) + Min( Const ,MDR ) ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) ) / RCSe )", "obj1": 0.07063197026022305, "obj2": 0.8117530515433075}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( BR,Min( ( RRS + Min( FirstVNF_RAM ,BR ) ) ,ACS ) ) )", "choosing": "( ( DS * ( ( MLU / RRSe ) - Max( RCSe,( Min( MUR ,Min( ( MLU * DS ) ,( MUM + RCSe ) ) ) / MUC ) ) ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / ( RRSe * ( RCSe + MLU ) ) ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.3382899628252788, "obj2": 0.4698648323810837}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( FirstVNF_RAM_Server * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - ( BR * Const ) ) ) ) )", "choosing": "( ( Min( ( DS + ( Min( MUM ,RCSe ) - ( CS + MUM ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7100371747211895, "obj2": 0.12061204113956969}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + BR ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( ( MUR / CS ) ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( Max( RCSe,Max( Min( Min( MLU ,RCSe ) ,RCSe ),DS ) ) * MUR ) )", "obj1": 0.275092936802974, "obj2": 0.5426840254861152}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.3104089219330855, "obj2": 0.5181744921071733}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.44981412639405205, "obj2": 0.37173566298103267}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,MLU ) - MUR ) + DS ) / ( RRSe / MLU ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.32899628252788105, "obj2": 0.4981266222728501}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ( ( RRS - BR ) / BR ) ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - MUM ) / ( MUM - ( MUR + MLU ) ) )", "obj1": 0.9330855018587361, "obj2": 0.021479392072308017}, {"determining": "Min( Min( RRS ,( ( RRS * ( ( CRS / DDR ) - ACS ) ) + Const ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( ( MUM / MUM ) ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.43231800308516455}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "( PN - Min( Const ,( AMS - ( BR - ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( ( Max( ( MUR - DS ),( Min( ( MUM / RMSe ) ,( MUC - RRSe ) ) + DS ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) * ( MUC + DS ) ) )", "obj1": 0.8568773234200744, "obj2": 0.05395432939842573}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1335658809452099}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ARS ) ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe )", "obj1": 0.2936802973977695, "obj2": 0.5339605182223253}, {"determining": "( Min( MRS ,( ( PN / Max( FirstVNF_RAM,Const ) ) - ( ARS * MDR ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - ( PN - FirstVNF_Mem ) ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * ( RMSe + ( ( RRSe / RRSe ) / CS ) ) ) ) / Max( CS,MUM ) )", "obj1": 0.41263940520446096, "obj2": 0.4186211530315322}, {"determining": "Min( ( FirstVNF_CPU_Server - Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( MDR ,MDR ) - RRS ) ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( ( ( ( Max( CS,RMSe ) - MUR ) + DS ) / ( MUR / Max( ( DS * MLU ),( MUC + MUM ) ) ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + Max( DS,( CS - DS ) ) ) ) )", "obj1": 0.9591078066914498, "obj2": 0.019565773446501088}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * AMS ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( Max( MUM,DS ) + ( RCSe - MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5576208178438662, "obj2": 0.24853107403560418}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.27137546468401486, "obj2": 0.5623847950295838}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),Min( Const ,MDR ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7885918579018925}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - ( ( MUC * ( MLU / Max( Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ),RRSe ) ) ) + CS ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.8698884758364313, "obj2": 0.04512694094904764}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( MRS / FirstVNF_CPU ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) ) ) + MUM ) )", "obj1": 0.42379182156133827, "obj2": 0.3839875938658618}, {"determining": "( Min( ( FirstVNF_Mem_Server + Min( CRS ,DDR ) ) ,Max( ( ( ( ( ( BR + MRS ) - ( MRS - DDR ) ) + ( FirstVNF_CPU / ( MDR - AMS ) ) ) - MDR ) - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( PN + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( ( CS + RRSe ) - Min( ( RCSe * MUR ) ,CS ) ) ,Min( Min( ( CS + ( RMSe * CS ) ) ,CS ) ,( MUC * ( ( MUM / MUM ) * ( MUR * RCSe ) ) ) ) ),Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( DS ,CS ) ) ) ) ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.46064950960073564}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "Min( Max( ( DDR + ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8660888287832815}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( Const / AMS ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - Min( Min( ( ( ( FirstVNF_Mem - DDR ) * AMS ) * ( FirstVNF_Mem_Server + RRS ) ) ,MRS ) ,( FirstVNF_Mem_Server / DDR ) ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( ( ( CS / Max( ( Max( RMSe,( RMSe + MUR ) ) * RMSe ),MUR ) ) + ( ( ( Min( DS ,MUR ) + Max( RRSe,MUM ) ) + RCSe ) / ( MUR * MUR ) ) ) - DS ) - RMSe )", "obj1": 0.47769516728624534, "obj2": 0.31778288992755255}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,( FirstVNF_RAM + FirstVNF_CPU ) ) * MDR ) ) * ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * ( Max( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ),( CRS + Max( ACS,Const ) ) ) - ( ( PN + DDR ) - FirstVNF_RAM ) ) ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,ACS ),DDR ) ) ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( MUC + ( Max( RMSe,( MUR * RMSe ) ) - RRSe ) ) ) / CS ),RMSe ) * ( ( DS / CS ) - MUM ) )", "obj1": 0.5631970260223048, "obj2": 0.23075213383858822}, {"determining": "( ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( Min( FirstVNF_CPU ,Min( ARS ,FirstVNF_Mem ) ),ARS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / ( ( ACS * MRS ) * RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( RRSe + ( ( MUC + ( Min( ( RCSe * RMSe ) ,RCSe ) - MLU ) ) * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) ) - ( Max( MUR,CS ) + RRSe ) )", "obj1": 0.7360594795539034, "obj2": 0.10689858643678475}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( ( PN / Min( MRS ,Max( FirstVNF_Mem_Server,MRS ) ) ) - ( ( ( ARS * ( Min( MDR ,FirstVNF_RAM ) - CRS ) ) * ( RRS + MDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * Max( ( ( MUC - ( Min( Min( MUR ,MUC ) ,MLU ) * ( MUR / ( CS / RCSe ) ) ) ) * MUC ),Min( MLU ,RRSe ) ) ) / ( DS + MUM ) )", "obj1": 0.741635687732342, "obj2": 0.09912981229360401}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ,( ( ( MLU / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.2342007434944238, "obj2": 0.5941970895525245}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( ( ARS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * Max( MUC,MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.5947955390334573, "obj2": 0.206970309125637}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( ARS - AMS ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( ARS + CRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( MUR - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( Max( MUM,MLU ) + MUM ) )", "obj1": 0.5836431226765799, "obj2": 0.21255682791555436}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15057405982916736}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( ( CRS / FirstVNF_RAM_Server ) + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,Min( RCSe ,MUR ) ) * ( MUM + MUM ) )", "obj1": 0.9646840148698885, "obj2": 0.013023333119728576}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( RCSe * ( ( ( Max( CS,DS ) + MUR ) - MUC ) * RRSe ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4526865994702282}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - BR ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * Max( RCSe,( Min( DS ,( ( ( RCSe - Max( RMSe,MLU ) ) / Max( MUM,MUC ) ) + RMSe ) ) + ( MUM + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.637546468401487, "obj2": 0.17318767670117427}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( RCSe * ( MUC + DS ) ) ),MLU ) + MUR ) )", "obj1": 0.9089219330855018, "obj2": 0.031847174541287514}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ACS,PN ) ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7211895910780669, "obj2": 0.11641542144831385}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( MRS * ( MDR + FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Const ,Max( Min( FirstVNF_RAM_Server ,ACS ),( ( Const / FirstVNF_RAM_Server ) + BR ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( Min( Max( ( ( Min( ( DS / RRSe ) ,MUR ) * RMSe ) + ( RMSe * MUM ) ),( ( ( MLU * ( DS / MUC ) ) - MUR ) - ( MUC * DS ) ) ) ,RMSe ),RMSe ) * ( ( ( ( RRSe * RMSe ) - ( MUM / MUR ) ) / Min( ( DS + MLU ) ,Max( ( ( RRSe * ( MUC - RMSe ) ) - RMSe ),DS ) ) ) + MUM ) )", "obj1": 0.7267657992565055, "obj2": 0.11220401852664165}, {"determining": "Min( ( FirstVNF_CPU_Server - Max( ( ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( CS - RCSe ) ) / ( MUR / Max( ( DS * MLU ),RMSe ) ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + Max( DS,( CS - DS ) ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0022961082502122214}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + ( Max( AMS,Const ) / RRS ) ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,ACS ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( RRSe / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.6617100371747212, "obj2": 0.16056042335281917}, {"determining": "( ( ( FirstVNF_Mem / ( FirstVNF_RAM - RRS ) ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( CS + RCSe ) / ( MUC * ( Min( Max( MUC,DS ) ,RCSe ) / Max( MUM,MUC ) ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( MUR / MLU ) ) + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2000246738664768}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( MDR + RRS ) ,( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,ARS ) ) + FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( ( MUM / ( ( MUC + ( ( ( MLU - DS ) * ( MUM / DS ) ) - RRSe ) ) + ( RCSe - CS ) ) ) + MUM ) )", "obj1": 0.6059479553903345, "obj2": 0.19516664280023813}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( RRS - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / ( Min( ( ( ( MUC / MUR ) * ( DS / DS ) ) + ( RRSe * ( DS + MUC ) ) ) ,RCSe ) * MUC ) ),RMSe ) * ( MUR + MUM ) )", "obj1": 0.6449814126394052, "obj2": 0.16604764845848086}, {"determining": "( Max( ( BR / FirstVNF_RAM ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - ( PN / FirstVNF_Mem ) ) ) ) ) ) ) + ( FirstVNF_RAM_Server * PN ) )", "choosing": "( Max( Max( RCSe,Max( MUR,CS ) ),CS ) - ( Min( MUR ,MUR ) + MUR ) )", "obj1": 0.19888475836431227, "obj2": 0.6298091100515549}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,( PN + Const ) ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MUC ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ) )", "obj1": 0.7509293680297398, "obj2": 0.09390726342721868}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( RMSe - Min( ( MLU + ( MUM / ( DS * ( MLU - RMSe ) ) ) ) ,( ( Min( MUR ,RRSe ) / CS ) + ( MUC / MUR ) ) ) ) - ( DS * CS ) ) )", "obj1": 0.8661710037174721, "obj2": 0.05235046073305124}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( FirstVNF_Mem ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ) )", "obj1": 0.20446096654275092, "obj2": 0.6257912472309474}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_RAM_Server - ( Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) - ( ARS - FirstVNF_RAM_Server ) ) ) ) * ( PN / Min( Max( BR,Max( ( ARS - MRS ),FirstVNF_RAM_Server ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,( MLU - ( ( ( RRSe * ( Min( MUM ,RMSe ) + ( RCSe * MLU ) ) ) / ( MLU / MUM ) ) / ( CS / ( ( DS * RCSe ) / MUR ) ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.8866171003717472, "obj2": 0.04075336132233188}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - Max( FirstVNF_RAM_Server,ARS ) ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * AMS ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( Max( Max( ( MUR / MLU ),( CS - RCSe ) ),DS ) + ( RCSe - MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.6747211895910781, "obj2": 0.14276824941388822}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( ( MDR + Max( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,( BR + ( Max( AMS,ACS ) + ARS ) ) ) )", "choosing": "( Max( RMSe,MUM ) / RCSe )", "obj1": 0.2211895910780669, "obj2": 0.6175983761170347}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,MUC ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ) ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6840148698884758, "obj2": 0.1358587644822}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( Max( ARS,ACS ) / RRS ) ) )", "choosing": "( ( RMSe * Min( DS ,Max( ( Max( MLU,( MUM / ( MUM + RRSe ) ) ) - Max( ( Min( RMSe ,RMSe ) / ( RMSe * CS ) ),( ( RCSe * MUR ) - ( MUR / RCSe ) ) ) ),DS ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.6282527881040892, "obj2": 0.18276778006846237}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( ( RRS / ( CRS - RRS ) ),Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + RRSe ) )", "obj1": 0.7565055762081785, "obj2": 0.09182546876348897}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( PN,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,( MLU + RRSe ) ) - MUM ) * ( RRSe - MUM ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.6338289962825279, "obj2": 0.1805500440757738}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - CRS ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / Max( CS,MUM ) )", "obj1": 0.9758364312267658, "obj2": 0.010086328760122179}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}], "42": [{"determining": "( ( ( BR * Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ACS ) - ARS )", "choosing": "( Min( MUM ,MUM ) / ( RCSe * ( Min( RMSe ,( ( MLU - ( MUC - MUC ) ) + RRSe ) ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( ( PN / Min( ( FirstVNF_RAM_Server - ( MDR - MDR ) ) ,FirstVNF_RAM ) ) + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( ( DS / RMSe ) * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS + FirstVNF_RAM_Server ) ,Max( ( ( Const / FirstVNF_CPU_Server ) - Min( ( Min( ( PN * BR ) ,PN ) + Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) ) ,( PN - PN ) ) ),AMS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / Min( ( BR + PN ) ,( FirstVNF_CPU_Server * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( Max( Max( Max( RCSe,( MLU - ( ( RMSe - Max( DS,RCSe ) ) / ( CS / ( CS / MUR ) ) ) ) ),Min( DS ,( MUR * ( RCSe * ( MUR - MUC ) ) ) ) ),( ( ( ( DS + DS ) + MLU ) * RCSe ) * RRSe ) ) - DS )", "obj1": 0.05204460966542751, "obj2": 0.8707198605923597}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( ( Min( MDR ,FirstVNF_RAM_Server ) - ( Min( RRS ,Min( CRS ,BR ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( ARS + ACS ) ) ) ) ,( ( PN / FirstVNF_Mem ) - Min( Min( DDR ,FirstVNF_CPU ) ,AMS ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( ( RCSe / MUR ) - MUM ) ),( MLU - ( CS + RMSe ) ) ) / CS ),RMSe ) * ( Min( Min( ( MUR + ( ( MUM * ( MUR / MUC ) ) - Min( DS ,RCSe ) ) ) ,MLU ) ,RCSe ) * MUC ) )", "obj1": 0.8513011152416357, "obj2": 0.07886130446900325}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.1171003717472119, "obj2": 0.7504589491932445}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( Max( DDR,( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( Min( MDR ,FirstVNF_CPU ) + Min( Const ,MDR ) ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) ) / RCSe )", "obj1": 0.07063197026022305, "obj2": 0.8117530515433075}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( FirstVNF_RAM_Server * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - ( BR * Const ) ) ) ) )", "choosing": "( ( Min( ( DS + ( Min( MUM ,RCSe ) - ( CS + MUM ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7100371747211895, "obj2": 0.12061204113956969}, {"determining": "( ( Const * Const ) + ( FirstVNF_Mem_Server / ARS ) )", "choosing": "( Max( ( ( RCSe / RCSe ) / MUC ),MUM ) - ( Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( MUM * RRSe ) ) ,DS ) * Min( MUR ,Min( MUR ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) / Min( RCSe ,MLU ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8342982865242957}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) - ( Min( ( AMS + ( FirstVNF_Mem + ( MDR + Const ) ) ) ,FirstVNF_RAM ) * MDR ) )", "choosing": "( ( ( MUR * CS ) * MUM ) / RCSe )", "obj1": 0.3104089219330855, "obj2": 0.5181744921071733}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,MLU ) - MUR ) + DS ) / ( RRSe / MLU ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.32899628252788105, "obj2": 0.4981266222728501}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ( ( RRS - BR ) / BR ) ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - MUM ) / ( MUM - ( MUR + MLU ) ) )", "obj1": 0.9330855018587361, "obj2": 0.021479392072308017}, {"determining": "Min( Min( RRS ,( ( RRS * ( ( CRS / DDR ) - ACS ) ) + Const ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( ( MUM / MUM ) ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.43231800308516455}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + BR ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( ( MUR / CS ) ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( Max( RCSe,Max( Min( Min( MLU ,RCSe ) ,RCSe ),DS ) ) * MUR ) )", "obj1": 0.275092936802974, "obj2": 0.5426840254861152}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( ( BR * MRS ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,Max( Min( FirstVNF_RAM_Server ,( MRS / FirstVNF_CPU ) ),Max( FirstVNF_RAM_Server,ARS ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( DS + RRSe ) / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + ( MUR / Max( ( DS * MLU ),RMSe ) ) ) ) + MUM ) )", "obj1": 0.5631970260223048, "obj2": 0.22963339191361043}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1335658809452099}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( BR,Min( ( RRS + Min( FirstVNF_RAM ,BR ) ) ,ACS ) ) )", "choosing": "( ( DS * ( ( MLU / RRSe ) - Max( RCSe,( Min( MUR ,Min( ( MLU * DS ) ,( MUM + RCSe ) ) ) / MUC ) ) ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / ( RRSe * ( RCSe + MLU ) ) ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.3382899628252788, "obj2": 0.4698648323810837}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ARS ) ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe )", "obj1": 0.2936802973977695, "obj2": 0.5339605182223253}, {"determining": "( Min( MRS ,( ( PN / Max( FirstVNF_RAM,Const ) ) - ( ARS * MDR ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - ( PN - FirstVNF_Mem ) ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * ( RMSe + ( ( RRSe / RRSe ) / CS ) ) ) ) / Max( CS,MUM ) )", "obj1": 0.41263940520446096, "obj2": 0.4186211530315322}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( ARS - AMS ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( ARS + CRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( MUR - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( Max( MUM,MLU ) + MUM ) )", "obj1": 0.5836431226765799, "obj2": 0.21255682791555436}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.44981412639405205, "obj2": 0.37173566298103267}, {"determining": "( PN - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( ( Max( ( MUR - ( MUM - ( MUR * RRSe ) ) ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) * ( MUC + DS ) ) )", "obj1": 0.8568773234200744, "obj2": 0.05395432939842573}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * AMS ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( Max( MUM,DS ) + ( RCSe - MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5576208178438662, "obj2": 0.24853107403560418}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( ( ARS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * Max( MUC,MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.5947955390334573, "obj2": 0.206970309125637}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,( MDR - Max( FirstVNF_CPU,AMS ) ) ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( ( Min( ( FirstVNF_Mem - Max( CRS,Max( ( PN / MDR ),FirstVNF_Mem_Server ) ) ) ,FirstVNF_CPU_Server ) + Max( MRS,BR ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,RMSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,( MUM + RCSe ) ) ) ),RMSe ) * Min( Max( ( Min( RRSe ,( RRSe + MLU ) ) / RMSe ),MUM ) ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.2992565055762082, "obj2": 0.5264525842772612}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( Const / AMS ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - Min( Min( ( ( ( FirstVNF_Mem - DDR ) * AMS ) * ( FirstVNF_Mem_Server + RRS ) ) ,MRS ) ,( FirstVNF_Mem_Server / DDR ) ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( ( ( CS / Max( ( Max( RMSe,( RMSe + MUR ) ) * RMSe ),MUR ) ) + ( ( ( Min( DS ,MUR ) + Max( RRSe,MUM ) ) + RCSe ) / ( MUR * MUR ) ) ) - DS ) - RMSe )", "obj1": 0.47769516728624534, "obj2": 0.31778288992755255}, {"determining": "Min( ( FirstVNF_CPU_Server - Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( MDR ,MDR ) - RRS ) ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( ( ( ( Max( CS,RMSe ) - MUR ) + DS ) / ( MUR / Max( ( DS * MLU ),( MUC + MUM ) ) ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + Max( DS,( CS - DS ) ) ) ) )", "obj1": 0.9591078066914498, "obj2": 0.019565773446501088}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( MRS / FirstVNF_CPU ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) ) ) + MUM ) )", "obj1": 0.42379182156133827, "obj2": 0.3839875938658618}, {"determining": "( Min( ( FirstVNF_Mem_Server + Min( CRS ,DDR ) ) ,Max( ( ( ( ( ( BR + MRS ) - ( MRS - DDR ) ) + ( FirstVNF_CPU / ( MDR - AMS ) ) ) - MDR ) - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( PN + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( ( CS + RRSe ) - Min( ( RCSe * MUR ) ,CS ) ) ,Min( Min( ( CS + ( RMSe * CS ) ) ,CS ) ,( MUC * ( ( MUM / MUM ) * ( MUR * RCSe ) ) ) ) ),Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( Max( ( DDR + ( CRS + ( ( FirstVNF_Mem - ( ARS / FirstVNF_CPU ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.05390334572490706, "obj2": 0.8630122218605819}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + ( Max( AMS,Const ) / RRS ) ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,ACS ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( RRSe / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.6617100371747212, "obj2": 0.16056042335281917}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( DS ,CS ) ) ) ) ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.46064950960073564}, {"determining": "( ( ( ( PN / ( ARS * MDR ) ) - Const ) * Max( Min( FirstVNF_CPU ,Min( ARS ,FirstVNF_Mem ) ),ARS ) ) * Max( ( AMS - Max( ( AMS / ( FirstVNF_Mem_Server + RRS ) ),( AMS / ( ( ACS * MRS ) * RRS ) ) ) ),( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "( ( RRSe + ( ( MUC + ( Min( ( RCSe * RMSe ) ,RCSe ) - MLU ) ) * Max( ( MUC / CS ),Min( MLU ,RRSe ) ) ) ) - ( Max( MUR,CS ) + RRSe ) )", "obj1": 0.7360594795539034, "obj2": 0.10689858643678475}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ,( ( ( MLU / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.2342007434944238, "obj2": 0.5941970895525245}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - Max( FirstVNF_RAM_Server,ARS ) ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * AMS ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( Max( Max( ( MUR / MLU ),( CS - RCSe ) ),DS ) + ( RCSe - MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.6747211895910781, "obj2": 0.14276824941388822}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( Max( ARS,ACS ) / RRS ) ) )", "choosing": "( ( RMSe * Min( DS ,Max( ( Max( MLU,( MUM / ( MUM + RRSe ) ) ) - Max( ( Min( RMSe ,RMSe ) / ( RMSe * CS ) ),( ( RCSe * MUR ) - ( MUR / RCSe ) ) ) ),DS ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.6282527881040892, "obj2": 0.18276778006846237}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( RCSe * ( ( ( Max( CS,DS ) + MUR ) - MUC ) * RRSe ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4526865994702282}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( RCSe * ( MUC + DS ) ) ),MLU ) + MUR ) )", "obj1": 0.9089219330855018, "obj2": 0.031847174541287514}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ACS,PN ) ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7211895910780669, "obj2": 0.11641542144831385}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( MRS * ( MDR + FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Const ,Max( Min( FirstVNF_RAM_Server ,ACS ),( ( Const / FirstVNF_RAM_Server ) + BR ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( Min( Max( ( ( Min( ( DS / RRSe ) ,MUR ) * RMSe ) + ( RMSe * MUM ) ),( ( ( MLU * ( DS / MUC ) ) - MUR ) - ( MUC * DS ) ) ) ,RMSe ),RMSe ) * ( ( ( ( RRSe * RMSe ) - ( MUM / MUR ) ) / Min( ( DS + MLU ) ,Max( ( ( RRSe * ( MUC - RMSe ) ) - RMSe ),DS ) ) ) + MUM ) )", "obj1": 0.7267657992565055, "obj2": 0.11220401852664165}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "( Max( MDR,Max( CRS,( MRS - ( AMS - BR ) ) ) ) - ( Max( Const,MRS ) * MDR ) )", "choosing": "( Max( ( MUR * MUM ),Max( MUR,DS ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5568618412645683}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU_Server - Min( MRS ,FirstVNF_CPU ) ) / ( ( PN - ARS ) / ( ARS - FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),RRS ) - MRS ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - Max( MUR,RRSe ) ) / ( RCSe * Min( CS ,RCSe ) ) )", "obj1": 0.8698884758364313, "obj2": 0.04512694094904764}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "Min( ( FirstVNF_CPU_Server - Max( ( ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) - FirstVNF_RAM_Server ),( Min( ARS ,MDR ) - RRS ) ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( CS - RCSe ) ) / ( MUR / Max( ( DS * MLU ),RMSe ) ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + Max( DS,( CS - DS ) ) ) ) )", "obj1": 0.9925650557620818, "obj2": 0.0022961082502122214}, {"determining": "( ( ( FirstVNF_Mem / ( FirstVNF_RAM - RRS ) ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( CS + RCSe ) / ( MUC * ( Min( Max( MUC,DS ) ,RCSe ) / Max( MUM,MUC ) ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( MUR / MLU ) ) + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2000246738664768}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_RAM_Server - ( Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) - ( ARS - FirstVNF_RAM_Server ) ) ) ) * ( PN / Min( Max( BR,Max( ( ARS - MRS ),FirstVNF_RAM_Server ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,( MLU - ( ( ( RRSe * ( Min( MUM ,RMSe ) + ( RCSe * MLU ) ) ) / ( MLU / MUM ) ) / ( CS / ( ( DS * RCSe ) / MUR ) ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.8866171003717472, "obj2": 0.04075336132233188}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( MDR + RRS ) ,( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,ARS ) ) + FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( ( MUM / ( ( MUC + ( ( ( MLU - DS ) * ( MUM / DS ) ) - RRSe ) ) + ( RCSe - CS ) ) ) + MUM ) )", "obj1": 0.6059479553903345, "obj2": 0.19516664280023813}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),Min( Const ,MDR ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7885918579018925}, {"determining": "( Max( ( BR / FirstVNF_RAM ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - ( PN / FirstVNF_Mem ) ) ) ) ) ) ) + ( FirstVNF_RAM_Server * PN ) )", "choosing": "( Max( Max( RCSe,Max( MUR,CS ) ),CS ) - ( Min( MUR ,MUR ) + MUR ) )", "obj1": 0.19888475836431227, "obj2": 0.6298091100515549}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - CRS ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / Max( CS,MUM ) )", "obj1": 0.9758364312267658, "obj2": 0.010086328760122179}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( RRS - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / ( Min( ( ( ( MUC / MUR ) * ( DS / DS ) ) + ( RRSe * ( DS + MUC ) ) ) ,RCSe ) * MUC ) ),RMSe ) * ( MUR + MUM ) )", "obj1": 0.6449814126394052, "obj2": 0.16604764845848086}, {"determining": "( ( ( ( RRS - BR ) / Max( ( Min( PN ,MRS ) * FirstVNF_Mem_Server ),FirstVNF_CPU_Server ) ) / ( ( PN / ( FirstVNF_CPU + PN ) ) / FirstVNF_CPU ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( DDR,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( Max( ( MUR / Max( Min( RRSe ,MUR ),( RMSe + MLU ) ) ),MUC ),( RRSe / RMSe ) ) / CS ),RMSe ) * ( MUR + MUM ) )", "obj1": 0.6505576208178439, "obj2": 0.16418351336146184}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( RMSe - Min( ( MLU + ( MUM / ( DS * ( MLU - RMSe ) ) ) ) ,( ( Min( MUR ,RRSe ) / CS ) + ( MUC / MUR ) ) ) ) - ( DS * CS ) ) )", "obj1": 0.8661710037174721, "obj2": 0.05235046073305124}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15057405982916736}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( ( CRS / FirstVNF_RAM_Server ) + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,Min( RCSe ,MUR ) ) * ( MUM + MUM ) )", "obj1": 0.9646840148698885, "obj2": 0.013023333119728576}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( MDR + Max( ( CRS + ( FirstVNF_RAM - FirstVNF_CPU ) ),FirstVNF_CPU_Server ) ) - Max( FirstVNF_Mem_Server,( BR + ( Max( AMS,ACS ) + ARS ) ) ) )", "choosing": "( Max( RMSe,MUM ) / RCSe )", "obj1": 0.2211895910780669, "obj2": 0.6175983761170347}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,MUC ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ) ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6840148698884758, "obj2": 0.1358587644822}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( ( PN / Min( MRS ,Max( FirstVNF_Mem_Server,MRS ) ) ) - ( ( ( ARS * ( Min( MDR ,FirstVNF_RAM ) - CRS ) ) * ( RRS + MDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * Max( ( ( MUC - ( Min( Min( MUR ,MUC ) ,MLU ) * ( MUR / ( CS / RCSe ) ) ) ) * MUC ),Min( MLU ,RRSe ) ) ) / ( DS + MUM ) )", "obj1": 0.741635687732342, "obj2": 0.09912981229360401}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( ( RRS / ( CRS - RRS ) ),Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + RRSe ) )", "obj1": 0.7565055762081785, "obj2": 0.09182546876348897}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( Min( MRS ,AMS ) - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - ( ( RCSe / RRSe ) * RCSe ) ) ,RMSe ) ) )", "obj1": 0.4739776951672863, "obj2": 0.3220847622325562}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4479553903345725, "obj2": 0.37470277242815186}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - BR ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * Max( RCSe,( Min( DS ,( ( ( RCSe - Max( RMSe,MLU ) ) / Max( MUM,MUC ) ) + RMSe ) ) + ( MUM + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.637546468401487, "obj2": 0.17318767670117427}], "43": [{"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( Min( Min( RRS ,FirstVNF_RAM ) ,FirstVNF_RAM_Server ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR * Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * ACS ) - ARS )", "choosing": "( Min( MUM ,MUM ) / ( RCSe * ( Min( RMSe ,( ( MLU - ( MUC - MUC ) ) + RRSe ) ) + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,Max( FirstVNF_RAM,MDR ) ) ,Max( FirstVNF_CPU_Server,Min( Max( BR,( ( ( PN * ( FirstVNF_CPU - PN ) ) + Max( Const,FirstVNF_Mem_Server ) ) + DDR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( ( RCSe + ( RCSe - RRSe ) ) ,Max( Min( RMSe ,RMSe ),RMSe ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( MLU + ( ( DS * Max( ( CS - MUM ),MLU ) ) + Min( RRSe ,Min( MUM ,RMSe ) ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8567712199609253}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "( ( ( BR * ( MRS / PN ) ) * ACS ) - ( RRS - ( ( ( ( FirstVNF_CPU_Server + MDR ) / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ,Const ) ) ) ) * Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( MUM / ( MUM + ( ( Max( RCSe,( RRSe - ( CS / MUM ) ) ) - Max( RCSe,RCSe ) ) + MUC ) ) ) / ( RCSe * ( MUC + ( MLU / MUC ) ) ) )", "obj1": 0.8215613382899628, "obj2": 0.07009815256827011}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.1171003717472119, "obj2": 0.7504589491932445}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_Mem_Server + RRS ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( CS + RCSe ) / ( MUC * ( ( DS + CS ) / Max( MUM,RMSe ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.2581313194829769}, {"determining": "( ( Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) ) / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( PN * BR ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( RCSe / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) )", "obj1": 0.2992565055762082, "obj2": 0.508507237420104}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ARS ) ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe )", "obj1": 0.2936802973977695, "obj2": 0.5339605182223253}, {"determining": "( Max( ( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ),( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( Min( MDR ,FirstVNF_CPU ) + Min( Const ,MDR ) ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( ( RMSe - CS ) * RCSe ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) ) / RCSe )", "obj1": 0.07063197026022305, "obj2": 0.8104710187883001}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( BR,Min( ( RRS + Min( FirstVNF_RAM ,BR ) ) ,ACS ) ) )", "choosing": "( ( DS * ( ( MLU / RRSe ) - Max( RCSe,( Min( MUR ,Min( ( MLU * DS ) ,( MUM + RCSe ) ) ) / MUC ) ) ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / ( RRSe * ( RCSe + MLU ) ) ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.3382899628252788, "obj2": 0.4698648323810837}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( FirstVNF_RAM_Server * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - ( BR * Const ) ) ) ) )", "choosing": "( ( Min( ( DS + ( Min( MUM ,RCSe ) - ( CS + MUM ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7100371747211895, "obj2": 0.12061204113956969}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU_Server - Min( MRS ,FirstVNF_CPU ) ) / ( ( PN - ARS ) / ( ARS - FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),RRS ) - MRS ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - Max( MUR,RRSe ) ) / ( RCSe * Min( CS ,RCSe ) ) )", "obj1": 0.8401486988847584, "obj2": 0.06892990344028986}, {"determining": "Min( Max( ( DDR + ( CRS + ( ( FirstVNF_Mem - ( ARS / MRS ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),( Min( PN ,( BR / ( FirstVNF_Mem_Server / DDR ) ) ) + FirstVNF_CPU_Server ) ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( MUM / ( CS * DS ) ) + ( MLU / DS ) ) ) - ( ( RCSe - ( Max( ( RRSe + RCSe ),RMSe ) / MLU ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8325742039751838}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( MUR,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.3696692496026967}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,MLU ) - MUR ) + DS ) / ( RRSe / MLU ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.32899628252788105, "obj2": 0.4981266222728501}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + BR ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( ( MUR / CS ) ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( Max( RCSe,Max( Min( Min( MLU ,RCSe ) ,RCSe ),DS ) ) * MUR ) )", "obj1": 0.275092936802974, "obj2": 0.5426840254861152}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( ( BR * MRS ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,Max( Min( FirstVNF_RAM_Server ,( MRS / FirstVNF_CPU ) ),Max( FirstVNF_RAM_Server,ARS ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( DS + RRSe ) / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + ( MUR / Max( ( DS * MLU ),RMSe ) ) ) ) + MUM ) )", "obj1": 0.5631970260223048, "obj2": 0.22963339191361043}, {"determining": "( PN - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( ( Max( ( MUR - ( MUM - ( MUR * RRSe ) ) ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) * ( MUC + DS ) ) )", "obj1": 0.8568773234200744, "obj2": 0.05395432939842573}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1335658809452099}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( Min( MRS ,( ( PN / Max( FirstVNF_RAM,Const ) ) - ( ARS * MDR ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - ( PN - FirstVNF_Mem ) ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * ( RMSe + ( ( RRSe / RRSe ) / CS ) ) ) ) / Max( CS,MUM ) )", "obj1": 0.41263940520446096, "obj2": 0.4186211530315322}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ,( ( ( ( Max( MUM,MLU ) + MUM ) / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.9442379182156134, "obj2": 0.015383370850820985}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * AMS ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( Max( MUM,DS ) + ( RCSe - MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5576208178438662, "obj2": 0.24853107403560418}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( Max( ARS,ACS ) / RRS ) ) )", "choosing": "( ( RMSe * Min( DS ,Max( ( Max( MLU,( MUM / ( MUM + RRSe ) ) ) - Max( ( Min( RMSe ,RMSe ) / ( RMSe * CS ) ),( ( RCSe * MUR ) - ( MUR / RCSe ) ) ) ),DS ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.6282527881040892, "obj2": 0.18276778006846237}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( ARS - AMS ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( ARS + CRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( MUR - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( Max( MUM,MLU ) + MUM ) )", "obj1": 0.5836431226765799, "obj2": 0.21255682791555436}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_RAM_Server - ( Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) - ( ARS - FirstVNF_RAM_Server ) ) ) ) * ( PN / Min( Max( BR,Max( ( ARS - MRS ),FirstVNF_RAM_Server ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,( MLU - ( ( ( RRSe * ( Min( MUM ,RMSe ) + ( RCSe * MLU ) ) ) / ( MLU / MUM ) ) / ( CS / ( ( DS * RCSe ) / MUR ) ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.8866171003717472, "obj2": 0.04075336132233188}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( ( CRS / FirstVNF_RAM_Server ) + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,Min( RCSe ,MUR ) ) * ( MUM + MUM ) )", "obj1": 0.9646840148698885, "obj2": 0.013023333119728576}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ( ( RRS - BR ) / BR ) ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - MUM ) / ( MUM - ( MUR + MLU ) ) )", "obj1": 0.9330855018587361, "obj2": 0.021479392072308017}, {"determining": "( ( PN / Min( MRS ,Max( FirstVNF_Mem_Server,MRS ) ) ) - ( ( ( ARS * ( Min( MDR ,FirstVNF_RAM ) - CRS ) ) * ( RRS + MDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * Max( ( ( MUC - ( Min( Min( MUR ,MUC ) ,MLU ) * ( MUR / ( CS / RCSe ) ) ) ) * MUC ),Min( MLU ,RRSe ) ) ) / ( DS + MUM ) )", "obj1": 0.741635687732342, "obj2": 0.09912981229360401}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Max( ( BR / FirstVNF_RAM ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - ( PN / FirstVNF_Mem ) ) ) ) ) ) ) + ( FirstVNF_RAM_Server * PN ) )", "choosing": "( Max( Max( RCSe,Max( MUR,CS ) ),CS ) - ( Min( MUR ,MUR ) + MUR ) )", "obj1": 0.19888475836431227, "obj2": 0.6298091100515549}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "( Max( MDR,Max( CRS,( MRS - ( AMS - BR ) ) ) ) - ( Max( Const,MRS ) * MDR ) )", "choosing": "( Max( ( MUR * MUM ),Max( MUR,DS ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5568618412645683}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),Min( Const ,MDR ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7885918579018925}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( ( RRS / ( CRS - RRS ) ),Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + RRSe ) )", "obj1": 0.7565055762081785, "obj2": 0.09182546876348897}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - BR ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * Max( RCSe,( Min( DS ,( ( ( RCSe - Max( RMSe,MLU ) ) / Max( MUM,MUC ) ) + RMSe ) ) + ( MUM + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.637546468401487, "obj2": 0.17318767670117427}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( ( ARS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * Max( MUC,MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.5947955390334573, "obj2": 0.206970309125637}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( Const / AMS ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - Min( Min( ( ( ( FirstVNF_Mem - DDR ) * AMS ) * ( FirstVNF_Mem_Server + RRS ) ) ,MRS ) ,( FirstVNF_Mem_Server / DDR ) ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( ( ( CS / Max( ( Max( RMSe,( RMSe + MUR ) ) * RMSe ),MUR ) ) + ( ( ( Min( DS ,MUR ) + Max( RRSe,MUM ) ) + RCSe ) / ( MUR * MUR ) ) ) - DS ) - RMSe )", "obj1": 0.47769516728624534, "obj2": 0.31778288992755255}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU_Server - Min( MRS ,FirstVNF_CPU ) ) / ( ( PN - ARS ) / ( ARS - FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),RRS ) - MRS ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - Max( MUR,RRSe ) ) / ( RCSe * Min( CS ,RCSe ) ) )", "obj1": 0.8698884758364313, "obj2": 0.04512694094904764}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( MRS / FirstVNF_CPU ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) ) ) + MUM ) )", "obj1": 0.42379182156133827, "obj2": 0.3839875938658618}, {"determining": "( Min( ( FirstVNF_Mem_Server + Min( CRS ,DDR ) ) ,Max( ( ( ( ( ( BR + MRS ) - ( MRS - DDR ) ) + ( FirstVNF_CPU / ( MDR - AMS ) ) ) - MDR ) - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( PN + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( ( CS + RRSe ) - Min( ( RCSe * MUR ) ,CS ) ) ,Min( Min( ( CS + ( RMSe * CS ) ) ,CS ) ,( MUC * ( ( MUM / MUM ) * ( MUR * RCSe ) ) ) ) ),Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( DS ,CS ) ) ) ) ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.46064950960073564}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - CRS ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / Max( CS,MUM ) )", "obj1": 0.9758364312267658, "obj2": 0.010086328760122179}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Min( MRS ,Min( AMS ,Const ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( Min( AMS ,FirstVNF_Mem ),ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( MLU + ( MUM - ( MUR * RRSe ) ) ) / ( ( ( ( RCSe / ( RMSe / MLU ) ) / ( ( RMSe / RRSe ) / CS ) ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( RMSe + MUM ) ) / RCSe ) ) )", "obj1": 0.7360594795539034, "obj2": 0.10682751276529846}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ,( ( ( MLU / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.2342007434944238, "obj2": 0.5941970895525245}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,( MRS + AMS ) ) ) ) ) ) - ( ( FirstVNF_CPU_Server * Max( ARS,FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( ( ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) + CS ) + MUC ),Max( MLU,MUC ) ) )", "obj1": 0.4646840148698885, "obj2": 0.33668318023370886}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( RCSe * ( ( ( Max( CS,DS ) + MUR ) - MUC ) * RRSe ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4526865994702282}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ACS,PN ) ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7211895910780669, "obj2": 0.11641542144831385}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( MRS * ( MDR + FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Const ,Max( Min( FirstVNF_RAM_Server ,ACS ),( ( Const / FirstVNF_RAM_Server ) + BR ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( Min( Max( ( ( Min( ( DS / RRSe ) ,MUR ) * RMSe ) + ( RMSe * MUM ) ),( ( ( MLU * ( DS / MUC ) ) - MUR ) - ( MUC * DS ) ) ) ,RMSe ),RMSe ) * ( ( ( ( RRSe * RMSe ) - ( MUM / MUR ) ) / Min( ( DS + MLU ) ,Max( ( ( RRSe * ( MUC - RMSe ) ) - RMSe ),DS ) ) ) + MUM ) )", "obj1": 0.7267657992565055, "obj2": 0.11220401852664165}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "Min( ( FirstVNF_CPU_Server - Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Min( MDR ,MDR ) - RRS ) ) ) ,Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( FirstVNF_CPU_Server + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,Min( PN ,BR ) ) ) ) ) )", "choosing": "( ( ( ( ( Max( Max( ( MUR / MLU ),( CS - RCSe ) ),DS ) + ( RCSe - MLU ) ) - MUR ) + DS ) / ( MUR / Max( ( DS * MLU ),( MUC + MUM ) ) ) ) - ( ( DS + MUM ) / ( ( MUC * MUC ) + Max( DS,( CS - DS ) ) ) ) )", "obj1": 0.9869888475836431, "obj2": 0.005096173484855408}, {"determining": "Min( Min( RRS ,( ( RRS * ( ( CRS / DDR ) - ACS ) ) + Const ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( ( MUM / MUM ) ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.43231800308516455}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15057405982916736}, {"determining": "( ( ( FirstVNF_Mem / ( FirstVNF_RAM - RRS ) ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( CS + RCSe ) / ( MUC * ( Min( Max( MUC,DS ) ,RCSe ) / Max( MUM,MUC ) ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( MUR / MLU ) ) + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2000246738664768}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( MDR + RRS ) ,( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,ARS ) ) + FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( ( MUM / ( ( MUC + ( ( ( MLU - DS ) * ( MUM / DS ) ) - RRSe ) ) + ( RCSe - CS ) ) ) + MUM ) )", "obj1": 0.6059479553903345, "obj2": 0.19516664280023813}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + ( Max( AMS,Const ) / RRS ) ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,ACS ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( RRSe / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.6617100371747212, "obj2": 0.16056042335281917}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( RRS - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / ( Min( ( ( ( MUC / MUR ) * ( DS / DS ) ) + ( RRSe * ( DS + MUC ) ) ) ,RCSe ) * MUC ) ),RMSe ) * ( MUR + MUM ) )", "obj1": 0.6449814126394052, "obj2": 0.16604764845848086}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.44112697712044624}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( RMSe - Min( ( MLU + ( MUM / ( DS * ( MLU - RMSe ) ) ) ) ,( ( Min( MUR ,RRSe ) / CS ) + ( MUC / MUR ) ) ) ) - ( DS * CS ) ) )", "obj1": 0.8661710037174721, "obj2": 0.05235046073305124}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,MUC ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ) ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6840148698884758, "obj2": 0.1358587644822}, {"determining": "Min( Min( RRS ,( ( RRS * ( ( CRS / DDR ) - ACS ) ) + Const ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS * MDR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( MUM,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( ( MUM / MUM ) ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.3680297397769517, "obj2": 0.4371840415412432}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( Min( MRS ,AMS ) - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - ( ( RCSe / RRSe ) * RCSe ) ) ,RMSe ) ) )", "obj1": 0.4739776951672863, "obj2": 0.3220847622325562}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( RCSe * ( MUC + DS ) ) ),MLU ) + MUR ) )", "obj1": 0.9089219330855018, "obj2": 0.031847174541287514}, {"determining": "( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) - Min( PN ,BR ) )", "choosing": "( ( MLU * ( ( CS + RCSe ) / ( MUC * ( ( DS + CS ) / Max( MUM,MUC ) ) ) ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.6691449814126395, "obj2": 0.1447691228339965}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( PN * ( PN / ( FirstVNF_CPU * MDR ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( RCSe / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( MUR ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.11524163568773234, "obj2": 0.7512048070741628}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( CS + RCSe ) / ( MUC * ( ( DS + ( MUM * Min( DS ,RRSe ) ) ) / Max( MUM,MUC ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.9107806691449815, "obj2": 0.031057717770061364}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}], "44": [{"determining": "( Min( ( ( MDR - Min( ( ( Const - ARS ) + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,BR ) ) ,Max( FirstVNF_Mem,AMS ) ) - Min( PN ,BR ) )", "choosing": "( ( MLU * ( ( CS + RCSe ) / ( MUC * ( ( DS + CS ) / Min( ( ( RCSe + MLU ) - DS ) ,DS ) ) ) ) ) / ( RMSe * ( RCSe + ( ( DS + CS ) / Max( MUM,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( Min( Min( RRS ,FirstVNF_RAM ) ,FirstVNF_RAM_Server ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( MDR + Max( ( CRS / MDR ),Max( Min( Const ,( PN - ( ( FirstVNF_Mem - DDR ) - AMS ) ) ),PN ) ) ) )", "choosing": "( Max( RMSe,( ( MUR - ( ( ( MUM - DS ) + Max( ( RMSe * RRSe ),MUR ) ) + MUM ) ) * Max( MUR,RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,Max( FirstVNF_RAM,MDR ) ) ,Max( FirstVNF_CPU_Server,Min( Max( BR,( ( ( PN * ( FirstVNF_CPU - PN ) ) + Max( Const,FirstVNF_Mem_Server ) ) + DDR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( ( RCSe + ( RCSe - RRSe ) ) ,Max( Min( RMSe ,RMSe ),RMSe ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( MLU + ( ( DS * Max( ( CS - MUM ),MLU ) ) + Min( RRSe ,Min( MUM ,RMSe ) ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8567712199609253}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "( ( ( BR * ( MRS / PN ) ) * ACS ) - ( RRS - ( ( ( ( FirstVNF_CPU_Server + MDR ) / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ,Const ) ) ) ) * Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( MUM / ( MUM + ( ( Max( RCSe,( RRSe - ( CS / MUM ) ) ) - Max( RCSe,RCSe ) ) + MUC ) ) ) / ( RCSe * ( MUC + ( MLU / MUC ) ) ) )", "obj1": 0.8215613382899628, "obj2": 0.07009815256827011}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.1171003717472119, "obj2": 0.7504589491932445}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_Mem_Server + RRS ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( CS + RCSe ) / ( MUC * ( ( DS + CS ) / Max( MUM,RMSe ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.2581313194829769}, {"determining": "( ( Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) ) / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( PN * BR ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( RCSe / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) )", "obj1": 0.2992565055762082, "obj2": 0.508507237420104}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ARS ) ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe )", "obj1": 0.2936802973977695, "obj2": 0.5339605182223253}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( FirstVNF_RAM_Server * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - ( BR * Const ) ) ) ) )", "choosing": "( ( Min( ( DS + ( Min( MUM ,RCSe ) - ( CS + MUM ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7100371747211895, "obj2": 0.12061204113956969}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU_Server - Min( MRS ,FirstVNF_CPU ) ) / ( ( PN - ARS ) / ( ARS - FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),RRS ) - MRS ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - Max( MUR,RRSe ) ) / ( RCSe * Min( CS ,RCSe ) ) )", "obj1": 0.8401486988847584, "obj2": 0.06892990344028986}, {"determining": "Min( Max( ( DDR + ( CRS + ( ( FirstVNF_Mem - ( ARS / MRS ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),( Min( PN ,( BR / ( FirstVNF_Mem_Server / DDR ) ) ) + FirstVNF_CPU_Server ) ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( MUM / ( CS * DS ) ) + ( MLU / DS ) ) ) - ( ( RCSe - ( Max( ( RRSe + RCSe ),RMSe ) / MLU ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8325742039751838}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( BR,Min( ( RRS + Min( FirstVNF_RAM ,BR ) ) ,ACS ) ) )", "choosing": "( ( DS * ( ( MLU / RRSe ) - Max( RCSe,( Min( MUR ,Min( ( MLU * DS ) ,( MUM + RCSe ) ) ) / MUC ) ) ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / ( RRSe * ( RCSe + MLU ) ) ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.3382899628252788, "obj2": 0.4698648323810837}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( MUR,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.3696692496026967}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,MLU ) - MUR ) + DS ) / ( RRSe / MLU ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.32899628252788105, "obj2": 0.4981266222728501}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + BR ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( ( MUR / CS ) ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( Max( RCSe,Max( Min( Min( MLU ,RCSe ) ,RCSe ),DS ) ) * MUR ) )", "obj1": 0.275092936802974, "obj2": 0.5426840254861152}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( ( BR * MRS ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,Max( Min( FirstVNF_RAM_Server ,( MRS / FirstVNF_CPU ) ),Max( FirstVNF_RAM_Server,ARS ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( DS + RRSe ) / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + ( MUR / Max( ( DS * MLU ),RMSe ) ) ) ) + MUM ) )", "obj1": 0.5631970260223048, "obj2": 0.22963339191361043}, {"determining": "( PN - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( ( Max( ( MUR - ( MUM - ( MUR * RRSe ) ) ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) * ( MUC + DS ) ) )", "obj1": 0.8568773234200744, "obj2": 0.05395432939842573}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( CS + MUR ) ) / RCSe ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1335658809452099}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( Min( MRS ,( ( PN / Max( FirstVNF_RAM,Const ) ) - ( ARS * MDR ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - ( PN - FirstVNF_Mem ) ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * ( RMSe + ( ( RRSe / RRSe ) / CS ) ) ) ) / Max( CS,MUM ) )", "obj1": 0.41263940520446096, "obj2": 0.4186211530315322}, {"determining": "( Max( ( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ),( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( Min( MDR ,FirstVNF_CPU ) + Min( Const ,MDR ) ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( ( RMSe - CS ) * RCSe ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) ) / RCSe )", "obj1": 0.07063197026022305, "obj2": 0.8104710187883001}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( Max( ARS,ACS ) / RRS ) ) )", "choosing": "( ( RMSe * Min( DS ,Max( ( Max( MLU,( MUM / ( MUM + RRSe ) ) ) - Max( ( Min( RMSe ,RMSe ) / ( RMSe * CS ) ),( ( RCSe * MUR ) - ( MUR / RCSe ) ) ) ),DS ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.6282527881040892, "obj2": 0.18276778006846237}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( ARS - AMS ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( ARS + CRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( MUR - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( Max( MUM,MLU ) + MUM ) )", "obj1": 0.5836431226765799, "obj2": 0.21255682791555436}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ( ( RRS - BR ) / BR ) ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - MUM ) / ( MUM - ( MUR + MLU ) ) )", "obj1": 0.9330855018587361, "obj2": 0.021479392072308017}, {"determining": "( ( PN / Min( MRS ,Max( FirstVNF_Mem_Server,MRS ) ) ) - ( ( ( ARS * ( Min( MDR ,FirstVNF_RAM ) - CRS ) ) * ( RRS + MDR ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * Max( ( ( MUC - ( Min( Min( MUR ,MUC ) ,MLU ) * ( MUR / ( CS / RCSe ) ) ) ) * MUC ),Min( MLU ,RRSe ) ) ) / ( DS + MUM ) )", "obj1": 0.741635687732342, "obj2": 0.09912981229360401}, {"determining": "( ( ARS - FirstVNF_RAM_Server ) / ( ( Min( MRS ,DDR ) + ( ( FirstVNF_CPU_Server * PN ) * ( RRS * ( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) ) ) * RRS ) )", "choosing": "Max( ( Min( ( RCSe + CS ) ,( RCSe / MLU ) ) / ( MUM * MLU ) ),( Min( ( RMSe * ( ( ( MLU * CS ) * RMSe ) - Min( ( DS - ( MUC * RRSe ) ) ,MUC ) ) ) ,CS ) - MUM ) )", "obj1": 0.4163568773234201, "obj2": 0.4004484252481007}, {"determining": "( Max( ( BR / FirstVNF_RAM ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - ( PN / FirstVNF_Mem ) ) ) ) ) ) ) + ( FirstVNF_RAM_Server * PN ) )", "choosing": "( Max( Max( RCSe,Max( MUR,CS ) ),CS ) - ( Min( MUR ,MUR ) + MUR ) )", "obj1": 0.19888475836431227, "obj2": 0.6298091100515549}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "( Max( MDR,Max( CRS,( MRS - ( AMS - BR ) ) ) ) - ( Max( Const,MRS ) * MDR ) )", "choosing": "( Max( ( MUR * MUM ),Max( MUR,DS ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5568618412645683}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),Min( Const ,MDR ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7885918579018925}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - BR ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * Max( RCSe,( Min( DS ,( ( ( RCSe - Max( RMSe,MLU ) ) / Max( MUM,MUC ) ) + RMSe ) ) + ( MUM + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.637546468401487, "obj2": 0.17318767670117427}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( ( CRS / FirstVNF_RAM_Server ) + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,Min( RCSe ,MUR ) ) * ( MUM + MUM ) )", "obj1": 0.9646840148698885, "obj2": 0.013023333119728576}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( Const / AMS ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - Min( Min( ( ( ( FirstVNF_Mem - DDR ) * AMS ) * ( FirstVNF_Mem_Server + RRS ) ) ,MRS ) ,( FirstVNF_Mem_Server / DDR ) ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( ( ( CS / Max( ( Max( RMSe,( RMSe + MUR ) ) * RMSe ),MUR ) ) + ( ( ( Min( DS ,MUR ) + Max( RRSe,MUM ) ) + RCSe ) / ( MUR * MUR ) ) ) - DS ) - RMSe )", "obj1": 0.47769516728624534, "obj2": 0.31778288992755255}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( ( ARS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * Max( MUC,MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.5947955390334573, "obj2": 0.206970309125637}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU_Server - Min( MRS ,FirstVNF_CPU ) ) / ( ( PN - ARS ) / ( ARS - FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),RRS ) - MRS ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - Max( MUR,RRSe ) ) / ( RCSe * Min( CS ,RCSe ) ) )", "obj1": 0.8698884758364313, "obj2": 0.04512694094904764}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( MRS / FirstVNF_CPU ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) ) ) + MUM ) )", "obj1": 0.42379182156133827, "obj2": 0.3839875938658618}, {"determining": "( Min( ( FirstVNF_Mem_Server + Min( CRS ,DDR ) ) ,Max( ( ( ( ( ( BR + MRS ) - ( MRS - DDR ) ) + ( FirstVNF_CPU / ( MDR - AMS ) ) ) - MDR ) - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( PN + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( ( CS + RRSe ) - Min( ( RCSe * MUR ) ,CS ) ) ,Min( Min( ( CS + ( RMSe * CS ) ) ,CS ) ,( MUC * ( ( MUM / MUM ) * ( MUR * RCSe ) ) ) ) ),Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( ( RRS / ( CRS - RRS ) ),Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + RRSe ) )", "obj1": 0.7565055762081785, "obj2": 0.09182546876348897}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Min( MRS ,Min( AMS ,Const ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( Min( AMS ,FirstVNF_Mem ),ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( MLU + ( MUM - ( MUR * RRSe ) ) ) / ( ( ( ( RCSe / ( RMSe / MLU ) ) / ( ( RMSe / RRSe ) / CS ) ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( RMSe + MUM ) ) / RCSe ) ) )", "obj1": 0.7360594795539034, "obj2": 0.10682751276529846}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * AMS ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( Max( MUM,DS ) + ( RCSe - MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5576208178438662, "obj2": 0.24853107403560418}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - FirstVNF_CPU ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Min( MLU ,RRSe ) )", "obj1": 0.4646840148698885, "obj2": 0.33487166844962013}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( RCSe * ( ( ( Max( CS,DS ) + MUR ) - MUC ) * RRSe ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4526865994702282}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( Max( ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ),( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( Min( MDR ,FirstVNF_CPU ) + Min( Const ,MDR ) ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( MUC + Max( ( MUC + MUM ),RCSe ) ) ) ) - ( MUC + MUR ) ) / RCSe )", "obj1": 0.0724907063197026, "obj2": 0.8046479736097537}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ACS,PN ) ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7211895910780669, "obj2": 0.11641542144831385}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / Max( Min( PN ,PN ),( AMS / FirstVNF_RAM_Server ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( MDR / ( ( ARS - DDR ) * ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( MUM,Max( MUR,Min( ( ( MUC / Max( MLU,RRSe ) ) / CS ) ,MUM ) ) ) - ( MUC + MUR ) ) - Max( ( ( ( MUC * MUC ) + MUM ) - ( MUC + ( ( DS / RMSe ) / DS ) ) ),Min( ( MUC + ( Min( ( ( RRSe + RMSe ) * CS ) ,( Max( RMSe,RCSe ) + MUM ) ) * Min( RMSe ,( MUM / CS ) ) ) ) ,( RMSe + MUC ) ) ) )", "obj1": 0.4200743494423792, "obj2": 0.3922343581689991}, {"determining": "( ( MRS * ( MDR + FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Const ,Max( Min( FirstVNF_RAM_Server ,ACS ),( ( Const / FirstVNF_RAM_Server ) + BR ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( Min( Max( ( ( Min( ( DS / RRSe ) ,MUR ) * RMSe ) + ( RMSe * MUM ) ),( ( ( MLU * ( DS / MUC ) ) - MUR ) - ( MUC * DS ) ) ) ,RMSe ),RMSe ) * ( ( ( ( RRSe * RMSe ) - ( MUM / MUR ) ) / Min( ( DS + MLU ) ,Max( ( ( RRSe * ( MUC - RMSe ) ) - RMSe ),DS ) ) ) + MUM ) )", "obj1": 0.7267657992565055, "obj2": 0.11220401852664165}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15057405982916736}, {"determining": "( ( ( FirstVNF_Mem / ( FirstVNF_RAM - RRS ) ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( CS + RCSe ) / ( MUC * ( Min( Max( MUC,DS ) ,RCSe ) / Max( MUM,MUC ) ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( MUR / MLU ) ) + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2000246738664768}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( MDR + RRS ) ,( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,ARS ) ) + FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( ( MUM / ( ( MUC + ( ( ( MLU - DS ) * ( MUM / DS ) ) - RRSe ) ) + ( RCSe - CS ) ) ) + MUM ) )", "obj1": 0.6059479553903345, "obj2": 0.19516664280023813}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( Max( MLU,MUC ) - RRSe ) ) ,( ( ( ( Max( MUM,MLU ) + MUM ) / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.9460966542750929, "obj2": 0.014896728475526028}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( RMSe - Min( ( MLU + ( MUM / ( DS * ( MLU - RMSe ) ) ) ) ,( ( Min( MUR ,RRSe ) / CS ) + ( MUC / MUR ) ) ) ) - ( DS * CS ) ) )", "obj1": 0.8661710037174721, "obj2": 0.05235046073305124}, {"determining": "( PN * ( ( FirstVNF_RAM / MRS ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,CS ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ) ) ) ) ,( MUM * ( MUR + CS ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.13727657142327734}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_RAM_Server - ( Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) - ( ARS - FirstVNF_RAM_Server ) ) ) ) * ( PN / Min( Max( BR,Max( ( ARS - MRS ),FirstVNF_RAM_Server ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,( MLU - ( ( ( RRSe * ( Min( MUM ,RMSe ) + ( RCSe * MLU ) ) ) / ( MLU / MUM ) ) / ( CS / ( ( DS * RCSe ) / MUR ) ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.8866171003717472, "obj2": 0.04075336132233188}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + ( Max( AMS,Const ) / RRS ) ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,ACS ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( RRSe / CS ),RMSe ) * ( ( MLU / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + MUR ) ) + MUM ) )", "obj1": 0.6617100371747212, "obj2": 0.16056042335281917}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "Min( Max( ( DDR + ( CRS + ( ( FirstVNF_CPU_Server - ( ARS / MRS ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.2174721189591078, "obj2": 0.6177158948019928}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ,( ( ( MLU / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.2342007434944238, "obj2": 0.5941970895525245}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ACS,PN ) ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( DS + MUM ) )", "obj1": 0.671003717472119, "obj2": 0.14442732242115}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( DS ,CS ) ) ) ) ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.46064950960073564}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ,( ( ( ( Max( MUM,MLU ) + MUM ) / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.9442379182156134, "obj2": 0.015383370850820985}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( RRS - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / ( Min( ( ( ( MUC / MUR ) * ( DS / DS ) ) + ( RRSe * ( DS + MUC ) ) ) ,RCSe ) * MUC ) ),RMSe ) * ( MUR + MUM ) )", "obj1": 0.6449814126394052, "obj2": 0.16604764845848086}, {"determining": "Min( Min( RRS ,( ( RRS * ( ( CRS / DDR ) - ACS ) ) + Const ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( ( MUM / MUM ) ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.43231800308516455}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( RCSe * ( MUC + DS ) ) ),MLU ) + MUR ) )", "obj1": 0.9089219330855018, "obj2": 0.031847174541287514}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( ( ( Const / PN ) / Const ),Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( ( Const / ( RRS + ( FirstVNF_CPU - FirstVNF_Mem ) ) ) / Min( ( MDR + RRS ) ,( Max( RRS,ACS ) + AMS ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * Min( ( ( RCSe + RRSe ) / MLU ) ,( Min( ( DS * MUC ) ,MUM ) / ( RRSe - MUR ) ) ) )", "obj1": 0.6579925650557621, "obj2": 0.16325621099611556}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( PN * ( PN / ( FirstVNF_CPU * MDR ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( RCSe / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( MUR ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.11524163568773234, "obj2": 0.7512048070741628}, {"determining": "( ( RRS / FirstVNF_Mem ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - CRS ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * Min( MUM ,MUM ) ) ) / Max( CS,MUM ) )", "obj1": 0.9758364312267658, "obj2": 0.010086328760122179}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.44112697712044624}], "45": [{"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( PN * ( PN / ( FirstVNF_CPU * MDR ) ) ) ) )", "choosing": "( ( MLU * ( ( CS + RCSe ) / ( MUC * ( ( DS + CS ) / Max( MUM,MUC ) ) ) ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,CS ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MDR - Min( ( ( Const - ARS ) + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,BR ) ) ,Max( FirstVNF_Mem,AMS ) ) - Min( PN ,BR ) )", "choosing": "( ( MLU * ( ( CS + RCSe ) / ( MUC * ( ( DS + CS ) / Min( ( ( RCSe + MLU ) - DS ) ,DS ) ) ) ) ) / ( RMSe * ( RCSe + ( ( DS + CS ) / Max( MUM,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,Max( FirstVNF_RAM,MDR ) ) ,Max( FirstVNF_CPU_Server,Min( Max( BR,( ( ( PN * ( FirstVNF_CPU - PN ) ) + Max( Const,FirstVNF_Mem_Server ) ) + DDR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( ( RCSe + ( RCSe - RRSe ) ) ,Max( Min( RMSe ,RMSe ),RMSe ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( MLU + ( ( DS * Max( ( CS - MUM ),MLU ) ) + Min( RRSe ,Min( MUM ,RMSe ) ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8567712199609253}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.1171003717472119, "obj2": 0.7504589491932445}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ARS ) ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe )", "obj1": 0.2936802973977695, "obj2": 0.5339605182223253}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_CPU ) ,Max( Const,ARS ) ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( ( RCSe / Max( MLU,MLU ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( ( RMSe * MUM ) - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.5297397769516728, "obj2": 0.26301482735791226}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,ACS ) - ( ( DDR - ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + ( MUR + MLU ) ) ) + ( Max( MLU,MUC ) - RRSe ) ) ,( ( ( ( Max( MUM,MLU ) + MUM ) / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.8011152416356877, "obj2": 0.07527603697226326}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( BR,Min( ( RRS + Min( FirstVNF_RAM ,BR ) ) ,ACS ) ) )", "choosing": "( ( DS * ( ( MLU / RRSe ) - Max( RCSe,( Min( MUR ,Min( ( MLU * DS ) ,( MUM + RCSe ) ) ) / MUC ) ) ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / ( RRSe * ( RCSe + MLU ) ) ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.3382899628252788, "obj2": 0.4698648323810837}, {"determining": "( Min( MRS ,( ( PN / Max( FirstVNF_RAM,Const ) ) - ( ARS * MDR ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - ( PN - FirstVNF_Mem ) ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * ( RMSe + ( ( RRSe / RRSe ) / CS ) ) ) ) / Max( CS,MUM ) )", "obj1": 0.41263940520446096, "obj2": 0.4186211530315322}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( FirstVNF_RAM_Server * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - ( BR * Const ) ) ) ) )", "choosing": "( ( Min( ( DS + ( Min( MUM ,RCSe ) - ( CS + MUM ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7100371747211895, "obj2": 0.12061204113956969}, {"determining": "( ( ( BR * ( MRS / PN ) ) * ACS ) - ( Const - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * ( ARS - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - Max( MUR,RRSe ) ) / ( RCSe * ( MUC + ( MUC / ( ( Min( MLU ,( MUM - MLU ) ) + ( RMSe - ( CS / RRSe ) ) ) - MUM ) ) ) ) )", "obj1": 0.8382899628252788, "obj2": 0.06290145132072901}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( MUR,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.3696692496026967}, {"determining": "( ( ( BR * ( MRS / PN ) ) * ACS ) - ( RRS - ( ( ( ( FirstVNF_CPU_Server + MDR ) / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ,Const ) ) ) ) * Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( MUM / ( MUM + ( ( Max( RCSe,( RRSe - ( CS / MUM ) ) ) - Max( RCSe,RCSe ) ) + MUC ) ) ) / ( RCSe * ( MUC + ( MLU / MUC ) ) ) )", "obj1": 0.8215613382899628, "obj2": 0.07009815256827011}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( ( MDR - ( BR * MRS ) ) * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( ( RRSe * ( RCSe / RRSe ) ) - ( MUM - ( Min( Max( CS,RRSe ) ,MUR ) + MLU ) ) ) + DS ) ) )", "obj1": 0.4144981412639405, "obj2": 0.38637984586726015}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,MLU ) - MUR ) + DS ) / ( RRSe / MLU ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.32899628252788105, "obj2": 0.4981266222728501}, {"determining": "( ( Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) ) / FirstVNF_RAM_Server ) * ( Min( BR ,( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) / Min( ( ( PN * BR ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( RCSe / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( MLU - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) )", "obj1": 0.2992565055762082, "obj2": 0.508507237420104}, {"determining": "Min( Max( ( DDR + ( CRS + ( ( FirstVNF_Mem - ( ARS / MRS ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),( Min( PN ,( BR / ( FirstVNF_Mem_Server / DDR ) ) ) + FirstVNF_CPU_Server ) ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( MUM / ( CS * DS ) ) + ( MLU / DS ) ) ) - ( ( RCSe - ( Max( ( RRSe + RCSe ),RMSe ) / MLU ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8325742039751838}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + BR ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( ( MUR / CS ) ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( Max( RCSe,Max( Min( Min( MLU ,RCSe ) ,RCSe ),DS ) ) * MUR ) )", "obj1": 0.275092936802974, "obj2": 0.5426840254861152}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( Const / AMS ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - Min( Min( ( ( ( FirstVNF_Mem - DDR ) * AMS ) * ( FirstVNF_Mem_Server + RRS ) ) ,MRS ) ,( FirstVNF_Mem_Server / DDR ) ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( ( ( CS / Max( ( Max( RMSe,( RMSe + MUR ) ) * RMSe ),MUR ) ) + ( ( ( Min( DS ,MUR ) + Max( RRSe,MUM ) ) + RCSe ) / ( MUR * MUR ) ) ) - DS ) - RMSe )", "obj1": 0.47769516728624534, "obj2": 0.31778288992755255}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( ( BR * MRS ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,Max( Min( FirstVNF_RAM_Server ,( MRS / FirstVNF_CPU ) ),Max( FirstVNF_RAM_Server,ARS ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( DS + RRSe ) / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + ( MUR / Max( ( DS * MLU ),RMSe ) ) ) ) + MUM ) )", "obj1": 0.5631970260223048, "obj2": 0.22963339191361043}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * AMS ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( Max( MUM,DS ) + ( RCSe - MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5576208178438662, "obj2": 0.24853107403560418}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "( PN - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( ( Max( ( MUR - ( MUM - ( MUR * RRSe ) ) ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) * ( MUC + DS ) ) )", "obj1": 0.8568773234200744, "obj2": 0.05395432939842573}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( Max( ARS,ACS ) / RRS ) ) )", "choosing": "( ( RMSe * Min( DS ,Max( ( Max( MLU,( MUM / ( MUM + RRSe ) ) ) - Max( ( Min( RMSe ,RMSe ) / ( RMSe * CS ) ),( ( RCSe * MUR ) - ( MUR / RCSe ) ) ) ),DS ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.6282527881040892, "obj2": 0.18276778006846237}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_RAM_Server - ( Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) - ( ARS - FirstVNF_RAM_Server ) ) ) ) * ( PN / Min( Max( BR,Max( ( ARS - MRS ),FirstVNF_RAM_Server ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,( MLU - ( ( ( RRSe * ( Min( MUM ,RMSe ) + ( RCSe * MLU ) ) ) / ( MLU / MUM ) ) / ( CS / ( ( DS * RCSe ) / MUR ) ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.8866171003717472, "obj2": 0.04075336132233188}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( FirstVNF_RAM_Server - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( DDR,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / CS ),RMSe ) * ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) )", "obj1": 0.6561338289962825, "obj2": 0.15799318454809133}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ( ( RRS - BR ) / BR ) ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - MUM ) / ( MUM - ( MUR + MLU ) ) )", "obj1": 0.9330855018587361, "obj2": 0.021479392072308017}, {"determining": "( Max( ( BR / FirstVNF_RAM ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - ( PN / FirstVNF_Mem ) ) ) ) ) ) ) + ( FirstVNF_RAM_Server * PN ) )", "choosing": "( Max( Max( RCSe,Max( MUR,CS ) ),CS ) - ( Min( MUR ,MUR ) + MUR ) )", "obj1": 0.19888475836431227, "obj2": 0.6298091100515549}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "( Max( MDR,Max( CRS,( MRS - ( AMS - BR ) ) ) ) - ( Max( Const,MRS ) * MDR ) )", "choosing": "( Max( ( MUR * MUM ),Max( MUR,DS ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5568618412645683}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),Min( Const ,MDR ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7885918579018925}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.44112697712044624}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( RRS - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / ( Min( ( ( ( MUC / MUR ) * ( DS / DS ) ) + ( RRSe * ( DS + MUC ) ) ) ,RCSe ) * MUC ) ),RMSe ) * ( MUR + MUM ) )", "obj1": 0.6449814126394052, "obj2": 0.16604764845848086}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - BR ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * Max( RCSe,( Min( DS ,( ( ( RCSe - Max( RMSe,MLU ) ) / Max( MUM,MUC ) ) + RMSe ) ) + ( MUM + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.637546468401487, "obj2": 0.17318767670117427}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,Min( MRS ,( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( DS + ( DS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.8137746976350883}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU_Server - Min( MRS ,FirstVNF_CPU ) ) / ( ( PN - ARS ) / ( ARS - FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),RRS ) - MRS ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - Max( MUR,RRSe ) ) / ( RCSe * Min( CS ,RCSe ) ) )", "obj1": 0.8698884758364313, "obj2": 0.04512694094904764}, {"determining": "( Min( ( FirstVNF_Mem_Server + Min( CRS ,DDR ) ) ,Max( ( ( ( ( ( BR + MRS ) - ( MRS - DDR ) ) + ( FirstVNF_CPU / ( MDR - AMS ) ) ) - MDR ) - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( PN + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( ( CS + RRSe ) - Min( ( RCSe * MUR ) ,CS ) ) ,Min( Min( ( CS + ( RMSe * CS ) ) ,CS ) ,( MUC * ( ( MUM / MUM ) * ( MUR * RCSe ) ) ) ) ),Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( Min( RRS ,( ( RRS * ( ( CRS / DDR ) - ACS ) ) + Const ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( ( MUM / MUM ) ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.43231800308516455}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.42193308550185876, "obj2": 0.3813416927390218}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( DS ,CS ) ) ) ) ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.46064950960073564}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( RCSe * ( MUC + DS ) ) ),MLU ) + MUR ) )", "obj1": 0.9089219330855018, "obj2": 0.031847174541287514}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( RRS ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.671003717472119, "obj2": 0.14405732853824196}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( ( RRS / ( CRS - RRS ) ),Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + RRSe ) )", "obj1": 0.7565055762081785, "obj2": 0.09182546876348897}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( ( CRS / FirstVNF_RAM_Server ) + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,Min( RCSe ,MUR ) ) * ( MUM + MUM ) )", "obj1": 0.9646840148698885, "obj2": 0.013023333119728576}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_Mem_Server + RRS ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( CS + RCSe ) / ( MUC * ( ( DS + CS ) / Max( MUM,RMSe ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.2581313194829769}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15057405982916736}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Min( MRS ,Min( AMS ,Const ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( Min( AMS ,FirstVNF_Mem ),ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( MLU + ( MUM - ( MUR * RRSe ) ) ) / ( ( ( ( RCSe / ( RMSe / MLU ) ) / ( ( RMSe / RRSe ) / CS ) ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( RMSe + MUM ) ) / RCSe ) ) )", "obj1": 0.7360594795539034, "obj2": 0.10682751276529846}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( ARS - AMS ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( ARS + CRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( MUR - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( Max( MUM,MLU ) + MUM ) )", "obj1": 0.5836431226765799, "obj2": 0.21255682791555436}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Min( MRS ,Min( AMS ,Const ) ) * MDR ) ) * Min( ( PN / Min( DDR ,( ( CRS / FirstVNF_RAM_Server ) + Const ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( MLU + ( MUM - ( MUR * RRSe ) ) ) / ( ( ( ( RCSe / ( RMSe / MLU ) ) / ( ( MUM / RRSe ) / CS ) ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( RMSe + MUM ) ) / RCSe ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1335658809452099}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ,( ( ( MLU / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.2342007434944238, "obj2": 0.5941970895525245}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - FirstVNF_CPU ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Min( MLU ,RRSe ) )", "obj1": 0.4646840148698885, "obj2": 0.33487166844962013}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( RCSe * ( ( ( Max( CS,DS ) + MUR ) - MUC ) * RRSe ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4526865994702282}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( ( ARS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * Max( MUC,MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.5947955390334573, "obj2": 0.206970309125637}, {"determining": "( PN * ( ( FirstVNF_RAM / MRS ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,CS ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ) ) ) ) ,( MUM * ( MUR + CS ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.13727657142327734}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - ARS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( RMSe + Max( DS,RMSe ) ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.9814126394052045, "obj2": 0.007930589670081856}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( Max( ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ),( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( Min( MDR ,FirstVNF_CPU ) + Min( Const ,MDR ) ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( MUC + Max( ( MUC + MUM ),RCSe ) ) ) ) - ( MUC + MUR ) ) / RCSe )", "obj1": 0.0724907063197026, "obj2": 0.8046479736097537}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ACS,PN ) ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7211895910780669, "obj2": 0.11641542144831385}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "( ( MRS * ( MDR + FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Const ,Max( Min( FirstVNF_RAM_Server ,ACS ),( ( Const / FirstVNF_RAM_Server ) + BR ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( Min( Max( ( ( Min( ( DS / RRSe ) ,MUR ) * RMSe ) + ( RMSe * MUM ) ),( ( ( MLU * ( DS / MUC ) ) - MUR ) - ( MUC * DS ) ) ) ,RMSe ),RMSe ) * ( ( ( ( RRSe * RMSe ) - ( MUM / MUR ) ) / Min( ( DS + MLU ) ,Max( ( ( RRSe * ( MUC - RMSe ) ) - RMSe ),DS ) ) ) + MUM ) )", "obj1": 0.7267657992565055, "obj2": 0.11220401852664165}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "( ( ( FirstVNF_Mem / ( FirstVNF_RAM - RRS ) ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( CS + RCSe ) / ( MUC * ( Min( Max( MUC,DS ) ,RCSe ) / Max( MUM,MUC ) ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( MUR / MLU ) ) + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2000246738664768}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + BR ) ),ARS ) ) ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RMSe,( ( MUC * ( ( Min( Max( RRSe,MUM ) ,( MUR / RMSe ) ) * DS ) * DS ) ) * Max( ( RRSe + Min( ( ( RRSe - MUR ) / Max( MUM,RCSe ) ) ,MUC ) ),RCSe ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5483271375464684, "obj2": 0.2523778474774867}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + ( Max( MLU,MUC ) - RRSe ) ) ,( ( ( ( Max( MUM,MLU ) + MUM ) / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.9460966542750929, "obj2": 0.014896728475526028}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( Max( FirstVNF_Mem,( MRS + FirstVNF_CPU ) ) ,Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( ( Max( MUR,MUC ) * ( ( DS + CS ) / Max( MUM,MUC ) ) ) + MUM ) )", "obj1": 0.7434944237918215, "obj2": 0.09716646597778957}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( RMSe - Min( ( MLU + ( MUM / ( DS * ( MLU - RMSe ) ) ) ) ,( ( Min( MUR ,RRSe ) / CS ) + ( MUC / MUR ) ) ) ) - ( DS * CS ) ) )", "obj1": 0.8661710037174721, "obj2": 0.05235046073305124}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( MLU - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.9944237918215614, "obj2": 0.0029701939284330655}, {"determining": "Min( Max( ( DDR + ( CRS + ( ( FirstVNF_CPU_Server - ( ARS / MRS ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( ( FirstVNF_Mem_Server - MDR ) + FirstVNF_CPU ) ,FirstVNF_RAM ) * MDR ) ) )", "choosing": "( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.21561338289962825, "obj2": 0.6157225144837347}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ,( ( ( ( Max( MUM,MLU ) + MUM ) / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.9442379182156134, "obj2": 0.015383370850820985}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( MDR - ( BR * MRS ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( MDR + RRS ) ,( Max( FirstVNF_RAM,Min( FirstVNF_Mem ,ARS ) ) + FirstVNF_CPU ) ) ) - ( FirstVNF_CPU + PN ) ) ) )", "choosing": "( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( ( MUM / ( ( MUC + ( ( ( MLU - DS ) * ( MUM / DS ) ) - RRSe ) ) + ( RCSe - CS ) ) ) + MUM ) )", "obj1": 0.6059479553903345, "obj2": 0.19516664280023813}], "46": [{"determining": "Min( Min( ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( BR,FirstVNF_Mem ) )", "choosing": "( ( MUM / ( Min( ( ( RRSe / ( RMSe + Max( DS,RMSe ) ) ) / ( ( RRSe + MUM ) * ( MUC + MUR ) ) ) ,( ( RCSe + MUR ) * MUR ) ) * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / ( RRSe * ( RCSe + MLU ) ) ),Min( MLU ,RRSe ) ) / ( MUM - Min( ( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( PN * ( PN / ( FirstVNF_CPU * MDR ) ) ) ) )", "choosing": "( ( MLU * ( ( CS + RCSe ) / ( MUC * ( ( DS + CS ) / Max( MUM,MUC ) ) ) ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,CS ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,Max( FirstVNF_RAM,MDR ) ) ,Max( FirstVNF_CPU_Server,Min( Max( BR,( ( ( PN * ( FirstVNF_CPU - PN ) ) + Max( Const,FirstVNF_Mem_Server ) ) + DDR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( ( RCSe + ( RCSe - RRSe ) ) ,Max( Min( RMSe ,RMSe ),RMSe ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( MLU + ( ( DS * Max( ( CS - MUM ),MLU ) ) + Min( RRSe ,Min( MUM ,RMSe ) ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8567712199609253}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.1171003717472119, "obj2": 0.7504589491932445}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( ( Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) ) / FirstVNF_RAM_Server ) * ( Min( BR ,( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) / Min( ( ( PN * BR ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( RCSe / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( MLU - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) )", "obj1": 0.2992565055762082, "obj2": 0.508507237420104}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ARS ) ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe )", "obj1": 0.2936802973977695, "obj2": 0.5339605182223253}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,ACS ) - ( ( DDR - ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + ( MUR + MLU ) ) ) + ( Max( MLU,MUC ) - RRSe ) ) ,( ( ( ( Max( MUM,MLU ) + MUM ) / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.8011152416356877, "obj2": 0.07527603697226326}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( BR,Min( ( RRS + Min( FirstVNF_RAM ,BR ) ) ,ACS ) ) )", "choosing": "( ( DS * ( ( MLU / RRSe ) - Max( RCSe,( Min( MUR ,Min( ( MLU * DS ) ,( MUM + RCSe ) ) ) / MUC ) ) ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / ( RRSe * ( RCSe + MLU ) ) ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.3382899628252788, "obj2": 0.4698648323810837}, {"determining": "( Min( MRS ,( ( PN / Max( FirstVNF_RAM,Const ) ) - ( ARS * MDR ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - ( PN - FirstVNF_Mem ) ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * ( RMSe + ( ( RRSe / RRSe ) / CS ) ) ) ) / Max( CS,MUM ) )", "obj1": 0.41263940520446096, "obj2": 0.4186211530315322}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( FirstVNF_RAM_Server * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - ( BR * Const ) ) ) ) )", "choosing": "( ( Min( ( DS + ( Min( MUM ,RCSe ) - ( CS + MUM ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7100371747211895, "obj2": 0.12061204113956969}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( MUR,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.3696692496026967}, {"determining": "( ( ( BR * ( MRS / PN ) ) * ACS ) - ( RRS - ( ( ( ( FirstVNF_CPU_Server + MDR ) / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ,Const ) ) ) ) * Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( MUM / ( MUM + ( ( Max( RCSe,( RRSe - ( CS / MUM ) ) ) - Max( RCSe,RCSe ) ) + MUC ) ) ) / ( RCSe * ( MUC + ( MLU / MUC ) ) ) )", "obj1": 0.8215613382899628, "obj2": 0.07009815256827011}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( ( MDR - ( BR * MRS ) ) * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( ( RRSe * ( RCSe / RRSe ) ) - ( MUM - ( Min( Max( CS,RRSe ) ,MUR ) + MLU ) ) ) + DS ) ) )", "obj1": 0.4144981412639405, "obj2": 0.38637984586726015}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,MLU ) - MUR ) + DS ) / ( RRSe / MLU ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.32899628252788105, "obj2": 0.4981266222728501}, {"determining": "Min( Max( ( DDR + ( CRS + ( ( FirstVNF_Mem - ( ARS / MRS ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),( Min( PN ,( BR / ( FirstVNF_Mem_Server / DDR ) ) ) + FirstVNF_CPU_Server ) ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( MUM / ( CS * DS ) ) + ( MLU / DS ) ) ) - ( ( RCSe - ( Max( ( RRSe + RCSe ),RMSe ) / MLU ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8325742039751838}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + BR ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( ( MUR / CS ) ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( Max( RCSe,Max( Min( Min( MLU ,RCSe ) ,RCSe ),DS ) ) * MUR ) )", "obj1": 0.275092936802974, "obj2": 0.5426840254861152}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( DDR ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( Max( MLU,CS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.4516728624535316, "obj2": 0.344653338461219}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( Const / AMS ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - Min( Min( ( ( ( FirstVNF_Mem - DDR ) * AMS ) * ( FirstVNF_Mem_Server + RRS ) ) ,MRS ) ,( FirstVNF_Mem_Server / DDR ) ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( ( ( CS / Max( ( Max( RMSe,( RMSe + MUR ) ) * RMSe ),MUR ) ) + ( ( ( Min( DS ,MUR ) + Max( RRSe,MUM ) ) + RCSe ) / ( MUR * MUR ) ) ) - DS ) - RMSe )", "obj1": 0.47769516728624534, "obj2": 0.31778288992755255}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Min( MRS ,Min( AMS ,Const ) ) * MDR ) ) * Min( ( PN / Min( DDR ,( ( CRS / FirstVNF_RAM_Server ) + Const ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( MLU + ( MUM - ( MUR * RRSe ) ) ) / ( ( ( ( RCSe / ( RMSe / MLU ) ) / ( ( MUM / RRSe ) / CS ) ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( RMSe + MUM ) ) / RCSe ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1335658809452099}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,Min( MRS ,( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( DS + ( DS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.8137746976350883}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * AMS ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( Max( MUM,DS ) + ( RCSe - MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5576208178438662, "obj2": 0.24853107403560418}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( ( CRS / FirstVNF_RAM_Server ) + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,Min( RCSe ,MUR ) ) * ( MUM + MUM ) )", "obj1": 0.9646840148698885, "obj2": 0.013023333119728576}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * ( Const * AMS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_CPU ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( ( RCSe / Max( MLU,MLU ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUM / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.2669264332871723}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "( PN - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( ( Max( ( MUR - ( MUM - ( MUR * RRSe ) ) ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) * ( MUC + DS ) ) )", "obj1": 0.8568773234200744, "obj2": 0.05395432939842573}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_RAM_Server - ( Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) - ( ARS - FirstVNF_RAM_Server ) ) ) ) * ( PN / Min( Max( BR,Max( ( ARS - MRS ),FirstVNF_RAM_Server ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,( MLU - ( ( ( RRSe * ( Min( MUM ,RMSe ) + ( RCSe * MLU ) ) ) / ( MLU / MUM ) ) / ( CS / ( ( DS * RCSe ) / MUR ) ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.8866171003717472, "obj2": 0.04075336132233188}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( FirstVNF_RAM_Server - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( DDR,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / CS ),RMSe ) * ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) )", "obj1": 0.6561338289962825, "obj2": 0.15799318454809133}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( Max( FirstVNF_Mem,( MRS + FirstVNF_CPU ) ) ,Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( ( Max( MUR,MUC ) * ( ( DS + CS ) / Max( MUM,MUC ) ) ) + MUM ) )", "obj1": 0.7434944237918215, "obj2": 0.09716646597778957}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( Max( ( BR / FirstVNF_RAM ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - ( PN / FirstVNF_Mem ) ) ) ) ) ) ) + ( FirstVNF_RAM_Server * PN ) )", "choosing": "( Max( Max( RCSe,Max( MUR,CS ) ),CS ) - ( Min( MUR ,MUR ) + MUR ) )", "obj1": 0.19888475836431227, "obj2": 0.6298091100515549}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "( Max( MDR,Max( CRS,( MRS - ( AMS - BR ) ) ) ) - ( Max( Const,MRS ) * MDR ) )", "choosing": "( Max( ( MUR * MUM ),Max( MUR,DS ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5568618412645683}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),Min( Const ,MDR ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7885918579018925}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( RRS - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / ( Min( ( ( ( MUC / MUR ) * ( DS / DS ) ) + ( RRSe * ( DS + MUC ) ) ) ,RCSe ) * MUC ) ),RMSe ) * ( MUR + MUM ) )", "obj1": 0.6449814126394052, "obj2": 0.16604764845848086}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - BR ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * Max( RCSe,( Min( DS ,( ( ( RCSe - Max( RMSe,MLU ) ) / Max( MUM,MUC ) ) + RMSe ) ) + ( MUM + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.637546468401487, "obj2": 0.17318767670117427}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Min( MRS ,Min( AMS ,Const ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( Min( AMS ,FirstVNF_Mem ),ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( MLU + ( MUM - ( MUR * RRSe ) ) ) / ( ( ( ( RCSe / ( RMSe / MLU ) ) / ( ( RMSe / RRSe ) / CS ) ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( RMSe + MUM ) ) / RCSe ) ) )", "obj1": 0.7360594795539034, "obj2": 0.10682751276529846}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU_Server - Min( MRS ,FirstVNF_CPU ) ) / ( ( PN - ARS ) / ( ARS - FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),RRS ) - MRS ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - Max( MUR,RRSe ) ) / ( RCSe * Min( CS ,RCSe ) ) )", "obj1": 0.8698884758364313, "obj2": 0.04512694094904764}, {"determining": "( Min( ( FirstVNF_Mem_Server + Min( CRS ,DDR ) ) ,Max( ( ( ( ( ( BR + MRS ) - ( MRS - DDR ) ) + ( FirstVNF_CPU / ( MDR - AMS ) ) ) - MDR ) - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( PN + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( ( CS + RRSe ) - Min( ( RCSe * MUR ) ,CS ) ) ,Min( Min( ( CS + ( RMSe * CS ) ) ,CS ) ,( MUC * ( ( MUM / MUM ) * ( MUR * RCSe ) ) ) ) ),Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( Min( RRS ,( ( RRS * ( ( CRS / DDR ) - ACS ) ) + Const ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / Min( MUR ,( ( Min( ( Min( RCSe ,RMSe ) + ( RRSe * RRSe ) ) ,DS ) * Min( MUR ,Min( ( MUM / MUM ) ,( RRSe / RRSe ) ) ) ) / ( DS / MUC ) ) ) ) )", "obj1": 0.3754646840148699, "obj2": 0.43231800308516455}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( MRS / PN ) ),Max( FirstVNF_RAM_Server,ARS ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + MUM ) + ( MUR / Max( ( DS * MLU ),RMSe ) ) ) ) + MUM ) )", "obj1": 0.5631970260223048, "obj2": 0.22963339191361043}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( DS ,CS ) ) ) ) ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.46064950960073564}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "( Max( ( Max( DDR,( RRS - ( Min( RRS ,ACS ) + FirstVNF_Mem ) ) ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,Min( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) - Max( MUM,MLU ) ) ,( ( Max( ( MLU / RCSe ),MUC ) - MUM ) * ( RRSe - Max( CS,MLU ) ) ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.671003717472119, "obj2": 0.14405732853824196}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( ( RRS / ( CRS - RRS ) ),Min( CRS ,Min( DDR ,( Max( RRS,ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( PN / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( ( ( RCSe / ( RMSe / MLU ) ) / RCSe ) * ( RCSe / MUM ) ) + MUR ) ) + RRSe ) )", "obj1": 0.7565055762081785, "obj2": 0.09182546876348897}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15057405982916736}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_CPU ) ,Max( Const,ARS ) ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( ( RCSe / Max( MLU,MLU ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( ( RMSe * MUM ) - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.5297397769516728, "obj2": 0.26301482735791226}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_Mem_Server + RRS ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( CS + RCSe ) / ( MUC * ( ( DS + CS ) / Max( MUM,RMSe ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.2581313194829769}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ( ( RRS - BR ) / BR ) ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - MUM ) / ( MUM - ( MUR + MLU ) ) )", "obj1": 0.9330855018587361, "obj2": 0.021479392072308017}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( ARS - AMS ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( ARS + CRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( MUR - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( Max( MUM,MLU ) + MUM ) )", "obj1": 0.5836431226765799, "obj2": 0.21255682791555436}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ,( ( ( MLU / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.2342007434944238, "obj2": 0.5941970895525245}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( ( ARS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * Max( MUC,MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.5947955390334573, "obj2": 0.206970309125637}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( RCSe * ( ( ( Max( CS,DS ) + MUR ) - MUC ) * RRSe ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4526865994702282}, {"determining": "( ( ( BR * ( MRS / PN ) ) * ACS ) - ( Const - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * ( ARS - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - Max( MUR,RRSe ) ) / ( RCSe * ( MUC + ( MUC / ( ( Min( MLU ,( MUM - MLU ) ) + ( RMSe - ( CS / RRSe ) ) ) - MUM ) ) ) ) )", "obj1": 0.8382899628252788, "obj2": 0.06290145132072901}, {"determining": "( ( ( BR * ( MRS / PN ) ) * ACS ) - ( ( ( Const - Const ) * RRS ) - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ( FirstVNF_CPU_Server / CRS ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - Max( ( ( MLU * RRSe ) - ( MUC + MUR ) ),RRSe ) ) / ( RCSe * ( Min( ( Max( ( ( RRSe / RMSe ) + CS ),RRSe ) * MLU ) ,( DS / Max( ( ( RCSe / RMSe ) / DS ),( MLU + RMSe ) ) ) ) / RCSe ) ) )", "obj1": 0.8382899628252788, "obj2": 0.06290145132072901}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.44112697712044624}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( Max( ARS,ACS ) / RRS ) ) )", "choosing": "( ( RMSe * Min( DS ,Max( ( Max( MLU,( MUM / ( MUM + RRSe ) ) ) - Max( ( Min( RMSe ,RMSe ) / ( RMSe * CS ) ),( ( RCSe * MUR ) - ( MUR / RCSe ) ) ) ),DS ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.6282527881040892, "obj2": 0.18276778006846237}, {"determining": "( ( ( FirstVNF_Mem / ( FirstVNF_RAM - RRS ) ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( CS + RCSe ) / ( MUC * ( Min( Max( MUC,DS ) ,RCSe ) / Max( MUM,MUC ) ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( MUR / MLU ) ) + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2000246738664768}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( ( BR * MRS ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,Max( Min( FirstVNF_RAM_Server ,( MRS / FirstVNF_CPU ) ),Max( FirstVNF_RAM_Server,ARS ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( DS + RRSe ) / ( ( MUC + ( Max( RMSe,RMSe ) - RRSe ) ) + ( MUR / Max( ( DS * MLU ),RMSe ) ) ) ) + MUM ) )", "obj1": 0.5464684014869888, "obj2": 0.2518108009046086}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( RMSe - Min( ( MLU + ( MUM / ( DS * ( MLU - RMSe ) ) ) ) ,( ( Min( MUR ,RRSe ) / CS ) + ( MUC / MUR ) ) ) ) - ( DS * CS ) ) )", "obj1": 0.8661710037174721, "obj2": 0.05235046073305124}, {"determining": "( PN * ( ( FirstVNF_RAM / MRS ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,CS ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ) ) ) ) ,( MUM * ( MUR + CS ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.13727657142327734}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - ARS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( RMSe + Max( DS,RMSe ) ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.9814126394052045, "obj2": 0.007930589670081856}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( RCSe * ( MUC + DS ) ) ),MLU ) + MUR ) )", "obj1": 0.9089219330855018, "obj2": 0.031847174541287514}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ACS,PN ) ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7211895910780669, "obj2": 0.11641542144831385}, {"determining": "( Max( ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ),( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( Min( MDR ,FirstVNF_CPU ) + Min( Const ,MDR ) ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( MUC + Max( ( MUC + MUM ),RCSe ) ) ) ) - ( MUC + MUR ) ) / RCSe )", "obj1": 0.0724907063197026, "obj2": 0.8046479736097537}, {"determining": "Min( Max( ( DDR + ( CRS + ( ( FirstVNF_CPU_Server - ( ARS / MRS ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( ( FirstVNF_Mem_Server - MDR ) + FirstVNF_CPU ) ,FirstVNF_RAM ) * MDR ) ) )", "choosing": "( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.21561338289962825, "obj2": 0.6157225144837347}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( Min( Min( MRS ,FirstVNF_RAM ) ,PN ),Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_CPU ) ) ) ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( RCSe + ( ( MUC / DS ) - MLU ) ) + Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ,( ( ( ( Max( MUM,MLU ) + MUM ) / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.9479553903345725, "obj2": 0.014141354377108992}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( ( MRS * ( MDR + FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Const ,Max( Min( FirstVNF_RAM_Server ,ACS ),( ( Const / FirstVNF_RAM_Server ) + BR ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( Min( Max( ( ( Min( ( DS / RRSe ) ,MUR ) * RMSe ) + ( RMSe * MUM ) ),( ( ( MLU * ( DS / MUC ) ) - MUR ) - ( MUC * DS ) ) ) ,RMSe ),RMSe ) * ( ( ( ( RRSe * RMSe ) - ( MUM / MUR ) ) / Min( ( DS + MLU ) ,Max( ( ( RRSe * ( MUC - RMSe ) ) - RMSe ),DS ) ) ) + MUM ) )", "obj1": 0.7267657992565055, "obj2": 0.11220401852664165}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - BR ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * Max( RCSe,( Min( DS ,( ( ( RCSe - Max( RMSe,MLU ) ) / Max( MUM,MUC ) ) + RMSe ) ) + ( MUM + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.6263940520446096, "obj2": 0.18500514511913213}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - RMSe ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.4256505576208178, "obj2": 0.38077356669694873}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - ARS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( ARS * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( Max( ( BR - ( AMS + ARS ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / ( RRSe - MUM ) ) ) ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( RMSe + Max( DS,RMSe ) ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.9814126394052045, "obj2": 0.007930589670081856}], "47": [{"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( BR,FirstVNF_Mem ) )", "choosing": "( ( MUM / ( Min( ( ( RRSe / ( RMSe + Max( DS,RMSe ) ) ) / ( ( RRSe + MUM ) * ( MUC + MUR ) ) ) ,( ( RCSe + MUR ) * MUR ) ) * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / ( RRSe * ( RCSe + MLU ) ) ),Min( MLU ,RRSe ) ) / ( MUM - Min( ( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,Max( FirstVNF_RAM,MDR ) ) ,Max( FirstVNF_CPU_Server,Min( Max( BR,( ( ( PN * ( FirstVNF_CPU - PN ) ) + Max( Const,FirstVNF_Mem_Server ) ) + DDR ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( ( RCSe + ( RCSe - RRSe ) ) ,Max( Min( RMSe ,RMSe ),RMSe ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( MLU + ( ( DS * Max( ( CS - MUM ),MLU ) ) + Min( RRSe ,Min( MUM ,RMSe ) ) ) ) )", "obj1": 0.05204460966542751, "obj2": 0.8567712199609253}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.1171003717472119, "obj2": 0.7504589491932445}, {"determining": "( Max( DDR,( ( ( ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - Min( MDR ,RRS ) ) - ( ( FirstVNF_RAM_Server + Max( ARS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( MUM + Max( RRSe,MUC ) ) - RCSe ) / RCSe )", "obj1": 0.120817843866171, "obj2": 0.6871631669176368}, {"determining": "Min( Min( MRS ,Min( MDR ,FirstVNF_Mem ) ) ,( ( BR + CRS ) / FirstVNF_CPU ) )", "choosing": "( ( RMSe * ( ( ( RMSe * MLU ) - RMSe ) + RRSe ) ) - Max( RRSe,( RMSe + Max( MUM,( MUC * MUC ) ) ) ) )", "obj1": 0.5148698884758365, "obj2": 0.2856193818362439}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - RRS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.49070631970260226, "obj2": 0.3068228999131692}, {"determining": "( ( Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / DDR ) ) / FirstVNF_RAM_Server ) * ( Min( BR ,( ( CRS / DDR ) - ( ( Const * MDR ) * CRS ) ) ) / Min( ( ( PN * BR ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( RCSe / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( MLU - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) )", "obj1": 0.2992565055762082, "obj2": 0.508507237420104}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( ( FirstVNF_Mem_Server / ( FirstVNF_RAM * ARS ) ) ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ARS ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM - RCSe ) ) / RCSe )", "obj1": 0.2936802973977695, "obj2": 0.5339605182223253}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Max( BR,Min( ( RRS + Min( FirstVNF_RAM ,BR ) ) ,ACS ) ) )", "choosing": "( ( DS * ( ( MLU / RRSe ) - Max( RCSe,( Min( MUR ,Min( ( MLU * DS ) ,( MUM + RCSe ) ) ) / MUC ) ) ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / ( RRSe * ( RCSe + MLU ) ) ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.3382899628252788, "obj2": 0.4698648323810837}, {"determining": "( Min( MRS ,( ( PN / Max( FirstVNF_RAM,Const ) ) - ( ARS * MDR ) ) ) - ( ( Min( DDR ,( ( Min( ACS ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) * FirstVNF_RAM ) * Const ) ) - Max( ACS,FirstVNF_RAM_Server ) ) * ( ( ( PN / ( ( MDR - ( PN - FirstVNF_Mem ) ) * RRS ) ) - ( Const + Min( BR ,MRS ) ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( CS * Min( ( CS * MUR ) ,Max( MUM,RCSe ) ) ) ),( Max( ( ( ( Max( RCSe,DS ) - Max( RMSe,MUC ) ) + DS ) / ( MUM / MUM ) ),RMSe ) * ( RMSe + ( ( RRSe / RRSe ) / CS ) ) ) ) / Max( CS,MUM ) )", "obj1": 0.41263940520446096, "obj2": 0.4186211530315322}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( ( MDR - ( BR * MRS ) ) * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( ( RRSe * ( RCSe / RRSe ) ) - ( MUM - ( Min( Max( CS,RRSe ) ,MUR ) + MLU ) ) ) + DS ) ) )", "obj1": 0.4144981412639405, "obj2": 0.38637984586726015}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( FirstVNF_RAM_Server * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) - ( BR * Const ) ) ) ) )", "choosing": "( ( Min( ( DS + ( Min( MUM ,RCSe ) - ( CS + MUM ) ) ) ,RMSe ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7100371747211895, "obj2": 0.12061204113956969}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,ACS ) - ( ( DDR - ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ACS ) ) ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + ( MUR + MLU ) ) ) + ( Max( MLU,MUC ) - RRSe ) ) ,( ( ( ( Max( MUM,MLU ) + MUM ) / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.8011152416356877, "obj2": 0.07527603697226326}, {"determining": "( ( AMS + ( ( MRS - FirstVNF_Mem ) - ( CRS + RRS ) ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( Max( Max( RMSe,Max( ( ( Max( ( RCSe + CS ),MLU ) * DS ) - RMSe ),( ( ( Min( MUM ,RMSe ) + ( MUC * RCSe ) ) / ( RMSe * MLU ) ) / DS ) ) ),Max( Min( ( RRSe + Max( RRSe,Min( ( MLU * RCSe ) ,( DS * MUM ) ) ) ) ,( MUM - RMSe ) ),DS ) ) / ( ( MLU * Min( ( MLU / DS ) ,( RRSe / Min( ( MUC - ( RCSe / RRSe ) ) ,DS ) ) ) ) - DS ) )", "obj1": 0.7788104089219331, "obj2": 0.08393915949041948}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),Min( FirstVNF_RAM_Server ,DDR ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( Max( MUM,MLU ) - MUR ) + DS ) / ( RRSe / MLU ) ),RMSe ) * Min( MUM ,MUM ) ) ) / RCSe )", "obj1": 0.32899628252788105, "obj2": 0.4981266222728501}, {"determining": "Min( Max( ( DDR + ( CRS + ( ( FirstVNF_Mem - ( ARS / MRS ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),( Min( PN ,( BR / ( FirstVNF_Mem_Server / DDR ) ) ) + FirstVNF_CPU_Server ) ) ,Max( FirstVNF_CPU_Server,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR + ( ( MUM / ( CS * DS ) ) + ( MLU / DS ) ) ) - ( ( RCSe - ( Max( ( RRSe + RCSe ),RMSe ) / MLU ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.06133828996282528, "obj2": 0.8325742039751838}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( Min( RMSe ,( ( RMSe + MUC ) * ( RCSe * ( ( MLU * DS ) + ( CS - MUR ) ) ) ) ) + DS ) ) )", "obj1": 0.14684014869888476, "obj2": 0.6724356346580165}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Min( MRS ,Min( AMS ,Const ) ) * MDR ) ) * Min( ( PN / Min( DDR ,( ( CRS / FirstVNF_RAM_Server ) + Const ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( MLU + ( MUM - ( MUR * RRSe ) ) ) / ( ( ( ( RCSe / ( RMSe / MLU ) ) / ( ( MUM / RRSe ) / CS ) ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( RMSe + MUM ) ) / RCSe ) ) )", "obj1": 0.6858736059479554, "obj2": 0.1335658809452099}, {"determining": "( Max( DDR,( ( ( Max( FirstVNF_Mem,FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server + Max( ACS,ARS ) ) + ( FirstVNF_RAM / PN ) ) ) - ( DDR + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / MUR ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + CS ) ,( ( MUM + ( MUM + RRSe ) ) + RRSe ) ) - MUM ) - RMSe ) / Max( Min( RRSe ,( CS / RCSe ) ),( DS / Min( MUR ,( ( ( MUR + MUC ) + MUC ) / MUR ) ) ) ) )", "obj1": 0.17657992565055763, "obj2": 0.6481221921117543}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + BR ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( RMSe ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( ( MUR / CS ) ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( Max( RCSe,Max( Min( Min( MLU ,RCSe ) ,RCSe ),DS ) ) * MUR ) )", "obj1": 0.275092936802974, "obj2": 0.5426840254861152}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( MRS / PN ) ),Max( FirstVNF_RAM_Server,ARS ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( RMSe - MLU ) ) ) ),( Max( ( MLU / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( MLU / ( ( MUC + MUM ) + ( MUR / Max( ( DS * MLU ),RMSe ) ) ) ) + MUM ) )", "obj1": 0.5631970260223048, "obj2": 0.22963339191361043}, {"determining": "( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server * Max( ( MRS / Min( ARS ,( RRS - FirstVNF_CPU ) ) ),FirstVNF_RAM_Server ) ) ),FirstVNF_RAM ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( Min( Min( ( MUM * RRSe ) ,RRSe ) ,( Min( MUM ,RRSe ) * MUR ) ) * RCSe ) - Max( ( ( RRSe * ( DS + ( ( MUC - CS ) - MUM ) ) ) + MUM ),( RCSe - ( CS * MLU ) ) ) ) / RCSe )", "obj1": 0.19330855018587362, "obj2": 0.6370954105865654}, {"determining": "( ( ( FirstVNF_Mem + ( AMS - RRS ) ) * Min( DDR ,ACS ) ) - Min( FirstVNF_CPU ,Max( Max( ( ARS * FirstVNF_CPU ),DDR ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( MUC + MLU ) + CS ) + DS ) - Min( RCSe ,( Min( ( ( ( RRSe - CS ) + DS ) - DS ) ,Min( RCSe ,( CS - CS ) ) ) + ( CS + Max( ( CS - RCSe ),MUC ) ) ) ) ) / ( MUR + Max( RRSe,( Min( Min( ( RRSe / ( RMSe + MUR ) ) ,MUM ) ,MUC ) + RMSe ) ) ) )", "obj1": 0.13011152416356878, "obj2": 0.6805461756896917}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,Min( MRS ,( FirstVNF_CPU_Server + AMS ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( ( Max( MUM,MUR ) / DS ) / CS ),RMSe ) * ( DS + ( DS * MUM ) ) ) )", "obj1": 0.0687732342007435, "obj2": 0.8137746976350883}, {"determining": "Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ,( CRS / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( Min( ( MLU - MUC ) ,( DS * Min( Min( CS ,DS ) ,Max( RRSe,MUC ) ) ) ) / ( RCSe / ( RCSe - MUC ) ) ),( ( RMSe - CS ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( MUR / RRSe ),( MUR - RCSe ) ) + ( Max( RCSe,DS ) * Max( MUR,MUM ) ) ) ) ) ) / ( Max( ( Max( MUR,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - DS ) ) ) )", "obj1": 0.4423791821561338, "obj2": 0.3696692496026967}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / Max( ARS,( Max( AMS,FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) ) ) ,( PN / AMS ) )", "choosing": "( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) - ( ( ( ( Min( ( ( MUC + CS ) / ( DS - MUC ) ) ,( RCSe + RCSe ) ) / ( MUM / DS ) ) / CS ) - MUM ) / ( RCSe + RRSe ) ) )", "obj1": 0.31970260223048325, "obj2": 0.4983907243542333}, {"determining": "( ( ( FirstVNF_Mem / ( FirstVNF_RAM - RRS ) ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( ( ( CS + RCSe ) / ( MUC * ( Min( Max( MUC,DS ) ,RCSe ) / Max( MUM,MUC ) ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( MUR / MLU ) ) + MUM ) )", "obj1": 0.604089219330855, "obj2": 0.2000246738664768}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( FirstVNF_RAM / ( ( ( PN / Min( DDR ,( ( CRS / FirstVNF_RAM_Server ) + Const ) ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) )", "choosing": "( Min( ( DS + MUM ) ,Min( RCSe ,MUR ) ) * ( MUM + MUM ) )", "obj1": 0.9646840148698885, "obj2": 0.013023333119728576}, {"determining": "( Max( DDR,( ( ( PN + FirstVNF_RAM ) + Min( ( Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) + ( DDR - PN ) ) ,BR ) ) * Min( ( CRS + Const ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) ) - ( Max( DDR,( AMS + ( CRS * FirstVNF_RAM_Server ) ) ) * MDR ) )", "choosing": "( Min( MLU ,( MUM - ( ( ( ( CS / MUC ) - RCSe ) * Min( MUR ,( ( MUR - RRSe ) * Min( MUC ,RMSe ) ) ) ) + MUC ) ) ) / RCSe )", "obj1": 0.40148698884758366, "obj2": 0.42518502774574196}, {"determining": "( ( Max( ( Max( DDR,( ( ( ACS + FirstVNF_RAM_Server ) + ( FirstVNF_Mem * FirstVNF_CPU ) ) - CRS ) ) - ( Min( MDR ,MDR ) * MDR ) ),FirstVNF_CPU_Server ) * MDR ) - Max( Max( FirstVNF_CPU_Server,AMS ),PN ) )", "choosing": "( ( ( DS * MUM ) - ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),( Min( ( DS * MLU ) ,Max( RCSe,Max( RCSe,DS ) ) ) * DS ) ) * ( MUC - MLU ) ) ) / Max( ( Min( DS ,MLU ) / ( ( ( ( MUC / MUR ) + ( MUM * Min( DS ,RRSe ) ) ) + ( MLU / Min( MUC ,( RRSe * RRSe ) ) ) ) - RCSe ) ),( CS + ( MUC + Max( RCSe,DS ) ) ) ) )", "obj1": 0.15427509293680297, "obj2": 0.6594936398636764}, {"determining": "Min( ( FirstVNF_Mem_Server - AMS ) ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Max( RMSe,( MUM * RMSe ) ) + ( RCSe + MUC ) ) - DS ) - ( ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( Max( RCSe,DS ) + Max( MLU,RMSe ) ) ) / RCSe ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.5743494423791822, "obj2": 0.2233685174272698}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( Const * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.6171003717472119, "obj2": 0.19003384861306874}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ACS ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MRS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( Max( ( ( ( ( RMSe * RCSe ) - MUR ) + DS ) / ( RRSe / Min( ( RRSe / MLU ) ,MLU ) ) ),( ( RMSe - ( ( MUC * MUM ) + Max( MLU,MUC ) ) ) / RCSe ) ) * Min( MUM ,( ( DS + MUC ) + Min( MLU ,RMSe ) ) ) ) ) / RCSe )", "obj1": 0.26394052044609667, "obj2": 0.5649429640685663}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( ( ARS - AMS ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( ARS + CRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( MLU / ( MUC / ( MUR - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( Max( MUM,MLU ) + MUM ) )", "obj1": 0.5836431226765799, "obj2": 0.21255682791555436}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU_Server / DDR ) ) - ( FirstVNF_RAM_Server - ( Min( Max( FirstVNF_CPU_Server,ARS ) ,CRS ) - ( ARS - FirstVNF_RAM_Server ) ) ) ) * ( PN / Min( Max( BR,Max( ( ARS - MRS ),FirstVNF_RAM_Server ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( RCSe,( MLU - ( ( ( RRSe * ( Min( MUM ,RMSe ) + ( RCSe * MLU ) ) ) / ( MLU / MUM ) ) / ( CS / ( ( DS * RCSe ) / MUR ) ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.8866171003717472, "obj2": 0.04075336132233188}, {"determining": "Min( ( DDR + Min( DDR ,ACS ) ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( Max( ( MLU / RCSe ),MUC ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.4479553903345725, "obj2": 0.3499178372600625}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * ( Const * AMS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_CPU ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( ( RCSe / Max( MLU,MLU ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUM / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.5241635687732342, "obj2": 0.2669264332871723}, {"determining": "( Min( ( FirstVNF_Mem_Server + RRS ) ,Max( ( ( Max( DDR,FirstVNF_Mem ) + RRS ) - FirstVNF_CPU_Server ),AMS ) ) * ( ( ( ACS + BR ) / Min( Min( PN ,( ( CRS / AMS ) + BR ) ) ,Const ) ) / ( FirstVNF_RAM / Max( ACS,MDR ) ) ) )", "choosing": "( Max( ( MUC / ( Max( RRSe,RCSe ) / RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( ( RMSe / MUM ),( MLU - RCSe ) ) ) ) + MUR ) ) ) - DS )", "obj1": 0.10594795539033457, "obj2": 0.7565652759720981}, {"determining": "( Max( ( Max( ACS,CRS ) - FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) * ( ( PN / FirstVNF_Mem ) - Min( MRS ,AMS ) ) )", "choosing": "( ( CS / MLU ) * ( ( ( RCSe / RRSe ) * RCSe ) / RCSe ) )", "obj1": 0.45539033457249073, "obj2": 0.3402741432408146}, {"determining": "( Max( ( BR / FirstVNF_RAM ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - ( PN / FirstVNF_Mem ) ) ) ) ) ) ) + ( FirstVNF_RAM_Server * PN ) )", "choosing": "( Max( Max( RCSe,Max( MUR,CS ) ),CS ) - ( Min( MUR ,MUR ) + MUR ) )", "obj1": 0.19888475836431227, "obj2": 0.6298091100515549}, {"determining": "Min( Max( ACS,FirstVNF_Mem_Server ) ,Max( Min( CRS ,CRS ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( Min( Max( MUC,RRSe ) ,Max( Max( MUC,DS ),Min( MLU ,RRSe ) ) ) / CS ) + MUR ) / Max( RCSe,MUR ) ) + ( ( RCSe * ( ( RMSe - RCSe ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ) + ( MLU / DS ) ) ) - ( ( ( ( RMSe - ( ( DS / RMSe ) / DS ) ) + ( ( DS / RMSe ) / MLU ) ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) )", "obj1": 0.055762081784386616, "obj2": 0.8450615023735055}, {"determining": "( Max( MDR,Max( CRS,( MRS - ( AMS - BR ) ) ) ) - ( Max( Const,MRS ) * MDR ) )", "choosing": "( Max( ( MUR * MUM ),Max( MUR,DS ) ) / RCSe )", "obj1": 0.2732342007434944, "obj2": 0.5568618412645683}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),Min( Const ,MDR ) )", "choosing": "( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,( MUC * RCSe ) ) ) ) ) ) - ( MUC + MUR ) )", "obj1": 0.08921933085501858, "obj2": 0.7885918579018925}, {"determining": "Min( ( FirstVNF_RAM_Server * CRS ) ,( PN / ( BR + Min( Min( ( FirstVNF_CPU_Server + ( BR - ( MDR / PN ) ) ) ,Max( FirstVNF_Mem,AMS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,( ( MUC + ( MUM - MUM ) ) * RCSe ) ) - ( Min( ( MUM / ( CS * DS ) ) ,Min( MUR ,( MUM + ( Max( ( CS + MLU ),( CS - RCSe ) ) + MLU ) ) ) ) / ( ( MLU / MUM ) / ( MUM - DS ) ) ) )", "obj1": 0.9182156133828996, "obj2": 0.025712151610674874}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( RRS - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / ( Min( ( ( ( MUC / MUR ) * ( DS / DS ) ) + ( RRSe * ( DS + MUC ) ) ) ,RCSe ) * MUC ) ),RMSe ) * ( MUR + MUM ) )", "obj1": 0.6449814126394052, "obj2": 0.16604764845848086}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - BR ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * Max( RCSe,( Min( DS ,( ( ( RCSe - Max( RMSe,MLU ) ) / Max( MUM,MUC ) ) + RMSe ) ) + ( MUM + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.637546468401487, "obj2": 0.17318767670117427}, {"determining": "( ( MRS - MRS ) - ( Max( BR,( ( Min( FirstVNF_Mem ,( Const + PN ) ) / FirstVNF_Mem_Server ) + ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) / FirstVNF_CPU ) )", "choosing": "( ( ( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( Max( CS,MUM ) + DS ) ) + CS ) ,( ( MUM + ( ( CS / MUR ) + ( MUM * MUR ) ) ) + RRSe ) ) - MUM ) - ( MUM - ( MUR + MLU ) ) ) / ( ( MUM * ( ( Min( RMSe ,MUM ) / RRSe ) - MLU ) ) + Min( MUC ,( MLU - MUC ) ) ) )", "obj1": 0.17100371747211895, "obj2": 0.6583645584589786}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( PN / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( Min( DDR ,( ACS + ( ACS / FirstVNF_RAM ) ) ),ARS ) ) ) ) ,( ( MDR - Min( ( ARS + RRS ) ,( CRS * AMS ) ) ) - Min( PN ,BR ) ) )", "choosing": "( Max( RMSe,Max( MUR,( Max( MUM,DS ) + ( RCSe - MLU ) ) ) ) - Min( MUC ,RMSe ) )", "obj1": 0.5576208178438662, "obj2": 0.24853107403560418}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ( ( RRS - BR ) / BR ) ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - MUM ) / ( MUM - ( MUR + MLU ) ) )", "obj1": 0.9330855018587361, "obj2": 0.021479392072308017}, {"determining": "( ( ( BR + FirstVNF_CPU_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( FirstVNF_RAM ,Min( ( ARS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( ACS,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * Max( MUC,MUC ) ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( MUM + MUM ) )", "obj1": 0.5947955390334573, "obj2": 0.206970309125637}, {"determining": "Min( ( DDR + FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - BR ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( DS / CS ) ) )", "obj1": 0.38104089219330856, "obj2": 0.4263665280084395}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( Min( BR ,FirstVNF_Mem ) / Min( ( ( ARS - ( Const / ( MRS + RRS ) ) ) * Const ) ,ARS ) ) )", "choosing": "( Max( ( ( RMSe * ( Max( Max( DS,( CS - DS ) ),RRSe ) * ( ( RRSe - Min( MUR ,DS ) ) / MUM ) ) ) - ( MUR - ( Min( CS ,CS ) - ( Min( RMSe ,MLU ) + MUR ) ) ) ),Max( CS,( ( ( RMSe - ( RRSe - RMSe ) ) - Min( DS ,Max( ( CS - RRSe ),MUC ) ) ) + ( Max( RRSe,Min( Min( RCSe ,DS ) ,MLU ) ) / ( Max( ( CS / RCSe ),RCSe ) * RRSe ) ) ) ) ) - ( DS + RMSe ) )", "obj1": 0.09107806691449814, "obj2": 0.7730155837645887}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Min( MRS ,Min( AMS ,Const ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( Min( AMS ,FirstVNF_Mem ),ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( MLU + ( MUM - ( MUR * RRSe ) ) ) / ( ( ( ( RCSe / ( RMSe / MLU ) ) / ( ( RMSe / RRSe ) / CS ) ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( RMSe + MUM ) ) / RCSe ) ) )", "obj1": 0.7360594795539034, "obj2": 0.10682751276529846}, {"determining": "( ( ( Max( ( ( ( FirstVNF_CPU_Server - Min( MRS ,FirstVNF_CPU ) ) / ( ( PN - ARS ) / ( ARS - FirstVNF_RAM_Server ) ) ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ),RRS ) - MRS ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - Max( MUR,RRSe ) ) / ( RCSe * Min( CS ,RCSe ) ) )", "obj1": 0.8698884758364313, "obj2": 0.04512694094904764}, {"determining": "( Min( ( FirstVNF_Mem_Server + Min( CRS ,DDR ) ) ,Max( ( ( ( ( ( BR + MRS ) - ( MRS - DDR ) ) + ( FirstVNF_CPU / ( MDR - AMS ) ) ) - MDR ) - Min( ACS ,( MRS + FirstVNF_Mem_Server ) ) ),AMS ) ) * ( ( PN + AMS ) - FirstVNF_CPU ) )", "choosing": "( Max( Max( Min( ( ( CS + RRSe ) - Min( ( RCSe * MUR ) ,CS ) ) ,Min( Min( ( CS + ( RMSe * CS ) ) ,CS ) ,( MUC * ( ( MUM / MUM ) * ( MUR * RCSe ) ) ) ) ),Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) - DS )", "obj1": 0.09479553903345725, "obj2": 0.7632600283955792}, {"determining": "Min( ( PN + Max( ( ( PN + Max( FirstVNF_RAM_Server,Max( PN,PN ) ) ) - Const ),CRS ) ) ,( MRS * AMS ) )", "choosing": "( ( ( ( Max( ( ( MLU + DS ) + MUC ),MUM ) + MUC ) / Min( CS ,MUC ) ) + ( ( RCSe * ( ( Min( RRSe ,RCSe ) - RCSe ) + Min( MUM ,( Min( CS ,RRSe ) / DS ) ) ) ) + ( MLU / RCSe ) ) ) - Max( ( CS - MUM ),MUC ) )", "obj1": 0.2137546468401487, "obj2": 0.622820779430404}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server * RRS ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - RMSe ) * ( MLU / ( MUC / ( DS - MLU ) ) ) ),( Max( ( MUR / MLU ),( CS - RCSe ) ) / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) + Min( MLU ,( RCSe - MUR ) ) ) )", "obj1": 0.4256505576208178, "obj2": 0.38077356669694873}, {"determining": "( ( ( ( RRS / ( CRS - RRS ) ) * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( RCSe * ( ( RRSe - ( MUM - ( ( ( MUM * CS ) + Min( RMSe ,MUM ) ) / MUM ) ) ) + DS ) ) )", "obj1": 0.8977695167286245, "obj2": 0.03580709780608458}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( ( Const / AMS ) / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,( ( ( FirstVNF_Mem / MDR ) - Min( Min( ( ( ( FirstVNF_Mem - DDR ) * AMS ) * ( FirstVNF_Mem_Server + RRS ) ) ,MRS ) ,( FirstVNF_Mem_Server / DDR ) ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( ( ( CS / Max( ( Max( RMSe,( RMSe + MUR ) ) * RMSe ),MUR ) ) + ( ( ( Min( DS ,MUR ) + Max( RRSe,MUM ) ) + RCSe ) / ( MUR * MUR ) ) ) - DS ) - RMSe )", "obj1": 0.47769516728624534, "obj2": 0.31778288992755255}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( MRS * DDR ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( DS ,CS ) ) ) ) ) ) ) )", "obj1": 0.34386617100371747, "obj2": 0.46064950960073564}, {"determining": "Max( ( Min( Max( ( Max( AMS,MRS ) + FirstVNF_Mem ),MRS ) ,( FirstVNF_RAM - Const ) ) - FirstVNF_RAM_Server ),( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( DS ,MLU ) / ( ( MLU * Min( ( DS / MUM ) ,MLU ) ) - DS ) ),CS ) ) - ( Max( ( MUC / ( RCSe * ( MUC + DS ) ) ),MLU ) + MUR ) )", "obj1": 0.9089219330855018, "obj2": 0.031847174541287514}, {"determining": "( ( PN / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) - ( ( ( ( BR - ( ( FirstVNF_CPU * MDR ) + ( FirstVNF_RAM / PN ) ) ) - ( Min( MDR ,FirstVNF_CPU ) + MDR ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) / FirstVNF_CPU ) )", "choosing": "( ( Max( RRSe,MUR ) * ( MLU - DS ) ) / Max( ( MUM + MUC ),Min( ( ( RRSe / CS ) - MUR ) ,RMSe ) ) )", "obj1": 0.4684014869888476, "obj2": 0.32698776593136625}, {"determining": "( ( ( BR * ( MRS / PN ) ) * ACS ) - ( RRS - ( ( ( ( FirstVNF_CPU_Server + MDR ) / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ,Const ) ) ) ) * Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "( ( MUM / ( MUM + ( ( Max( RCSe,( RRSe - ( CS / MUM ) ) ) - Max( RCSe,RCSe ) ) + MUC ) ) ) / ( RCSe * ( MUC + ( MLU / MUC ) ) ) )", "obj1": 0.8215613382899628, "obj2": 0.07009815256827011}, {"determining": "Max( Min( AMS ,BR ),( Max( BR,Min( Min( MRS ,ACS ) ,Max( ARS,ACS ) ) ) - ( ( DDR - ( Max( ( ( Const - Const ) * RRS ),FirstVNF_Mem_Server ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( MLU * RRSe ) - ( MUC + MUR ) )", "obj1": 0.22862453531598512, "obj2": 0.6037037546229166}, {"determining": "( PN - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( ( Max( ( MUR - ( MUM - ( MUR * RRSe ) ) ),MUR ) + ( MUC + ( RCSe / Max( MLU,MLU ) ) ) ) * MUR ) * ( MUC + DS ) ) )", "obj1": 0.8568773234200744, "obj2": 0.05395432939842573}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( MRS ,MDR ) ,Max( ARS,ACS ) ) ) - ( ( DDR - MRS ) - ARS ) ) ) - ( Min( DDR ,( ( ( PN / ( ARS * ( FirstVNF_Mem_Server + MRS ) ) ) - ( FirstVNF_CPU_Server - AMS ) ) * Max( FirstVNF_RAM_Server,ARS ) ) ) * MDR ) )", "choosing": "( Max( ( MUC / CS ),( MUM / ( MUM + MUM ) ) ) / RCSe )", "obj1": 0.25650557620817843, "obj2": 0.5766766560219143}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( Max( FirstVNF_Mem,( MRS + FirstVNF_CPU ) ) ,Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( ( Max( MUR,MUC ) * ( ( DS + CS ) / Max( MUM,MUC ) ) ) + MUM ) )", "obj1": 0.7434944237918215, "obj2": 0.09716646597778957}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_Mem_Server + RRS ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( CS + RCSe ) / ( MUC * ( ( DS + CS ) / Max( MUM,RMSe ) ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.5446096654275093, "obj2": 0.2581313194829769}, {"determining": "Min( Min( MRS ,( FirstVNF_RAM / ( ( ( RRS * MDR ) - FirstVNF_CPU ) * ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ,Max( ( FirstVNF_Mem - ARS ),( MDR - FirstVNF_RAM ) ) )", "choosing": "( Min( Min( Min( Max( MUM,( MUR - Max( RCSe,MLU ) ) ) ,DS ) ,MLU ) ,RCSe ) - ( Min( Max( ( CS * RCSe ),Max( MLU,DS ) ) ,( ( MLU + CS ) + ( RRSe + MUM ) ) ) / ( Max( ( Max( RMSe,MUR ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - ( ( ( Min( CS ,RMSe ) - MUR ) / ( ( RMSe - MUR ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 0.4368029739776952, "obj2": 0.3774396185480943}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( BR,Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) ,( ( ( MLU / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.2342007434944238, "obj2": 0.5941970895525245}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6654275092936803, "obj2": 0.15057405982916736}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( RCSe * ( ( ( Max( CS,DS ) + MUR ) - MUC ) * RRSe ) ) )", "obj1": 0.3513011152416357, "obj2": 0.4526865994702282}, {"determining": "( ( MDR - Min( ( BR + ( MDR + AMS ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( MLU * Min( MLU ,MUC ) ) / ( RMSe * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.22490706319702602, "obj2": 0.6135145248329357}, {"determining": "( ( MRS * ( MDR + FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( Min( Max( ( ( Min( ( DS / RRSe ) ,MUR ) * RMSe ) + ( RMSe * MUM ) ),( ( ( MLU * ( DS / MUC ) ) - ( Min( MLU ,RCSe ) - Max( MUR,RRSe ) ) ) - ( MUC * DS ) ) ) ,RMSe ),RMSe ) * ( ( MLU / Min( ( DS + MLU ) ,Max( ( ( RRSe * ( MUC - RMSe ) ) - RMSe ),DS ) ) ) + MUM ) )", "obj1": 0.8197026022304833, "obj2": 0.07451695990935053}, {"determining": "( PN * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * Max( ACS,PN ) ) ) ) - CRS ) ) ) )", "choosing": "( ( ( RMSe - MUC ) - MUM ) * ( DS + MUM ) )", "obj1": 0.7211895910780669, "obj2": 0.11641542144831385}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( Min( Min( MRS ,FirstVNF_RAM ) ,PN ),Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_CPU ) ) ) ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( RCSe + ( ( MUC / DS ) - MLU ) ) + Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ,( ( ( ( Max( MUM,MLU ) + MUM ) / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.9479553903345725, "obj2": 0.014141354377108992}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - Min( ( Min( ARS ,Max( PN,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) * ( ( MRS - ( ACS * DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( ( MUM + CS ),( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / Min( DS ,( MUR + RRSe ) ) ) ) )", "obj1": 0.35315985130111527, "obj2": 0.4443447889961822}, {"determining": "( ( MRS * ( MDR + FirstVNF_Mem ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( Const ,Max( Min( FirstVNF_RAM_Server ,ACS ),( ( Const / FirstVNF_RAM_Server ) + BR ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( Min( Max( ( ( Min( ( DS / RRSe ) ,MUR ) * RMSe ) + ( RMSe * MUM ) ),( ( ( MLU * ( DS / MUC ) ) - MUR ) - ( MUC * DS ) ) ) ,RMSe ),RMSe ) * ( ( ( ( RRSe * RMSe ) - ( MUM / MUR ) ) / Min( ( DS + MLU ) ,Max( ( ( RRSe * ( MUC - RMSe ) ) - RMSe ),DS ) ) ) + MUM ) )", "obj1": 0.7267657992565055, "obj2": 0.11220401852664165}, {"determining": "( ( MDR - Min( ( BR + ( FirstVNF_RAM / ( ( MRS * RRS ) + Max( FirstVNF_RAM_Server,MDR ) ) ) ) ,( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - Min( PN ,BR ) )", "choosing": "( ( MLU * ( ( CS + RCSe ) / ( MUC * ( ( DS + CS ) / Max( MUM,MUC ) ) ) ) ) / ( ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) * ( RCSe + Min( ( RMSe - ( ( MUM - Max( RCSe,MUM ) ) / RRSe ) ) ,RRSe ) ) ) )", "obj1": 0.9962825278810409, "obj2": 0.003959919730445569}, {"determining": "( ( ( BR * ( MRS / PN ) ) * ACS ) - ( ( ( Const - Const ) * RRS ) - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - Min( ARS ,Const ) ) ) ) * ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) / Min( MRS ,( ( PN / FirstVNF_Mem ) - ( ARS * Min( BR ,FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( Max( RMSe,Max( RRSe,RCSe ) ),Max( CS,( ( ( MLU / RMSe ) - Min( DS ,Max( RMSe,MUC ) ) ) + MUR ) ) ) / ( RCSe * ( MUC + ( MUC / ( MUR - MUM ) ) ) ) )", "obj1": 0.845724907063197, "obj2": 0.061502593611007766}, {"determining": "( Max( ( FirstVNF_Mem / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ),( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( Min( MDR ,FirstVNF_CPU ) + Min( Const ,MDR ) ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ) - ( MRS / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - Max( RCSe,DS ) ) * RCSe ) ) / ( MUC + Max( ( MUC + MUM ),RCSe ) ) ) ) - ( MUC + MUR ) ) / RCSe )", "obj1": 0.0724907063197026, "obj2": 0.8046479736097537}, {"determining": "( ( ( BR * FirstVNF_RAM_Server ) * ACS ) - ( RRS - ( Max( ARS,ACS ) / RRS ) ) )", "choosing": "( ( RMSe * Min( DS ,Max( ( Max( MLU,( MUM / ( MUM + RRSe ) ) ) - Max( ( Min( RMSe ,RMSe ) / ( RMSe * CS ) ),( ( RCSe * MUR ) - ( MUR / RCSe ) ) ) ),DS ) ) ) / ( RCSe * ( MUC + DS ) ) )", "obj1": 0.6282527881040892, "obj2": 0.18276778006846237}, {"determining": "Max( Min( ( FirstVNF_CPU + ARS ) ,BR ),( Max( BR,Min( Min( MRS ,( FirstVNF_RAM / ( CRS / Min( DDR ,FirstVNF_CPU_Server ) ) ) ) ,Max( ( RRS - FirstVNF_Mem_Server ),ACS ) ) ) - ( ( DDR - ( Max( ( Min( AMS ,DDR ) * ( ACS + FirstVNF_RAM ) ),FirstVNF_Mem_Server ) * ( ( MDR - Const ) + FirstVNF_CPU_Server ) ) ) - ARS ) ) )", "choosing": "( ( Max( MUR,RMSe ) - ( ( Min( MUC ,MUM ) - Max( RRSe,CS ) ) / ( Max( ( ( RMSe + ( MUC * RCSe ) ) / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( RRSe ,MUC ) ) ) ) ) - ( MUM * MLU ) )", "obj1": 0.08178438661710037, "obj2": 0.7968648867524509}, {"determining": "Min( Min( MRS ,( PN / ( Max( MRS,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_CPU ) ,Max( Const,ARS ) ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,Min( MUR ,( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) / ( ( RCSe / Max( MLU,MLU ) ) / ( MUM - Min( ( ( RCSe - MUM ) + ( ( RMSe * MUM ) - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ) ) )", "obj1": 0.5297397769516728, "obj2": 0.26301482735791226}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_RAM_Server ),( Max( Min( Min( MRS ,FirstVNF_RAM ) ,PN ),Min( Min( FirstVNF_CPU ,MRS ) ,FirstVNF_Mem ) ) - ( ( DDR - ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem_Server - Max( FirstVNF_RAM_Server,( Const * AMS ) ) ) ) ) ) - ( ( Max( BR,Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server / FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server - MRS ) + FirstVNF_CPU ) ) ) ) * MDR ) * MDR ) )", "choosing": "( Min( ( ( RCSe + ( ( MUC / DS ) - MLU ) ) + Min( ( ( RCSe - MUM ) + ( MLU - ( RMSe + RCSe ) ) ) ,( Max( ( MUR / MLU ),( CS - RCSe ) ) / Max( ( RMSe * CS ),Min( MUM ,CS ) ) ) ) ) ,( ( ( ( Max( MUM,MLU ) + MUM ) / MLU ) + ( MUM + RRSe ) ) + Min( RRSe ,DS ) ) ) / RCSe )", "obj1": 0.9442379182156134, "obj2": 0.017985212621538762}, {"determining": "( ( ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) * ACS ) - ( RRS - ( ( ( PN / ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_RAM_Server - ( CRS - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( Min( MLU ,RCSe ) - RMSe ) / ( ( RMSe - Min( ( MLU + ( MUM / ( DS * ( MLU - RMSe ) ) ) ) ,( ( Min( MUR ,RRSe ) / CS ) + ( MUC / MUR ) ) ) ) - ( DS * CS ) ) )", "obj1": 0.8661710037174721, "obj2": 0.05235046073305124}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Max( BR,Min( ( ( FirstVNF_RAM_Server - BR ) / BR ) ,( FirstVNF_CPU - Const ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) ,( ( PN / Min( ( FirstVNF_RAM / AMS ) ,Max( ( FirstVNF_RAM_Server + Max( DDR,MDR ) ),DDR ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( ( Max( MLU,MUC ) - MUM ) * ( RRSe - MUM ) ),( RRSe / RMSe ) ) / CS ),RMSe ) * ( Min( MUM ,MUM ) / ( Max( RRSe,CS ) + MUR ) ) )", "obj1": 0.6561338289962825, "obj2": 0.15799318454809133}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS / ARS ) ) - ( ( Max( BR,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,Max( BR,ACS ) ) ) * ( PN * ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( RRSe - ( ( MUM - ( MUR + MLU ) ) - ( ( MLU / MUR ) - DS ) ) ) / RCSe )", "obj1": 0.25092936802973975, "obj2": 0.5797113540923348}, {"determining": "( PN * ( ( FirstVNF_RAM / MRS ) - ( ARS * ( Min( MDR ,Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( Max( MLU,CS ) - RRSe ) / ( RRSe * DS ) ),RRSe ) * ( MUC - ( DS * Min( Min( CS ,CS ) ,Max( RRSe,MUC ) ) ) ) ) ,( MUM * ( MUR + CS ) ) ) - MUM ) * ( DS + MUM ) )", "obj1": 0.6821561338289963, "obj2": 0.13727657142327734}, {"determining": "( ( Max( Min( ( ACS + ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ,( ACS / Const ) ),Min( Const ,( ARS * ( BR - ( ARS - ( RRS - BR ) ) ) ) ) ) + Max( ( ACS + PN ),BR ) ) * ( ( PN / Min( ARS ,Const ) ) - ( ( Min( BR ,FirstVNF_CPU_Server ) * Max( Max( RRS,FirstVNF_CPU ),BR ) ) * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) - CRS ) ) ) )", "choosing": "( ( MUR / CS ) * ( ( ( CS + ( RRSe - Max( RCSe,( Min( DS ,CS ) + ( MLU * RRSe ) ) ) ) ) / RCSe ) + MUM ) )", "obj1": 0.7657992565055762, "obj2": 0.08907015726787422}, {"determining": "Min( Max( ( DDR + ( CRS + ( ( FirstVNF_CPU_Server - ( ARS / MRS ) ) / ( ( PN + ( FirstVNF_CPU_Server * ACS ) ) * FirstVNF_CPU_Server ) ) ) ),PN ) ,( ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU_Server * PN ) * Const ) ) / ( Min( ( ( FirstVNF_Mem_Server - MDR ) + FirstVNF_CPU ) ,FirstVNF_RAM ) * MDR ) ) )", "choosing": "( ( ( ( ( RRSe / CS ) - MUR ) / ( ( MUR - MUR ) + DS ) ) + Min( MUM ,( Min( MUM ,RMSe ) / DS ) ) ) - ( ( Max( ( MUR - DS ),MUR ) + ( MUC + ( MUM + ( Max( ( MUR / CS ),( CS - RCSe ) ) + ( Max( RCSe,DS ) * Max( RCSe,RCSe ) ) ) ) ) ) * Min( MUM ,MUM ) ) )", "obj1": 0.21561338289962825, "obj2": 0.6157225144837347}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - ARS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( Max( BR,Min( Const ,( FirstVNF_CPU - Min( FirstVNF_Mem ,MDR ) ) ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( PN / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( Max( ( MLU / ( ( MUC + ( MLU - RRSe ) ) + MUR ) ),( MUC * RMSe ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( RMSe + Max( DS,RMSe ) ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.9814126394052045, "obj2": 0.007930589670081856}, {"determining": "Min( Min( MRS ,( PN / ( ( ( ARS / ( ARS * MDR ) ) - FirstVNF_CPU ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ,Min( MRS ,( ( PN / ( Min( ( FirstVNF_RAM_Server - ( RRS - FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) * MDR ) ) - FirstVNF_CPU ) ) )", "choosing": "( ( MUM / ( CS * DS ) ) - ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUC * ( ( ( DS * RMSe ) - MUM ) / Max( CS,RRSe ) ) ) ) ) )", "obj1": 0.3643122676579926, "obj2": 0.44112697712044624}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,Min( Min( ( Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,DDR ) - FirstVNF_RAM_Server ) ,AMS ) ,( FirstVNF_Mem / Min( BR ,RRS ) ) ) ) - FirstVNF_RAM_Server ),( ( FirstVNF_RAM / Min( FirstVNF_Mem ,MRS ) ) - ( ( ( Min( DDR ,RRS ) / Const ) - ( ( MRS / ARS ) * FirstVNF_Mem ) ) - ARS ) ) )", "choosing": "( ( Max( ( Max( ( MUC / Max( Max( RMSe,DS ),RRSe ) ),Max( ( ( MLU + RCSe ) - DS ),CS ) ) / RCSe ),Min( MUC ,RMSe ) ) - Max( Max( Max( CS,CS ),( MLU / ( DS / CS ) ) ),CS ) ) - ( MUC + Max( ( MUC + MUM ),RCSe ) ) )", "obj1": 0.24721189591078066, "obj2": 0.5882442805194602}, {"determining": "Min( Min( MRS ,Min( Min( ( ( Min( Min( DDR ,ACS ) ,( FirstVNF_Mem_Server + RRS ) ) / ( FirstVNF_Mem - ARS ) ) + RRS ) ,ACS ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem / MDR ) - ( ARS * MDR ) ) * Min( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,Min( DDR ,FirstVNF_CPU ) ) ) ,( ( Max( ( BR - ( AMS + ARS ) ),FirstVNF_CPU_Server ) / FirstVNF_Mem ) - ( ARS * MDR ) ) ) ) )", "choosing": "( ( Max( RMSe,( ( RMSe - CS ) * RCSe ) ) / ( Max( ( MUC / CS ),Min( MLU ,RRSe ) ) / ( MUM - Min( MUM ,( Min( MUM ,RMSe ) / ( RRSe - MUM ) ) ) ) ) ) - ( ( ( MUC * RCSe ) - Min( ( DS + ( ( ( MUM / DS ) * DS ) - MUM ) ) ,( RMSe + Max( DS,RMSe ) ) ) ) / ( RMSe + RCSe ) ) )", "obj1": 0.9814126394052045, "obj2": 0.007930589670081856}, {"determining": "Max( ( ARS + ( MRS + FirstVNF_Mem_Server ) ),( ACS / ( ( AMS * MRS ) - DDR ) ) )", "choosing": "( ( Max( RMSe,MUR ) - Max( ( Min( ( ( RRSe + ( RCSe + MUC ) ) * MUC ) ,MLU ) / ( ( ( ( MUC / MUR ) + ( RMSe / RCSe ) ) + ( MLU / Min( RCSe ,RCSe ) ) ) - ( MLU + ( MUM - ( MUR * RRSe ) ) ) ) ),CS ) ) - ( MUC / ( Max( Max( MUR,RMSe ),Min( Max( MUC,( ( MLU - RMSe ) + ( RMSe + RCSe ) ) ) ,DS ) ) / RCSe ) ) )", "obj1": 0.24535315985130113, "obj2": 0.5935160462190101}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_Mem - BR ) ) ) ) - ( BR * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / ( RRSe * DS ) ),RRSe ) * ( MUC - MLU ) ) ,RMSe ) - MUM ) * Max( RCSe,( Min( DS ,( ( ( RCSe - Max( RMSe,MLU ) ) / Max( MUM,MUC ) ) + RMSe ) ) + ( MUM + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.6263940520446096, "obj2": 0.18500514511913213}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( Min( MRS ,Min( AMS ,Const ) ) * MDR ) ) * Min( Max( FirstVNF_RAM,Min( CRS ,Min( DDR ,( Max( Min( AMS ,FirstVNF_Mem ),ACS ) + AMS ) ) ) ) ,( ( PN / Min( ( ( ARS - ( RRS - BR ) ) / AMS ) ,Max( Min( FirstVNF_RAM_Server ,( CRS + FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem / FirstVNF_Mem ) - Min( MDR ,AMS ) ) ) ) ) - ( ARS * MDR ) ) ) )", "choosing": "( Max( ( Max( ( RCSe / RRSe ),( MUC / ( MUR - MUM ) ) ) / CS ),RMSe ) * ( ( ( MLU + ( MUM - ( MUR * RRSe ) ) ) / ( ( ( ( RCSe / ( RMSe / MLU ) ) / ( ( RMSe / RRSe ) / CS ) ) * ( RCSe / MUM ) ) + MUR ) ) + ( Max( Max( MUR,RMSe ),( RMSe + MUM ) ) / RCSe ) ) )", "obj1": 0.7509293680297398, "obj2": 0.0938475032206214}, {"determining": "( ( MRS / FirstVNF_CPU ) * ( ( PN / Min( ARS ,Const ) ) - ( ARS * ( Min( MDR ,Max( BR,Min( Const ,( FirstVNF_RAM_Server - RRS ) ) ) ) - CRS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( RMSe - CS ) / DS ),RRSe ) * ( ( RRSe - MUM ) - MLU ) ) ,RMSe ) - MUM ) * ( ( MUC * RCSe ) - Min( ( DS + MUM ) ,( ( RMSe - ( MUR / MLU ) ) / RCSe ) ) ) )", "obj1": 0.6747211895910781, "obj2": 0.14289480254038697}]}