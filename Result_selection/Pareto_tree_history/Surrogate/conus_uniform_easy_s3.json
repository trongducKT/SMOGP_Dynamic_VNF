{"1": [{"determining": "( ( Const + PN ) + Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "( Max( MLU,MUM ) * ( MLU - MLU ) )", "obj1": 0.35039370078740156, "obj2": 0.5085152914367752}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "Max( ( FirstVNF_RAM_Server + PN ),( FirstVNF_RAM / PN ) )", "choosing": "( ( RMSe * RRSe ) / Max( RMSe,RMSe ) )", "obj1": 0.37598425196850394, "obj2": 0.48226417775012187}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / DS ) + ( DS - RMSe ) )", "obj1": 0.04330708661417323, "obj2": 0.7474132794616593}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) / Min( BR ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) )", "choosing": "( Max( MLU,DS ) + Min( MUC ,( ( MLU - ( ( MUM / MLU ) / Min( ( MUR - RCSe ) ,MUR ) ) ) + RCSe ) ) )", "obj1": 0.6732283464566929, "obj2": 0.24638229968636013}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) + ( ( ( AMS * CRS ) / FirstVNF_RAM_Server ) - MDR ) )", "choosing": "Max( Max( MUC,DS ),( RRSe / ( ( CS / CS ) * MUM ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4963103179874561}, {"determining": "( Min( FirstVNF_RAM ,DDR ) - ( MDR / DDR ) )", "choosing": "( ( MUR - MUC ) - ( RRSe * MUR ) )", "obj1": 0.6909448818897638, "obj2": 0.23629071389260425}, {"determining": "( ( Min( AMS ,PN ) + ( ARS - DDR ) ) * ( Max( MRS,ARS ) - Min( FirstVNF_CPU ,CRS ) ) )", "choosing": "( ( Min( CS ,RMSe ) + Max( MLU,RMSe ) ) * ( ( RRSe - RMSe ) - ( DS / MUC ) ) )", "obj1": 0.07283464566929133, "obj2": 0.7422221175110953}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) )", "obj1": 0.1594488188976378, "obj2": 0.6403849111532507}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RMSe ) / Min( CS ,RRSe ) ) )", "obj1": 0.905511811023622, "obj2": 0.07769247668676625}, {"determining": "( ( ( RRS / FirstVNF_CPU_Server ) - ( MDR - DDR ) ) - ( ( PN + CRS ) - ( PN * RRS ) ) )", "choosing": "( ( Max( RCSe,DS ) + Max( DS,MUC ) ) + Min( ( RCSe * RRSe ) ,Max( MUM,RCSe ) ) )", "obj1": 0.4074803149606299, "obj2": 0.4704653643019507}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - ( ( MUR - DS ) + ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem + Const ) * MDR ) * ( MRS * ( DDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUM / MLU ),( ( DS * MUM ) / ( RMSe * MLU ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6230344138606304}, {"determining": "( ( ( DDR - FirstVNF_CPU_Server ) / ( DDR - ( MRS * FirstVNF_Mem ) ) ) * ( Max( BR,MDR ) / ( FirstVNF_Mem * BR ) ) )", "choosing": "( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RMSe,( MUR * MUC ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0034337260197677398}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( RRS - MDR ) + ( ACS + BR ) )", "choosing": "( ( ( RMSe - RCSe ) + ( RCSe - DS ) ) + Max( ( DS / RCSe ),( MLU - MUM ) ) )", "obj1": 0.39763779527559057, "obj2": 0.47055196014583095}, {"determining": "( ( ACS - ( Max( Min( Min( AMS ,FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM ) + ( CRS / RRS ) ) ),( ( Const * DDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( Min( ( FirstVNF_RAM / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Const ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - Max( Max( DS,DS ),( DS / RCSe ) ) ) * ( MUM / RCSe ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "Min( ( BR - FirstVNF_CPU_Server ) ,( MDR / DDR ) )", "choosing": "( ( RCSe + ( Min( MUC ,MUR ) * ( MUR - MUR ) ) ) - ( RCSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ARS ,( AMS + ARS ) ),( ( MRS - RRS ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * MLU ) + ( MLU + RMSe ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "Min( ( ( ( AMS / FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + RRS ) ) - ( Max( PN,FirstVNF_CPU ) / ( ( MRS + BR ) - Const ) ) ) ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( DDR ,Const ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( Min( RCSe ,( RCSe + ( MUM / RRSe ) ) ) / RMSe ) * Min( MUC ,( Min( MUM ,MUR ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Min( CRS ,FirstVNF_Mem_Server ) * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS / MUM ) ) ) + ( Max( MUC,( ( DS - ( RRSe - RCSe ) ) / MUM ) ) / Min( Max( RMSe,RCSe ) ,( MLU + RMSe ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.014563732154035242}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.5312650921502309}, {"determining": "( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( CS + MLU ) - ( Max( RCSe,( MUM / ( ( MLU / ( RMSe - ( DS - DS ) ) ) / MUR ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + Min( RCSe ,( MUC / ( RRSe * RRSe ) ) ) ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}], "2": [{"determining": "( ( Const / FirstVNF_Mem_Server ) / Min( Min( ( MDR * FirstVNF_CPU ) ,( CRS / MRS ) ) ,Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Min( ( RRSe + CS ) ,( CS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - ( ( MUR - DS ) + ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( FirstVNF_CPU_Server ,ACS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + Min( ( MUR / CS ) ,( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) + MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7437230010764281}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.5312650921502309}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) / Const ) - FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( Max( ( CS - MUM ),MUR ) ,( ( MLU + MUC ) + ( RRSe / RMSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4461235920924485}, {"determining": "( ( MRS + FirstVNF_CPU_Server ) / Max( PN,CRS ) )", "choosing": "( Max( MLU,DS ) + Min( ( ( DS * RCSe ) * Min( CS ,MUM ) ) ,( Min( MUR ,RCSe ) / Max( CS,MUR ) ) ) )", "obj1": 0.610236220472441, "obj2": 0.3061198375265563}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),Max( MDR,MRS ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( DS + RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.6498467923205646}, {"determining": "( ( ACS - ( Max( Min( Min( AMS ,FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM ) + ( CRS / RRS ) ) ),( ( Const * DDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( Min( ( FirstVNF_RAM / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Const ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - Max( Max( DS,DS ),( DS / RCSe ) ) ) * ( MUM / RCSe ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( DS * RMSe ) ) + MUR ) )", "obj1": 0.7755905511811023, "obj2": 0.1532787163073876}, {"determining": "( Max( Min( ARS ,( AMS + ARS ) ),( ( MRS - RRS ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * MLU ) + ( MLU + RMSe ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,Max( RRS,BR ) ) )", "choosing": "( Max( RMSe,MUM ) + ( DS - RMSe ) )", "obj1": 0.7047244094488189, "obj2": 0.22321563753945392}, {"determining": "( Min( ( FirstVNF_RAM_Server + RRS ) ,Max( MDR,Max( ( ( ( RRS / FirstVNF_CPU_Server ) - ( MDR - DDR ) ) - ( ( PN + CRS ) - ( PN * RRS ) ) ),BR ) ) ) * ( ( FirstVNF_Mem_Server / PN ) / ( FirstVNF_CPU / MRS ) ) )", "choosing": "( ( Max( RCSe,MUR ) / ( RMSe + RRSe ) ) - Min( DS ,( ( Min( ( RCSe * RRSe ) ,Max( MUM,RCSe ) ) * Max( ( MLU + ( RCSe - ( DS / MLU ) ) ),MLU ) ) + MLU ) ) )", "obj1": 0.09448818897637795, "obj2": 0.7173388240039499}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7952755905511811, "obj2": 0.13786785324906647}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - ( ( MUR - DS ) + ( RCSe / MUM ) ) )", "obj1": 0.9212598425196851, "obj2": 0.06459645674510762}, {"determining": "( Min( FirstVNF_RAM ,RRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Min( Max( RRSe,MUM ) ,( MLU * CS ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.5873842804269661}, {"determining": "Max( Max( Max( ( ( FirstVNF_Mem * MDR ) + MDR ),( ARS / MDR ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS )", "obj1": 0.37598425196850394, "obj2": 0.42802723273499343}, {"determining": "( Min( AMS ,CRS ) * Max( ( ( Max( FirstVNF_Mem,PN ) - CRS ) + PN ),( ( FirstVNF_RAM + MDR ) + MRS ) ) )", "choosing": "( ( Min( MLU ,RRSe ) - MLU ) / ( ( Min( RRSe ,MUM ) + Max( CS,DS ) ) * ( ( Max( CS,CS ) + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.559524569080776}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Min( CRS ,FirstVNF_Mem_Server ) * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS / MUM ) ) ) + ( Max( MUC,( ( DS - ( RRSe - RCSe ) ) / MUM ) ) / Min( Max( RMSe,RCSe ) ,( MLU + RMSe ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.014563732154035242}, {"determining": "( ( ( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RRSe * RCSe ) * ( Min( RRSe ,RRSe ) - CS ) )", "obj1": 0.6299212598425197, "obj2": 0.26431187776537185}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) )", "choosing": "( Min( Max( RMSe,MUM ) ,( CS * DS ) ) / ( MLU + RRSe ) )", "obj1": 0.687007874015748, "obj2": 0.22329659766694396}, {"determining": "( ( ( MDR * CRS ) * Min( BR ,AMS ) ) * ( ( Const + FirstVNF_RAM ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( CS / MUC ) / ( RMSe * MUM ) ) - ( Min( RRSe ,RCSe ) / Min( CS ,RRSe ) ) )", "obj1": 0.905511811023622, "obj2": 0.07768307155226006}, {"determining": "( ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * Max( ACS,FirstVNF_Mem ) ) * ( Max( BR,MDR ) / ( FirstVNF_Mem * BR ) ) )", "choosing": "( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,Min( ( MUR + RRSe ) ,( MUC - MUR ) ) ) ,Max( RRSe,MUC ) ) )", "obj1": 0.04921259842519685, "obj2": 0.7417739034078787}, {"determining": "( Min( ( FirstVNF_RAM_Server + RRS ) ,Max( MDR,Max( FirstVNF_Mem_Server,BR ) ) ) * ( ( FirstVNF_Mem_Server / PN ) / ( FirstVNF_CPU / MRS ) ) )", "choosing": "( ( Max( RCSe,MUR ) / ( RMSe + RRSe ) ) - Min( DS ,( ( RRSe * Max( ( MLU + ( RCSe - ( DS / MLU ) ) ),MLU ) ) + MLU ) ) )", "obj1": 0.07480314960629922, "obj2": 0.7304558202924696}, {"determining": "( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * Max( Max( FirstVNF_CPU,( FirstVNF_Mem / CRS ) ),DDR ) ) + Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RRSe * DS ) * ( MUM + Max( DS,( ( MUC - ( RRSe - RCSe ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.24359502827250232}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.013519843471135946}, {"determining": "( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * Max( Max( FirstVNF_CPU,( FirstVNF_Mem / CRS ) ),DDR ) ) + Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RRSe * DS ) * ( MUM + Max( DS,( ( MUC - ( RRSe - RCSe ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.24359502827250232}, {"determining": "( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RRSe * DS ) * ( MUM + RCSe ) )", "obj1": 0.6476377952755905, "obj2": 0.25429708424039066}, {"determining": "( Min( ( FirstVNF_RAM_Server + RRS ) ,Max( MDR,Max( FirstVNF_Mem_Server,( MRS + MDR ) ) ) ) * ( ( FirstVNF_Mem_Server / PN ) / ( FirstVNF_CPU / MRS ) ) )", "choosing": "( ( Max( RCSe,MUR ) / ( RMSe + RRSe ) ) - Min( DS ,( ( RRSe * Max( ( MLU + ( RCSe - ( MUM / MLU ) ) ),MLU ) ) + MLU ) ) )", "obj1": 0.07480314960629922, "obj2": 0.7304558202924696}, {"determining": "( Max( BR,BR ) / Max( RRS,BR ) )", "choosing": "( ( MUC * DS ) / Max( RMSe,MUM ) )", "obj1": 0.6417322834645669, "obj2": 0.25878465346649715}, {"determining": "( ( ( DDR - FirstVNF_CPU_Server ) / ( DDR - ( MRS * FirstVNF_Mem ) ) ) * ( Max( BR,MDR ) / ( FirstVNF_Mem * BR ) ) )", "choosing": "( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RMSe,( MUR * MUC ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0034337260197677398}, {"determining": "( FirstVNF_Mem / ( FirstVNF_Mem * Min( ( PN - ( ( FirstVNF_Mem_Server + AMS ) + FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe / CS ) ,( Max( ( Min( MUC ,CS ) / RMSe ),RCSe ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "( ( ACS * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + Min( RCSe ,( MUC / ( RRSe * RRSe ) ) ) ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "( ( ( DDR - FirstVNF_CPU_Server ) / ( DDR - MDR ) ) * ( Max( BR,MDR ) / ( FirstVNF_Mem * BR ) ) )", "choosing": "( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0034337260197677398}, {"determining": "Min( ( BR - FirstVNF_CPU_Server ) ,( MDR / DDR ) )", "choosing": "( ( RCSe + ( Min( MUC ,MUR ) * ( MUR - MUR ) ) ) - ( RCSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS / FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + RRS ) ) - ( Max( PN,FirstVNF_CPU ) / ( ( MRS + BR ) - Const ) ) ) ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( DDR ,Const ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( Min( RCSe ,( RCSe + ( MUM / RRSe ) ) ) / RMSe ) * Min( MUC ,( Min( MUM ,MUR ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( CS + MLU ) - ( Max( RCSe,( MUM / ( ( MLU / ( RMSe - ( DS - DS ) ) ) / MUR ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - FirstVNF_RAM ) * ( Min( ( ARS / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem * ACS ) ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) )", "choosing": "Max( Min( ( ( MLU * MLU ) * ( ( CS * MLU ) + MUM ) ) ,RMSe ),( ( ( Min( RCSe ,( MUM / MLU ) ) + RMSe ) * MUC ) / ( ( MUR - MUC ) / ( RCSe * ( DS * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,( ( ARS * FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) ) ) + ( AMS / ARS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - ( ( MUR - ( ( MUM + DS ) * ( ( MLU * RRSe ) - RRSe ) ) ) + ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( MUM + DS ) * ( ( MLU * RRSe ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MDR ) * ( Min( ( PN * BR ) ,( FirstVNF_Mem * ACS ) ) - ( Min( MDR ,ARS ) * ( BR + MDR ) ) ) )", "choosing": "Max( ( ( ( CS - MUM ) * Min( DS ,DS ) ) / ( ( MUR - MUC ) / Max( ( CS / MUC ),( CS * CS ) ) ) ),Min( Min( Min( MLU ,MLU ) ,( MLU + MUM ) ) ,Min( ( MLU + RCSe ) ,Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_Mem_Server ) / Min( Min( ( MDR * FirstVNF_CPU ) ,( CRS / MRS ) ) ,( ( ARS + RRS ) - ( FirstVNF_CPU_Server + Max( ( FirstVNF_RAM_Server - Min( Const ,Min( PN ,MDR ) ) ),FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( RMSe,MUM ) ,( CS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_Mem_Server ) / Min( Min( ( MDR * FirstVNF_CPU ) ,( CRS / MRS ) ) ,( ( ARS + RRS ) - ( FirstVNF_CPU_Server + Max( ( FirstVNF_RAM_Server - Min( Const ,Min( PN ,MDR ) ) ),FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( RMSe,MUM ) ,( CS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / ( PN - MDR ) ) / FirstVNF_RAM_Server ) * ( ( PN - FirstVNF_CPU ) - FirstVNF_Mem ) )", "choosing": "Max( ( MLU * Min( MUC ,( RCSe + MUM ) ) ),( RRSe + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS - FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + RRS ) ) - ( Max( PN,FirstVNF_CPU ) / ( ACS - Const ) ) ) ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( DDR ,Const ) - ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( RMSe / Min( RCSe ,( RRSe / MUC ) ) ) * Min( MUC ,( Min( RCSe ,MUR ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_Mem_Server ) / Min( Min( ( MDR * FirstVNF_CPU ) ,( CRS / MRS ) ) ,( ( ARS + RRS ) - ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - Min( Const ,Min( PN ,MDR ) ) ),FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( RMSe,MUM ) ,DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS - FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + RRS ) ) - ( Max( PN,FirstVNF_CPU ) / ( ACS - Const ) ) ) ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( PN ,MDR ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( Min( Max( RMSe,MUM ) ,( CS * DS ) ) * Min( MUC ,( Min( RCSe ,MUR ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_Mem_Server ) / Min( Min( ( MDR * FirstVNF_CPU ) ,( CRS / MRS ) ) ,( ( ARS + RRS ) - ( FirstVNF_CPU_Server + Max( ( FirstVNF_RAM_Server - Min( Const ,Min( PN ,MDR ) ) ),FirstVNF_Mem ) ) ) ) )", "choosing": "( ( RMSe / Min( RCSe ,( RCSe + DS ) ) ) * Min( MUC ,( Min( RCSe ,MUR ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS - FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + RRS ) ) - ( Max( PN,FirstVNF_CPU ) / ( ACS - Const ) ) ) ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( DDR ,Const ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "Min( Max( RMSe,MUM ) ,( CS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( Min( ( RCSe * RRSe ) ,Max( MUM,RCSe ) ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( FirstVNF_CPU_Server ,ACS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + Min( ( MUR / CS ) ,( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) + MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7437230010764281}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - FirstVNF_RAM ) * ( Min( ( ARS / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem * ACS ) ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) )", "choosing": "Max( Min( ( ( MLU * MLU ) * ( ( CS * MLU ) + MUM ) ) ,RMSe ),( ( ( Min( RCSe ,( MUM / MLU ) ) + RMSe ) * MUC ) / ( ( MUR - MUC ) / ( RCSe * ( DS * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_Mem_Server ) / Min( Min( ( MDR * FirstVNF_CPU ) ,( CRS / MRS ) ) ,Max( FirstVNF_Mem_Server,RRS ) ) )", "choosing": "Min( ( RRSe + CS ) ,( CS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( Min( FirstVNF_CPU_Server ,ACS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe / DS ) + Min( ( MUR / CS ) ,( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) + MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7437230010764281}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.1889579830443705}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( MLU * MUR ) ) )", "obj1": 0.515748031496063, "obj2": 0.28727068744360224}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.23031496062992127, "obj2": 0.5089436703433403}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) / Const ) - FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( Max( ( CS - MUM ),MUR ) ,( ( MLU + MUC ) + ( RRSe / RMSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4461235920924485}, {"determining": "( Min( Const ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( DDR ,Const ) - Max( FirstVNF_Mem,CRS ) ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6994144751321991}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( ACS - ( Max( Min( Min( AMS ,FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM ) + ( CRS / RRS ) ) ),( ( Const * DDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( Min( ( FirstVNF_RAM / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Const ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - Max( Max( DS,DS ),( DS / RCSe ) ) ) * ( MUM / RCSe ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "( ( ( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RRSe * RCSe ) * ( Min( RRSe ,RRSe ) - CS ) )", "obj1": 0.6299212598425197, "obj2": 0.26431187776537185}, {"determining": "( ( FirstVNF_Mem * ( ( DDR - FirstVNF_CPU ) * Max( FirstVNF_Mem_Server,MDR ) ) ) / ( DDR - MDR ) )", "choosing": "Min( ( MUR / CS ) ,( ( MLU / DS ) - ( ( RCSe - MUM ) + MUC ) ) )", "obj1": 0.7637795275590551, "obj2": 0.15888761504486884}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( MLU ,MUC ) - ( MLU * CS ) ) ,( ( MLU + RRSe ) / ( ( MUR + Min( MUC ,( MUR - ( ( RRSe + MUC ) - RRSe ) ) ) ) + RRSe ) ) )", "obj1": 0.12992125984251968, "obj2": 0.6565635542213974}, {"determining": "( ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) ) * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( Min( ( RRSe * DS ) ,MUC ) / RMSe ),( DS * RMSe ) ) + MUR ) )", "obj1": 0.844488188976378, "obj2": 0.10957724785615719}, {"determining": "( Min( FirstVNF_RAM ,RRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Min( Max( RRSe,MUM ) ,( MLU * CS ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.5873842804269661}, {"determining": "( Min( AMS ,CRS ) * Max( ( ( Max( FirstVNF_Mem,PN ) - CRS ) + PN ),( ( FirstVNF_RAM + MDR ) + MRS ) ) )", "choosing": "( ( Min( MLU ,RRSe ) - MLU ) / ( ( Min( RRSe ,MUM ) + Max( CS,DS ) ) * ( ( Max( CS,CS ) + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.559524569080776}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.05169117141694092}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.5312650921502309}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),Max( MDR,MRS ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( DS + RRSe ) / ( MLU + RRSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.6498467923205646}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( RMSe + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9547244094488189, "obj2": 0.017597434134379707}, {"determining": "( ( ( ACS + Const ) - ( AMS + MRS ) ) * ( ( AMS - ( FirstVNF_RAM_Server - Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS * ( DS + MUC ) ),RRSe ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4822834645669291, "obj2": 0.32227572308845814}, {"determining": "( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RRSe * DS ) * ( MUM + RCSe ) )", "obj1": 0.6476377952755905, "obj2": 0.25429708424039066}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.7933070866141733, "obj2": 0.136962965052897}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * FirstVNF_Mem ) + Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( DS * RMSe ) ) + MUR ) ) + MUC ) ) )", "obj1": 0.3484251968503937, "obj2": 0.43897038448752485}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + Min( MRS ,Max( RRS,BR ) ) ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - DS )", "obj1": 0.9015748031496063, "obj2": 0.0769507930544669}, {"determining": "( Max( Min( ARS ,( AMS + ARS ) ),( ( MRS - RRS ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * MLU ) + ( MLU + RMSe ) )", "obj1": 0.8838582677165354, "obj2": 0.09050363341224837}, {"determining": "( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.42369873854575585}, {"determining": "Max( Max( Max( ( ( Max( ( ( FirstVNF_Mem * MDR ) + MDR ),( ARS / MDR ) ) * MDR ) + MDR ),( ARS / MDR ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * MUM ),MUM ) - CS )", "obj1": 0.37598425196850394, "obj2": 0.42802723273499343}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.013519843471135946}, {"determining": "( Max( ( ( ARS + RRS ) - ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - Min( Const ,Min( PN ,MDR ) ) ),FirstVNF_Mem ) ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( Max( RMSe,MUM ) ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.09020469489600398}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( DS * RMSe ) ) + MUR ) )", "obj1": 0.7755905511811023, "obj2": 0.1532787163073876}, {"determining": "Max( Max( Max( ( ( FirstVNF_Mem * MDR ) + MDR ),( ARS / MDR ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS )", "obj1": 0.37598425196850394, "obj2": 0.42802723273499343}, {"determining": "( ( ( Max( ACS,Const ) / ( ( RRS - FirstVNF_Mem ) * BR ) ) + FirstVNF_CPU_Server ) / Max( PN,CRS ) )", "choosing": "( ( RRSe * DS ) * ( MUM * Max( DS,( ( MUC - ( RRSe - RCSe ) ) - ( MLU / ( Min( ( MLU * RCSe ) ,( RRSe - MUR ) ) * RRSe ) ) ) ) ) )", "obj1": 0.6417322834645669, "obj2": 0.2577691449336783}, {"determining": "( ( ( DDR - FirstVNF_CPU_Server ) / ( DDR - ( MRS * FirstVNF_Mem ) ) ) * ( Max( BR,MDR ) / ( FirstVNF_Mem * BR ) ) )", "choosing": "( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RMSe,( MUR * MUC ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0034337260197677398}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Min( CRS ,FirstVNF_Mem_Server ) * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS / MUM ) ) ) + ( Max( MUC,( ( DS - ( RRSe - RCSe ) ) / MUM ) ) / Min( Max( RMSe,RCSe ) ,( MLU + RMSe ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.014563732154035242}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + MUR ) )", "obj1": 0.781496062992126, "obj2": 0.14656606583405127}, {"determining": "( ( ( DDR - FirstVNF_CPU_Server ) * ( MDR - DDR ) ) * ( Max( BR,( RRS / PN ) ) / ( FirstVNF_Mem * BR ) ) )", "choosing": "( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( RCSe ,RRSe ) )", "obj1": 0.9960629921259843, "obj2": 0.0034337260197677398}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / FirstVNF_Mem )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + MUR ) )", "obj1": 0.7854330708661418, "obj2": 0.14317270259070847}, {"determining": "( FirstVNF_Mem / ( FirstVNF_Mem * Min( ( PN - ( ( FirstVNF_Mem_Server + AMS ) + FirstVNF_Mem ) ) ,FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe / CS ) ,( Max( ( Min( MUC ,CS ) / RMSe ),RCSe ) + MUR ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "( ( ACS * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / ( FirstVNF_CPU_Server + ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( MLU * RMSe ) ) + Min( RCSe ,( MUC / ( RRSe * RRSe ) ) ) ) )", "obj1": 0.7893700787401575, "obj2": 0.14160232084752575}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - ( ( MUR - DS ) + ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR - FirstVNF_CPU_Server ) ,( MDR / DDR ) )", "choosing": "( ( RCSe + ( Min( MUC ,MUR ) * ( MUR - MUR ) ) ) - ( RCSe - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS / FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + RRS ) ) - ( Max( PN,FirstVNF_CPU ) / ( ( MRS + BR ) - Const ) ) ) ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( DDR ,Const ) - Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( Min( RCSe ,( RCSe + ( MUM / RRSe ) ) ) / RMSe ) * Min( MUC ,( Min( MUM ,MUR ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( CS + MLU ) - ( Max( RCSe,( MUM / ( ( MLU / ( RMSe - ( DS - DS ) ) ) / MUR ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - FirstVNF_RAM ) * ( Min( ( ARS / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem * ACS ) ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) )", "choosing": "Max( Min( ( ( MLU * MLU ) * ( ( CS * MLU ) + MUM ) ) ,RMSe ),( ( ( Min( RCSe ,( MUM / MLU ) ) + RMSe ) * MUC ) / ( ( MUR - MUC ) / ( RCSe * ( DS * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,( ( ARS * FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) ) ) + ( AMS / ARS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - ( ( MUR - ( ( MUM + DS ) * ( ( MLU * RRSe ) - RRSe ) ) ) + ( RCSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS - DDR ),Min( CRS ,ARS ) ) - ( Min( FirstVNF_Mem ,MDR ) + ( AMS / ARS ) ) )", "choosing": "( ( MUM + DS ) * ( ( MLU * RRSe ) - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MDR ) * ( Min( ( PN * BR ) ,( FirstVNF_Mem * ACS ) ) - ( Min( MDR ,ARS ) * ( BR + MDR ) ) ) )", "choosing": "Max( ( ( ( CS - MUM ) * Min( DS ,DS ) ) / ( ( MUR - MUC ) / Max( ( CS / MUC ),( CS * CS ) ) ) ),Min( Min( Min( MLU ,MLU ) ,( MLU + MUM ) ) ,Min( ( MLU + RCSe ) ,Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / FirstVNF_Mem_Server ) / Min( Min( ( MDR * FirstVNF_CPU ) ,( CRS / MRS ) ) ,( ( ARS + RRS ) - ( FirstVNF_CPU_Server + Max( ( FirstVNF_RAM_Server - Min( Const ,Min( PN ,MDR ) ) ),FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( RMSe,MUM ) ,( CS * DS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( Const - FirstVNF_RAM ) * ( Min( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ,( FirstVNF_Mem * ACS ) ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) )", "choosing": "Max( ( ( ( CS - MUM ) * Min( DS ,DS ) ) / ( ( MUR - MUC ) / ( RCSe * ( DS * MUR ) ) ) ),Min( Min( ( MLU * MLU ) ,( MLU + MUM ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - FirstVNF_RAM ) * ( Min( ( ARS / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem * ACS ) ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) )", "choosing": "Max( Min( ( ( MLU * MLU ) * ( ( CS * MLU ) + MUM ) ) ,RMSe ),( ( ( Min( RCSe ,( MUM / MLU ) ) + RMSe ) * MUC ) / ( ( MUR - MUC ) / ( RCSe * ( DS * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( ( FirstVNF_Mem * Min( ( FirstVNF_CPU - ( Min( ARS ,Const ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RCSe - CS ),( RRSe / RMSe ) ) + MUR ) )", "obj1": 0.5885826771653543, "obj2": 0.26342864011138134}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),Max( MRS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( MLU ,MUC ) - ( MLU * CS ) ) ,( ( MLU + RRSe ) / ( ( MUR + Min( MUC ,( MUR - ( ( RRSe + MUC ) - RRSe ) ) ) ) + RRSe ) ) )", "obj1": 0.12992125984251968, "obj2": 0.6565635542213974}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( MLU * MUR ) ) )", "obj1": 0.515748031496063, "obj2": 0.28727068744360224}, {"determining": "( ( ACS - ( Max( Min( Min( AMS ,FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM ) + ( CRS / RRS ) ) ),( ( Const * DDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( Min( ( FirstVNF_RAM / Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ,Const ) + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RCSe,RRSe ) / ( CS / RRSe ) ) - Max( Max( DS,DS ),( DS / RCSe ) ) ) * ( MUM / RCSe ) )", "obj1": 0.4094488188976378, "obj2": 0.40726202864040945}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( RRSe / RMSe ) )", "obj1": 0.639763779527559, "obj2": 0.21539728634524524}, {"determining": "( Min( Const ,Max( ( Max( DDR,ACS ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),( Min( DDR ,Const ) - Max( FirstVNF_Mem,CRS ) ) ) ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6994144751321991}, {"determining": "( ( PN * Min( ( Min( ( FirstVNF_RAM / PN ) ,MDR ) - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / FirstVNF_Mem )", "choosing": "( ( DS / DS ) - ( MUM + Min( Max( RRSe,MUM ) ,( Max( ( CS - Max( MUC,MLU ) ),RCSe ) * CS ) ) ) )", "obj1": 0.7480314960629921, "obj2": 0.17010413932814722}, {"determining": "( Min( AMS ,CRS ) * Max( ( ( Max( FirstVNF_Mem,PN ) - CRS ) + PN ),( ( FirstVNF_RAM + MDR ) + MRS ) ) )", "choosing": "( ( Min( MLU ,RRSe ) - MLU ) / ( ( Min( RRSe ,MUM ) + Max( CS,DS ) ) * ( ( Max( CS,CS ) + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.559524569080776}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.65748031496063, "obj2": 0.1868424353092281}, {"determining": "( Min( FirstVNF_RAM ,RRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Min( Max( RRSe,MUM ) ,( MLU * CS ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.5873842804269661}, {"determining": "( Min( FirstVNF_RAM ,RRS ) * ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Min( Max( RRSe,MUM ) ,Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.6314457233720925}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( DS * RMSe ) ) + MUR ) )", "obj1": 0.8090551181102362, "obj2": 0.09421317649224721}, {"determining": "( ( ( ACS + Const ) - ( AMS + MRS ) ) * ( ( AMS - ( FirstVNF_RAM_Server - Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS * ( DS + MUC ) ),RRSe ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4822834645669291, "obj2": 0.32227572308845814}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ,( ( ( MRS / DDR ) + Max( MDR,Const ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - Max( ( MDR / ARS ),FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS * ( RMSe * ( RCSe / ( Min( ( MLU + RRSe ) ,( RCSe + MLU ) ) + Min( Min( DS ,RMSe ) ,MUC ) ) ) ) ) * ( Min( MUM ,RCSe ) / ( Max( RRSe,Max( RCSe,RCSe ) ) + ( CS / MLU ) ) ) ) + ( Min( ( ( MUR - ( ( MUM + DS ) * ( Min( CS ,RCSe ) - RRSe ) ) ) + ( RCSe / MUM ) ) ,( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.04348388820144227}, {"determining": "( Min( ( ACS + Const ) ,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.13050288445667924}, {"determining": "( Min( ( Min( MRS ,( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / ( BR / RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( RCSe / MUR ) * RCSe ),RRSe ) ) )", "obj1": 0.25196850393700787, "obj2": 0.49735853462244034}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,FirstVNF_Mem_Server )", "choosing": "( ( RCSe / Max( MUR,DS ) ) + Min( ( MUR / CS ) ,( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) + MUR ) ) )", "obj1": 0.297244094488189, "obj2": 0.4879480970532775}, {"determining": "( ( ( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( FirstVNF_Mem,Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * RCSe ) * ( Min( ( DS - DS ) ,RRSe ) - CS ) )", "obj1": 0.2106299212598425, "obj2": 0.5316556917976146}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.8405511811023622, "obj2": 0.0889230583449361}, {"determining": "( Max( ( ( ARS + RRS ) - ( FirstVNF_CPU_Server + Max( ( FirstVNF_Mem_Server - Min( Const ,Min( PN ,MDR ) ) ),FirstVNF_Mem ) ) ),( ( MRS - FirstVNF_Mem_Server ) / ( PN - Const ) ) ) / ( ( Max( DDR,MDR ) * ( FirstVNF_Mem * MDR ) ) / Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( Max( RMSe,MUM ) ,( MUC * ( RCSe + MUR ) ) ) )", "obj1": 0.8818897637795275, "obj2": 0.08586209400800074}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server - Max( MDR,FirstVNF_CPU ) ) ) ) )", "choosing": "( RMSe + ( Max( Max( MUR,DS ),( DS * MUM ) ) / ( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.03131554673803919}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.23031496062992127, "obj2": 0.5089436703433403}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + Min( MRS ,Max( RRS,BR ) ) ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( ( MUM + RMSe ) - ( MUR - CS ) ) - DS )", "obj1": 0.9015748031496063, "obj2": 0.07692814322424162}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.655511811023622, "obj2": 0.19208643259500738}, {"determining": "( Min( Min( Min( Const ,FirstVNF_CPU ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.42369873854575585}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.7598425196850394, "obj2": 0.15344059926474096}, {"determining": "Max( Max( Max( ( ( FirstVNF_Mem * MDR ) + MDR ),( ARS / MDR ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS )", "obj1": 0.37598425196850394, "obj2": 0.42802723273499343}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) / Const ) - FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( Max( ( CS - MUM ),MUR ) ,( ( MLU + MUC ) + ( RRSe / RMSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4461235920924485}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( FirstVNF_Mem_Server - Min( Const ,Min( PN ,MDR ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( ( Max( Max( MUM,RRSe ),( MLU * MUC ) ) * RRSe ) + Min( Max( RMSe,MUM ) ,( MUC * ( RCSe + MUR ) ) ) ) - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.2283464566929134, "obj2": 0.5249452150982431}, {"determining": "Max( ( MRS * PN ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( ( Max( MUC,( Max( CS,MLU ) + Min( MUR ,RMSe ) ) ) * ( ( MUC * RCSe ) / ( ( RMSe * MLU ) / Min( DS ,MUC ) ) ) ) * DS ) ,MUC ) - ( MLU + CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) )", "obj1": 0.31299212598425197, "obj2": 0.4581725335425013}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( RMSe + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9547244094488189, "obj2": 0.017597434134379707}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * FirstVNF_Mem ) + Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( Min( MRS ,FirstVNF_Mem ) ,FirstVNF_Mem ) ) + ACS ) ) ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( DS * RMSe ) ) + MUR ) ) + ( Max( ( RRSe / RMSe ),( DS * RMSe ) ) + MUR ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.4680951637608244}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( ( ACS + ( FirstVNF_CPU_Server + MRS ) ) + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( Max( RRSe,RMSe ),Min( MUC ,( MLU + Min( Min( ( MLU * CS ) ,RRSe ) ,( RMSe / CS ) ) ) ) ) + MUR ) )", "obj1": 0.7795275590551181, "obj2": 0.14636587433994874}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( FirstVNF_Mem * BR ) )", "choosing": "( ( DS / ( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.33858267716535434, "obj2": 0.44382568780971743}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * Min( PN ,MDR ) ) + Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( RMSe + MUC ) ) )", "obj1": 0.3484251968503937, "obj2": 0.43897038448752485}, {"determining": "Max( Max( Max( ( ( Max( ( ( FirstVNF_Mem * MDR ) + MDR ),( ARS / MDR ) ) * MDR ) + MDR ),( ARS / MDR ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * MUM ),MUM ) - CS )", "obj1": 0.37598425196850394, "obj2": 0.42802723273499343}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( Min( MRS ,( CRS + ACS ) ) + RRS ),FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( RMSe + RMSe )", "obj1": 0.9488188976377953, "obj2": 0.02745902907041237}, {"determining": "( ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) ) * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) )", "choosing": "( ( RRSe * DS ) * ( MUM + Max( DS,( ( MUC - ( RRSe - RCSe ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.8937007874015748, "obj2": 0.0770461374162435}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) ) ) ) / FirstVNF_Mem )", "choosing": "Min( ( MUR / CS ) ,( ( MUM + RCSe ) + MUR ) )", "obj1": 0.7755905511811023, "obj2": 0.15215748548258637}, {"determining": "( Min( Const ,CRS ) * Max( Max( CRS,( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.5312650921502309}, {"determining": "Max( ( Max( ( Max( ( FirstVNF_RAM_Server * AMS ),FirstVNF_Mem ) / ( Min( Min( Const ,BR ) ,Max( ( ACS * FirstVNF_CPU_Server ),ACS ) ) / FirstVNF_CPU ) ),Max( ( ( ACS / PN ) / FirstVNF_Mem_Server ),( RRS - FirstVNF_Mem_Server ) ) ) - Min( ARS ,Min( FirstVNF_Mem ,AMS ) ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( RCSe ,( CS * ( DS * Max( RMSe,DS ) ) ) ) - ( CS * MLU ) ) ,( Min( MUM ,DS ) + MUR ) )", "obj1": 0.3051181102362205, "obj2": 0.4654825096698743}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * FirstVNF_Mem ) + Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( Min( ( MUR / CS ) ,( Max( ( RRSe / RMSe ),( DS * RMSe ) ) + MUR ) ) + MUC ) ) )", "obj1": 0.3484251968503937, "obj2": 0.43897038448752485}, {"determining": "( ( ( DDR - FirstVNF_CPU_Server ) / ( DDR - ( MRS * FirstVNF_Mem ) ) ) * ( Max( BR,MDR ) / ( FirstVNF_Mem * BR ) ) )", "choosing": "( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RMSe,( MUR * MUC ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0034337260197677398}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Min( CRS ,FirstVNF_Mem_Server ) * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS / MUM ) ) ) + ( Max( MUC,( ( DS - ( RRSe - RCSe ) ) / MUM ) ) / Min( Max( RMSe,RCSe ) ,( MLU + RMSe ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.014563732154035242}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Min( CRS ,FirstVNF_Mem_Server ) * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS / MUM ) ) ) + ( Max( MUC,( ( DS - ( RRSe - RCSe ) ) / MUM ) ) / Min( Max( RMSe,RCSe ) ,( MLU + RMSe ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.013083060859516625}, {"determining": "( ( ( DDR - FirstVNF_CPU_Server ) / ( DDR - MDR ) ) * ( Max( BR,MDR ) / ( FirstVNF_Mem * BR ) ) )", "choosing": "( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0034337260197677398}], "5": [{"determining": "( ( Min( ( FirstVNF_RAM * MRS ) ,( FirstVNF_CPU - AMS ) ) - MRS ) * ( Max( MDR,BR ) / ( ARS * BR ) ) )", "choosing": "( ( ( MUM + MUC ) - ( MLU / DS ) ) - Min( Min( MLU ,( RMSe / RCSe ) ) ,Max( DS,( MUR * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_RAM ) * ( Min( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ,( FirstVNF_Mem * ACS ) ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) )", "choosing": "Max( ( ( ( CS - MUM ) * Min( DS ,DS ) ) / ( ( MUR - MUC ) / ( RCSe * ( DS * MUR ) ) ) ),Min( Min( ( MLU * MLU ) ,( MLU + MUM ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( ( ( AMS - ( ( Max( FirstVNF_CPU_Server,MDR ) + Max( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - BR ) ),PN ) ) + Min( MRS ,( ( Const + FirstVNF_CPU_Server ) * MRS ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * Min( ( ACS + Const ) ,( AMS + MRS ) ) )", "choosing": "( ( DS / DS ) - ( CS - ( RMSe + ( RRSe + RCSe ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.3836441238216556}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( RRSe / RMSe ) )", "obj1": 0.639763779527559, "obj2": 0.21539728634524524}, {"determining": "( ( FirstVNF_Mem * Min( ( FirstVNF_CPU - ( Min( ARS ,Const ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RCSe - CS ),( RRSe / RMSe ) ) + MUR ) )", "obj1": 0.5885826771653543, "obj2": 0.26342864011138134}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.06437680204232538}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16881917443508057}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( MLU * MUR ) ) )", "obj1": 0.515748031496063, "obj2": 0.28727068744360224}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) / Const ) - FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( ( ( MUR - ( ( MUM + DS ) * ( ( MLU * RRSe ) - RRSe ) ) ) + ( RCSe / MUM ) ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.13582677165354332, "obj2": 0.6541674186871596}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.7598425196850394, "obj2": 0.15344059926474096}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( FirstVNF_Mem * BR ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( DS + RRSe ) / ( DS / ( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.6727426749405843}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) ,( ( Max( MDR,Const ) + FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - DS ) ,RRSe ) )", "obj1": 0.051181102362204724, "obj2": 0.6968924698516356}, {"determining": "( ( ( ACS + Const ) - ( AMS + MRS ) ) * ( ( AMS - ( FirstVNF_RAM_Server - Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( DS * ( DS + MUC ) ),RRSe ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4822834645669291, "obj2": 0.32227572308845814}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.337220004498176}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( RRSe / RMSe ) )", "obj1": 0.5570866141732284, "obj2": 0.2728177676496342}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ,( ( ( MRS / DDR ) + Max( MDR,Const ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - Max( ( MDR / ARS ),FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS * ( RMSe * ( RCSe / ( Min( ( MLU + RRSe ) ,( RCSe + MLU ) ) + Min( Min( DS ,RMSe ) ,MUC ) ) ) ) ) * ( Min( MUM ,RCSe ) / ( Max( RRSe,Max( RCSe,RCSe ) ) + ( CS / MLU ) ) ) ) + ( Min( ( ( MUR - ( ( MUM + DS ) * ( Min( CS ,RCSe ) - RRSe ) ) ) + ( RCSe / MUM ) ) ,( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.04348388820144227}, {"determining": "Max( Max( Max( ( ( FirstVNF_Mem * MDR ) + MDR ),( ARS / MDR ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS )", "obj1": 0.37598425196850394, "obj2": 0.42802723273499343}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Min( Max( RRSe,MUM ) ,( MLU * CS ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.0876320389058174}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( RRSe * DS ) * ( MUM + Max( DS,( ( MUC - ( RRSe - RCSe ) ) - ( MLU / RMSe ) ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.1172871412203531}, {"determining": "( Min( AMS ,CRS ) * Max( ( ( Max( FirstVNF_Mem,PN ) - CRS ) + PN ),( ( FirstVNF_RAM + MDR ) + MRS ) ) )", "choosing": "( ( Min( MLU ,RRSe ) - MLU ) / ( ( Min( RRSe ,MUM ) + Max( CS,DS ) ) * ( ( Max( CS,CS ) + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.559524569080776}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * Min( PN ,MDR ) ) + Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( RMSe + MUC ) ) )", "obj1": 0.3464566929133858, "obj2": 0.42951907018627145}, {"determining": "( Min( ( ACS + Const ) ,( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.7834645669291339, "obj2": 0.13050288445667924}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.655511811023622, "obj2": 0.19208643259500738}, {"determining": "( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - Min( Max( RRSe,MUM ) ,( MLU * CS ) ) )", "obj1": 0.8090551181102362, "obj2": 0.09107474435348277}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) )", "obj1": 0.2795275590551181, "obj2": 0.48192982027721937}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.25393700787401574, "obj2": 0.4921619681375704}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * Min( PN ,MDR ) ) + Max( AMS,Min( MRS ,AMS ) ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( DS / DS ) ) )", "obj1": 0.328740157480315, "obj2": 0.4413354382576136}, {"determining": "Max( ( MRS * PN ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( ( Max( MUC,( Max( CS,MLU ) + Min( MUR ,RMSe ) ) ) * ( ( MUC * RCSe ) / ( ( RMSe * MLU ) / Min( DS ,MUC ) ) ) ) * DS ) ,MUC ) - ( MLU + CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) )", "obj1": 0.31299212598425197, "obj2": 0.4581725335425013}, {"determining": "Max( Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * MLU ),MLU ) - CS )", "obj1": 0.297244094488189, "obj2": 0.46276671823629145}, {"determining": "( ( ( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( FirstVNF_Mem,Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( ( RRSe * RCSe ) * ( Min( ( DS - DS ) ,RRSe ) - CS ) )", "obj1": 0.20669291338582677, "obj2": 0.5371217643515425}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + Min( MRS ,Max( RRS,BR ) ) ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( DS / ( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03835367648638677}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( Min( MRS ,( CRS + ACS ) ) + RRS ) ) )", "choosing": "( ( DS / DS ) - RMSe )", "obj1": 0.44291338582677164, "obj2": 0.3320850465726875}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.18474871708883386}, {"determining": "( Min( ( Min( MRS ,( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / ( BR / RRS ) ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Min( Max( RRSe,MUM ) ,( Max( ( CS - Max( MUC,MLU ) ),RCSe ) * CS ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.5533077038648592}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) / Const ) - FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( Max( ( CS - MUM ),MUR ) ,( ( MLU + MUC ) + ( RRSe / RMSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4461235920924485}, {"determining": "( Min( ( Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Min( Max( RRSe,MUM ) ,( MLU * CS ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5556442364860119}, {"determining": "( Min( FirstVNF_RAM ,RRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( DS,RRSe ) ) )", "obj1": 0.23818897637795275, "obj2": 0.5023828289351592}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( FirstVNF_Mem_Server - Min( Const ,Min( PN ,MDR ) ) ),( Min( FirstVNF_RAM ,RRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( ( MLU * CS ) + Min( Max( RMSe,MUM ) ,( MUC * ( RCSe + MUR ) ) ) ) - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.5155437647539614}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( DS,RRSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.007019072721491576}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( FirstVNF_Mem_Server - Min( Const ,Min( PN ,MDR ) ) ),( FirstVNF_Mem_Server / Const ) ),PN ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( RMSe + MUC ) ) )", "obj1": 0.2952755905511811, "obj2": 0.4774228287561564}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS / MUM ) ) ) + ( ( CS * DS ) / Min( Max( RMSe,RCSe ) ,( MLU + RMSe ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.011892414575684386}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.23031496062992127, "obj2": 0.5089436703433403}, {"determining": "Max( Max( Max( ( ( Max( ( ( FirstVNF_Mem * MDR ) + MDR ),( ARS / MDR ) ) * MDR ) + MDR ),( ARS / MDR ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * MUM ),MUM ) - CS )", "obj1": 0.37598425196850394, "obj2": 0.42802723273499343}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( RMSe + ( Max( Max( MUR,DS ),( DS * MUM ) ) / ( ( Min( Min( MUC ,RRSe ) ,Min( ( RRSe * DS ) ,MUC ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) ) ) )", "obj1": 0.9350393700787402, "obj2": 0.03227495275851798}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( ( ACS + ( FirstVNF_CPU_Server + MRS ) ) + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( Max( RRSe,RMSe ),Min( MUC ,( MLU + Min( Min( ( MLU * CS ) ,RRSe ) ,( RMSe / CS ) ) ) ) ) + MUR ) )", "obj1": 0.7795275590551181, "obj2": 0.14636587433994874}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( FirstVNF_Mem * BR ) ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - MLU )", "obj1": 0.12598425196850394, "obj2": 0.6685687555419264}, {"determining": "( Min( ( Min( MRS ,( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / ( BR / RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( RCSe / MUR ) * RCSe ),RRSe ) ) )", "obj1": 0.25196850393700787, "obj2": 0.49735853462244034}], "6": [{"determining": "( ( Const - FirstVNF_RAM ) * ( Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) )", "choosing": "Max( ( ( ( CS - MUM ) * Min( DS ,DS ) ) / ( ( MUR - MUC ) / ( RCSe * ( ( DS / DS ) * MUR ) ) ) ),Min( Min( ( MLU * MLU ) ,( MLU + MUM ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM * MRS ) ,( FirstVNF_CPU - AMS ) ) - MRS ) * ( Max( MDR,BR ) / ( ARS * BR ) ) )", "choosing": "( ( ( MUM + MUC ) - ( MLU / DS ) ) - Min( Min( MLU ,( RMSe / RCSe ) ) ,Max( DS,( MUR * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( ( ( AMS - ( ( Max( FirstVNF_CPU_Server,MDR ) + Max( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - BR ) ),PN ) ) + Min( MRS ,( ( Const + FirstVNF_CPU_Server ) * MRS ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * Min( ( ACS + Const ) ,( AMS + MRS ) ) )", "choosing": "( ( DS / DS ) - ( CS - ( RMSe + ( RRSe + RCSe ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.3836441238216556}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),MRS ) ) ,( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( MUM + Max( RRSe,RRSe ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.6257052939130554}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( RRSe / RMSe ) )", "obj1": 0.639763779527559, "obj2": 0.21539728634524524}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( FirstVNF_Mem * BR ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( DS + RRSe ) / ( DS / ( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.6727426749405843}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16881917443508057}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( Min( ( Min( MRS ,( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) + Const ) ,( AMS + MRS ) ) * ( Max( MDR,( FirstVNF_Mem + FirstVNF_Mem ) ) + ( MRS / ( BR / RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4257874895212668}, {"determining": "( ( FirstVNF_Mem * Min( ( DDR - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.7598425196850394, "obj2": 0.15344059926474096}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.06437680204232538}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.337220004498176}, {"determining": "( ( FirstVNF_Mem * Min( ( ( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ,( FirstVNF_Mem * ACS ) ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / ( Min( Min( MUC ,RRSe ) ,Min( ( RRSe * DS ) ,MUC ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) ),DS ) + MUR ) )", "obj1": 0.594488188976378, "obj2": 0.2552707425825254}, {"determining": "( Min( ( Const + MRS ) ,ACS ) * ( ( FirstVNF_RAM_Server * ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUC ,RMSe ) / MUM ) - ( ( DS / DS ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.30918230065192853}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( Min( MRS ,( CRS + ACS ) ) + RRS ) ) )", "choosing": "( ( Min( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.11402136251073176}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( RRSe / RMSe ) )", "obj1": 0.5570866141732284, "obj2": 0.2728177676496342}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) ,( ( Max( MDR,Const ) + FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - DS ) ,RRSe ) )", "obj1": 0.05905511811023622, "obj2": 0.6842720559216015}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( MLU * MUR ) ) )", "obj1": 0.515748031496063, "obj2": 0.28727068744360224}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( ( MLU * CS ) + Min( Max( RMSe,MUM ) ,( MUC * ( RCSe + MUR ) ) ) ) - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.08679096098513485}, {"determining": "( ( DDR * ACS ) * Min( Min( ACS ,Const ) ,( DDR + MRS ) ) )", "choosing": "( ( DS / RCSe ) - ( Min( Min( ( ( MUC * MUM ) - DS ) ,( RCSe + MUM ) ) ,MUC ) - RRSe ) )", "obj1": 0.8877952755905512, "obj2": 0.05154426113510009}, {"determining": "( Min( Const ,CRS ) * Max( ( Const + PN ),PN ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.5310109930801462}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + Min( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ,Max( RRS,BR ) ) ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( DS / ( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( ( CS - MUM ) + ( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) )", "obj1": 0.952755905511811, "obj2": 0.021753989433650422}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( CRS * ARS ) - ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( ( DS - ( RCSe + Max( ( CS * MUC ),MUC ) ) ) - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.8070866141732284, "obj2": 0.09260859434291113}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.655511811023622, "obj2": 0.19208643259500738}, {"determining": "( ( FirstVNF_Mem * Min( ( FirstVNF_CPU - ( Min( ARS ,Const ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RCSe - CS ),( RRSe / RMSe ) ) + MUR ) )", "obj1": 0.5885826771653543, "obj2": 0.26342864011138134}, {"determining": "( Min( FirstVNF_RAM ,MRS ) * ( ( AMS - ( PN + Const ) ) / Max( Max( MRS,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - MUM ) + Max( RRSe,MLU ) ) - ( ( CS - MUM ) + ( RCSe / CS ) ) )", "obj1": 0.5216535433070866, "obj2": 0.28306185765876973}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.281496062992126, "obj2": 0.46140197002712413}, {"determining": "( Min( Const ,CRS ) * Max( Max( ( FirstVNF_Mem_Server - Min( Const ,Min( PN ,MDR ) ) ),( Min( FirstVNF_RAM ,RRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ),PN ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( ( MLU * CS ) + Min( Max( RMSe,MUM ) ,( MUC * ( RCSe + MUR ) ) ) ) - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.5155437647539614}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( RMSe + ( Max( ( ( RRSe / MUC ) + ( MLU + MUC ) ),( DS * MUM ) ) / ( ( Min( Min( MUC ,RRSe ) ,Min( ( RRSe * DS ) ,MUC ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) ) ) )", "obj1": 0.9330708661417323, "obj2": 0.03147094811530418}, {"determining": "( ( FirstVNF_Mem * Min( FirstVNF_RAM ,( ( Max( FirstVNF_CPU_Server,MDR ) * AMS ) - FirstVNF_CPU_Server ) ) ) / Max( AMS,CRS ) )", "choosing": "Min( ( MUR / CS ) ,( Max( Min( MUC ,( MLU + Min( Min( ( MUR * CS ) ,RRSe ) ,( DS / CS ) ) ) ),Max( RRSe,RMSe ) ) + MUR ) )", "obj1": 0.7755905511811023, "obj2": 0.1475682819035944}, {"determining": "( Min( AMS ,CRS ) * Max( ( ( Max( FirstVNF_Mem,PN ) - CRS ) + PN ),( ( FirstVNF_RAM + MDR ) + MRS ) ) )", "choosing": "( ( Min( MLU ,RRSe ) - MLU ) / ( ( Min( RRSe ,MUM ) + Max( CS,DS ) ) * ( ( Max( CS,CS ) + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.559524569080776}, {"determining": "( Min( Const ,CRS ) * Max( ( Const + PN ),DDR ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( ( ( CS * DS ) / Min( Max( RMSe,RCSe ) ,( MLU + RMSe ) ) ),RMSe ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5439452489655776}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( Max( Max( Max( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ),RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.18430386956025416}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * Min( PN ,MDR ) ) + Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( RMSe + MUC ) ) )", "obj1": 0.3464566929133858, "obj2": 0.42951907018627145}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.32101243267824536}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ,( ( ( MRS / DDR ) + Max( MDR,Const ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - Max( ( MDR / ARS ),FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS * ( RMSe * ( RCSe / ( Min( ( MLU + RRSe ) ,( RCSe + MLU ) ) + Min( Min( DS ,RMSe ) ,MUC ) ) ) ) ) * ( Min( MUM ,RCSe ) / ( Max( RRSe,Max( RCSe,RCSe ) ) + ( CS / MLU ) ) ) ) + ( Min( ( ( MUR - ( ( MUM + DS ) * ( Min( CS ,RCSe ) - RRSe ) ) ) + ( RCSe / MUM ) ) ,( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.04348388820144227}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS / MUM ) ) ) + ( ( CS * DS ) / Min( Max( RMSe,RCSe ) ,( MLU + RMSe ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.011892414575684386}, {"determining": "( ( ( ( Max( ( ( ( ACS + Const ) * FirstVNF_RAM_Server ) + AMS ),FirstVNF_Mem_Server ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( Const ,FirstVNF_CPU ) ) )", "choosing": "( Max( Max( MUC,RCSe ),( MLU * ( Max( Min( MUC ,Min( CS ,Max( RMSe,MUM ) ) ),RCSe ) + RMSe ) ) ) * ( Min( ( DS - MLU ) ,RRSe ) - CS ) )", "obj1": 0.18700787401574803, "obj2": 0.5589309832476386}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( DS,RRSe ) ) )", "obj1": 0.9803149606299213, "obj2": 0.007019072721491576}, {"determining": "( Min( ( ACS + Const ) ,( ( DDR / Max( MRS,RRS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - Min( RMSe ,( MUR + RRSe ) ) )", "obj1": 0.4409448818897638, "obj2": 0.3228990571764717}, {"determining": "( Min( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * CS ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2736220472440945, "obj2": 0.4793527115158674}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Const + Min( MRS ,Max( RRS,BR ) ) ) * ( FirstVNF_Mem - AMS ) ) )", "choosing": "( ( DS / ( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03835367648638677}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) / Const ) - FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( Max( ( CS - MUM ),MUR ) ,( ( MLU + MUC ) + ( RRSe / RMSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4461235920924485}, {"determining": "Max( Max( ( ( ( Max( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ),Max( CRS,( FirstVNF_Mem * ACS ) ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),CRS ),( DDR - FirstVNF_CPU ) )", "choosing": "( Max( ( MLU * ( ( MUR - ( ( MUM + DS ) * ( ( RMSe * RRSe ) - MLU ) ) ) * RMSe ) ),MLU ) - CS )", "obj1": 0.25393700787401574, "obj2": 0.4898543294320001}, {"determining": "Max( Max( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * ( CS - MUM ) ),MLU ) - CS )", "obj1": 0.265748031496063, "obj2": 0.48127740607643765}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.23031496062992127, "obj2": 0.5089436703433403}, {"determining": "Max( ( MRS * PN ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( ( Max( MUC,( Max( CS,MLU ) + Min( MUR ,RMSe ) ) ) * ( ( MUC * RCSe ) / ( ( RMSe * MLU ) / Min( DS ,MUC ) ) ) ) * DS ) ,MUC ) - ( MLU + CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) )", "obj1": 0.31299212598425197, "obj2": 0.4581725335425013}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * ( Max( ( ( MRS * FirstVNF_RAM_Server ) + AMS ),FirstVNF_Mem_Server ) + MDR ) ) + Max( FirstVNF_Mem,RRS ) ),( ( CRS / Max( PN,Const ) ) + ( ARS / ACS ) ) )", "choosing": "Min( ( ( ( Max( Min( MUC ,Min( CS ,DS ) ),RCSe ) * ( DS + CS ) ) - MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) )", "obj1": 0.30708661417322836, "obj2": 0.4603713121493621}, {"determining": "( Min( ( Min( MRS ,( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / ( BR / RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( RCSe / MUR ) * RCSe ),RRSe ) ) )", "obj1": 0.25196850393700787, "obj2": 0.49735853462244034}], "7": [{"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) ,( ( Min( MRS ,( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) + Const ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_RAM ) * ( Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) )", "choosing": "Max( ( ( ( CS - MUM ) * Min( DS ,DS ) ) / ( ( MUR - MUC ) / ( RCSe * ( ( DS / DS ) * MUR ) ) ) ),Min( Min( ( MLU * MLU ) ,( MLU + MUM ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( ( ( AMS - ( ( Max( FirstVNF_CPU_Server,MDR ) + Max( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - BR ) ),PN ) ) + Min( MRS ,( ( Const + FirstVNF_CPU_Server ) * MRS ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * Min( ( ACS + Const ) ,( AMS + MRS ) ) )", "choosing": "( ( DS / DS ) - ( CS - ( RMSe + ( RRSe + RCSe ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.3836441238216556}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),MRS ) ) ,( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( MUM + Max( RRSe,RRSe ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.12401574803149606, "obj2": 0.6257052939130554}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( ACS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.21417099325472894}, {"determining": "Max( ( ( FirstVNF_Mem * CRS ) / ( FirstVNF_CPU_Server / FirstVNF_RAM ) ),( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( FirstVNF_Mem * BR ) ) )", "choosing": "Min( ( Min( CS ,MUC ) - ( MLU * CS ) ) ,( ( DS + RRSe ) / ( DS / ( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.6727426749405843}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "Min( ( ( MRS + MDR ) - Max( ( ARS + RRS ),MRS ) ) ,( MDR + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( RRSe ,MLU ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( RRSe * ( RCSe - ( MLU + ( MUM - RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.11166659187380586}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( ( MUM + MUC ) - ( MLU / DS ) ) - Min( Min( MLU ,( RMSe / RCSe ) ) ,Max( DS,( MUR * MUC ) ) ) )", "obj1": 0.7559055118110236, "obj2": 0.14814353028244867}, {"determining": "( ( FirstVNF_Mem * Min( ( ( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ,( FirstVNF_Mem * ACS ) ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / ( Min( Min( MUC ,RRSe ) ,Min( ( RRSe * DS ) ,MUC ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) ),DS ) + MUR ) )", "obj1": 0.594488188976378, "obj2": 0.2552707425825254}, {"determining": "( Min( ( Min( MRS ,( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) + Const ) ,( AMS + MRS ) ) * ( Max( MDR,( FirstVNF_Mem + FirstVNF_Mem ) ) + ( MRS / ( BR / RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4257874895212668}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( DS * RRSe ) * MLU ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.7106299212598425, "obj2": 0.14864762811201854}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.06437680204232538}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16881917443508057}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( Max( Const,FirstVNF_Mem ) * MRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( ( ( Max( ( RRS - PN ),Const ) + ( MRS / DDR ) ) + ( ( Const - AMS ) - ( CRS * ARS ) ) ) * CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( CS / ( MUC + ( ( MUM + RRSe ) - MUM ) ) ) / ( RRSe * RCSe ) ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( RCSe - RCSe ) )", "obj1": 0.5492125984251969, "obj2": 0.26964992807420224}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) ,( ( Max( MDR,Const ) + FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - DS ) ,RRSe ) )", "obj1": 0.05905511811023622, "obj2": 0.6842720559216015}, {"determining": "( Min( AMS ,CRS ) * Max( ( ( Max( FirstVNF_Mem,PN ) - CRS ) + PN ),( ( FirstVNF_RAM + MDR ) + MRS ) ) )", "choosing": "( ( Min( MLU ,RRSe ) - MLU ) / ( ( Min( RRSe ,MUM ) + Max( CS,DS ) ) * ( ( Max( CS,CS ) + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.559524569080776}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( CRS * ARS ) - ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( ( DS - ( RCSe + Max( ( CS * MUC ),MUC ) ) ) - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.8070866141732284, "obj2": 0.09260859434291113}, {"determining": "( FirstVNF_CPU_Server * ( PN / Max( ARS,( Max( PN,Max( ( FirstVNF_CPU / ( PN + MDR ) ),FirstVNF_CPU_Server ) ) + ACS ) ) ) )", "choosing": "( Max( ( ( MLU / MUC ) / ( MUC + RRSe ) ),RCSe ) / ( ( Max( MUM,RMSe ) - MLU ) * ( ( CS / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5430265071163258}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( ACS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( Max( RRSe,RMSe ),Min( MUC ,( MLU + Min( Min( ( MLU * CS ) ,RRSe ) ,( RMSe / CS ) ) ) ) ) + MUR ) )", "obj1": 0.8326771653543307, "obj2": 0.08658929328042558}, {"determining": "( Min( ( ACS + Const ) ,Const ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( ( CS * DS ),RRSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.337220004498176}, {"determining": "( Min( Max( Max( ( CRS - DDR ),Min( CRS ,ARS ) ),Max( BR,FirstVNF_Mem_Server ) ) ,ACS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( DS / DS ) + Max( ( ( MUR - ( ( MUM + DS ) * ( ( MLU * RRSe ) - RRSe ) ) ) + ( RCSe / MUM ) ),( DS * MUM ) ) ) )", "obj1": 0.4921259842519685, "obj2": 0.30850285369232777}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( MLU * MUR ) ) )", "obj1": 0.515748031496063, "obj2": 0.28727068744360224}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ( MDR - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Max( Max( ( MUR + RMSe ),MUM ),MUR ),MLU ) + ( Max( Max( Max( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ),RCSe ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.655511811023622, "obj2": 0.18584569318170902}, {"determining": "( Min( FirstVNF_RAM ,MRS ) * ( ( AMS - ( PN + Const ) ) / Max( Max( MRS,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - MUM ) + Max( RRSe,MLU ) ) - ( ( CS - MUM ) + ( RCSe / CS ) ) )", "obj1": 0.5216535433070866, "obj2": 0.28306185765876973}, {"determining": "( Min( Const ,CRS ) * Max( ( Const + PN ),PN ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.5310109930801462}, {"determining": "( ( FirstVNF_Mem * Min( ( FirstVNF_CPU - ( Min( ARS ,Const ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RCSe - CS ),( RRSe / RMSe ) ) + MUR ) )", "obj1": 0.5885826771653543, "obj2": 0.26342864011138134}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.265748031496063, "obj2": 0.46809959587473354}, {"determining": "( ( DDR * ACS ) * Min( Min( ACS ,Const ) ,( DDR + MRS ) ) )", "choosing": "( ( DS / RCSe ) - ( Min( Min( ( ( MUC * MUM ) - DS ) ,( RCSe + MUM ) ) ,MUC ) - RRSe ) )", "obj1": 0.8877952755905512, "obj2": 0.05154426113510009}, {"determining": "( Min( ( Const + MRS ) ,ACS ) * ( ( FirstVNF_RAM_Server * ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUC ,RMSe ) / MUM ) - ( ( DS / DS ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.30918230065192853}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.32101243267824536}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.281496062992126, "obj2": 0.46140197002712413}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( ( CRS - DDR ),Min( CRS ,ARS ) ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Min( ( Max( ( ( MUM * RMSe ) * MLU ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.9507874015748031, "obj2": 0.01645136991416603}, {"determining": "( Min( ( ( ( ( AMS - ACS ) + MDR ) / Const ) * FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * ( ( ( CS - MUM ) + Max( RRSe,RRSe ) ) - ( ( CS - MUM ) + Max( DS,RRSe ) ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.33267716535433073, "obj2": 0.43703510822732666}, {"determining": "( Min( ( Min( MRS ,( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) + Const ) ,( AMS + MRS ) ) * ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( Max( RRSe,( ( CS - MUM ) + Max( DS,RRSe ) ) ) / MUR ) * RCSe ),RRSe ) ) )", "obj1": 0.9783464566929134, "obj2": 0.006993842650874729}, {"determining": "( Min( ( ACS + Const ) ,( ( DDR / Max( MRS,RRS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - Min( RMSe ,( MUR + RRSe ) ) )", "obj1": 0.4409448818897638, "obj2": 0.3228990571764717}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.337220004498176}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( Max( Max( Max( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ),RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.18430386956025416}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5054589301376933}, {"determining": "Max( Max( ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( PN - ACS ) ) / ( Max( FirstVNF_RAM,MDR ) * MDR ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * ( MUM - CS ) ),Max( ( CS - RCSe ),DS ) ) - CS )", "obj1": 0.2440944881889764, "obj2": 0.49741641301523315}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / ( ( RCSe + MUM ) + ( CS / MUM ) ) ) + ( ( CS * DS ) / Min( Max( RMSe,RCSe ) ,( MLU + RMSe ) ) ) )", "obj1": 0.9704724409448819, "obj2": 0.011892414575684386}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( RMSe + ( Max( ( ( RRSe / MUC ) + ( MLU + MUC ) ),( DS * MUM ) ) / ( ( Min( Min( MUC ,RRSe ) ,Min( ( RRSe * DS ) ,MUC ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) ) ) )", "obj1": 0.9330708661417323, "obj2": 0.03147094811530418}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * Min( PN ,MDR ) ) + Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( RMSe + MUC ) ) )", "obj1": 0.3464566929133858, "obj2": 0.42951907018627145}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,ACS ) * Max( FirstVNF_Mem,BR ) ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,( Min( ( Const + MRS ) ,ACS ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( ( DS / DS ) / DS ) - ( ( CS - MUM ) + Max( DS,RRSe ) ) )", "obj1": 0.9409448818897638, "obj2": 0.025702971783529666}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) / Const ) - FirstVNF_Mem ) + Max( FirstVNF_Mem,RRS ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( Max( ( CS - MUM ),MUR ) ,( ( MLU + MUC ) + ( RRSe / RMSe ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4461235920924485}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * ( Max( ( ( MRS * FirstVNF_RAM_Server ) + AMS ),FirstVNF_Mem_Server ) + MDR ) ) + Max( FirstVNF_Mem,RRS ) ),( ( CRS / Max( PN,Const ) ) + ( ARS / ACS ) ) )", "choosing": "Min( ( ( ( Max( Min( MUC ,Min( CS ,DS ) ),RCSe ) * ( DS + CS ) ) - MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) )", "obj1": 0.30708661417322836, "obj2": 0.4603713121493621}, {"determining": "Max( Max( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * ( ( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) - MUM ) ),MLU ) - CS )", "obj1": 0.2637795275590551, "obj2": 0.48947055789465876}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Max( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + AMS ),FirstVNF_Mem_Server ) + MDR ) / Const ) )", "choosing": "( ( DS / ( ( ( Min( ( DS - MLU ) ,RRSe ) / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.5226443443815003}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) ,( ( Max( MDR,Const ) + FirstVNF_CPU_Server ) + ( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - DS ) ,RRSe ) )", "obj1": 0.04921259842519685, "obj2": 0.6934185157868462}], "8": [{"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) ,( ( Min( MRS ,( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) + Const ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) ,( ( Min( MRS ,( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) + Const ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "Min( FirstVNF_CPU_Server ,( Max( ( ( RRS + FirstVNF_CPU ) + Max( MDR,MDR ) ),FirstVNF_RAM ) - ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "( ( ( ( MUR - MUR ) - ( RRSe - RRSe ) ) - MLU ) / ( ( ( RRSe / MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( ( ( ( RMSe - MUM ) + RRSe ) * ( Min( RRSe ,CS ) - ( RMSe - RCSe ) ) ),MUM ),Min( CS ,DS ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13778085821900404}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( ACS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.639763779527559, "obj2": 0.21417099325472894}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) ,( ( Max( MDR,Const ) + FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Max( FirstVNF_Mem_Server,( FirstVNF_Mem * ( MRS * MRS ) ) ) + MDR ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( ( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ) * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - DS ) ,RRSe ) )", "obj1": 0.10433070866141732, "obj2": 0.633614279424821}, {"determining": "Min( ( ( MRS + MDR ) - Max( ( ARS + RRS ),MRS ) ) ,( MDR + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( RRSe ,MLU ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( RRSe * ( RCSe - ( MLU + ( MUM - RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.11166659187380586}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( ( FirstVNF_Mem * Min( ( ( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ,( FirstVNF_Mem * ACS ) ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RRSe / ( Min( Min( MUC ,RRSe ) ,Min( ( RRSe * DS ) ,MUC ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) ),DS ) + MUR ) )", "obj1": 0.594488188976378, "obj2": 0.2552707425825254}, {"determining": "( ( ( AMS - ( ( Max( FirstVNF_CPU_Server,MDR ) + Max( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - BR ) ),PN ) ) + Min( MRS ,( ( Const + FirstVNF_CPU_Server ) * MRS ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * Min( ( ACS + Const ) ,( AMS + MRS ) ) )", "choosing": "( ( DS / DS ) - ( CS - ( RMSe + ( RRSe + RCSe ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.3836441238216556}, {"determining": "( ( DDR * ACS ) * Min( Min( ACS ,Const ) ,( DDR + MRS ) ) )", "choosing": "( ( DS / RCSe ) - ( Min( Min( ( ( MUC * MUM ) - DS ) ,( RCSe + MUM ) ) ,MUC ) - RRSe ) )", "obj1": 0.8877952755905512, "obj2": 0.05154426113510009}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( Max( Const,FirstVNF_Mem ) * MRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( ( ( Max( ( RRS - PN ),Const ) + ( MRS / DDR ) ) + ( ( Const - AMS ) - ( CRS * ARS ) ) ) * CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( CS / ( MUC + ( ( MUM + RRSe ) - MUM ) ) ) / ( RRSe * RCSe ) ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( RCSe - RCSe ) )", "obj1": 0.5492125984251969, "obj2": 0.26964992807420224}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - DS ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.02742481539912347}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.12401574803149606, "obj2": 0.6177998938375527}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) ,( ( Max( MDR,Const ) + FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - DS ) ,RRSe ) )", "obj1": 0.05905511811023622, "obj2": 0.6842720559216015}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16881917443508057}, {"determining": "( ( FirstVNF_Mem * Min( ( ( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ,( ARS + RRS ) ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( Max( DS,RRSe ) / CS ) ,( Max( ( RRSe / ( Min( Min( MUC ,RRSe ) ,Min( ( RRSe * DS ) ,MUC ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) ),DS ) + MUR ) )", "obj1": 0.3858267716535433, "obj2": 0.41428301953885693}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.337220004498176}, {"determining": "( ( FirstVNF_Mem * Min( ( FirstVNF_CPU - ( Min( ARS ,Const ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RCSe - CS ),( RRSe / RMSe ) ) + MUR ) )", "obj1": 0.5885826771653543, "obj2": 0.26342864011138134}, {"determining": "( Min( ( ( Const + FirstVNF_CPU ) + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( DS - Max( ( MUM - CS ),Max( ( ( ( MUM - Min( DS ,RRSe ) ) / MUR ) * RCSe ),RRSe ) ) )", "obj1": 0.8326771653543307, "obj2": 0.08062230743691085}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,Const ) - FirstVNF_Mem_Server ),ACS ) / Min( ACS ,FirstVNF_CPU ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( CS,RRSe ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4812338435531668}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) ,( AMS + MRS ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( DS / DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.3956692913385827, "obj2": 0.394915356269755}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * ( Max( ( ( MRS * FirstVNF_RAM_Server ) + AMS ),FirstVNF_Mem_Server ) + MDR ) ) + Max( FirstVNF_Mem,RRS ) ),( ( CRS / Max( PN,Const ) ) + ( ARS / ACS ) ) )", "choosing": "Min( ( ( ( Max( Min( MUC ,Min( CS ,DS ) ),RCSe ) * ( DS + CS ) ) - MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( MLU + MUC ) ) )", "obj1": 0.30708661417322836, "obj2": 0.4603713121493621}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( RCSe / MUR ) * Max( RRSe,RRSe ) ),RRSe ) ) )", "obj1": 0.3484251968503937, "obj2": 0.41575336284039993}, {"determining": "( Min( MRS ,( Min( Max( RRS,MDR ) ,Min( ACS ,FirstVNF_Mem ) ) + ACS ) ) * ( ( AMS - ACS ) / ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( Min( MLU ,MUM ) * Max( CS,DS ) ) * ( RCSe - RCSe ) ) )", "obj1": 0.7952755905511811, "obj2": 0.09616537268645081}, {"determining": "( Min( Max( ( ( CRS - DDR ) * Min( RRS ,FirstVNF_CPU_Server ) ),Max( BR,FirstVNF_Mem_Server ) ) ,ACS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( DS / CS ) + Max( ( ( MUR - ( ( MUM + DS ) * ( Max( DS,DS ) - RRSe ) ) ) + ( RCSe / MUM ) ),( DS * MUM ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.30087063046914975}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ( MDR - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Max( Max( ( MUR + RMSe ),MUM ),MUR ),MLU ) + ( Max( Max( Max( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ),RCSe ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.655511811023622, "obj2": 0.18584569318170902}, {"determining": "( Min( FirstVNF_RAM ,MRS ) * ( ( AMS - ( PN + Const ) ) / Max( Max( MRS,FirstVNF_RAM_Server ),FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - MUM ) + Max( RRSe,MLU ) ) - ( ( CS - MUM ) + ( RCSe / CS ) ) )", "obj1": 0.5216535433070866, "obj2": 0.28306185765876973}, {"determining": "( Min( ( RRS + FirstVNF_CPU_Server ) ,Const ) * ( ( ( Max( ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) + AMS ),FirstVNF_Mem_Server ) + MDR ) / Const ) + FirstVNF_CPU_Server ) )", "choosing": "( ( Max( Max( MUC,RCSe ),( MLU * ( Min( Min( Max( CS,RMSe ) ,( RCSe - MUR ) ) ,RCSe ) + RMSe ) ) ) / DS ) - CS )", "obj1": 0.31496062992125984, "obj2": 0.4411308790738909}, {"determining": "( Min( Const ,CRS ) * Max( ( Const + PN ),PN ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.5310109930801462}, {"determining": "( FirstVNF_CPU_Server * ( PN / Max( ARS,( Max( PN,Max( ( FirstVNF_CPU / ( PN + MDR ) ),FirstVNF_CPU_Server ) ) + ACS ) ) ) )", "choosing": "( Max( ( ( MLU / MUC ) / ( MUC + RRSe ) ),RCSe ) / ( ( Max( MUM,RMSe ) - MLU ) * ( ( CS / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5430265071163258}, {"determining": "( Min( AMS ,CRS ) * Max( ( ( Max( FirstVNF_Mem,PN ) - CRS ) + PN ),( ( FirstVNF_RAM + MDR ) + MRS ) ) )", "choosing": "( ( Min( MLU ,RRSe ) - MLU ) / ( ( Min( RRSe ,MUM ) + Max( CS,DS ) ) * ( ( Max( CS,CS ) + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.559524569080776}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.281496062992126, "obj2": 0.46140197002712413}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( Min( DDR ,Max( CRS,( AMS * FirstVNF_RAM_Server ) ) ) ,( Min( Min( MRS ,FirstVNF_Mem ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) + ACS ) ) ) ) * Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) - ( ( RRS - FirstVNF_Mem ) + Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) / Min( Min( ( ( Max( Max( RMSe,DS ),RRSe ) - ( RMSe * MUR ) ) / ( RMSe + RCSe ) ) ,RRSe ) ,Min( MUC ,DS ) ) ) / ( ( ( RCSe - Max( MLU,RCSe ) ) - MUR ) + MUC ) )", "obj1": 0.8562992125984252, "obj2": 0.06614171559766434}, {"determining": "Max( Max( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * ( ( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) - MUM ) ),MLU ) - CS )", "obj1": 0.2421259842519685, "obj2": 0.49591791720664624}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( MLU * MUR ) ) )", "obj1": 0.5039370078740157, "obj2": 0.288262866348132}, {"determining": "( Min( ( ( ( ( AMS - ACS ) + MDR ) / Const ) * FirstVNF_Mem ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * ( ( ( CS - MUM ) + Max( RRSe,RRSe ) ) - ( ( CS - MUM ) + Max( DS,RRSe ) ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.33267716535433073, "obj2": 0.43703510822732666}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) ,( ( Max( MDR,Const ) + FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Max( FirstVNF_Mem_Server,( ( BR + Max( FirstVNF_Mem,DDR ) ) * ( MRS * MRS ) ) ) + MDR ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( Min( MUC ,RRSe ) * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - DS ) ,RRSe ) )", "obj1": 0.05905511811023622, "obj2": 0.6842720559216015}, {"determining": "( Min( ( ACS + Const ) ,( ( DDR / Max( MRS,RRS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - Min( RMSe ,( MUR + RRSe ) ) )", "obj1": 0.4409448818897638, "obj2": 0.3228990571764717}, {"determining": "( Min( ( ACS + Const ) ,Const ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( ( CS * DS ),RRSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.337220004498176}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( RCSe / MUR ) * RCSe ),RRSe ) ) )", "obj1": 0.8700787401574803, "obj2": 0.06005248788725792}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * Min( PN ,MDR ) ) + Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( RMSe + MUC ) ) )", "obj1": 0.3464566929133858, "obj2": 0.42951907018627145}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.265748031496063, "obj2": 0.46809959587473354}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * Max( ( Const + PN ),PN ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.5572947234284353}, {"determining": "Min( FirstVNF_Mem ,( ( Max( MDR,Const ) + FirstVNF_CPU_Server ) + ( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,Max( ( ( RRSe / MUC ) + ( MLU + MUC ) ),( DS * MUM ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - DS ) ,RRSe ) )", "obj1": 0.047244094488188976, "obj2": 0.6854800358372298}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.12401574803149606, "obj2": 0.6177998938375527}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5054589301376933}, {"determining": "( Min( ( Const + MRS ) ,ACS ) * ( ( FirstVNF_RAM_Server * ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUC ,RMSe ) / MUM ) - ( ( DS / DS ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.30918230065192853}, {"determining": "Min( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ,( FirstVNF_CPU_Server + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( ( Max( ( ( ( RMSe / RCSe ) * RRSe ) * MLU ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( Max( MUR,DS ),( DS * MUM ) ) / Min( ( MLU + RMSe ) ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.6732283464566929, "obj2": 0.17169375812613813}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Max( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + AMS ),FirstVNF_Mem_Server ) + MDR ) / Const ) )", "choosing": "( ( DS / ( ( ( Min( ( DS - MLU ) ,RRSe ) / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.21653543307086615, "obj2": 0.5226443443815003}], "9": [{"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) ,( ( Min( MRS ,( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) + Const ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( Max( FirstVNF_Mem_Server,( ( BR + MRS ) * ( MRS * MRS ) ) ) + MDR ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( Max( MUC,Max( ( ( RRSe / MUC ) + ( MLU + MUC ) ),( DS * MUM ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - DS ) ,RRSe ) )", "obj1": 0.6377952755905512, "obj2": 0.20797959741498181}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - CRS ) * ARS ) / Max( Max( DDR,FirstVNF_Mem ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( ( ( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ) * ( MUM + RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) )", "obj1": 0.9311023622047244, "obj2": 0.02729152839429592}, {"determining": "( Max( AMS,Min( MRS ,( ( FirstVNF_CPU - ( ( AMS - AMS ) - FirstVNF_CPU_Server ) ) + ACS ) ) ) / ( FirstVNF_Mem * ( ACS + ( ( MRS / FirstVNF_Mem_Server ) * MDR ) ) ) )", "choosing": "Min( ( MUR / RMSe ) ,( Max( ( RRSe / ( Min( Min( MUC ,RRSe ) ,Min( ( RRSe * MLU ) ,MUC ) ) / ( ( Min( MUR ,MUC ) / MUR ) - CS ) ) ),DS ) + MUR ) )", "obj1": 0.59251968503937, "obj2": 0.250823987922674}, {"determining": "( Max( Min( MDR ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_Mem * MDR ) ),PN ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,( ( RMSe * MLU ) - ( MLU + MUC ) ) ) / Min( ( ( ( RRSe / MUC ) * MUR ) / MUC ) ,( MUR - Min( DS ,RCSe ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.6080021719758995}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( ( ( AMS - ( ( Max( FirstVNF_CPU_Server,MDR ) + Max( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server - BR ) ),PN ) ) + Min( MRS ,( ( Const + FirstVNF_CPU_Server ) * MRS ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * Min( ( ACS + Const ) ,( AMS + MRS ) ) )", "choosing": "( ( DS / DS ) - ( CS - ( RMSe + ( RRSe + RCSe ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.3836441238216556}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.131949462361234}, {"determining": "Min( ( ( MRS + MDR ) - Max( ( ARS + RRS ),MRS ) ) ,( MDR + ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Min( RRSe ,MLU ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) + ( RRSe * ( RCSe - ( MLU + ( MUM - RCSe ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.11166659187380586}, {"determining": "Min( FirstVNF_CPU_Server ,( Max( ( ( RRS + FirstVNF_CPU ) + Max( MDR,MDR ) ),FirstVNF_RAM ) - ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "( ( ( ( MUR - MUR ) - ( RRSe - RRSe ) ) - MLU ) / ( ( ( RRSe / MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( ( ( ( RMSe - MUM ) + RRSe ) * ( Min( RRSe ,CS ) - ( RMSe - RCSe ) ) ),MUM ),Min( CS ,DS ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13778085821900404}, {"determining": "( ( DDR * ACS ) * Min( Min( ACS ,Const ) ,( DDR + MRS ) ) )", "choosing": "( ( DS / RCSe ) - ( Min( Min( ( ( MUC * MUM ) - DS ) ,( RCSe + MUM ) ) ,MUC ) - RRSe ) )", "obj1": 0.8877952755905512, "obj2": 0.05154426113510009}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( ( ACS + MDR ) + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( RRS + ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / Max( ( RCSe + ( MUM - MLU ) ),( Min( CS ,RMSe ) - ( RCSe * RMSe ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) ) * ( ( ( ( MLU / MUR ) - ( MUM + MUC ) ) - Min( Min( MLU ,DS ) ,Max( MUR,RRSe ) ) ) - MUM ) ),MLU ) - CS )", "obj1": 0.08464566929133858, "obj2": 0.6363085861686169}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.08267716535433071, "obj2": 0.680778929061438}, {"determining": "( ( FirstVNF_Mem * Min( ( ( Min( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ,( ARS + RRS ) ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) - FirstVNF_CPU ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + ACS ) ) ) )", "choosing": "Min( ( Max( DS,RRSe ) / CS ) ,( Max( ( RRSe / ( Min( Min( MUC ,RRSe ) ,Min( ( RRSe * DS ) ,MUC ) ) / ( ( RCSe + MUM ) + ( CS - MUM ) ) ) ),DS ) + MUR ) )", "obj1": 0.3858267716535433, "obj2": 0.41428301953885693}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( Max( Const,FirstVNF_Mem ) * MRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( ( ( Max( ( RRS - PN ),Const ) + ( MRS / DDR ) ) + ( ( Const - AMS ) - ( CRS * ARS ) ) ) * CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( CS / ( MUC + ( ( MUM + RRSe ) - MUM ) ) ) / ( RRSe * RCSe ) ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( RCSe - RCSe ) )", "obj1": 0.5492125984251969, "obj2": 0.26964992807420224}, {"determining": "( Min( ( ACS + Const ) ,Const ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( ( CS * DS ),RRSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.337220004498176}, {"determining": "( ( FirstVNF_Mem * Min( ( FirstVNF_CPU - ( Min( ARS ,Const ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RCSe - CS ),( RRSe / RMSe ) ) + MUR ) )", "obj1": 0.5885826771653543, "obj2": 0.26342864011138134}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( RCSe / MUR ) * Max( RRSe,RRSe ) ),RRSe ) ) )", "obj1": 0.3484251968503937, "obj2": 0.41575336284039993}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5054589301376933}, {"determining": "Max( Max( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * ( ( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) - MUM ) ),MLU ) - CS )", "obj1": 0.2421259842519685, "obj2": 0.49591791720664624}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ( MDR - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Max( Max( ( MUR + RMSe ),MUM ),MUR ),MLU ) + ( Max( Max( Max( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ),RCSe ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.655511811023622, "obj2": 0.18584569318170902}, {"determining": "( Min( AMS ,CRS ) * Max( ( ( Max( FirstVNF_Mem,PN ) - CRS ) + PN ),( ( FirstVNF_RAM + MDR ) + MRS ) ) )", "choosing": "( ( Min( MLU ,RRSe ) - MLU ) / ( ( Min( RRSe ,MUM ) + Max( CS,DS ) ) * ( ( Max( CS,CS ) + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.559524569080776}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.281496062992126, "obj2": 0.46140197002712413}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.32101243267824536}, {"determining": "( Min( ( Const + MRS ) ,ACS ) * ( ( FirstVNF_RAM_Server * ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUC ,RMSe ) / MUM ) - ( ( DS / DS ) + Max( RRSe,RRSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.30918230065192853}, {"determining": "( ( ( MDR * DDR ) / Min( BR ,AMS ) ) * ( Const / ( Min( Max( DDR,Min( ( Min( ARS ,Const ) - BR ) ,MRS ) ) ,FirstVNF_Mem_Server ) + MDR ) ) )", "choosing": "( ( DS / ( ( ( Min( ( DS - MLU ) ,RRSe ) / DS ) - ( MUC + Min( RCSe ,( DS * RMSe ) ) ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( Max( RRSe,RRSe ) + ( DS * MLU ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5194805979949116}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + AMS ) ) + MDR ) ,( AMS + MRS ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( DS / DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.3956692913385827, "obj2": 0.394915356269755}, {"determining": "Min( ( ARS + RRS ) ,FirstVNF_CPU_Server )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( Min( Max( RMSe,MUM ) ,( CS * DS ) ) ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.6275120882329529}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ) )", "obj1": 0.5334645669291339, "obj2": 0.2784250592543692}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16881917443508057}, {"determining": "( Min( ( ACS + Const ) ,( ( DDR / Max( MRS,RRS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - Min( RMSe ,( MUR + RRSe ) ) )", "obj1": 0.4409448818897638, "obj2": 0.3228990571764717}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4311023622047244, "obj2": 0.337220004498176}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.265748031496063, "obj2": 0.46809959587473354}, {"determining": "( Min( Const ,CRS ) * Max( ( Const + PN ),PN ) )", "choosing": "( ( DS / Max( Max( RMSe,RCSe ),( MLU * ( Max( Min( MUC ,Min( CS ,DS ) ),RCSe ) + RMSe ) ) ) ) - CS )", "obj1": 0.297244094488189, "obj2": 0.45257431214474825}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( MLU * MUR ) ) )", "obj1": 0.5039370078740157, "obj2": 0.288262866348132}, {"determining": "( ACS * ( ( AMS - ACS ) / ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( Min( MLU ,MUM ) * Max( DS,DS ) ) * ( RCSe - RCSe ) ) )", "obj1": 0.484251968503937, "obj2": 0.2960191328240679}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( Min( MRS ,( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ),AMS ) ) - Max( ( ARS + RRS ),FirstVNF_CPU ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( DS / RCSe ) - Max( Min( RCSe ,CS ),( MUR - CS ) ) )", "obj1": 0.8385826771653543, "obj2": 0.07670290164669209}, {"determining": "( FirstVNF_CPU_Server * ( PN / Max( ARS,( Max( PN,Max( ( FirstVNF_CPU / ( PN + MDR ) ),FirstVNF_CPU_Server ) ) + ACS ) ) ) )", "choosing": "( Max( ( ( MLU / MUC ) / ( MUC + RRSe ) ),RCSe ) / ( ( Max( MUM,RMSe ) - MLU ) * ( ( CS / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5430265071163258}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * Max( ( Const + PN ),PN ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.5572947234284353}, {"determining": "Max( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) + MDR ) / Const ) * Min( PN ,MDR ) ) + Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ),( ( CRS / Const ) + ( ARS / ACS ) ) )", "choosing": "Min( ( Min( ( RRSe * DS ) ,MUC ) - ( MLU * CS ) ) ,( ( RRSe / MUC ) + ( RMSe + MUC ) ) )", "obj1": 0.3464566929133858, "obj2": 0.42951907018627145}, {"determining": "Max( Max( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( DS * RMSe ) * ( ( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) - MUM ) ),MLU ) - CS )", "obj1": 0.25984251968503935, "obj2": 0.4888930867365843}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.10403483301631782}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( Min( DDR ,Max( CRS,( AMS * FirstVNF_RAM_Server ) ) ) ,( Min( Min( MRS ,FirstVNF_Mem ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) + ACS ) ) ) ) * Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) - ( ( RRS - FirstVNF_Mem ) + Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( CS - CS ) ) / Min( Min( ( ( Max( Max( RMSe,DS ),RRSe ) - ( RMSe * MUR ) ) / ( RMSe + RCSe ) ) ,RRSe ) ,Min( MUC ,DS ) ) ) / ( ( ( RCSe - Max( MLU,RCSe ) ) - MUR ) + MUC ) )", "obj1": 0.8562992125984252, "obj2": 0.06614171559766434}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( Const ,CRS ) * ( ( ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + AMS ),FirstVNF_Mem_Server ) + MDR ) / Const ) + FirstVNF_Mem ) )", "choosing": "( ( MUM / Max( Max( MUC,RCSe ),( MLU * ( Max( Min( MUC ,Min( CS ,DS ) ),RCSe ) + RMSe ) ) ) ) - CS )", "obj1": 0.1968503937007874, "obj2": 0.5363231966649017}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,Const ) - FirstVNF_Mem_Server ),ACS ) / Min( ACS ,FirstVNF_CPU ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( CS,RRSe ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4812338435531668}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) ) / Min( ACS ,FirstVNF_CPU ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( CS,MUR ) ) )", "obj1": 0.7933070866141733, "obj2": 0.09590429188085238}], "10": [{"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,Const ) - FirstVNF_Mem_Server ),ACS ) / Min( ACS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( Max( MUC,Max( ( ( RRSe / MUC ) + ( MLU + MUC ) ),( DS * MUM ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - DS ) ,RRSe ) )", "obj1": 0.6377952755905512, "obj2": 0.20797959741498181}, {"determining": "( Max( AMS,Min( MRS ,( ( FirstVNF_CPU - ( ( AMS - AMS ) - FirstVNF_CPU_Server ) ) + ACS ) ) ) / ( FirstVNF_Mem * ( ACS + ( ( MRS / FirstVNF_Mem_Server ) * MDR ) ) ) )", "choosing": "Min( ( MUR / RMSe ) ,( Max( ( RRSe / ( Min( Min( MUC ,RRSe ) ,Min( ( RRSe * MLU ) ,MUC ) ) / ( ( Min( MUR ,MUC ) / MUR ) - CS ) ) ),DS ) + MUR ) )", "obj1": 0.59251968503937, "obj2": 0.250823987922674}, {"determining": "( Min( ( ACS + Const ) ,FirstVNF_Mem ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( ( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( RCSe / MUR ) * RCSe ),RRSe ) ) ),RRSe ) ) )", "obj1": 0.40551181102362205, "obj2": 0.35543369247016937}, {"determining": "( Max( Min( MDR ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_Mem * MDR ) ),PN ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,( ( RMSe * MLU ) - ( MLU + MUC ) ) ) / Min( ( ( ( RRSe / MUC ) * MUR ) / MUC ) ,( MUR - Min( DS ,RCSe ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.6080021719758995}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - CRS ) * ARS ) / Max( Max( DDR,FirstVNF_Mem ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( ( ( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ) * ( MUM + RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) )", "obj1": 0.9311023622047244, "obj2": 0.02729152839429592}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16881917443508057}, {"determining": "( Min( MRS ,( CRS + ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Min( Max( RRSe,MUM ) ,Min( RRSe ,( CS * DS ) ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.3802827323578198}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( ( ACS + MDR ) + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( RRS + ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / Max( ( RCSe + ( MUM - MLU ) ),( Min( CS ,RMSe ) - ( RCSe * RMSe ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) ) * ( ( ( ( MLU / MUR ) - ( MUM + MUC ) ) - Min( Min( MLU ,DS ) ,Max( MUR,RRSe ) ) ) - MUM ) ),MLU ) - CS )", "obj1": 0.08464566929133858, "obj2": 0.6363085861686169}, {"determining": "Min( FirstVNF_CPU_Server ,( Max( ( ( RRS + FirstVNF_CPU ) + Max( MDR,MDR ) ),FirstVNF_RAM ) - ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "( ( ( ( MUR - MUR ) - ( RRSe - RRSe ) ) - MLU ) / ( ( ( RRSe / MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( ( ( ( RMSe - MUM ) + RRSe ) * ( Min( RRSe ,CS ) - ( RMSe - RCSe ) ) ),MUM ),Min( CS ,DS ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13778085821900404}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.131949462361234}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + Min( Min( MRS ,FirstVNF_Mem ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) + MDR ) ,( AMS + MRS ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( DS / DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( Max( Max( RMSe,DS ),RRSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.3779527559055118, "obj2": 0.41470437371255436}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server + CRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( ACS - ( FirstVNF_Mem * ARS ) ) ) * ( Max( Const,MDR ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe + Max( CS,( Max( ( CS / RCSe ),MUM ) * RCSe ) ) ) + RMSe ) + ( MUM - MUR ) ) )", "obj1": 0.4271653543307087, "obj2": 0.327113733733304}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( ( FirstVNF_Mem + ARS ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MUR * MUM ) - ( Max( ( ( RCSe + ( RCSe - ( Min( MLU ,CS ) * MUR ) ) ) * RCSe ),RRSe ) + ( CS - MUM ) ) )", "obj1": 0.9094488188976378, "obj2": 0.044088580323299785}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( Max( Const,FirstVNF_Mem ) * MRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( ( ( Max( ( RRS - PN ),Const ) + ( MRS / DDR ) ) + ( ( Const - AMS ) - ( CRS * ARS ) ) ) * CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( CS / ( MUC + ( ( MUM + RRSe ) - MUM ) ) ) / ( RRSe * RCSe ) ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( RCSe - RCSe ) )", "obj1": 0.5492125984251969, "obj2": 0.26964992807420224}, {"determining": "( ( ( MDR * DDR ) / Min( BR ,AMS ) ) * ( Const / ( Min( Max( DDR,Min( ( Min( ARS ,Const ) - BR ) ,MRS ) ) ,FirstVNF_Mem_Server ) + MDR ) ) )", "choosing": "( ( DS / ( ( ( Min( ( DS - MLU ) ,RRSe ) / DS ) - ( MUC + Min( RCSe ,( DS * RMSe ) ) ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( Max( RRSe,RRSe ) + ( DS * MLU ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5194805979949116}, {"determining": "Min( ( ARS + RRS ) ,FirstVNF_CPU_Server )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( Min( Max( RMSe,MUM ) ,( CS * DS ) ) ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.6275120882329529}, {"determining": "( ( DDR * ACS ) * Min( Min( ACS ,Const ) ,( DDR + MRS ) ) )", "choosing": "( ( DS / RCSe ) - ( Min( Min( ( ( MUC * MUM ) - DS ) ,( RCSe + MUM ) ) ,MUC ) - RRSe ) )", "obj1": 0.8877952755905512, "obj2": 0.05154426113510009}, {"determining": "( ( FirstVNF_Mem * Min( ( FirstVNF_CPU - ( Min( ARS ,Const ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RCSe - CS ),( RRSe / RMSe ) ) + MUR ) )", "obj1": 0.5885826771653543, "obj2": 0.26342864011138134}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.08267716535433071, "obj2": 0.680778929061438}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( Const ,CRS ) * ( ( ( Max( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) + AMS ),FirstVNF_Mem_Server ) + MDR ) / Const ) + FirstVNF_Mem ) )", "choosing": "( ( MUM / Max( Max( MUC,RCSe ),( MLU * ( Max( Min( MUC ,Min( CS ,DS ) ),RCSe ) + RMSe ) ) ) ) - CS )", "obj1": 0.1968503937007874, "obj2": 0.5363231966649017}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3048079425109226}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ( MDR - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Max( Max( ( MUR + RMSe ),MUM ),MUR ),MLU ) + ( Max( Max( Max( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ),RCSe ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.655511811023622, "obj2": 0.18584569318170902}, {"determining": "( Min( AMS ,CRS ) * Max( ( ( Max( FirstVNF_Mem,PN ) - CRS ) + PN ),( ( FirstVNF_RAM + MDR ) + MRS ) ) )", "choosing": "( ( Min( MLU ,RRSe ) - MLU ) / ( ( Min( RRSe ,MUM ) + Max( CS,DS ) ) * ( ( Max( CS,CS ) + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.559524569080776}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.04921259842519685, "obj2": 0.6903206347284131}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Max( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + AMS ),FirstVNF_Mem_Server ) + MDR ) / Const ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( RCSe / MUR ) * RCSe ),RRSe ) ) )", "obj1": 0.33267716535433073, "obj2": 0.4403968755591813}, {"determining": "( ACS * ( ( AMS - ACS ) / ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( Min( MLU ,MUM ) * Max( DS,DS ) ) * ( RCSe - RCSe ) ) )", "obj1": 0.484251968503937, "obj2": 0.2960191328240679}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( RCSe / MUR ) * Max( RRSe,RRSe ) ),RRSe ) ) )", "obj1": 0.3484251968503937, "obj2": 0.41575336284039993}, {"determining": "( Min( Const ,CRS ) * Max( ( Const + Const ),PN ) )", "choosing": "( ( DS / Max( Max( Max( ( RCSe - CS ),( RRSe / RMSe ) ),RCSe ),( MLU * ( Max( Min( MUC ,Min( CS ,DS ) ),RCSe ) + RMSe ) ) ) ) - CS )", "obj1": 0.33858267716535434, "obj2": 0.4226191893344752}, {"determining": "( Min( ( Const + PN ) ,Max( ( Max( ACS,( Min( FirstVNF_RAM_Server ,MDR ) - FirstVNF_Mem_Server ) ) / Min( ACS ,FirstVNF_CPU ) ),( MDR / FirstVNF_RAM ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( CS - ( RMSe - RCSe ) ) - ( ( DS * MUR ) / RMSe ) ) / RRSe ) ) ) - ( Min( ( Max( Max( RMSe,RCSe ),MUM ) - MUR ) ,MUR ) - Min( MUM ,RMSe ) ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) )", "obj1": 0.07480314960629922, "obj2": 0.6873724092923073}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5054589301376933}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ( MDR - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( Max( Max( ( MUR + RMSe ),MUM ),MUR ),MLU ) + ( Max( Max( Max( ( Min( Min( MUC ,RRSe ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ),RCSe ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.18475765658231066}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.265748031496063, "obj2": 0.46809959587473354}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,Const ) - FirstVNF_Mem_Server ),ACS ) / Min( ACS ,FirstVNF_CPU ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( CS,RRSe ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4812338435531668}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( MLU * MUR ) ) )", "obj1": 0.5039370078740157, "obj2": 0.288262866348132}, {"determining": "( Min( Const ,Max( ( Max( ACS,( Min( FirstVNF_RAM_Server ,MDR ) - FirstVNF_Mem_Server ) ) / Min( ACS ,FirstVNF_CPU ) ),( MDR / FirstVNF_RAM ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),( DS * MUR ) ) - CS ) - ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.8641732283464567, "obj2": 0.06222906486036656}, {"determining": "( FirstVNF_CPU_Server * ( PN / Max( ARS,( Max( PN,Max( ( FirstVNF_CPU / ( PN + MDR ) ),FirstVNF_CPU_Server ) ) + ACS ) ) ) )", "choosing": "( Max( ( ( MLU / MUC ) / ( MUC + RRSe ) ),RCSe ) / ( ( Max( MUM,RMSe ) - MLU ) * ( ( CS / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5430265071163258}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ) )", "obj1": 0.5334645669291339, "obj2": 0.2784250592543692}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * Max( ( Const + PN ),PN ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - MUC ) ) )", "obj1": 0.1830708661417323, "obj2": 0.5572947234284353}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ) )", "obj1": 0.45866141732283466, "obj2": 0.3193255124221046}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.24803149606299213, "obj2": 0.48741405878575506}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.11340343774680293}, {"determining": "( Min( Const ,CRS ) * Max( ( Const + ( MRS / DDR ) ),PN ) )", "choosing": "( ( DS / Max( Max( RMSe,RCSe ),( MLU * ( Max( Min( MUC ,Min( CS ,DS ) ),RCSe ) + RRSe ) ) ) ) - CS )", "obj1": 0.31496062992125984, "obj2": 0.4436216565189142}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.11340343774680293}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( RCSe / MUR ) * RCSe ),RRSe ) ) )", "obj1": 0.8543307086614174, "obj2": 0.07135330238712789}], "11": [{"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - ( ARS + ACS ) ) ,RRS )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,Const ) - FirstVNF_Mem_Server ),ACS ) / Min( ACS ,FirstVNF_CPU ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "Min( Max( BR,FirstVNF_Mem_Server ) ,Max( ( ( FirstVNF_Mem / BR ) - MDR ),FirstVNF_Mem ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( CS,DS ) ) * ( ( CS + RCSe ) - ( MLU / MUC ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18549448893465592}, {"determining": "( Max( AMS,Min( MRS ,( ( FirstVNF_CPU - ( ( AMS - AMS ) - FirstVNF_CPU_Server ) ) + ACS ) ) ) / ( FirstVNF_Mem * ( ACS + ( ( MRS / FirstVNF_Mem_Server ) * MDR ) ) ) )", "choosing": "Min( ( MUR / RMSe ) ,( Max( ( RRSe / ( Min( Min( MUC ,RRSe ) ,Min( ( RRSe * MLU ) ,MUC ) ) / ( ( Min( MUR ,MUC ) / MUR ) - CS ) ) ),DS ) + MUR ) )", "obj1": 0.59251968503937, "obj2": 0.250823987922674}, {"determining": "( Max( Min( MDR ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_Mem * MDR ) ),PN ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,( ( RMSe * MLU ) - ( MLU + MUC ) ) ) / Min( ( ( ( RRSe / MUC ) * MUR ) / MUC ) ,( MUR - Min( DS ,RCSe ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.6080021719758995}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( DS / RCSe ) * RMSe ) ) - MUM ) - DS )", "obj1": 0.39763779527559057, "obj2": 0.3514188307266109}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - CRS ) * ARS ) / Max( Max( DDR,FirstVNF_Mem ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( ( ( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ) * ( MUM + RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) )", "obj1": 0.9311023622047244, "obj2": 0.02729152839429592}, {"determining": "( Min( MRS ,( CRS + ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Min( Max( RRSe,MUM ) ,Min( RRSe ,( CS * DS ) ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.3802827323578198}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server + CRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( ACS - ( FirstVNF_Mem * ARS ) ) ) * ( Max( Const,MDR ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe + Max( CS,( Max( ( CS / RCSe ),MUM ) * RCSe ) ) ) + RMSe ) + ( MUM - MUR ) ) )", "obj1": 0.4271653543307087, "obj2": 0.327113733733304}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + Max( RRS,BR ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( Max( RRSe,RRSe ),RRSe ) ) )", "obj1": 0.3090551181102362, "obj2": 0.44217252189365724}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16881917443508057}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.265748031496063, "obj2": 0.46809959587473354}, {"determining": "Min( FirstVNF_CPU_Server ,( Max( ( ( RRS + FirstVNF_CPU ) + Max( MDR,MDR ) ),FirstVNF_RAM ) - ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "( ( ( ( MUR - MUR ) - ( RRSe - RRSe ) ) - MLU ) / ( ( ( RRSe / MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( ( ( ( RMSe - MUM ) + RRSe ) * ( Min( RRSe ,CS ) - ( RMSe - RCSe ) ) ),MUM ),Min( CS ,DS ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13778085821900404}, {"determining": "( ( ARS + AMS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( MLU + RCSe ) + Min( MUR ,MLU ) ),MLU ) / RCSe ) - ( ( CS - MUM ) + Max( ( ( RCSe - RRSe ) / ( MUC / MUM ) ),RRSe ) ) )", "obj1": 0.8070866141732284, "obj2": 0.0909677570213952}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.05511811023622047, "obj2": 0.6857554050878977}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.0688976377952756, "obj2": 0.6409073738879505}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,( BR + Min( Min( MRS ,FirstVNF_Mem ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) + MDR ) ,( AMS + MRS ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( DS / DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( Max( Max( RMSe,DS ),RRSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.3779527559055118, "obj2": 0.41470437371255436}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( ( MUR + RMSe ),MUM ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.17971996204838037}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ) )", "obj1": 0.45866141732283466, "obj2": 0.3193255124221046}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( ( FirstVNF_Mem + ARS ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MUR * MUM ) - ( Max( ( ( RCSe + ( RCSe - ( Min( MLU ,CS ) * MUR ) ) ) * RCSe ),RRSe ) + ( CS - MUM ) ) )", "obj1": 0.9094488188976378, "obj2": 0.044088580323299785}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( Max( Const,FirstVNF_Mem ) * MRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( ( ( Max( ( RRS - PN ),Const ) + ( MRS / DDR ) ) + ( ( Const - AMS ) - ( CRS * ARS ) ) ) * CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( CS / ( MUC + ( ( MUM + RRSe ) - MUM ) ) ) / ( RRSe * RCSe ) ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( RCSe - RCSe ) )", "obj1": 0.5492125984251969, "obj2": 0.26964992807420224}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ACS ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( DS / Max( ( CS * DS ),RRSe ) ) * RCSe ),RRSe ) ) )", "obj1": 0.84251968503937, "obj2": 0.07455520444289716}, {"determining": "( ( FirstVNF_Mem * Min( ( FirstVNF_CPU - ( Min( ARS ,Const ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) ) ,FirstVNF_RAM ) ) / Max( AMS,Min( MRS ,( CRS + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Max( ( RCSe - CS ),( RRSe / RMSe ) ) + MUR ) )", "obj1": 0.5885826771653543, "obj2": 0.26342864011138134}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.24803149606299213, "obj2": 0.48741405878575506}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.3048079425109226}, {"determining": "( ( ( MDR * DDR ) * Min( BR ,AMS ) ) * ( ( Max( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) + AMS ),FirstVNF_Mem_Server ) + MDR ) / Const ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( RCSe / MUR ) * RCSe ),RRSe ) ) )", "obj1": 0.33267716535433073, "obj2": 0.4403968755591813}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.11340343774680293}, {"determining": "( ACS * ( ( AMS - ACS ) / ( MRS + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( ( Min( MLU ,MUM ) * Max( DS,DS ) ) * ( RCSe - RCSe ) ) )", "obj1": 0.484251968503937, "obj2": 0.2960191328240679}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( RCSe / MUR ) * Max( RRSe,RRSe ) ),RRSe ) ) )", "obj1": 0.3484251968503937, "obj2": 0.41575336284039993}, {"determining": "( Min( Const ,CRS ) * Max( ( Const + Const ),PN ) )", "choosing": "( ( DS / Max( Max( Max( ( RCSe - CS ),( RRSe / RMSe ) ),RCSe ),( MLU * ( Max( Min( MUC ,Min( CS ,DS ) ),RCSe ) + RMSe ) ) ) ) - CS )", "obj1": 0.33858267716535434, "obj2": 0.4226191893344752}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( MLU * MUR ) ) )", "obj1": 0.5039370078740157, "obj2": 0.288262866348132}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - ( ( MDR * DDR ) * Min( BR ,AMS ) ) ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,RRSe ),RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.11340343774680293}, {"determining": "Max( Max( ( ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) ),CRS ),( FirstVNF_CPU - DDR ) )", "choosing": "( Max( ( ( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) ) * ( ( ( ( MLU / DS ) - ( MUM + MUC ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) - MUM ) ),MLU ) - CS )", "obj1": 0.09448818897637795, "obj2": 0.6230389520307367}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Min( ( Min( ARS ,ARS ) - BR ) ,MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - AMS ) - ( CRS * ARS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( ( MUM + ( ( MUM + RRSe ) - MUM ) ) / CS ) / ( RRSe * RCSe ) ) ) - ( DS - MLU ) ) / Max( RMSe,RCSe ) )", "obj1": 0.23622047244094488, "obj2": 0.5034484163422699}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( MDR + Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( RMSe / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.131949462361234}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,Const ) - FirstVNF_Mem_Server ),ACS ) / Min( ACS ,FirstVNF_CPU ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( CS,RRSe ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4812338435531668}, {"determining": "( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) * ( ( MDR + RRS ) + ( MRS / DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( MUR + Max( ( MUC / Max( MLU,MLU ) ),MUC ) ) + CS ),( MUM * RRSe ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5053084293377942}, {"determining": "( Min( AMS ,CRS ) * Max( ( ( Max( FirstVNF_Mem,PN ) - CRS ) + PN ),( ( FirstVNF_RAM + MDR ) + MRS ) ) )", "choosing": "( ( Min( MLU ,RRSe ) - MLU ) / ( ( Min( RRSe ,MUM ) + Max( CS,DS ) ) * ( ( Max( CS,CS ) + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.559524569080776}, {"determining": "( FirstVNF_CPU_Server * ( PN / Max( ARS,( Max( PN,Max( ( FirstVNF_CPU / ( PN + MDR ) ),FirstVNF_CPU_Server ) ) + ACS ) ) ) )", "choosing": "( Max( ( ( MLU / MUC ) / ( MUC + RRSe ) ),RCSe ) / ( ( Max( MUM,RMSe ) - MLU ) * ( ( CS / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5430265071163258}, {"determining": "( ( DDR * ACS ) * Min( Min( ACS ,Const ) ,( DDR + MRS ) ) )", "choosing": "( ( DS / RCSe ) - ( Min( Min( ( ( MUC * MUM ) - DS ) ,( RCSe + MUM ) ) ,MUC ) - RRSe ) )", "obj1": 0.8877952755905512, "obj2": 0.05154426113510009}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ACS ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7834645669291339, "obj2": 0.1021826750013418}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.131949462361234}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( ( Const + PN ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) - ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.10152387021757477}, {"determining": "( ( ( MDR * DDR ) / Min( BR ,AMS ) ) * ( Const / ( Min( Max( DDR,Min( ( Min( ARS ,Const ) - BR ) ,MRS ) ) ,FirstVNF_Mem_Server ) + MDR ) ) )", "choosing": "( ( DS / ( ( ( Min( ( DS - MLU ) ,RRSe ) / DS ) - ( MUC + Min( RCSe ,( DS * RMSe ) ) ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( Max( RRSe,RRSe ) + ( DS * MLU ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5194805979949116}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( ( ACS + MDR ) + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( RRS + ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / Max( ( RCSe + ( MUM - MLU ) ),( Min( CS ,RMSe ) - ( RCSe * RMSe ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) ) * ( ( ( ( MLU / MUR ) - ( MUM + MUC ) ) - Min( Min( MLU ,DS ) ,Max( MUR,RRSe ) ) ) - MUM ) ),MLU ) - CS )", "obj1": 0.08464566929133858, "obj2": 0.6363085861686169}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ) )", "obj1": 0.5334645669291339, "obj2": 0.2784250592543692}], "12": [{"determining": "Min( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( AMS * ARS ) ) - Max( ( ARS + RRS ),MRS ) ) ,Min( FirstVNF_RAM_Server ,( ARS + ( MRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU - ( ( RMSe - MUR ) - Min( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ,RMSe ) ) ) / ( ( DS * ( Max( ( Max( RRSe,CS ) * RMSe ),MUM ) + ( MUC / ( MUR + ( CS + RCSe ) ) ) ) ) + ( MUM + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - ( ARS + ACS ) ) ,RRS )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( Max( AMS,Min( MRS ,( ( FirstVNF_CPU - ( ( AMS - AMS ) - FirstVNF_CPU_Server ) ) + ACS ) ) ) / ( FirstVNF_Mem * ( ACS + ( ( MRS / FirstVNF_Mem_Server ) * MDR ) ) ) )", "choosing": "Min( ( MUR / RMSe ) ,( Max( ( RRSe / ( Min( Min( MUC ,RRSe ) ,Min( ( RRSe * MLU ) ,MUC ) ) / ( ( Min( MUR ,MUC ) / MUR ) - CS ) ) ),DS ) + MUR ) )", "obj1": 0.59251968503937, "obj2": 0.250823987922674}, {"determining": "Min( Max( BR,FirstVNF_Mem_Server ) ,Max( ( ( FirstVNF_Mem / BR ) - MDR ),FirstVNF_Mem ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( CS,DS ) ) * ( ( CS + RCSe ) - ( MLU / MUC ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18549448893465592}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( Min( PN ,FirstVNF_CPU_Server ) * BR ) ) ) * ( ( ARS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( Min( RCSe ,Max( ( RCSe * Max( RCSe,MUR ) ),RMSe ) ) - ( RMSe - RCSe ) ) ) - Max( MUC,DS ) ) - CS )", "obj1": 0.3248031496062992, "obj2": 0.4097593079015259}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.3682389927129635}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( DS / RCSe ) * RMSe ) ) - MUM ) - DS )", "obj1": 0.39763779527559057, "obj2": 0.3514188307266109}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16881917443508057}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server + CRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( ACS - ( FirstVNF_Mem * ARS ) ) ) * ( Max( Const,MDR ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe + Max( CS,( Max( ( CS / RCSe ),MUM ) * RCSe ) ) ) + RMSe ) + ( MUM - MUR ) ) )", "obj1": 0.4271653543307087, "obj2": 0.327113733733304}, {"determining": "( Max( Min( MDR ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_Mem * MDR ) ),PN ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,( ( RMSe * MLU ) - ( MLU + MUC ) ) ) / Min( ( ( ( RRSe / MUC ) * MUR ) / MUC ) ,( MUR - Min( DS ,RCSe ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.6080021719758995}, {"determining": "Min( FirstVNF_CPU_Server ,( Max( ( ( RRS + FirstVNF_CPU ) + Max( MDR,MDR ) ),FirstVNF_RAM ) - ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "( ( ( ( MUR - MUR ) - ( RRSe - RRSe ) ) - MLU ) / ( ( ( RRSe / MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( ( ( ( RMSe - MUM ) + RRSe ) * ( Min( RRSe ,CS ) - ( RMSe - RCSe ) ) ),MUM ),Min( CS ,DS ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13778085821900404}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.0688976377952756, "obj2": 0.6409073738879505}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.05511811023622047, "obj2": 0.6857554050878977}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( ( MUR + RMSe ),MUM ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.65748031496063, "obj2": 0.17967247042783968}, {"determining": "( Min( AMS ,CRS ) * Max( ( ( Max( FirstVNF_Mem,PN ) - CRS ) + PN ),( ( FirstVNF_RAM + MDR ) + MRS ) ) )", "choosing": "( ( Min( MLU ,RRSe ) - MLU ) / ( ( Min( RRSe ,MUM ) + Max( CS,DS ) ) * ( ( Max( CS,CS ) + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.559524569080776}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( ( FirstVNF_Mem + ARS ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MUR * MUM ) - ( Max( ( ( RCSe + ( RCSe - ( Min( MLU ,CS ) * MUR ) ) ) * RCSe ),RRSe ) + ( CS - MUM ) ) )", "obj1": 0.9094488188976378, "obj2": 0.044088580323299785}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( MLU * MUR ) ) )", "obj1": 0.5039370078740157, "obj2": 0.288262866348132}, {"determining": "( Min( ( AMS * BR ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( AMS - ACS ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( AMS - ACS ) / ( FirstVNF_Mem + RRS ) ) ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( Max( ( Min( MUR ,MLU ) + ( MLU + MUC ) ),MLU ) + ( ( DS / MLU ) * ( ( MUR + DS ) / MUR ) ) ) + DS ) ) - MUM ) - CS )", "obj1": 0.28937007874015747, "obj2": 0.4587563481043243}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ) )", "obj1": 0.5334645669291339, "obj2": 0.2784250592543692}, {"determining": "( ( ( MDR * DDR ) / Min( BR ,AMS ) ) * ( Const / ( Min( Max( DDR,Min( ( Min( ARS ,Const ) - BR ) ,MRS ) ) ,FirstVNF_Mem_Server ) + MDR ) ) )", "choosing": "( ( DS / ( ( ( Min( ( DS - MLU ) ,RRSe ) / DS ) - ( MUC + Min( RCSe ,( DS * RMSe ) ) ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( Max( RRSe,RRSe ) + ( DS * MLU ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5194805979949116}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( Min( ARS ,Const ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) ) ) ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( ( MUR + ( Max( ( RCSe - CS ),( RRSe / RMSe ) ) + MUR ) ),MUM ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.5551181102362205, "obj2": 0.26243410884911894}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( ( Min( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.9330708661417323, "obj2": 0.024771187650661605}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ) )", "obj1": 0.45866141732283466, "obj2": 0.3193255124221046}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( FirstVNF_CPU_Server * ( PN / Max( ARS,( Max( PN,Max( ( FirstVNF_CPU / ( PN + MDR ) ),FirstVNF_CPU_Server ) ) + ACS ) ) ) )", "choosing": "( Max( ( ( MLU / MUC ) / ( MUC + RRSe ) ),RCSe ) / ( ( Max( MUM,RMSe ) - MLU ) * ( ( CS / CS ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5430265071163258}, {"determining": "( Min( ( FirstVNF_Mem_Server + ( Const - ( ( Min( RRS ,Max( Const,AMS ) ) - MRS ) / FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_RAM_Server - ACS ) / ( FirstVNF_Mem + ACS ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( CS + ( Min( CS ,( Max( ( DS - RMSe ),MLU ) + DS ) ) + RRSe ) ) * ( ( RCSe + RMSe ) - Max( Max( MLU,MLU ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.11342634488350317}, {"determining": "( Min( ( Min( FirstVNF_CPU ,BR ) / Max( Const,FirstVNF_RAM_Server ) ) ,CRS ) * Max( ( Const + ( PN * DDR ) ),PN ) )", "choosing": "( ( DS + ( Max( CS,CS ) + ( ( RCSe - ( MUM - Min( ( RMSe + RRSe ) ,MUC ) ) ) + ( ( MLU * CS ) + ( ( MUR / CS ) + ( ( RMSe + RCSe ) - DS ) ) ) ) ) ) - CS )", "obj1": 0.31299212598425197, "obj2": 0.4354310134522113}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( FirstVNF_RAM + ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.5428677637807712}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.24803149606299213, "obj2": 0.48741405878575506}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.265748031496063, "obj2": 0.46809959587473354}, {"determining": "( Min( ( ACS + Const ) ,( DDR + MRS ) ) * ( ( ( ( FirstVNF_Mem / BR ) - Max( ( ( FirstVNF_CPU + RRS ) - ACS ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) + FirstVNF_Mem ) / ( AMS - ( ARS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( RCSe,RMSe ) )", "obj1": 0.8307086614173228, "obj2": 0.08031884554345148}, {"determining": "( ( DDR * ACS ) * Min( Min( ACS ,Const ) ,( DDR + MRS ) ) )", "choosing": "( ( DS / RCSe ) - ( Min( Min( ( ( MUC * MUM ) - DS ) ,( RCSe + MUM ) ) ,MUC ) - RRSe ) )", "obj1": 0.8877952755905512, "obj2": 0.05154426113510009}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - CRS ) * ARS ) / Max( Max( DDR,FirstVNF_Mem ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( ( ( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ) * ( MUM + RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) )", "obj1": 0.9311023622047244, "obj2": 0.02729152839429592}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Min( ( Min( ARS ,ARS ) - BR ) ,MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - AMS ) - ( CRS * ARS ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( ( MUM + ( ( MUM + RRSe ) - MUM ) ) / CS ) / ( RRSe * RCSe ) ) ) - ( DS - MLU ) ) / Max( RMSe,RCSe ) )", "obj1": 0.23622047244094488, "obj2": 0.5034484163422699}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,Const ) - FirstVNF_Mem_Server ),ACS ) / Min( ACS ,FirstVNF_CPU ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( CS,RRSe ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4812338435531668}, {"determining": "( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) * ( ( MDR + RRS ) + ( MRS / DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( MUR + Max( ( MUC / Max( MLU,MLU ) ),MUC ) ) + CS ),( MUM * RRSe ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5053084293377942}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( Max( Const,FirstVNF_Mem ) * MRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( ( ( Max( ( RRS - PN ),Const ) + ( MRS / DDR ) ) + ( ( Const - AMS ) - ( CRS * ARS ) ) ) * CRS ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) * ( ( CS / ( MUC + ( ( MUM + RRSe ) - MUM ) ) ) / ( RRSe * RCSe ) ) ) - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( RCSe - RCSe ) )", "obj1": 0.5492125984251969, "obj2": 0.26964992807420224}, {"determining": "( Max( AMS,Min( MRS ,( CRS + ACS ) ) ) / ( FirstVNF_Mem * ( ( ( MRS / CRS ) * MDR ) + ACS ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( CS,RRSe ) ) )", "obj1": 0.30708661417322836, "obj2": 0.44487956604227236}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ACS ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( DS / Max( ( CS * DS ),RRSe ) ) * RCSe ),RRSe ) ) )", "obj1": 0.8779527559055118, "obj2": 0.057650336738774496}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( ( ACS + MDR ) + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( RRS + ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / Max( ( RCSe + ( MUM - MLU ) ),( Min( CS ,RMSe ) - ( RCSe * RMSe ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) ) * ( ( ( ( MLU / MUR ) - ( MUM + MUC ) ) - Min( Min( MLU ,DS ) ,Max( MUR,RRSe ) ) ) - MUM ) ),MLU ) - CS )", "obj1": 0.08464566929133858, "obj2": 0.6363085861686169}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.10466462410865417}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ACS ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( DS / Max( ( CS * DS ),RRSe ) ) * RCSe ),RRSe ) ) )", "obj1": 0.84251968503937, "obj2": 0.07455520444289716}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( ( MRS / DDR ) - ( ( MDR * DDR ) * Min( BR ,AMS ) ) ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * Min( MUM ,RCSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,RRSe ),RMSe ) ) ) )", "obj1": 0.8622047244094488, "obj2": 0.06345486954066762}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.468503937007874, "obj2": 0.3086133026268163}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.04921259842519685, "obj2": 0.6957231557799949}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ACS ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.08947770107864976}], "13": [{"determining": "Min( Min( ( FirstVNF_CPU_Server * ( RRS + FirstVNF_RAM ) ) ,Max( Min( ARS ,RRS ),MRS ) ) ,( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( AMS + ACS ) ) ) )", "choosing": "( ( DS * MLU ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( MLU,DS ) ) * ( ( CS + RCSe ) - ( MUC / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( AMS * ARS ) ) - Max( ( ARS + RRS ),MRS ) ) ,Min( FirstVNF_RAM_Server ,( ARS + ( MRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MLU - ( ( RMSe - MUR ) - Min( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ,RMSe ) ) ) / ( ( DS * ( Max( ( Max( RRSe,CS ) * RMSe ),MUM ) + ( MUC / ( MUR + ( CS + RCSe ) ) ) ) ) + ( MUM + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( Min( ARS ,Const ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) ) ) ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( ( MUR + ( Max( ( RCSe - CS ),( RRSe / RMSe ) ) + MUR ) ),MUM ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.23376472623291256}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( Min( PN ,FirstVNF_CPU_Server ) * BR ) ) ) * ( ( ARS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( Min( RCSe ,Max( ( RCSe * Max( RCSe,MUR ) ),RMSe ) ) - ( RMSe - RCSe ) ) ) - Max( MUC,DS ) ) - CS )", "obj1": 0.3248031496062992, "obj2": 0.4097593079015259}, {"determining": "( Max( Min( MDR ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_Mem * MDR ) ),PN ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,( ( RMSe * MLU ) - ( MLU + MUC ) ) ) / Min( ( ( ( RRSe / MUC ) * MUR ) / MUC ) ,( MUR - Min( DS ,RCSe ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.6080021719758995}, {"determining": "Min( Max( BR,FirstVNF_Mem_Server ) ,Max( ( ( FirstVNF_Mem / BR ) - MDR ),FirstVNF_Mem ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( CS,DS ) ) * ( ( CS + RCSe ) - ( MLU / MUC ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18549448893465592}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.3682389927129635}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( DS / RCSe ) * RMSe ) ) - MUM ) - DS )", "obj1": 0.39763779527559057, "obj2": 0.3514188307266109}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16881917443508057}, {"determining": "Min( FirstVNF_CPU_Server ,( Max( ( ( RRS + FirstVNF_CPU ) + Max( MDR,MDR ) ),FirstVNF_RAM ) - ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "( ( ( ( MUR - MUR ) - ( RRSe - RRSe ) ) - MLU ) / ( ( ( RRSe / MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( ( ( ( RMSe - MUM ) + RRSe ) * ( Min( RRSe ,CS ) - ( RMSe - RCSe ) ) ),MUM ),Min( CS ,DS ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13778085821900404}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.0688976377952756, "obj2": 0.6409073738879505}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server + CRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( ACS - ( FirstVNF_Mem * ARS ) ) ) * ( Max( Const,MDR ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe + Max( CS,( Max( ( CS / RCSe ),MUM ) * RCSe ) ) ) + RMSe ) + ( MUM - MUR ) ) )", "obj1": 0.4271653543307087, "obj2": 0.327113733733304}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( ( ACS + MDR ) + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( RRS + ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / Max( ( RCSe + ( MUM - MLU ) ),( Min( CS ,RMSe ) - ( RCSe * RMSe ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) ) * ( ( ( ( MLU / MUR ) - ( MUM + MUC ) ) - Min( Min( MLU ,DS ) ,Max( MUR,RRSe ) ) ) - MUM ) ),MLU ) - CS )", "obj1": 0.08464566929133858, "obj2": 0.6363085861686169}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.05511811023622047, "obj2": 0.6857554050878977}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( ( ( MDR * DDR ) / Min( BR ,AMS ) ) * ( Const / ( Min( Max( DDR,Min( ( Min( ARS ,Const ) - BR ) ,MRS ) ) ,FirstVNF_Mem_Server ) + MDR ) ) )", "choosing": "( ( DS / ( ( ( Min( ( DS - MLU ) ,RRSe ) / DS ) - ( MUC + Min( RCSe ,( DS * RMSe ) ) ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( Max( RRSe,RRSe ) + ( DS * MLU ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5194805979949116}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.10466462410865417}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( ( Min( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.9330708661417323, "obj2": 0.024771187650661605}, {"determining": "( Min( AMS ,CRS ) * Max( ( ( Max( FirstVNF_Mem,PN ) - CRS ) + PN ),( ( FirstVNF_RAM + MDR ) + MRS ) ) )", "choosing": "( ( Min( MLU ,RRSe ) - MLU ) / ( ( Min( RRSe ,MUM ) + Max( CS,DS ) ) * ( ( Max( CS,CS ) + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.559524569080776}, {"determining": "( Min( ( Min( FirstVNF_CPU ,BR ) / Max( Const,FirstVNF_RAM_Server ) ) ,CRS ) * Max( ( Const + ( PN * DDR ) ),PN ) )", "choosing": "( ( DS + ( Max( CS,CS ) + ( ( RCSe - ( MUM - Min( ( RMSe + RRSe ) ,MUC ) ) ) + ( ( MLU * CS ) + ( ( MUR / CS ) + ( ( RMSe + RCSe ) - DS ) ) ) ) ) ) - CS )", "obj1": 0.31299212598425197, "obj2": 0.4354310134522113}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( MLU * MUR ) ) )", "obj1": 0.562992125984252, "obj2": 0.2600844086453663}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.468503937007874, "obj2": 0.3086133026268163}, {"determining": "( Min( ( FirstVNF_Mem_Server + ( Const - ( ( Min( RRS ,Max( Const,AMS ) ) - MRS ) / FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_RAM_Server - ACS ) / ( FirstVNF_Mem + ACS ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( CS + ( Min( CS ,( Max( ( DS - RMSe ),MLU ) + DS ) ) + RRSe ) ) * ( ( RCSe + RMSe ) - Max( Max( MLU,MLU ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.11342634488350317}, {"determining": "Max( Max( ( ( Min( MRS ,Max( ACS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( FirstVNF_RAM + ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * RRSe ) )", "obj1": 0.19488188976377951, "obj2": 0.5379385513905189}, {"determining": "( Min( ( AMS * BR ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( AMS - ACS ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( AMS - ACS ) / ( FirstVNF_Mem + RRS ) ) ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( Max( ( Min( MUR ,MLU ) + ( MLU + MUC ) ),MLU ) + ( ( DS / MLU ) * ( ( MUR + DS ) / MUR ) ) ) + DS ) ) - MUM ) - CS )", "obj1": 0.28937007874015747, "obj2": 0.4587563481043243}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.265748031496063, "obj2": 0.46809959587473354}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( ( FirstVNF_Mem + ARS ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MUR * MUM ) - ( Max( ( ( RCSe + ( RCSe - ( Min( MLU ,CS ) * MUR ) ) ) * RCSe ),RRSe ) + ( CS - MUM ) ) )", "obj1": 0.9094488188976378, "obj2": 0.044088580323299785}, {"determining": "( Min( ( ACS + Const ) ,( DDR + MRS ) ) * ( ( ( ( FirstVNF_Mem / BR ) - Max( ( ( FirstVNF_CPU + RRS ) - ACS ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) + FirstVNF_Mem ) / ( AMS - ( ARS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( RCSe,RMSe ) )", "obj1": 0.8307086614173228, "obj2": 0.08031884554345148}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + ( ACS / MRS ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / Min( ACS ,( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) ) ) * ( Max( MDR,Const ) + ( FirstVNF_Mem / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,MUR ) ) )", "obj1": 0.49015748031496065, "obj2": 0.2968683546472626}, {"determining": "( ( DDR * ACS ) * Min( Min( ACS ,Const ) ,( DDR + MRS ) ) )", "choosing": "( ( DS / RCSe ) - ( Min( Min( ( ( MUC * MUM ) - DS ) ,( RCSe + MUM ) ) ,MUC ) - RRSe ) )", "obj1": 0.8877952755905512, "obj2": 0.05154426113510009}, {"determining": "( ( ( FirstVNF_Mem_Server - BR ) / MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( ( MRS / DDR ) - ( ( MDR * DDR ) * Min( BR ,AMS ) ) ) - ( ( MDR * Max( FirstVNF_Mem_Server,( MDR - BR ) ) ) * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Min( MUC ,( MUR / MUC ) ) * ( ( RMSe + RCSe ) - Max( Max( MUM,RRSe ),RMSe ) ) ) )", "obj1": 0.8051181102362205, "obj2": 0.09289554664900337}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( ( MUR + RMSe ),MUM ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.65748031496063, "obj2": 0.17967247042783968}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,Const ) - FirstVNF_Mem_Server ),ACS ) / Min( ACS ,FirstVNF_CPU ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( CS,RRSe ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4812338435531668}, {"determining": "( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) * ( ( MDR + RRS ) + ( MRS / DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( MUR + Max( ( MUC / Max( MLU,MLU ) ),MUC ) ) + CS ),( MUM * RRSe ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5053084293377942}, {"determining": "( Max( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ),( ( Min( ARS ,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM,DDR ) * BR ) ) + MRS ) ) * ( ( AMS - ACS ) / ( Min( BR ,AMS ) + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + Min( MLU ,Max( ( MLU * CS ),( Min( RMSe ,( RRSe - RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.27860429585863045}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( FirstVNF_RAM + ( Min( Const ,( Max( CRS,ACS ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5486352599670976}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3234610177099089}, {"determining": "( ( Max( MDR,Const ) + Max( Min( ( Const + ( Max( FirstVNF_Mem_Server,( MRS + FirstVNF_RAM ) ) - ( FirstVNF_RAM + ACS ) ) ) ,RRS ),MRS ) ) * ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + ( ACS / MRS ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) / Min( ACS ,FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( ( Max( CS,RCSe ) + Max( Min( Max( Max( ( RMSe * RRSe ),MLU ),RRSe ) ,( MUR - MLU ) ),MLU ) ) + Max( MUC,MUR ) ) )", "obj1": 0.5492125984251969, "obj2": 0.26779816741166407}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( MLU * MUR ) ) )", "obj1": 0.5039370078740157, "obj2": 0.288262866348132}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) * ( DDR * Max( ( Max( RRS,Min( ( BR / BR ) ,( Const * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) + MDR ),( Max( MRS,CRS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - ( ( CS + RMSe ) * ( MLU - Max( ( ( CS + CS ) + ( RRSe - DS ) ),Max( ( CS / RCSe ),RRSe ) ) ) ) ) + Max( ( ( RMSe + MUM ) + RCSe ),RRSe ) ) )", "obj1": 0.3051181102362205, "obj2": 0.4537835896551423}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ACS ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.08947770107864976}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ( ACS / FirstVNF_RAM ) + RRS ),MRS ) ) ,( ( AMS - ACS ) + ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( ( MUR + RMSe ),CS ),MUR ),MLU ) + ( Max( Max( ( ( Min( Min( DS ,MLU ) ,RRSe ) * MUR ) + MUR ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.17961008081587015}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,FirstVNF_RAM_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ) )", "obj1": 0.45866141732283466, "obj2": 0.3193255124221046}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5001371249701048}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( Min( RRS ,MRS ) + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( ARS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( DS + ( ( RCSe / MUC ) - ( RMSe * RMSe ) ) ) ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.11301984132757804}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( CS,DS ) ) * ( ( CS + RCSe ) - ( MLU / MUC ) ) ) )", "obj1": 0.9232283464566929, "obj2": 0.03633289609196497}], "14": [{"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server * ( RRS + FirstVNF_RAM ) ) ,Max( Min( ARS ,RRS ),MRS ) ) ,( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( AMS + ACS ) ) ) )", "choosing": "( ( DS * MLU ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( MLU,DS ) ) * ( ( CS + RCSe ) - ( MUC / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( Min( ARS ,Const ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) ) ) ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( ( MUR + ( Max( ( RCSe - CS ),( RRSe / RMSe ) ) + MUR ) ),MUM ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.23376472623291256}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( Min( PN ,FirstVNF_CPU_Server ) * BR ) ) ) * ( ( ARS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( Min( RCSe ,Max( ( RCSe * Max( RCSe,MUR ) ),RMSe ) ) - ( RMSe - RCSe ) ) ) - Max( MUC,DS ) ) - CS )", "obj1": 0.3248031496062992, "obj2": 0.4097593079015259}, {"determining": "( Max( Min( MDR ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_Mem * MDR ) ),PN ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,( ( RMSe * MLU ) - ( MLU + MUC ) ) ) / Min( ( ( ( RRSe / MUC ) * MUR ) / MUC ) ,( MUR - Min( DS ,RCSe ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.6080021719758995}, {"determining": "Min( Max( BR,FirstVNF_Mem_Server ) ,Max( ( ( FirstVNF_Mem / BR ) - MDR ),FirstVNF_Mem ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( CS,DS ) ) * ( ( CS + RCSe ) - ( MLU / MUC ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18549448893465592}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.3682389927129635}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.0688976377952756, "obj2": 0.6409073738879505}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( DS / RCSe ) * RMSe ) ) - MUM ) - DS )", "obj1": 0.39763779527559057, "obj2": 0.3514188307266109}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( ( ACS + MDR ) + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( RRS + ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / Max( ( RCSe + ( MUM - MLU ) ),( Min( CS ,RMSe ) - ( RCSe * RMSe ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) ) * ( ( ( ( MLU / MUR ) - ( MUM + MUC ) ) - Min( Min( MLU ,DS ) ,Max( MUR,RRSe ) ) ) - MUM ) ),MLU ) - CS )", "obj1": 0.08464566929133858, "obj2": 0.6363085861686169}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.05511811023622047, "obj2": 0.6857554050878977}, {"determining": "( Min( ( Min( FirstVNF_CPU ,BR ) / Max( Const,FirstVNF_RAM_Server ) ) ,CRS ) * Max( ( Const + ( PN * DDR ) ),PN ) )", "choosing": "( ( DS + ( Max( CS,CS ) + ( ( RCSe - ( MUM - Min( ( RMSe + RRSe ) ,MUC ) ) ) + ( ( MLU * CS ) + ( ( MUR / CS ) + ( ( RMSe + RCSe ) - DS ) ) ) ) ) ) - CS )", "obj1": 0.31299212598425197, "obj2": 0.4354310134522113}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16881917443508057}, {"determining": "( Max( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ),( ( Min( ARS ,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM,DDR ) * BR ) ) + MRS ) ) * ( ( AMS - ACS ) / ( Min( BR ,AMS ) + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + Min( MLU ,Max( ( MLU * CS ),( Min( RMSe ,( RRSe - RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.27860429585863045}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14537733442563572}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Min( AMS ,ARS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.5590367840416248}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( ( Min( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.9330708661417323, "obj2": 0.024771187650661605}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( ( Max( Min( Max( Max( ( RMSe * RRSe ),MLU ),RRSe ) ,( MUR - MLU ) ),MLU ) + RMSe ) + Max( CS,MUR ) ) )", "obj1": 0.41929133858267714, "obj2": 0.3313265267112673}, {"determining": "( Min( ( FirstVNF_Mem_Server + ( Const - ( ( Min( RRS ,Max( Const,AMS ) ) - MRS ) / FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_RAM_Server - ACS ) / ( FirstVNF_Mem + ACS ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( CS + ( Min( CS ,( Max( ( DS - RMSe ),MLU ) + DS ) ) + RRSe ) ) * ( ( RCSe + RMSe ) - Max( Max( MLU,MLU ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.11342634488350317}, {"determining": "( Max( Max( ( MRS + RRS ),( BR - FirstVNF_Mem ) ),( ACS * PN ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( PN,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( ACS ,FirstVNF_Mem ) ) + ACS ) ) ) ) ) )", "choosing": "( ( MLU - ( ( RMSe * MLU ) - ( DS + MUC ) ) ) / ( Min( Min( RRSe ,MUM ) ,Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5463706483551398}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.265748031496063, "obj2": 0.46809959587473354}, {"determining": "( Min( ( ACS + Const ) ,( DDR + MRS ) ) * ( ( ( ( FirstVNF_Mem / BR ) - Max( ( ( FirstVNF_CPU + RRS ) - ACS ),( FirstVNF_Mem - FirstVNF_Mem ) ) ) + FirstVNF_Mem ) / ( AMS - ( ARS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM - RCSe ) - Max( RCSe,RMSe ) )", "obj1": 0.8307086614173228, "obj2": 0.08031884554345148}, {"determining": "Max( Max( ( ( Min( MRS ,Max( ACS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( FirstVNF_RAM + ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * RRSe ) )", "obj1": 0.19488188976377951, "obj2": 0.5379385513905189}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( ( FirstVNF_Mem + ARS ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MUR * MUM ) - ( Max( ( ( RCSe + ( RCSe - ( Min( MLU ,CS ) * MUR ) ) ) * RCSe ),RRSe ) + ( CS - MUM ) ) )", "obj1": 0.9094488188976378, "obj2": 0.044088580323299785}, {"determining": "Min( FirstVNF_CPU_Server ,( Max( ( ( RRS + FirstVNF_CPU ) + Max( MDR,MDR ) ),FirstVNF_RAM ) - ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "( ( ( ( MUR - MUR ) - ( RRSe - RRSe ) ) - MLU ) / ( ( ( RRSe / MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( ( ( ( RMSe - MUM ) + RRSe ) * ( Min( RRSe ,CS ) - ( RMSe - RCSe ) ) ),MUM ),Min( CS ,DS ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13778085821900404}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.25196850393700787, "obj2": 0.4878717472173431}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( ( MUR + RMSe ),MUM ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.65748031496063, "obj2": 0.17967247042783968}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) * ( DDR * Max( ( Max( RRS,Min( ( BR / BR ) ,( Const * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) + MDR ),( Max( MRS,CRS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - ( ( CS + RMSe ) * ( MLU - Max( ( ( CS + CS ) + ( RRSe - DS ) ),Max( ( CS / RCSe ),RRSe ) ) ) ) ) + Max( ( ( RMSe + MUM ) + RCSe ),RRSe ) ) )", "obj1": 0.3051181102362205, "obj2": 0.4537835896551423}, {"determining": "( ( DDR * ACS ) * Min( Min( ACS ,Const ) ,( DDR + MRS ) ) )", "choosing": "( ( DS / RCSe ) - ( Min( Min( ( ( MUC * MUM ) - DS ) ,( RCSe + MUM ) ) ,MUC ) - RRSe ) )", "obj1": 0.8877952755905512, "obj2": 0.05154426113510009}, {"determining": "( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) * ( ( MDR + RRS ) + ( MRS / DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( MUR + Max( ( MUC / Max( MLU,MLU ) ),MUC ) ) + CS ),( MUM * RRSe ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5053084293377942}, {"determining": "Max( Max( ( ( Min( MRS ,Max( ACS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( FirstVNF_RAM + ( ( PN / FirstVNF_RAM_Server ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MLU + CS ),( MUC + CS ) ) * RRSe ) )", "obj1": 0.2106299212598425, "obj2": 0.5260325250505262}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( CS,DS ) ) * ( ( CS + RCSe ) - ( MLU / MUC ) ) ) )", "obj1": 0.9232283464566929, "obj2": 0.03633289609196497}, {"determining": "( ( ( MDR * DDR ) / Min( BR ,AMS ) ) * ( Const / ( Min( Max( DDR,Min( ( Min( ARS ,Const ) - BR ) ,MRS ) ) ,FirstVNF_Mem_Server ) + MDR ) ) )", "choosing": "( ( DS / ( ( ( Min( ( DS - MLU ) ,RRSe ) / DS ) - ( MUC + Min( RCSe ,( DS * RMSe ) ) ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( Max( RRSe,RRSe ) + ( DS * MLU ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5194805979949116}, {"determining": "( Min( ( AMS * BR ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( AMS - ACS ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( AMS - ACS ) / ( FirstVNF_Mem + RRS ) ) ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( Max( ( Min( MUR ,MLU ) + ( MLU + MUC ) ),MLU ) + ( ( DS / MLU ) * ( ( MUR + DS ) / MUR ) ) ) + DS ) ) - MUM ) - CS )", "obj1": 0.28937007874015747, "obj2": 0.4587563481043243}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( Const + ACS ) ,( AMS - ( ( MRS + Const ) - ( PN + MRS ) ) ) ) * ( ( ACS / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUC ) / ( ( RCSe - RMSe ) - Min( MUM ,RMSe ) ) ) - Max( MUC,Max( MUM,RRSe ) ) ) - CS )", "obj1": 0.8543307086614174, "obj2": 0.06895048673542133}, {"determining": "( Min( ( AMS + ARS ) ,( FirstVNF_RAM_Server * Max( Min( BR ,AMS ),FirstVNF_CPU ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( CS,MUC ),MUM ) ,MUR ) - ( Min( ( DS - DS ) ,RRSe ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.29616842377809105}, {"determining": "( ( Max( ( Min( FirstVNF_RAM_Server ,Const ) - FirstVNF_Mem_Server ),ACS ) / Min( ACS ,FirstVNF_CPU ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( CS,RRSe ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4812338435531668}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server + CRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( ACS - ( FirstVNF_Mem * ARS ) ) ) * ( Max( Const,MDR ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe + Max( CS,( Max( ( CS / RCSe ),MUM ) * RCSe ) ) ) + RMSe ) + ( MUM - MUR ) ) )", "obj1": 0.4271653543307087, "obj2": 0.327113733733304}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.10466462410865417}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.24015748031496062, "obj2": 0.5001371249701048}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,Max( ( ARS + RRS ),MRS ) )", "choosing": "( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.6594488188976378, "obj2": 0.17871786196374018}, {"determining": "( ( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + ( MRS * ACS ) ) ) ) / Min( ACS ,Max( ( ARS / ( AMS + Const ) ),FirstVNF_Mem ) ) ) * ( Max( MDR,Const ) + ( FirstVNF_Mem / DDR ) ) )", "choosing": "( ( DS / ( MLU + MUM ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + RCSe ) ) ) ) ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.32646086262559915}, {"determining": "( ( Max( CRS,( BR * PN ) ) / FirstVNF_CPU_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM * CS ) * RRSe ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.5, "obj2": 0.2918866478441727}], "15": [{"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( Min( PN ,FirstVNF_CPU_Server ) * BR ) ) ) * ( ( ARS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( Min( RCSe ,Max( ( RCSe * Max( RCSe,MUR ) ),RMSe ) ) - ( RMSe - RCSe ) ) ) - Max( MUC,DS ) ) - CS )", "obj1": 0.3248031496062992, "obj2": 0.4097593079015259}, {"determining": "( Max( Min( MDR ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_Mem * MDR ) ),PN ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,( ( RMSe * MLU ) - ( MLU + MUC ) ) ) / Min( ( ( ( RRSe / MUC ) * MUR ) / MUC ) ,( MUR - Min( DS ,RCSe ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.6080021719758995}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.3682389927129635}, {"determining": "Min( Max( BR,FirstVNF_Mem_Server ) ,Max( ( ( FirstVNF_Mem / BR ) - MDR ),FirstVNF_Mem ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( CS,DS ) ) * ( ( CS + RCSe ) - ( MLU / MUC ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18549448893465592}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( FirstVNF_CPU - ( Min( ARS ,Const ) - ( Min( ARS ,MDR ) * ( BR + MDR ) ) ) ) ) ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( ( MUR + ( Max( ( RCSe - CS ),( RRSe / RMSe ) ) + MUR ) ),MUM ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.5787401574803149, "obj2": 0.23376472623291256}, {"determining": "( Max( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ),( ( Min( ARS ,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM,DDR ) * BR ) ) + MRS ) ) * ( ( AMS - ACS ) / ( Min( BR ,AMS ) + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + Min( MLU ,Max( ( MLU * CS ),( Min( RMSe ,( RRSe - RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.27860429585863045}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16881917443508057}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.0688976377952756, "obj2": 0.6409073738879505}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( DS / RCSe ) * RMSe ) ) - MUM ) - DS )", "obj1": 0.39763779527559057, "obj2": 0.3514188307266109}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( ( ACS + MDR ) + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( RRS + ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / Max( ( RCSe + ( MUM - MLU ) ),( Min( CS ,RMSe ) - ( RCSe * RMSe ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) ) * ( ( ( ( MLU / MUR ) - ( MUM + MUC ) ) - Min( Min( MLU ,DS ) ,Max( MUR,RRSe ) ) ) - MUM ) ),MLU ) - CS )", "obj1": 0.08464566929133858, "obj2": 0.6363085861686169}, {"determining": "( Min( ( FirstVNF_Mem_Server + ( Const - ( ( Min( RRS ,Max( Const,AMS ) ) - MRS ) / FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_RAM_Server - ACS ) / ( FirstVNF_Mem + ACS ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( CS + ( Min( CS ,( Max( ( DS - RMSe ),MLU ) + DS ) ) + RRSe ) ) * ( ( RCSe + RMSe ) - Max( Max( MLU,MLU ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.11342634488350317}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( ( Min( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.9330708661417323, "obj2": 0.024771187650661605}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + ( ACS / MRS ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / Min( ACS ,( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) ) ) * ( Max( MDR,Const ) + ( FirstVNF_Mem / DDR ) ) )", "choosing": "( Min( Min( Min( DS ,RCSe ) ,Max( RRSe,MUC ) ) ,MUM ) - CS )", "obj1": 0.8877952755905512, "obj2": 0.05114694252717476}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.05511811023622047, "obj2": 0.6857554050878977}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( ( ( RMSe / ( ( RCSe * RCSe ) / MUM ) ) - MUR ) + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MLU ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Min( Min( RMSe ,MUR ) ,CS ) * Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.17653350894521372}, {"determining": "( Min( ( Min( FirstVNF_CPU ,BR ) / Max( Const,FirstVNF_RAM_Server ) ) ,CRS ) * Max( ( Const + ( PN * DDR ) ),PN ) )", "choosing": "( ( DS + ( Max( CS,CS ) + ( ( RCSe - ( MUM - Min( ( RMSe + RRSe ) ,MUC ) ) ) + ( ( MLU * CS ) + ( ( MUR / CS ) + ( ( RMSe + RCSe ) - DS ) ) ) ) ) ) - CS )", "obj1": 0.31299212598425197, "obj2": 0.4354310134522113}, {"determining": "( ( Max( ARS,Min( Min( ( ( RRS / ACS ) / Min( FirstVNF_RAM_Server ,( AMS - MDR ) ) ) ,Const ) ,DDR ) ) + ( ACS + Const ) ) * ( ( AMS - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( CS,Min( Max( RRSe,MUC ) ,DS ) ) - RMSe ) / ( DS + ( ( Max( CS,( Max( MUM,CS ) - RCSe ) ) - RRSe ) + RRSe ) ) ) - ( DS / MUM ) )", "obj1": 0.4645669291338583, "obj2": 0.30937899268380736}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14537733442563572}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( ( Max( Min( Max( Max( ( RMSe * RRSe ),MLU ),RRSe ) ,( MUR - MLU ) ),MLU ) + RMSe ) + Max( CS,MUR ) ) )", "obj1": 0.41929133858267714, "obj2": 0.3313265267112673}, {"determining": "( ( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + ( MRS * ACS ) ) ) ) / Min( ACS ,Max( ( ARS / ( AMS + Const ) ),FirstVNF_Mem ) ) ) * ( Max( MDR,Const ) + ( FirstVNF_Mem / DDR ) ) )", "choosing": "( ( DS / ( MLU + MUM ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + RCSe ) ) ) ) ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.32646086262559915}, {"determining": "( Min( ( AMS + ARS ) ,( FirstVNF_RAM_Server * Max( Min( BR ,AMS ),FirstVNF_CPU ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( CS,MUC ),MUM ) ,MUR ) - ( Min( ( DS - DS ) ,RRSe ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.29616842377809105}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( Const + ACS ) ,( AMS + MRS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MLU + CS ),( MUC + CS ) ) * RRSe ) )", "obj1": 0.8562992125984252, "obj2": 0.06765595810243348}, {"determining": "( ( Max( CRS,( BR * PN ) ) / FirstVNF_CPU_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM * CS ) * RRSe ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.5, "obj2": 0.2918866478441727}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( ( FirstVNF_Mem + ARS ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MUR * MUM ) - ( Max( ( ( RCSe + ( RCSe - ( Min( MLU ,CS ) * MUR ) ) ) * RCSe ),RRSe ) + ( CS - MUM ) ) )", "obj1": 0.9094488188976378, "obj2": 0.044088580323299785}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) * ( DDR * Max( ( Max( RRS,Min( ( BR / BR ) ,( Const * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) + MDR ),( Max( MRS,CRS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - ( ( CS + RMSe ) * ( MLU - Max( ( ( CS + CS ) + ( RRSe - DS ) ),Max( ( CS / RCSe ),RRSe ) ) ) ) ) + Max( ( ( RMSe + MUM ) + RCSe ),RRSe ) ) )", "obj1": 0.3051181102362205, "obj2": 0.4537835896551423}, {"determining": "( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) * ( ( MDR + RRS ) + ( MRS / DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( MUR + Max( ( MUC / Max( MLU,MLU ) ),MUC ) ) + CS ),( MUM * RRSe ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5053084293377942}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Min( AMS ,ARS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.5590367840416248}, {"determining": "Min( Const ,( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( ( MUR + ( Min( MUM ,( RCSe + MLU ) ) + MUR ) ),MUM ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.23474878785311398}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( CS,DS ) ) * ( ( CS + RCSe ) - ( MLU / MUC ) ) ) )", "obj1": 0.9232283464566929, "obj2": 0.03633289609196497}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Max( MDR,Const ) + ( MRS / DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.25196850393700787, "obj2": 0.4878717472173431}, {"determining": "Max( Max( ( ( Min( MRS ,Max( ACS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( FirstVNF_RAM + ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * RRSe ) )", "obj1": 0.19488188976377951, "obj2": 0.5379385513905189}, {"determining": "( Min( ( ACS + FirstVNF_RAM ) ,( ( Min( ( AMS + MRS ) ,( Const + ACS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * Min( Const ,Max( ( Max( RRS,( ( ( FirstVNF_RAM_Server * PN ) - DDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( MDR / FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( MLU * DS ) ,Max( RRSe,MUC ) ) - Max( DS,DS ) ) - CS )", "obj1": 0.2637795275590551, "obj2": 0.47581331524413156}, {"determining": "( ( ( MDR * DDR ) / Min( BR ,AMS ) ) * ( Const / ( Min( Max( DDR,Min( ( Min( ARS ,Const ) - BR ) ,MRS ) ) ,FirstVNF_Mem_Server ) + MDR ) ) )", "choosing": "( ( DS / ( ( ( Min( ( DS - MLU ) ,RRSe ) / DS ) - ( MUC + Min( RCSe ,( DS * RMSe ) ) ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( Max( RRSe,RRSe ) + ( DS * MLU ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5194805979949116}, {"determining": "( Max( Max( ( MRS + RRS ),( BR - FirstVNF_Mem ) ),( ACS * PN ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( PN,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( ACS ,FirstVNF_Mem ) ) + ACS ) ) ) ) ) )", "choosing": "( ( MLU - ( ( RMSe * MLU ) - ( DS + MUC ) ) ) / ( Min( Min( RRSe ,MUM ) ,Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5463706483551398}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( PN + ARS ),MRS ) ) ,Min( Max( RRS,FirstVNF_CPU ) ,( FirstVNF_RAM + MDR ) ) )", "choosing": "( Min( Min( Min( DS ,RCSe ) ,( DS / ( DS * ( MUC + RCSe ) ) ) ) ,MUM ) - ( CS - ( MUM + Max( DS,RMSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.07985680803721909}, {"determining": "( Min( ( Min( RRS ,( PN - CRS ) ) + Const ) ,( AMS + MRS ) ) * ( ( MDR + Const ) + ( MRS / DDR ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.1830708661417323, "obj2": 0.5586742273175552}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server + CRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( ACS - ( FirstVNF_Mem * ARS ) ) ) * ( Max( Const,MDR ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe + Max( CS,( Max( ( CS / RCSe ),MUM ) * RCSe ) ) ) + RMSe ) + ( MUM - MUR ) ) )", "obj1": 0.4271653543307087, "obj2": 0.327113733733304}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.10466462410865417}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "Min( FirstVNF_CPU_Server ,( Max( ( ( RRS + FirstVNF_CPU ) + Max( MDR,MDR ) ),FirstVNF_RAM ) - ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "( ( ( ( MUR - MUR ) - ( RRSe - RRSe ) ) - MLU ) / ( ( ( RRSe / MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( ( ( ( RMSe - MUM ) + RRSe ) * ( Min( RRSe ,CS ) - ( RMSe - RCSe ) ) ),MUM ),Min( CS ,DS ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13778085821900404}, {"determining": "( Min( Const ,Max( Max( Max( ACS,DDR ),( Const - Const ) ),( FirstVNF_RAM / MDR ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU ) )", "choosing": "( ( DS / RCSe ) - ( ( ( MUC + Min( MUR ,( MUC * Min( RRSe ,Max( RRSe,CS ) ) ) ) ) + MLU ) + Max( ( ( DS / Max( ( CS * DS ),RRSe ) ) * RCSe ),RRSe ) ) )", "obj1": 0.2874015748031496, "obj2": 0.46675729272005956}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.265748031496063, "obj2": 0.46809959587473354}], "16": [{"determining": "( ( ( ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) - AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( MUM ,MUM ) - ( CS - ( MUM + Max( DS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( ARS ,RRS ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "Min( Const ,( Const - ARS ) )", "choosing": "( Max( Max( Max( ( MUR + ( Min( DS ,( RCSe + MLU ) ) + MUR ) ),( DS - MLU ) ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( MLU * ( MUC + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.23308176185440185}, {"determining": "( Max( Min( MDR ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_Mem * MDR ) ),PN ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,( ( RMSe * MLU ) - ( MLU + MUC ) ) ) / Min( ( ( ( RRSe / MUC ) * MUR ) / MUC ) ,( MUR - Min( DS ,RCSe ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.6080021719758995}, {"determining": "Min( Max( BR,FirstVNF_Mem_Server ) ,Max( ( ( FirstVNF_Mem / BR ) - MDR ),FirstVNF_Mem ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( CS,DS ) ) * ( ( CS + RCSe ) - ( MLU / MUC ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18549448893465592}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( MDR / FirstVNF_RAM ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( Min( Min( Min( DS ,RCSe ) ,Max( RRSe,MUC ) ) ,MUM ) - CS )", "obj1": 0.3700787401574803, "obj2": 0.4034940994334645}, {"determining": "( Max( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ),( ( Min( ARS ,FirstVNF_CPU_Server ) * ( Max( FirstVNF_RAM,DDR ) * BR ) ) + MRS ) ) * ( ( AMS - ACS ) / ( Min( BR ,AMS ) + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( MUR + Min( MLU ,Max( ( MLU * CS ),( Min( RMSe ,( RRSe - RMSe ) ) * MUC ) ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.27860429585863045}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.3682389927129635}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.0688976377952756, "obj2": 0.6409073738879505}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( ( ( RMSe / ( ( RCSe * RCSe ) / MUM ) ) - MUR ) + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MLU ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Min( Min( RMSe ,MUR ) ,CS ) * Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.17653350894521372}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( DS / RCSe ) * RMSe ) ) - MUM ) - DS )", "obj1": 0.39763779527559057, "obj2": 0.3514188307266109}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( ( ACS + MDR ) + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( CRS,( RRS + ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / Max( FirstVNF_CPU,ARS ) ) ) ) ) )", "choosing": "( Max( ( ( ( DS / Max( ( RCSe + ( MUM - MLU ) ),( Min( CS ,RMSe ) - ( RCSe * RMSe ) ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) ) * ( ( ( ( MLU / MUR ) - ( MUM + MUC ) ) - Min( Min( MLU ,DS ) ,Max( MUR,RRSe ) ) ) - MUM ) ),MLU ) - CS )", "obj1": 0.08464566929133858, "obj2": 0.6363085861686169}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / MUR ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.05511811023622047, "obj2": 0.6857554050878977}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( ( Min( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.9330708661417323, "obj2": 0.024771187650661605}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,Min( MRS ,CRS ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),FirstVNF_CPU_Server ) ) ,( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( DS / ( ( Min( DS ,CS ) / MUR ) * MUM ) ) - ( ( CS - MUM ) + Max( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ),RRSe ) ) )", "obj1": 0.8405511811023622, "obj2": 0.07410899943103456}, {"determining": "( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) * ( ( MDR + RRS ) + ( MRS / DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( MUR + Max( ( MUC / Max( MLU,MLU ) ),MUC ) ) + CS ),( MUM * RRSe ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5053084293377942}, {"determining": "( Min( ( ACS + ( FirstVNF_CPU / ( ( CRS - MDR ) * ( MDR * MDR ) ) ) ) ,( ( Min( ( FirstVNF_RAM + ACS ) ,( AMS + MRS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * Min( Const ,Max( ( Max( RRS,Max( ( FirstVNF_Mem / DDR ),BR ) ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),( PN / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MLU * MUC ),Max( ( MUM * ( ( RRSe + MUC ) + MUM ) ),Max( MUR,Min( DS ,RMSe ) ) ) ) - ( DS - DS ) ) - CS )", "obj1": 0.25, "obj2": 0.4842102044616901}, {"determining": "( ( ( ( ARS / Min( Min( FirstVNF_Mem ,( Min( BR ,CRS ) / ARS ) ) ,( Max( ( RRS * ARS ),( AMS - ACS ) ) / RRS ) ) ) - AMS ) / Max( FirstVNF_CPU,Const ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( RCSe ,( CS / MUC ) ) * ( MUM + CS ) ) - DS )", "obj1": 0.8877952755905512, "obj2": 0.051072929370418844}, {"determining": "( Min( ( Min( FirstVNF_CPU ,BR ) / Max( Const,FirstVNF_RAM_Server ) ) ,CRS ) * Max( ( Const + ( PN * DDR ) ),PN ) )", "choosing": "( ( DS + ( Max( CS,CS ) + ( ( RCSe - ( MUM - Min( ( RMSe + RRSe ) ,MUC ) ) ) + ( ( MLU * CS ) + ( ( MUR / CS ) + ( ( RMSe + RCSe ) - DS ) ) ) ) ) ) - CS )", "obj1": 0.31299212598425197, "obj2": 0.4354310134522113}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( ( Max( Min( Max( Max( ( RMSe * RRSe ),MLU ),RRSe ) ,( MUR - MLU ) ),MLU ) + RMSe ) + Max( CS,MUR ) ) )", "obj1": 0.41929133858267714, "obj2": 0.3313265267112673}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( Min( PN ,FirstVNF_CPU_Server ) * BR ) ) ) * ( ( ARS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( Min( RCSe ,Max( ( RCSe * Max( RCSe,MUR ) ),RMSe ) ) - ( RMSe - RCSe ) ) ) - Max( MUC,DS ) ) - CS )", "obj1": 0.3248031496062992, "obj2": 0.4097593079015259}, {"determining": "( ( ARS / FirstVNF_CPU_Server ) * ( ( ARS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( RCSe * RRSe ) - RCSe )", "obj1": 0.8090551181102362, "obj2": 0.09043336274986001}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Min( AMS ,ARS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.5590367840416248}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( Const ,Max( Max( Max( ACS,DDR ),( Const - Const ) ),( FirstVNF_RAM / MDR ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU ) )", "choosing": "( ( DS / RCSe ) - ( ( ( MUC + Min( MUR ,( MUC * Min( RRSe ,Max( RRSe,CS ) ) ) ) ) + MLU ) + Max( ( ( DS / Max( ( CS * DS ),RRSe ) ) * RCSe ),RRSe ) ) )", "obj1": 0.2874015748031496, "obj2": 0.46675729272005956}, {"determining": "( ( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server * ( DDR * ( Const * BR ) ) ) ,( AMS + ( MRS * ACS ) ) ) ) / Min( ACS ,Max( ( ARS / ( AMS + Const ) ),FirstVNF_Mem ) ) ) * ( Max( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ),Const ) + ( FirstVNF_Mem / DDR ) ) )", "choosing": "( ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Min( CS ,Max( MUM,( ( MUC - RMSe ) / MLU ) ) ) ) ) ) - ( DS / ( MLU + MUM ) ) )", "obj1": 0.7559055118110236, "obj2": 0.11500022348418695}, {"determining": "( ( Max( CRS,( BR * PN ) ) / FirstVNF_CPU_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM * CS ) * RRSe ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.5, "obj2": 0.2918866478441727}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( ( ( RMSe / ( ( RCSe * RCSe ) / MUM ) ) - MUR ) + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MLU ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Min( Min( RMSe ,MUR ) ,CS ) * Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.15533258397086236}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14537733442563572}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + ( ACS / MRS ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / Min( ACS ,( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) ) ) * ( Max( MDR,Const ) + ( FirstVNF_Mem / DDR ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + Max( ( ( DS / Max( ( CS * DS ),RRSe ) ) * RCSe ),RRSe ) ) )", "obj1": 0.860236220472441, "obj2": 0.06551899120532144}, {"determining": "( ( ( MDR * DDR ) / Min( BR ,AMS ) ) * ( Const / ( Min( Max( DDR,Min( ( Min( ARS ,Const ) - BR ) ,MRS ) ) ,FirstVNF_Mem_Server ) + MDR ) ) )", "choosing": "( ( DS / ( ( ( Min( ( DS - MLU ) ,RRSe ) / DS ) - ( MUC + Min( RCSe ,( DS * RMSe ) ) ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( Max( RRSe,RRSe ) + ( DS * MLU ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5194805979949116}, {"determining": "Min( FirstVNF_CPU_Server ,( Max( ( ( RRS + FirstVNF_CPU ) + Max( MDR,MDR ) ),FirstVNF_RAM ) - ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "( ( ( ( MUR - MUR ) - ( RRSe - RRSe ) ) - MLU ) / ( ( ( RRSe / MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( ( ( ( RMSe - MUM ) + RRSe ) * ( Min( RRSe ,CS ) - ( RMSe - RCSe ) ) ),MUM ),Min( CS ,DS ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13778085821900404}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Min( MRS ,FirstVNF_Mem ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( MDR,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( CS,DS ) ) * ( ( CS + RCSe ) - ( MLU / MUC ) ) ) )", "obj1": 0.9232283464566929, "obj2": 0.03633289609196497}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( AMS ,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ACS + Min( PN ,FirstVNF_RAM_Server ) ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( MUR - RCSe ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,MUR ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,MLU ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4129510800655964}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( ( ( RMSe / ( ( RCSe * RCSe ) / MUM ) ) - MUR ) + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MLU ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Min( Min( RMSe ,MUR ) ,CS ) * Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.15533258397086236}, {"determining": "( Min( ( AMS + ARS ) ,( FirstVNF_RAM_Server * Max( Min( BR ,AMS ),FirstVNF_CPU ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( CS,MUC ),MUM ) ,MUR ) - ( Min( ( DS - DS ) ,RRSe ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.29616842377809105}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.10466462410865417}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) * ( DDR * Max( ( Max( RRS,Min( ( BR / BR ) ,( Const * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) + MDR ),( Max( MRS,CRS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - ( ( CS + RMSe ) * ( MLU - Max( ( ( CS + CS ) + ( RRSe - DS ) ),Max( ( CS / RCSe ),RRSe ) ) ) ) ) + Max( ( ( RMSe + MUM ) + RCSe ),RRSe ) ) )", "obj1": 0.3051181102362205, "obj2": 0.4537835896551423}, {"determining": "( ( Max( ARS,Min( Min( ( ( RRS / ACS ) / Min( FirstVNF_RAM_Server ,( AMS - MDR ) ) ) ,Const ) ,DDR ) ) + ( ACS + Const ) ) * ( ( AMS - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( CS,Min( Max( RRSe,MUC ) ,DS ) ) - RMSe ) / ( DS + ( ( Max( CS,( Max( MUM,CS ) - RCSe ) ) - RRSe ) + RRSe ) ) ) - ( DS / MUM ) )", "obj1": 0.4645669291338583, "obj2": 0.30937899268380736}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "Max( Max( Max( ( Min( MRS ,Max( RRS,FirstVNF_CPU_Server ) ) / FirstVNF_RAM ),( ( AMS + MRS ) / Min( BR ,( ( ( BR - ACS ) + DDR ) - CRS ) ) ) ),CRS ),Max( CRS,( ( ( Min( ARS ,MDR ) * ( BR + MDR ) ) * ( ( ACS / Const ) / ( ACS + ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR / RMSe ) - ( MUR - RRSe ) ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) - ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.5522248860386679}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server + CRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( ACS - ( FirstVNF_Mem * ARS ) ) ) * ( Max( Const,MDR ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe + Max( CS,( Max( ( CS / RCSe ),MUM ) * RCSe ) ) ) + RMSe ) + ( MUM - MUR ) ) )", "obj1": 0.4271653543307087, "obj2": 0.327113733733304}, {"determining": "Min( ( Max( ( MDR / FirstVNF_RAM ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ,Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / Max( ( CS * DS ),RRSe ) ) * RCSe ) )", "obj1": 0.9960629921259843, "obj2": 0.0034872820310857464}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.32101243267824536}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( ( FirstVNF_Mem + ARS ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MUR * MUM ) - ( Max( ( ( RCSe + ( RCSe - ( Min( MLU ,CS ) * MUR ) ) ) * RCSe ),RRSe ) + ( CS - MUM ) ) )", "obj1": 0.9094488188976378, "obj2": 0.044088580323299785}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.265748031496063, "obj2": 0.46809959587473354}], "17": [{"determining": "( ( ( Max( ( MDR / FirstVNF_RAM ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ACS ) / ( ( MDR / Max( AMS,ARS ) ) + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( MUM ,MUM ) - ( CS - ( MUM + ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - ( RRSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) - AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( MUM ,MUM ) - ( CS - ( MUM + Max( DS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( Max( Min( MDR ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_Mem * MDR ) ),PN ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,( ( RMSe * MLU ) - ( MLU + MUC ) ) ) / Min( ( ( ( RRSe / MUC ) * MUR ) / MUC ) ,( MUR - Min( DS ,RCSe ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.6080021719758995}, {"determining": "Min( Max( BR,FirstVNF_Mem_Server ) ,Max( ( ( FirstVNF_Mem / BR ) - MDR ),FirstVNF_Mem ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( CS,DS ) ) * ( ( CS + RCSe ) - ( MLU / MUC ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18549448893465592}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( ( ( ACS + Const ) - ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( Max( ( FirstVNF_RAM - ARS ),FirstVNF_CPU_Server ) - DDR ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) - ( Max( ( ( CS - ( ( MLU / Min( DS ,MUM ) ) - ( CS - RCSe ) ) ) * MUC ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.3806528711426976}, {"determining": "( Min( ( ACS + ( RRS / ( ( MRS / AMS ) + FirstVNF_RAM ) ) ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * ( ( BR - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( MUC ,MUR ) - ( ( CS * MUR ) + ( RMSe + Max( Min( Max( ( MUC * MUR ),RRSe ) ,( MUR - MLU ) ),MLU ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.26676519969823836}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( DS / RCSe ) * RMSe ) ) - MUM ) - DS )", "obj1": 0.39763779527559057, "obj2": 0.3514188307266109}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.3682389927129635}, {"determining": "Min( Const ,( ( AMS - ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ) / ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( Max( ( MUR + ( Min( DS ,( RRSe * MUC ) ) + MUR ) ),MUM ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6669688797845607}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,FirstVNF_Mem ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.09251968503937008, "obj2": 0.6275191389604049}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ),( FirstVNF_RAM + ( Min( Const ,( Max( CRS,ACS ) / FirstVNF_CPU ) ) * ( ( ACS / Const ) / ( ACS + Const ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( MUM * ( RRSe / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.5389186970715124}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( Min( PN ,FirstVNF_CPU_Server ) * BR ) ) ) * ( ( ARS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( Min( RCSe ,Max( ( RCSe * Max( RCSe,MUR ) ),RMSe ) ) - ( RMSe - RCSe ) ) ) - Max( MUC,DS ) ) - CS )", "obj1": 0.3248031496062992, "obj2": 0.4097593079015259}, {"determining": "( ( Max( CRS,( BR * PN ) ) / FirstVNF_CPU_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM * CS ) * RRSe ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.5, "obj2": 0.2918866478441727}, {"determining": "( Min( ( Min( FirstVNF_CPU ,BR ) / Max( Const,FirstVNF_RAM_Server ) ) ,CRS ) * Max( ( Const + ( PN * DDR ) ),PN ) )", "choosing": "( ( DS + ( Max( CS,CS ) + ( ( RCSe - ( MUM - Min( ( RMSe + RRSe ) ,MUC ) ) ) + ( ( MLU * CS ) + ( ( MUR / CS ) + ( ( RMSe + RCSe ) - DS ) ) ) ) ) ) - CS )", "obj1": 0.31299212598425197, "obj2": 0.4354310134522113}, {"determining": "( ( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server * ( DDR * ( Const * BR ) ) ) ,( AMS + ( MRS * ACS ) ) ) ) / Min( ACS ,Max( ( ARS / ( AMS + Const ) ),FirstVNF_Mem ) ) ) * ( Max( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ),Const ) + ( FirstVNF_Mem / DDR ) ) )", "choosing": "( ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Min( CS ,Max( MUM,( ( MUC - RMSe ) / MLU ) ) ) ) ) ) - ( DS / ( MLU + MUM ) ) )", "obj1": 0.7559055118110236, "obj2": 0.11500022348418695}, {"determining": "Max( Max( Max( ( Min( MRS ,Max( RRS,FirstVNF_CPU_Server ) ) / FirstVNF_RAM ),( ( AMS + MRS ) / Min( BR ,( ( ( BR - ACS ) + DDR ) - CRS ) ) ) ),CRS ),Max( CRS,( ( ( Min( ARS ,MDR ) * ( BR + MDR ) ) * ( ( ACS / Const ) / ( ACS + ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR / RMSe ) - ( MUR - RRSe ) ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) - ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.5522248860386679}, {"determining": "( ( ( MDR * DDR ) / Min( BR ,AMS ) ) * ( Const / ( Min( Max( DDR,Min( ( Min( ARS ,Const ) - BR ) ,MRS ) ) ,FirstVNF_Mem_Server ) + MDR ) ) )", "choosing": "( ( DS / ( ( ( Min( ( DS - MLU ) ,RRSe ) / DS ) - ( MUC + Min( RCSe ,( DS * RMSe ) ) ) ) - Min( Min( MLU ,MUM ) ,Max( RRSe,MUC ) ) ) ) - ( Max( RRSe,RRSe ) + ( DS * MLU ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5194805979949116}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( Min( Min( Min( DS ,RCSe ) ,( RRSe * MUC ) ) ,MUM ) - ( CS - ( MUM + Max( DS,RMSe ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.019094323236738122}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( ( Max( ARS,Min( Min( ( ( RRS / ACS ) / Min( FirstVNF_RAM_Server ,( AMS - MDR ) ) ) ,Const ) ,DDR ) ) + ( ACS + Const ) ) * ( ( AMS - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( CS,Min( Max( RRSe,MUC ) ,DS ) ) - RMSe ) / ( DS + ( ( Max( CS,( Max( MUM,CS ) - RCSe ) ) - RRSe ) + RRSe ) ) ) - ( DS / MUM ) )", "obj1": 0.4645669291338583, "obj2": 0.30937899268380736}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.10466462410865417}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Min( AMS ,ARS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.5590367840416248}, {"determining": "( Min( ( AMS + ARS ) ,( FirstVNF_RAM_Server * Max( Min( BR ,AMS ),FirstVNF_CPU ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( Max( CS,MUC ),MUM ) ,MUR ) - ( Min( ( DS - DS ) ,RRSe ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.29616842377809105}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.17061114347362635}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.265748031496063, "obj2": 0.46809959587473354}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,( DDR + ACS ) ) + MDR ) / Const ) * FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe - MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( ( RRSe - RRSe ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.06692913385826772, "obj2": 0.6367510663877705}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14537733442563572}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( ( ( RMSe / ( ( RCSe * RCSe ) / MUM ) ) - MUR ) + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MLU ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Min( Min( RMSe ,MUR ) ,CS ) * Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.17653350894521372}, {"determining": "( Min( DDR ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( Const * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) + MDR ),( Max( MRS,CRS ) / FirstVNF_RAM ) ) ) * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) + RCSe ) - RRSe ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5048594747776268}, {"determining": "( Min( Const ,Max( Max( Max( ACS,DDR ),( Const - Const ) ),( FirstVNF_RAM / MDR ) ) ) * ( FirstVNF_RAM / FirstVNF_CPU ) )", "choosing": "( ( DS / RCSe ) - ( ( ( MUC + Min( MUR ,( MUC * Min( RRSe ,Max( RRSe,CS ) ) ) ) ) + MLU ) + Max( ( ( DS / Max( ( CS * DS ),RRSe ) ) * RCSe ),RRSe ) ) )", "obj1": 0.2874015748031496, "obj2": 0.46675729272005956}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,Min( MRS ,CRS ) ) + ACS ) ) ) ) - Max( ( ARS + RRS ),FirstVNF_CPU_Server ) ) ,( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( DS / ( ( Min( DS ,CS ) / MUR ) * MUM ) ) - ( ( CS - MUM ) + Max( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ),RRSe ) ) )", "obj1": 0.8405511811023622, "obj2": 0.07410899943103456}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server + CRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( ACS - ( FirstVNF_Mem * ARS ) ) ) * ( Max( Const,MDR ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe + Max( CS,( Max( ( CS / RCSe ),MUM ) * RCSe ) ) ) + RMSe ) + ( MUM - MUR ) ) )", "obj1": 0.4271653543307087, "obj2": 0.327113733733304}, {"determining": "( ( ( ( ARS / Min( Min( FirstVNF_Mem ,( Min( BR ,CRS ) / ARS ) ) ,( Max( ( RRS * ARS ),( AMS - ACS ) ) / RRS ) ) ) - AMS ) / Max( FirstVNF_CPU,Const ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( RCSe ,( CS / MUC ) ) * ( MUM + CS ) ) - DS )", "obj1": 0.8031496062992126, "obj2": 0.09366618249155173}, {"determining": "( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) * ( ( MDR + RRS ) + ( MRS / DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( MUR + Max( ( MUC / Max( MLU,MLU ) ),MUC ) ) + CS ),( MUM * RRSe ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5053084293377942}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( Const + ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ,( AMS + MRS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( RCSe - RMSe ) - ( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) ) ) ) - Max( MUC,DS ) ) - CS )", "obj1": 0.8720472440944882, "obj2": 0.0633681936787006}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( ( Min( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.9330708661417323, "obj2": 0.024771187650661605}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( AMS ,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ACS + Min( PN ,FirstVNF_RAM_Server ) ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( MUR - RCSe ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,MUR ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,MLU ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4129510800655964}, {"determining": "Min( ( ( FirstVNF_CPU_Server * Max( AMS,Min( MRS ,( ( FirstVNF_Mem + ARS ) + ACS ) ) ) ) - Max( ( ARS + RRS ),MRS ) ) ,( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) )", "choosing": "( ( MUR * MUM ) - ( Max( ( ( RCSe + ( RCSe - ( Min( MLU ,CS ) * MUR ) ) ) * RCSe ),RRSe ) + ( CS - MUM ) ) )", "obj1": 0.9094488188976378, "obj2": 0.044088580323299785}, {"determining": "( ( ( ( ARS / Min( Min( FirstVNF_Mem ,( Min( BR ,CRS ) / ARS ) ) ,( Max( ( RRS * ARS ),( AMS - ACS ) ) / RRS ) ) ) - AMS ) / Max( FirstVNF_CPU,Const ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( RCSe ,( CS / MUC ) ) * ( MUM + CS ) ) - DS )", "obj1": 0.8877952755905512, "obj2": 0.051072929370418844}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.32101243267824536}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6673228346456693, "obj2": 0.1600136777288608}, {"determining": "Min( FirstVNF_CPU_Server ,( Max( ( ( RRS + FirstVNF_CPU ) + Max( MDR,MDR ) ),FirstVNF_RAM ) - ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "( ( ( ( MUR - MUR ) - ( RRSe - RRSe ) ) - MLU ) / ( ( ( RRSe / MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( ( ( ( RMSe - MUM ) + RRSe ) * ( Min( RRSe ,CS ) - ( RMSe - RCSe ) ) ),MUM ),Min( CS ,DS ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13778085821900404}, {"determining": "( Min( ( ACS + ( FirstVNF_CPU / ( ( CRS - MDR ) * ( MDR * MDR ) ) ) ) ,( ( Min( ( FirstVNF_RAM + ACS ) ,( AMS + MRS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * Min( Const ,Max( ( Max( RRS,Max( ( FirstVNF_Mem / DDR ),BR ) ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),( PN / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MLU * MUC ),Max( ( MUM * ( ( RRSe + MUC ) + MUM ) ),Max( MUR,Min( DS ,RMSe ) ) ) ) - ( DS - DS ) ) - CS )", "obj1": 0.25, "obj2": 0.4842102044616901}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) * ( DDR * Max( ( Max( RRS,Min( ( BR / BR ) ,( Const * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) + MDR ),( Max( MRS,CRS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - ( ( CS + RMSe ) * ( MLU - Max( ( ( CS + CS ) + ( RRSe - DS ) ),Max( ( CS / RCSe ),RRSe ) ) ) ) ) + Max( ( ( RMSe + MUM ) + RCSe ),RRSe ) ) )", "obj1": 0.3051181102362205, "obj2": 0.4537835896551423}], "18": [{"determining": "( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) * ( ( MDR + RRS ) + ( Max( Max( FirstVNF_RAM,( Max( BR,PN ) - ( BR - FirstVNF_Mem ) ) ),Const ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,Max( Min( RMSe ,MUC ),( RMSe / RMSe ) ) ) / RMSe ),DS ) * ( RCSe / RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( MDR / FirstVNF_RAM ),MRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( FirstVNF_RAM - ACS ) / ( ( MDR / Max( AMS,ARS ) ) + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( MUM ,MUM ) - ( CS - ( MUM + ( Max( ( ( DS * Max( RCSe,CS ) ) * MUC ),MUM ) - ( RRSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( Max( Min( MDR ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_Mem * MDR ) ),PN ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,( ( RMSe * MLU ) - ( MLU + MUC ) ) ) / Min( ( ( ( RRSe / MUC ) * MUR ) / MUC ) ,( MUR - Min( DS ,RCSe ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.6080021719758995}, {"determining": "Min( Max( BR,FirstVNF_Mem_Server ) ,Max( ( ( FirstVNF_Mem / BR ) - MDR ),FirstVNF_Mem ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( CS,DS ) ) * ( ( CS + RCSe ) - ( MLU / MUC ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18549448893465592}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( Min( ( ACS + ( RRS / ( ( MRS / AMS ) + FirstVNF_RAM ) ) ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * ( ( BR - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( MUC ,MUR ) - ( ( CS * MUR ) + ( RMSe + Max( Min( Max( ( MUC * MUR ),RRSe ) ,( MUR - MLU ) ),MLU ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.26676519969823836}, {"determining": "( ( ( ACS + Const ) - ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( Max( ( FirstVNF_RAM - ARS ),FirstVNF_CPU_Server ) - DDR ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) - ( Max( ( ( CS - ( ( MLU / Min( DS ,MUM ) ) - ( CS - RCSe ) ) ) * MUC ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.3806528711426976}, {"determining": "Min( Const ,( ( AMS - ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ) / ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( Max( ( MUR + ( Min( DS ,( RRSe * MUC ) ) + MUR ) ),MUM ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( MLU * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.06299212598425197, "obj2": 0.6669688797845607}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.37598425196850394, "obj2": 0.3682389927129635}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( Min( ( ACS + ( FirstVNF_CPU / ( ( CRS - MDR ) * ( MDR * MDR ) ) ) ) ,( ( Min( ( FirstVNF_RAM + ACS ) ,( AMS + MRS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * Min( Const ,Max( ( Max( RRS,Max( ( FirstVNF_Mem / DDR ),BR ) ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),( PN / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MLU * MUC ),Max( ( MUM * ( ( RRSe + MUC ) + MUM ) ),Max( MUR,Min( DS ,RMSe ) ) ) ) - ( DS - DS ) ) - CS )", "obj1": 0.25, "obj2": 0.4842102044616901}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( Min( PN ,FirstVNF_CPU_Server ) * BR ) ) ) * ( ( ARS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( Min( RCSe ,Max( ( RCSe * Max( RCSe,MUR ) ),RMSe ) ) - ( RMSe - RCSe ) ) ) - Max( MUC,DS ) ) - CS )", "obj1": 0.3248031496062992, "obj2": 0.4097593079015259}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) * ( DDR * Max( ( Max( RRS,Min( ( BR / BR ) ,( Const * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) + MDR ),( Max( MRS,CRS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - ( ( CS + RMSe ) * ( MLU - Max( ( ( CS + CS ) + ( RRSe - DS ) ),Max( ( CS / RCSe ),RRSe ) ) ) ) ) + Max( ( ( RMSe + MUM ) + RCSe ),RRSe ) ) )", "obj1": 0.3051181102362205, "obj2": 0.4537835896551423}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + ARS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( Min( ( DS - DS ) ,RRSe ) * MUR ) )", "obj1": 0.49606299212598426, "obj2": 0.2916593742526829}, {"determining": "( Min( ( Min( FirstVNF_CPU ,BR ) / Max( Const,FirstVNF_RAM_Server ) ) ,CRS ) * Max( ( Const + ( PN * DDR ) ),PN ) )", "choosing": "( ( DS + ( Max( CS,CS ) + ( ( RCSe - ( MUM - Min( ( RMSe + RRSe ) ,MUC ) ) ) + ( ( MLU * CS ) + ( ( MUR / CS ) + ( ( RMSe + RCSe ) - DS ) ) ) ) ) ) - CS )", "obj1": 0.31299212598425197, "obj2": 0.4354310134522113}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( ( Min( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,RMSe ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.9330708661417323, "obj2": 0.024771187650661605}, {"determining": "( ( FirstVNF_CPU * Min( ( DDR - FirstVNF_CPU ) ,( Max( AMS,Max( CRS,( FirstVNF_RAM_Server - PN ) ) ) + MDR ) ) ) / ( ( FirstVNF_RAM - FirstVNF_RAM ) - ( FirstVNF_CPU - Const ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.9803149606299213, "obj2": 0.012826211472682224}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,FirstVNF_Mem ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.09251968503937008, "obj2": 0.6275191389604049}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( DS / RCSe ) * RMSe ) ) - MUM ) - DS )", "obj1": 0.39763779527559057, "obj2": 0.3514188307266109}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( ( Max( Const,FirstVNF_RAM_Server ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( BR * ARS ) ) ) ) ,( Min( ( ARS + ( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / BR ) ) - Min( RRS ,AMS ) ) ) ,Min( CRS ,Const ) ) + MDR ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( Max( ( MUC + ( ( RCSe - Max( CS,( MLU / CS ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( Max( RCSe,DS ) - Min( MUM ,MUC ) ) ) / ( ( MLU * RMSe ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.33924161640609196}, {"determining": "( ( ( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( FirstVNF_Mem_Server + CRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) / ( ACS - ( FirstVNF_Mem * ARS ) ) ) * ( Max( Const,MDR ) + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( ( DS / DS ) - ( ( ( RCSe + Max( CS,( Max( ( CS / RCSe ),MUM ) * RCSe ) ) ) + RMSe ) + ( MUM - MUR ) ) )", "obj1": 0.4271653543307087, "obj2": 0.327113733733304}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Min( AMS ,ARS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.5590367840416248}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUC,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.45673274410720005}, {"determining": "Max( Max( Max( ( Min( MRS ,Max( RRS,FirstVNF_CPU_Server ) ) / FirstVNF_RAM ),( ( AMS + MRS ) / Min( BR ,( ( ( BR - ACS ) + DDR ) - CRS ) ) ) ),CRS ),Max( CRS,( ( ( Min( ARS ,MDR ) * ( BR + MDR ) ) * ( ( ACS / Const ) / ( ACS + ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR / RMSe ) - ( MUR - RRSe ) ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) - ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.5522248860386679}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.17061114347362635}, {"determining": "( Min( Const ,CRS ) * Max( ( ( DDR - ( AMS / Const ) ) / PN ),PN ) )", "choosing": "( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS )", "obj1": 0.265748031496063, "obj2": 0.46809959587473354}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( Max( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.04390052899776313}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( ( ( RMSe / ( ( RCSe * RCSe ) / MUM ) ) - MUR ) + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MLU ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Min( Min( RMSe ,MUR ) ,CS ) * Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.17653350894521372}, {"determining": "( Min( DDR ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( Const * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) + MDR ),( Max( MRS,CRS ) / FirstVNF_RAM ) ) ) * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) + RCSe ) - RRSe ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5048594747776268}, {"determining": "Min( FirstVNF_CPU_Server ,( Max( ( ( RRS + FirstVNF_CPU ) + Max( MDR,MDR ) ),FirstVNF_RAM ) - ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "( ( ( ( MUR - MUR ) - ( RRSe - RRSe ) ) - MLU ) / ( ( ( RRSe / MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( ( ( ( RMSe - MUM ) + RRSe ) * ( Min( RRSe ,CS ) - ( RMSe - RCSe ) ) ),MUM ),Min( CS ,DS ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13778085821900404}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14537733442563572}, {"determining": "( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) * ( ( MDR + RRS ) + ( MRS / DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( MUR + Max( ( MUC / Max( MLU,MLU ) ),MUC ) ) + CS ),( MUM * RRSe ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5053084293377942}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( AMS ,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ACS + Min( PN ,FirstVNF_RAM_Server ) ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( MUR - RCSe ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,MUR ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,MLU ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4129510800655964}, {"determining": "( Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( Min( DS ,RCSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5422077904099667}, {"determining": "( ( ( ( AMS + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,MLU ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.06496062992125984, "obj2": 0.6417476368895122}, {"determining": "( Min( ( FirstVNF_Mem_Server - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ACS ) ) ) )", "choosing": "( ( Max( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( RMSe / RMSe ) ) - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.5333590606388209}, {"determining": "Min( ( Max( FirstVNF_Mem,( RRS - ( Const / PN ) ) ) - Max( Max( ( AMS - ACS ),MDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( Min( Min( Min( DS ,RCSe ) ,( MLU * MUC ) ) ,MUM ) - ( RMSe * DS ) )", "obj1": 0.9488188976377953, "obj2": 0.01802931970594876}, {"determining": "( ( Max( ARS,Min( Min( ( ( RRS / ACS ) / Min( FirstVNF_RAM_Server ,( AMS - MDR ) ) ) ,Const ) ,DDR ) ) + ( ACS + Const ) ) * ( ( AMS - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( CS,Min( Max( RRSe,MUC ) ,DS ) ) - RMSe ) / ( DS + ( ( Max( CS,( Max( MUM,CS ) - RCSe ) ) - RRSe ) + RRSe ) ) ) - ( DS / MUM ) )", "obj1": 0.4645669291338583, "obj2": 0.30937899268380736}, {"determining": "( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) - ( MUM + Max( RRSe,RRSe ) ) )", "obj1": 0.4547244094488189, "obj2": 0.32101243267824536}, {"determining": "( ( ( ( ARS / Min( Min( FirstVNF_Mem ,( Min( BR ,CRS ) / ARS ) ) ,( Max( ( RRS * ARS ),( AMS - ACS ) ) / RRS ) ) ) - AMS ) / Max( FirstVNF_CPU,Const ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( MUC,RRSe ) ,( ( ( MLU + ( Max( RCSe,DS ) / RMSe ) ) - MUC ) / CS ) ) - MUM ) - CS )", "obj1": 0.8503937007874016, "obj2": 0.06912942007466656}, {"determining": "( ( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + ( MRS * ACS ) ) ) ) / Min( ACS ,Max( ( ARS / ( AMS + Const ) ),FirstVNF_Mem ) ) ) * ( Max( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ),Const ) + ( FirstVNF_Mem / DDR ) ) )", "choosing": "( ( DS / ( MLU + MUM ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.09429145392422086}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,Min( Const ,CRS ) ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07677165354330709, "obj2": 0.6303484713325482}, {"determining": "( Min( ( ( Min( ( ARS + ACS ) ,Min( Const ,CRS ) ) + MDR ) - BR ) ,MRS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) - ( CRS * ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( MUC - Max( RCSe,( RMSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.11340343774680293}, {"determining": "( ( ( Max( ( MDR / FirstVNF_RAM ),MRS ) - ( FirstVNF_RAM_Server * ARS ) ) / FirstVNF_Mem ) * ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( ( Max( Max( ( Min( MUC ,( Max( MUC,RCSe ) / Max( MUC,MUC ) ) ) * RRSe ),MLU ),RRSe ) / ( MUR - MLU ) ) - Min( MUM ,MUM ) )", "obj1": 0.9980314960629921, "obj2": 0.001953641119229273}, {"determining": "( ( ( ARS + RRS ) - ( MRS + ( Min( ( Const + ACS ) ,Max( FirstVNF_CPU,ACS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( CS - MUM ) - Min( RCSe ,Max( RCSe,DS ) ) ) ) - Max( MUC,DS ) ) - CS )", "obj1": 0.44291338582677164, "obj2": 0.32220523056614797}, {"determining": "( ( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server * ( DDR * ( Const * BR ) ) ) ,( AMS + ( MRS * ACS ) ) ) ) / Min( ACS ,Max( ( ARS / ( AMS + Const ) ),FirstVNF_Mem ) ) ) * ( Max( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ),Const ) + ( FirstVNF_Mem / DDR ) ) )", "choosing": "( ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Min( CS ,Max( MUM,( ( MUC - RMSe ) / MLU ) ) ) ) ) ) - ( DS / ( MLU + MUM ) ) )", "obj1": 0.7559055118110236, "obj2": 0.11500022348418695}], "19": [{"determining": "Min( ( Max( FirstVNF_Mem,RRS ) / Max( Max( FirstVNF_Mem,DDR ),Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),RRS ) ) ) ,( MDR - BR ) )", "choosing": "( ( Min( ( Max( ( ( MUR * Min( DS ,MUC ) ) * Max( ( MLU * MUR ),MLU ) ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( MLU * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,MUR ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) * ( ( MDR + RRS ) + ( Max( Max( FirstVNF_RAM,( Max( BR,PN ) - ( BR - FirstVNF_Mem ) ) ),Const ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,Max( Min( RMSe ,MUC ),( RMSe / RMSe ) ) ) / RMSe ),DS ) * ( RCSe / RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( ( ( ACS - AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) * ( ( Min( ( ACS + Const ) ,( AMS + CRS ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( CRS * Const ) ) + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( MLU + RCSe ) ,MUM ) - ( CS * DS ) )", "obj1": 0.5118110236220472, "obj2": 0.26308974023604353}, {"determining": "( ( ( ACS + Const ) - ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( Max( ( FirstVNF_RAM - ARS ),FirstVNF_CPU_Server ) - DDR ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) - ( Max( ( ( CS - ( ( MLU / Min( DS ,MUM ) ) - ( CS - RCSe ) ) ) * MUC ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.3806528711426976}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( Max( Min( MDR ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_Mem * MDR ) ),PN ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,( ( RMSe * MLU ) - ( MLU + MUC ) ) ) / Min( ( ( ( RRSe / MUC ) * MUR ) / MUC ) ,( MUR - Min( DS ,RCSe ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.6080021719758995}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RRSe ) - ( ( CS - MUM ) + ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) ) )", "obj1": 0.5964566929133859, "obj2": 0.1973354779198635}, {"determining": "( ( PN + ( BR * FirstVNF_Mem_Server ) ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( CS * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.051181102362204724, "obj2": 0.6667589524887283}, {"determining": "( Min( ( ACS + Const ) ,( MRS + ( Min( ( ACS + ARS ) ,( AMS + MRS ) ) * ( ( DDR / FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MLU,MLU ),( MUC + CS ) ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - MLU ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.36499017161636854}, {"determining": "( ( Max( ARS,Min( Min( ( ( RRS / ACS ) / Min( FirstVNF_RAM_Server ,( AMS - MDR ) ) ) ,Const ) ,DDR ) ) + ( ACS + Const ) ) * ( ( AMS - FirstVNF_RAM ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( CS,Min( Max( RRSe,MUC ) ,DS ) ) - RMSe ) / ( DS + ( ( Max( CS,( Max( MUM,CS ) - RCSe ) ) - RRSe ) + RRSe ) ) ) - ( DS / MUM ) )", "obj1": 0.4645669291338583, "obj2": 0.30937899268380736}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / ( MLU + MUM ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.45499950420888785}, {"determining": "( ( ( ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Max( AMS,PN ) ) / Min( ACS ,( FirstVNF_Mem - ( ARS / ( AMS + Const ) ) ) ) ) * Min( Const ,RRS ) )", "choosing": "( Min( DS ,Min( ( RRSe + Min( RCSe ,CS ) ) ,RRSe ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RMSe,( CS - ( RRSe + ( ( RMSe + ( MUM - RRSe ) ) / Min( ( RMSe + CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.06005859699381427}, {"determining": "( ( ( ( AMS + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,MLU ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.06496062992125984, "obj2": 0.6417476368895122}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) * ( DDR * Max( ( Max( RRS,Min( ( BR / BR ) ,( Const * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) + MDR ),( Max( MRS,CRS ) / FirstVNF_RAM ) ) ) )", "choosing": "( ( DS / DS ) - ( ( CS - ( ( CS + RMSe ) * ( MLU - Max( ( ( CS + CS ) + ( RRSe - DS ) ),Max( ( CS / RCSe ),RRSe ) ) ) ) ) + Max( ( ( RMSe + MUM ) + RCSe ),RRSe ) ) )", "obj1": 0.3051181102362205, "obj2": 0.4537835896551423}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( Min( PN ,FirstVNF_CPU_Server ) * BR ) ) ) * ( ( ARS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( Min( RCSe ,Max( ( RCSe * Max( RCSe,MUR ) ),RMSe ) ) - ( RMSe - RCSe ) ) ) - Max( MUC,DS ) ) - CS )", "obj1": 0.3248031496062992, "obj2": 0.4097593079015259}, {"determining": "( Min( ( FirstVNF_RAM_Server * ( DDR * FirstVNF_CPU ) ) ,( AMS + ARS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( ( DS / DS ) - ( Min( ( DS - DS ) ,RRSe ) * MUR ) )", "obj1": 0.49606299212598426, "obj2": 0.2916593742526829}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.17061114347362635}, {"determining": "( Min( ( Min( FirstVNF_CPU ,BR ) / Max( Const,FirstVNF_RAM_Server ) ) ,CRS ) * Max( ( Const + ( PN * DDR ) ),PN ) )", "choosing": "( ( DS + ( Max( CS,CS ) + ( ( RCSe - ( MUM - Min( ( RMSe + RRSe ) ,MUC ) ) ) + ( ( MLU * CS ) + ( ( MUR / CS ) + ( ( RMSe + RCSe ) - DS ) ) ) ) ) ) - CS )", "obj1": 0.31299212598425197, "obj2": 0.4354310134522113}, {"determining": "Min( Const ,( ( AMS - ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( FirstVNF_Mem / BR ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ) / ( ( ( Min( ( ARS + ACS ) ,MRS ) + MDR ) / Const ) + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( Max( ( MUR + ( Min( DS ,( RRSe * MUC ) ) + MUR ) ),MUM ),MUR ),MLU ) + ( Max( Max( ( MUR + ( Min( ( DS - DS ) ,RRSe ) * MUR ) ),( DS * ( MLU + DS ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) )", "obj1": 0.9763779527559056, "obj2": 0.007429883291530406}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,FirstVNF_CPU_Server )", "choosing": "( Min( Min( Min( DS ,RCSe ) ,( RRSe * MUC ) ) ,MUM ) - ( CS - ( MUM + Max( DS,RMSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.07985680803721909}, {"determining": "Min( Max( BR,FirstVNF_Mem_Server ) ,Max( ( ( FirstVNF_Mem / BR ) - MDR ),FirstVNF_Mem ) )", "choosing": "( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( ( Min( RCSe ,MUC ) - DS ) ,MUM ) * Max( CS,DS ) ) * ( ( CS + RCSe ) - ( MLU / MUC ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.18549448893465592}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( Max( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.04483703753277162}, {"determining": "( MDR * ( RRS / PN ) )", "choosing": "( Max( ( MUR + ( CS - ( RRSe + Max( MUC,( ( RMSe - MUC ) + ( CS + MLU ) ) ) ) ) ),( MUC + CS ) ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC / CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.08870085133706333}, {"determining": "( ( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Min( ( FirstVNF_RAM_Server * ( DDR * ( Const * BR ) ) ) ,( AMS + ( MRS * ACS ) ) ) ) / Min( ACS ,Max( ( ARS / ( AMS + Const ) ),FirstVNF_Mem ) ) ) * ( Max( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ),Const ) + ( FirstVNF_Mem / DDR ) ) )", "choosing": "( ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Min( CS ,Max( MUM,( ( MUC - RMSe ) / MLU ) ) ) ) ) ) - ( DS / ( MLU + MUM ) ) )", "obj1": 0.7559055118110236, "obj2": 0.11500022348418695}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Min( AMS ,ARS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.5590367840416248}, {"determining": "( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) * ( ( MDR + RRS ) + ( MRS / DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( MUR + Max( ( MUC / Max( MLU,MLU ) ),MUC ) ) + CS ),( MUM * RRSe ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5053084293377942}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - ( FirstVNF_CPU_Server - Max( ( FirstVNF_CPU_Server - ARS ),( FirstVNF_Mem + ACS ) ) ) ) ,ARS )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RMSe,MUM ) ) * ( RMSe - ( RCSe * CS ) ) ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( RRSe,DS ) + ( Min( Min( RMSe ,MLU ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.9330708661417323, "obj2": 0.024691465083978018}, {"determining": "Min( ( Max( FirstVNF_Mem,( RRS - ( Const / PN ) ) ) - Max( Max( ( AMS - ACS ),MDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( Min( Min( Min( DS ,RCSe ) ,( MLU * MUC ) ) ,MUM ) - ( RMSe * DS ) )", "obj1": 0.9488188976377953, "obj2": 0.01802931970594876}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6966083432832256}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + MRS ) ) * ( ( AMS / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( MUC / ( ( RRSe * MLU ) * ( RRSe / ( MUM - MUM ) ) ) ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUC,MUM ) ) ) ),( Max( RRSe,RCSe ) * Min( CS ,MUC ) ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.4795861233689533}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( ( ( RMSe / ( ( RCSe * RCSe ) / MUM ) ) - MUR ) + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MLU ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Min( Min( RMSe ,MUR ) ,CS ) * Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.17653350894521372}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( ( Max( Const,FirstVNF_RAM_Server ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( BR * ARS ) ) ) ) ,( Min( ( ARS + ( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / BR ) ) - Min( RRS ,AMS ) ) ) ,Min( CRS ,Const ) ) + MDR ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( Max( ( MUC + ( ( RCSe - Max( CS,( MLU / CS ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( Max( RCSe,DS ) - Min( MUM ,MUC ) ) ) / ( ( MLU * RMSe ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.33924161640609196}, {"determining": "( Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + ( ARS + ACS ) ),FirstVNF_Mem_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( Max( MUC,RCSe ) / MUC ) ),( MUC + CS ) ) * ( Min( DS ,RCSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5276215880063434}, {"determining": "( Min( DDR ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( Const * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) + MDR ),( Max( MRS,CRS ) / FirstVNF_RAM ) ) ) * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) + RCSe ) - RRSe ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5048594747776268}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.15533258397086236}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.10826771653543307, "obj2": 0.614456645913484}, {"determining": "( Min( ( ACS + ( FirstVNF_CPU / ( ( CRS - MDR ) * ( MDR * MDR ) ) ) ) ,( ( Min( ( FirstVNF_RAM + ACS ) ,( AMS + MRS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * Min( Const ,Max( ( Max( RRS,Max( ( FirstVNF_Mem / DDR ),BR ) ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),( PN / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MLU * MUC ),Max( ( MUM * ( ( RRSe + MUC ) + MUM ) ),Max( MUR,Min( DS ,RMSe ) ) ) ) - ( DS - DS ) ) - CS )", "obj1": 0.25, "obj2": 0.4842102044616901}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( DS / RCSe ) * RMSe ) ) - MUM ) - DS )", "obj1": 0.39763779527559057, "obj2": 0.3514188307266109}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( AMS ,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ACS + Min( PN ,FirstVNF_RAM_Server ) ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( MUR - RCSe ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,MUR ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,MLU ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4129510800655964}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14537733442563572}, {"determining": "Max( Max( Max( ( Min( MRS ,Max( RRS,FirstVNF_CPU_Server ) ) / FirstVNF_RAM ),( ( AMS + MRS ) / Min( BR ,( ( ( BR - ACS ) + DDR ) - CRS ) ) ) ),CRS ),Max( CRS,( ( ( Min( ARS ,MDR ) * ( BR + MDR ) ) * ( ( ACS / Const ) / ( ACS + ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR / RMSe ) - ( MUR - RRSe ) ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) - ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.5522248860386679}, {"determining": "Min( FirstVNF_CPU_Server ,( Max( ( ( RRS + FirstVNF_CPU ) + Max( MDR,MDR ) ),FirstVNF_RAM ) - ( FirstVNF_CPU_Server * AMS ) ) )", "choosing": "( ( ( ( MUR - MUR ) - ( RRSe - RRSe ) ) - MLU ) / ( ( ( RRSe / MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( Max( ( ( ( RMSe - MUM ) + RRSe ) * ( Min( RRSe ,CS ) - ( RMSe - RCSe ) ) ),MUM ),Min( CS ,DS ) ) ) ) )", "obj1": 0.7066929133858267, "obj2": 0.13778085821900404}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,Min( Const ,CRS ) ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07677165354330709, "obj2": 0.6303484713325482}, {"determining": "( Min( ( FirstVNF_RAM_Server + MRS ) ,( ARS + AMS ) ) * ( ( AMS - ACS ) / ( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM - ( MUM / ( ( Max( MLU,MUM ) + Max( ( CS / CS ),RCSe ) ) * Max( Min( ( RCSe * MUR ) ,( MUR / RCSe ) ),MUM ) ) ) ) / DS ) - ( Min( ( DS - DS ) ,RRSe ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.29459105763991883}], "20": [{"determining": "Min( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) ,( ( MDR + RRS ) + ( Max( Max( FirstVNF_RAM,( Max( BR,PN ) - ( BR - FirstVNF_Mem ) ) ),Const ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,Max( Min( RMSe ,MUC ),( RMSe / RMSe ) ) ) / RMSe ),DS ) * ( RCSe / RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) / Max( Max( FirstVNF_Mem,DDR ),Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),RRS ) ) ) ,( MDR - BR ) )", "choosing": "( ( Min( ( Max( ( ( MUR * Min( DS ,MUC ) ) * Max( ( MLU * MUR ),MLU ) ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( MLU * DS ) ) ) + ( Max( DS,RRSe ) + ( Min( Min( MLU ,MUR ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( ( ( ACS - AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) * ( ( Min( ( ACS + Const ) ,( AMS + CRS ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( CRS * Const ) ) + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( MLU + RCSe ) ,MUM ) - ( CS * DS ) )", "obj1": 0.5118110236220472, "obj2": 0.26308974023604353}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( Max( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.04483703753277162}, {"determining": "( Min( ( Min( FirstVNF_CPU ,BR ) / Max( Const,FirstVNF_RAM_Server ) ) ,CRS ) * Max( ( Const + ( PN * DDR ) ),PN ) )", "choosing": "( ( DS + ( Max( CS,CS ) + ( ( RCSe - ( MUM - Min( ( RMSe + RRSe ) ,MUC ) ) ) + ( ( MLU * CS ) + ( ( MUR / CS ) + ( ( RMSe + RCSe ) - DS ) ) ) ) ) ) - CS )", "obj1": 0.31299212598425197, "obj2": 0.4354310134522113}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( ( PN + ( BR * FirstVNF_Mem_Server ) ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( CS * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.051181102362204724, "obj2": 0.6667589524887283}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RRSe ) - ( ( CS - MUM ) + ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) ) )", "obj1": 0.5964566929133859, "obj2": 0.1973354779198635}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( Min( ( Const + ACS ) ,Max( FirstVNF_CPU,ACS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( ( RMSe - RCSe ) - Min( RCSe ,Max( RCSe,DS ) ) ) ) - Max( MUC,DS ) ) - CS )", "obj1": 0.8011811023622047, "obj2": 0.09254287501932833}, {"determining": "( Min( ( ACS + ( ( Max( CRS,( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,MRS ) ) ) / Min( ( Min( AMS ,FirstVNF_CPU ) * ( MDR * MDR ) ) ,RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS * Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - MDR ) + Min( ARS ,AMS ) ) ,CRS ) / Max( BR,FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - CRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUM ) ,Max( RCSe,RMSe ) ) / Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) ) + Min( ( ( ( CS - MUM ) + Max( ( Min( RRSe ,MUC ) * Min( Max( MUC,MLU ) ,DS ) ),RRSe ) ) - DS ) ,RRSe ) )", "obj1": 0.1279527559055118, "obj2": 0.5801313011043521}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( Min( ( ACS + Const ) ,( MRS + ( Min( ( ACS + ARS ) ,( AMS + MRS ) ) * ( ( DDR / FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MLU,MLU ),( MUC + CS ) ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - MLU ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.3661417322834646, "obj2": 0.36499017161636854}, {"determining": "Max( Max( Max( ( Min( MRS ,Max( RRS,FirstVNF_CPU_Server ) ) / FirstVNF_RAM ),( ( AMS + MRS ) / Min( BR ,( ( ( BR - ACS ) + DDR ) - CRS ) ) ) ),CRS ),Max( CRS,( ( ( Min( ARS ,MDR ) * ( BR + MDR ) ) * ( ( ACS / Const ) / ( ACS + ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) * FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR / RMSe ) - ( MUR - RRSe ) ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) - ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.1830708661417323, "obj2": 0.5522248860386679}, {"determining": "( ( Max( ARS,Min( Min( ( ( RRS / ACS ) / Min( FirstVNF_RAM_Server ,BR ) ) ,Const ) ,DDR ) ) + ( ACS + Const ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( Max( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.1121782069035597}, {"determining": "Min( CRS ,( AMS * DDR ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),Max( DS,RMSe ) ) - CS ) ),( MUC * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( MUC - DS ) ) ,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.006560246636105197}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.34433059458871584}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( Max( AMS,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUC,MUM ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.27755905511811024, "obj2": 0.4521310412119164}, {"determining": "( ( Min( ACS ,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( Max( MDR,PN ) * ( ( Min( ( ACS + Const ) ,( ARS + RRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( ( RCSe + RMSe ) - MUR )", "obj1": 0.4566929133858268, "obj2": 0.3179597248936008}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) ,FirstVNF_CPU_Server )", "choosing": "( Min( Min( Min( DS ,RCSe ) ,( RRSe * MUC ) ) ,MUM ) - ( CS - ( MUM + Max( DS,RMSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.07985680803721909}, {"determining": "( ( ( ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Max( AMS,PN ) ) / Min( ACS ,( FirstVNF_Mem - ( ARS / ( AMS + Const ) ) ) ) ) * Min( Const ,RRS ) )", "choosing": "( Min( DS ,Min( ( RRSe + Min( RCSe ,CS ) ) ,RRSe ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RMSe,( CS - ( RRSe + ( ( RMSe + ( MUM - RRSe ) ) / Min( ( RMSe + CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.06005859699381427}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.17061114347362635}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,Min( Const ,CRS ) ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07677165354330709, "obj2": 0.6303484713325482}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( AMS + MRS ) ,( ACS + Const ) ) / ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ( Max( ACS,MRS ) + CRS ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUC,RMSe ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) - RMSe ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.39153454475353433}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( ( ( ACS + Const ) - ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( Max( ( FirstVNF_RAM - ARS ),FirstVNF_CPU_Server ) - DDR ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) - ( Max( ( ( CS - ( ( MLU / Min( DS ,MUM ) ) - ( CS - RCSe ) ) ) * MUC ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.3806528711426976}, {"determining": "Min( ( Max( FirstVNF_Mem,( RRS - ( Const / PN ) ) ) - Max( Max( ( AMS - ACS ),MDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,RRS )", "choosing": "( Min( Min( Min( DS ,RCSe ) ,( MLU * MUC ) ) ,MUM ) - ( RMSe * DS ) )", "obj1": 0.9488188976377953, "obj2": 0.01802931970594876}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( ( Max( Const,FirstVNF_RAM_Server ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( BR * ARS ) ) ) ) ,( Min( ( ARS + ( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / BR ) ) - Min( RRS ,AMS ) ) ) ,Min( CRS ,Const ) ) + MDR ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( Max( ( MUC + ( ( RCSe - Max( CS,( MLU / CS ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( Max( RCSe,DS ) - Min( MUM ,MUC ) ) ) / ( ( MLU * RMSe ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.33924161640609196}, {"determining": "( Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.10826771653543307, "obj2": 0.614456645913484}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Min( AMS ,ARS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.5590367840416248}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / ( MLU + MUM ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.45499950420888785}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - ( FirstVNF_CPU_Server - Max( ( FirstVNF_CPU_Server - ARS ),( FirstVNF_Mem + ACS ) ) ) ) ,ARS )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RMSe,MUM ) ) * ( RMSe - ( RCSe * CS ) ) ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( RRSe,DS ) + ( Min( Min( RMSe ,MLU ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.9330708661417323, "obj2": 0.024691465083978018}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6966083432832256}, {"determining": "( Max( Min( MDR ,FirstVNF_RAM_Server ),Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) ) * Min( Const ,( FirstVNF_Mem_Server * Max( Max( ( FirstVNF_Mem_Server / AMS ),( FirstVNF_Mem * MDR ) ),PN ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,( ( RMSe * MLU ) - ( MLU + MUC ) ) ) / Min( ( ( ( RRSe / MUC ) * MUR ) / MUC ) ,( MUR - Min( DS ,RCSe ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.6080021719758995}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) + MRS ) ) * ( ( AMS / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( MUC / ( ( RRSe * MLU ) * ( RRSe / ( MUM - MUM ) ) ) ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUC,MUM ) ) ) ),( Max( RRSe,RCSe ) * Min( CS ,MUC ) ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.4795861233689533}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.15533258397086236}, {"determining": "( ( ( ( MDR + AMS ) / ( AMS - ACS ) ) + FirstVNF_CPU ) + ( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( Max( MUM,MLU ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,MLU ) / RRSe ) * Min( DS ,( MUC + MLU ) ) ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.7519685039370079, "obj2": 0.12239944922268087}, {"determining": "( Min( DDR ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( Const * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) + MDR ),( Max( MRS,CRS ) / FirstVNF_RAM ) ) ) * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) + RCSe ) - RRSe ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5048594747776268}, {"determining": "( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) * ( ( MDR + RRS ) + ( MRS / DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( MUR + Max( ( MUC / Max( MLU,MLU ) ),MUC ) ) + CS ),( MUM * RRSe ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5053084293377942}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( CRS * ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( CRS * Const ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ),( MUC + CS ) ) - ( ( Min( ( MLU + RCSe ) ,MUM ) - ( CS * DS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.08772254847714944}, {"determining": "( Min( ( ACS + ( FirstVNF_CPU / ( ( CRS - MDR ) * ( MDR * MDR ) ) ) ) ,( ( Min( ( FirstVNF_RAM + ACS ) ,( AMS + MRS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * Min( Const ,Max( ( Max( RRS,Max( ( FirstVNF_Mem / DDR ),BR ) ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),( PN / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MLU * MUC ),Max( ( MUM * ( ( RRSe + MUC ) + MUM ) ),Max( MUR,Min( DS ,RMSe ) ) ) ) - ( DS - DS ) ) - CS )", "obj1": 0.25, "obj2": 0.4842102044616901}, {"determining": "( ( ( Const / ( Min( Max( ARS,ACS ) ,Min( Const ,CRS ) ) + ( FirstVNF_Mem_Server * PN ) ) ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),( RRSe - MUC ) ) + CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( MUM - CS ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.06299212598425197, "obj2": 0.6452450234645636}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( Min( PN ,FirstVNF_CPU_Server ) * BR ) ) ) * ( ( ARS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( Min( RCSe ,Max( ( RCSe * Max( RCSe,MUR ) ),RMSe ) ) - ( RMSe - RCSe ) ) ) - Max( MUC,DS ) ) - CS )", "obj1": 0.3248031496062992, "obj2": 0.4097593079015259}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( AMS ,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ACS + Min( PN ,FirstVNF_RAM_Server ) ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( MUR - RCSe ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,MUR ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,MLU ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4129510800655964}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14537733442563572}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( RRS + ( DDR - PN ) ) ) )", "choosing": "( ( ( ( ( RCSe / Max( Max( ( RCSe - MUC ),MUC ),MUM ) ) / MLU ) + ( Max( DS,DS ) + Max( RCSe,CS ) ) ) - MUM ) - DS )", "obj1": 0.47244094488188976, "obj2": 0.3037202555187457}], "21": [{"determining": "Min( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN + CRS ) ) + Const ) ) ,( ( MDR + RRS ) + ( Max( Max( FirstVNF_RAM,( Max( ( PN / FirstVNF_Mem_Server ),PN ) - ( BR - FirstVNF_Mem ) ) ),Const ) / DDR ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),( Max( RRSe,MLU ) - RCSe ) ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( CS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) ,( ( MDR + RRS ) + ( Max( Max( FirstVNF_RAM,( Max( BR,PN ) - ( BR - FirstVNF_Mem ) ) ),Const ) / DDR ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,Max( Min( RMSe ,MUC ),( RMSe / RMSe ) ) ) / RMSe ),DS ) * ( RCSe / RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( ( ( ACS - AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) * ( ( Min( ( ACS + Const ) ,( AMS + CRS ) ) * ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( CRS * Const ) ) + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( MLU + RCSe ) ,MUM ) - ( CS * DS ) )", "obj1": 0.5118110236220472, "obj2": 0.26308974023604353}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( Max( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.04483703753277162}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.17061114347362635}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( ( Min( ACS ,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( Max( MDR,PN ) * ( ( Min( ( ACS + Const ) ,( ARS + RRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( ( RCSe + RMSe ) - MUR )", "obj1": 0.4566929133858268, "obj2": 0.3179597248936008}, {"determining": "( ( PN + ( BR * FirstVNF_Mem_Server ) ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( CS * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.051181102362204724, "obj2": 0.6667589524887283}, {"determining": "( Min( ( ACS + Min( Const ,( ( CRS - FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,Min( ( MRS - MDR ) ,BR ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ( CRS / ( RRS - ( Max( BR,PN ) + FirstVNF_CPU ) ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( RRSe / DS ) * ( DS * RMSe ) ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUC ) * Min( CS ,MUM ) ) )", "obj1": 0.297244094488189, "obj2": 0.43471801733281273}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - ( FirstVNF_CPU_Server - Max( ( FirstVNF_CPU_Server - ARS ),( FirstVNF_Mem + ACS ) ) ) ) ,ARS )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RMSe,MUM ) ) * ( RMSe - ( RCSe * CS ) ) ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( RRSe,DS ) + ( Min( Min( RMSe ,MLU ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.9330708661417323, "obj2": 0.024691465083978018}, {"determining": "( Min( ( ACS + Min( Const ,( ( ARS - FirstVNF_RAM ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe + MUC ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.3558157195410892}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RRSe ) - ( ( CS - MUM ) + ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) ) )", "obj1": 0.5964566929133859, "obj2": 0.1973354779198635}, {"determining": "( Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,AMS ) * ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,MUC ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.0984251968503937, "obj2": 0.6224065434644908}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6751968503937008, "obj2": 0.15533258397086236}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14537733442563572}, {"determining": "( ( ( ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Max( AMS,PN ) ) / Min( ACS ,( FirstVNF_Mem - ( ARS / ( AMS + Const ) ) ) ) ) * Min( Const ,RRS ) )", "choosing": "( Min( DS ,Min( ( RRSe + Min( RCSe ,CS ) ) ,RRSe ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RMSe,( CS - ( RRSe + ( ( RMSe + ( MUM - RRSe ) ) / Min( ( RMSe + CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.06005859699381427}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / DDR ) - MRS ) ) ) ) + MRS ) ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU * ACS ) ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( Min( MLU ,MUR ),RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.10826771653543307, "obj2": 0.5990454609566335}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + Min( MUM ,MUC ) ) + RCSe ) - RRSe ) ) )", "obj1": 0.6161417322834646, "obj2": 0.18604672671093267}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.34433059458871584}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.3861534187713054}, {"determining": "( ( ( Const / ( Min( Max( ARS,ACS ) ,Min( Const ,CRS ) ) + ( FirstVNF_Mem_Server * PN ) ) ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),( RRSe - MUC ) ) + CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( MUM - CS ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.06299212598425197, "obj2": 0.6452450234645636}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "Min( CRS ,( AMS * DDR ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),Max( DS,RMSe ) ) - CS ) ),( MUC * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( MUC - DS ) ) ,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.006560246636105197}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( ( Max( Const,FirstVNF_RAM_Server ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( BR * ARS ) ) ) ) ,( Min( ( ARS + ( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / BR ) ) - Min( RRS ,AMS ) ) ) ,Min( CRS ,Const ) ) + MDR ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( Max( ( MUC + ( ( RCSe - Max( CS,( MLU / CS ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( Max( RCSe,DS ) - Min( MUM ,MUC ) ) ) / ( ( MLU * RMSe ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.33924161640609196}, {"determining": "( ( ( ACS + Const ) - ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( Max( ( FirstVNF_RAM - ARS ),FirstVNF_CPU_Server ) - DDR ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) - ( Max( ( ( CS - ( ( MLU / Min( DS ,MUM ) ) - ( CS - RCSe ) ) ) * MUC ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.3806528711426976}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( RRS + ( DDR - PN ) ) ) )", "choosing": "( ( ( ( ( RCSe / Max( Max( ( RCSe - MUC ),MUC ),MUM ) ) / MLU ) + ( Max( DS,DS ) + Max( RCSe,CS ) ) ) - MUM ) - DS )", "obj1": 0.47244094488188976, "obj2": 0.3037202555187457}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( MUR + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / RCSe ) - RRSe ) ) )", "obj1": 0.7854330708661418, "obj2": 0.10695221474802034}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( AMS ,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ACS + Min( PN ,FirstVNF_RAM_Server ) ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( MUR - RCSe ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,MUR ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,MLU ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.4129510800655964}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Min( AMS ,ARS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.5590367840416248}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.6966083432832256}, {"determining": "( ( ( ( MDR + AMS ) / ( AMS - ACS ) ) + FirstVNF_CPU ) + ( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( Max( MUM,MLU ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,MLU ) / RRSe ) * Min( DS ,( MUC + MLU ) ) ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.7519685039370079, "obj2": 0.12239944922268087}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( Min( PN ,FirstVNF_CPU_Server ) * BR ) ) ) * ( ( ARS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RRSe,MUC ) ,( Min( RCSe ,Max( ( RCSe * Max( RCSe,MUR ) ),RMSe ) ) - ( RMSe - RCSe ) ) ) - Max( MUC,DS ) ) - CS )", "obj1": 0.3248031496062992, "obj2": 0.4097593079015259}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( DS / ( MLU + MUM ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.45499950420888785}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Min( ( ACS + ( ( Max( CRS,( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,MRS ) ) ) / Min( ( Min( AMS ,FirstVNF_CPU ) * ( MDR * MDR ) ) ,RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS * Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - MDR ) + Min( ARS ,AMS ) ) ,CRS ) / Max( BR,FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - CRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUM ) ,Max( RCSe,RMSe ) ) / Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) ) + Min( ( ( ( CS - MUM ) + Max( ( Min( RRSe ,MUC ) * Min( Max( MUC,MLU ) ,DS ) ),RRSe ) ) - DS ) ,RRSe ) )", "obj1": 0.1279527559055118, "obj2": 0.5801313011043521}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.718503937007874, "obj2": 0.13329785721860998}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / Min( BR ,( ( Min( FirstVNF_CPU ,RRS ) + DDR ) - CRS ) ) ) ),CRS ),Max( CRS,( FirstVNF_RAM * ( ( Min( ARS ,MDR ) * ( BR + MDR ) ) * ( ( ACS / Const ) / ( CRS - ACS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * ( Min( RMSe ,Max( Min( RMSe ,MUC ),( RMSe / RMSe ) ) ) / RMSe ) ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.21653543307086615, "obj2": 0.5219216975753134}, {"determining": "( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN - CRS ) ) + Const ) ) * ( ( MDR + RRS ) + ( MRS / DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( MUR + Max( ( MUC / Max( MLU,MLU ) ),MUC ) ) + CS ),( MUM * RRSe ) ) ) - ( ( CS - MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.2263779527559055, "obj2": 0.5053084293377942}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( CRS * ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( CRS * Const ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ),( MUC + CS ) ) - ( ( Min( ( MLU + RCSe ) ,MUM ) - ( CS * DS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.08772254847714944}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( AMS - ACS ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( ( Max( MUM,MLU ) + RMSe ) - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.1220472440944882, "obj2": 0.5884455357594286}, {"determining": "( Min( ( ACS + ( FirstVNF_CPU / ( ( CRS - MDR ) * ( MDR * MDR ) ) ) ) ,( ( Min( ( FirstVNF_RAM + ACS ) ,( AMS + MRS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * Min( Const ,Max( ( Max( RRS,Max( ( FirstVNF_Mem / DDR ),BR ) ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),( PN / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( MLU * MUC ),Max( ( MUM * ( ( RRSe + MUC ) + MUM ) ),Max( MUR,Min( DS ,RMSe ) ) ) ) - ( DS - DS ) ) - CS )", "obj1": 0.25, "obj2": 0.4842102044616901}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( Min( ( Max( MLU,RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.08257015008252111}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( ARS + RRS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5344631150404995}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.45113517510454476}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,Min( Const ,CRS ) ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2618110236220472, "obj2": 0.47918821415028423}], "22": [{"determining": "( Min( ( ACS + ( FirstVNF_CPU / ( ( CRS - MDR ) * ( MDR * MDR ) ) ) ) ,( ( Min( ( FirstVNF_RAM + ACS ) ,( AMS + MRS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * Min( Const ,Max( ( Max( RRS,Max( ( FirstVNF_Mem / DDR ),BR ) ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),( PN / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( MUR - RCSe ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,MUR ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,MLU ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( CRS - ACS ) + MRS ) ,( Min( RRS ,( PN + CRS ) ) + Const ) ) ,( ( MDR + RRS ) + ( Max( Max( FirstVNF_RAM,( Max( ( PN / FirstVNF_Mem_Server ),PN ) - ( BR - FirstVNF_Mem ) ) ),Const ) / DDR ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),( Max( RRSe,MLU ) - RCSe ) ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( CS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Max( ( Max( RRS,( Max( FirstVNF_CPU,MDR ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) + MDR ),( DDR - DDR ) ) ) * ( FirstVNF_RAM / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe * ( RCSe - ( ( ( Min( DS ,MUC ) + ( MUR / RRSe ) ) - ( ( DS * MUR ) / MUM ) ) / RRSe ) ) ) - ( Min( ( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ) - MUR ) ,MUR ) - Min( RMSe ,MUM ) ) ) / Min( Max( MUR,RRSe ) ,( CS * DS ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7016760559845604}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) * AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * Min( ( BR + MRS ) ,FirstVNF_RAM ) ) - Max( MRS,Min( ACS ,DDR ) ) ) )", "choosing": "( ( Max( MUM,( Min( RRSe ,DS ) * ( DS * RMSe ) ) ) - RCSe ) - ( ( ( DS / RCSe ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2513983601694064}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * ( RCSe * Min( DS ,Min( DS ,DS ) ) ) ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RCSe,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.4883957053177115}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - ( FirstVNF_CPU_Server - Max( ( FirstVNF_CPU_Server - ARS ),( FirstVNF_Mem + ACS ) ) ) ) ,ARS )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RMSe,MUM ) ) * ( RMSe - ( RCSe * CS ) ) ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( RRSe,DS ) + ( Min( Min( RMSe ,MLU ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.9330708661417323, "obj2": 0.024691465083978018}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( CRS + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * Min( MUC ,( DS + MUC ) ) ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4562322581232694}, {"determining": "Min( CRS ,( AMS * DDR ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),Max( DS,RMSe ) ) - CS ) ),( MUC * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( MUC - DS ) ) ,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.006560246636105197}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RRSe ) - ( ( CS - MUM ) + ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) ) )", "obj1": 0.5964566929133859, "obj2": 0.1973354779198635}, {"determining": "( ( Min( ACS ,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( Max( MDR,PN ) * ( ( Min( ( ACS + Const ) ,( ARS + RRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( ( RCSe + RMSe ) - MUR )", "obj1": 0.4566929133858268, "obj2": 0.3179597248936008}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( ( PN + ( BR * FirstVNF_Mem_Server ) ) + Max( MDR,Min( DDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( CS * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.051181102362204724, "obj2": 0.6667589524887283}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( Const + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) + ACS ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ( FirstVNF_Mem - ARS ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ( PN / MRS ) + AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.38977942629674994}, {"determining": "( Min( ( ACS + Min( Const ,( ( ARS - FirstVNF_RAM ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe + MUC ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.3558157195410892}, {"determining": "( Max( CRS,Const ) * ( ( AMS - PN ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) - ( ( Max( ( MLU * ( ( MUM + ( RCSe - DS ) ) - RRSe ) ),( ( MUM + RMSe ) - MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.4231246642141323}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( ARS + RRS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5344631150404995}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / Min( BR ,( ( Min( DDR ,RRS ) + DDR ) - CRS ) ) ) ),CRS ),Max( CRS,( FirstVNF_RAM * ( ( Min( ARS ,MDR ) * ( BR + MDR ) ) * ( ( ACS / Const ) / ( CRS - ACS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * ( Min( RMSe ,Max( Min( RMSe ,MUC ),( RMSe / RMSe ) ) ) / RMSe ) ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( RMSe,RMSe ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.5161511204087978}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5551237736591561}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / DDR ) - MRS ) ) ) ) + MRS ) ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU * ACS ) ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( Min( MLU ,MUR ),RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.10826771653543307, "obj2": 0.5990454609566335}, {"determining": "( Min( ( Max( FirstVNF_Mem,RRS ) - Max( Max( FirstVNF_Mem,DDR ),Max( ( ARS + RRS ),FirstVNF_Mem_Server ) ) ) ,AMS ) * ( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,MUC ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.0984251968503937, "obj2": 0.6224065434644908}, {"determining": "( ( ( Const / ( Min( Max( ARS,ACS ) ,Min( Const ,CRS ) ) + ( FirstVNF_Mem_Server * PN ) ) ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),( RRSe - MUC ) ) + CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( MUM - CS ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.06299212598425197, "obj2": 0.6452450234645636}, {"determining": "( ( ( ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Max( AMS,PN ) ) / Min( ACS ,( FirstVNF_Mem - ( ARS / ( AMS + Const ) ) ) ) ) * Min( Const ,RRS ) )", "choosing": "( Min( DS ,Min( ( RRSe + Min( RCSe ,CS ) ) ,RRSe ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RMSe,( CS - ( RRSe + ( ( RMSe + ( MUM - RRSe ) ) / Min( ( RMSe + CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.06005859699381427}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.34433059458871584}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( MUR + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / RCSe ) - RRSe ) ) )", "obj1": 0.7854330708661418, "obj2": 0.10695221474802034}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( ( Max( Const,FirstVNF_RAM_Server ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( BR * ARS ) ) ) ) ,( Min( ( ARS + ( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / BR ) ) - Min( RRS ,AMS ) ) ) ,Min( CRS ,Const ) ) + MDR ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( Max( ( MUC + ( ( RCSe - Max( CS,( MLU / CS ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( Max( RCSe,DS ) - Min( MUM ,MUC ) ) ) / ( ( MLU * RMSe ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.33924161640609196}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( RRS + ( DDR - PN ) ) ) )", "choosing": "( ( ( ( ( RCSe / Max( Max( ( RCSe - MUC ),MUC ),MUM ) ) / MLU ) + ( Max( DS,DS ) + Max( RCSe,CS ) ) ) - MUM ) - DS )", "obj1": 0.47244094488188976, "obj2": 0.3037202555187457}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + Min( MUM ,MUC ) ) + RCSe ) - RRSe ) ) )", "obj1": 0.6161417322834646, "obj2": 0.18604672671093267}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( Max( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.04483703753277162}, {"determining": "( ( ( ACS + Const ) - ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( Max( ( FirstVNF_RAM - ARS ),FirstVNF_CPU_Server ) - DDR ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) - ( Max( ( ( CS - ( ( MLU / Min( DS ,MUM ) ) - ( CS - RCSe ) ) ) * MUC ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.3806528711426976}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Min( AMS ,ARS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.5590367840416248}, {"determining": "( ( ( ( MDR + AMS ) / ( AMS - ACS ) ) + FirstVNF_CPU ) + ( FirstVNF_RAM_Server - ACS ) )", "choosing": "( ( Max( MUM,MLU ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,MLU ) / RRSe ) * Min( DS ,( MUC + MLU ) ) ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.7519685039370079, "obj2": 0.12239944922268087}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( FirstVNF_Mem_Server + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( Max( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( Min( MUM ,MUC ) - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.04390613953428456}, {"determining": "( ( CRS + FirstVNF_RAM_Server ) + ( CRS * ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( CRS * Const ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.045275590551181105, "obj2": 0.6943979558391188}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14537733442563572}, {"determining": "( Min( ( ACS + ( ( Max( CRS,( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,MRS ) ) ) / Min( ( Min( AMS ,FirstVNF_CPU ) * ( MDR * MDR ) ) ,RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS * Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - MDR ) + Min( ARS ,AMS ) ) ,CRS ) / Max( BR,FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - CRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUM ) ,Max( RCSe,RMSe ) ) / Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) ) + Min( ( ( ( CS - MUM ) + Max( ( Min( RRSe ,MUC ) * Min( Max( MUC,MLU ) ,DS ) ),RRSe ) ) - DS ) ,RRSe ) )", "obj1": 0.1279527559055118, "obj2": 0.5801313011043521}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( CRS * ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( CRS * Const ) ) + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ),( MUC + CS ) ) - ( ( Min( ( MLU + RCSe ) ,MUM ) - ( CS * DS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.08772254847714944}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( AMS - ACS ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( ( Max( MUM,MLU ) + RMSe ) - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.1220472440944882, "obj2": 0.5884455357594286}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( Min( ( Max( MLU,RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.08257015008252111}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.16207059475610677}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13680437967359166}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.1128711318384258}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.17061114347362635}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07874015748031496, "obj2": 0.628561350497309}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( Min( ( Const + ACS ) ,Max( FirstVNF_CPU,ACS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.06445031498834161}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,Min( Const ,CRS ) ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07480314960629922, "obj2": 0.6336325226101904}], "23": [{"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * ( Max( MDR,PN ) * ( ( Min( ( ACS + Const ) ,( ARS + RRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + ( RCSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS + ( FirstVNF_CPU / ( ( CRS - MDR ) * ( MDR * MDR ) ) ) ) ,( ( Min( ( FirstVNF_RAM + ACS ) ,( AMS + MRS ) ) * ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * Min( Const ,Max( ( Max( RRS,Max( ( FirstVNF_Mem / DDR ),BR ) ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ),( PN / FirstVNF_RAM ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( MUR - RCSe ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,MUR ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,MLU ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + Max( ( Min( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) - AMS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( MUR + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( DS + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( CRS + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * Min( MUC ,( DS + MUC ) ) ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4562322581232694}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) * AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * Min( ( BR + MRS ) ,FirstVNF_RAM ) ) - Max( MRS,Min( ACS ,DDR ) ) ) )", "choosing": "( ( Max( MUM,( Min( RRSe ,DS ) * ( DS * RMSe ) ) ) - RCSe ) - ( ( ( DS / RCSe ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2513983601694064}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * ( RCSe * Min( DS ,Min( DS ,DS ) ) ) ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RCSe,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.4883957053177115}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( Max( CRS,Const ) * ( ( AMS - PN ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) - ( ( Max( ( MLU * ( ( MUM + ( RCSe - DS ) ) - RRSe ) ),( ( MUM + RMSe ) - MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.4231246642141323}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ,AMS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS / RCSe ) + RCSe ) - RRSe ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.4480513685213075}, {"determining": "Min( ( Max( FirstVNF_Mem,RRS ) - ( FirstVNF_CPU_Server - Max( ( FirstVNF_CPU_Server - ARS ),( FirstVNF_Mem + ACS ) ) ) ) ,ARS )", "choosing": "( ( Min( ( Max( ( ( DS * Max( RMSe,MUM ) ) * ( RMSe - ( RCSe * CS ) ) ),MUM ) - CS ) ,Min( MLU ,RRSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( Max( RRSe,DS ) + ( Min( Min( RMSe ,MLU ) ,( RMSe + MLU ) ) / MUR ) ) )", "obj1": 0.9330708661417323, "obj2": 0.024691465083978018}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RRSe ) - ( ( CS - MUM ) + ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) ) )", "obj1": 0.5964566929133859, "obj2": 0.1973354779198635}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( Const + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) + ACS ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ( FirstVNF_Mem - ARS ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ( PN / MRS ) + AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.38977942629674994}, {"determining": "( Min( ( ACS + Min( Const ,( ( ARS - FirstVNF_RAM ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe + MUC ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.3558157195410892}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( CS - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.16179176177955207}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Max( MRS,( ARS + RRS ) ) ) * ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - Max( RMSe,MUM ) ) + ( Min( ( MLU * RCSe ) ,Min( RRSe ,RMSe ) ) - RRSe ) ) - ( DS / RCSe ) )", "obj1": 0.9645669291338582, "obj2": 0.014134292094423172}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,Min( Const ,CRS ) ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.08464566929133858, "obj2": 0.6222609509636259}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( ( ( ACS + Const ) - ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( Max( ( FirstVNF_RAM - ARS ),FirstVNF_CPU_Server ) - DDR ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) - ( Max( ( ( CS - ( ( MLU / Min( DS ,MUM ) ) - ( CS - RCSe ) ) ) * MUC ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.3806528711426976}, {"determining": "( Min( ( RRS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Const + Const ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( RMSe - RCSe ) ) - RRSe ) ),( ( MUM + ( ( RCSe - CS ) - Max( MUM,MUC ) ) ) / MLU ) ) * MUR ) * ( ( RCSe + RMSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.33167042200830127}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / DDR ) - MRS ) ) ) ) + MRS ) ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU * ACS ) ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( Min( MLU ,MUR ),RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.10826771653543307, "obj2": 0.5990454609566335}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14537733442563572}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( ARS + RRS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5344631150404995}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( DDR ,MDR ) + RRS ),MRS ) ) * Min( ( Max( ARS,ARS ) / DDR ) ,ACS ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.11650554779952359}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.34433059458871584}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + Min( MUM ,MUC ) ) + RCSe ) - RRSe ) ) )", "obj1": 0.6161417322834646, "obj2": 0.18604672671093267}, {"determining": "( ( Min( ACS ,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) * ( Max( MDR,PN ) * ( ( Min( ( ACS + Const ) ,( ARS + RRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( ( RCSe + RMSe ) - MUR )", "obj1": 0.4566929133858268, "obj2": 0.3179597248936008}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Min( AMS ,ARS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.5590367840416248}, {"determining": "( ( ( ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Max( AMS,PN ) ) / Min( ACS ,( FirstVNF_Mem - ( ARS / ( AMS + Const ) ) ) ) ) * Min( Const ,RRS ) )", "choosing": "( Min( DS ,Min( ( RRSe + Min( RCSe ,CS ) ) ,RRSe ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RMSe,( CS - ( RRSe + ( ( RMSe + ( MUM - RRSe ) ) / Min( ( RMSe + CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.06005859699381427}, {"determining": "Min( CRS ,( AMS * DDR ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),Max( DS,RMSe ) ) - CS ) ),( MUC * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( MUC - DS ) ) ,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.006560246636105197}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( MUR + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / RCSe ) - RRSe ) ) )", "obj1": 0.7854330708661418, "obj2": 0.10695221474802034}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( FirstVNF_Mem_Server + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) * Const ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( Max( Max( ( Min( RRSe ,DS ) / ( RMSe / MLU ) ),MUM ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( Min( MUM ,MUC ) - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.04390613953428456}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.3868295503397797}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / Min( BR ,( ( Min( DDR ,RRS ) + DDR ) - CRS ) ) ) ),CRS ),Max( CRS,( FirstVNF_RAM * ( ( Min( ARS ,MDR ) * ( BR + MDR ) ) * ( ( ACS / Const ) / ( CRS - ACS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * ( Min( RMSe ,Max( Min( RMSe ,MUC ),( RMSe / RMSe ) ) ) / RMSe ) ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( RMSe,RMSe ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.5161511204087978}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( RRS + ( DDR - PN ) ) ) )", "choosing": "( ( ( ( ( RCSe / Max( Max( ( RCSe - MUC ),MUC ),MUM ) ) / MLU ) + ( Max( DS,DS ) + Max( RCSe,CS ) ) ) - MUM ) - DS )", "obj1": 0.47244094488188976, "obj2": 0.3037202555187457}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU - BR ) + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( ( DS * MUR ) / MUM ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.09415529853410967}, {"determining": "( ( ( ( Min( AMS ,FirstVNF_Mem ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - MUM ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.04921259842519685, "obj2": 0.6657021869528913}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),( Const * ACS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( MUC / ( ( CS * ( MUC * CS ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) * ( ( Max( RRSe,RRSe ) + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.548046861548763}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5551237736591561}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13680437967359166}, {"determining": "( Min( ( ACS + ( ( Max( CRS,( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,MRS ) ) ) / Min( ( Min( AMS ,FirstVNF_CPU ) * ( MDR * MDR ) ) ,RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS * Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - MDR ) + Min( ARS ,AMS ) ) ,CRS ) / Max( BR,FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - CRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUM ) ,Max( RCSe,RMSe ) ) / Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) ) + Min( ( ( ( CS - MUM ) + Max( ( Min( RRSe ,MUC ) * Min( Max( MUC,MLU ) ,DS ) ),RRSe ) ) - DS ) ,RRSe ) )", "obj1": 0.1279527559055118, "obj2": 0.5801313011043521}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( MUR + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / RCSe ) - RRSe ) ) )", "obj1": 0.8996062992125984, "obj2": 0.0529365172598429}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + Max( ( DDR + FirstVNF_CPU ),MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( CS * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.6724869734154626}, {"determining": "( ( ( Const - BR ) + FirstVNF_Mem ) + ARS )", "choosing": "( ( ( MUM - CS ) * Max( Max( ( ( Min( ( DS * RRSe ) ,MUC ) * MLU ) * MUM ),DS ),( DS - MUR ) ) ) + ( Min( Max( MUC,MUM ) ,( CS * DS ) ) / Max( Max( Min( MUC ,RCSe ),( Max( Min( MUM ,( RCSe + RCSe ) ),DS ) - CS ) ),( MLU * RMSe ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6453047368417233}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( DS / MUC ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.765748031496063, "obj2": 0.10789775647713529}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ( ACS + Const ) + ACS ) + ( CRS + ( ( FirstVNF_Mem_Server / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,DDR ) ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( CS - ( MUC - ( RCSe + ( RMSe * MUC ) ) ) ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - ( MUM - RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6318897637795275, "obj2": 0.18037571777707812}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( CRS * Const ) ) + FirstVNF_Mem ) ) ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.4625984251968504, "obj2": 0.31697479132446654}], "24": [{"determining": "( Min( ( Min( DDR ,FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * ( Max( MDR,PN ) * ( ( Min( ( ACS + Const ) ,( ARS + RRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( Max( ( MUM + RMSe ),( ( Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) + RMSe ) * MLU ) ) * ( Min( ( DS - RCSe ) ,RRSe ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * ( Max( MDR,PN ) * ( ( Min( ( ACS + Const ) ,( ARS + RRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( ( CS - MUM ) + ( RCSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + Max( ( Min( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) - AMS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( MUR + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( DS + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) * AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * Min( ( BR + MRS ) ,FirstVNF_RAM ) ) - Max( MRS,Min( ACS ,DDR ) ) ) )", "choosing": "( ( Max( MUM,( Min( RRSe ,DS ) * ( DS * RMSe ) ) ) - RCSe ) - ( ( ( DS / RCSe ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2513983601694064}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * ( RCSe * Min( DS ,Min( DS ,DS ) ) ) ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RCSe,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.4883957053177115}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( Max( CRS,Const ) * ( ( AMS - PN ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) - ( ( Max( ( MLU * ( ( MUM + ( RCSe - DS ) ) - RRSe ) ),( ( MUM + RMSe ) - MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.4231246642141323}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( CRS + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * Min( MUC ,( DS + MUC ) ) ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4562322581232694}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / DDR ) - MRS ) ) ) ) + MRS ) ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU * ACS ) ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( Min( MLU ,MUR ),RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.10826771653543307, "obj2": 0.5990454609566335}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,CRS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RRSe ) - ( ( CS - MUM ) + ( ( ( MLU + MUR ) - Max( MUC,RCSe ) ) - RRSe ) ) )", "obj1": 0.8208661417322834, "obj2": 0.09046680662657344}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RRSe ) - ( ( CS - MUM ) + ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) ) )", "obj1": 0.5964566929133859, "obj2": 0.1973354779198635}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( CRS * Const ) ) + FirstVNF_Mem ) ) ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.06443475234960098}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( Const + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) + ACS ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ( FirstVNF_Mem - ARS ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ( PN / MRS ) + AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.38977942629674994}, {"determining": "( Min( ( ACS + ( ( Max( CRS,( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,MRS ) ) ) / Min( ( Min( AMS ,FirstVNF_CPU ) * ( MDR * MDR ) ) ,RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS * Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - MDR ) + Min( ARS ,AMS ) ) ,CRS ) / Max( BR,FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - CRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUM ) ,Max( RCSe,RMSe ) ) / Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) ) + Min( ( ( ( CS - MUM ) + Max( ( Min( RRSe ,MUC ) * Min( Max( MUC,MLU ) ,DS ) ),RRSe ) ) - DS ) ,RRSe ) )", "obj1": 0.1279527559055118, "obj2": 0.5801313011043521}, {"determining": "( Min( ( ACS + Min( Const ,( ( ARS - FirstVNF_RAM ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe + MUC ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.3558157195410892}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( ( ( ACS + Const ) - ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( Max( ( FirstVNF_RAM - ARS ),FirstVNF_CPU_Server ) - DDR ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) - ( Max( ( ( CS - ( ( MLU / Min( DS ,MUM ) ) - ( CS - RCSe ) ) ) * MUC ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.3806528711426976}, {"determining": "( Min( ( RRS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Const + Const ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( RMSe - RCSe ) ) - RRSe ) ),( ( MUM + ( ( RCSe - CS ) - Max( MUM,MUC ) ) ) / MLU ) ) * MUR ) * ( ( RCSe + RMSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.33167042200830127}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / Min( BR ,( ( Min( DDR ,RRS ) + DDR ) - CRS ) ) ) ),CRS ),Max( CRS,( FirstVNF_RAM * ( ( Min( ARS ,MDR ) * ( BR + MDR ) ) * ( ( ACS / Const ) / ( CRS - ACS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * ( Min( RMSe ,Max( Min( RMSe ,MUC ),( RMSe / RMSe ) ) ) / RMSe ) ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( RMSe,RMSe ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.5161511204087978}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( DDR ,MDR ) + RRS ),MRS ) ) * Min( ( Max( ARS,ARS ) / DDR ) ,ACS ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.11650554779952359}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.18274338821110625}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.34433059458871584}, {"determining": "( ( Min( ( CRS - PN ) ,Const ) - ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( ( ( MRS * Const ) - ( PN * PN ) ) + FirstVNF_Mem ) ) + MRS ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( ( MLU * ( ( MUM + ( DS - RRSe ) ) - RRSe ) ),Min( MLU ,MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) - ( ( ( RMSe / RCSe ) - MUM ) - RRSe ) )", "obj1": 0.44881889763779526, "obj2": 0.31706194166501545}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_CPU - BR ) + FirstVNF_Mem ) ) - ( CRS * ARS ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( ( DS * MUR ) / MUM ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.09415529853410967}, {"determining": "( Min( ( ACS + Const ) ,( Max( FirstVNF_Mem_Server,Min( FirstVNF_Mem_Server ,ACS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( RRS + ( DDR - PN ) ) ) )", "choosing": "( ( ( ( ( RCSe / Max( Max( ( RCSe - MUC ),MUC ),MUM ) ) / MLU ) + ( Max( DS,DS ) + Max( RCSe,CS ) ) ) - MUM ) - DS )", "obj1": 0.47244094488188976, "obj2": 0.3037202555187457}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( MUR + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / RCSe ) - RRSe ) ) )", "obj1": 0.7854330708661418, "obj2": 0.10695221474802034}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.6673228346456693, "obj2": 0.1582772794282853}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) ) ,FirstVNF_CPU_Server )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6929133858267716, "obj2": 0.14537733442563572}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Min( AMS ,ARS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.5590367840416248}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + Max( ( DDR + ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) ) ),MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( CS * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.6721212699533402}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( MUR + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / RCSe ) - RRSe ) ) )", "obj1": 0.8996062992125984, "obj2": 0.05272984051240988}, {"determining": "( ( ( ( Min( AMS ,FirstVNF_Mem ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - MUM ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.04921259842519685, "obj2": 0.6657021869528913}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.45588833371630644}, {"determining": "( ( ( ( Min( AMS ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + MDR ) / MRS ) + FirstVNF_Mem ) + Min( RRS ,MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( ( RRSe + DS ) + RRSe ) - ( DS - DS ) ) ),( MLU * ( RRSe - CS ) ) ),( MLU * RMSe ) ) / ( Max( RMSe,MUM ) - ( CS * DS ) ) ) + Min( ( DS - ( ( MUR - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07086614173228346, "obj2": 0.6298290873002832}, {"determining": "( ( ( Const - BR ) + FirstVNF_Mem ) + ARS )", "choosing": "( ( ( MUM - CS ) * Max( Max( ( ( Min( ( DS * RRSe ) ,MUC ) * MLU ) * MUM ),DS ),( DS - MUR ) ) ) + ( Min( Max( MUC,MUM ) ,( CS * DS ) ) / Max( Max( Min( MUC ,RCSe ),( Max( Min( MUM ,( RCSe + RCSe ) ),DS ) - CS ) ),( MLU * RMSe ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6453047368417233}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) ,( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ,( ( AMS / DDR ) - MRS ) ) ) ) + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.937007874015748, "obj2": 0.02127523203962284}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( Min( AMS ,FirstVNF_Mem ) + MDR ) ) + ( CRS + ( ( AMS / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.16532882234937854}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,Min( Const ,CRS ) ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - CS ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.08464566929133858, "obj2": 0.6222609509636259}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + PN ) + AMS ) ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( MUR + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / ( ( DS * RMSe ) * MLU ) ) - RRSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.04306630311910478}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ,AMS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS / RCSe ) + RCSe ) - RRSe ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.4480513685213075}, {"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( CS - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,CS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.1359299503543599}, {"determining": "( ( ( ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Max( AMS,PN ) ) / Min( ACS ,( FirstVNF_Mem - ( ARS / ( AMS + Const ) ) ) ) ) * Min( Const ,RRS ) )", "choosing": "( Min( DS ,Min( ( RRSe + Min( RCSe ,CS ) ) ,RRSe ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RMSe,( CS - ( RRSe + ( ( RMSe + ( MUM - RRSe ) ) / Min( ( RMSe + CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.06005859699381427}, {"determining": "( ( ( ACS + Const ) - ( MRS + ( ( AMS - ACS ) / ( ( FirstVNF_RAM - ( CRS * Const ) ) + FirstVNF_Mem ) ) ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.4625984251968504, "obj2": 0.31697479132446654}, {"determining": "Min( CRS ,( AMS * DDR ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),Max( DS,RMSe ) ) - CS ) ),( MUC * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( MUC - DS ) ) ,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.006560246636105197}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) ,( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( AMS / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ,( ( AMS / DDR ) - MRS ) ) ) ) + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( MLU * RMSe ),Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MLU ) ) ) - CS ),Max( MUC,RCSe ) ) ) / Min( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.02739155173328115}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Max( MRS,( ARS + RRS ) ) ) * ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - Max( RMSe,MUM ) ) + ( Min( ( MLU * RCSe ) ,Min( RRSe ,RMSe ) ) - RRSe ) ) - ( DS / RCSe ) )", "obj1": 0.9645669291338582, "obj2": 0.014134292094423172}], "25": [{"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( CS - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,CS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( DDR ,FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * ( Max( MDR,PN ) * ( ( Min( ( ACS + Const ) ,( ARS + RRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RCSe ) - ( Max( ( MUM + RMSe ),( ( Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) + RMSe ) * MLU ) ) * ( Min( ( DS - RCSe ) ,RRSe ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + Max( ( Min( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) - AMS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( MUR + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( DS + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) * AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * Min( ( BR + MRS ) ,FirstVNF_RAM ) ) - Max( MRS,Min( ACS ,DDR ) ) ) )", "choosing": "( ( Max( MUM,( Min( RRSe ,DS ) * ( DS * RMSe ) ) ) - RCSe ) - ( ( ( DS / RCSe ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2513983601694064}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * ( RCSe * Min( DS ,Min( DS ,DS ) ) ) ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RCSe,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.4883957053177115}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( CRS + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * Min( MUC ,( DS + MUC ) ) ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4562322581232694}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.18274338821110625}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( Const + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) + ACS ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ( FirstVNF_Mem - ARS ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ( PN / MRS ) + AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.38977942629674994}, {"determining": "( Max( CRS,Const ) * ( ( AMS - PN ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( MLU / RMSe ) - ( ( Max( ( MLU * ( ( MUM + ( RCSe - DS ) ) - RRSe ) ),( ( MUM + RMSe ) - MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3090551181102362, "obj2": 0.4231246642141323}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( ( ( ACS + Const ) - ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( Max( ( FirstVNF_RAM - ARS ),FirstVNF_CPU_Server ) - DDR ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) - ( Max( ( ( CS - ( ( MLU / Min( DS ,MUM ) ) - ( CS - RCSe ) ) ) * MUC ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.3806528711426976}, {"determining": "( Min( ( ( ( RRS + FirstVNF_RAM_Server ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( Max( MLU,RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( ( RMSe + RCSe ) + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.0894286785027491}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( Min( AMS ,FirstVNF_Mem ) + MDR ) ) + ( CRS + ( ( AMS / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.1633508765632268}, {"determining": "( ( Min( ( CRS - PN ) ,Const ) - ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( ( ( MRS * Const ) - ( PN * PN ) ) + FirstVNF_Mem ) ) + MRS ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( ( MLU * ( ( MUM + ( DS - RRSe ) ) - RRSe ) ),Min( MLU ,MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) - ( ( ( RMSe / RCSe ) - MUM ) - RRSe ) )", "obj1": 0.44881889763779526, "obj2": 0.31706194166501545}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / DDR ) - MRS ) ) ) ) + MRS ) ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU * ACS ) ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( Min( MLU ,MUR ),RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.10826771653543307, "obj2": 0.5990454609566335}, {"determining": "( Min( ( ACS + Min( Const ,( ( ARS - FirstVNF_RAM ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe + MUC ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.3558157195410892}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / Min( BR ,( ( Min( DDR ,RRS ) + DDR ) - CRS ) ) ) ),CRS ),Max( CRS,( FirstVNF_RAM * ( ( Min( ARS ,MDR ) * ( BR + MDR ) ) * ( ( ACS / Const ) / ( CRS - ACS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * ( Min( RMSe ,Max( Min( RMSe ,MUC ),( RMSe / RMSe ) ) ) / RMSe ) ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( RMSe,RMSe ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.5161511204087978}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( DDR ,MDR ) + RRS ),MRS ) ) * Min( ( Max( ARS,ARS ) / DDR ) ,ACS ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.11650554779952359}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,BR ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ),CRS ),Min( AMS ,ARS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.5590367840416248}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.4547244094488189, "obj2": 0.2968234223513899}, {"determining": "Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) ) ,FirstVNF_CPU_Server )", "choosing": "( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5452332548579351}, {"determining": "( Min( ( RRS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Const + Const ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( RMSe - RCSe ) ) - RRSe ) ),( ( MUM + ( ( RCSe - CS ) - Max( MUM,MUC ) ) ) / MLU ) ) * MUR ) * ( ( RCSe + RMSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.33167042200830127}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RRSe ) - ( ( CS - MUM ) + ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) ) )", "obj1": 0.5964566929133859, "obj2": 0.1973354779198635}, {"determining": "( ( ( ( Min( AMS ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + MDR ) / MRS ) + FirstVNF_Mem ) + Min( RRS ,MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( ( RRSe + DS ) + RRSe ) - ( DS - DS ) ) ),( MLU * ( RRSe - CS ) ) ),( MLU * RMSe ) ) / ( Max( RMSe,MUM ) - ( CS * DS ) ) ) + Min( ( DS - ( ( MUR - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07086614173228346, "obj2": 0.6298290873002832}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( MRS,( ARS + RRS ) ) ) * Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( CRS + ARS ) ) ) ) ,AMS ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,( DS * RCSe ) ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.5327823636186566}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( MRS,( ARS + RRS ) ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.28937007874015747, "obj2": 0.4444785279649738}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Max( MRS,( ARS + RRS ) ) ) * ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - Max( RMSe,MUM ) ) + ( Min( ( MLU * RCSe ) ,Min( RRSe ,RMSe ) ) - RRSe ) ) - ( DS / RCSe ) )", "obj1": 0.9645669291338582, "obj2": 0.014134292094423172}, {"determining": "( Min( ( ACS + ( ( Max( CRS,( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,MRS ) ) ) / Min( ( Min( AMS ,FirstVNF_CPU ) * ( MDR * MDR ) ) ,RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS * Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - MDR ) + Min( ARS ,AMS ) ) ,CRS ) / Max( BR,FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - CRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUM ) ,Max( RCSe,RMSe ) ) / Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) ) + Min( ( ( ( CS - MUM ) + Max( ( Min( RRSe ,MUC ) * Min( Max( MUC,MLU ) ,DS ) ),RRSe ) ) - DS ) ,RRSe ) )", "obj1": 0.1279527559055118, "obj2": 0.5801313011043521}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.34433059458871584}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.20452439254860524}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + AMS ) ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( CS + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / ( ( Min( MLU ,RMSe ) / ( DS / RCSe ) ) * MLU ) ) - RRSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.03659117018613759}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ACS + Const ) ) / ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - RRS ) ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * RCSe ) ) ) + Max( CS,( RCSe + RRSe ) ) )", "obj1": 0.10236220472440945, "obj2": 0.618383769630801}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "Min( CRS ,( AMS * DDR ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),Max( DS,RMSe ) ) - CS ) ),( MUC * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( MUC - DS ) ) ,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.006560246636105197}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + Max( ( DDR + ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) ) ),MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( CS * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.6721212699533402}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.45588833371630644}, {"determining": "( ( ( ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Max( AMS,PN ) ) / Min( ACS ,( FirstVNF_Mem - ( ARS / ( AMS + Const ) ) ) ) ) * Min( Const ,RRS ) )", "choosing": "( Min( DS ,Min( ( RRSe + Min( RCSe ,CS ) ) ,RRSe ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RMSe,( CS - ( RRSe + ( ( RMSe + ( MUM - RRSe ) ) / Min( ( RMSe + CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.06005859699381427}, {"determining": "( ( ( ( Min( AMS ,FirstVNF_Mem ) + MDR ) / ( ACS + ( ACS + Const ) ) ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.08464566929133858, "obj2": 0.6209296001944377}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / CS ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.10426304477112695}, {"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( CS - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,CS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.1359299503543599}, {"determining": "( ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) * ( Min( MRS ,FirstVNF_CPU_Server ) / FirstVNF_CPU ) )", "choosing": "( Max( ( ( MUM - RRSe ) + ( MUR / Min( DS ,( ( MUR * ( CS / RMSe ) ) / ( MUM * ( RMSe / CS ) ) ) ) ) ),( MUC + CS ) ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( MUR - RCSe ) - Min( MUM ,RMSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,CS ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.06443475234960098}, {"determining": "( ( ( ( Min( AMS ,FirstVNF_Mem ) + MDR ) / Const ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - MUM ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.04921259842519685, "obj2": 0.6657021869528913}, {"determining": "( Min( ARS ,( FirstVNF_Mem_Server * ( ( ACS + Max( MRS,( ARS + RRS ) ) ) + ( DDR - MDR ) ) ) ) * ( Min( Max( ( AMS - FirstVNF_RAM_Server ),MRS ) ,( ( FirstVNF_Mem * ( ( DDR * BR ) - Const ) ) - BR ) ) - ( MRS / ( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( RRSe / ( ( MUC - ( MUC / Min( CS ,RMSe ) ) ) - RCSe ) ),( MUC + CS ) ) * ( ( ( MUM / DS ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) - ( ( MUM * Max( RCSe,DS ) ) * Min( MUC ,Max( MLU,MLU ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.15271012520121505}, {"determining": "( ( ( Const - BR ) + FirstVNF_Mem ) + ARS )", "choosing": "( ( ( MUM - CS ) * Max( Max( ( ( Min( ( DS * RRSe ) ,MUC ) * MLU ) * MUM ),DS ),( DS - MUR ) ) ) + ( Min( Max( MUC,MUM ) ,( CS * DS ) ) / Max( Max( Min( MUC ,RCSe ),( Max( Min( MUM ,( RCSe + RCSe ) ),DS ) - CS ) ),( MLU * RMSe ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6453047368417233}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + MRS ) ) )", "choosing": "( ( Max( ( MLU * ( DS * RMSe ) ),MUM ) - CS ) - ( RRSe * RCSe ) )", "obj1": 0.8090551181102362, "obj2": 0.08997736040108602}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( ( Const * AMS ) + DDR ) ) )", "choosing": "( ( MUR + Max( MUC,( ( Max( MUM,MLU ) + RMSe ) / MUR ) ) ) - ( ( MUM + ( CS * ( ( ( RMSe + ( MUR + CS ) ) - RCSe ) * RMSe ) ) ) + ( ( ( DS / RCSe ) / RCSe ) - RRSe ) ) )", "obj1": 0.9035433070866141, "obj2": 0.04679241820736893}], "26": [{"determining": "( Min( ( RRS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ACS + Const ) ) / ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - RRS ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( RMSe - RCSe ) ) - ( MLU * ( DS + RMSe ) ) ) ),( ( MUM + ( ( RCSe - CS ) - Max( MUM,MUC ) ) ) / MLU ) ) * MUR ) * ( ( RCSe + RMSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( CS - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,CS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + Max( ( Min( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) - AMS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( MUR + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( DS + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) * AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * Min( ( BR + MRS ) ,FirstVNF_RAM ) ) - Max( MRS,Min( ACS ,DDR ) ) ) )", "choosing": "( ( Max( MUM,( Min( RRSe ,DS ) * ( DS * RMSe ) ) ) - RCSe ) - ( ( ( DS / RCSe ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2513983601694064}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.4051947852353823}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( DDR ,MDR ) + RRS ),MRS ) ) * Min( ( Max( ARS,ARS ) / DDR ) ,ACS ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.11650554779952359}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( ( ( ACS + Const ) - ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( Max( ( FirstVNF_RAM - ARS ),FirstVNF_CPU_Server ) - DDR ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) - ( Max( ( ( CS - ( ( MLU / Min( DS ,MUM ) ) - ( CS - RCSe ) ) ) * MUC ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.3806528711426976}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( MRS,( ARS + RRS ) ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.28937007874015747, "obj2": 0.4444785279649738}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( Const + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) + ACS ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ( FirstVNF_Mem - ARS ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ( PN / MRS ) + AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.38977942629674994}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( MRS,( ( FirstVNF_RAM - ( CRS + Const ) ) + FirstVNF_Mem ) ) ) * Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - Min( ARS ,AMS ) ) - ( CRS + ARS ) ) ) ) ,AMS ) )", "choosing": "( ( Max( ( ( RMSe * DS ) * MLU ),MUM ) - CS ) - ( ( ( MUM / ( DS * RCSe ) ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / ( RCSe * Min( MLU ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.549520606584601}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( Min( AMS ,FirstVNF_Mem ) + MDR ) ) + ( CRS + ( ( AMS / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6515748031496063, "obj2": 0.1633508765632268}, {"determining": "( Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / DDR ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( CRS ,Const ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM ) ,AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RMSe ) * MLU ) * MUM ) - ( ( DS * Min( ( Max( MLU,( RCSe - RMSe ) ) + DS ) ,Max( DS,RCSe ) ) ) * MLU ) ) - ( ( Max( Min( ( ( MLU + DS ) - ( MUM * MUR ) ) ,CS ),( RMSe / ( DS + MUC ) ) ) + MUR ) + Max( CS,( ( RRSe + ( ( MUR + RMSe ) / Min( ( MUC - MUR ) ,( RRSe + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.47172610086973604}, {"determining": "( ( Min( ( CRS - PN ) ,Const ) - ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( ( ( MRS * Const ) - ( PN * PN ) ) + FirstVNF_Mem ) ) + MRS ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( ( MLU * ( ( MUM + ( DS - RRSe ) ) - RRSe ) ),Min( MLU ,MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) - ( ( ( RMSe / RCSe ) - MUM ) - RRSe ) )", "obj1": 0.44881889763779526, "obj2": 0.31706194166501545}, {"determining": "( Min( ( ACS + Min( Const ,( ( FirstVNF_Mem + FirstVNF_Mem ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) ,( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ,( ( AMS / DDR ) - MRS ) ) ) ) + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( MLU * RMSe ),Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Max( MLU,MLU ) ) - CS ),Max( MUC,RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.02739155173328115}, {"determining": "( Min( ( ACS + Min( Const ,( ( ARS - FirstVNF_RAM ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( RCSe + MUC ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.3558157195410892}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * ( RCSe * Min( DS ,Min( DS ,DS ) ) ) ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RCSe,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.4883957053177115}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.18274338821110625}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( CRS + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * Min( MUC ,( DS + MUC ) ) ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4562322581232694}, {"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.4547244094488189, "obj2": 0.2968234223513899}, {"determining": "( Min( ARS ,( FirstVNF_Mem_Server * ( ( ACS + Max( MRS,( ARS + RRS ) ) ) + ( DDR - MDR ) ) ) ) * ( Min( Max( ( AMS - FirstVNF_RAM_Server ),MRS ) ,( ( FirstVNF_Mem * ( ( DDR * BR ) - Const ) ) - BR ) ) - ( MRS / ( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( RRSe / ( ( MUC - ( MUC / Min( CS ,RMSe ) ) ) - RCSe ) ),( MUC + CS ) ) * ( ( ( MUM / DS ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) - ( ( MUM * Max( RCSe,DS ) ) * Min( MUC ,Max( MLU,MLU ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.15271012520121505}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MDR ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / CS ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.10426304477112695}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / Min( BR ,( ( Min( DDR ,RRS ) + DDR ) - CRS ) ) ) ),CRS ),Max( CRS,( FirstVNF_RAM * ( ( Min( ARS ,MDR ) * ( BR + MDR ) ) * ( ( ACS / Const ) / ( CRS - ACS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * ( Min( RMSe ,Max( Min( RMSe ,MUC ),( RMSe / RMSe ) ) ) / RMSe ) ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( RMSe,RMSe ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.5161511204087978}, {"determining": "( Min( ( RRS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Const + Const ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( RMSe - RCSe ) ) - RRSe ) ),( ( MUM + ( ( RCSe - CS ) - Max( MUM,MUC ) ) ) / MLU ) ) * MUR ) * ( ( RCSe + RMSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.33167042200830127}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.45588833371630644}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.34433059458871584}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.20452439254860524}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Max( MRS,( ARS + RRS ) ) ) * ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - Max( RMSe,MUM ) ) + ( Min( ( MLU * RCSe ) ,Min( RRSe ,RMSe ) ) - RRSe ) ) - ( DS / RCSe ) )", "obj1": 0.9645669291338582, "obj2": 0.014134292094423172}, {"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - RCSe ) - ( ( MUM * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( CS - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,CS ) ) * Max( ( RMSe + RCSe ),Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.1359299503543599}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( DDR ,MDR ) + RRS ),MRS ) ) * Min( ( Max( ARS,ARS ) / DDR ) ,ACS ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5375728356339494}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / DDR ) - MRS ) ) ) ) + MRS ) ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU * ACS ) ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( Min( MLU ,MUR ),RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.10826771653543307, "obj2": 0.5990454609566335}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ACS + Const ) ) / ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - RRS ) ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * RCSe ) ) ) + Max( CS,( RCSe + RRSe ) ) )", "obj1": 0.10236220472440945, "obj2": 0.618383769630801}, {"determining": "( ( ( Const - BR ) + FirstVNF_Mem ) + ARS )", "choosing": "( ( ( MUM - CS ) * Max( Max( ( ( Min( ( DS * RRSe ) ,MUC ) * MLU ) * MUM ),DS ),( DS - MUR ) ) ) + ( Min( Max( MUC,MUM ) ,( CS * DS ) ) / Max( Max( Min( MUC ,RCSe ),( Max( Min( MUM ,( RCSe + RCSe ) ),DS ) - CS ) ),( MLU * RMSe ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6453047368417233}, {"determining": "( ( ( ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Max( AMS,PN ) ) / Min( ACS ,( FirstVNF_Mem - ( ARS / ( AMS + Const ) ) ) ) ) * Min( Const ,RRS ) )", "choosing": "( Min( DS ,Min( ( RRSe + Min( RCSe ,CS ) ) ,RRSe ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RMSe,( CS - ( RRSe + ( ( RMSe + ( MUM - RRSe ) ) / Min( ( RMSe + CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.06005859699381427}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( ( Const * AMS ) + DDR ) ) )", "choosing": "( ( MUR + Max( MUC,( ( Max( MUM,MLU ) + RMSe ) / MUR ) ) ) - ( ( MUM + ( CS * ( ( ( RMSe + ( MUR + CS ) ) - RCSe ) * RMSe ) ) ) + ( ( ( DS / RCSe ) / RCSe ) - RRSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.0725262592451475}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RRSe ) - ( ( CS - MUM ) + ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) ) )", "obj1": 0.5964566929133859, "obj2": 0.1973354779198635}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + AMS ) ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( CS + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / ( ( Min( MLU ,RMSe ) / ( DS / RCSe ) ) * MLU ) ) - RRSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.03659117018613759}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + Max( ( DDR + ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) ) ),MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( CS * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.6721212699533402}, {"determining": "( ( ( ( Min( AMS ,FirstVNF_Mem ) + MDR ) / ( ACS + ( ACS + Const ) ) ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.08464566929133858, "obj2": 0.6209296001944377}, {"determining": "Min( CRS ,( AMS * DDR ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),Max( DS,RMSe ) ) - CS ) ),( MUC * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( MUC - DS ) ) ,RRSe ) )", "obj1": 0.9763779527559056, "obj2": 0.006560246636105197}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ACS + Const ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.591788092547219}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_CPU_Server * ( CRS + PN ) ) + PN ) + AMS ) ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.8996062992125984, "obj2": 0.0507203420123093}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + MRS ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / CS ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.8208661417322834, "obj2": 0.08473940940626205}, {"determining": "( ( ( ( Min( AMS ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + MDR ) / MRS ) + FirstVNF_Mem ) + Min( RRS ,MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( ( RRSe + DS ) + RRSe ) - ( DS - DS ) ) ),( MLU * ( RRSe - CS ) ) ),( MLU * RMSe ) ) / ( Max( RMSe,MUM ) - ( CS * DS ) ) ) + Min( ( DS - ( ( MUR - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07086614173228346, "obj2": 0.6298290873002832}, {"determining": "( Min( ( ACS + ( ( Max( CRS,( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,MRS ) ) ) / Min( ( Min( AMS ,FirstVNF_CPU ) * ( MDR * MDR ) ) ,RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS * Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - MDR ) + Min( ARS ,AMS ) ) ,CRS ) / Max( BR,FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - CRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUM ) ,Max( RCSe,RMSe ) ) / Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) ) + Min( ( ( ( CS - MUM ) + Max( ( Min( RRSe ,MUC ) * Min( Max( MUC,MLU ) ,DS ) ),RRSe ) ) - DS ) ,RRSe ) )", "obj1": 0.1279527559055118, "obj2": 0.5801313011043521}], "27": [{"determining": "( FirstVNF_Mem_Server * ( ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) ) - RCSe ) - ( ( MUM * MUM ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ACS + Const ) ) / ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - RRS ) ) + FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( RMSe - RCSe ) ) - ( MLU * ( DS + RMSe ) ) ) ),( ( MUM + ( ( RCSe - CS ) - Max( MUM,MUC ) ) ) / MLU ) ) * MUR ) * ( ( RCSe + RMSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + Max( ( Min( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) - AMS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( MUR + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( DS + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.4051947852353823}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "Max( Max( ( ( Min( MRS ,Max( RRS,FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) / ( ( AMS + MRS ) / Min( BR ,( ( Min( DDR ,RRS ) + DDR ) - CRS ) ) ) ),CRS ),Max( CRS,( FirstVNF_RAM * ( ( Min( ARS ,MDR ) * ( BR + MDR ) ) * ( ( ACS / Const ) / ( CRS - ACS ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * ( Min( RMSe ,Max( Min( RMSe ,MUC ),( RMSe / RMSe ) ) ) / RMSe ) ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( DS - RCSe ) ) - RRSe ) ),( MLU / MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( RMSe,RMSe ) ) ) )", "obj1": 0.20866141732283464, "obj2": 0.5161511204087978}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( DDR ,MDR ) + RRS ),MRS ) ) * Min( ( Max( ARS,ARS ) / DDR ) ,ACS ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5375728356339494}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) * AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * Min( ( BR + MRS ) ,FirstVNF_RAM ) ) - Max( MRS,Min( ACS ,DDR ) ) ) )", "choosing": "( ( Max( MUM,( Min( RRSe ,DS ) * ( DS * RMSe ) ) ) - RCSe ) - ( ( ( DS / RCSe ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2513983601694064}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( Const + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) + ACS ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ( FirstVNF_Mem - ARS ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ( PN / MRS ) + AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.38977942629674994}, {"determining": "( ( ( Const - BR ) + FirstVNF_Mem ) + ARS )", "choosing": "( ( ( MUM - CS ) * Max( Max( ( ( Min( ( DS * RRSe ) ,MUC ) * MLU ) * MUM ),DS ),( DS - MUR ) ) ) + ( Min( Max( MUC,MUM ) ,( CS * DS ) ) / Max( Max( Min( MUC ,RCSe ),( Max( Min( MUM ,( RCSe + RCSe ) ),DS ) - CS ) ),( MLU * RMSe ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6453047368417233}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( MRS,( ( FirstVNF_RAM - ( CRS + Const ) ) + FirstVNF_Mem ) ) ) * Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - Min( ARS ,AMS ) ) - ( CRS + ARS ) ) ) ) ,AMS ) )", "choosing": "( ( Max( ( ( RMSe * DS ) * MLU ),MUM ) - CS ) - ( ( ( MUM / ( DS * RCSe ) ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / ( RCSe * Min( MLU ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.549520606584601}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( ( ARS * BR ) * ( ( AMS - ACS ) + ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - ( MUR / MUM ) ) - ( ( Max( MLU,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.10164129597781715}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( MRS,( ARS + RRS ) ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.28937007874015747, "obj2": 0.4444785279649738}, {"determining": "( ( Min( ( CRS - PN ) ,Const ) - ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( ( ( MRS * Const ) - ( PN * PN ) ) + FirstVNF_Mem ) ) + MRS ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( ( MLU * ( ( MUM + ( DS - RRSe ) ) - RRSe ) ),Min( MLU ,MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) - ( ( ( RMSe / RCSe ) - MUM ) - RRSe ) )", "obj1": 0.44881889763779526, "obj2": 0.31706194166501545}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * ( RCSe * Min( DS ,Min( DS ,DS ) ) ) ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RCSe,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.4883957053177115}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.18274338821110625}, {"determining": "( ( ( ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Max( AMS,PN ) ) / Min( ACS ,( FirstVNF_Mem - ( ARS / ( AMS + Const ) ) ) ) ) * Min( Const ,RRS ) )", "choosing": "( Min( DS ,Min( ( RRSe + Min( RCSe ,CS ) ) ,RRSe ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RMSe,( CS - ( RRSe + ( ( RMSe + ( MUM - RRSe ) ) / Min( ( RMSe + CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.06005859699381427}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.4547244094488189, "obj2": 0.2968234223513899}, {"determining": "( ( ( ACS + Const ) - ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( Max( ( FirstVNF_RAM - ARS ),FirstVNF_CPU_Server ) - DDR ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) - ( Max( ( ( CS - ( ( MLU / Min( DS ,MUM ) ) - ( CS - RCSe ) ) ) * MUC ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.3806528711426976}, {"determining": "( Min( ( RRS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Const + Const ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( RMSe - RCSe ) ) - RRSe ) ),( ( MUM + ( ( RCSe - CS ) - Max( MUM,MUC ) ) ) / MLU ) ) * MUR ) * ( ( RCSe + RMSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.33167042200830127}, {"determining": "( ( ( ( Min( AMS ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + MDR ) / MRS ) + FirstVNF_Mem ) + Min( RRS ,MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( ( RRSe + DS ) + RRSe ) - ( DS - DS ) ) ),( MLU * ( RRSe - CS ) ) ),( MLU * RMSe ) ) / ( Max( RMSe,MUM ) - ( CS * DS ) ) ) + Min( ( DS - ( ( MUR - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07086614173228346, "obj2": 0.6298290873002832}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + RRS ) ) ) * ( Min( ( ( Min( AMS ,FirstVNF_Mem ) + MDR ) / Const ) ,FirstVNF_Mem ) + Min( RRS ,MDR ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( Min( MUR ,RCSe ) - Min( MUM ,MUM ) ) ) / ( ( Min( MUM ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + CS ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6496062992125984, "obj2": 0.16627780786152235}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Min( ( ACS + Const ) ,( AMS + MRS ) ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RRSe ) - ( ( CS - ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) ) + ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) ) )", "obj1": 0.8070866141732284, "obj2": 0.08969036825583887}, {"determining": "( Min( AMS ,( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + MRS ) ) + ARS ) ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) )", "choosing": "( ( RCSe - MUR ) - ( ( ( Max( RRSe,( Max( Max( MUM,RMSe ),Max( DS,MUM ) ) / MUM ) ) - ( ( RMSe / MLU ) / CS ) ) - MUC ) * Max( Max( ( CS * ( RMSe / ( RCSe * RMSe ) ) ),RRSe ),( ( MUR / CS ) - ( Max( MLU,Max( ( MUC * RMSe ),( DS * MUR ) ) ) / MUM ) ) ) ) )", "obj1": 0.5118110236220472, "obj2": 0.2493232814157658}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( DDR ,MDR ) + RRS ),MRS ) ) * Min( ( Max( ARS,ARS ) / DDR ) ,ACS ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.11650554779952359}, {"determining": "( Min( ( ACS + ( ( Max( CRS,( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,MRS ) ) ) / Min( ( Min( AMS ,FirstVNF_CPU ) * ( MDR * MDR ) ) ,RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS * Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - MDR ) + Min( ARS ,AMS ) ) ,CRS ) / Max( BR,FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - CRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUM ) ,Max( RCSe,RMSe ) ) / Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) ) + Min( ( ( ( CS - MUM ) + Max( ( Min( RRSe ,MUC ) * Min( Max( MUC,MLU ) ,DS ) ),RRSe ) ) - DS ) ,RRSe ) )", "obj1": 0.1279527559055118, "obj2": 0.5801313011043521}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.20452439254860524}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / DDR ) - MRS ) ) ) ) + MRS ) ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU * ACS ) ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( Min( MLU ,MUR ),RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.10826771653543307, "obj2": 0.5990454609566335}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * ( ( ( MDR + ( RRS / FirstVNF_CPU_Server ) ) + AMS ) / Const ) )", "choosing": "( Max( CS,Max( ( ( MUM - ( ( ( RCSe / DS ) * RRSe ) * MUR ) ) + MLU ),MUM ) ) - ( RRSe / RRSe ) )", "obj1": 0.7598425196850394, "obj2": 0.11497312164559996}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ACS + Const ) ) / ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM - RRS ) ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * RCSe ) ) ) + Max( CS,( RCSe + RRSe ) ) )", "obj1": 0.10236220472440945, "obj2": 0.618383769630801}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Max( MRS,( ARS + RRS ) ) ) * ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - Max( RMSe,MUM ) ) + ( Min( ( MLU * RCSe ) ,Min( RRSe ,RMSe ) ) - RRSe ) ) - ( DS / RCSe ) )", "obj1": 0.9645669291338582, "obj2": 0.014134292094423172}, {"determining": "( Min( ( ACS + Min( Const ,( ( FirstVNF_Mem + FirstVNF_Mem ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) ,( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ,( ( AMS / DDR ) - MRS ) ) ) ) + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / CS ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.937007874015748, "obj2": 0.02127523203962284}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( Min( Const ,RRS ) ,MDR ) + RRS ),MRS ) ) * Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( CRS + ARS ) ) ) ) ,ACS ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( MUR ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( RMSe + ( MUM - RRSe ) ) / Min( ( RMSe + CS ) ,( RRSe + MUR ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.005941010937847866}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( CRS + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * Min( MUC ,( DS + MUC ) ) ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4562322581232694}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + Max( MRS,( ARS + RRS ) ) ) + ( DDR - MDR ) ) ) ) )", "choosing": "( ( Max( ( MLU * ( DS * RMSe ) ),Max( ( ( DS * RMSe ) * MLU ),MUM ) ) - CS ) - ( RRSe * RCSe ) )", "obj1": 0.8523622047244095, "obj2": 0.06843941291627567}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * ( DS * RMSe ) ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.6968503937007874, "obj2": 0.14537524441809765}, {"determining": "( ( ( ( Min( AMS ,FirstVNF_Mem ) + MDR ) / ( ACS + ( ACS + Const ) ) ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.08464566929133858, "obj2": 0.6209296001944377}, {"determining": "( Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / DDR ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( CRS ,Const ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM ) ,AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RMSe ) * MLU ) * MUM ) - ( ( DS * Min( ( Max( MLU,( RCSe - RMSe ) ) + DS ) ,Max( DS,RCSe ) ) ) * MLU ) ) - ( ( Max( Min( ( ( MLU + DS ) - ( MUM * MUR ) ) ,CS ),( RMSe / ( DS + MUC ) ) ) + MUR ) + Max( CS,( ( RRSe + ( ( MUR + RMSe ) / Min( ( MUC - MUR ) ,( RRSe + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.47172610086973604}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ACS + Const ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.591788092547219}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( ( Const * AMS ) + DDR ) ) )", "choosing": "( ( MUR + Max( MUC,( ( Max( MUM,MLU ) + RMSe ) / MUR ) ) ) - ( ( MUM + ( CS * ( ( ( RMSe + ( MUR + CS ) ) - RCSe ) * RMSe ) ) ) + ( ( ( DS / RCSe ) / RCSe ) - RRSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.0725262592451475}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + AMS ) ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( CS + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / ( ( Min( MLU ,RMSe ) / ( DS / RCSe ) ) * MLU ) ) - RRSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.03659117018613759}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_CPU_Server * ( CRS + PN ) ) + PN ) + AMS ) ) ) * ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.8996062992125984, "obj2": 0.0507203420123093}, {"determining": "( Min( ARS ,( FirstVNF_Mem_Server * ( ( ACS + Max( MRS,( ARS + RRS ) ) ) + ( DDR - MDR ) ) ) ) * ( Min( Max( ( AMS - FirstVNF_RAM_Server ),MRS ) ,( ( FirstVNF_Mem * ( ( DDR * BR ) - Const ) ) - BR ) ) - ( MRS / ( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( RRSe / ( ( MUC - ( MUC / Min( CS ,RMSe ) ) ) - RCSe ) ),( MUC + CS ) ) * ( ( ( MUM / DS ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) - ( ( MUM * Max( RCSe,DS ) ) * Min( MUC ,Max( MLU,MLU ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.15271012520121505}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( Min( AMS ,FirstVNF_Mem ) + MDR ) ) + ( CRS + ( ( AMS / ACS ) / ( CRS + FirstVNF_Mem ) ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,RMSe ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6673228346456693, "obj2": 0.1561548547203078}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + Max( ( DDR + ( FirstVNF_Mem_Server * ( ( ACS + ( FirstVNF_RAM + Const ) ) + ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) ) ),MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),MUM ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.6721212699533402}], "28": [{"determining": "( FirstVNF_Mem_Server * ( ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) ) - RCSe ) - ( ( MUM * MUM ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) ) - RCSe ) - ( ( MUM * MUM ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + Max( ( Min( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) - AMS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( MUR + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( DS + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( ( ( ACS + Const ) - ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( Max( ( FirstVNF_RAM - ARS ),FirstVNF_CPU_Server ) - DDR ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) - ( Max( ( ( CS - ( ( MLU / Min( DS ,MUM ) ) - ( CS - RCSe ) ) ) * MUC ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.3806528711426976}, {"determining": "( Min( ( RRS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Const + Const ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( RMSe - RCSe ) ) - RRSe ) ),( ( MUM + ( ( RCSe - CS ) - Max( MUM,MUC ) ) ) / MLU ) ) * MUR ) * ( ( RCSe + RMSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.33167042200830127}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5150789656826831}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.4051947852353823}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( RMSe / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4423852210766487}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( MRS,( ( FirstVNF_RAM - ( CRS + Const ) ) + FirstVNF_Mem ) ) ) * Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - Min( ARS ,AMS ) ) - ( CRS + ARS ) ) ) ) ,AMS ) )", "choosing": "( ( Max( ( ( RMSe * DS ) * MLU ),MUM ) - CS ) - ( ( ( MUM / ( DS * RCSe ) ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / ( RCSe * Min( MLU ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.549520606584601}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * ( RCSe * Min( DS ,Min( DS ,DS ) ) ) ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RCSe,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.4883957053177115}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Min( ( ACS + Const ) ,( AMS + MRS ) ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( DS / RRSe ) - ( ( CS - ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) ) + ( ( ( MLU + RMSe ) - Max( MUC,RCSe ) ) - RRSe ) ) )", "obj1": 0.8070866141732284, "obj2": 0.08969036825583887}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) * AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * Min( ( BR + MRS ) ,FirstVNF_RAM ) ) - Max( MRS,Min( ACS ,DDR ) ) ) )", "choosing": "( ( Max( MUM,( Min( RRSe ,DS ) * ( DS * RMSe ) ) ) - RCSe ) - ( ( ( DS / RCSe ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2513983601694064}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( Const + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) + ACS ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ( FirstVNF_Mem - ARS ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ( PN / MRS ) + AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.38977942629674994}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( ( Min( ( CRS - PN ) ,Const ) - ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( ( ( MRS * Const ) - ( PN * PN ) ) + FirstVNF_Mem ) ) + MRS ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( ( MLU * ( ( MUM + ( DS - RRSe ) ) - RRSe ) ),Min( MLU ,MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) - ( ( ( RMSe / RCSe ) - MUM ) - RRSe ) )", "obj1": 0.44881889763779526, "obj2": 0.31706194166501545}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.18274338821110625}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.20452439254860524}, {"determining": "( ( ( Const - BR ) + FirstVNF_Mem ) + ARS )", "choosing": "( ( ( MUM - CS ) * Max( Max( ( ( Min( ( DS * RRSe ) ,MUC ) * MLU ) * MUM ),DS ),( DS - MUR ) ) ) + ( Min( Max( MUC,MUM ) ,( CS * DS ) ) / Max( Max( Min( MUC ,RCSe ),( Max( Min( MUM ,( RCSe + RCSe ) ),DS ) - CS ) ),( MLU * RMSe ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6453047368417233}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ACS + ( FirstVNF_Mem * ( DDR * Const ) ) ) + AMS ) ) * ( Max( ( ( Const + ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM ),RRS ) / FirstVNF_CPU ) ) / BR ),FirstVNF_RAM ) - ( ( Const * AMS ) + DDR ) ) )", "choosing": "( ( MUR + Max( MUC,( ( Max( MUC,MLU ) + RMSe ) / MUM ) ) ) - ( ( ( ( DS / RCSe ) / RCSe ) - RRSe ) + ( MUM + Min( RRSe ,Max( ( ( ( MUR - MUC ) / Min( RRSe ,MUC ) ) / MUM ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.07221108736864458}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + AMS ) ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.8996062992125984, "obj2": 0.05050915238907967}, {"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.4547244094488189, "obj2": 0.2968234223513899}, {"determining": "( Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / DDR ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( CRS ,Const ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM ) ,AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RMSe ) * MLU ) * MUM ) - ( ( DS * Min( ( Max( MLU,( RCSe - RMSe ) ) + DS ) ,Max( DS,RCSe ) ) ) * MLU ) ) - ( ( Max( Min( ( ( MLU + DS ) - ( MUM * MUR ) ) ,CS ),( RMSe / ( DS + MUC ) ) ) + MUR ) + Max( CS,( ( RRSe + ( ( MUR + RMSe ) / Min( ( MUC - MUR ) ,( RRSe + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.47172610086973604}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + AMS ) ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( CS + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / ( ( Min( MLU ,RMSe ) / ( DS / RCSe ) ) * MLU ) ) - RRSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.03659117018613759}, {"determining": "( Min( AMS ,( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + MRS ) ) + ARS ) ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) )", "choosing": "( ( RCSe - MUR ) - ( ( ( Max( RRSe,( Max( Max( MUM,RMSe ),Max( DS,MUM ) ) / MUM ) ) - ( ( RMSe / MLU ) / CS ) ) - MUC ) * Max( Max( ( CS * ( RMSe / ( RCSe * RMSe ) ) ),RRSe ),( ( MUR / CS ) - ( Max( MLU,Max( ( MUC * RMSe ),( DS * MUR ) ) ) / MUM ) ) ) ) )", "obj1": 0.5118110236220472, "obj2": 0.2493232814157658}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( DDR ,MDR ) + RRS ),MRS ) ) * Min( ( Max( ARS,ARS ) / DDR ) ,ACS ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.11650554779952359}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / DDR ) - MRS ) ) ) ) + MRS ) ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU * ACS ) ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( Min( MLU ,MUR ),RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.10826771653543307, "obj2": 0.5990454609566335}, {"determining": "( Max( ( ARS + ( ( ( Min( ARS ,( DDR / MDR ) ) * RRS ) - FirstVNF_Mem ) + ( AMS * FirstVNF_CPU_Server ) ) ),Min( RRS ,( ACS - FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * ( DS / RMSe ) ) + MLU ),MUM ) - ( RMSe + MUR ) ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( MUR * ( ( ( RCSe + ( MUC / MUR ) ) / Max( MUR,Min( RMSe ,MUC ) ) ) * RCSe ) ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.6279527559055118, "obj2": 0.18086474026769764}, {"determining": "( ( ( ( Min( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ,FirstVNF_Mem ) + MDR ) / ( ACS + ( ACS + Const ) ) ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( MUM,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.615889994113618}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( Min( AMS ,FirstVNF_Mem ) + MDR ) ) + ( CRS + ( ( AMS / ACS ) / ( CRS + FirstVNF_Mem ) ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,RMSe ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6948818897637795, "obj2": 0.1453387788544288}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + RRS ) ) ) * ( Min( ( ( Min( AMS ,FirstVNF_Mem ) + MDR ) / Const ) ,FirstVNF_Mem ) + Min( RRS ,MDR ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( Min( MUR ,RCSe ) - Min( MUM ,MUM ) ) ) / ( ( Min( MUM ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + CS ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6496062992125984, "obj2": 0.16627780786152235}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + Max( MRS,( ARS + RRS ) ) ) + ( DDR - MDR ) ) ) ) )", "choosing": "( ( Max( ( MLU * ( DS * RMSe ) ),Max( ( ( DS * RMSe ) * MLU ),MUM ) ) - CS ) - ( RRSe * RCSe ) )", "obj1": 0.8523622047244095, "obj2": 0.06843941291627567}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) * ( ( ( MDR + ( RRS / FirstVNF_CPU_Server ) ) + AMS ) / Const ) )", "choosing": "( Max( CS,Max( ( ( MUM - ( ( ( RCSe / DS ) * RRSe ) * MUR ) ) + MLU ),MUM ) ) - ( RRSe / RRSe ) )", "obj1": 0.7598425196850394, "obj2": 0.11497312164559996}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + Max( ( DDR + ( FirstVNF_Mem_Server * ( ( ACS + ( FirstVNF_RAM + Const ) ) + ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) ) ),MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),MUM ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.051181102362204724, "obj2": 0.6701805006693531}, {"determining": "( Min( ( Max( CRS,FirstVNF_CPU_Server ) / Max( MRS,( ARS + RRS ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.7086614173228346, "obj2": 0.13428091776010928}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( CRS + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * Min( MUC ,( DS + MUC ) ) ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4562322581232694}, {"determining": "( ( ( ( Min( AMS ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + MDR ) / MRS ) + FirstVNF_Mem ) + Min( RRS ,MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( ( RRSe + DS ) + RRSe ) - ( DS - DS ) ) ),( MLU * ( RRSe - CS ) ) ),( MLU * RMSe ) ) / ( Max( RMSe,MUM ) - ( CS * DS ) ) ) + Min( ( DS - ( ( MUR - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07086614173228346, "obj2": 0.6298290873002832}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + Max( ( DDR + ( FirstVNF_Mem_Server * ( ( ACS + ( FirstVNF_RAM + Const ) ) + ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) ) ),MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),MUM ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.6721212699533402}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Max( MRS,( ARS + RRS ) ) ) * ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - Max( RMSe,MUM ) ) + ( Min( ( MLU * RCSe ) ,Min( RRSe ,RMSe ) ) - RRSe ) ) - ( DS / RCSe ) )", "obj1": 0.9645669291338582, "obj2": 0.014134292094423172}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( Min( AMS ,FirstVNF_Mem ) + MDR ) ) + ( Max( MRS,( ARS + RRS ) ) + ( ( AMS / ACS ) / ( CRS + FirstVNF_Mem ) ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( MUC + ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,RMSe ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.781496062992126, "obj2": 0.10234846984700263}, {"determining": "( Min( ( ACS + ( ( Max( CRS,( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,MRS ) ) ) / Min( ( Min( AMS ,FirstVNF_CPU ) * ( MDR * MDR ) ) ,RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS * Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - MDR ) + Min( ARS ,AMS ) ) ,CRS ) / Max( BR,FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - CRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUM ) ,Max( RCSe,RMSe ) ) / Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) ) + Min( ( ( ( CS - MUM ) + Max( ( Min( RRSe ,MUC ) * Min( Max( MUC,MLU ) ,DS ) ),RRSe ) ) - DS ) ,RRSe ) )", "obj1": 0.1279527559055118, "obj2": 0.5801313011043521}, {"determining": "( ( ARS * BR ) * ( ( AMS - ACS ) + ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( RMSe - ( MUR / MUM ) ) - ( ( Max( MLU,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.10164129597781715}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( ACS * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * ( ( RMSe + ( MUR + CS ) ) - RCSe ) ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.4597461187737523}, {"determining": "( Max( FirstVNF_Mem_Server,( ( FirstVNF_Mem / FirstVNF_CPU ) / FirstVNF_Mem_Server ) ) * ( Max( ACS,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( MLU * ( DS * RMSe ) ),MUM ) - ( ( DS * RMSe ) * ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RMSe * RMSe ) ) ) ) )", "obj1": 0.8759842519685039, "obj2": 0.0568740193975197}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( Min( Const ,RRS ) ,MDR ) + RRS ),MRS ) ) * Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( CRS + ARS ) ) ) ) ,( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( MUR ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( RMSe,MUM ) + ( MUM - RRSe ) ) / Min( ( RMSe + CS ) ,( RRSe + MUR ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.005941010937847866}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( ( ( ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Max( AMS,PN ) ) / Min( ACS ,( FirstVNF_Mem - ( ARS / ( AMS + Const ) ) ) ) ) * Min( Const ,RRS ) )", "choosing": "( Min( DS ,Min( ( RRSe + Min( RCSe ,CS ) ) ,RRSe ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RMSe,( CS - ( RRSe + ( ( RMSe + ( MUM - RRSe ) ) / Min( ( RMSe + CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.06005859699381427}], "29": [{"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( Max( MRS,( ARS + RRS ) ) - ( ( ACS / BR ) * ( Max( FirstVNF_Mem_Server,AMS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( RRSe / MUC ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - ( Max( ( MUC + Max( Min( CS ,RRSe ),( MUC * MUR ) ) ),MLU ) / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server * ( ( Min( Max( DDR,( DDR / Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU_Server ) * MDR ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) ) - RCSe ) - ( ( MUM * MUM ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + Max( ( Min( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) - AMS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( MUR + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( DS + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( Min( ( RRS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Const + Const ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( RMSe - RCSe ) ) - RRSe ) ),( ( MUM + ( ( RCSe - CS ) - Max( MUM,MUC ) ) ) / MLU ) ) * MUR ) * ( ( RCSe + RMSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.33167042200830127}, {"determining": "( ( ( ACS + Const ) - ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( Max( ( FirstVNF_RAM - ARS ),FirstVNF_CPU_Server ) - DDR ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) ) ),( MUC + CS ) ) - ( Max( ( ( CS - ( ( MLU / Min( DS ,MUM ) ) - ( CS - RCSe ) ) ) * MUC ),( MUC + CS ) ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,RCSe ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( MUC ,CS ) ) ) ) ) )", "obj1": 0.35039370078740156, "obj2": 0.3806528711426976}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( RMSe / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4423852210766487}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( MRS,( ( FirstVNF_RAM - ( CRS + Const ) ) + FirstVNF_Mem ) ) ) * Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - Min( ARS ,AMS ) ) - ( CRS + ARS ) ) ) ) ,AMS ) )", "choosing": "( ( Max( ( ( RMSe * DS ) * MLU ),MUM ) - CS ) - ( ( ( MUM / ( DS * RCSe ) ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / ( RCSe * Min( MLU ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.549520606584601}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.4051947852353823}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * ( RCSe * Min( DS ,Min( DS ,DS ) ) ) ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RCSe,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.4883957053177115}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) * AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * Min( ( BR + MRS ) ,FirstVNF_RAM ) ) - Max( MRS,Min( ACS ,DDR ) ) ) )", "choosing": "( ( Max( MUM,( Min( RRSe ,DS ) * ( DS * RMSe ) ) ) - RCSe ) - ( ( ( DS / RCSe ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2513983601694064}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / DDR ) - MRS ) ) ) ) + MRS ) ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU * ACS ) ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( Min( MLU ,MUR ),RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.10826771653543307, "obj2": 0.5990454609566335}, {"determining": "( Min( ( ACS + ( ( Max( CRS,( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,MRS ) ) ) / Min( ( Min( AMS ,FirstVNF_CPU ) * ( MDR * MDR ) ) ,RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS * Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - MDR ) + Min( ARS ,AMS ) ) ,CRS ) / Max( BR,FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - CRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUM ) ,Max( RCSe,RMSe ) ) / Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) ) + Min( ( ( ( CS - MUM ) + Max( ( Min( RRSe ,MUC ) * Min( Max( MUC,MLU ) ,DS ) ),RRSe ) ) - DS ) ,RRSe ) )", "obj1": 0.1279527559055118, "obj2": 0.5801313011043521}, {"determining": "( ( Min( ( CRS - PN ) ,Const ) - ( ( ( FirstVNF_Mem + FirstVNF_Mem ) / ( ( ( MRS * Const ) - ( PN * PN ) ) + FirstVNF_Mem ) ) + MRS ) ) * ( ( AMS - ACS ) / ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( ( MLU * ( ( MUM + ( DS - RRSe ) ) - RRSe ) ),Min( MLU ,MLU ) ) * MUR ) * ( ( RMSe + RCSe ) - Max( ( MLU / MLU ),RMSe ) ) ) - ( ( ( RMSe / RCSe ) - MUM ) - RRSe ) )", "obj1": 0.44881889763779526, "obj2": 0.31706194166501545}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( ACS * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( ACS * ARS ) * FirstVNF_Mem_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * ( ( RMSe + ( MUR + CS ) ) - RCSe ) ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5150789656826831}, {"determining": "( ( ( Const - BR ) + FirstVNF_Mem ) + ARS )", "choosing": "( ( ( MUM - CS ) * Max( Max( ( ( Min( ( DS * RRSe ) ,MUC ) * MLU ) * MUM ),DS ),( DS - MUR ) ) ) + ( Min( Max( MUC,MUM ) ,( CS * DS ) ) / Max( Max( Min( MUC ,RCSe ),( Max( Min( MUM ,( RCSe + RCSe ) ),DS ) - CS ) ),( MLU * RMSe ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6453047368417233}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.20452439254860524}, {"determining": "( Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / DDR ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( CRS ,Const ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM ) ,AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RMSe ) * MLU ) * MUM ) - ( ( DS * Min( ( Max( MLU,( RCSe - RMSe ) ) + DS ) ,Max( DS,RCSe ) ) ) * MLU ) ) - ( ( Max( Min( ( ( MLU + DS ) - ( MUM * MUR ) ) ,CS ),( RMSe / ( DS + MUC ) ) ) + MUR ) + Max( CS,( ( RRSe + ( ( MUR + RMSe ) / Min( ( MUC - MUR ) ,( RRSe + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.47172610086973604}, {"determining": "Min( Min( MRS ,( ( PN + Max( ( Max( FirstVNF_CPU,PN ) * DDR ),FirstVNF_Mem ) ) - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( BR,Max( RRS,Const ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) - ( Max( ( Min( RMSe ,( Min( RMSe ,MLU ) - ( MUM / MUR ) ) ) / RMSe ),RMSe ) * ( RCSe / RCSe ) ) ) / ( ( ( RRSe + RCSe ) - Max( MUM,RMSe ) ) * ( Min( RRSe ,MUM ) * Max( CS,DS ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13030507773879885}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ACS + ( FirstVNF_Mem * ( DDR * Const ) ) ) + AMS ) ) * ( Max( ( ( Const + ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM ),RRS ) / FirstVNF_CPU ) ) / BR ),FirstVNF_RAM ) - ( ( Const * AMS ) + DDR ) ) )", "choosing": "( ( MUR + Max( MUC,( ( Max( MUC,MLU ) + RMSe ) / MUM ) ) ) - ( ( ( ( DS / RCSe ) / RCSe ) - RRSe ) + ( MUM + Min( RRSe ,Max( ( ( ( MUR - MUC ) / Min( RRSe ,MUC ) ) / MUM ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.07221108736864458}, {"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.4547244094488189, "obj2": 0.2968234223513899}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( Min( AMS ,FirstVNF_Mem ) + MDR ) ) + ( CRS + ( ( AMS / ACS ) / ( CRS + FirstVNF_Mem ) ) ) ) ) ,( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,RMSe ) * Max( CS,DS ) ) * ( MLU - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.19452782195047924}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5150789656826831}, {"determining": "( Min( AMS ,( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + MRS ) ) + ARS ) ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) )", "choosing": "( ( RCSe - MUR ) - ( ( ( Max( RRSe,( Max( Max( MUM,RMSe ),Max( DS,MUM ) ) / MUM ) ) - ( ( RMSe / MLU ) / CS ) ) - MUC ) * Max( Max( ( CS * ( RMSe / ( RCSe * RMSe ) ) ),RRSe ),( ( MUR / CS ) - ( Max( MLU,Max( ( MUC * RMSe ),( DS * MUR ) ) ) / MUM ) ) ) ) )", "obj1": 0.5118110236220472, "obj2": 0.2493232814157658}, {"determining": "( ( ( ( Min( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ,FirstVNF_Mem ) + MDR ) / ( ACS + ( ACS + Const ) ) ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( MUM,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.615889994113618}, {"determining": "( ( ( ( Min( AMS ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + MDR ) / MRS ) + FirstVNF_Mem ) + Min( RRS ,MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( ( RRSe + DS ) + RRSe ) - ( DS - DS ) ) ),( MLU * ( RRSe - CS ) ) ),( MLU * RMSe ) ) / ( Max( RMSe,MUM ) - ( CS * DS ) ) ) + Min( ( DS - ( ( MUR - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07086614173228346, "obj2": 0.6298290873002832}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( DDR ,MDR ) + RRS ),MRS ) ) * Min( ( Max( ARS,ARS ) / DDR ) ,ACS ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.11650554779952359}, {"determining": "( Max( FirstVNF_Mem_Server,AMS ) * ( Min( DDR ,MRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),Max( Min( CS ,RMSe ),RCSe ) ) - ( ( DS * RMSe ) + ( ( ( CS * ( RMSe / MLU ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.812992125984252, "obj2": 0.0883321458611245}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ,( ( AMS / DDR ) - MRS ) ) ) ) + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( MLU * ( DS * RMSe ) ),MUM ) - RCSe ) - ( ( ( DS / MUC ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02089020157566251}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Max( MRS,( ARS + RRS ) ) ) * ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - Max( RMSe,MUM ) ) + ( Min( ( MLU * RCSe ) ,Min( RRSe ,RMSe ) ) - RRSe ) ) - ( DS / RCSe ) )", "obj1": 0.9645669291338582, "obj2": 0.014134292094423172}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + AMS ) ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( CS + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / ( ( Min( MLU ,RMSe ) / ( DS / RCSe ) ) * MLU ) ) - RRSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.03659117018613759}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + Max( MRS,( ARS + RRS ) ) ) + ( DDR - MDR ) ) ) ) )", "choosing": "( ( Max( ( MLU * ( DS * RMSe ) ),Max( ( ( DS * RMSe ) * MLU ),MUM ) ) - CS ) - ( RRSe * RCSe ) )", "obj1": 0.8523622047244095, "obj2": 0.06843941291627567}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( Min( Const ,RRS ) ,MDR ) + RRS ),MRS ) ) * Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( CRS + ARS ) ) ) ) ,( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.005665281431049682}, {"determining": "( Min( Min( ( FirstVNF_Mem_Server * ( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) + Max( MRS,( ARS + RRS ) ) ) * ( ARS + ( MRS + ( FirstVNF_RAM_Server + MDR ) ) ) ) ) ,AMS ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( MUR * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.3405511811023622, "obj2": 0.3880967471522711}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + Max( ( DDR + ( FirstVNF_Mem_Server * ( ( ACS + ( FirstVNF_RAM + Const ) ) + ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) ) ),MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),MUM ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.6721212699533402}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + Max( ( DDR + ( FirstVNF_Mem_Server * ( ( ACS + ( FirstVNF_RAM + Const ) ) + ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) ) ),MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),MUM ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.04921259842519685, "obj2": 0.6653553223550246}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( CRS + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * Min( MUC ,( DS + MUC ) ) ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4562322581232694}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + AMS ) ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.8996062992125984, "obj2": 0.05050915238907967}, {"determining": "( ( ( ( ( Min( AMS ,FirstVNF_Mem ) + MDR ) / Const ) + FirstVNF_Mem ) + Min( RRS ,MDR ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.16138410339962939}, {"determining": "( ( ( ( Min( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ,FirstVNF_Mem ) + MDR ) / ( ACS + ( ACS + Const ) ) ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,( Min( ( FirstVNF_Mem_Server * ( MRS + AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( Max( MLU,MLU ) - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( MUM,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.08661417322834646, "obj2": 0.625779603728117}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( BR + MRS ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ,( ( AMS / DDR ) - MRS ) ) ) ) + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( MLU,RMSe ),Max( ( Max( Min( Max( RMSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( MUC,RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.027203998174534165}, {"determining": "( Max( FirstVNF_Mem_Server,( ( FirstVNF_Mem / FirstVNF_CPU ) / FirstVNF_Mem_Server ) ) * ( Max( ACS,AMS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( MLU * ( DS * RMSe ) ),MUM ) - ( ( DS * RMSe ) * ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RMSe * RMSe ) ) ) ) )", "obj1": 0.8759842519685039, "obj2": 0.0568740193975197}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( Const + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) + ACS ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ( FirstVNF_Mem - ARS ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ( PN / MRS ) + AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.38977942629674994}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.18274338821110625}, {"determining": "( ( ( ( ( ACS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) * Max( AMS,PN ) ) / Min( ACS ,( FirstVNF_Mem - ( ARS / ( AMS + Const ) ) ) ) ) * Min( Const ,RRS ) )", "choosing": "( Min( DS ,Min( ( RRSe + Min( RCSe ,CS ) ) ,RRSe ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RMSe,( CS - ( RRSe + ( ( RMSe + ( MUM - RRSe ) ) / Min( ( RMSe + CS ) ,( MUR + RRSe ) ) ) ) ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.06005859699381427}, {"determining": "( Min( AMS ,( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / ( FirstVNF_CPU_Server - PN ) ) + ACS ) + ( Max( MRS,( ARS + RRS ) ) + ( ( AMS / ACS ) / ( CRS + FirstVNF_Mem ) ) ) ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( ( ( MUC + ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,RMSe ) * Max( MUC,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,MUM ) * Min( Min( RMSe ,MUR ) ,( MUC + DS ) ) ) ) ) * Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.15633153775419717}], "30": [{"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Min( Const ,CRS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( DS ,DS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( Max( MRS,( ARS + RRS ) ) - ( ( ACS / BR ) * ( Max( FirstVNF_Mem_Server,AMS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( RRSe / MUC ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - ( Max( ( MUC + Max( Min( CS ,RRSe ),( MUC * MUR ) ) ),MLU ) / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + Max( ( Min( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) - AMS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( MUR + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( DS + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( MRS,( ( FirstVNF_RAM - ( CRS + Const ) ) + FirstVNF_Mem ) ) ) * Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - Min( ARS ,AMS ) ) - ( CRS + ARS ) ) ) ) ,AMS ) )", "choosing": "( ( Max( ( ( RMSe * DS ) * MLU ),MUM ) - CS ) - ( ( ( MUM / ( DS * RCSe ) ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / ( RCSe * Min( MLU ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.549520606584601}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( Const / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + RRSe ) ) ) ) ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.3673225999907523}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6161417322834646, "obj2": 0.18274338821110625}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( ( ( ( ( Min( AMS ,FirstVNF_Mem ) + MDR ) / Const ) + FirstVNF_Mem ) + Min( RRS ,MDR ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.16138410339962939}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.35607987198491975}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( Const + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) + ACS ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ( FirstVNF_Mem - ARS ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ( PN / MRS ) + AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.38977942629674994}, {"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.4547244094488189, "obj2": 0.2968234223513899}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) * AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * Min( ( BR + MRS ) ,FirstVNF_RAM ) ) - Max( MRS,Min( ACS ,DDR ) ) ) )", "choosing": "( ( Max( MUM,( Min( RRSe ,DS ) * ( DS * RMSe ) ) ) - RCSe ) - ( ( ( DS / RCSe ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2513983601694064}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.4051947852353823}, {"determining": "( Min( ( Min( ARS ,FirstVNF_CPU_Server ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( Max( ( MLU / MLU ),RMSe ) - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.42833641302331393}, {"determining": "( Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / DDR ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( CRS ,Const ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM ) ,AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RMSe ) * MLU ) * MUM ) - ( ( DS * Min( ( Max( MLU,( RCSe - RMSe ) ) + DS ) ,Max( DS,RCSe ) ) ) * MLU ) ) - ( ( Max( Min( ( ( MLU + DS ) - ( MUM * MUR ) ) ,CS ),( RMSe / ( DS + MUC ) ) ) + MUR ) + Max( CS,( ( RRSe + ( ( MUR + RMSe ) / Min( ( MUC - MUR ) ,( RRSe + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.47172610086973604}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.31683429857490664}, {"determining": "( Min( ( RRS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Const + Const ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( RMSe - RCSe ) ) - RRSe ) ),( ( MUM + ( ( RCSe - CS ) - Max( MUM,MUC ) ) ) / MLU ) ) * MUR ) * ( ( RCSe + RMSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.33167042200830127}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( CRS + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * Min( MUC ,( DS + MUC ) ) ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4562322581232694}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5150789656826831}, {"determining": "( ( ( Const - BR ) + FirstVNF_Mem ) + ARS )", "choosing": "( ( ( MUM - CS ) * Max( Max( ( ( Min( ( DS * RRSe ) ,MUC ) * MLU ) * MUM ),DS ),( DS - MUR ) ) ) + ( Min( Max( MUC,MUM ) ,( CS * DS ) ) / Max( Max( Min( MUC ,RCSe ),( Max( Min( MUM ,( RCSe + RCSe ) ),DS ) - CS ) ),( MLU * RMSe ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6453047368417233}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.20452439254860524}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / DDR ) - MRS ) ) ) ) + MRS ) ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU * ACS ) ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( Min( MLU ,MUR ),RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.10826771653543307, "obj2": 0.5990454609566335}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.14438679017636247}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( Min( AMS ,FirstVNF_Mem ) + MDR ) ) + ( CRS + ( ( AMS / ACS ) / ( CRS + FirstVNF_Mem ) ) ) ) ) ,( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,RMSe ) * Max( CS,DS ) ) * ( MLU - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.19452782195047924}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( DDR ,MDR ) + RRS ),MRS ) ) * Min( ( Max( ARS,ARS ) / DDR ) ,ACS ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7519685039370079, "obj2": 0.11650554779952359}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( ACS * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( ACS * ARS ) * FirstVNF_Mem_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * ( ( RMSe + ( MUR + CS ) ) - RCSe ) ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5150789656826831}, {"determining": "( Min( AMS ,( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / ( FirstVNF_CPU_Server - PN ) ) + ACS ) + ( Max( MRS,( ARS + RRS ) ) + ( ( AMS / ACS ) / ( CRS + FirstVNF_Mem ) ) ) ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( ( ( MUC + ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,RMSe ) * Max( MUC,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,MUM ) * Min( Min( RMSe ,MUR ) ,( MUC + DS ) ) ) ) ) * Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) ) )", "obj1": 0.6811023622047244, "obj2": 0.15633153775419717}, {"determining": "( Min( AMS ,( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + MRS ) ) + ARS ) ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) )", "choosing": "( ( RCSe - MUR ) - ( ( ( Max( RRSe,( Max( Max( MUM,RMSe ),Max( DS,MUM ) ) / MUM ) ) - ( ( RMSe / MLU ) / CS ) ) - MUC ) * Max( Max( ( CS * ( RMSe / ( RCSe * RMSe ) ) ),RRSe ),( ( MUR / CS ) - ( Max( MLU,Max( ( MUC * RMSe ),( DS * MUR ) ) ) / MUM ) ) ) ) )", "obj1": 0.5118110236220472, "obj2": 0.2493232814157658}, {"determining": "( ( ( ( Min( Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ,FirstVNF_Mem ) + MDR ) / ( ACS + ( ACS + Const ) ) ) + FirstVNF_Mem ) + Max( MDR,Min( DDR ,( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( MUM,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.09645669291338582, "obj2": 0.615889994113618}, {"determining": "( ( ( ( Min( AMS ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + MDR ) / MRS ) + FirstVNF_Mem ) + Min( RRS ,MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( ( RRSe + DS ) + RRSe ) - ( DS - DS ) ) ),( MLU * ( RRSe - CS ) ) ),( MLU * RMSe ) ) / ( Max( RMSe,MUM ) - ( CS * DS ) ) ) + Min( ( DS - ( ( MUR - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07086614173228346, "obj2": 0.6298290873002832}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + AMS ) ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( CS + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / ( ( Min( MLU ,RMSe ) / ( DS / RCSe ) ) * MLU ) ) - RRSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.03659117018613759}, {"determining": "( Min( ( ( ( RRS + FirstVNF_RAM_Server ) / PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( FirstVNF_Mem + Max( RRS,Max( AMS,AMS ) ) ) )", "choosing": "( Min( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ) ,( Max( MLU,RMSe ) / RCSe ) ) - ( CS - ( MUM + ( ( DS + Max( ( MUM * MUM ),RRSe ) ) * RMSe ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.0466370517295183}, {"determining": "( Min( ( FirstVNF_Mem_Server + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( Min( MRS ,DDR ) ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,( RRSe - DS ) ) + CS ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.4883957053177115}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + Max( MRS,( ARS + RRS ) ) ) + ( DDR - MDR ) ) ) ) )", "choosing": "( ( Max( ( MLU * ( DS * RMSe ) ),Max( ( ( DS * RMSe ) * MLU ),MUM ) ) - CS ) - ( RRSe * RCSe ) )", "obj1": 0.8523622047244095, "obj2": 0.06843941291627567}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + ( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Max( MUM,( MLU + MLU ) ) ) ),( MLU * ( DS + RMSe ) ) ),MUM ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.6665805317263517}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( ACS * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * ( ( RMSe + ( MUR + CS ) ) - RCSe ) ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * MUC ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7283464566929134, "obj2": 0.1277295513700522}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Max( MRS,( ARS + RRS ) ) ) * ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - Max( RMSe,MUM ) ) + ( Min( ( MLU * RCSe ) ,Min( RRSe ,RMSe ) ) - RRSe ) ) - ( DS / RCSe ) )", "obj1": 0.9645669291338582, "obj2": 0.014134292094423172}, {"determining": "( Min( ( ACS + ( ( Max( CRS,( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,MRS ) ) ) / Min( ( Min( AMS ,FirstVNF_CPU ) * ( MDR * MDR ) ) ,RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS * Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - MDR ) + Min( ARS ,AMS ) ) ,CRS ) / Max( BR,FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - CRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUM ) ,Max( RCSe,RMSe ) ) / Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) ) + Min( ( ( ( CS - MUM ) + Max( ( Min( RRSe ,MUC ) * Min( Max( MUC,MLU ) ,DS ) ),RRSe ) ) - DS ) ,RRSe ) )", "obj1": 0.1279527559055118, "obj2": 0.5801313011043521}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * ( RCSe * Min( DS ,Min( DS ,DS ) ) ) ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RCSe,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.4883957053177115}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) + Max( MRS,( ARS + RRS ) ) ) * ( ARS + ( MRS + ( FirstVNF_RAM_Server + MDR ) ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) )", "choosing": "( Min( ( Max( MLU,RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.8346456692913385, "obj2": 0.08452937435320586}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,MUC ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.10098157230079022}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( RMSe / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4423852210766487}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( Min( Const ,RRS ) ,MDR ) + RRS ),MRS ) ) * Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( CRS + ARS ) ) ) ) ,( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.005665281431049682}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + Max( ( DDR + ( FirstVNF_Mem_Server * ( ( ACS + ( FirstVNF_RAM + Const ) ) + ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) ) ),MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),MUM ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.04921259842519685, "obj2": 0.6653553223550246}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( BR + MRS ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ,( ( AMS / DDR ) - MRS ) ) ) ) + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( MLU,RMSe ),Max( ( Max( Min( Max( RMSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( MUC,RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.027203998174534165}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ACS + ( FirstVNF_Mem * ( DDR * Const ) ) ) + AMS ) ) * ( Max( ( ( Const + ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM ),RRS ) / FirstVNF_CPU ) ) / BR ),FirstVNF_RAM ) - ( ( Const * AMS ) + DDR ) ) )", "choosing": "( ( MUR + Max( MUC,( ( Max( MUC,MLU ) + RMSe ) / MUM ) ) ) - ( ( ( ( DS / RCSe ) / RCSe ) - RRSe ) + ( MUM + Min( RRSe ,Max( ( ( ( MUR - MUC ) / Min( RRSe ,MUC ) ) / MUM ),( RRSe * CS ) ) ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.07221108736864458}], "31": [{"determining": "( ( FirstVNF_Mem + Max( ( Min( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) - AMS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( MUR + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( DS + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( Min( Min( ( Min( ARS ,FirstVNF_CPU_Server ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) * ( ( Const - AMS ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Min( Const ,CRS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( MUC + Max( DS,MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Min( Const ,CRS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( DS ,DS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( Const / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + RRSe ) ) ) ) ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.3673225999907523}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.35607987198491975}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.4547244094488189, "obj2": 0.2968234223513899}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) * AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * Min( ( BR + MRS ) ,FirstVNF_RAM ) ) - Max( MRS,Min( ACS ,DDR ) ) ) )", "choosing": "( ( Max( MUM,( Min( RRSe ,DS ) * ( DS * RMSe ) ) ) - RCSe ) - ( ( ( DS / RCSe ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2513983601694064}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.4221918432786421}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( MRS,( ( FirstVNF_RAM - ( CRS + Const ) ) + FirstVNF_Mem ) ) ) * Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - Min( ARS ,AMS ) ) - ( CRS + ARS ) ) ) ) ,AMS ) )", "choosing": "( ( Max( ( ( RMSe * DS ) * MLU ),MUM ) - CS ) - ( ( ( MUM / ( DS * RCSe ) ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / ( RCSe * Min( MLU ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.549520606584601}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( CRS + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * Min( MUC ,( DS + MUC ) ) ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4562322581232694}, {"determining": "( Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / DDR ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( CRS ,Const ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM ) ,AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RMSe ) * MLU ) * MUM ) - ( ( DS * Min( ( Max( MLU,( RCSe - RMSe ) ) + DS ) ,Max( DS,RCSe ) ) ) * MLU ) ) - ( ( Max( Min( ( ( MLU + DS ) - ( MUM * MUR ) ) ,CS ),( RMSe / ( DS + MUC ) ) ) + MUR ) + Max( CS,( ( RRSe + ( ( MUR + RMSe ) / Min( ( MUC - MUR ) ,( RRSe + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.47172610086973604}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,MUC ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.10098157230079022}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.31683429857490664}, {"determining": "( Min( ( RRS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Const + Const ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( RMSe - RCSe ) ) - RRSe ) ),( ( MUM + ( ( RCSe - CS ) - Max( MUM,MUC ) ) ) / MLU ) ) * MUR ) * ( ( RCSe + RMSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.33167042200830127}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( ACS * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( FirstVNF_Mem_Server * FirstVNF_Mem ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.8799212598425197, "obj2": 0.06510675791327934}, {"determining": "( Min( ( ( ( RRS + FirstVNF_RAM_Server ) / PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( FirstVNF_Mem + Max( RRS,Max( AMS,AMS ) ) ) )", "choosing": "( Min( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ) ,( Max( MLU,RMSe ) / RCSe ) ) - ( CS - ( MUM + ( ( DS + Max( ( MUM * MUM ),RRSe ) ) * RMSe ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.0466370517295183}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( RMSe / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4423852210766487}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.4051947852353823}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( ACS * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( ACS * ARS ) * FirstVNF_Mem_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * ( ( RMSe + ( MUR + CS ) ) - RCSe ) ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + DS ) ) ) ) - CS ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5150789656826831}, {"determining": "( ( ( Const - BR ) + FirstVNF_Mem ) + ARS )", "choosing": "( ( ( MUM - CS ) * Max( Max( ( ( Min( ( DS * RRSe ) ,MUC ) * MLU ) * MUM ),DS ),( DS - MUR ) ) ) + ( Min( Max( MUC,MUM ) ,( CS * DS ) ) / Max( Max( Min( MUC ,RCSe ),( Max( Min( MUM ,( RCSe + RCSe ) ),DS ) - CS ) ),( MLU * RMSe ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6453047368417233}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( CRS + FirstVNF_RAM_Server ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.8070866141732284, "obj2": 0.09160893617278214}, {"determining": "( Min( ( FirstVNF_Mem * ( ( ( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6377952755905512, "obj2": 0.1774851503149882}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.20452439254860524}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem / DDR ) - MRS ) ) ) ) + MRS ) ) * ( Min( FirstVNF_RAM ,( FirstVNF_CPU * ACS ) ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( Min( MLU ,MUR ),RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.10826771653543307, "obj2": 0.5990454609566335}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( Const + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) + ACS ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ( FirstVNF_Mem - ARS ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ( PN / MRS ) + AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.38977942629674994}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( Min( AMS ,FirstVNF_Mem ) + MDR ) ) + ( CRS + ( ( AMS / ACS ) / ( CRS + FirstVNF_Mem ) ) ) ) ) ,( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,RMSe ) * Max( CS,DS ) ) * ( MLU - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.19452782195047924}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5150789656826831}, {"determining": "( ( ( ( Min( AMS ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + MDR ) / MRS ) + FirstVNF_Mem ) + Min( RRS ,MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( ( RRSe + DS ) + RRSe ) - ( DS - DS ) ) ),( MLU * ( RRSe - CS ) ) ),( MLU * RMSe ) ) / ( Max( RMSe,MUM ) - ( CS * DS ) ) ) + Min( ( DS - ( ( MUR - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07086614173228346, "obj2": 0.6298290873002832}, {"determining": "( Min( AMS ,( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + MRS ) ) + ARS ) ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( ( ARS + RRS ),MRS ) ) )", "choosing": "( ( RCSe - MUR ) - ( ( ( Max( RRSe,( Max( Max( MUM,RMSe ),Max( DS,MUM ) ) / MUM ) ) - ( ( RMSe / MLU ) / CS ) ) - MUC ) * Max( Max( ( CS * ( RMSe / ( RCSe * RMSe ) ) ),RRSe ),( ( MUR / CS ) - ( Max( MLU,Max( ( MUC * RMSe ),( DS * MUR ) ) ) / MUM ) ) ) ) )", "obj1": 0.5118110236220472, "obj2": 0.2493232814157658}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + AMS ) ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( CS + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / ( ( Min( MLU ,RMSe ) / ( DS / RCSe ) ) * MLU ) ) - RRSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.03659117018613759}, {"determining": "( ( ( ( ( Min( AMS ,FirstVNF_Mem ) + MDR ) / Const ) + FirstVNF_Mem ) + Min( RRS ,MDR ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.6673228346456693, "obj2": 0.16138410339962939}, {"determining": "( Min( ( ACS + ( ( Max( CRS,( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,MRS ) ) ) / Min( ( Min( AMS ,FirstVNF_CPU ) * ( MDR * MDR ) ) ,RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS * Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - MDR ) + Min( ARS ,AMS ) ) ,CRS ) / Max( BR,FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - CRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUM ) ,Max( RCSe,RMSe ) ) / Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) ) + Min( ( ( ( CS - MUM ) + Max( ( Min( RRSe ,MUC ) * Min( Max( MUC,MLU ) ,DS ) ),RRSe ) ) - DS ) ,RRSe ) )", "obj1": 0.1279527559055118, "obj2": 0.5801313011043521}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.11626699133660605}, {"determining": "( Min( ( ( ( RRS + FirstVNF_RAM_Server ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ACS + ARS ) ,( AMS + MRS ) ) * ( ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( MLU,RMSe ) / RCSe ) ,( ( Max( RMSe,RRSe ) / DS ) * RCSe ) ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.8326771653543307, "obj2": 0.08262235627789494}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Max( MRS,( ARS + RRS ) ) ) * ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - Max( RMSe,MUM ) ) + ( Min( ( MLU * RCSe ) ,Min( RRSe ,RMSe ) ) - RRSe ) ) - ( DS / RCSe ) )", "obj1": 0.9645669291338582, "obj2": 0.014134292094423172}, {"determining": "( ( FirstVNF_Mem + FirstVNF_Mem_Server ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + Max( MRS,( ARS + RRS ) ) ) + ( DDR - MDR ) ) ) ) )", "choosing": "( ( Max( ( MLU * ( DS * RMSe ) ),Max( ( ( DS * RMSe ) * MLU ),MUM ) ) - CS ) - ( RRSe * RCSe ) )", "obj1": 0.8523622047244095, "obj2": 0.06843941291627567}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * ( RCSe * Min( DS ,Min( DS ,DS ) ) ) ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( RCSe,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.4883957053177115}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + ( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Max( MUM,( MLU + MLU ) ) ) ),( MLU * ( DS + RMSe ) ) ),MUM ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.6665805317263517}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.14438679017636247}, {"determining": "( Min( ( ( ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - ( MUM + CS ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.718503937007874, "obj2": 0.13342840825428204}, {"determining": "( Min( ( FirstVNF_Mem_Server + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( Min( MRS ,DDR ) ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,( RRSe - DS ) ) + CS ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.4883957053177115}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( MLU,RMSe ),Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( MUC,RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.09251968503937008, "obj2": 0.6287921586949716}, {"determining": "( ( Min( ( ACS + Const ) ,( ( MDR + ( ( MRS + FirstVNF_Mem_Server ) / BR ) ) - FirstVNF_Mem_Server ) ) * ( ( Min( ARS ,AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) * ( ( AMS - ACS ) / ( Min( AMS ,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),( Max( ( RCSe + DS ),MLU ) * Min( MUR ,( Min( RRSe ,RMSe ) * Min( RCSe ,RMSe ) ) ) ) ) - ( ( DS * RMSe ) * ( ( ( CS * ( MLU / RMSe ) ) - ( ( DS * RMSe ) * RRSe ) ) / MUC ) ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( CS * MUC ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.5532973435233249}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( Min( Const ,RRS ) ,MDR ) + RRS ),MRS ) ) * Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + FirstVNF_Mem ) ) - ( CRS + ARS ) ) ) ) ,( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.968503937007874, "obj2": 0.005665281431049682}], "32": [{"determining": "( ( FirstVNF_Mem + Max( ( Min( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) - AMS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( MUR + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( DS + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( Min( FirstVNF_CPU_Server ,MRS ) * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( MLU * RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Min( ARS ,FirstVNF_CPU_Server ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) * ( ( Const - AMS ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Min( Const ,CRS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( MUC + Max( DS,MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( ( ARS + ACS ) ,( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) + MDR ) / Const ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( Min( ( FirstVNF_Mem * ( ( ( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6377952755905512, "obj2": 0.1774851503149882}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.6614173228346457, "obj2": 0.1607130986254289}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( Const + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) + ACS ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ( FirstVNF_Mem - ARS ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ( PN / MRS ) + AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.38977942629674994}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( Min( AMS ,FirstVNF_Mem ) + MDR ) ) + ( CRS + ( ( AMS / ACS ) / ( CRS + FirstVNF_Mem ) ) ) ) ) ,( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,RMSe ) * Max( CS,DS ) ) * ( MLU - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.19452782195047924}, {"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.4547244094488189, "obj2": 0.2968234223513899}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.35607987198491975}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) * AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * Min( ( BR + MRS ) ,FirstVNF_RAM ) ) - Max( MRS,Min( ACS ,DDR ) ) ) )", "choosing": "( ( Max( MUM,( Min( RRSe ,DS ) * ( DS * RMSe ) ) ) - RCSe ) - ( ( ( DS / RCSe ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2513983601694064}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.4221918432786421}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + ( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Max( MUM,( MLU + MLU ) ) ) ),( MLU * ( DS + RMSe ) ) ),MUM ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.6665805317263517}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.4051947852353823}, {"determining": "( Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / DDR ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( CRS ,Const ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM ) ,AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RMSe ) * MLU ) * MUM ) - ( ( DS * Min( ( Max( MLU,( RCSe - RMSe ) ) + DS ) ,Max( DS,RCSe ) ) ) * MLU ) ) - ( ( Max( Min( ( ( MLU + DS ) - ( MUM * MUR ) ) ,CS ),( RMSe / ( DS + MUC ) ) ) + MUR ) + Max( CS,( ( RRSe + ( ( MUR + RMSe ) / Min( ( MUC - MUR ) ,( RRSe + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.47172610086973604}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.31683429857490664}, {"determining": "( ( ( Const - BR ) + FirstVNF_Mem ) + ARS )", "choosing": "( ( ( MUM - CS ) * Max( Max( ( ( Min( ( DS * RRSe ) ,MUC ) * MLU ) * MUM ),DS ),( DS - MUR ) ) ) + ( Min( Max( MUC,MUM ) ,( CS * DS ) ) / Max( Max( Min( MUC ,RCSe ),( Max( Min( MUM ,( RCSe + RCSe ) ),DS ) - CS ) ),( MLU * RMSe ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6453047368417233}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( MLU,RMSe ),Max( ( Max( Min( Max( RCSe,MLU ) ,( CS + MUR ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( MUC,RCSe ) ) ) / Min( Min( RMSe ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.09251968503937008, "obj2": 0.6287921586949716}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( RMSe / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2637795275590551, "obj2": 0.4423852210766487}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.20452439254860524}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,MUC ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.10098157230079022}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Max( MRS,( ARS + RRS ) ) ) * ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - Max( RMSe,MUM ) ) + ( Min( ( MLU * RCSe ) ,Min( RRSe ,RMSe ) ) - RRSe ) ) - ( DS / RCSe ) )", "obj1": 0.9645669291338582, "obj2": 0.014134292094423172}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( Const / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + RRSe ) ) ) ) ) ) ) )", "obj1": 0.33858267716535434, "obj2": 0.3673225999907523}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( ( FirstVNF_CPU * MDR ),FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ,Min( ( AMS / DDR ) ,MRS ) ) ) ) + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( MLU,RMSe ),Max( ( Max( Max( ( CS + MUR ),Max( RCSe,MLU ) ),Min( MUM ,( RCSe + MUM ) ) ) - CS ),Max( MUC,RCSe ) ) ) / Min( Min( ( RCSe + DS ) ,MUM ) ,( CS * DS ) ) ) + Min( Max( MUR,( RCSe + CS ) ) ,RRSe ) )", "obj1": 0.9311023622047244, "obj2": 0.027203998174534175}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( ACS * ARS ) * FirstVNF_Mem_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * ( ( RMSe + ( MUR + CS ) ) - RCSe ) ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( ( RRSe + ( ( DS * RMSe ) * MLU ) ) - CS ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.22204346293471144}, {"determining": "( Min( ( ACS + ( ( Max( CRS,( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,MRS ) ) ) / Min( ( Min( AMS ,FirstVNF_CPU ) * ( MDR * MDR ) ) ,RRS ) ) * ( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS * Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_RAM_Server - MDR ) + Min( ARS ,AMS ) ) ,CRS ) / Max( BR,FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - CRS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( RMSe,MUM ) ,Max( RCSe,RMSe ) ) / Max( Max( Max( MUC,RCSe ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) ) + Min( ( ( ( CS - MUM ) + Max( ( Min( RRSe ,MUC ) * Min( Max( MUC,MLU ) ,DS ) ),RRSe ) ) - DS ) ,RRSe ) )", "obj1": 0.1279527559055118, "obj2": 0.5801313011043521}, {"determining": "( Min( ( RRS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Const + Const ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( RMSe - RCSe ) ) - RRSe ) ),( ( MUM + ( ( RCSe - CS ) - Max( MUM,MUC ) ) ) / MLU ) ) * MUR ) * ( ( RCSe + RMSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.33167042200830127}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( Min( ( ( ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * ( ( ACS + ( Min( AMS ,FirstVNF_Mem ) + MDR ) ) + ( CRS + ( ( AMS / ACS ) / ( CRS + FirstVNF_Mem ) ) ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - ( MUM + CS ) ) / MUC ) ),( MUC + ( DS / MUC ) ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.14639948310474946}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( Max( MRS,( ARS + RRS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( RMSe ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.49932560534396875}, {"determining": "( ( ( ( Min( AMS ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + MDR ) / MRS ) + FirstVNF_Mem ) + Min( RRS ,MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( ( RRSe + DS ) + RRSe ) - ( DS - DS ) ) ),( MLU * ( RRSe - CS ) ) ),( MLU * RMSe ) ) / ( Max( RMSe,MUM ) - ( CS * DS ) ) ) + Min( ( DS - ( ( MUR - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07086614173228346, "obj2": 0.6298290873002832}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.11626699133660605}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.3464566929133858, "obj2": 0.3670147161331729}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + ( Min( PN ,FirstVNF_CPU ) + MRS ) ) + ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RRSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.5999006376526798}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5150789656826831}, {"determining": "( Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / DDR ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( CRS ,Const ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM ) ,AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.734251968503937, "obj2": 0.1291282448867645}, {"determining": "( Min( ( FirstVNF_Mem_Server + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( Min( MRS ,DDR ) ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,( RRSe - DS ) ) + CS ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.5400410120137553}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + AMS ) ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( CS + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / ( ( Min( MLU ,RMSe ) / ( DS / RCSe ) ) * MLU ) ) - RRSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.03659117018613759}, {"determining": "( ( Min( ( ACS + ARS ) ,( AMS + MRS ) ) * ( ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / ( Max( MLU,RMSe ) / RCSe ) ) ) ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.5894551422979224}, {"determining": "( Min( ( ( ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - ( MUM + CS ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.11816574996021381}, {"determining": "( Min( ( ACS + ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( MRS,( ( FirstVNF_RAM - ( CRS + Const ) ) + FirstVNF_Mem ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RMSe * DS ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.5505186524031519}, {"determining": "( ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( ( Min( Min( Const ,RRS ) ,MDR ) + RRS ),MRS ) ) * Min( ( FirstVNF_Mem_Server * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server - BR ) + ( ARS + RRS ) ) ) - ( CRS + ARS ) ) ) ) ,( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - Max( Max( ( CS * ( RMSe / ( RCSe * RMSe ) ) ),RRSe ),RRSe ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.005665281431049682}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( CRS + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * Min( MUC ,( DS + MUC ) ) ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4562322581232694}, {"determining": "( Min( ( ( ( RRS + FirstVNF_RAM_Server ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ACS + ARS ) ,( AMS + MRS ) ) * ( ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( MLU,RMSe ) / RCSe ) ,( ( Max( RMSe,RRSe ) / DS ) * RCSe ) ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.8326771653543307, "obj2": 0.08262235627789494}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.4562322581232694}, {"determining": "( ( ( ARS * FirstVNF_RAM ) * MDR ) * ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) - Max( MRS,( ARS + FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) / Max( RRSe,CS ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,Min( ( MLU * RCSe ) ,Min( RRSe ,RMSe ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.3270841603301773}], "33": [{"determining": "( ( FirstVNF_Mem + Max( ( Min( ( ( FirstVNF_RAM / ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) - AMS ),( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( MUR + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( DS + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( Min( Min( ( Min( ARS ,FirstVNF_CPU_Server ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) * ( ( Const - AMS ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Min( Const ,CRS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( MUC + Max( DS,MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( Min( FirstVNF_CPU_Server ,MRS ) * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( MLU * RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) + FirstVNF_Mem ) + Const )", "choosing": "( ( Max( Max( Max( MUC,RCSe ),( Max( Min( MUM ,( RCSe + MLU ) ),DS ) - Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ),( MLU * RMSe ) ) / Min( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + CS ) ) ) ),MUM ) ,( CS * DS ) ) ) + ( ( DS / RCSe ) - ( ( CS - MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.6955503866713351}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( FirstVNF_Mem_Server * ( ( ACS + ( ACS + Const ) ) + ( CRS + FirstVNF_RAM_Server ) ) ) * AMS ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * Min( ( BR + MRS ) ,FirstVNF_RAM ) ) - Max( MRS,Min( ACS ,DDR ) ) ) )", "choosing": "( ( Max( MUM,( Min( RRSe ,DS ) * ( DS * RMSe ) ) ) - RCSe ) - ( ( ( DS / RCSe ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2513983601694064}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + AMS ) ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( CS + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / ( ( Min( MLU ,RMSe ) / ( DS / RCSe ) ) * MLU ) ) - RRSe ) ) )", "obj1": 0.8956692913385826, "obj2": 0.07026422210707386}, {"determining": "( Max( ( FirstVNF_CPU_Server * ( ( ( ( CRS / PN ) * ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,Min( CRS ,Min( AMS ,PN ) ) ) ) ),( FirstVNF_RAM_Server / ACS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( Max( CS,RCSe ) ,( MLU - RCSe ) ) / ( Max( ( RMSe * ( MLU - ( RRSe - DS ) ) ),( DS - ( RMSe / RRSe ) ) ) - Min( RRSe ,( CS * DS ) ) ) ) ,MLU ) - ( Min( ( MUM - DS ) ,Min( ( RCSe - ( MLU + MUM ) ) ,RRSe ) ) * MUR ) )", "obj1": 0.4822834645669291, "obj2": 0.2912560802627878}, {"determining": "( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( ( ( RRSe / CS ) + Max( MUM,Max( MUM,( MLU + MLU ) ) ) ),RMSe ) / RCSe ) ,MUM ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.24318678032415805}, {"determining": "( Min( ( FirstVNF_Mem * ( ( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( MLU + ( ( RCSe - MUR ) - Min( MUM ,RMSe ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.4547244094488189, "obj2": 0.2968234223513899}, {"determining": "( Min( ( ACS + Min( Const ,( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( ( AMS * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.3799212598425197, "obj2": 0.35607987198491975}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.4221918432786421}, {"determining": "( ( PN + ( BR * ( MDR / FirstVNF_CPU ) ) ) + ( Min( ( ( Max( ( MDR + FirstVNF_Mem_Server ),FirstVNF_Mem ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ARS + ACS ) ,( AMS + MRS ) ) * ( Max( AMS,ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( RCSe - MUR ) - Max( MUM,( MLU + MLU ) ) ) ),( MLU * ( DS + RMSe ) ) ),MUM ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( ( RMSe - RRSe ) - ( ( CS - MUM ) + Max( ( ( Max( RMSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,MUC ) )", "obj1": 0.04330708661417323, "obj2": 0.6665805317263517}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( RCSe ,Max( RCSe,DS ) ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.4051947852353823}, {"determining": "( Min( ( Min( FirstVNF_Mem_Server ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( Const + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) + ACS ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( ( FirstVNF_Mem - ARS ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( ( ( PN / MRS ) + AMS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.38977942629674994}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( Min( MUM ,DS ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.8366141732283464, "obj2": 0.07714343195732498}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.31683429857490664}, {"determining": "( ( ( Const - BR ) + FirstVNF_Mem ) + ARS )", "choosing": "( ( ( MUM - CS ) * Max( Max( ( ( Min( ( DS * RRSe ) ,MUC ) * MLU ) * MUM ),DS ),( DS - MUR ) ) ) + ( Min( Max( MUC,MUM ) ,( CS * DS ) ) / Max( Max( Min( MUC ,RCSe ),( Max( Min( MUM ,( RCSe + RCSe ) ),DS ) - CS ) ),( MLU * RMSe ) ) ) )", "obj1": 0.05511811023622047, "obj2": 0.6453047368417233}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + ( Min( AMS ,FirstVNF_Mem ) + MDR ) ) + ( CRS + ( ( AMS / ACS ) / ( CRS + FirstVNF_Mem ) ) ) ) ) ,( Max( FirstVNF_RAM_Server,Const ) + ( MRS / DDR ) ) ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( Max( RRSe,( ( RMSe + ( MLU * RMSe ) ) / Min( ( MUC * CS ) ,( MUR + RRSe ) ) ) ),MUM ) - CS ) - ( Max( ( MUC + ( DS / MUC ) ),( MUC + CS ) ) * ( ( ( DS / MUM ) - ( DS / MUC ) ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( MUM ,RMSe ) * Max( CS,DS ) ) * ( MLU - Max( MUM,RMSe ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.6062992125984252, "obj2": 0.19452782195047924}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.5150789656826831}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( ( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ),( CS - ( RRSe + ( RMSe / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.09107866191610166}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.20452439254860524}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( Max( MRS,( ARS + RRS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( RMSe ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.49932560534396875}, {"determining": "( Min( ( ( ( ACS + ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.702755905511811, "obj2": 0.14454439801174865}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + AMS ) ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,MLU ) ) ) ) )", "obj1": 0.9035433070866141, "obj2": 0.046705950430676095}, {"determining": "( Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / DDR ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( CRS ,Const ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM ) ,AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( DS * RMSe ) * MLU ) * MUM ) - ( ( DS * Min( ( Max( MLU,( RCSe - RMSe ) ) + DS ) ,Max( DS,RCSe ) ) ) * MLU ) ) - ( ( Max( Min( ( ( MLU + DS ) - ( MUM * MUR ) ) ,CS ),( RMSe / ( DS + MUC ) ) ) + MUR ) + Max( CS,( ( RRSe + ( ( MUR + RMSe ) / Min( ( MUC - MUR ) ,( RRSe + MUR ) ) ) ) - CS ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.47172610086973604}, {"determining": "( Min( ( ACS + ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( MRS,( ( FirstVNF_RAM - ( CRS + Const ) ) + FirstVNF_Mem ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RMSe * DS ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.17519685039370078, "obj2": 0.5375919271900946}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( ACS * ARS ) * FirstVNF_Mem_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * ( ( RMSe + ( MUR + CS ) ) - RCSe ) ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( ( RRSe + ( ( DS * RMSe ) * MLU ) ) - CS ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.22204346293471144}, {"determining": "( ( ( FirstVNF_CPU_Server * MDR ) - Max( MRS,( ARS / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) ) * ( RRS + ARS ) )", "choosing": "( ( MUC / ( CS + RMSe ) ) - ( ( CS * MUM ) + ( ( ( RMSe + MUM ) + RCSe ) - RRSe ) ) )", "obj1": 0.5649606299212598, "obj2": 0.2153554439819722}, {"determining": "( ( ( ( Min( AMS ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + MDR ) / MRS ) + FirstVNF_Mem ) + Min( RRS ,MDR ) )", "choosing": "( ( Max( Max( ( MLU - ( ( ( RRSe + DS ) + RRSe ) - ( DS - DS ) ) ),( MLU * ( RRSe - CS ) ) ),( MLU * RMSe ) ) / ( Max( RMSe,MUM ) - ( CS * DS ) ) ) + Min( ( DS - ( ( MUR - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.07086614173228346, "obj2": 0.6298290873002832}, {"determining": "( Min( ( RRS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / FirstVNF_CPU ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( ( Min( ARS ,FirstVNF_CPU_Server ) - PN ) + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( Const + Const ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - ( ( Max( ( MLU * ( ( MUM + ( RMSe - RCSe ) ) - RRSe ) ),( ( MUM + ( ( RCSe - CS ) - Max( MUM,MUC ) ) ) / MLU ) ) * MUR ) * ( ( RCSe + RMSe ) - Max( ( MLU / MLU ),RMSe ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.33167042200830127}, {"determining": "( Min( ( FirstVNF_Mem * ( ( ( Max( FirstVNF_CPU_Server,CRS ) / Min( Const ,CRS ) ) + ( MRS / DDR ) ) + MDR ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( ( Max( MUM,RMSe ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) / ( ( ( RCSe + MUC ) * Max( CS,DS ) ) * ( ( RMSe + RCSe ) - Max( MUM,RMSe ) ) ) )", "obj1": 0.6220472440944882, "obj2": 0.18003137029088265}, {"determining": "( Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / DDR ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( CRS ,Const ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM ) ,AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * RCSe ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.734251968503937, "obj2": 0.12839302637140323}, {"determining": "( Max( MDR,Min( DDR ,FirstVNF_CPU ) ) + ( ( ( MDR + Min( Max( ( Min( ARS ,MRS ) - PN ),RRS ) ,MRS ) ) / PN ) + FirstVNF_Mem ) )", "choosing": "( Max( ( RRSe + RMSe ),( ( RMSe + Max( ( MLU * Max( RMSe,MUM ) ),RCSe ) ) * MLU ) ) * ( MLU * DS ) )", "obj1": 0.1437007874015748, "obj2": 0.567538123432167}, {"determining": "( Min( ( ACS + Const ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( Min( AMS ,ARS ) - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - Max( RRSe,( Min( ( MUR + DS ) ,Max( DS,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + MUM ) ) ) ) ) ) ) )", "obj1": 0.3464566929133858, "obj2": 0.3670147161331729}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( Max( MLU,MLU ) * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( RMSe / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.37407465512581967}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server * ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + AMS ) ) ) * ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( ( CRS + PN ),( Max( FirstVNF_Mem,ACS ) + RRS ) ) ) )", "choosing": "( ( CS + Max( MUC,( MUC / MUR ) ) ) - ( ( MUM + CS ) + ( ( ( DS / RCSe ) / ( ( Min( MLU ,RMSe ) / ( DS / RCSe ) ) * MLU ) ) - RRSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.03659117018613759}, {"determining": "( Min( ( ACS + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( ( ( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - RRS ) ) + Const ) * ( AMS + MRS ) ) * ( ( ( PN / ARS ) * ( MRS - FirstVNF_CPU ) ) / Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ,( ( AMS / DDR ) - MRS ) ) ) ) + MRS ) ) * ( ( FirstVNF_Mem + FirstVNF_Mem ) * ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( Max( MUM,( Min( RRSe ,DS ) * ( DS * RMSe ) ) ) - RCSe ) - ( ( ( DS / RCSe ) * MUM ) * ( ( RCSe + RMSe ) - Max( ( ( MLU - ( ( RCSe - MUR ) - Min( MUM ,MUC ) ) ) / ( ( Min( RRSe ,MUM ) * Max( CS,DS ) ) * Max( ( RRSe + DS ),Max( MUM,MUC ) ) ) ),( Max( RRSe,RCSe ) * Min( Min( RMSe ,MUR ) ,CS ) ) ) ) ) )", "obj1": 0.9389763779527559, "obj2": 0.02089020157566251}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.11626699133660605}, {"determining": "( ( Min( AMS ,FirstVNF_Mem ) - Max( MRS,( ARS + RRS ) ) ) * ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( ( ( RRSe - Max( RMSe,MUM ) ) + ( Min( ( MLU * RCSe ) ,Min( RRSe ,RMSe ) ) - RRSe ) ) - ( DS / RCSe ) )", "obj1": 0.9645669291338582, "obj2": 0.014134292094423172}, {"determining": "( Min( ( ACS + ( ( FirstVNF_CPU_Server * Max( CRS,CRS ) ) - Max( MRS,( ( FirstVNF_RAM - ( CRS + Const ) ) + FirstVNF_Mem ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RMSe * DS ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.5505186524031519}, {"determining": "( Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / DDR ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( CRS ,Const ) ) ) ) ,( ( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) * ( Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM ) ,AMS ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * FirstVNF_RAM_Server ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( ( MLU - ( ( CS - ( RMSe - RRSe ) ) - Min( MUM ,MUC ) ) ),( MLU * ( DS + RMSe ) ) ),( MLU * RMSe ) ) / Min( Max( RMSe,MUM ) ,( CS * DS ) ) ) + Min( ( DS - ( ( CS - MUM ) + Max( ( ( Max( RRSe,RRSe ) / DS ) * Min( Max( RCSe,MLU ) ,( CS + MUR ) ) ),RRSe ) ) ) ,RRSe ) )", "obj1": 0.10236220472440945, "obj2": 0.6098614974030221}, {"determining": "( Min( ( ( ( ACS + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( DS * RMSe ) ) - Max( RCSe,( RRSe / MUC ) ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.10380729628281615}, {"determining": "( Min( ( ( ( RRS + FirstVNF_RAM_Server ) + PN ) + DDR ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) * ( ( MDR / FirstVNF_RAM_Server ) * ( ( Min( ( ACS + ARS ) ,( AMS + MRS ) ) * ( ( CRS + ( ( MDR + AMS ) / ( AMS - ACS ) ) ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) )", "choosing": "( Min( ( Max( MLU,RMSe ) / RCSe ) ,( ( Max( RMSe,RRSe ) / DS ) * RCSe ) ) - ( CS - ( MUM + ( ( DS + Max( MLU,RRSe ) ) * RMSe ) ) ) )", "obj1": 0.8326771653543307, "obj2": 0.08262235627789494}, {"determining": "( ( ACS / ( Max( Min( FirstVNF_Mem ,( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ),FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) * ( FirstVNF_Mem_Server - BR ) )", "choosing": "( ( MUR * Max( ( ( RRSe * MLU ) * ( RMSe * DS ) ),MUM ) ) - ( ( MUC * DS ) * ( RRSe + Max( MUR,RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.31950448096437284}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,MUC ) ) ) ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.10098157230079022}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Max( MRS,( ARS + RRS ) ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( MUM ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( Min( ( MLU * RCSe ) ,Min( RRSe ,RMSe ) ) - RRSe ) ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.4694096360369875}, {"determining": "( Min( ( ACS + Min( Const ,( ( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( Max( MRS,( ARS + RRS ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( Max( ( ( MUC - RRSe ) / Max( RRSe,RMSe ) ),( Min( RCSe ,MUM ) - RMSe ) ) * RMSe ) * MLU ),MUM ) - CS ) - ( ( Min( RMSe ,DS ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RMSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.5014875012696803}, {"determining": "( Min( ( ( ( ( ( FirstVNF_Mem / CRS ) + FirstVNF_Mem_Server ) + PN ) + ( Max( FirstVNF_Mem_Server,AMS ) + FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( MRS,( ARS + RRS ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) + MLU ),MUM ) - CS ) - ( Max( ( MUR + ( ( ( CS * ( MLU / RMSe ) ) - ( MUM + CS ) ) / MUC ) ),( MUC + CS ) ) * ( ( RMSe + RCSe ) - Max( Max( MLU,MLU ),RMSe ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.11816574996021381}, {"determining": "( Min( ( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) + Min( Const ,( Max( CRS,FirstVNF_CPU_Server ) / Min( Const ,CRS ) ) ) ) ,( ( Min( ( ACS + Const ) ,( AMS + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) ) + MRS ) ) * ( ( AMS - ACS ) / ( FirstVNF_Mem + FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - CS ) - Max( ( ( DS * RMSe ) * MLU ),MUM ) )", "obj1": 0.39763779527559057, "obj2": 0.3253177635406174}, {"determining": "( Min( ( FirstVNF_Mem_Server * ( ( ACS + PN ) + ( CRS + FirstVNF_RAM_Server ) ) ) ,AMS ) * ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server + FirstVNF_RAM ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) + ( Min( PN ,FirstVNF_CPU ) + MRS ) ) + ARS ) ) ) ) )", "choosing": "( ( Max( ( ( DS * RMSe ) * MLU ),MUM ) - ( ( DS * RMSe ) * MLU ) ) - ( ( Max( MUM,MLU ) + RMSe ) + Max( CS,( CS - ( RRSe + ( ( RRSe + MUR ) / Min( ( MUC * CS ) ,( RRSe + MUR ) ) ) ) ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.5999006376526798}]}