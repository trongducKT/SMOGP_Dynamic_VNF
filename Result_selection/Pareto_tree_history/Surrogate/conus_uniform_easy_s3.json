{"1": [{"determining": "( ( ARS * PN ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( MUR / MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.46572266372729365}, {"determining": "Max( ( MRS / ACS ),( FirstVNF_RAM_Server - PN ) )", "choosing": "( Min( CS ,MUC ) * ( MUC - MLU ) )", "obj1": 0.1830708661417323, "obj2": 0.6409386748631742}, {"determining": "Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) )", "choosing": "( ( DS - RCSe ) + ( MUM + MLU ) )", "obj1": 0.5236220472440944, "obj2": 0.3908455794099943}, {"determining": "( ( PN - Max( MRS,Max( ( ARS / CRS ),MDR ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( ( CS / RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server / BR ) - ( FirstVNF_RAM * CRS ) ) + FirstVNF_CPU ) ,( Const * FirstVNF_RAM ) )", "choosing": "Min( ( MUM * DS ) ,( RMSe * RMSe ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,( AMS * MDR ) ) )", "choosing": "Max( Max( MUR,DS ),Max( DS,DS ) )", "obj1": 0.40551181102362205, "obj2": 0.44853922955279313}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( ARS - FirstVNF_CPU_Server ) / Const ) )", "choosing": "Max( ( MUR + CS ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( MDR ,( ( PN - MDR ) / FirstVNF_Mem_Server ) ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( CS,DS ) - ( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "( ( ( ARS + FirstVNF_Mem ) + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + Min( RCSe ,RCSe ) ) * Max( DS,( ( RRSe - MUC ) / ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ,FirstVNF_RAM ) - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( Max( MUR,Max( ( RCSe * ( Min( RCSe ,( RRSe - MLU ) ) / RRSe ) ),( MUM - MUR ) ) ) - ( ( MUC - RMSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS / FirstVNF_CPU ) ,MDR ) + Max( MRS,FirstVNF_CPU ) )", "choosing": "Min( ( CS + RRSe ) ,Max( ( RMSe * RCSe ),( ( ( MLU + MUM ) / RMSe ) + ( Max( Max( MLU,Min( RMSe ,CS ) ),( RCSe - ( ( MUC / DS ) / RCSe ) ) ) - ( RMSe - RCSe ) ) ) ) )", "obj1": 0.5688976377952756, "obj2": 0.35012501370771215}, {"determining": "( ( FirstVNF_CPU - ( AMS / Const ) ) + ( ( FirstVNF_CPU_Server / Min( BR ,Min( MDR ,( FirstVNF_CPU_Server * MRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( Min( ( RMSe + MUR ) ,DS ) / ( DS + MUR ) ) ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_CPU * ( BR / PN ) ) )", "choosing": "Min( ( ( MLU + RRSe ) / MUC ) ,( RCSe * DS ) )", "obj1": 0.7165354330708661, "obj2": 0.20814229155773026}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( MLU - Max( CS,RRSe ) ) )", "obj1": 0.2992125984251969, "obj2": 0.48354642287586463}, {"determining": "( ( ( RRS / ( ( ARS * CRS ) - FirstVNF_CPU_Server ) ) - Max( PN,RRS ) ) - Max( PN,( CRS - Const ) ) )", "choosing": "Max( ( MLU / ( RRSe * ( DS * MLU ) ) ),( ( RMSe + Min( RRSe ,( Max( ( RRSe * MUM ),( DS - ( MUC / MLU ) ) ) / DS ) ) ) / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,( ( PN + ( MRS * ( ARS + ( Const + Const ) ) ) ) + ACS ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( MLU * ( ( CS / CS ) + RRSe ) ) + RRSe ) * RRSe ) )", "obj1": 0.41141732283464566, "obj2": 0.40658154761661397}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( Min( DS ,MUR ) * MUM ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.3065428580389491}, {"determining": "Max( ( ( ( ( Min( ( ACS / ( DDR / MDR ) ) ,MRS ) - ARS ) * FirstVNF_RAM ) + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,ACS ) ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( ( Max( Max( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MLU * RRSe ),MUC ) ),MLU ),MUC ) * DS ) * Max( MUM,DS ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2562655774656014}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( Min( MDR ,Min( Const ,PN ) ) ,MDR ) * ( BR * ARS ) ) )", "choosing": "( Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RCSe / MUR ) ) ) / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7382402897575555}, {"determining": "( ( PN + ( Max( CRS,PN ) + ACS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( MUM - RMSe ) ),Max( ( Max( RRSe,( ( Max( ( RMSe - RCSe ),CS ) - Max( RCSe,( RCSe + RCSe ) ) ) * MUR ) ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( DS ,( Max( DS,MLU ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) / Min( PN ,MDR ) ) ) )", "choosing": "Min( ( ( ( RRSe - RCSe ) - ( RRSe - RRSe ) ) + ( ( MLU + MUM ) / Min( MUC ,RCSe ) ) ) ,( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.23643311435787392}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / ( ( BR - Const ) + ( ( ( MRS / RRS ) - MDR ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( MLU ,RMSe ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7297882262985049}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4509641773630226}, {"determining": "( ( PN + ( Const + PN ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RMSe + ( RCSe / ( MUM * MLU ) ) ) ) * ( RCSe - RRSe ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( CS - Max( MLU,MLU ) ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( ( CS * Min( Max( MLU,( MLU + Max( RMSe,RCSe ) ) ) ,CS ) ) - ( MUC / DS ) ) ) * Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( Const * Const ),MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / RMSe ),MUM ),( MUR + DS ) ) - Max( ( MUM / Min( RMSe ,RCSe ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( ( RRS * FirstVNF_Mem_Server ),ARS ) * MDR ) ) - Max( Max( ( ( Const - BR ) - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( FirstVNF_Mem * Max( ARS,ACS ) ) ) ) )", "choosing": "Max( Max( ( MUR / DS ),DS ),( ( Min( RCSe ,MUC ) / Min( Max( ( ( Min( MUR ,RCSe ) / ( MLU / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( MRS / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,FirstVNF_RAM_Server ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / ( FirstVNF_RAM * Const ) ) + ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,Min( Max( RCSe,RRSe ) ,MUC ) ) ) - ( ( MUC - MUC ) + Max( DS,RCSe ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.6645276642473983}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( Max( ( ( RMSe + ( ( CS / MUM ) - MUR ) ) - Min( ( ( DS + DS ) + ( RCSe / Min( MUC ,CS ) ) ) ,RRSe ) ),MUM ) + Min( Min( ( ( DS + MUM ) / RRSe ) ,RMSe ) ,( DS * Max( DS,Max( ( Min( RRSe ,MUC ) * ( RCSe - DS ) ),( Max( CS,RMSe ) / ( MUC - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_RAM ) / ( ( RRS + PN ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( ( ( RRSe - DS ) * ( ( ( MLU / DS ) + MUR ) + MUC ) ) - DS ) ),( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - ( RRS * ( PN / MRS ) ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( Max( Min( RCSe ,RCSe ),RMSe ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.05383662003701402}], "2": [{"determining": "( ( ARS * PN ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( MUR / MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.46572266372729365}, {"determining": "( ( PN - Max( MRS,Max( ( ARS / CRS ),MDR ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( ( CS / RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server / BR ) - ( FirstVNF_RAM * CRS ) ) + FirstVNF_CPU ) ,( Const * FirstVNF_RAM ) )", "choosing": "Min( ( MUM * DS ) ,( RMSe * RMSe ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,( AMS * MDR ) ) )", "choosing": "Max( Max( MUR,DS ),Max( DS,DS ) )", "obj1": 0.40551181102362205, "obj2": 0.44853922955279313}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( ARS - FirstVNF_CPU_Server ) / Const ) )", "choosing": "Max( ( MUR + CS ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( MDR ,( ( PN - MDR ) / FirstVNF_Mem_Server ) ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( CS,DS ) - ( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "( ( ( ARS + FirstVNF_Mem ) + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + Min( RCSe ,RCSe ) ) * Max( DS,( ( RRSe - MUC ) / ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ,FirstVNF_RAM ) - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( Max( MUR,Max( ( RCSe * ( Min( RCSe ,( RRSe - MLU ) ) / RRSe ) ),( MUM - MUR ) ) ) - ( ( MUC - RMSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - ( AMS / Const ) ) + ( ( FirstVNF_CPU_Server / Min( BR ,Min( MDR ,( FirstVNF_CPU_Server * MRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( Min( ( RMSe + MUR ) ,DS ) / ( DS + MUR ) ) ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_CPU * ( BR / PN ) ) )", "choosing": "Min( ( ( MLU + RRSe ) / MUC ) ,( RCSe * DS ) )", "obj1": 0.7165354330708661, "obj2": 0.20814229155773026}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const + ARS ),( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( MLU - Max( CS,RRSe ) ) )", "obj1": 0.2992125984251969, "obj2": 0.48354642287586463}, {"determining": "( ( ( RRS / ( ( ARS * CRS ) - FirstVNF_CPU_Server ) ) - Max( PN,RRS ) ) - Max( PN,( CRS - Const ) ) )", "choosing": "Max( ( MLU / ( RRSe * ( DS * MLU ) ) ),( ( RMSe + Min( RRSe ,( Max( ( RRSe * MUM ),( DS - ( MUC / MLU ) ) ) / DS ) ) ) / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM,( ( PN + ( MRS * ( ARS + ( Const + Const ) ) ) ) + ACS ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( MLU * ( ( CS / CS ) + RRSe ) ) + RRSe ) * RRSe ) )", "obj1": 0.41141732283464566, "obj2": 0.40658154761661397}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( Min( DS ,MUR ) * MUM ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.3065428580389491}, {"determining": "Max( ( ( ( ( Min( ( ACS / ( DDR / MDR ) ) ,MRS ) - ARS ) * FirstVNF_RAM ) + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,ACS ) ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( ( Max( Max( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MLU * RRSe ),MUC ) ),MLU ),MUC ) * DS ) * Max( MUM,DS ) ) )", "obj1": 0.6358267716535433, "obj2": 0.2562655774656014}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( Min( MDR ,Min( Const ,PN ) ) ,MDR ) * ( BR * ARS ) ) )", "choosing": "( Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RCSe / MUR ) ) ) / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7382402897575555}, {"determining": "( ( PN + ( Max( CRS,PN ) + ACS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( MUM - RMSe ) ),Max( ( Max( RRSe,( ( Max( ( RMSe - RCSe ),CS ) - Max( RCSe,( RCSe + RCSe ) ) ) * MUR ) ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( DS ,( Max( DS,MLU ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server - BR ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Max( CRS,FirstVNF_RAM ) / ( MRS - RRS ) ) ) ,( Min( Max( AMS,ARS ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) / Min( PN ,MDR ) ) ) )", "choosing": "Min( ( ( ( RRSe - RCSe ) - ( RRSe - RRSe ) ) + ( ( MLU + MUM ) / Min( MUC ,RCSe ) ) ) ,( ( Min( MUR ,DS ) * Max( MUM,MUC ) ) - Min( ( RCSe - RCSe ) ,Min( DS ,CS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.23643311435787392}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / ( ( BR - Const ) + ( ( ( MRS / RRS ) - MDR ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( MLU ,RMSe ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7297882262985049}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4509641773630226}, {"determining": "( ( PN + ( Const + PN ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RMSe + ( RCSe / ( MUM * MLU ) ) ) ) * ( RCSe - RRSe ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( CS - Max( MLU,MLU ) ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( ( CS * Min( Max( MLU,( MLU + Max( RMSe,RCSe ) ) ) ,CS ) ) - ( MUC / DS ) ) ) * Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( Const * Const ),MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / RMSe ),MUM ),( MUR + DS ) ) - Max( ( MUM / Min( RMSe ,RCSe ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( ( RRS * FirstVNF_Mem_Server ),ARS ) * MDR ) ) - Max( Max( ( ( Const - BR ) - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( FirstVNF_Mem * Max( ARS,ACS ) ) ) ) )", "choosing": "Max( Max( ( MUR / DS ),DS ),( ( Min( RCSe ,MUC ) / Min( Max( ( ( Min( MUR ,RCSe ) / ( MLU / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + ( MRS / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,FirstVNF_RAM_Server ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / ( FirstVNF_RAM * Const ) ) + ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,Min( Max( RCSe,RRSe ) ,MUC ) ) ) - ( ( MUC - MUC ) + Max( DS,RCSe ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.6645276642473983}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( Max( ( ( RMSe + ( ( CS / MUM ) - MUR ) ) - Min( ( ( DS + DS ) + ( RCSe / Min( MUC ,CS ) ) ) ,RRSe ) ),MUM ) + Min( Min( ( ( DS + MUM ) / RRSe ) ,RMSe ) ,( DS * Max( DS,Max( ( Min( RRSe ,MUC ) * ( RCSe - DS ) ),( Max( CS,RMSe ) / ( MUC - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_RAM ) / ( ( RRS + PN ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( ( ( RRSe - DS ) * ( ( ( MLU / DS ) + MUR ) + MUC ) ) - DS ) ),( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "Min( ( ( Min( MDR ,DDR ) * FirstVNF_CPU_Server ) - ( RRS * ( PN / MRS ) ) ) ,Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( Max( Min( RCSe ,RCSe ),RMSe ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( Max( Max( RRSe,MUR ),Min( DS ,MLU ) ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.05383662003701402}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Min( AMS ,CRS ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( CRS / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / Min( ( DDR / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ,BR ) ) ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - ( ( CS / MUM ) - RRSe ) ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * ( AMS / ( BR / ( CRS + MRS ) ) ) ) * ( Min( Max( ( AMS / FirstVNF_RAM ),( AMS / Min( DDR ,CRS ) ) ) ,( MRS * AMS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( Min( ( ( ( RMSe - CS ) + ( ( DS * CS ) * DS ) ) - RMSe ) ,Min( RRSe ,MUC ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( AMS ,FirstVNF_Mem ),( Min( Max( BR,ACS ) ,( MRS / DDR ) ) + Min( ( ACS * MDR ) ,Min( Const ,BR ) ) ) )", "choosing": "( ( ( ( DS / RCSe ) / Min( RCSe ,MUC ) ) + Max( ( CS * DS ),Min( RMSe ,CS ) ) ) / ( ( ( RCSe / RCSe ) / ( MLU + RRSe ) ) / ( ( DS + ( MUR * RMSe ) ) + ( MUC * RMSe ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.38326633941483146}, {"determining": "( ( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + Max( ( CS / RMSe ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,( RRS + RRS ) ) * Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( DS + MLU ) ) / Max( ( CS / MUM ),( MUR - RCSe ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3893133309704462}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( FirstVNF_RAM + CRS ) )", "choosing": "( Min( ( ( RCSe + ( MUR + ( ( DS * RRSe ) + RRSe ) ) ) * MUM ) ,RCSe ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( Const,MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / Min( Min( DS ,MLU ) ,( ( MUM + ( ( RMSe / RMSe ) + DS ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,CRS ) - ( ( FirstVNF_Mem / FirstVNF_CPU ) * MDR ) )", "choosing": "Max( ( ( ( MLU + MUM ) / RMSe ) + ( Max( Max( MLU,Min( ( MUM / RMSe ) ,RCSe ) ),( RCSe - ( ( MUC / ( MLU / RRSe ) ) / RCSe ) ) ) - ( RMSe - RCSe ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / Max( RRS,Const ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( Max( ( CS / Max( Max( Min( RCSe ,RMSe ),( Max( DS,RRSe ) / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * Const ) ) + ACS ) / MDR ) ,FirstVNF_Mem_Server ) ),( BR + DDR ) ) - ( PN - Const ) )", "choosing": "Max( Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( RMSe + RMSe ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,Max( ( DS * Max( ( Min( RCSe ,MUR ) / ( ( MLU * CS ) - MUM ) ),MLU ) ),RCSe ) ),( MLU - DS ) )", "obj1": 0.8700787401574803, "obj2": 0.09913370039447494}, {"determining": "( ( Max( MRS,( ACS * FirstVNF_CPU ) ) - ( Min( FirstVNF_RAM_Server ,RRS ) / FirstVNF_CPU ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( Min( ( MUC + MLU ) ,MUR ) - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( ( Max( MUC,DS ) * RCSe ),( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU - ( PN - FirstVNF_RAM_Server ) ) - MDR ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RMSe ) * MUM ) + Min( Max( ( ( RCSe - ( MUM + ( MUC - RMSe ) ) ) * ( RRSe + MUR ) ),RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,( ( MRS + BR ) * ( CRS - DDR ) ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,AMS ) ) ,( ACS * ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS / MUM ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( ( MLU + RRSe ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.5491358883323108}, {"determining": "( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * ( DDR - DDR ) ) + Min( Min( ACS ,MRS ) ,( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe / ( MUR / RCSe ) ) * ( MLU + ( ( MUC * RMSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( Min( ( ACS * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + Min( MRS ,ACS ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( ( MUR - MUR ) / ( ( Max( MUC,( RCSe - MUM ) ) - MUC ) * Max( ( ( MUC / DS ) - DS ),DS ) ) ) + RRSe ) * RRSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3221465801500557}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * CRS ) - ( ( FirstVNF_Mem_Server + DDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + Max( ( RRSe * RMSe ),( RCSe * MUC ) ) ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( Max( MUR,MUC ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ARS,Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,ACS ) ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( ( Max( Max( ( ( Min( RCSe ,CS ) / RRSe ) * Max( ( MLU * MLU ),MUC ) ),MLU ),MUC ) * DS ) * Max( MUM,DS ) ) )", "obj1": 0.6732283464566929, "obj2": 0.2446449988484602}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * FirstVNF_CPU ) ,PN ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( ( RRSe - CS ) / ( MUR + ( RMSe / ( ( DS / ( MUC * RCSe ) ) + Max( RMSe,( DS - MUR ) ) ) ) ) ) ) * MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ACS )", "choosing": "Max( Min( RCSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server / BR ) - ( FirstVNF_RAM * CRS ) ) + FirstVNF_CPU ) ,( Const * FirstVNF_RAM ) )", "choosing": "Min( ( MUM * DS ) ,( RMSe * RMSe ) )", "obj1": 0.6909448818897638, "obj2": 0.22004568472386835}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( PN * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( ( Max( FirstVNF_CPU,( ( FirstVNF_Mem - Max( ACS,RRS ) ) * DDR ) ) + Min( CRS ,BR ) ) ,( CRS / MDR ) ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( DS,( Min( ( MUR + MUC ) ,MUC ) * Min( RCSe ,RCSe ) ) ) - ( ( ( ( ( ( RMSe / RRSe ) * MUM ) - RMSe ) + ( MUR + MLU ) ) / RMSe ) / RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.021250806347186218}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * ( Max( AMS,ARS ) / Max( PN,ARS ) ) ) ,( Max( ( MDR + PN ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ( ARS - MDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS * ( ( Max( RRSe,DS ) * ( RCSe / MUC ) ) - Max( ( MUC - MUM ),Min( DS ,DS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.2652116523997993}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ARS + ACS ) / Max( Max( ( FirstVNF_RAM / MDR ),( DDR + BR ) ),( ( MDR + AMS ) - ( ACS * FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( ( MLU + RRSe ) ,RMSe ),( MUR / MUM ) ),( ( ( RCSe / MUM ) * CS ) + ( MUC + DS ) ) ) + ( Min( ( DS * MLU ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5696958371208577}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( PN,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),( BR / MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( ( ( RCSe * DS ) * RRSe ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,( AMS * FirstVNF_RAM_Server ) ) * Max( CRS,RRS ) ) + ( DDR - RRS ) )", "choosing": "( ( MUC - MUM ) - Max( ( CS + CS ),MUR ) )", "obj1": 0.23031496062992127, "obj2": 0.5231984099115811}, {"determining": "Max( ( ( ( ( Min( ( ACS / ( DDR / MDR ) ) ,MRS ) - ARS ) * FirstVNF_RAM ) + RRS ) * Max( ACS,FirstVNF_RAM_Server ) ),Min( ( ACS * FirstVNF_RAM ) ,Min( AMS ,ACS ) ) )", "choosing": "Min( ( MUC / ( CS - DS ) ) ,( ( Max( Max( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MLU * RRSe ),MUC ) ),MLU ),MUC ) * DS ) * Max( MUM,DS ) ) )", "obj1": 0.6830708661417323, "obj2": 0.2316732584538734}], "3": [{"determining": "( ( ( FirstVNF_RAM / ( RRS * DDR ) ) * FirstVNF_RAM ) - Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / DS ) + MUM ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( MRS,Max( ( ARS / CRS ),MDR ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( ( CS / RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "( ( ARS + ( MRS / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,FirstVNF_RAM_Server ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / ( FirstVNF_RAM * Const ) ) + ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,Min( Max( RCSe,RRSe ) ,MUC ) ) ) - ( ( MUC - MUC ) + Max( DS,RCSe ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.6645276642473983}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5696958371208577}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( Min( ( ACS * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + Min( MRS ,ACS ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( ( MUR - MUR ) / ( ( Max( MUC,( RCSe - MUM ) ) - MUC ) * Max( ( ( MUC / DS ) - DS ),DS ) ) ) + RRSe ) * RRSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3221465801500557}, {"determining": "Max( Min( AMS ,FirstVNF_Mem ),( Min( Max( BR,ACS ) ,( MRS / DDR ) ) + Min( ( ACS * Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / Max( AMS,MRS ) ) ,( ( ( FirstVNF_Mem + CRS ) / ( FirstVNF_Mem_Server / PN ) ) * Min( AMS ,FirstVNF_Mem ) ) ) ) ,Min( Const ,BR ) ) ) )", "choosing": "( Max( MUR,Min( RMSe ,( ( MUC + RRSe ) / ( ( MUR - Max( DS,RMSe ) ) - MUR ) ) ) ) / ( ( ( RCSe / RCSe ) / ( MLU + RRSe ) ) / ( ( DS + ( MUR * RMSe ) ) + ( MUC * RMSe ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.3768144899558964}, {"determining": "( ( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,( ARS + MRS ) ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + ( PN * Const ) )", "choosing": "Min( ( Max( ( DS / Min( RCSe ,( MUC - MUM ) ) ),Min( CS ,RCSe ) ) / MUM ) ,( ( ( DS / MUM ) + ( RRSe + ( MUC / ( CS - MLU ) ) ) ) + ( MUR * CS ) ) )", "obj1": 0.9114173228346457, "obj2": 0.05358653792324068}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.781496062992126, "obj2": 0.12879652238656727}, {"determining": "( ( FirstVNF_RAM_Server / AMS ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( RMSe * MUR ) )", "obj1": 0.7716535433070866, "obj2": 0.17143893773800725}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( MRS * AMS ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( Min( DS ,MUR ) * MUM ) + Min( ( MUR / RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 0.5866141732283464, "obj2": 0.3065428580389491}, {"determining": "( ( FirstVNF_CPU - ( AMS / Const ) ) + ( ( FirstVNF_CPU_Server / Min( BR ,Min( MDR ,( FirstVNF_CPU_Server * MRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( Min( ( RMSe + MUR ) ,DS ) / ( DS + MUR ) ) ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "Max( ( Const + ARS ),( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( MLU - Max( CS,RRSe ) ) )", "obj1": 0.2992125984251969, "obj2": 0.48354642287586463}, {"determining": "Min( ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * ( Max( AMS,ARS ) / Max( PN,ARS ) ) ) ,( Max( ( MDR + PN ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ( ARS - MDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( DS * ( ( Max( RRSe,DS ) * ( RCSe / MUC ) ) - Max( ( MUC - MUM ),Min( DS ,DS ) ) ) )", "obj1": 0.6200787401574803, "obj2": 0.2652116523997993}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_CPU * ( BR / PN ) ) )", "choosing": "Min( ( ( MLU + RRSe ) / MUC ) ,( RCSe * DS ) )", "obj1": 0.7165354330708661, "obj2": 0.20814229155773026}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / DDR ),ACS ) * ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( DS * DS ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.10788501813826368}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "( ( ARS * PN ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( MUR / MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.46572266372729365}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4509641773630226}, {"determining": "Min( Max( Min( MDR ,( ( PN - MDR ) / FirstVNF_Mem_Server ) ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( CS,DS ) - ( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,( AMS * MDR ) ) )", "choosing": "Max( Max( MUR,DS ),Max( DS,DS ) )", "obj1": 0.40551181102362205, "obj2": 0.44853922955279313}, {"determining": "( ( FirstVNF_CPU * Max( AMS,FirstVNF_Mem_Server ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ( MRS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( MUR - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( CS + CS ) + MUC ) ) ) ),( ( RMSe * ( RRSe + ( MUM - DS ) ) ) + RMSe ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "Min( FirstVNF_RAM_Server ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / MUM ) / CS ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) )", "obj1": 0.6456692913385826, "obj2": 0.22879504140707835}, {"determining": "( Max( ACS,( RRS + RRS ) ) * Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( DS + MLU ) ) / Max( ( CS / MUM ),( MUR - RCSe ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3893133309704462}, {"determining": "( ( ( Min( Max( BR,( FirstVNF_RAM / ACS ) ) ,FirstVNF_CPU ) * ( CRS - FirstVNF_CPU_Server ) ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.6318897637795275, "obj2": 0.23701888923104694}, {"determining": "Min( Max( Min( ( Max( FirstVNF_CPU,( ( FirstVNF_Mem - Max( ACS,RRS ) ) * DDR ) ) + Min( CRS ,BR ) ) ,( CRS / MDR ) ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( DS,( Min( ( MUR + MUC ) ,MUC ) * Min( RCSe ,RCSe ) ) ) - ( ( ( ( ( ( RMSe / RRSe ) * MUM ) - RMSe ) + ( MUR + MLU ) ) / RMSe ) / RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.021250806347186218}, {"determining": "Max( ( DDR - FirstVNF_Mem ),( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_Mem ) - RRS ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MUC * RRSe ),MUC ) ) + Max( ( ( DS / MUR ) / MUR ),Min( ( MUM / DS ) ,RMSe ) ) ) + CS ) ) * ( RRSe - DS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5367777739291147}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * Const ) ) + ACS ) / MDR ) ,FirstVNF_Mem_Server ) ),( BR + DDR ) ) - ( PN - Const ) )", "choosing": "Max( Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( RMSe + RMSe ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,Max( ( DS * Max( ( Min( RCSe ,MUR ) / ( ( MLU * CS ) - MUM ) ),MLU ) ),RCSe ) ),( MLU - DS ) )", "obj1": 0.8700787401574803, "obj2": 0.09913370039447494}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( Min( Max( BR,ACS ) ,( MRS / DDR ) ) + Min( ( ACS * MDR ) ,Min( Const ,BR ) ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( Min( Max( DS,MUM ) ,( CS * MUC ) ) / MUM ) / ( ( MUM - MUM ) - MUC ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0006975077085034848}, {"determining": "Min( Max( FirstVNF_RAM,( ( PN + ( MRS * ( ARS + ( Const + Const ) ) ) ) + ACS ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( MLU * ( ( CS / CS ) + RRSe ) ) + RRSe ) * RRSe ) )", "obj1": 0.41141732283464566, "obj2": 0.40658154761661397}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) ) + Max( DDR,FirstVNF_Mem_Server ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( Min( ( RMSe * DS ) ,Max( MUR,MUM ) ) + RCSe ) + RRSe ) * RRSe ) )", "obj1": 0.4094488188976378, "obj2": 0.42310880905056963}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server / BR ) - ( FirstVNF_RAM * CRS ) ) + FirstVNF_CPU ) ,( Const * FirstVNF_RAM ) )", "choosing": "Min( ( MUM * DS ) ,( RMSe * RMSe ) )", "obj1": 0.6889763779527559, "obj2": 0.22087360313391438}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( Min( Max( ( AMS / FirstVNF_RAM ),( AMS / Min( DDR ,CRS ) ) ) ,( MRS * AMS ) ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( Min( RRSe ,MUC ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.0610236220472441, "obj2": 0.7186431356669737}, {"determining": "( ( ( DDR - FirstVNF_Mem ) + Const ) - ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / RMSe ) / ( Min( ( RRSe + Min( RCSe ,MUR ) ) ,( MLU / RMSe ) ) * ( ( CS / RRSe ) * Max( MUC,RCSe ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.39114117899096057}, {"determining": "( Max( ( BR - MRS ),( BR + DDR ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),Max( Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,MLU ),( MLU - DS ) ) )", "obj1": 0.8700787401574803, "obj2": 0.09913370039447494}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.5491358883323108}, {"determining": "Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( FirstVNF_CPU * ( BR / Max( Min( ( FirstVNF_RAM + FirstVNF_Mem ) ,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( MLU + MUC ) / MUC ) ,( RCSe * DS ) )", "obj1": 0.6988188976377953, "obj2": 0.21649938465113477}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / ( ( BR - Const ) + ( ( ( MRS / RRS ) - MDR ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( MLU ,RMSe ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7297882262985049}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( Min( MDR ,Min( Const ,PN ) ) ,MDR ) * ( BR * ARS ) ) )", "choosing": "( Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RCSe / MUR ) ) ) / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7353130743445538}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "Min( ( ( ( FirstVNF_Mem_Server / BR ) - ( FirstVNF_RAM * CRS ) ) + FirstVNF_CPU ) ,( Const * FirstVNF_RAM ) )", "choosing": "Min( ( MUM * DS ) ,( RMSe * RMSe ) )", "obj1": 0.6909448818897638, "obj2": 0.22004568472386835}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( ARS - FirstVNF_CPU_Server ) / Const ) )", "choosing": "Max( ( MUR + CS ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS + FirstVNF_Mem ) + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + Min( RCSe ,RCSe ) ) * Max( DS,( ( RRSe - MUC ) / ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ,FirstVNF_RAM ) - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( Max( MUR,Max( ( RCSe * ( Min( RCSe ,( RRSe - MLU ) ) / RRSe ) ),( MUM - MUR ) ) ) - ( ( MUC - RMSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( ( ARS * CRS ) - FirstVNF_CPU_Server ) ) - Max( PN,RRS ) ) - Max( PN,( CRS - Const ) ) )", "choosing": "Max( ( MLU / ( RRSe * ( DS * MLU ) ) ),( ( RMSe + Min( RRSe ,( Max( ( RRSe * MUM ),( DS - ( MUC / MLU ) ) ) / DS ) ) ) / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Max( CRS,PN ) + ACS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( MUM - RMSe ) ),Max( ( Max( RRSe,( ( Max( ( RMSe - RCSe ),CS ) - Max( RCSe,( RCSe + RCSe ) ) ) * MUR ) ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( DS ,( Max( DS,MLU ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Const + PN ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RMSe + ( RCSe / ( MUM * MLU ) ) ) ) * ( RCSe - RRSe ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( CS - Max( MLU,MLU ) ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( ( CS * Min( Max( MLU,( MLU + Max( RMSe,RCSe ) ) ) ,CS ) ) - ( MUC / DS ) ) ) * Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( Const * Const ),MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / RMSe ),MUM ),( MUR + DS ) ) - Max( ( MUM / Min( RMSe ,RCSe ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( ( RRS * FirstVNF_Mem_Server ),ARS ) * MDR ) ) - Max( Max( ( ( Const - BR ) - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( FirstVNF_Mem * Max( ARS,ACS ) ) ) ) )", "choosing": "Max( Max( ( MUR / DS ),DS ),( ( Min( RCSe ,MUC ) / Min( Max( ( ( Min( MUR ,RCSe ) / ( MLU / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( Max( ( ( RMSe + ( ( CS / MUM ) - MUR ) ) - Min( ( ( DS + DS ) + ( RCSe / Min( MUC ,CS ) ) ) ,RRSe ) ),MUM ) + Min( Min( ( ( DS + MUM ) / RRSe ) ,RMSe ) ,( DS * Max( DS,Max( ( Min( RRSe ,MUC ) * ( RCSe - DS ) ),( Max( CS,RMSe ) / ( MUC - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_RAM ) / ( ( RRS + PN ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( ( ( RRSe - DS ) * ( ( ( MLU / DS ) + MUR ) + MUC ) ) - DS ) ),( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Min( AMS ,CRS ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( CRS / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / Min( ( DDR / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ,BR ) ) ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - ( ( CS / MUM ) - RRSe ) ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * ( AMS / ( BR / ( CRS + MRS ) ) ) ) * ( Min( Max( ( AMS / FirstVNF_RAM ),( AMS / Min( DDR ,CRS ) ) ) ,( MRS * AMS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( Min( ( ( ( RMSe - CS ) + ( ( DS * CS ) * DS ) ) - RMSe ) ,Min( RRSe ,MUC ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + Max( ( CS / RMSe ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( FirstVNF_RAM + CRS ) )", "choosing": "( Min( ( ( RCSe + ( MUR + ( ( DS * RRSe ) + RRSe ) ) ) * MUM ) ,RCSe ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( Const,MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / Min( Min( DS ,MLU ) ,( ( MUM + ( ( RMSe / RMSe ) + DS ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,CRS ) - ( ( FirstVNF_Mem / FirstVNF_CPU ) * MDR ) )", "choosing": "Max( ( ( ( MLU + MUM ) / RMSe ) + ( Max( Max( MLU,Min( ( MUM / RMSe ) ,RCSe ) ),( RCSe - ( ( MUC / ( MLU / RRSe ) ) / RCSe ) ) ) - ( RMSe - RCSe ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / Max( RRS,Const ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( Max( ( CS / Max( Max( Min( RCSe ,RMSe ),( Max( DS,RRSe ) / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,( ACS * FirstVNF_CPU ) ) - ( Min( FirstVNF_RAM_Server ,RRS ) / FirstVNF_CPU ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( Min( ( MUC + MLU ) ,MUR ) - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( ( Max( MUC,DS ) * RCSe ),( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU - ( PN - FirstVNF_RAM_Server ) ) - MDR ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RMSe ) * MUM ) + Min( Max( ( ( RCSe - ( MUM + ( MUC - RMSe ) ) ) * ( RRSe + MUR ) ),RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,( ( MRS + BR ) * ( CRS - DDR ) ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,AMS ) ) ,( ACS * ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS / MUM ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( ( MLU + RRSe ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * ( DDR - DDR ) ) + Min( Min( ACS ,MRS ) ,( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe / ( MUR / RCSe ) ) * ( MLU + ( ( MUC * RMSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * CRS ) - ( ( FirstVNF_Mem_Server + DDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + Max( ( RRSe * RMSe ),( RCSe * MUC ) ) ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( Max( MUR,MUC ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * FirstVNF_CPU ) ,PN ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( ( RRSe - CS ) / ( MUR + ( RMSe / ( ( DS / ( MUC * RCSe ) ) + Max( RMSe,( DS - MUR ) ) ) ) ) ) ) * MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ACS )", "choosing": "Max( Min( RCSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( PN * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ARS + ACS ) / Max( Max( ( FirstVNF_RAM / MDR ),( DDR + BR ) ),( ( MDR + AMS ) - ( ACS * FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( ( MLU + RRSe ) ,RMSe ),( MUR / MUM ) ),( ( ( RCSe / MUM ) * CS ) + ( MUC + DS ) ) ) + ( Min( ( DS * MLU ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( PN,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),( BR / MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( ( ( RCSe * DS ) * RRSe ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( ( ( Max( BR,MRS ) - Max( PN,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - ( PN / ( FirstVNF_Mem_Server / ( BR - AMS ) ) ) ) ) * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( RCSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ) / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * ( MDR + AMS ) ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) * ( Max( ( Max( Max( Min( ( MLU + RRSe ) ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( CRS + Const ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe / RMSe ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( FirstVNF_RAM + CRS ) )", "choosing": "( Min( ( ( RCSe + ( MUR + ( ( DS * RRSe ) + RRSe ) ) ) * MUM ) ,RCSe ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS + MUM ) * MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( ARS / FirstVNF_CPU ) ,MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( ( MLU + MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + ACS ) ) )", "choosing": "Max( ( MLU * ( RRSe + RRSe ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,CRS ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),Min( ( AMS + FirstVNF_Mem ) ,Const ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( MUC ,RRSe ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / ( ACS + BR ) ) / Min( Const ,ARS ) ) - ( PN * Min( FirstVNF_CPU ,CRS ) ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( DS / ( RMSe - CS ) ),( MLU * Min( MUC ,Min( ( CS / MUC ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + ACS ) ) ) + ( Min( ( ( ( CRS * RRS ) / ( ACS / BR ) ) * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( Min( ( RCSe / ( DS / MUR ) ) ,( MUC + ( MUR - Min( MUM ,MUM ) ) ) ) - RRSe ) + ( ( RRSe * ( Max( MUC,( MLU / MLU ) ) - MUC ) ) / Max( RMSe,Min( RCSe ,MUR ) ) ) ),CS ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,( FirstVNF_RAM / ACS ) ) * PN ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( PN * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MUR + DS ) - RMSe ) ,Min( RRSe ,MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - PN ) - Max( ( ( ACS + Max( FirstVNF_Mem,BR ) ) - ( ARS / FirstVNF_RAM ) ),FirstVNF_RAM_Server ) ) * ( Max( AMS,FirstVNF_Mem ) / Max( PN,ARS ) ) ) ,( Max( ( MDR + PN ),( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / ( ( ARS - MDR ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( RRSe + RCSe ) ,( DS / DS ) ) * ( ( CS / MLU ) * Max( MUC,RCSe ) ) ) * ( ( Max( RRSe,DS ) * ( RCSe / MUC ) ) - Max( ( Max( MUC,MUM ) - ( ( MUR + MUR ) - ( Min( MUR ,MLU ) + ( CS * MUM ) ) ) ),RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( Min( ( ( ( DS - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - ( PN * Max( FirstVNF_RAM_Server,Const ) ) )", "choosing": "Max( ( DS / ( ( MUC + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( Min( Const ,FirstVNF_CPU_Server ) + Max( DDR,FirstVNF_Mem_Server ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) ) ) * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( Min( ( RMSe * DS ) ,Max( MUR,MUM ) ) + Min( ( RMSe - DS ) ,( CS - MUR ) ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS * CRS ) - ( Max( Max( AMS,Const ),MDR ) + MDR ) ) * RRS ) / Min( Const ,ARS ) ) - ( PN * MDR ) )", "choosing": "Max( ( ( ( MLU + MUM ) / RMSe ) + ( Max( Max( MLU,Min( RMSe ,( RMSe / MUC ) ) ),( RCSe - ( ( MUC / DS ) / RCSe ) ) ) - ( RMSe - RCSe ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( ( ARS * CRS ) - FirstVNF_CPU_Server ) ) - Max( PN,RRS ) ) - Max( PN,( CRS - Const ) ) )", "choosing": "Max( ( MLU / ( RRSe * ( DS * MLU ) ) ),( ( RMSe + Min( RRSe ,( Max( ( RRSe * MUM ),( DS - ( MUC / MLU ) ) ) / DS ) ) ) / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS * CRS ) - ( Max( Max( AMS,Const ),MDR ) + MDR ) ) * RRS ) / Min( Const ,ARS ) ) - ( PN * MDR ) )", "choosing": "Max( ( ( ( MLU + MUM ) / RMSe ) + ( Max( Max( MLU,RMSe ),( RCSe - ( ( MUC / DS ) / RCSe ) ) ) - ( RMSe - RCSe ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / ( PN * FirstVNF_CPU ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( MUM,( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( AMS * CRS ) - ( Max( ( Const + ( FirstVNF_CPU_Server / ACS ) ),MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - Max( RMSe,Min( Max( Max( RRSe,MUR ),CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM / ( RRS * DDR ) ) * FirstVNF_RAM ) - Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / DS ) + MUM ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Min( MUC ,MLU ) )", "obj1": 0.7165354330708661, "obj2": 0.19710770373924988}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.781496062992126, "obj2": 0.12879652238656727}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( Min( ( ACS * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + Min( MRS ,ACS ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( ( MUR - MUR ) / ( ( Max( MUC,( RCSe - MUM ) ) - MUC ) * Max( ( ( MUC / DS ) - DS ),DS ) ) ) + RRSe ) * RRSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3221465801500557}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( MRS * AMS ) ,AMS ) )", "choosing": "( ( Min( DS ,MUR ) * MUM ) + ( RMSe + ( MUM - ( Min( MUM ,MUM ) + ( Min( ( RRSe + ( RRSe * MLU ) ) ,Max( MUC,MLU ) ) * CS ) ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.30392508430110704}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5696958371208577}, {"determining": "Max( ( ( Const * ( Max( Max( Min( RRS ,FirstVNF_RAM_Server ),Const ),Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) * RRS ) ) * ( RRS * MDR ) ),Min( MDR ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * Max( Max( MLU,Min( RMSe ,CS ) ),( Min( RRSe ,( ( MUC - CS ) - CS ) ) - ( ( MUC / DS ) / RCSe ) ) ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.6420040670390089}, {"determining": "( ( FirstVNF_RAM_Server / AMS ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( RMSe * MUR ) )", "obj1": 0.7716535433070866, "obj2": 0.17143893773800725}, {"determining": "Max( ( Const + ARS ),( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( MLU - Max( CS,RRSe ) ) )", "obj1": 0.2992125984251969, "obj2": 0.48354642287586463}, {"determining": "Min( ( FirstVNF_Mem_Server * RRS ) ,Min( ( ACS - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / Min( DS ,MUR ) ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) )", "obj1": 0.6122047244094488, "obj2": 0.2513323651094648}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( CRS + ACS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( ( RCSe * MLU ) - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.639763779527559, "obj2": 0.2106915731354793}, {"determining": "( ( ARS + ( MRS / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,FirstVNF_RAM_Server ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / ( FirstVNF_RAM * Const ) ) + ( FirstVNF_Mem / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( ( Min( RMSe ,MUR ) - Max( MUM,Min( Max( RCSe,RRSe ) ,MUC ) ) ) - ( ( MUC - MUC ) + Max( DS,RCSe ) ) ) )", "obj1": 0.13976377952755906, "obj2": 0.6645276642473983}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - Min( ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ,PN ) )", "choosing": "Max( Min( RCSe ,MLU ),( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.3761429336434246}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) + Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem_Server ,Min( ( AMS + ( Min( Min( ARS ,FirstVNF_RAM ) ,ARS ) / FirstVNF_Mem ) ) ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( RCSe ,( Min( Max( ( ( Min( MLU ,MUR ) / DS ) / RRSe ),CS ) ,( ( MUR + DS ) - MLU ) ) + DS ) ) / ( DS - RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.7015219299137676}, {"determining": "( ( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,( ARS + MRS ) ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + ( PN * Const ) )", "choosing": "Min( ( Max( ( DS / Min( RCSe ,( MUC - MUM ) ) ),Min( CS ,RCSe ) ) / MUM ) ,( ( ( DS / MUM ) + ( RRSe + ( MUC / ( CS - MLU ) ) ) ) + ( MUR * CS ) ) )", "obj1": 0.9114173228346457, "obj2": 0.05358653792324068}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,( AMS * MDR ) ) )", "choosing": "Max( Max( MUR,DS ),Max( DS,DS ) )", "obj1": 0.40551181102362205, "obj2": 0.44853922955279313}, {"determining": "( ( ARS * PN ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC / CS ) - ( MUR / MUR ) )", "obj1": 0.33267716535433073, "obj2": 0.46572266372729365}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ARS + DDR ) + Max( AMS,ARS ) ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,CS ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.3543307086614173, "obj2": 0.4509641773630226}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / DDR ),ACS ) * ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( DS * DS ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.10788501813826368}, {"determining": "Min( ( FirstVNF_RAM_Server * ARS ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( DDR - MDR ) ) ) ) ) )", "choosing": "( Max( Max( ( CS / Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) ),( Min( RCSe ,RRSe ) / ( DS - RRSe ) ) ),( Max( RCSe,RRSe ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.8877952755905512, "obj2": 0.09026961973552293}, {"determining": "( ( ( Min( Max( BR,( FirstVNF_RAM / ACS ) ) ,FirstVNF_CPU ) * ( CRS - FirstVNF_CPU_Server ) ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.6318897637795275, "obj2": 0.23701888923104694}, {"determining": "( ( FirstVNF_CPU * Max( AMS,FirstVNF_Mem_Server ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ( MRS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( MUR - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( CS + CS ) + MUC ) ) ) ),( ( RMSe * ( RRSe + ( MUM - DS ) ) ) + RMSe ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "( Max( ACS,( RRS + RRS ) ) * Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( DS + MLU ) ) / Max( ( CS / MUM ),( MUR - RCSe ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3893133309704462}, {"determining": "Min( Max( Min( ( Max( FirstVNF_CPU,( ( FirstVNF_Mem - Max( ACS,RRS ) ) * DDR ) ) + Min( CRS ,BR ) ) ,( CRS / MDR ) ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( DS,( Min( ( MUR + MUC ) ,MUC ) * Min( RCSe ,RCSe ) ) ) - ( ( ( ( ( ( RMSe / RRSe ) * MUM ) - RMSe ) + ( MUR + MLU ) ) / RMSe ) / RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.021250806347186218}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),MLU ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.039933254774112394}, {"determining": "Max( ( DDR - FirstVNF_Mem ),( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_Mem ) - RRS ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MUC * RRSe ),MUC ) ) + Max( ( ( DS / MUR ) / MUR ),Min( ( MUM / DS ) ,RMSe ) ) ) + CS ) ) * ( RRSe - DS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5367777739291147}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) ) + Max( DDR,PN ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( Min( ( RMSe * DS ) ,( ( ( DS - RCSe ) + ( MUM + MLU ) ) - RMSe ) ) + RCSe ) + RRSe ) * RRSe ) )", "obj1": 0.4881889763779528, "obj2": 0.377602801871038}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( CRS * CRS ),Min( MDR ,MRS ) ) + ( RRS / Max( ( ( FirstVNF_CPU_Server / MRS ) - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( FirstVNF_CPU_Server - ( ACS / Max( CRS,MDR ) ) ) ) )", "choosing": "( ( ( ( Max( ( MLU - ( Min( MUC ,MUM ) * MUC ) ),( RRSe + Max( ( RCSe - MUR ),MUR ) ) ) / Max( Max( ( MUC - RMSe ),MUR ),( MUR + CS ) ) ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + Min( RRSe ,MLU ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "Min( Min( Const ,ARS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / MUM ) / CS ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) )", "obj1": 0.4074803149606299, "obj2": 0.41247114745232666}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( Min( Max( ( AMS / FirstVNF_RAM ),( AMS / Min( DDR ,CRS ) ) ) ,( MRS * AMS ) ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( Min( RRSe ,MUC ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.0610236220472441, "obj2": 0.7186431356669737}, {"determining": "( ( FirstVNF_CPU - ( AMS / Const ) ) + ( ( FirstVNF_CPU_Server / Min( BR ,Min( MDR ,( FirstVNF_CPU_Server * MRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( Min( ( RMSe + MUR ) ,DS ) / ( DS + MUR ) ) ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "( ( ( DDR - FirstVNF_Mem ) + Const ) - ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / RMSe ) / ( Min( ( RRSe + Min( RCSe ,MUR ) ) ,( MLU / RMSe ) ) * ( ( CS / RRSe ) * Max( MUC,RCSe ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.39114117899096057}, {"determining": "Min( Max( FirstVNF_RAM,( ( PN + ( MRS * ( ARS + ( Const + Const ) ) ) ) + ACS ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( MLU * ( ( CS / CS ) + RRSe ) ) + RRSe ) * RRSe ) )", "obj1": 0.41141732283464566, "obj2": 0.40658154761661397}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.5491358883323108}, {"determining": "Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03247463066148501}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / ( ( BR - Const ) + ( ( ( MRS / RRS ) - MDR ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( MLU ,RMSe ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7297882262985049}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( Min( MDR ,Min( Const ,PN ) ) ,MDR ) * ( BR * ARS ) ) )", "choosing": "( Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RCSe / MUR ) ) ) / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7353130743445538}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + FirstVNF_CPU_Server ) ) ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) + ( ( RRSe - CS ) / MUR ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.10788501813826368}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * Const ) ) + ACS ) / MDR ) ,FirstVNF_Mem_Server ) ),( BR + DDR ) ) - ( PN - Const ) )", "choosing": "Max( Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( RMSe + RMSe ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,Max( ( DS * Max( ( Min( RCSe ,MUR ) / ( ( MLU * CS ) - MUM ) ),MLU ) ),RCSe ) ),( MLU - DS ) )", "obj1": 0.8799212598425197, "obj2": 0.09528393122308916}, {"determining": "Min( Max( Min( MDR ,( ( PN - MDR ) / FirstVNF_Mem_Server ) ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( CS,DS ) - ( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "Max( Min( AMS ,FirstVNF_Mem ),( Min( Max( BR,ACS ) ,( MRS / DDR ) ) + Min( ( ACS * Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / Max( AMS,MRS ) ) ,( ( ( FirstVNF_Mem + CRS ) / ( FirstVNF_Mem_Server / PN ) ) * Min( AMS ,FirstVNF_Mem ) ) ) ) ,Min( Const ,BR ) ) ) )", "choosing": "( Max( MUR,Min( RMSe ,( ( MUC + RRSe ) / ( ( MUR - Max( DS,RMSe ) ) - MUR ) ) ) ) / ( ( ( RCSe / RCSe ) / ( MLU + RRSe ) ) / ( ( DS + ( MUR * RMSe ) ) + ( MUC * RMSe ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.3768144899558964}, {"determining": "( Max( ( ( ( BR / MDR ) * FirstVNF_Mem_Server ) - MRS ),( BR + DDR ) ) - Max( ( FirstVNF_CPU_Server / Const ),BR ) )", "choosing": "Max( Min( ( CS - Max( CS,( RRSe + Max( MUC,RMSe ) ) ) ) ,MLU ),( MLU - ( MUC * MLU ) ) )", "obj1": 0.8641732283464567, "obj2": 0.10187068551089645}, {"determining": "( Max( ( BR - MRS ),( BR + DDR ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),Max( Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,MLU ),( MLU - DS ) ) )", "obj1": 0.8700787401574803, "obj2": 0.09913370039447494}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * Const ) ) + ACS ) / MDR ) ,FirstVNF_Mem_Server ) ),( BR + DDR ) ) - ( PN - Const ) )", "choosing": "Max( Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( RMSe + RMSe ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,Max( ( DS * Max( ( Min( RCSe ,MUR ) / ( ( MLU * CS ) - MUM ) ),MLU ) ),RCSe ) ),( MLU - DS ) )", "obj1": 0.8700787401574803, "obj2": 0.09913370039447494}, {"determining": "( ( PN - Max( MRS,Max( ( ARS / CRS ),MDR ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( ( CS / RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( ARS - FirstVNF_CPU_Server ) / Const ) )", "choosing": "Max( ( MUR + CS ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS + FirstVNF_Mem ) + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + Min( RCSe ,RCSe ) ) * Max( DS,( ( RRSe - MUC ) / ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ,FirstVNF_RAM ) - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( Max( MUR,Max( ( RCSe * ( Min( RCSe ,( RRSe - MLU ) ) / RRSe ) ),( MUM - MUR ) ) ) - ( ( MUC - RMSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( ( ARS * CRS ) - FirstVNF_CPU_Server ) ) - Max( PN,RRS ) ) - Max( PN,( CRS - Const ) ) )", "choosing": "Max( ( MLU / ( RRSe * ( DS * MLU ) ) ),( ( RMSe + Min( RRSe ,( Max( ( RRSe * MUM ),( DS - ( MUC / MLU ) ) ) / DS ) ) ) / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Max( CRS,PN ) + ACS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( MUM - RMSe ) ),Max( ( Max( RRSe,( ( Max( ( RMSe - RCSe ),CS ) - Max( RCSe,( RCSe + RCSe ) ) ) * MUR ) ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( DS ,( Max( DS,MLU ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Const + PN ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RMSe + ( RCSe / ( MUM * MLU ) ) ) ) * ( RCSe - RRSe ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( CS - Max( MLU,MLU ) ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( ( CS * Min( Max( MLU,( MLU + Max( RMSe,RCSe ) ) ) ,CS ) ) - ( MUC / DS ) ) ) * Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( Const * Const ),MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / RMSe ),MUM ),( MUR + DS ) ) - Max( ( MUM / Min( RMSe ,RCSe ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( ( RRS * FirstVNF_Mem_Server ),ARS ) * MDR ) ) - Max( Max( ( ( Const - BR ) - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( FirstVNF_Mem * Max( ARS,ACS ) ) ) ) )", "choosing": "Max( Max( ( MUR / DS ),DS ),( ( Min( RCSe ,MUC ) / Min( Max( ( ( Min( MUR ,RCSe ) / ( MLU / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( Max( ( ( RMSe + ( ( CS / MUM ) - MUR ) ) - Min( ( ( DS + DS ) + ( RCSe / Min( MUC ,CS ) ) ) ,RRSe ) ),MUM ) + Min( Min( ( ( DS + MUM ) / RRSe ) ,RMSe ) ,( DS * Max( DS,Max( ( Min( RRSe ,MUC ) * ( RCSe - DS ) ),( Max( CS,RMSe ) / ( MUC - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_RAM ) / ( ( RRS + PN ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( ( ( RRSe - DS ) * ( ( ( MLU / DS ) + MUR ) + MUC ) ) - DS ) ),( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Min( AMS ,CRS ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( CRS / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / Min( ( DDR / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ,BR ) ) ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - ( ( CS / MUM ) - RRSe ) ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * ( AMS / ( BR / ( CRS + MRS ) ) ) ) * ( Min( Max( ( AMS / FirstVNF_RAM ),( AMS / Min( DDR ,CRS ) ) ) ,( MRS * AMS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( Min( ( ( ( RMSe - CS ) + ( ( DS * CS ) * DS ) ) - RMSe ) ,Min( RRSe ,MUC ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + Max( ( CS / RMSe ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( FirstVNF_RAM + CRS ) )", "choosing": "( Min( ( ( RCSe + ( MUR + ( ( DS * RRSe ) + RRSe ) ) ) * MUM ) ,RCSe ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( Const,MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / Min( Min( DS ,MLU ) ,( ( MUM + ( ( RMSe / RMSe ) + DS ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,CRS ) - ( ( FirstVNF_Mem / FirstVNF_CPU ) * MDR ) )", "choosing": "Max( ( ( ( MLU + MUM ) / RMSe ) + ( Max( Max( MLU,Min( ( MUM / RMSe ) ,RCSe ) ),( RCSe - ( ( MUC / ( MLU / RRSe ) ) / RCSe ) ) ) - ( RMSe - RCSe ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / Max( RRS,Const ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( Max( ( CS / Max( Max( Min( RCSe ,RMSe ),( Max( DS,RRSe ) / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,( ACS * FirstVNF_CPU ) ) - ( Min( FirstVNF_RAM_Server ,RRS ) / FirstVNF_CPU ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( Min( ( MUC + MLU ) ,MUR ) - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( ( Max( MUC,DS ) * RCSe ),( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU - ( PN - FirstVNF_RAM_Server ) ) - MDR ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RMSe ) * MUM ) + Min( Max( ( ( RCSe - ( MUM + ( MUC - RMSe ) ) ) * ( RRSe + MUR ) ),RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,( ( MRS + BR ) * ( CRS - DDR ) ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,AMS ) ) ,( ACS * ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS / MUM ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( ( MLU + RRSe ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * ( DDR - DDR ) ) + Min( Min( ACS ,MRS ) ,( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe / ( MUR / RCSe ) ) * ( MLU + ( ( MUC * RMSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * CRS ) - ( ( FirstVNF_Mem_Server + DDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + Max( ( RRSe * RMSe ),( RCSe * MUC ) ) ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( Max( MUR,MUC ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * FirstVNF_CPU ) ,PN ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( ( RRSe - CS ) / ( MUR + ( RMSe / ( ( DS / ( MUC * RCSe ) ) + Max( RMSe,( DS - MUR ) ) ) ) ) ) ) * MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ACS )", "choosing": "Max( Min( RCSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( PN * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ARS + ACS ) / Max( Max( ( FirstVNF_RAM / MDR ),( DDR + BR ) ),( ( MDR + AMS ) - ( ACS * FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( ( MLU + RRSe ) ,RMSe ),( MUR / MUM ) ),( ( ( RCSe / MUM ) * CS ) + ( MUC + DS ) ) ) + ( Min( ( DS * MLU ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( PN,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),( BR / MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( ( ( RCSe * DS ) * RRSe ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( ( ( Max( BR,MRS ) - Max( PN,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - ( PN / ( FirstVNF_Mem_Server / ( BR - AMS ) ) ) ) ) * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( RCSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ) / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * ( MDR + AMS ) ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) * ( Max( ( Max( Max( Min( ( MLU + RRSe ) ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( CRS + Const ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe / RMSe ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( FirstVNF_RAM + CRS ) )", "choosing": "( Min( ( ( RCSe + ( MUR + ( ( DS * RRSe ) + RRSe ) ) ) * MUM ) ,RCSe ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS + MUM ) * MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( ARS / FirstVNF_CPU ) ,MDR ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * ( ( MLU + MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * RRS ) / Min( Const ,ARS ) ) - Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + ACS ) ) )", "choosing": "Max( ( MLU * ( RRSe + RRSe ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,CRS ) - Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),Min( ( AMS + FirstVNF_Mem ) ,Const ) ) )", "choosing": "Max( Max( RMSe,DS ),( ( Min( RCSe ,MUC ) / Min( MUC ,RRSe ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / ( ACS + BR ) ) / Min( Const ,ARS ) ) - ( PN * Min( FirstVNF_CPU ,CRS ) ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( ( MLU * MUR ) - ( MUM - MUC ) ) ),Max( ( DS / ( RMSe - CS ) ),( MLU * Min( MUC ,Min( ( CS / MUC ) ,MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + ACS ) ) ) + ( Min( ( ( ( CRS * RRS ) / ( ACS / BR ) ) * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( Min( ( RCSe / ( DS / MUR ) ) ,( MUC + ( MUR - Min( MUM ,MUM ) ) ) ) - RRSe ) + ( ( RRSe * ( Max( MUC,( MLU / MLU ) ) - MUC ) ) / Max( RMSe,Min( RCSe ,MUR ) ) ) ),CS ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,( FirstVNF_RAM / ACS ) ) * PN ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( PN * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( MUR + DS ) - RMSe ) ,Min( RRSe ,MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( ( FirstVNF_RAM_Server * ( BR + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( PN - RRS ) ) - ( ( FirstVNF_Mem_Server + DDR ) + MDR ) )", "choosing": "Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,( ( CS * Max( ( ( MUR / DS ) * MLU ),DS ) ) - ( Max( MUR,MUC ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( Const + ( FirstVNF_CPU_Server / ACS ) ),MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - Max( RMSe,Min( Max( Max( RRSe,MUR ),CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "Max( ( ( FirstVNF_CPU_Server / BR ) * ( RRS * Max( FirstVNF_CPU,( BR / MDR ) ) ) ),Min( MDR ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + ( ( Min( RCSe ,Max( RCSe,MUC ) ) / ( RMSe / RRSe ) ) - ( RRSe + Max( MUM,( MUC * MUC ) ) ) ) ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Min( ( DS + RMSe ) ,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * Max( Max( MLU,Min( RMSe ,CS ) ),( Min( RRSe ,( ( DS - CS ) - CS ) ) - ( ( MUC / DS ) / RCSe ) ) ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6391768680223717}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.3188976377952756, "obj2": 0.44413469038829473}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,( MRS / FirstVNF_CPU ) ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( DS * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.6909448818897638, "obj2": 0.19063988711384716}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( ( MDR * Const ) ,FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ( FirstVNF_RAM_Server * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * CRS ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUM + DS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,( RRSe + Max( ( MUR * MLU ),( RCSe * MUC ) ) ) ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.4012450285572005}, {"determining": "( ( FirstVNF_RAM_Server / AMS ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( ( FirstVNF_CPU * FirstVNF_Mem_Server ) / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,MUM ) + ( RMSe * MUR ) )", "obj1": 0.7716535433070866, "obj2": 0.17143893773800725}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5696958371208577}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.781496062992126, "obj2": 0.12879652238656727}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( MRS * AMS ) ,AMS ) )", "choosing": "( ( Min( DS ,MUR ) * MUM ) + ( RMSe + ( MUM - ( Min( MUM ,MUM ) + ( Min( ( RRSe + ( RRSe * MLU ) ) ,Max( MUC,MLU ) ) * CS ) ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.30392508430110704}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) + Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem_Server ,Min( ( AMS + ( Min( Min( ARS ,FirstVNF_RAM ) ,ARS ) / FirstVNF_Mem ) ) ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( RCSe ,( Min( Max( ( ( Min( MLU ,MUR ) / DS ) / RRSe ),CS ) ,( ( MUR + DS ) - MLU ) ) + DS ) ) / ( DS - RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.7015219299137676}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( Min( ( ACS * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + Min( MRS ,ACS ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( ( MUR - MUR ) / ( ( Max( MUC,( RCSe - MUM ) ) - MUC ) * Max( ( ( MUC / DS ) - DS ),DS ) ) ) + RRSe ) * RRSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3221465801500557}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( CRS + ACS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( ( RCSe * MLU ) - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.639763779527559, "obj2": 0.2106915731354793}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "Max( ( Const + ARS ),( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "Min( Min( CS ,DS ) ,( MLU - Max( CS,RRSe ) ) )", "obj1": 0.2992125984251969, "obj2": 0.48354642287586463}, {"determining": "( Max( ( BR - MRS ),( BR + DDR ) ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),Max( Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( MLU + RCSe ) ) ,MLU ),( MLU - DS ) ) )", "obj1": 0.8562992125984252, "obj2": 0.1134753983840329}, {"determining": "Max( Min( AMS ,FirstVNF_Mem ),( Min( Max( BR,ACS ) ,( MRS / DDR ) ) + Min( ( ACS * Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / Max( AMS,MRS ) ) ,( ( ( FirstVNF_Mem + CRS ) / ( FirstVNF_Mem_Server / MRS ) ) * Min( AMS ,FirstVNF_Mem ) ) ) ) ,Min( Const ,BR ) ) ) )", "choosing": "( Max( MUR,Min( RMSe ,( ( MUC + RRSe ) / Min( Max( RCSe,RRSe ) ,MUC ) ) ) ) / ( ( ( RCSe / RCSe ) / ( MLU + RRSe ) ) / ( ( DS + ( MUR * RMSe ) ) + ( MUC * RMSe ) ) ) )", "obj1": 0.5177165354330708, "obj2": 0.35827610004837546}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),RRS ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( RCSe ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.5885826771653543, "obj2": 0.2529545008313596}, {"determining": "Min( ( FirstVNF_RAM_Server * ARS ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( DDR - MDR ) ) ) ) ) )", "choosing": "( Max( Max( ( CS / Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) ),( Min( RCSe ,RRSe ) / ( DS - RRSe ) ) ),( Max( RCSe,RRSe ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.8877952755905512, "obj2": 0.09026961973552293}, {"determining": "( ( ( Min( Max( BR,( FirstVNF_RAM / ACS ) ) ,FirstVNF_CPU ) * ( CRS - FirstVNF_CPU_Server ) ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.6318897637795275, "obj2": 0.23701888923104694}, {"determining": "( ( FirstVNF_CPU * Max( AMS,FirstVNF_Mem_Server ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ( MRS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( MUR - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( CS + CS ) + MUC ) ) ) ),( ( RMSe * ( RRSe + ( MUM - DS ) ) ) + RMSe ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "( ( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,( ARS + MRS ) ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + ( PN * Const ) )", "choosing": "Min( ( Max( ( DS / Min( RCSe ,( MUC - MUM ) ) ),Min( CS ,RCSe ) ) / MUM ) ,( ( ( DS / MUM ) + ( RRSe + ( MUC / ( CS - MLU ) ) ) ) + ( MUR * CS ) ) )", "obj1": 0.9114173228346457, "obj2": 0.05358653792324068}, {"determining": "Max( ( DDR - FirstVNF_Mem ),( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_Mem ) - RRS ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MUC * RRSe ),MUC ) ) + Max( ( ( DS / MUR ) / MUR ),Min( ( MUM / DS ) ,RMSe ) ) ) + CS ) ) * ( RRSe - DS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5367777739291147}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),MLU ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.039933254774112394}, {"determining": "Min( ( FirstVNF_Mem_Server * RRS ) ,Min( ( ACS - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / Min( DS ,MUR ) ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) )", "obj1": 0.6122047244094488, "obj2": 0.2513323651094648}, {"determining": "( Max( ACS,( RRS + RRS ) ) * Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( DS + MLU ) ) / Max( ( CS / MUM ),( MUR - RCSe ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3893133309704462}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( ( ( FirstVNF_Mem * FirstVNF_RAM ) - FirstVNF_Mem ) * CRS ) + BR ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( Min( ( RMSe * DS ) ,( ( ( DS - RCSe ) + ( MUM + RMSe ) ) - RMSe ) ) + RCSe ) + RRSe ) * RRSe ) )", "obj1": 0.484251968503937, "obj2": 0.3855476709946311}, {"determining": "Min( Max( Min( ( Max( FirstVNF_CPU,( ( FirstVNF_Mem - Max( ACS,RRS ) ) * DDR ) ) + Min( CRS ,BR ) ) ,( CRS / MDR ) ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( DS,( Min( ( MUR + MUC ) ,MUC ) * Min( RCSe ,RCSe ) ) ) - ( ( ( ( ( ( RMSe / RRSe ) * MUM ) - RMSe ) + ( MUR + MLU ) ) / RMSe ) / RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.021250806347186218}, {"determining": "( ( FirstVNF_CPU - ( AMS / Const ) ) + ( ( FirstVNF_CPU_Server / Min( BR ,Min( MDR ,( FirstVNF_CPU_Server * MRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( Min( ( RMSe + MUR ) ,DS ) / ( DS + MUR ) ) ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "Max( ( Const + ARS ),ACS )", "choosing": "Min( Min( Max( Min( RCSe ,MLU ),( MLU - DS ) ) ,DS ) ,( MLU - Max( CS,RRSe ) ) )", "obj1": 0.2992125984251969, "obj2": 0.48354642287586463}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( Min( Max( ( AMS / FirstVNF_RAM ),( AMS / Min( DDR ,CRS ) ) ) ,( MRS * AMS ) ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( Min( RRSe ,MUC ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.0610236220472441, "obj2": 0.7186431356669737}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - Min( ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ,PN ) )", "choosing": "Max( Min( RCSe ,MLU ),( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.3761429336434246}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.5491358883323108}, {"determining": "( ( ( DDR - FirstVNF_Mem ) + Const ) - ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / RMSe ) / ( Min( ( RRSe + Min( RCSe ,MUR ) ) ,( MLU / RMSe ) ) * ( ( CS / RRSe ) * Max( MUC,RCSe ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.39114117899096057}, {"determining": "( Max( ( ( ( FirstVNF_RAM_Server + Min( RRS ,MRS ) ) * FirstVNF_Mem_Server ) - MRS ),( BR + ( ACS - Min( ( DDR - ( Max( ARS,CRS ) + FirstVNF_CPU ) ) ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( ( ( ( DS / MUM ) + ( ( MUR + MLU ) / Max( Max( ( CS * MLU ),MUR ),MUC ) ) ) / ( MUR / Min( ( ( Min( CS ,DS ) - MLU ) / RMSe ) ,( MUM * MUR ) ) ) ) ,MLU ),( MLU - DS ) )", "obj1": 0.9881889763779528, "obj2": 0.0055772801951172474}, {"determining": "( ( AMS - MDR ) / ( PN - FirstVNF_CPU_Server ) )", "choosing": "( RMSe / ( Min( ( ( DS + RMSe ) + ( ( ( ( RMSe - MUM ) + Max( MLU,MUR ) ) - RCSe ) - MUR ) ) ,( Min( RRSe ,MUC ) * DS ) ) / ( Max( ( MUC - ( DS + MUM ) ),MUC ) * ( ( ( MUM + MUR ) + Max( ( Max( RMSe,MLU ) + ( DS + DS ) ),RMSe ) ) - RMSe ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7267023412407313}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ( Min( ( Max( AMS,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( RRSe / MUM ) ,( ( ( Max( Min( ( DS + ( RRSe + MUR ) ) ,RCSe ),Min( RMSe ,CS ) ) / MUM ) + ( RRSe + MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.053279336630289165}, {"determining": "Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03247463066148501}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,( ( Max( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - MRS ),( BR + DDR ) ) - ( FirstVNF_Mem - BR ) ) * MDR ) ) )", "choosing": "Max( Max( MUR,DS ),( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( ( ( MUR - RRSe ) / MUR ) / RMSe ) ,( MUM * MUR ) ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7351994935315525}, {"determining": "Max( Min( AMS ,FirstVNF_Mem ),( Min( Max( BR,ACS ) ,( MRS / DDR ) ) + Min( ( ACS * Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / Max( AMS,MRS ) ) ,( ( ( FirstVNF_Mem + CRS ) / ( FirstVNF_Mem_Server / PN ) ) * Min( AMS ,FirstVNF_Mem ) ) ) ) ,Min( Const ,BR ) ) ) )", "choosing": "( Max( MUR,Min( RMSe ,( ( MUC + RRSe ) / ( ( MUR - Max( DS,RMSe ) ) - MUR ) ) ) ) / ( ( ( RCSe / RCSe ) / ( MLU + RRSe ) ) / ( ( DS + ( MUR * RMSe ) ) + ( MUC * RMSe ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.3768144899558964}, {"determining": "( Max( ( ( ( BR / MDR ) * FirstVNF_Mem_Server ) - MRS ),( BR + DDR ) ) - Max( ( FirstVNF_CPU_Server / Const ),BR ) )", "choosing": "Max( Min( ( CS - Max( CS,( RRSe + Max( MUC,RMSe ) ) ) ) ,MLU ),( MLU - ( MUC * MLU ) ) )", "obj1": 0.8641732283464567, "obj2": 0.10187068551089645}, {"determining": "Min( Max( Min( MDR ,( ( PN - MDR ) / FirstVNF_Mem_Server ) ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( CS,DS ) - ( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( Min( MDR ,Min( Const ,PN ) ) ,MDR ) * ( BR * ARS ) ) )", "choosing": "( Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RCSe / MUR ) ) ) / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7353130743445538}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) ) + Max( DDR,PN ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( Min( ( RMSe * DS ) ,( ( ( DS - RCSe ) + ( MUM + MLU ) ) - RMSe ) ) + RCSe ) + RRSe ) * RRSe ) )", "obj1": 0.4881889763779528, "obj2": 0.377602801871038}, {"determining": "( Max( ( ( ( BR / MDR ) * FirstVNF_Mem_Server ) - MRS ),PN ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( ( ( Min( ( MUM / RMSe ) ,RCSe ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( MUR / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,MLU ),( MLU - DS ) )", "obj1": 0.9901574803149606, "obj2": 0.004195060088001996}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * Const ) ) + ACS ) / MDR ) ,FirstVNF_Mem_Server ) ),( BR + DDR ) ) - ( PN - Const ) )", "choosing": "Max( Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( RMSe + RMSe ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,Max( ( DS * Max( ( Min( RCSe ,MUR ) / ( ( MLU * CS ) - MUM ) ),MLU ) ),RCSe ) ),( MLU - DS ) )", "obj1": 0.8799212598425197, "obj2": 0.09528393122308916}, {"determining": "( Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server * Const ) ) + ACS ) / MDR ) ,FirstVNF_Mem_Server ) ),( BR + DDR ) ) - ( PN - Const ) )", "choosing": "Max( Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( RMSe + RMSe ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,Max( ( DS * Max( ( Min( RCSe ,MUR ) / ( ( MLU * CS ) - MUM ) ),MLU ) ),RCSe ) ),( MLU - DS ) )", "obj1": 0.8700787401574803, "obj2": 0.09913370039447494}, {"determining": "( Max( ( BR - Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / PN ) ) + ACS ) / MDR ) ,( CRS + Const ) ) ),( BR + DDR ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / ( ( RRSe / RMSe ) / Min( MUR ,RMSe ) ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,Max( ( DS * DS ),RCSe ) ),( MLU - DS ) )", "obj1": 0.8799212598425197, "obj2": 0.09528393122308916}, {"determining": "Min( Max( Min( BR ,( AMS * CRS ) ),ARS ) ,Min( BR ,FirstVNF_CPU ) )", "choosing": "( Max( MUC,MUM ) - ( MLU + ( RMSe - DS ) ) )", "obj1": 0.9566929133858267, "obj2": 0.030148309536542302}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / DDR ),ACS ) * ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( DS * DS ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.10788501813826368}, {"determining": "Min( Const ,( ( RRS + ACS ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Max( MUC,MUM ) - ( ( Min( ( MUC + MUM ) ,MLU ) / Min( MUM ,( RCSe * MUM ) ) ) + RMSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03247463066148501}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + FirstVNF_CPU_Server ) ) ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) + ( ( RRSe - CS ) / MUR ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.10788501813826368}, {"determining": "( Max( ( BR - MRS ),( BR + DDR ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),Max( Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,MLU ),( MLU - DS ) ) )", "obj1": 0.8700787401574803, "obj2": 0.09913370039447494}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( CRS * CRS ),Min( MDR ,MRS ) ) + ( RRS / Max( ( ( FirstVNF_CPU_Server / MRS ) - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( FirstVNF_CPU_Server - ( ACS / Max( CRS,MDR ) ) ) ) )", "choosing": "( ( ( ( Max( ( MLU - ( Min( MUC ,MUM ) * MUC ) ),( RRSe + Max( ( RCSe - MUR ),MUR ) ) ) / Max( Max( ( MUC - RMSe ),MUR ),( MUR + CS ) ) ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + Min( RRSe ,MLU ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,FirstVNF_RAM_Server ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( MUR,MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( ( FirstVNF_RAM / ( RRS * DDR ) ) * FirstVNF_RAM ) - Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / DS ) + MUM ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( MRS,Max( ( ARS / CRS ),MDR ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( ( CS / RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( ARS - FirstVNF_CPU_Server ) / Const ) )", "choosing": "Max( ( MUR + CS ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS + FirstVNF_Mem ) + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + Min( RCSe ,RCSe ) ) * Max( DS,( ( RRSe - MUC ) / ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ,FirstVNF_RAM ) - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( Max( MUR,Max( ( RCSe * ( Min( RCSe ,( RRSe - MLU ) ) / RRSe ) ),( MUM - MUR ) ) ) - ( ( MUC - RMSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( ( ARS * CRS ) - FirstVNF_CPU_Server ) ) - Max( PN,RRS ) ) - Max( PN,( CRS - Const ) ) )", "choosing": "Max( ( MLU / ( RRSe * ( DS * MLU ) ) ),( ( RMSe + Min( RRSe ,( Max( ( RRSe * MUM ),( DS - ( MUC / MLU ) ) ) / DS ) ) ) / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Max( CRS,PN ) + ACS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( MUM - RMSe ) ),Max( ( Max( RRSe,( ( Max( ( RMSe - RCSe ),CS ) - Max( RCSe,( RCSe + RCSe ) ) ) * MUR ) ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( DS ,( Max( DS,MLU ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Const + PN ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RMSe + ( RCSe / ( MUM * MLU ) ) ) ) * ( RCSe - RRSe ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( CS - Max( MLU,MLU ) ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( ( CS * Min( Max( MLU,( MLU + Max( RMSe,RCSe ) ) ) ,CS ) ) - ( MUC / DS ) ) ) * Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( Const * Const ),MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / RMSe ),MUM ),( MUR + DS ) ) - Max( ( MUM / Min( RMSe ,RCSe ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( ( RRS * FirstVNF_Mem_Server ),ARS ) * MDR ) ) - Max( Max( ( ( Const - BR ) - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( FirstVNF_Mem * Max( ARS,ACS ) ) ) ) )", "choosing": "Max( Max( ( MUR / DS ),DS ),( ( Min( RCSe ,MUC ) / Min( Max( ( ( Min( MUR ,RCSe ) / ( MLU / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( Max( ( ( RMSe + ( ( CS / MUM ) - MUR ) ) - Min( ( ( DS + DS ) + ( RCSe / Min( MUC ,CS ) ) ) ,RRSe ) ),MUM ) + Min( Min( ( ( DS + MUM ) / RRSe ) ,RMSe ) ,( DS * Max( DS,Max( ( Min( RRSe ,MUC ) * ( RCSe - DS ) ),( Max( CS,RMSe ) / ( MUC - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_RAM ) / ( ( RRS + PN ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( ( ( RRSe - DS ) * ( ( ( MLU / DS ) + MUR ) + MUC ) ) - DS ) ),( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Min( AMS ,CRS ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( CRS / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / Min( ( DDR / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ,BR ) ) ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - ( ( CS / MUM ) - RRSe ) ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * ( AMS / ( BR / ( CRS + MRS ) ) ) ) * ( Min( Max( ( AMS / FirstVNF_RAM ),( AMS / Min( DDR ,CRS ) ) ) ,( MRS * AMS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( Min( ( ( ( RMSe - CS ) + ( ( DS * CS ) * DS ) ) - RMSe ) ,Min( RRSe ,MUC ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + Max( ( CS / RMSe ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( FirstVNF_RAM + CRS ) )", "choosing": "( Min( ( ( RCSe + ( MUR + ( ( DS * RRSe ) + RRSe ) ) ) * MUM ) ,RCSe ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( Const,MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / Min( Min( DS ,MLU ) ,( ( MUM + ( ( RMSe / RMSe ) + DS ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,CRS ) - ( ( FirstVNF_Mem / FirstVNF_CPU ) * MDR ) )", "choosing": "Max( ( ( ( MLU + MUM ) / RMSe ) + ( Max( Max( MLU,Min( ( MUM / RMSe ) ,RCSe ) ),( RCSe - ( ( MUC / ( MLU / RRSe ) ) / RCSe ) ) ) - ( RMSe - RCSe ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / Max( RRS,Const ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( Max( ( CS / Max( Max( Min( RCSe ,RMSe ),( Max( DS,RRSe ) / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,( ACS * FirstVNF_CPU ) ) - ( Min( FirstVNF_RAM_Server ,RRS ) / FirstVNF_CPU ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( Min( ( MUC + MLU ) ,MUR ) - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( ( Max( MUC,DS ) * RCSe ),( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU - ( PN - FirstVNF_RAM_Server ) ) - MDR ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RMSe ) * MUM ) + Min( Max( ( ( RCSe - ( MUM + ( MUC - RMSe ) ) ) * ( RRSe + MUR ) ),RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,( ( MRS + BR ) * ( CRS - DDR ) ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,AMS ) ) ,( ACS * ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS / MUM ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( ( MLU + RRSe ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * ( DDR - DDR ) ) + Min( Min( ACS ,MRS ) ,( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe / ( MUR / RCSe ) ) * ( MLU + ( ( MUC * RMSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * CRS ) - ( ( FirstVNF_Mem_Server + DDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + Max( ( RRSe * RMSe ),( RCSe * MUC ) ) ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( Max( MUR,MUC ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem ) - ( FirstVNF_CPU_Server - ( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) * FirstVNF_CPU ) ,PN ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR + ( ( RRSe - CS ) / ( MUR + ( RMSe / ( ( DS / ( MUC * RCSe ) ) + Max( RMSe,( DS - MUR ) ) ) ) ) ) ) * MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ACS )", "choosing": "Max( Min( RCSe ,MLU ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( PN * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( RRSe + MUM ) / ( MLU / MLU ) ) ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ARS + ACS ) / Max( Max( ( FirstVNF_RAM / MDR ),( DDR + BR ) ),( ( MDR + AMS ) - ( ACS * FirstVNF_Mem_Server ) ) ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( ( MLU + RRSe ) ,RMSe ),( MUR / MUM ) ),( ( ( RCSe / MUM ) * CS ) + ( MUC + DS ) ) ) + ( Min( ( DS * MLU ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( PN,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) ,( Max( Max( RRS,Const ),( BR / MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( ( ( RCSe * DS ) * RRSe ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - Max( ( ( ( Max( BR,MRS ) - Max( PN,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - ( PN / ( FirstVNF_Mem_Server / ( BR - AMS ) ) ) ) ) * BR ),Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / ( CS * RCSe ) ),( RCSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) ,( ARS + Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,( ( CS * RCSe ) - ( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ) / DS ) ) ) * Min( Min( MUC ,MLU ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( BR + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( PN - RRS ) ) - ( ( FirstVNF_Mem_Server + DDR ) + MDR ) )", "choosing": "Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,( ( CS * Max( ( ( MUR / DS ) * MLU ),DS ) ) - ( Max( MUR,MUC ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( BR * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,( MUR * ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( MLU + RCSe ) ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7485670870513987}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.781496062992126, "obj2": 0.12879652238656727}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.3188976377952756, "obj2": 0.44413469038829473}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( MUR + DS ) ) - Max( ( MLU + Max( MUR,MUR ) ),CS ) )", "obj1": 0.7263779527559056, "obj2": 0.16632642440312703}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.4570420396985107}, {"determining": "Max( ( ( FirstVNF_CPU_Server / BR ) * ( RRS * Max( FirstVNF_CPU,( BR / MDR ) ) ) ),Min( MDR ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + ( ( Min( RCSe ,Max( RCSe,MUC ) ) / ( RMSe / RRSe ) ) - ( RRSe + Max( MUM,( MUC * MUC ) ) ) ) ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Min( ( DS + RMSe ) ,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * Max( Max( MLU,Min( RMSe ,CS ) ),( Min( RRSe ,( ( DS - CS ) - CS ) ) - ( ( MUC / DS ) / RCSe ) ) ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.6391768680223717}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + ( PN / Const ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * CRS ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( RMSe / CS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.4035433070866142, "obj2": 0.4031163346950512}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,( MRS / FirstVNF_CPU ) ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( DS * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.6909448818897638, "obj2": 0.19063988711384716}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),RRS ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( RCSe ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.5531496062992126, "obj2": 0.29265423543429236}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) + Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem_Server ,Min( ( AMS + ( Min( Min( ARS ,FirstVNF_RAM ) ,ARS ) / FirstVNF_Mem ) ) ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( RCSe ,( Min( Max( ( ( Min( MLU ,MUR ) / DS ) / RRSe ),CS ) ,( ( MUR + DS ) - MLU ) ) + DS ) ) / ( DS - RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.7015219299137676}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.2421259842519685, "obj2": 0.5089109022046446}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( CRS + ACS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( ( RCSe * MLU ) - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.639763779527559, "obj2": 0.2106915731354793}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),RRS ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( RCSe ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.5885826771653543, "obj2": 0.2529545008313596}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( Min( ( ACS * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + Min( MRS ,ACS ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( ( MUR - MUR ) / ( ( Max( MUC,( RCSe - MUM ) ) - MUC ) * Max( ( ( MUC / DS ) - DS ),DS ) ) ) + RRSe ) * RRSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3221465801500557}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( Const ,( DDR - FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( Max( MUC,MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.8641732283464567, "obj2": 0.08650240224952159}, {"determining": "( Max( ( BR - MRS ),( BR + DDR ) ) - ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) - BR ) )", "choosing": "Max( Min( RCSe ,MLU ),Max( Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( MLU + RCSe ) ) ,MLU ),( MLU - DS ) ) )", "obj1": 0.8562992125984252, "obj2": 0.1134753983840329}, {"determining": "( ( AMS * CRS ) - ( ( DDR - FirstVNF_RAM ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 0.5177165354330708, "obj2": 0.3520643572988708}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5696958371208577}, {"determining": "Max( ( ( FirstVNF_CPU_Server / BR ) * ( RRS * Max( FirstVNF_CPU,( BR / MDR ) ) ) ),Min( MDR ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + ( ( Min( RCSe ,Max( RCSe,MUC ) ) / ( RMSe / RRSe ) ) - ( RRSe + Max( MUM,( MUC * MUC ) ) ) ) ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Min( ( DS + RMSe ) ,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * Max( Max( MLU,Min( RMSe ,CS ) ),( Min( RRSe ,( ( DS - CS ) - CS ) ) - ( ( MUC / DS ) / RCSe ) ) ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.6038210358182233}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( RRSe / ( MUM - RCSe ) ) ,( ( ( Max( MLU,Min( RMSe ,CS ) ) / MUM ) + ( RRSe + MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.905511811023622, "obj2": 0.05794247960479962}, {"determining": "Min( Min( Const ,ARS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Min( ( ( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / PN ) ) + ACS ) / MDR ) ,FirstVNF_Mem_Server ) + DDR ) ) )", "choosing": "( ( ( MLU / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.14763779527559054, "obj2": 0.6272216814229994}, {"determining": "( ( ( Min( Max( BR,( FirstVNF_RAM / ACS ) ) ,FirstVNF_CPU ) * ( CRS - FirstVNF_CPU_Server ) ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.6318897637795275, "obj2": 0.23701888923104694}, {"determining": "( Max( ACS,( RRS + RRS ) ) * Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( DS + MLU ) ) / Max( ( CS / MUM ),( MUR - RCSe ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3893133309704462}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( ( ( FirstVNF_Mem * FirstVNF_RAM ) - FirstVNF_Mem ) * CRS ) + BR ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( Min( ( RMSe * DS ) ,( ( ( DS - RCSe ) + ( MUM + RMSe ) ) - RMSe ) ) + RCSe ) + RRSe ) * RRSe ) )", "obj1": 0.484251968503937, "obj2": 0.3855476709946311}, {"determining": "Min( Max( ACS,ARS ) ,( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( Min( MUM ,MLU ) - ( RMSe / Max( ( MUR - ( MUC * RCSe ) ),Min( Max( ( MUM + CS ),RMSe ) ,RCSe ) ) ) ),MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.020671908212743836}, {"determining": "( ( FirstVNF_CPU - ( AMS / Const ) ) + ( ( FirstVNF_CPU_Server / Min( BR ,Min( MDR ,( FirstVNF_CPU_Server * MRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( Min( ( RMSe + MUR ) ,DS ) / ( DS + MUR ) ) ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( Min( Max( ( AMS / FirstVNF_RAM ),( AMS / Min( DDR ,CRS ) ) ) ,( MRS * AMS ) ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( Min( RRSe ,MUC ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.0610236220472441, "obj2": 0.7186431356669737}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.5491358883323108}, {"determining": "( ( ( DDR - FirstVNF_Mem ) + Const ) - ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / RMSe ) / ( Min( ( RRSe + Min( RCSe ,MUR ) ) ,( MLU / RMSe ) ) * ( ( CS / RRSe ) * Max( MUC,RCSe ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.39114117899096057}, {"determining": "( Max( ( ( ( FirstVNF_RAM_Server + Min( RRS ,MRS ) ) * FirstVNF_Mem_Server ) - MRS ),( BR + ( ACS - Min( ( DDR - ( Max( ARS,CRS ) + FirstVNF_CPU ) ) ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( ( ( ( DS / MUM ) + ( ( MUR + MLU ) / Max( Max( ( CS * MLU ),MUR ),MUC ) ) ) / ( MUR / Min( ( ( Min( CS ,DS ) - MLU ) / RMSe ) ,( MUM * MUR ) ) ) ) ,MLU ),( MLU - DS ) )", "obj1": 0.9881889763779528, "obj2": 0.0055772801951172474}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) * RRS ) ,DDR ) * DDR ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / ( ( MUM / RMSe ) / ( MLU / MLU ) ) ) + ( RRSe + MUC ) ),MLU ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.039933254774112394}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( ( MDR * Const ) ,FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ( FirstVNF_RAM_Server * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * CRS ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUM + DS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,( RRSe + Max( ( MUR * MLU ),( RCSe * MUC ) ) ) ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.4012450285572005}, {"determining": "( CRS - Min( ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ,PN ) )", "choosing": "Max( Min( RCSe ,MLU ),( ( MUC + DS ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.37567035186826236}, {"determining": "Min( ( FirstVNF_Mem_Server * RRS ) ,Min( ( ACS - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / Min( DS ,MUR ) ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) )", "obj1": 0.6122047244094488, "obj2": 0.2513323651094648}, {"determining": "Max( ( DDR - FirstVNF_Mem ),( CRS + MRS ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MLU * RRSe ),MUC ) ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( RRSe - CS ) )", "obj1": 0.21653543307086615, "obj2": 0.5267074068409144}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + ACS ) ) ,Min( Min( DDR ,( ( DDR / Min( FirstVNF_RAM ,( ( PN * DDR ) * FirstVNF_CPU ) ) ) - BR ) ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( MLU * ( RRSe + RRSe ) ) + ( MLU / MUM ) ) * RRSe ) )", "obj1": 0.6200787401574803, "obj2": 0.24610964430384902}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "( ( AMS - MDR ) / ( PN - FirstVNF_CPU_Server ) )", "choosing": "( RMSe / ( Min( ( ( DS + RMSe ) + ( ( ( ( RMSe - MUM ) + Max( MLU,MUR ) ) - RCSe ) - MUR ) ) ,( Min( RRSe ,MUC ) * DS ) ) / ( Max( ( MUC - ( DS + MUM ) ),MUC ) * ( ( ( MUM + MUR ) + Max( ( Max( RMSe,MLU ) + ( DS + DS ) ),RMSe ) ) - RMSe ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7267023412407313}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / DDR ),ACS ) * ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( DS * DS ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.10788501813826368}, {"determining": "( ( ( Min( ( Max( AMS,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( RRSe / MUM ) ,( ( ( Max( Min( ( DS + ( RRSe + MUR ) ) ,RCSe ),Min( RMSe ,CS ) ) / MUM ) + ( RRSe + MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.053279336630289165}, {"determining": "Max( ( DDR - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.5312051069593763}, {"determining": "Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03247463066148501}, {"determining": "Max( ( DDR - FirstVNF_Mem ),( FirstVNF_RAM_Server * Max( ( ( FirstVNF_RAM_Server * ARS ) / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( RRSe + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.5102486319604695}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - Min( ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ,PN ) )", "choosing": "Max( Min( RCSe ,MLU ),( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.3761429336434246}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,( ( Max( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - MRS ),( BR + DDR ) ) - ( FirstVNF_Mem - BR ) ) * MDR ) ) )", "choosing": "Max( Max( MUR,DS ),( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( ( ( MUR - RRSe ) / MUR ) / RMSe ) ,( MUM * MUR ) ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7351994935315525}, {"determining": "Max( ( DDR - FirstVNF_Mem ),( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_Mem ) - RRS ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MUC * RRSe ),MUC ) ) + Max( ( ( DS / MUR ) / MUR ),Min( ( MUM / DS ) ,RMSe ) ) ) + CS ) ) * ( RRSe - DS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5367777739291147}, {"determining": "Max( Min( AMS ,FirstVNF_Mem ),( Min( Max( BR,ACS ) ,( MRS / DDR ) ) + Min( ( ACS * Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / Max( AMS,MRS ) ) ,( ( ( FirstVNF_Mem + CRS ) / ( FirstVNF_Mem_Server / PN ) ) * Min( AMS ,FirstVNF_Mem ) ) ) ) ,Min( Const ,BR ) ) ) )", "choosing": "( Max( MUR,Min( RMSe ,( ( MUC + RRSe ) / ( ( MUR - Max( DS,RMSe ) ) - MUR ) ) ) ) / ( ( ( RCSe / RCSe ) / ( MLU + RRSe ) ) / ( ( DS + ( MUR * RMSe ) ) + ( MUC * RMSe ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.3768144899558964}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),MLU ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.039933254774112394}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5427253618513851}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( Min( MDR ,Min( Const ,PN ) ) ,MDR ) * ( BR * ARS ) ) )", "choosing": "( Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RCSe / MUR ) ) ) / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7353130743445538}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) ) + Max( DDR,PN ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( Min( ( RMSe * DS ) ,( ( ( DS - RCSe ) + ( MUM + MLU ) ) - RMSe ) ) + RCSe ) + RRSe ) * RRSe ) )", "obj1": 0.4881889763779528, "obj2": 0.377602801871038}, {"determining": "( Max( ( ( ( BR / MDR ) * FirstVNF_Mem_Server ) - MRS ),PN ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( ( ( Min( ( MUM / RMSe ) ,RCSe ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( MUR / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,MLU ),( MLU - DS ) )", "obj1": 0.9901574803149606, "obj2": 0.004195060088001996}, {"determining": "Min( Max( Min( MDR ,( ( PN - MDR ) / FirstVNF_Mem_Server ) ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( CS,DS ) - ( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 0.9606299212598425, "obj2": 0.027610092492777568}, {"determining": "Min( Const ,( ( RRS + ACS ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Max( MUC,MUM ) - ( ( Min( ( MUC + MUM ) ,MLU ) / Min( MUM ,( RCSe * MUM ) ) ) + RMSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03247463066148501}, {"determining": "( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( RRSe / MUM ) ,( ( ( Max( Min( ( DS + ( RRSe + MUR ) ) ,RCSe ),Min( RMSe ,CS ) ) / MUM ) + ( ( MLU / ( RRSe * ( DS * MLU ) ) ) + MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.90748031496063, "obj2": 0.05752106008419715}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + FirstVNF_CPU_Server ) ) ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( ( RCSe / MUR ) + ( ( RRSe - CS ) / MUR ) ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.10788501813826368}, {"determining": "( ( ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,( ARS + MRS ) ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + ( PN * Const ) )", "choosing": "Min( ( Max( ( DS / Min( RCSe ,( MUC - MUM ) ) ),Min( CS ,RCSe ) ) / MUM ) ,( ( ( DS / MUM ) + ( RRSe + ( MUC / ( CS - MLU ) ) ) ) + ( MUR * CS ) ) )", "obj1": 0.9114173228346457, "obj2": 0.05358653792324068}, {"determining": "Min( Max( Min( BR ,( AMS * CRS ) ),ARS ) ,Min( BR ,FirstVNF_CPU ) )", "choosing": "( Max( MUC,MUM ) - ( MLU + ( RMSe - DS ) ) )", "obj1": 0.9566929133858267, "obj2": 0.030148309536542302}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( CRS * CRS ),Min( MDR ,MRS ) ) + ( RRS / Max( ( ( FirstVNF_CPU_Server / MRS ) - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( FirstVNF_CPU_Server - ( ACS / Max( CRS,MDR ) ) ) ) )", "choosing": "( ( ( ( Max( ( MLU - ( Min( MUC ,MUM ) * MUC ) ),( RRSe + Max( ( RCSe - MUR ),MUR ) ) ) / Max( Max( ( MUC - RMSe ),MUR ),( MUR + CS ) ) ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + Min( RRSe ,MLU ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "Min( Max( Min( BR ,( AMS * MRS ) ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( Max( MUM,DS ) + RCSe ) )", "obj1": 0.9586614173228346, "obj2": 0.028401103391448492}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,FirstVNF_RAM_Server ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( ( FirstVNF_Mem / RRS ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( MUR,MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( FirstVNF_CPU * Max( AMS,FirstVNF_Mem_Server ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ( MRS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( MUR - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( CS + CS ) + MUC ) ) ) ),( ( RMSe * ( RRSe + ( MUM - DS ) ) ) + RMSe ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "( ( ( Max( RRS,ACS ) * ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) ) + FirstVNF_CPU ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( MLU - DS ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.053522117954953395}, {"determining": "( ( AMS * CRS ) - ( Max( ( Const + ( FirstVNF_CPU_Server / ACS ) ),MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - Max( RMSe,Min( Max( Max( RRSe,MUR ),CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM / ( RRS * DDR ) ) * FirstVNF_RAM ) - Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / DS ) + MUM ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( MRS,Max( ( ARS / CRS ),MDR ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( ( CS / RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( ARS - FirstVNF_CPU_Server ) / Const ) )", "choosing": "Max( ( MUR + CS ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS + FirstVNF_Mem ) + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + Min( RCSe ,RCSe ) ) * Max( DS,( ( RRSe - MUC ) / ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ,FirstVNF_RAM ) - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( Max( MUR,Max( ( RCSe * ( Min( RCSe ,( RRSe - MLU ) ) / RRSe ) ),( MUM - MUR ) ) ) - ( ( MUC - RMSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( ( ARS * CRS ) - FirstVNF_CPU_Server ) ) - Max( PN,RRS ) ) - Max( PN,( CRS - Const ) ) )", "choosing": "Max( ( MLU / ( RRSe * ( DS * MLU ) ) ),( ( RMSe + Min( RRSe ,( Max( ( RRSe * MUM ),( DS - ( MUC / MLU ) ) ) / DS ) ) ) / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Max( CRS,PN ) + ACS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( MUM - RMSe ) ),Max( ( Max( RRSe,( ( Max( ( RMSe - RCSe ),CS ) - Max( RCSe,( RCSe + RCSe ) ) ) * MUR ) ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( DS ,( Max( DS,MLU ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Const + PN ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RMSe + ( RCSe / ( MUM * MLU ) ) ) ) * ( RCSe - RRSe ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( CS - Max( MLU,MLU ) ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( ( CS * Min( Max( MLU,( MLU + Max( RMSe,RCSe ) ) ) ,CS ) ) - ( MUC / DS ) ) ) * Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( Const * Const ),MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / RMSe ),MUM ),( MUR + DS ) ) - Max( ( MUM / Min( RMSe ,RCSe ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( ( RRS * FirstVNF_Mem_Server ),ARS ) * MDR ) ) - Max( Max( ( ( Const - BR ) - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( FirstVNF_Mem * Max( ARS,ACS ) ) ) ) )", "choosing": "Max( Max( ( MUR / DS ),DS ),( ( Min( RCSe ,MUC ) / Min( Max( ( ( Min( MUR ,RCSe ) / ( MLU / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( Max( ( ( RMSe + ( ( CS / MUM ) - MUR ) ) - Min( ( ( DS + DS ) + ( RCSe / Min( MUC ,CS ) ) ) ,RRSe ) ),MUM ) + Min( Min( ( ( DS + MUM ) / RRSe ) ,RMSe ) ,( DS * Max( DS,Max( ( Min( RRSe ,MUC ) * ( RCSe - DS ) ),( Max( CS,RMSe ) / ( MUC - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_RAM ) / ( ( RRS + PN ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( ( ( RRSe - DS ) * ( ( ( MLU / DS ) + MUR ) + MUC ) ) - DS ) ),( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Min( AMS ,CRS ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( CRS / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / Min( ( DDR / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ,BR ) ) ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - ( ( CS / MUM ) - RRSe ) ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * ( AMS / ( BR / ( CRS + MRS ) ) ) ) * ( Min( Max( ( AMS / FirstVNF_RAM ),( AMS / Min( DDR ,CRS ) ) ) ,( MRS * AMS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( Min( ( ( ( RMSe - CS ) + ( ( DS * CS ) * DS ) ) - RMSe ) ,Min( RRSe ,MUC ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + Max( ( CS / RMSe ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( FirstVNF_RAM + CRS ) )", "choosing": "( Min( ( ( RCSe + ( MUR + ( ( DS * RRSe ) + RRSe ) ) ) * MUM ) ,RCSe ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( Const,MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / Min( Min( DS ,MLU ) ,( ( MUM + ( ( RMSe / RMSe ) + DS ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,CRS ) - ( ( FirstVNF_Mem / FirstVNF_CPU ) * MDR ) )", "choosing": "Max( ( ( ( MLU + MUM ) / RMSe ) + ( Max( Max( MLU,Min( ( MUM / RMSe ) ,RCSe ) ),( RCSe - ( ( MUC / ( MLU / RRSe ) ) / RCSe ) ) ) - ( RMSe - RCSe ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / Max( RRS,Const ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( Max( ( CS / Max( Max( Min( RCSe ,RMSe ),( Max( DS,RRSe ) / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,( ACS * FirstVNF_CPU ) ) - ( Min( FirstVNF_RAM_Server ,RRS ) / FirstVNF_CPU ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( Min( ( MUC + MLU ) ,MUR ) - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * FirstVNF_CPU ) )", "choosing": "Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( ( Max( MUC,DS ) * RCSe ),( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / AMS ) ,( DDR / FirstVNF_CPU ) ) ,Min( ( ( FirstVNF_CPU - ( PN - FirstVNF_RAM_Server ) ) - MDR ) ,( FirstVNF_RAM_Server / AMS ) ) )", "choosing": "( ( ( RMSe + RMSe ) * MUM ) + Min( Max( ( ( RCSe - ( MUM + ( MUC - RMSe ) ) ) * ( RRSe + MUR ) ),RCSe ) ,Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,( ( MRS + BR ) * ( CRS - DDR ) ) ) * FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,AMS ) ) ,( ACS * ( Const - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS / MUM ) / ( DS - MUM ) ) * ( Max( DS,RMSe ) + ( MUM + RMSe ) ) ) - ( ( MLU + RRSe ) * Min( ( MUR + MUM ) ,Min( MUR ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) - ( ( Min( AMS ,FirstVNF_RAM ) * ( DDR - DDR ) ) + Min( Min( ACS ,MRS ) ,( MRS + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RRSe / ( MUR / RCSe ) ) * ( MLU + ( ( MUC * RMSe ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( Const ,( ( DDR * FirstVNF_RAM ) * ACS ) )", "choosing": "( Max( MUC,MUM ) - ( ( ( ( RRSe / ( RMSe / RRSe ) ) - ( RMSe + ( RMSe * DS ) ) ) / DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( BR * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,( MUR * ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( MLU + RCSe ) ) ) ) )", "obj1": 0.04133858267716536, "obj2": 0.7485670870513987}, {"determining": "Max( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( ( PN - ( MDR - Min( Const ,AMS ) ) ) + MRS ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.6095934826526389}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) + Min( FirstVNF_CPU_Server ,Min( FirstVNF_Mem_Server ,Min( ( AMS + ( Min( Min( ARS ,FirstVNF_RAM ) ,ARS ) / FirstVNF_Mem ) ) ,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( RCSe ,( Min( Max( ( ( Min( MLU ,MUR ) / DS ) / RRSe ),CS ) ,( ( MUR + DS ) - MLU ) ) + DS ) ) / ( DS - RRSe ) )", "obj1": 0.09448818897637795, "obj2": 0.7015219299137676}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( Const ,( DDR - FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( Max( MUC,MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.8641732283464567, "obj2": 0.08650240224952159}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.3188976377952756, "obj2": 0.44413469038829473}, {"determining": "Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.37598425196850394, "obj2": 0.40199159668058443}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.781496062992126, "obj2": 0.12879652238656727}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( Min( MDR ,MRS ) ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( ( PN / PN ),( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( RCSe * ( RCSe + DS ) ) ,Min( RRSe ,MUC ) ) + Min( ( ( MLU / DS ) + ( ( ( MUM * MUM ) / ( CS / RCSe ) ) + ( ( DS - RRSe ) * MUC ) ) ) ,RRSe ) ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7952755905511811, "obj2": 0.10179967517885896}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.4570420396985107}, {"determining": "( ( ( ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ACS ) * Max( Min( ARS ,BR ),FirstVNF_RAM_Server ) ) * ( ( Min( PN ,( MDR / FirstVNF_CPU_Server ) ) + PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( ( ( RRSe - CS ) + ( MLU + RRSe ) ) - Max( RCSe,( MLU + Min( ( CS - MUR ) ,MUM ) ) ) ) )", "obj1": 0.2578740157480315, "obj2": 0.49290041965156484}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( CRS + ACS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( ( RCSe * MLU ) - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.639763779527559, "obj2": 0.2106915731354793}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( Min( ( ACS * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + Min( MRS ,ACS ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( ( MUR - MUR ) / ( ( Max( MUC,( RCSe - MUM ) ) - MUC ) * Max( ( ( MUC / DS ) - DS ),DS ) ) ) + RRSe ) * RRSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3221465801500557}, {"determining": "Min( ( ( AMS - Max( ARS,Min( FirstVNF_Mem ,ARS ) ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( BR + FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( ( RRSe - ( MLU / MUR ) ) ,MUR ),( MUR + DS ) ) - MUM )", "obj1": 0.7381889763779528, "obj2": 0.1648705912587367}, {"determining": "( ( AMS * CRS ) - ( ( DDR - FirstVNF_RAM ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 0.5177165354330708, "obj2": 0.3520643572988708}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5696958371208577}, {"determining": "Max( ( ( FirstVNF_CPU_Server / BR ) * ( RRS * Max( FirstVNF_CPU,( BR / MDR ) ) ) ),Min( MDR ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + ( ( Min( RCSe ,Max( RCSe,MUC ) ) / ( RMSe / RRSe ) ) - ( RRSe + Max( MUM,( MUC * MUC ) ) ) ) ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Min( ( DS + RMSe ) ,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * Max( Max( MLU,Min( RMSe ,CS ) ),( Min( RRSe ,( ( DS - CS ) - CS ) ) - ( ( MUC / DS ) / RCSe ) ) ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.6038210358182233}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * ( AMS - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,( ( FirstVNF_Mem / RRS ) - FirstVNF_CPU_Server ) ) ) ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Max( ( MUM - RCSe ),( ( MUM - MUM ) - ( MUC / ( DS / MUM ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.28857996120280266}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( RRSe / ( MUM - RCSe ) ) ,( ( ( Max( MLU,Min( RMSe ,CS ) ) / MUM ) + ( RRSe + MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.905511811023622, "obj2": 0.05794247960479962}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( MUR + DS ) ) - Max( ( MLU + Max( MUR,MUR ) ),CS ) )", "obj1": 0.7263779527559056, "obj2": 0.16632642440312703}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,( MRS / FirstVNF_CPU ) ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( DS * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.6909448818897638, "obj2": 0.19063988711384716}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),RRS ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( RCSe ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.5885826771653543, "obj2": 0.2529545008313596}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - ( MUR + CS ) ) / CS ),MUM ),( Min( ( ( ( DS - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.6850393700787402, "obj2": 0.1957321131081937}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( ( MDR * Const ) ,FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ( FirstVNF_RAM_Server * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * CRS ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUM + DS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,( RRSe + Max( ( MUR * MLU ),( RCSe * MUC ) ) ) ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.4012450285572005}, {"determining": "( ( ( Min( Max( BR,( FirstVNF_RAM / ACS ) ) ,FirstVNF_CPU ) * ( CRS - FirstVNF_CPU_Server ) ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.6318897637795275, "obj2": 0.23701888923104694}, {"determining": "( Min( Min( Const ,PN ) ,( ACS * FirstVNF_Mem ) ) / ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( MUM - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( MUC / Max( MUR,( ( MUM / ( RMSe / MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5039252835132978}, {"determining": "( Max( ACS,( RRS + RRS ) ) * Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( DS + MLU ) ) / Max( ( CS / MUM ),( MUR - RCSe ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3893133309704462}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( ( ( FirstVNF_Mem * FirstVNF_RAM ) - FirstVNF_Mem ) * CRS ) + BR ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( Min( ( RMSe * DS ) ,( ( ( DS - RCSe ) + ( MUM + RMSe ) ) - RMSe ) ) + RCSe ) + RRSe ) * RRSe ) )", "obj1": 0.484251968503937, "obj2": 0.3855476709946311}, {"determining": "( ( FirstVNF_CPU - ( AMS / Const ) ) + ( ( FirstVNF_CPU_Server / Min( BR ,Min( MDR ,( FirstVNF_CPU_Server * MRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( Min( ( RMSe + MUR ) ,DS ) / ( DS + MUR ) ) ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( Min( Max( ( AMS / FirstVNF_RAM ),( AMS / Min( DDR ,CRS ) ) ) ,( MRS * AMS ) ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( Min( RRSe ,MUC ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.0610236220472441, "obj2": 0.7186431356669737}, {"determining": "( ( ( DDR - FirstVNF_Mem ) + Const ) - ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / RMSe ) / ( Min( ( RRSe + Min( RCSe ,MUR ) ) ,( MLU / RMSe ) ) * ( ( CS / RRSe ) * Max( MUC,RCSe ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.39114117899096057}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),( MDR + FirstVNF_CPU_Server ) ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( ( CS + MUC ) ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.547244094488189, "obj2": 0.2927135484913787}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.5491358883323108}, {"determining": "Min( ( ( ( FirstVNF_CPU + ARS ) + Const ) - ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( ( Max( MUC,MLU ) - MLU ),MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9822834645669292, "obj2": 0.013191142612636545}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),RRS ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( RCSe ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.5531496062992126, "obj2": 0.29265423543429236}, {"determining": "( CRS - Min( ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ,PN ) )", "choosing": "Max( Min( RCSe ,MLU ),( ( MUC + DS ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.37567035186826236}, {"determining": "Min( Max( ACS,ARS ) ,( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( Min( MUM ,MLU ) - ( RMSe / Max( ( MUR - ( MUC * RCSe ) ),Min( Max( ( MUM + CS ),RMSe ) ,RCSe ) ) ) ),MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.020671908212743836}, {"determining": "Max( ( ( Max( ( ( ( BR / MDR ) * FirstVNF_Mem_Server ) - MRS ),( BR + ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5245362443351477}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Max( BR,( ( CRS * ( AMS + ACS ) ) + BR ) ) * ( ACS / ARS ) ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) + ( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RRSe ) ) ) / CS ) + MUC ) ),MLU ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.03822510429245394}, {"determining": "( ( AMS - MDR ) / ( PN - FirstVNF_CPU_Server ) )", "choosing": "( RMSe / ( Min( ( ( DS + RMSe ) + ( ( ( ( RMSe - MUM ) + Max( MLU,MUR ) ) - RCSe ) - MUR ) ) ,( Min( RRSe ,MUC ) * DS ) ) / ( Max( ( MUC - ( DS + MUM ) ),MUC ) * ( ( ( MUM + MUR ) + Max( ( Max( RMSe,MLU ) + ( DS + DS ) ),RMSe ) ) - RMSe ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7267023412407313}, {"determining": "Min( ( FirstVNF_Mem_Server * RRS ) ,Min( ( ACS - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / Min( DS ,MUR ) ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) )", "obj1": 0.6122047244094488, "obj2": 0.2513323651094648}, {"determining": "( ( ( Min( ( Max( AMS,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RRSe / MUM ) ,( ( ( Max( Min( ( DS + ( RCSe + MUR ) ) ,RCSe ),Min( RMSe ,CS ) ) / MUM ) + ( RRSe + MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.9114173228346457, "obj2": 0.05262386472298772}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / DDR ),ACS ) * ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( DS * DS ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.0443551284501161}, {"determining": "( ( FirstVNF_CPU * Max( AMS,FirstVNF_Mem_Server ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ( MRS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( MUR - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( CS + CS ) + MUC ) ) ) ),( ( RMSe * ( RRSe + ( MUM - DS ) ) ) + RMSe ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03247463066148501}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + BR ) ,Min( MRS ,RRS ) ) * Min( ( RRS / Const ) ,( ARS + PN ) ) ) / PN )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( ( Max( MUR,MUC ) / MUC ) - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( RMSe + RMSe ) / RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.5292780981217413}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + ACS ) ) ,Min( Min( DDR ,( ( DDR / Min( FirstVNF_RAM ,( ( PN * DDR ) * FirstVNF_CPU ) ) ) - BR ) ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( MLU * ( RRSe + RRSe ) ) + ( MLU / MUM ) ) * RRSe ) )", "obj1": 0.6200787401574803, "obj2": 0.24610964430384902}, {"determining": "Max( ( DDR - FirstVNF_Mem ),( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_Mem ) - RRS ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MUC * RRSe ),MUC ) ) + Max( ( ( DS / MUR ) / MUR ),Min( ( MUM / DS ) ,RMSe ) ) ) + CS ) ) * ( RRSe - DS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5367777739291147}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - Min( ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ,PN ) )", "choosing": "Max( Min( RCSe ,MLU ),( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) )", "obj1": 0.5078740157480315, "obj2": 0.3761429336434246}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,( ( Max( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - MRS ),( BR + DDR ) ) - ( FirstVNF_Mem - BR ) ) * MDR ) ) )", "choosing": "Max( Max( MUR,DS ),( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( ( ( MUR - RRSe ) / MUR ) / RMSe ) ,( MUM * MUR ) ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7351994935315525}, {"determining": "Max( Min( AMS ,FirstVNF_Mem ),( Min( Max( BR,ACS ) ,( MRS / DDR ) ) + Min( ( ACS * Min( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) / Max( AMS,MRS ) ) ,( ( ( FirstVNF_Mem + CRS ) / ( FirstVNF_Mem_Server / PN ) ) * Min( AMS ,FirstVNF_Mem ) ) ) ) ,Min( Const ,BR ) ) ) )", "choosing": "( Max( MUR,Min( RMSe ,( ( MUC + RRSe ) / ( ( MUR - Max( DS,RMSe ) ) - MUR ) ) ) ) / ( ( ( RCSe / RCSe ) / ( MLU + RRSe ) ) / ( ( DS + ( MUR * RMSe ) ) + ( MUC * RMSe ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.3768144899558964}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "( Max( ( ( ( FirstVNF_RAM_Server + Min( RRS ,MRS ) ) * FirstVNF_Mem_Server ) - MRS ),( BR + ( ACS - Min( ( DDR - ( Max( ARS,CRS ) + FirstVNF_CPU ) ) ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( ( ( ( DS / MUM ) + ( ( MUR + MLU ) / Max( Max( ( CS * MLU ),MUR ),MUC ) ) ) / ( MUR / Min( ( ( Min( CS ,DS ) - MLU ) / RMSe ) ,( MUM * MUR ) ) ) ) ,MLU ),( MLU - DS ) )", "obj1": 0.9881889763779528, "obj2": 0.0055772801951172474}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( Min( MDR ,Min( Const ,PN ) ) ,MDR ) * ( BR * ARS ) ) )", "choosing": "( Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RCSe / MUR ) ) ) / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7353130743445538}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) ) + Max( DDR,PN ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( Min( ( RMSe * DS ) ,( ( ( DS - RCSe ) + ( MUM + MLU ) ) - RMSe ) ) + RCSe ) + RRSe ) * RRSe ) )", "obj1": 0.4881889763779528, "obj2": 0.377602801871038}, {"determining": "( Max( ( ( ( BR / MDR ) * FirstVNF_Mem_Server ) - MRS ),PN ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( ( ( Min( ( MUM / RMSe ) ,RCSe ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( MUR / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,MLU ),( MLU - DS ) )", "obj1": 0.9901574803149606, "obj2": 0.004195060088001996}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5465326614282734}, {"determining": "Min( Max( FirstVNF_RAM,( ( ( ( ( BR - FirstVNF_Mem ) / ( FirstVNF_Mem_Server * Const ) ) - MDR ) + DDR ) + ACS ) ) ,Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( CS / RRSe ) + ( Max( MLU,DS ) + ( ( ( RRSe - DS ) * ( CS + MUC ) ) - DS ) ) ) * RRSe ) )", "obj1": 0.6161417322834646, "obj2": 0.24743261521586066}, {"determining": "Min( Max( Min( BR ,( AMS * ( DDR - FirstVNF_Mem ) ) ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( MLU + ( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MLU * RRSe ),MUC ) ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.02449051177457948}, {"determining": "( ( Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( RMSe - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.02583330752226766}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( Max( BR,MRS ) * ( AMS * RRS ) ) ,DDR ) * DDR ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Min( RCSe ,RMSe ) * ( Min( DS ,RCSe ) + ( ( ( Max( Max( MUC,( RRSe * DS ) ),( ( MUC / MUC ) - ( MLU - RRSe ) ) ) * MUR ) - DS ) + Max( MLU,CS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03874513230349196}, {"determining": "( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( RRSe / MUM ) ,( ( ( Max( Min( ( DS + ( RRSe + MUR ) ) ,RCSe ),Min( RMSe ,CS ) ) / MUM ) + ( ( MLU / ( RRSe * ( DS * MLU ) ) ) + MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.90748031496063, "obj2": 0.05752106008419715}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5427253618513851}, {"determining": "Min( Const ,( ( RRS + ACS ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Max( MUC,MUM ) - ( ( Min( ( MUC + MUM ) ,MLU ) / Min( MUM ,( RCSe * MUM ) ) ) + RMSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03247463066148501}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,RRSe ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5427253618513851}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( CRS * CRS ),Min( MDR ,MRS ) ) + ( RRS / Max( ( ( FirstVNF_CPU_Server / MRS ) - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( FirstVNF_CPU_Server - ( ACS / Max( CRS,MDR ) ) ) ) )", "choosing": "( ( ( ( Max( ( MLU - ( Min( MUC ,MUM ) * MUC ) ),( RRSe + Max( ( RCSe - MUR ),MUR ) ) ) / Max( Max( ( MUC - RMSe ),MUR ),( MUR + CS ) ) ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + Min( RRSe ,MLU ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,RRS ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + ACS ) ) ) ),( ( FirstVNF_Mem / RRS ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( ( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) ),MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( BR + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( PN - RRS ) ) - ( ( FirstVNF_Mem_Server + DDR ) + MDR ) )", "choosing": "Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,( ( CS * Max( ( ( MUR / DS ) * MLU ),DS ) ) - ( Max( MUR,MUC ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( Const + ( FirstVNF_CPU_Server / ACS ) ),MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - Max( RMSe,Min( Max( Max( RRSe,MUR ),CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM / ( RRS * DDR ) ) * FirstVNF_RAM ) - Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / DS ) + MUM ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( MRS,Max( ( ARS / CRS ),MDR ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( ( CS / RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( ARS - FirstVNF_CPU_Server ) / Const ) )", "choosing": "Max( ( MUR + CS ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS + FirstVNF_Mem ) + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + Min( RCSe ,RCSe ) ) * Max( DS,( ( RRSe - MUC ) / ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ,FirstVNF_RAM ) - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( Max( MUR,Max( ( RCSe * ( Min( RCSe ,( RRSe - MLU ) ) / RRSe ) ),( MUM - MUR ) ) ) - ( ( MUC - RMSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( ( ARS * CRS ) - FirstVNF_CPU_Server ) ) - Max( PN,RRS ) ) - Max( PN,( CRS - Const ) ) )", "choosing": "Max( ( MLU / ( RRSe * ( DS * MLU ) ) ),( ( RMSe + Min( RRSe ,( Max( ( RRSe * MUM ),( DS - ( MUC / MLU ) ) ) / DS ) ) ) / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Max( CRS,PN ) + ACS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( MUM - RMSe ) ),Max( ( Max( RRSe,( ( Max( ( RMSe - RCSe ),CS ) - Max( RCSe,( RCSe + RCSe ) ) ) * MUR ) ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( DS ,( Max( DS,MLU ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Const + PN ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RMSe + ( RCSe / ( MUM * MLU ) ) ) ) * ( RCSe - RRSe ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( CS - Max( MLU,MLU ) ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( ( CS * Min( Max( MLU,( MLU + Max( RMSe,RCSe ) ) ) ,CS ) ) - ( MUC / DS ) ) ) * Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( Const * Const ),MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / RMSe ),MUM ),( MUR + DS ) ) - Max( ( MUM / Min( RMSe ,RCSe ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( ( RRS * FirstVNF_Mem_Server ),ARS ) * MDR ) ) - Max( Max( ( ( Const - BR ) - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( FirstVNF_Mem * Max( ARS,ACS ) ) ) ) )", "choosing": "Max( Max( ( MUR / DS ),DS ),( ( Min( RCSe ,MUC ) / Min( Max( ( ( Min( MUR ,RCSe ) / ( MLU / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( Max( ( ( RMSe + ( ( CS / MUM ) - MUR ) ) - Min( ( ( DS + DS ) + ( RCSe / Min( MUC ,CS ) ) ) ,RRSe ) ),MUM ) + Min( Min( ( ( DS + MUM ) / RRSe ) ,RMSe ) ,( DS * Max( DS,Max( ( Min( RRSe ,MUC ) * ( RCSe - DS ) ),( Max( CS,RMSe ) / ( MUC - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_RAM ) / ( ( RRS + PN ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( ( ( RRSe - DS ) * ( ( ( MLU / DS ) + MUR ) + MUC ) ) - DS ) ),( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),Min( AMS ,CRS ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( CRS / ( ( FirstVNF_CPU - ( FirstVNF_RAM_Server / Min( ( DDR / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ,BR ) ) ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Min( RMSe ,RRSe ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - ( ( CS / MUM ) - RRSe ) ) ,( RRSe + MUM ) ) + Min( ( RCSe * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( FirstVNF_RAM / ACS ) ) * ( AMS / ( BR / ( CRS + MRS ) ) ) ) * ( Min( Max( ( AMS / FirstVNF_RAM ),( AMS / Min( DDR ,CRS ) ) ) ,( MRS * AMS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( Min( ( ( ( RMSe - CS ) + ( ( DS * CS ) * DS ) ) - RMSe ) ,Min( RRSe ,MUC ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( BR ,RRS ) ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) - ( ( ( ACS / CRS ) + Max( RRS,ARS ) ) / ( ( FirstVNF_CPU - PN ) / ( FirstVNF_RAM_Server / AMS ) ) ) )", "choosing": "( Max( Max( Min( RCSe ,RMSe ),( MUR / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + Max( ( CS / RMSe ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( FirstVNF_RAM + CRS ) )", "choosing": "( Min( ( ( RCSe + ( MUR + ( ( DS * RRSe ) + RRSe ) ) ) * MUM ) ,RCSe ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( Const,MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - ( RCSe / Min( Min( DS ,MLU ) ,( ( MUM + ( ( RMSe / RMSe ) + DS ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,CRS ) - ( ( FirstVNF_Mem / FirstVNF_CPU ) * MDR ) )", "choosing": "Max( ( ( ( MLU + MUM ) / RMSe ) + ( Max( Max( MLU,Min( ( MUM / RMSe ) ,RCSe ) ),( RCSe - ( ( MUC / ( MLU / RRSe ) ) / RCSe ) ) ) - ( RMSe - RCSe ) ) ),Max( ( Max( RRSe,RCSe ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( BR,MRS ) - Max( ARS,ARS ) ) / Max( RRS,Const ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - ( ( ACS / FirstVNF_CPU_Server ) / ( RRS / FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Max( Max( ( CS / Max( Max( Min( RCSe ,RMSe ),( Max( DS,RRSe ) / MUM ) ),( ( RRSe * CS ) + ( MUC + DS ) ) ) ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,( ACS * FirstVNF_CPU ) ) - ( Min( FirstVNF_RAM_Server ,RRS ) / FirstVNF_CPU ) ) * ( RRS - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - RCSe ) + ( ( ( Min( ( MUC + MLU ) ,MUR ) - CS ) + MLU ) - Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) ,( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,( ( DDR * FirstVNF_RAM ) * ACS ) )", "choosing": "( Max( MUC,MUM ) - ( ( ( ( RRSe / ( RMSe / RRSe ) ) - ( RMSe + ( RMSe * DS ) ) ) / DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( BR * FirstVNF_RAM_Server ),Max( PN,RRS ) ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,RRSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7455186487087001}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Min( ( BR / RRS ) ,( FirstVNF_CPU * ( Min( Const ,DDR ) + PN ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( ( RCSe * ( ( RMSe * RCSe ) - ( Min( RMSe ,CS ) / ( DS - Max( RMSe,MUC ) ) ) ) ) ,( Min( RRSe ,MUC ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM / ( CS + MLU ) ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6549683904529028}, {"determining": "Min( Min( CRS ,CRS ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / ( Max( BR,( ARS - ( ( AMS + MRS ) - BR ) ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - ( MUR / CS ) ) / CS ),MUM ),Max( RCSe,MLU ) ) - ( ( ( RCSe + ( Min( MUR ,MUC ) + RMSe ) ) - ( ( ( ( ( RMSe - MUR ) / RRSe ) / RCSe ) * ( ( CS - MUC ) + ( RRSe * CS ) ) ) * ( Max( MUM,( Min( RRSe ,MUM ) / MUM ) ) - MLU ) ) ) * ( MLU - MUC ) ) )", "obj1": 0.6751968503937008, "obj2": 0.1885972678478225}, {"determining": "Min( ( BR + ( ( ( Max( FirstVNF_Mem,MRS ) + MDR ) - FirstVNF_RAM ) / ACS ) ) ,Min( ( FirstVNF_RAM_Server - ( PN + DDR ) ) ,( Min( Min( MDR ,FirstVNF_RAM ) ,MDR ) * ( BR * ARS ) ) ) )", "choosing": "( ( ( DS / Min( Min( ( ( Min( RMSe ,RCSe ) + Min( MUM ,MUM ) ) * ( MUR * RCSe ) ) ,( ( Max( RCSe,MUR ) + MLU ) / CS ) ) ,( Min( ( RRSe * DS ) ,DS ) + RCSe ) ) ) / CS ) * Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RRSe + MUM ) ) ) / DS ),Max( ( RCSe + ( MUM * RRSe ) ),DS ) ) )", "obj1": 0.3188976377952756, "obj2": 0.43731144482577416}, {"determining": "Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.37598425196850394, "obj2": 0.40199159668058443}, {"determining": "Min( ( Max( DDR,Max( BR,( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ) ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.4645669291338583, "obj2": 0.3431892851439205}, {"determining": "Max( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( ( PN - ( MDR - Min( Const ,AMS ) ) ) + MRS ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.6095934826526389}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( Min( MDR ,MRS ) ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( ( PN / PN ),( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( RCSe * ( RCSe + DS ) ) ,Min( RRSe ,MUC ) ) + Min( ( ( MLU / DS ) + ( ( ( MUM * MUM ) / ( CS / RCSe ) ) + ( ( DS - RRSe ) * MUC ) ) ) ,RRSe ) ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7952755905511811, "obj2": 0.10179967517885896}, {"determining": "( ( FirstVNF_CPU - ( AMS / Const ) ) + ( ( FirstVNF_CPU_Server / Min( BR ,Min( MDR ,( FirstVNF_CPU_Server * MRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( Min( ( RMSe + MUR ) ,DS ) / ( DS + MUR ) ) ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "( ( Min( CRS ,Const ) * CRS ) - ( ( DDR - FirstVNF_RAM ) + MDR ) )", "choosing": "Min( ( ( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ) + MUM ) - ( MLU + RCSe ) ) ,( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 0.515748031496063, "obj2": 0.34195121211170626}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( CRS + ACS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( ( RCSe * MLU ) - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.639763779527559, "obj2": 0.2106915731354793}, {"determining": "( Max( ACS,( RRS + RRS ) ) * Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( DS + MLU ) ) / Max( ( CS / MUM ),( MUR - RCSe ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3893133309704462}, {"determining": "Min( ( Max( DDR,Const ) + ( BR - BR ) ) ,( ( Min( ( ACS * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) + Min( MRS ,ACS ) ) + Max( Max( PN,FirstVNF_CPU ),( MRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS / DS ) / CS ) * ( ( ( ( MUR - MUR ) / ( ( Max( MUC,( RCSe - MUM ) ) - MUC ) * Max( ( ( MUC / DS ) - DS ),DS ) ) ) + RRSe ) * RRSe ) )", "obj1": 0.5433070866141733, "obj2": 0.3221465801500557}, {"determining": "( ( ( ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ACS ) * Max( Min( ARS ,BR ),FirstVNF_RAM_Server ) ) * ( ( Min( PN ,( MDR / FirstVNF_CPU_Server ) ) + PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( ( ( RRSe - CS ) + ( MLU + RRSe ) ) - Max( RCSe,( MLU + Min( ( CS - MUR ) ,MUM ) ) ) ) )", "obj1": 0.2578740157480315, "obj2": 0.49290041965156484}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( MUR + DS ) ) - Max( ( MLU + Max( MUR,MUR ) ),CS ) )", "obj1": 0.7263779527559056, "obj2": 0.16632642440312703}, {"determining": "( ( PN - FirstVNF_Mem ) - ( ( ( ARS / AMS ) * RRS ) + Const ) )", "choosing": "( ( MUR + MUM ) * ( ( RMSe / MUC ) * RMSe ) )", "obj1": 0.7618110236220472, "obj2": 0.14496693286111398}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.781496062992126, "obj2": 0.12879652238656727}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( FirstVNF_CPU_Server * RRS ) ,DDR ) * ( ACS / ARS ) ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) + ( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) + MUC ) ),MLU ) * Min( ( ( DS * DS ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.08863595160615913}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5696958371208577}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) ) ) ,( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( ( ( CS - DS ) / RMSe ) - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.05254146178129292}, {"determining": "( Min( Min( Const ,PN ) ,( ACS * FirstVNF_Mem ) ) / ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( MUM - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( MUC / Max( MUR,( ( MUM / ( RMSe / MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.4660222083301621}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( ( MDR * Const ) ,FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ( FirstVNF_RAM_Server * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * CRS ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUM + DS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,( RRSe + Max( ( MUR * MLU ),( RCSe * MUC ) ) ) ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.4012450285572005}, {"determining": "( Min( Const ,( ( ( FirstVNF_Mem - PN ) + Min( ( FirstVNF_RAM_Server / Min( PN ,PN ) ) ,ARS ) ) / FirstVNF_RAM_Server ) ) / PN )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( ( RMSe / MUC ) - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * Min( RMSe ,( RMSe * Max( RMSe,MLU ) ) ) ) ),( ( MUM / Max( MUR,MUR ) ) - ( RRSe + MUM ) ) )", "obj1": 0.8858267716535433, "obj2": 0.07288983169925406}, {"determining": "( ( ( Min( Max( BR,( FirstVNF_RAM / ACS ) ) ,FirstVNF_CPU ) * ( CRS - FirstVNF_CPU_Server ) ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.6318897637795275, "obj2": 0.23701888923104694}, {"determining": "Min( ( ( AMS - Max( ARS,Min( FirstVNF_Mem ,ARS ) ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( BR + FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( ( RRSe - ( MLU / MUR ) ) ,MUR ),( MUR + DS ) ) - MUM )", "obj1": 0.7381889763779528, "obj2": 0.1648705912587367}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / DDR ),ACS ) * ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( DS * DS ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.0443551284501161}, {"determining": "Max( ( ( Max( ( ( ( BR / MDR ) * FirstVNF_Mem_Server ) - MRS ),( ACS + ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Min( MUM ,MLU ) - ( CS - RMSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.1594488188976378, "obj2": 0.5961958572675177}, {"determining": "( Min( Min( Const ,PN ) ,( ACS * FirstVNF_Mem ) ) / ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( MUM - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( MUC / Max( MUR,( ( MUM / ( RMSe / MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5039252835132978}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.45406048239108837}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( Min( Max( ( AMS / FirstVNF_RAM ),( AMS / Min( DDR ,CRS ) ) ) ,( MRS * AMS ) ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( Min( RRSe ,MUC ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.0610236220472441, "obj2": 0.7186431356669737}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( Const ,( DDR - FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( Max( MUC,MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.8641732283464567, "obj2": 0.08650240224952159}, {"determining": "( ( ( DDR - FirstVNF_Mem ) + Const ) - ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / RMSe ) / ( Min( ( RRSe + Min( RCSe ,MUR ) ) ,( MLU / RMSe ) ) * ( ( CS / RRSe ) * Max( MUC,RCSe ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.39114117899096057}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),RRS ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( RCSe ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.5885826771653543, "obj2": 0.2529545008313596}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),( MDR + FirstVNF_CPU_Server ) ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( ( CS + MUC ) ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.547244094488189, "obj2": 0.2927135484913787}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.5491358883323108}, {"determining": "Min( ( ( ( FirstVNF_CPU + ARS ) + Const ) - ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( ( Max( MUC,MLU ) - MLU ),MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9822834645669292, "obj2": 0.013191142612636545}, {"determining": "Max( ( ( FirstVNF_CPU_Server / BR ) * ( RRS * Max( FirstVNF_CPU,( BR / MDR ) ) ) ),Min( MDR ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( MUR + MUC ) + ( DS + ( ( Min( RCSe ,Max( RCSe,MUC ) ) / ( RMSe / RRSe ) ) - ( RRSe + Max( MUM,( MUC * MUC ) ) ) ) ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Min( ( DS + RMSe ) ,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * Max( Max( MLU,Min( RMSe ,CS ) ),( Min( RRSe ,( ( DS - CS ) - CS ) ) - ( ( MUC / DS ) / RCSe ) ) ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.6038210358182233}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * FirstVNF_Mem ),( MDR + FirstVNF_CPU_Server ) ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + ( ( MUR + MUM ) * Max( DS,DS ) ) ) ,Min( ( Min( ( CS + MUC ) ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.5846456692913385, "obj2": 0.2684651441115319}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( ( MUM * MUR ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.5570866141732284, "obj2": 0.2842884360154163}, {"determining": "Min( Max( ACS,ARS ) ,( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( Min( MUM ,MLU ) - ( RMSe / Max( ( MUR - ( MUC * RCSe ) ),Min( Max( ( MUM + CS ),RMSe ) ,RCSe ) ) ) ),MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.020671908212743836}, {"determining": "( ( AMS - MDR ) / ( PN - FirstVNF_CPU_Server ) )", "choosing": "( RMSe / ( Min( ( ( DS + RMSe ) + ( ( ( ( RMSe - MUM ) + Max( MLU,MUR ) ) - RCSe ) - MUR ) ) ,( Min( RRSe ,MUC ) * DS ) ) / ( Max( ( MUC - ( DS + MUM ) ),MUC ) * ( ( ( MUM + MUR ) + Max( ( Max( RMSe,MLU ) + ( DS + DS ) ),RMSe ) ) - RMSe ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7267023412407313}, {"determining": "Min( ( FirstVNF_Mem_Server * RRS ) ,Min( ( ACS - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / Min( DS ,MUR ) ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) )", "obj1": 0.6122047244094488, "obj2": 0.2513323651094648}, {"determining": "Min( Max( FirstVNF_RAM,Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) ) ,Min( ( ACS - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / CS ) / CS ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) )", "obj1": 0.5728346456692913, "obj2": 0.27946834517181535}, {"determining": "Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( MUC,MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03247463066148501}, {"determining": "( ( Min( Min( DDR ,FirstVNF_Mem ) ,Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_Mem ) ) - FirstVNF_RAM ) / Max( ( Const - FirstVNF_CPU_Server ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + MLU ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( RRSe * RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.5122752668388372}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + ACS ) ) ,Min( Min( DDR ,( ( DDR / Min( FirstVNF_RAM ,( ( PN * DDR ) * FirstVNF_CPU ) ) ) - BR ) ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( MLU * ( RRSe + RRSe ) ) + ( MLU / MUM ) ) * RRSe ) )", "obj1": 0.6200787401574803, "obj2": 0.24610964430384902}, {"determining": "Max( ( DDR - FirstVNF_Mem ),( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_Mem ) - RRS ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MUC * RRSe ),MUC ) ) + Max( ( ( DS / MUR ) / MUR ),Min( ( MUM / DS ) ,RMSe ) ) ) + CS ) ) * ( RRSe - DS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5367777739291147}, {"determining": "Max( ( ( Max( ( ( ( BR / MDR ) * FirstVNF_Mem_Server ) - MRS ),( BR + ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5245362443351477}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,( Const + DDR ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( RMSe + RMSe ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.5767716535433071, "obj2": 0.27374261262920047}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.4570420396985107}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,( ( Max( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - MRS ),( BR + DDR ) ) - ( FirstVNF_Mem - BR ) ) * MDR ) ) )", "choosing": "Max( Max( MUR,DS ),( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( ( ( MUR - RRSe ) / MUR ) / RMSe ) ,( MUM * MUR ) ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7351994935315525}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "( ( ACS - ( ( Min( Max( FirstVNF_Mem,( DDR + Min( ACS ,FirstVNF_CPU ) ) ) ,RRS ) / ( Max( ( FirstVNF_CPU_Server / Min( BR ,Const ) ),ARS ) + ACS ) ) * BR ) ) + ( Min( ( Min( ( Max( ( Const / AMS ),Min( Const ,AMS ) ) * RRS ) ,DDR ) * ( ACS / Min( ACS ,PN ) ) ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / CS ) ) + ( ( ( RCSe - ( RCSe + CS ) ) + ( RMSe - MUC ) ) + MUC ) ),MLU ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.03822510429245394}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + BR ) ,Min( MRS ,RRS ) ) * Min( ( RRS / Const ) ,( ARS + PN ) ) ) / PN )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( ( Max( MUR,MUC ) / MUC ) - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( RMSe + RMSe ) / RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.5292780981217413}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( ( Min( Max( ( ( Min( MUR ,RCSe ) / ( RMSe / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) + MLU ) - Max( RCSe,( MLU + Min( ( MUR - Min( MUM ,Max( MLU,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.46041683203690165}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),RRS ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( RCSe ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.5531496062992126, "obj2": 0.29265423543429236}, {"determining": "( Max( ( ( ( FirstVNF_RAM_Server + Min( RRS ,MRS ) ) * FirstVNF_Mem_Server ) - MRS ),( BR + ( ACS - Min( ( DDR - ( Max( ARS,CRS ) + FirstVNF_CPU ) ) ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( ( ( ( DS / MUM ) + ( ( MUR + MLU ) / Max( Max( ( CS * MLU ),MUR ),MUC ) ) ) / ( MUR / Min( ( ( Min( CS ,DS ) - MLU ) / RMSe ) ,( MUM * MUR ) ) ) ) ,MLU ),( MLU - DS ) )", "obj1": 0.9881889763779528, "obj2": 0.0055772801951172474}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( Min( MDR ,Min( Const ,PN ) ) ,MDR ) * ( BR * ARS ) ) )", "choosing": "( Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RCSe / MUR ) ) ) / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7353130743445538}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "( ( Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( RMSe - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.02583330752226766}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,DS ) + RRSe ) * Max( CS,RRSe ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5274913167068652}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM_Server ) + ( AMS * CRS ) )", "choosing": "( ( RRSe + ( RRSe / ( DS + ( CS / MLU ) ) ) ) / ( DS - RRSe ) )", "obj1": 0.15551181102362205, "obj2": 0.599967357316587}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5465326614282734}, {"determining": "Min( Max( FirstVNF_RAM,( ( ( ( ( BR - FirstVNF_Mem ) / ( FirstVNF_Mem_Server * Const ) ) - MDR ) + DDR ) + ACS ) ) ,Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( CS / RRSe ) + ( Max( MLU,DS ) + ( ( ( RRSe - DS ) * ( CS + MUC ) ) - DS ) ) ) * RRSe ) )", "obj1": 0.6161417322834646, "obj2": 0.24743261521586066}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * ( AMS - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,( DDR + PN ) ) ) ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - ( MUC / ( ( MUM - MUR ) / MUM ) ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.02232323943850786}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( Max( BR,MRS ) * ( AMS * RRS ) ) ,DDR ) * DDR ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Min( RCSe ,RMSe ) * ( Min( DS ,RCSe ) + ( ( ( Max( Max( MUC,( RRSe * DS ) ),( ( MUC / MUC ) - ( MLU - RRSe ) ) ) * MUR ) - DS ) + Max( MLU,CS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03874513230349196}, {"determining": "Min( Const ,( Min( MDR ,( Min( CRS ,Const ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + PN ) - FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Max( MUC,MUM ) - ( ( ( ( RRSe / ( RMSe / RRSe ) ) - ( RRSe + Max( MUM,( MUC * MUC ) ) ) ) / DS ) + ( MLU - ( CS + CS ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0041069661981792535}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Max( BR,( ( CRS * ( AMS + ACS ) ) + BR ) ) * ( ACS / ARS ) ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) + ( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RRSe ) ) ) / CS ) + MUC ) ),MLU ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.03822510429245394}, {"determining": "( Max( ( ( ( BR / MDR ) * FirstVNF_Mem_Server ) - MRS ),PN ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( ( ( Min( ( MUM / RMSe ) ,RCSe ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( MUR / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,MLU ),( MLU - DS ) )", "obj1": 0.9901574803149606, "obj2": 0.004195060088001996}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5427253618513851}, {"determining": "Min( Const ,( ( RRS + ACS ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Max( MUC,MUM ) - ( ( Min( ( MUC + MUM ) ,MLU ) / Min( MUM ,( RCSe * MUM ) ) ) + RMSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03247463066148501}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,RRSe ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5427253618513851}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "( ( FirstVNF_CPU * Max( AMS,FirstVNF_Mem_Server ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ( MRS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( MUR - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( CS + CS ) + MUC ) ) ) ),( ( RMSe * ( RRSe + ( MUM - DS ) ) ) + RMSe ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,RRS ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + ACS ) ) ) ),( ( FirstVNF_Mem / RRS ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( ( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) ),MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( CRS * CRS ),Min( MDR ,MRS ) ) + ( RRS / Max( ( ( FirstVNF_CPU_Server / MRS ) - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * CRS ) ),( FirstVNF_CPU_Server - ( ACS / Max( CRS,MDR ) ) ) ) )", "choosing": "( ( ( ( Max( ( MLU - ( Min( MUC ,MUM ) * MUC ) ),( RRSe + Max( ( RCSe - MUR ),MUR ) ) ) / Max( Max( ( MUC - RMSe ),MUR ),( MUR + CS ) ) ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + Min( RRSe ,MLU ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( BR + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( PN - RRS ) ) - ( ( FirstVNF_Mem_Server + DDR ) + MDR ) )", "choosing": "Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,( ( CS * Max( ( ( MUR / DS ) * MLU ),DS ) ) - ( Max( MUR,MUC ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( Const + ( FirstVNF_CPU_Server / ACS ) ),MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - Max( RMSe,Min( Max( Max( RRSe,MUR ),CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM / ( RRS * DDR ) ) * FirstVNF_RAM ) - Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / DS ) + MUM ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( MRS,Max( ( ARS / CRS ),MDR ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( ( CS / RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( ARS - FirstVNF_CPU_Server ) / Const ) )", "choosing": "Max( ( MUR + CS ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS + FirstVNF_Mem ) + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + Min( RCSe ,RCSe ) ) * Max( DS,( ( RRSe - MUC ) / ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ,FirstVNF_RAM ) - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( Max( MUR,Max( ( RCSe * ( Min( RCSe ,( RRSe - MLU ) ) / RRSe ) ),( MUM - MUR ) ) ) - ( ( MUC - RMSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( ( ARS * CRS ) - FirstVNF_CPU_Server ) ) - Max( PN,RRS ) ) - Max( PN,( CRS - Const ) ) )", "choosing": "Max( ( MLU / ( RRSe * ( DS * MLU ) ) ),( ( RMSe + Min( RRSe ,( Max( ( RRSe * MUM ),( DS - ( MUC / MLU ) ) ) / DS ) ) ) / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Max( CRS,PN ) + ACS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( MUM - RMSe ) ),Max( ( Max( RRSe,( ( Max( ( RMSe - RCSe ),CS ) - Max( RCSe,( RCSe + RCSe ) ) ) * MUR ) ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( DS ,( Max( DS,MLU ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Const + PN ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RMSe + ( RCSe / ( MUM * MLU ) ) ) ) * ( RCSe - RRSe ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( ( ( Const * FirstVNF_CPU ) - ( Const * FirstVNF_Mem ) ) - Min( ( BR / RRS ) ,( AMS + FirstVNF_Mem ) ) ) )", "choosing": "( ( CS - Max( MLU,MLU ) ) + ( MUM / ( CS + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ARS / MDR ) ) ,( ARS + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( ( CS * Min( Max( MLU,( MLU + Max( RMSe,RCSe ) ) ) ,CS ) ) - ( MUC / DS ) ) ) * Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ( Const * Const ),MRS ) - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / RMSe ),MUM ),( MUR + DS ) ) - Max( ( MUM / Min( RMSe ,RCSe ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / AMS ) * ( FirstVNF_CPU_Server - RRS ) ) ,( Max( ( RRS * FirstVNF_Mem_Server ),ARS ) * MDR ) ) - Max( Max( ( ( Const - BR ) - FirstVNF_RAM ),( MDR / FirstVNF_RAM_Server ) ),( ( BR / MDR ) / ( FirstVNF_Mem * Max( ARS,ACS ) ) ) ) )", "choosing": "Max( Max( ( MUR / DS ),DS ),( ( Min( RCSe ,MUC ) / Min( Max( ( ( Min( MUR ,RCSe ) / ( MLU / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + ( FirstVNF_RAM / FirstVNF_CPU ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( Max( ( ( RMSe + ( ( CS / MUM ) - MUR ) ) - Min( ( ( DS + DS ) + ( RCSe / Min( MUC ,CS ) ) ) ,RRSe ) ),MUM ) + Min( Min( ( ( DS + MUM ) / RRSe ) ,RMSe ) ,( DS * Max( DS,Max( ( Min( RRSe ,MUC ) * ( RCSe - DS ) ),( Max( CS,RMSe ) / ( MUC - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_RAM ) / ( ( RRS + PN ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( RMSe * MUM ) + ( MUR * MUR ) ) + ( ( RRSe / RRSe ) * Min( MUC ,MUR ) ) ) ,Max( ( Max( MLU,DS ) + ( ( ( RRSe - DS ) * ( ( ( MLU / DS ) + MUR ) + MUC ) ) - DS ) ),( ( DS / MLU ) + Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( Max( RRS,Const ) * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) ,( Min( CS ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) ,( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( BR * FirstVNF_RAM_Server ),Max( PN,RRS ) ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,RRSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7455186487087001}, {"determining": "Min( Min( CRS ,CRS ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / ( Max( BR,( ARS - ( ( AMS + MRS ) - BR ) ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - ( MUR / CS ) ) / CS ),MUM ),Max( RCSe,MLU ) ) - ( ( ( RCSe + ( Min( MUR ,MUC ) + RMSe ) ) - ( ( ( ( ( RMSe - MUR ) / RRSe ) / RCSe ) * ( ( CS - MUC ) + ( RRSe * CS ) ) ) * ( Max( MUM,( Min( RRSe ,MUM ) / MUM ) ) - MLU ) ) ) * ( MLU - MUC ) ) )", "obj1": 0.6751968503937008, "obj2": 0.1885972678478225}, {"determining": "Min( ( BR + ( ( ( Max( FirstVNF_Mem,MRS ) + MDR ) - FirstVNF_RAM ) / ACS ) ) ,Min( ( FirstVNF_RAM_Server - ( PN + DDR ) ) ,( Min( Min( MDR ,FirstVNF_RAM ) ,MDR ) * ( BR * ARS ) ) ) )", "choosing": "( ( ( DS / Min( Min( ( ( Min( RMSe ,RCSe ) + Min( MUM ,MUM ) ) * ( MUR * RCSe ) ) ,( ( Max( RCSe,MUR ) + MLU ) / CS ) ) ,( Min( ( RRSe * DS ) ,DS ) + RCSe ) ) ) / CS ) * Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RRSe + MUM ) ) ) / DS ),Max( ( RCSe + ( MUM * RRSe ) ),DS ) ) )", "obj1": 0.3188976377952756, "obj2": 0.43731144482577416}, {"determining": "Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.37598425196850394, "obj2": 0.40199159668058443}, {"determining": "Max( ( ( Max( ( ( ( ( ARS / DDR ) / MDR ) * FirstVNF_Mem_Server ) - MRS ),( ( BR - RRS ) * AMS ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,MLU ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( MUR + ( DS + ( ( RMSe / RRSe ) / ( ( RRSe - MUM ) * MLU ) ) ) ) - Max( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,( RCSe * RCSe ) ) ) ),MUC ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.5943497563992232}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( Min( MDR ,MRS ) ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( ( PN / PN ),( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( RCSe * ( RCSe + DS ) ) ,Min( RRSe ,MUC ) ) + Min( ( ( MLU / DS ) + ( ( ( MUM * MUM ) / ( CS / RCSe ) ) + ( ( DS - RRSe ) * MUC ) ) ) ,RRSe ) ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7952755905511811, "obj2": 0.10179967517885896}, {"determining": "( ( FirstVNF_CPU - ( AMS / Const ) ) + ( ( FirstVNF_CPU_Server / Min( BR ,Min( MDR ,( FirstVNF_CPU_Server * MRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + ( Min( ( RMSe + MUR ) ,DS ) / ( DS + MUR ) ) ) / ( DS - RRSe ) )", "obj1": 0.08267716535433071, "obj2": 0.7046753957467994}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5696958371208577}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( CRS + ACS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( ( RCSe * MLU ) - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.639763779527559, "obj2": 0.2106915731354793}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Min( ( BR / RRS ) ,( FirstVNF_CPU * ( Min( Const ,DDR ) + PN ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( ( RCSe * ( ( RMSe * RCSe ) - ( Min( RMSe ,CS ) / ( DS - Max( RMSe,MUC ) ) ) ) ) ,( Min( RRSe ,MUC ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM / ( CS + MLU ) ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6549683904529028}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( MUR + DS ) ) - Max( ( MLU + Max( MUR,MUR ) ),CS ) )", "obj1": 0.7263779527559056, "obj2": 0.16632642440312703}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) )", "choosing": "( Max( Max( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.7598425196850394, "obj2": 0.137792931328714}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * ( Const - ARS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( Const / AMS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( CS ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( DS - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + Max( ( RMSe / DS ),Min( ( MUC + Max( ( MUM - MUR ),CS ) ) ,( MUR * ( ( MUM / MUC ) * RRSe ) ) ) ) ) ) - Max( RMSe,CS ) )", "obj1": 0.5708661417322834, "obj2": 0.24958800038738088}, {"determining": "Max( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( ( PN - ( MDR - Min( Const ,AMS ) ) ) + MRS ) ),( FirstVNF_RAM_Server * Max( ( Min( FirstVNF_CPU ,CRS ) / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( ( ( MLU - DS ) + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.6221465100039393}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.781496062992126, "obj2": 0.12879652238656727}, {"determining": "Min( ( Max( DDR,Max( BR,( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ) ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.4645669291338583, "obj2": 0.3431892851439205}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,( ( MRS + ACS ) - FirstVNF_Mem ) ) ) / CRS ) )", "choosing": "( ( ( ( ( ( MUR * MUM ) - RRSe ) - MUC ) - MUM ) / ( CS / RRSe ) ) - Max( Min( RCSe ,MLU ),( MLU - DS ) ) )", "obj1": 0.5255905511811023, "obj2": 0.33407043029484745}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( Max( Max( PN,BR ),MRS ) * RRS ) ,DDR ) * Min( ARS ,FirstVNF_CPU ) ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,RMSe ) * ( Min( ( Min( MUR ,RCSe ) / ( RMSe / RMSe ) ) ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.8523622047244095, "obj2": 0.09350731086648989}, {"determining": "Min( Max( Min( FirstVNF_Mem_Server ,CRS ),MDR ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),RRS ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( RCSe ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / ( RMSe * RMSe ) ) * Max( ( DS + RCSe ),( RCSe - Min( RCSe ,( MLU * DS ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2978251586916598}, {"determining": "( ( Min( CRS ,Const ) * CRS ) - ( ( DDR - FirstVNF_RAM ) + MDR ) )", "choosing": "Min( ( ( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ) + MUM ) - ( MLU + RCSe ) ) ,( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 0.515748031496063, "obj2": 0.34195121211170626}, {"determining": "Min( ( ( AMS - Max( ARS,Min( FirstVNF_Mem ,ARS ) ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( BR + FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( ( RRSe - ( MLU / MUR ) ) ,MUR ),( MUR + DS ) ) - MUM )", "obj1": 0.7381889763779528, "obj2": 0.1648705912587367}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( ( MDR * Const ) ,FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ( FirstVNF_RAM_Server * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * CRS ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUM + DS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,( RRSe + Max( ( MUR * MLU ),( RCSe * MUC ) ) ) ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.4012450285572005}, {"determining": "( Min( Const ,( ( ( FirstVNF_Mem - PN ) + Min( ( FirstVNF_RAM_Server / Min( PN ,PN ) ) ,ARS ) ) / FirstVNF_RAM_Server ) ) / PN )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( ( RMSe / MUC ) - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * Min( RMSe ,( RMSe * Max( RMSe,MLU ) ) ) ) ),( ( MUM / Max( MUR,MUR ) ) - ( RRSe + MUM ) ) )", "obj1": 0.8858267716535433, "obj2": 0.07288983169925406}, {"determining": "( ( ( Min( Max( BR,( FirstVNF_RAM / ACS ) ) ,FirstVNF_CPU ) * ( CRS - FirstVNF_CPU_Server ) ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RMSe - RCSe ) + ( ( ( RRSe - CS ) + MLU ) - Max( RCSe,MUC ) ) ) ,( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) + ( MUR * CS ) ) )", "obj1": 0.6318897637795275, "obj2": 0.23701888923104694}, {"determining": "( ( ( ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ACS ) * Max( Min( ARS ,BR ),FirstVNF_RAM_Server ) ) * ( ( Min( PN ,( MDR / FirstVNF_CPU_Server ) ) + PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( ( ( RRSe - CS ) + ( MLU + RRSe ) ) - Max( RCSe,( MLU + Min( ( CS - MUR ) ,MUM ) ) ) ) )", "obj1": 0.2578740157480315, "obj2": 0.49290041965156484}, {"determining": "Min( Max( FirstVNF_RAM,Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( FirstVNF_RAM / ( MDR + FirstVNF_CPU_Server ) ) ) ) ,Min( ( ACS - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / CS ) / CS ) * ( ( ( MLU * ( Max( RRSe,( ( MLU - RMSe ) + ( RRSe + MUM ) ) ) / DS ) ) + RRSe ) * RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3607738869620422}, {"determining": "Min( Max( FirstVNF_RAM,( Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) ) + FirstVNF_Mem ) ) ,( Const + DDR ) )", "choosing": "( ( ( DS / Min( MUC ,( RMSe + RMSe ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.562992125984252, "obj2": 0.2757430415298654}, {"determining": "( Min( ( CRS + Const ) ,( ( AMS * ( FirstVNF_Mem_Server - Max( Const,( ARS - AMS ) ) ) ) - MRS ) ) / ( CRS + DDR ) )", "choosing": "Max( ( RMSe - MLU ),( ( MUM / CS ) - ( RRSe + ( MUC / Min( ( ( MUR + MUR ) * ( RCSe - DS ) ) ,( MLU * RMSe ) ) ) ) ) )", "obj1": 0.2677165354330709, "obj2": 0.4783744226062037}, {"determining": "Min( ( FirstVNF_Mem_Server * RRS ) ,Min( ( ACS - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / Min( DS ,MUR ) ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) )", "obj1": 0.45866141732283466, "obj2": 0.3855708869437746}, {"determining": "Max( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( ( PN - ( MDR - Min( Const ,AMS ) ) ) + MRS ) ),( FirstVNF_RAM_Server * Max( ( Max( ARS,MDR ) / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( RCSe / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.10433070866141732, "obj2": 0.6397046023088081}, {"determining": "( Min( Min( Const ,PN ) ,( ACS * FirstVNF_Mem ) ) / ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( MUM - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( MUC / Max( MUR,( ( MUM / ( RMSe / MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5039252835132978}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.45406048239108837}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Max( Min( ( DDR + FirstVNF_RAM_Server ) ,( MDR + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server - Const ) * ( Min( Max( ( AMS / FirstVNF_RAM ),( AMS / Min( DDR ,CRS ) ) ) ,( MRS * AMS ) ) - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( Min( RRSe ,MUC ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) )", "obj1": 0.0610236220472441, "obj2": 0.7186431356669737}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( Const ,( DDR - FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( Max( MUC,MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.8641732283464567, "obj2": 0.08650240224952159}, {"determining": "Min( Max( FirstVNF_RAM,( ( ( ( ( BR - FirstVNF_Mem ) / ( FirstVNF_Mem_Server * Const ) ) - MDR ) + DDR ) + ACS ) ) ,Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( CS / RRSe ) + ( Max( MLU,DS ) + ( ( ( RRSe - DS ) * ( CS + MUC ) ) - DS ) ) ) * RRSe ) )", "obj1": 0.6161417322834646, "obj2": 0.24743261521586066}, {"determining": "( ( ( DDR - FirstVNF_Mem ) + Const ) - ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / RMSe ) / ( Min( ( RRSe + Min( RCSe ,MUR ) ) ,( MLU / RMSe ) ) * ( ( CS / RRSe ) * Max( MUC,RCSe ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.39114117899096057}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( BR + FirstVNF_RAM ) / Min( Min( ( ARS - Min( DDR ,ARS ) ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( Max( ( RCSe * ( ( Max( RMSe,RCSe ) * MUM ) - ( RMSe * ( RMSe + MUM ) ) ) ),MUM ) / ( MLU + RCSe ) ) / CS ) * Max( Max( ( Min( CS ,( ( ( CS / RMSe ) + MUC ) - ( Max( MUC,DS ) + MUC ) ) ) - CS ),( ( MUM - MUR ) / RRSe ) ),Max( Max( ( ( CS - Min( Max( MUR,MLU ) ,( MUC * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04500576579955731}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) ) ) ,( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( ( ( CS - DS ) / RMSe ) - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.05254146178129292}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.5491358883323108}, {"determining": "Min( Max( ACS,ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( ( ( ( CS / RRSe ) * Max( MUC,RCSe ) ) - ( CS - RMSe ) ),( Max( ( Min( MUM ,MLU ) - ( CS - RMSe ) ),MUM ) - ( RMSe * RMSe ) ) ) - ( RMSe * RMSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03226637450497108}, {"determining": "( Min( Min( Const ,PN ) ,( ACS * FirstVNF_Mem ) ) / ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( MUM - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( MUC / Max( MUR,( ( MUM / ( RMSe / MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.4660222083301621}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / DDR ),ACS ) * ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( DS * DS ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.0443551284501161}, {"determining": "( ( AMS - MDR ) / ( PN - FirstVNF_CPU_Server ) )", "choosing": "( RMSe / ( Min( ( ( DS + RMSe ) + ( ( ( ( RMSe - MUM ) + Max( MLU,MUR ) ) - RCSe ) - MUR ) ) ,( Min( RRSe ,MUC ) * DS ) ) / ( Max( ( MUC - ( DS + MUM ) ),MUC ) * ( ( ( MUM + MUR ) + Max( ( Max( RMSe,MLU ) + ( DS + DS ) ),RMSe ) ) - RMSe ) ) ) )", "obj1": 0.05905511811023622, "obj2": 0.7267023412407313}, {"determining": "( Max( ACS,( RRS + RRS ) ) * Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( MDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( DS + MLU ) ) / Max( ( CS / MUM ),( MUR - RCSe ) ) )", "obj1": 0.44291338582677164, "obj2": 0.3893133309704462}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( ( MUM * MUR ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.5570866141732284, "obj2": 0.2842884360154163}, {"determining": "( ( Min( Min( DDR ,FirstVNF_Mem ) ,Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_Mem ) ) - FirstVNF_RAM ) / Max( ( Const - FirstVNF_CPU_Server ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + MLU ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( RRSe * RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.5122752668388372}, {"determining": "( Max( ( ( ( BR / ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) - MRS ),PN ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( ( ( Min( ( MUM / RMSe ) ,RCSe ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) ) ,MLU ),( MLU - DS ) )", "obj1": 0.9763779527559056, "obj2": 0.01687081823297535}, {"determining": "Max( ( DDR - FirstVNF_Mem ),( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_Mem ) - RRS ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MUC * RRSe ),MUC ) ) + Max( ( ( DS / MUR ) / MUR ),Min( ( MUM / DS ) ,RMSe ) ) ) + CS ) ) * ( RRSe - DS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5367777739291147}, {"determining": "Max( ( ( Max( ( ( ( BR / MDR ) * FirstVNF_Mem_Server ) - MRS ),( BR + ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.5245362443351477}, {"determining": "Min( ( ( ( FirstVNF_CPU + ARS ) + Const ) - ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( ( Max( MUC,MLU ) - MLU ),MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9822834645669292, "obj2": 0.013191142612636545}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.4570420396985107}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + ACS ) ) ,Min( Min( DDR ,( ( DDR / Min( FirstVNF_RAM ,( ( PN * DDR ) * FirstVNF_CPU ) ) ) - BR ) ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( MLU * ( RRSe + RRSe ) ) + ( MLU / MUM ) ) * RRSe ) )", "obj1": 0.6200787401574803, "obj2": 0.24610964430384902}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( FirstVNF_Mem,( ( Max( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - MRS ),( BR + DDR ) ) - ( FirstVNF_Mem - BR ) ) * MDR ) ) )", "choosing": "Max( Max( MUR,DS ),( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( ( ( MUR - RRSe ) / MUR ) / RMSe ) ,( MUM * MUR ) ) ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7351994935315525}, {"determining": "( ( FirstVNF_CPU * Max( AMS,FirstVNF_Mem_Server ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ( MRS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( MUR - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( CS + CS ) + MUC ) ) ) ),( ( RMSe * ( RRSe + ( MUM - DS ) ) ) + RMSe ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "Min( Max( ACS,ARS ) ,( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( Min( MUM ,MLU ) - ( RMSe / Max( ( MUR - ( MUC * RCSe ) ),Min( Max( ( MUM + CS ),RMSe ) ,RCSe ) ) ) ),MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.020671908212743836}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),( MDR + FirstVNF_CPU_Server ) ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( ( CS + MUC ) ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.547244094488189, "obj2": 0.2927135484913787}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Max( BR,( ( CRS * ( AMS + ACS ) ) + BR ) ) * ( ACS / ARS ) ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) + ( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RRSe ) ) ) / CS ) + MUC ) ),MLU ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.03822510429245394}, {"determining": "( ( Min( ( FirstVNF_CPU_Server + BR ) ,Min( MRS ,RRS ) ) * Min( ( RRS / Const ) ,( ARS + PN ) ) ) / PN )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( ( Max( MUR,MUC ) / MUC ) - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( RMSe + RMSe ) / RCSe ) )", "obj1": 0.20275590551181102, "obj2": 0.5292780981217413}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( ( Min( Max( ( ( Min( MUR ,RCSe ) / ( RMSe / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) + MLU ) - Max( RCSe,( MLU + Min( ( MUR - Min( MUM ,Max( MLU,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.46041683203690165}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( FirstVNF_CPU_Server * RRS ) ,DDR ) * ( ACS / ARS ) ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) + ( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) + MUC ) ),MLU ) * Min( ( ( DS * DS ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.08863595160615913}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),RRS ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( RCSe ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / CS ) * Max( ( DS + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.5531496062992126, "obj2": 0.29265423543429236}, {"determining": "( Max( ( ( ( FirstVNF_RAM_Server + Min( RRS ,MRS ) ) * FirstVNF_Mem_Server ) - MRS ),( BR + ( ACS - Min( ( DDR - ( Max( ARS,CRS ) + FirstVNF_CPU ) ) ,FirstVNF_RAM ) ) ) ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( ( ( ( DS / MUM ) + ( ( MUR + MLU ) / Max( Max( ( CS * MLU ),MUR ),MUC ) ) ) / ( MUR / Min( ( ( Min( CS ,DS ) - MLU ) / RMSe ) ,( MUM * MUR ) ) ) ) ,MLU ),( MLU - DS ) )", "obj1": 0.9881889763779528, "obj2": 0.0055772801951172474}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( Min( MDR ,Min( Const ,PN ) ) ,MDR ) * ( BR * ARS ) ) )", "choosing": "( Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RCSe / MUR ) ) ) / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7353130743445538}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( FirstVNF_Mem * FirstVNF_RAM_Server ),FirstVNF_Mem ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,( MUR * MUR ) ) )", "obj1": 0.04330708661417323, "obj2": 0.7455083322426809}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,DS ) + RRSe ) * Max( CS,RRSe ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.2106299212598425, "obj2": 0.5274913167068652}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * ( AMS - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,( DDR + PN ) ) ) ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - ( MUC / ( ( MUM - MUR ) / MUM ) ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.02232323943850786}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( Max( BR,MRS ) * ( AMS * RRS ) ) ,DDR ) * DDR ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Min( RCSe ,RMSe ) * ( Min( DS ,RCSe ) + ( ( ( Max( Max( MUC,( RRSe * DS ) ),( ( MUC / MUC ) - ( MLU - RRSe ) ) ) * MUR ) - DS ) + Max( MLU,CS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03874513230349196}, {"determining": "Min( Const ,( Min( MDR ,( Min( CRS ,Const ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + PN ) - FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_Mem ,ARS ) ) )", "choosing": "( Max( MUC,MUM ) - ( ( ( ( RRSe / ( RMSe / RRSe ) ) - ( RRSe + Max( MUM,( MUC * MUC ) ) ) ) / DS ) + ( MLU - ( CS + CS ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0041069661981792535}, {"determining": "( ( ACS - ( ( Min( Max( FirstVNF_Mem,( DDR + Min( ACS ,FirstVNF_CPU ) ) ) ,RRS ) / ( Max( ( FirstVNF_CPU_Server / Min( BR ,Const ) ),ARS ) + ACS ) ) * BR ) ) + ( Min( ( Min( ( Max( ( Const / AMS ),Min( Const ,AMS ) ) * RRS ) ,DDR ) * ( ACS / Min( ACS ,PN ) ) ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / CS ) ) + ( ( ( RCSe - ( RCSe + CS ) ) + ( RMSe - MUC ) ) + MUC ) ),MLU ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.03822510429245394}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + ( Max( ( BR * FirstVNF_CPU ),MRS ) / ( PN - FirstVNF_CPU_Server ) ) ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( RCSe - ( MUR - CS ) ) * Max( CS,RRSe ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5470396844170838}, {"determining": "( ( Min( Max( Min( ( Max( ( MRS * BR ),RRS ) * AMS ) ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( RCSe ,MLU ) * Max( ( ( Min( ( Min( RCSe ,( DS * RMSe ) ) + RRSe ) ,MUM ) * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.02583330752226766}, {"determining": "( Max( ( ( ( BR / MDR ) * FirstVNF_Mem_Server ) - MRS ),PN ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( ( ( Min( ( MUM / RMSe ) ,RCSe ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( MUR / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,MLU ),( MLU - DS ) )", "obj1": 0.9901574803149606, "obj2": 0.004195060088001996}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5427253618513851}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,RRSe ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5427253618513851}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5465326614282734}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,FirstVNF_RAM_Server ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( FirstVNF_RAM_Server * ARS ) ),( ( PN * PN ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( ( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( RCSe * MUC ) * ( DS - RRSe ) ) ),MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( RMSe - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.9566929133858267, "obj2": 0.02583330752226766}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) + ( AMS * ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,FirstVNF_RAM_Server ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) )", "choosing": "( ( RRSe + ( RRSe / ( DS + ( ( ( DS / ( MLU + RCSe ) ) / CS ) * Max( MUC,MUM ) ) ) ) ) / ( DS - RRSe ) )", "obj1": 0.6181102362204725, "obj2": 0.24642908404529548}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,RRS ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + ACS ) ) ) ),( ( FirstVNF_Mem / RRS ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( ( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) ),MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "Min( Const ,( ( DDR * FirstVNF_RAM ) * ACS ) )", "choosing": "( Max( MUC,MUM ) - ( ( ( ( RRSe / ( RMSe / RRSe ) ) - ( RMSe + ( RMSe * DS ) ) ) / DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( BR + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( PN - RRS ) ) - ( ( FirstVNF_Mem_Server + DDR ) + MDR ) )", "choosing": "Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,( ( CS * Max( ( ( MUR / DS ) * MLU ),DS ) ) - ( Max( MUR,MUC ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( Const + ( FirstVNF_CPU_Server / ACS ) ),MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - Max( RMSe,Min( Max( Max( RRSe,MUR ),CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM / ( RRS * DDR ) ) * FirstVNF_RAM ) - Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / DS ) + MUM ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( MRS,Max( ( ARS / CRS ),MDR ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( ( CS / RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( ARS - FirstVNF_CPU_Server ) / Const ) )", "choosing": "Max( ( MUR + CS ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS + FirstVNF_Mem ) + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + Min( RCSe ,RCSe ) ) * Max( DS,( ( RRSe - MUC ) / ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ,FirstVNF_RAM ) - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( Max( MUR,Max( ( RCSe * ( Min( RCSe ,( RRSe - MLU ) ) / RRSe ) ),( MUM - MUR ) ) ) - ( ( MUC - RMSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( ( ARS * CRS ) - FirstVNF_CPU_Server ) ) - Max( PN,RRS ) ) - Max( PN,( CRS - Const ) ) )", "choosing": "Max( ( MLU / ( RRSe * ( DS * MLU ) ) ),( ( RMSe + Min( RRSe ,( Max( ( RRSe * MUM ),( DS - ( MUC / MLU ) ) ) / DS ) ) ) / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Max( CRS,PN ) + ACS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( MUM - RMSe ) ),Max( ( Max( RRSe,( ( Max( ( RMSe - RCSe ),CS ) - Max( RCSe,( RCSe + RCSe ) ) ) * MUR ) ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( DS ,( Max( DS,MLU ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Const + PN ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RMSe + ( RCSe / ( MUM * MLU ) ) ) ) * ( RCSe - RRSe ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( BR * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( Max( Min( RCSe ,MLU ),( MLU - DS ) ),CS ) ) ) ) ,( Min( CS ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( Max( RRS,Const ) * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) ,( Min( CS ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( BR * FirstVNF_RAM_Server ),Max( PN,RRS ) ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,RRSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7455186487087001}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + BR ) ) ) / Max( DDR,AMS ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( ( MUM - RRSe ) - ( MUR - CS ) ) * Max( CS,RRSe ) ) ),( MUR / Min( DS ,RCSe ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7046718261540821}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Min( ( BR / RRS ) ,( FirstVNF_CPU * ( Min( Const ,DDR ) + PN ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( ( RCSe * ( ( RMSe * RCSe ) - ( Min( RMSe ,CS ) / ( DS - Max( RMSe,MUC ) ) ) ) ) ,( Min( RRSe ,MUC ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM / ( CS + MLU ) ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6549683904529028}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( Min( MDR ,MRS ) ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( ( PN / PN ),( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( RCSe * ( RCSe + DS ) ) ,Min( RRSe ,MUC ) ) + Min( ( ( MLU / DS ) + ( ( ( MUM * MUM ) / ( CS / RCSe ) ) + ( ( DS - RRSe ) * MUC ) ) ) ,RRSe ) ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7952755905511811, "obj2": 0.10179967517885896}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( CRS + ACS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( ( RCSe * MLU ) - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.639763779527559, "obj2": 0.2106915731354793}, {"determining": "Min( Max( Min( FirstVNF_Mem_Server ,CRS ),MDR ) ,Min( ( ACS - FirstVNF_CPU ) ,( ( ( ( Max( ( FirstVNF_Mem * BR ),RRS ) * AMS ) - ( AMS * ( FirstVNF_CPU_Server - PN ) ) ) + FirstVNF_CPU_Server ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( RCSe ,( DS * RMSe ) ) + RRSe ) ,MUM ) ) ) / ( RMSe * RMSe ) ) * Max( ( DS + RCSe ),( RCSe - Min( RCSe ,( MLU * DS ) ) ) ) )", "obj1": 0.5354330708661418, "obj2": 0.2978251586916598}, {"determining": "Min( Max( FirstVNF_RAM_Server,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( DS / ( RMSe * Max( CS,Min( ( MUR - ( RCSe * RCSe ) ) ,RCSe ) ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.41929133858267714, "obj2": 0.3615185643991935}, {"determining": "Max( ( ( Max( ( ( ( ( ARS / DDR ) / MDR ) * FirstVNF_Mem_Server ) - MRS ),( ( BR - RRS ) * AMS ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,MLU ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( MUR + ( DS + ( ( RMSe / RRSe ) / ( ( RRSe - MUM ) * MLU ) ) ) ) - Max( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,( RCSe * RCSe ) ) ) ),MUC ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.5943497563992232}, {"determining": "Min( ( BR + ( ( ( Max( FirstVNF_Mem,MRS ) + MDR ) - FirstVNF_RAM ) / ACS ) ) ,Min( ( FirstVNF_RAM_Server - ( PN + DDR ) ) ,( Min( Min( MDR ,FirstVNF_RAM ) ,MDR ) * ( BR * ARS ) ) ) )", "choosing": "( ( ( DS / Min( Min( ( ( Min( RMSe ,RCSe ) + Min( MUM ,MUM ) ) * ( MUR * RCSe ) ) ,( ( Max( RCSe,MUR ) + MLU ) / CS ) ) ,( Min( ( RRSe * DS ) ,DS ) + RCSe ) ) ) / CS ) * Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RRSe + MUM ) ) ) / DS ),Max( ( RCSe + ( MUM * RRSe ) ),DS ) ) )", "obj1": 0.3188976377952756, "obj2": 0.43731144482577416}, {"determining": "Min( Min( FirstVNF_CPU ,CRS ) ,Min( ( ( PN / FirstVNF_Mem_Server ) * MRS ) ,( Min( Min( MDR ,FirstVNF_RAM ) ,MDR ) * ( BR * ARS ) ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( Min( ( RCSe * Max( RMSe,DS ) ) ,DS ) + RCSe ) ) ) / CS ) * ( MLU - DS ) )", "obj1": 0.3641732283464567, "obj2": 0.42096062226422987}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( CRS + Const ) ) ,( ( Const / AMS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( CS ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( DS - ( RRSe / RMSe ) ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.547244094488189, "obj2": 0.2666344773917892}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( ( MDR * Const ) ,FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ( FirstVNF_RAM_Server * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * CRS ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUM + DS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,( RRSe + Max( ( MUR * MLU ),( RCSe * MUC ) ) ) ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.4012450285572005}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * ( Const - ARS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( Const / AMS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( CS ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( DS - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + Max( ( RMSe / DS ),Min( ( MUC + Max( ( MUM - MUR ),CS ) ) ,( MUR * ( ( MUM / MUC ) * RRSe ) ) ) ) ) ) - Max( RMSe,CS ) )", "obj1": 0.5708661417322834, "obj2": 0.24958800038738088}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) )", "choosing": "( Max( Max( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.7598425196850394, "obj2": 0.137792931328714}, {"determining": "Max( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( ( PN - ( MDR - Min( Const ,AMS ) ) ) + MRS ) ),( FirstVNF_RAM_Server * Max( ( Min( FirstVNF_CPU ,CRS ) / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( ( ( MLU - DS ) + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.6221465100039393}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( Min( MDR ,MRS ) ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( ( PN / PN ),( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( RCSe * ( RCSe + DS ) ) ,Min( RRSe ,MUC ) ) + Min( ( ( MLU / DS ) + ( ( ( MUM * MUM ) / ( CS / RCSe ) ) + ( ( DS - RRSe ) * MUC ) ) ) ,RRSe ) ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7637795275590551, "obj2": 0.11879025857018376}, {"determining": "Min( Min( CRS ,CRS ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / ( Max( BR,( ARS - ( ( AMS + MRS ) - BR ) ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - ( MUR / CS ) ) / CS ),MUM ),Max( RCSe,MLU ) ) - ( ( ( RCSe + ( Min( MUR ,MUC ) + RMSe ) ) - ( ( ( ( ( RMSe - MUR ) / RRSe ) / RCSe ) * ( ( CS - MUC ) + ( RRSe * CS ) ) ) * ( Max( MUM,( Min( RRSe ,MUM ) / MUM ) ) - MLU ) ) ) * ( MLU - MUC ) ) )", "obj1": 0.6751968503937008, "obj2": 0.1885972678478225}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / Max( PN,( ( FirstVNF_CPU + AMS ) + MRS ) ) ) ,( Max( Max( RRS,Const ),( Min( Max( ( MDR / DDR ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( Min( CS ,Min( MUC ,MUR ) ) / Max( ( RMSe / Min( ( MUM + CS ) ,Max( MLU,Max( MUC,MLU ) ) ) ),MLU ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) - ( MUC * ( Max( MUM,MUC ) * RRSe ) ) )", "obj1": 0.687007874015748, "obj2": 0.18430077631251918}, {"determining": "Min( ( Max( DDR,Max( BR,( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ) ) + ( FirstVNF_Mem * FirstVNF_Mem ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.4645669291338583, "obj2": 0.3431892851439205}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,( ( MRS + ACS ) - FirstVNF_Mem ) ) ) / CRS ) )", "choosing": "( ( ( ( ( ( MUR * MUM ) - RRSe ) - MUC ) - MUM ) / ( CS / RRSe ) ) - Max( Min( RCSe ,MLU ),( MLU - DS ) ) )", "obj1": 0.5255905511811023, "obj2": 0.33407043029484745}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( MUR + DS ) ) - Max( ( MLU + Max( MUR,MUR ) ),CS ) )", "obj1": 0.7263779527559056, "obj2": 0.16632642440312703}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( Max( Max( PN,BR ),MRS ) * RRS ) ,DDR ) * Min( ARS ,FirstVNF_CPU ) ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,RMSe ) * ( Min( ( Min( MUR ,RCSe ) / ( RMSe / RMSe ) ) ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.8523622047244095, "obj2": 0.09350731086648989}, {"determining": "Max( ( ( Max( ( ( ( ( ARS / MDR ) / MDR ) * FirstVNF_Mem_Server ) - MRS ),( ( FirstVNF_Mem + ( MRS + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) + ( ACS - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( ( MUM / MLU ) + ( ( Max( CS,RRSe ) * RCSe ) + ( MUM + MUM ) ) ) - Max( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ),MUC ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.573519259468276}, {"determining": "( ( Min( CRS ,Const ) * CRS ) - ( ( DDR - FirstVNF_RAM ) + MDR ) )", "choosing": "Min( ( ( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ) + MUM ) - ( MLU + RCSe ) ) ,( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 0.515748031496063, "obj2": 0.34195121211170626}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,( MDR - PN ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( ( CS + MUC ) ,( DS * RMSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) ,MUM ) ) ) / CS ) * Max( ( ( MUM * MUR ) + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.6181102362204725, "obj2": 0.23158803751913687}, {"determining": "Min( Max( FirstVNF_RAM,( ( ( ( ( BR - FirstVNF_Mem ) / ( FirstVNF_Mem_Server * Const ) ) - MDR ) + DDR ) + ACS ) ) ,Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( CS / RRSe ) + ( Max( MLU,DS ) + ( ( ( RRSe - DS ) * ( CS + MUC ) ) - DS ) ) ) * RRSe ) )", "obj1": 0.6161417322834646, "obj2": 0.24743261521586066}, {"determining": "Min( ( ( AMS - Max( ARS,Min( FirstVNF_Mem ,ARS ) ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( BR + FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( Min( ( RRSe - ( MLU / MUR ) ) ,MUR ),( MUR + DS ) ) - MUM )", "obj1": 0.7381889763779528, "obj2": 0.1648705912587367}, {"determining": "Min( Max( FirstVNF_RAM,Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( FirstVNF_RAM / ( MDR + FirstVNF_CPU_Server ) ) ) ) ,Min( ( ACS - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / CS ) / CS ) * ( ( ( MLU * ( Max( RRSe,( ( MLU - RMSe ) + ( RRSe + MUM ) ) ) / DS ) ) + RRSe ) * RRSe ) )", "obj1": 0.4625984251968504, "obj2": 0.3607738869620422}, {"determining": "Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.37598425196850394, "obj2": 0.40199159668058443}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5696958371208577}, {"determining": "Max( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( ( PN - ( MDR - Min( Const ,AMS ) ) ) + MRS ) ),( FirstVNF_RAM_Server * Max( ( Max( ARS,MDR ) / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( RCSe / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.10433070866141732, "obj2": 0.6397046023088081}, {"determining": "( Min( Min( Const ,PN ) ,( ACS * FirstVNF_Mem ) ) / ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( MUM - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( MUC / Max( MUR,( ( MUM / ( RMSe / MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5039252835132978}, {"determining": "( ( ( ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ACS ) * Max( Min( ARS ,BR ),FirstVNF_RAM_Server ) ) * ( ( Min( PN ,( MDR / FirstVNF_CPU_Server ) ) + PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( ( ( RRSe - CS ) + ( MLU + RRSe ) ) - Max( RCSe,( MLU + Min( ( CS - MUR ) ,MUM ) ) ) ) )", "obj1": 0.2578740157480315, "obj2": 0.49290041965156484}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( Min( MDR ,Min( Const ,PN ) ) ,MDR ) * ( BR * ARS ) ) )", "choosing": "( Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RCSe / MUR ) ) ) / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7353130743445538}, {"determining": "( Min( Const ,( ( ( FirstVNF_Mem - PN ) + Min( ( FirstVNF_RAM_Server / Min( PN ,PN ) ) ,ARS ) ) / FirstVNF_RAM_Server ) ) / PN )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( ( RMSe / MUC ) - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * Min( RMSe ,( RMSe * Max( RMSe,MLU ) ) ) ) ),( ( MUM / Max( MUR,MUR ) ) - ( RRSe + MUM ) ) )", "obj1": 0.8858267716535433, "obj2": 0.07288983169925406}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.45406048239108837}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.5491358883323108}, {"determining": "Min( Max( ACS,ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( ( ( ( CS / RRSe ) * Max( MUC,RCSe ) ) - ( CS - RMSe ) ),( Max( ( Min( MUM ,MLU ) - ( CS - RMSe ) ),MUM ) - ( RMSe * RMSe ) ) ) - ( RMSe * RMSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03226637450497108}, {"determining": "( Min( ( CRS + Const ) ,( ( AMS * ( FirstVNF_Mem_Server - Max( Const,( ARS - AMS ) ) ) ) - MRS ) ) / ( CRS + DDR ) )", "choosing": "Max( ( RMSe - MLU ),( ( MUM / CS ) - ( RRSe + ( MUC / Min( ( ( MUR + MUR ) * ( RCSe - DS ) ) ,( MLU * RMSe ) ) ) ) ) )", "obj1": 0.2677165354330709, "obj2": 0.4783744226062037}, {"determining": "( Min( Min( Const ,PN ) ,( ACS * FirstVNF_Mem ) ) / ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( MUM - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( MUC / Max( MUR,( ( MUM / ( RMSe / MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.4660222083301621}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) ) ) ,( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( ( ( CS - DS ) / RMSe ) - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.05254146178129292}, {"determining": "( ( FirstVNF_Mem - BR ) - ( FirstVNF_CPU_Server - PN ) )", "choosing": "( ( MUR + MUM ) * ( ( ( MUR - RRSe ) / MUR ) / RMSe ) )", "obj1": 0.8740157480314961, "obj2": 0.07942447875056091}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( FirstVNF_Mem + Min( ( CRS - RRS ) ,FirstVNF_RAM_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( MUM * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( Max( MUC,Min( RRSe ,( RCSe - MUM ) ) ) / ( Min( CS ,Max( ( DS / MUR ),( CS * RCSe ) ) ) / MUM ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5235841505210636}, {"determining": "( ( ( Max( ( FirstVNF_CPU_Server / DDR ),ACS ) * ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) ) + ( ( FirstVNF_CPU + CRS ) - Max( MDR,ARS ) ) ) * Min( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( Min( MRS ,BR ) - Min( FirstVNF_CPU ,RRS ) ) ) )", "choosing": "Min( ( ( DS * DS ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.0443551284501161}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( BR + FirstVNF_RAM ) / Min( Min( ( ARS - Min( DDR ,ARS ) ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( Max( ( RCSe * ( ( Max( RMSe,RCSe ) * MUM ) - ( RMSe * ( RMSe + MUM ) ) ) ),MUM ) / ( MLU + RCSe ) ) / CS ) * Max( Max( ( Min( CS ,( ( ( CS / RMSe ) + MUC ) - ( Max( MUC,DS ) + MUC ) ) ) - CS ),( ( MUM - MUR ) / RRSe ) ),Max( Max( ( ( CS - Min( Max( MUR,MLU ) ,( MUC * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.04500576579955731}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( ( ( PN - FirstVNF_RAM_Server ) * ( ( ARS * ( DDR + FirstVNF_Mem ) ) + ( MDR - FirstVNF_RAM_Server ) ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( Max( ( MUM - RCSe ),( RRSe / MUC ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( ( ( MLU / CS ) * MLU ) + DS ) - Max( MUR,( DS - RMSe ) ) ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.9862204724409449, "obj2": 0.003836226213948543}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( Const ,( DDR - FirstVNF_RAM ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( Max( MUC,MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.8641732283464567, "obj2": 0.08650240224952159}, {"determining": "( Min( Min( Const ,PN ) ,( ACS * FirstVNF_Mem ) ) / ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( MUM - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( MUC / Max( MUR,( ( MUM / ( RMSe / MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.5191279657203942}, {"determining": "( ( Min( Min( DDR ,FirstVNF_Mem ) ,Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_Mem ) ) - FirstVNF_RAM ) / Max( ( Const - FirstVNF_CPU_Server ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + MLU ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( RRSe * RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.5122752668388372}, {"determining": "Min( ( ( PN * FirstVNF_CPU ) + FirstVNF_Mem_Server ) ,Min( ( ( PN / FirstVNF_Mem_Server ) * MRS ) ,( Min( ( FirstVNF_CPU_Server * ( ( ( BR + ACS ) - ( FirstVNF_RAM / DDR ) ) / FirstVNF_RAM_Server ) ) ,MDR ) * ( ( FirstVNF_RAM - FirstVNF_CPU ) * ARS ) ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( Min( ( RCSe * Max( RMSe,RMSe ) ) ,DS ) + RCSe ) ) ) / CS ) * Max( ( Max( DS,( ( ( MUC + ( RMSe + CS ) ) - RMSe ) + ( RRSe + MUM ) ) ) / DS ),Max( ( RCSe + ( MUM * RRSe ) ),DS ) ) )", "obj1": 0.2618110236220472, "obj2": 0.48300437912567273}, {"determining": "Min( ( ( ( FirstVNF_CPU + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + Const ) - ( ( ( FirstVNF_Mem - PN ) - ( RRS / FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( ( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( RCSe / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( RMSe * RMSe ) )", "obj1": 0.9803149606299213, "obj2": 0.01264889536856544}, {"determining": "( ( ACS - ( ( Min( Max( FirstVNF_Mem,( DDR + Min( ACS ,FirstVNF_CPU ) ) ) ,RRS ) / ( Max( ( FirstVNF_CPU_Server / Min( BR ,Const ) ),ARS ) + ACS ) ) * BR ) ) + ( Min( ( Min( ( Max( ( Const / AMS ),Min( Const ,AMS ) ) * RRS ) ,DDR ) * ( ACS / Min( ACS ,PN ) ) ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / CS ) ) + ( ( ( RCSe - ( RCSe + CS ) ) + ( RMSe - MUC ) ) + MUC ) ),MLU ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.03822510429245394}, {"determining": "Max( ( DDR - FirstVNF_Mem ),( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_Mem ) - RRS ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MUC * RRSe ),MUC ) ) + Max( ( ( DS / MUR ) / MUR ),Min( ( MUM / DS ) ,RMSe ) ) ) + CS ) ) * ( RRSe - DS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5367777739291147}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( ( Min( Max( ( ( Min( MUR ,RCSe ) / ( RMSe / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) + MLU ) - Max( RCSe,( MLU + Min( ( MUR - Min( MUM ,Max( MLU,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.46041683203690165}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( FirstVNF_CPU_Server * RRS ) ,DDR ) * ( ACS / ARS ) ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) + ( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) + MUC ) ),MLU ) * Min( ( ( DS * DS ) + ( ( MUM * MUM ) - ( MUR / MUR ) ) ) ,Max( Min( Max( RMSe,MUM ) ,( MUC - MLU ) ),Min( ( MUC - RMSe ) ,( MUM - RCSe ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.08863595160615913}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( BR + FirstVNF_RAM ) / Min( Min( ( ARS - Min( DDR ,ARS ) ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( Max( ( RCSe * ( ( Max( RMSe,RCSe ) * MUM ) - ( RMSe * ( RMSe + MUM ) ) ) ),MUM ) / ( MLU + RCSe ) ) / CS ) * Max( Max( ( Min( CS ,( ( ( CS / RMSe ) + MUC ) - ( Max( MUC,DS ) + MUC ) ) ) - CS ),( ( MUM - MUR ) / RRSe ) ),Max( Max( ( ( CS - Min( Max( MUR,MLU ) ,( MUC * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8937007874015748, "obj2": 0.04818092994617753}, {"determining": "Min( Max( ACS,ARS ) ,( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( Min( MUM ,MLU ) - ( RMSe / Max( ( MUR - ( MUC * RCSe ) ),Min( Max( ( MUM + CS ),RMSe ) ,RCSe ) ) ) ),MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.020671908212743836}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.4570420396985107}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - ( ACS / FirstVNF_CPU_Server ) ) * MRS ) )", "choosing": "( Max( RRSe,MUR ) - ( ( DS / MUR ) * DS ) )", "obj1": 0.04330708661417323, "obj2": 0.741286157383387}, {"determining": "( ( Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( Max( Max( RRS,Const ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_Mem_Server ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( RMSe - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( MUR,MUR ) )", "obj1": 0.9566929133858267, "obj2": 0.0258241575701415}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( Min( ( PN + DDR ) ,( FirstVNF_CPU / BR ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( ( CS - MUR ) / CS ) - MUM ) )", "obj1": 0.9724409448818898, "obj2": 0.0180690635267194}, {"determining": "Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / Min( RMSe ,( MUR / DS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.297244094488189, "obj2": 0.45578663965380145}, {"determining": "( Max( ( ( ( BR / ( DDR - FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) - MRS ),PN ) - ( FirstVNF_Mem - BR ) )", "choosing": "Max( Min( ( ( Min( ( MUM / RMSe ) ,RCSe ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) ) ,MLU ),( MLU - DS ) )", "obj1": 0.9763779527559056, "obj2": 0.01687081823297535}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * ( AMS - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,( DDR + PN ) ) ) ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - ( MUC / ( ( MUM - MUR ) / MUM ) ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.02232323943850786}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Min( ( Max( BR,MRS ) * ( AMS * RRS ) ) ,DDR ) * DDR ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Min( RCSe ,RMSe ) * ( Min( DS ,RCSe ) + ( ( ( Max( Max( MUC,( RRSe * DS ) ),( ( MUC / MUC ) - ( MLU - RRSe ) ) ) * MUR ) - DS ) + Max( MLU,CS ) ) ) )", "obj1": 0.9271653543307087, "obj2": 0.03874513230349196}, {"determining": "( ( Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( Min( ( Max( BR,MRS ) * RRS ) ,DDR ) * Min( ARS ,FirstVNF_CPU ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( RMSe - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * MUM ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.5371105951297989}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,FirstVNF_RAM_Server ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( FirstVNF_RAM_Server * ARS ) ),( ( PN * PN ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( ( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( RCSe * MUC ) * ( DS - RRSe ) ) ),MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( Min( ( Max( BR,( ( CRS * ( AMS + ACS ) ) + BR ) ) * ( ACS / ARS ) ) ,PN ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( DS / ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) + ( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RRSe ) ) ) / CS ) + MUC ) ),MLU ) * ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.03822510429245394}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + ( Max( ( BR * FirstVNF_CPU ),MRS ) / ( PN - FirstVNF_CPU_Server ) ) ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( RCSe - ( MUR - CS ) ) * Max( CS,RRSe ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5470396844170838}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5427253618513851}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5465326614282734}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,RRS ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + ACS ) ) ) ),( ( FirstVNF_Mem / RRS ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( ( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) ),MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Const + FirstVNF_CPU ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5427253618513851}, {"determining": "( ( FirstVNF_CPU * Max( AMS,FirstVNF_Mem_Server ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ( MRS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( MUR - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( CS + CS ) + MUC ) ) ) ),( ( RMSe * ( RRSe + ( MUM - DS ) ) ) + RMSe ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) ,( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,( ( DDR * FirstVNF_RAM ) * ACS ) )", "choosing": "( Max( MUC,MUM ) - ( ( ( ( RRSe / ( RMSe / RRSe ) ) - ( RMSe + ( RMSe * DS ) ) ) / DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( BR + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( PN - RRS ) ) - ( ( FirstVNF_Mem_Server + DDR ) + MDR ) )", "choosing": "Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,( ( CS * Max( ( ( MUR / DS ) * MLU ),DS ) ) - ( Max( MUR,MUC ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( Const + ( FirstVNF_CPU_Server / ACS ) ),MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - Max( RMSe,Min( Max( Max( RRSe,MUR ),CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM / ( RRS * DDR ) ) * FirstVNF_RAM ) - Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / DS ) + MUM ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( MRS,Max( ( ARS / CRS ),MDR ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( ( CS / RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( ARS - FirstVNF_CPU_Server ) / Const ) )", "choosing": "Max( ( MUR + CS ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS + FirstVNF_Mem ) + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + Min( RCSe ,RCSe ) ) * Max( DS,( ( RRSe - MUC ) / ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ,FirstVNF_RAM ) - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( Max( MUR,Max( ( RCSe * ( Min( RCSe ,( RRSe - MLU ) ) / RRSe ) ),( MUM - MUR ) ) ) - ( ( MUC - RMSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( ( ARS * CRS ) - FirstVNF_CPU_Server ) ) - Max( PN,RRS ) ) - Max( PN,( CRS - Const ) ) )", "choosing": "Max( ( MLU / ( RRSe * ( DS * MLU ) ) ),( ( RMSe + Min( RRSe ,( Max( ( RRSe * MUM ),( DS - ( MUC / MLU ) ) ) / DS ) ) ) / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Max( CRS,PN ) + ACS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( MUM - RMSe ) ),Max( ( Max( RRSe,( ( Max( ( RMSe - RCSe ),CS ) - Max( RCSe,( RCSe + RCSe ) ) ) * MUR ) ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( DS ,( Max( DS,MLU ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Const + PN ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RMSe + ( RCSe / ( MUM * MLU ) ) ) ) * ( RCSe - RRSe ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( Const * DDR ) ),Min( ( ( ( FirstVNF_CPU + ARS ) + Const ) - ( ( ( MRS - PN ) - ( RRS / FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) + ( FirstVNF_RAM / AMS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( Max( MLU,MUM ) + CS ) / ( CS / MLU ) ) ) - Min( MUM ,RMSe ) ) ,( ( MUC + MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) ) ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_RAM / AMS ) ) )", "choosing": "Min( ( RRSe - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / PN ) ),MDR ) + ( FirstVNF_RAM / AMS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),Max( RMSe,MLU ) ) ) + ( ( Max( MLU,MUM ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( FirstVNF_Mem - BR ) - ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + ( Min( ( RCSe / ( ( MUR * MUC ) - RCSe ) ) ,RMSe ) + Min( MUR ,MUR ) ) ) * ( ( ( MUR - RRSe ) / MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( BR * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( Max( Min( RCSe ,MLU ),( MLU - DS ) ),CS ) ) ) ) ,( Min( CS ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( BR * FirstVNF_RAM_Server ),Max( PN,RRS ) ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,RRSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7455186487087001}, {"determining": "Max( Min( Const ,( Min( MDR ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Min( FirstVNF_Mem ,ARS ) ) ),Min( ( ( PN * Min( ACS ,( FirstVNF_RAM_Server - ARS ) ) ) * Max( FirstVNF_CPU_Server,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Max( MUC,MUM ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.26793784011805727}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / Max( PN,( ( FirstVNF_CPU + AMS ) + MRS ) ) ) ,( Max( Max( RRS,Const ),( Min( Max( ( MDR / DDR ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( Min( CS ,Min( MUC ,MUR ) ) / Max( ( RMSe / Min( ( MUM + CS ) ,Max( MLU,Max( MUC,MLU ) ) ) ),MLU ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) - ( MUC * ( Max( MUM,MUC ) * RRSe ) ) )", "obj1": 0.4468503937007874, "obj2": 0.35525499974781977}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + BR ) ) ) / Max( DDR,AMS ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( ( MUM - RRSe ) - ( MUR - CS ) ) * Max( CS,RRSe ) ) ),( MUR / Min( DS ,RCSe ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7046718261540821}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Min( ( BR / RRS ) ,( FirstVNF_CPU * ( Min( Const ,DDR ) + PN ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( ( RCSe * ( ( RMSe * RCSe ) - ( Min( RMSe ,CS ) / ( DS - Max( RMSe,MUC ) ) ) ) ) ,( Min( RRSe ,MUC ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM / ( CS + MLU ) ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6549683904529028}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( CRS + Const ) ) ,( ( Const / AMS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( CS ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( DS - ( RRSe / RMSe ) ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.547244094488189, "obj2": 0.2666344773917892}, {"determining": "Min( ( BR + ( ( ( Max( FirstVNF_Mem,MRS ) + MDR ) - FirstVNF_RAM ) / ACS ) ) ,Min( ( FirstVNF_RAM_Server - ( PN + DDR ) ) ,( Min( Min( MDR ,FirstVNF_RAM ) ,MDR ) * ( BR * ARS ) ) ) )", "choosing": "( ( ( DS / Min( Min( ( ( Min( RMSe ,RCSe ) + Min( MUM ,MUM ) ) * ( MUR * RCSe ) ) ,( ( Max( RCSe,MUR ) + MLU ) / CS ) ) ,( Min( ( RRSe * DS ) ,DS ) + RCSe ) ) ) / CS ) * Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RRSe + MUM ) ) ) / DS ),Max( ( RCSe + ( MUM * RRSe ) ),DS ) ) )", "obj1": 0.3188976377952756, "obj2": 0.43731144482577416}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( CRS + ACS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( ( RCSe * MLU ) - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.639763779527559, "obj2": 0.2106915731354793}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( MUR + DS ) ) - Max( ( MLU + Max( MUR,MUR ) ),CS ) )", "obj1": 0.7263779527559056, "obj2": 0.16632642440312703}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( Min( MDR ,MRS ) ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( ( PN / PN ),( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( RCSe * ( RCSe + DS ) ) ,Min( RRSe ,MUC ) ) + Min( ( ( MLU / DS ) + ( ( ( MUM * MUM ) / ( CS / RCSe ) ) + ( ( DS - RRSe ) * MUC ) ) ) ,RRSe ) ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7952755905511811, "obj2": 0.10179967517885896}, {"determining": "Max( ( ( Max( ( ( ( ( ARS / DDR ) / MDR ) * FirstVNF_Mem_Server ) - MRS ),( ( BR - RRS ) * AMS ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,MLU ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( MUR + ( DS + ( ( RMSe / RRSe ) / ( ( RRSe - MUM ) * MLU ) ) ) ) - Max( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,( RCSe * RCSe ) ) ) ),MUC ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.5943497563992232}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,( ACS / ARS ) ),Max( Min( Min( FirstVNF_CPU ,( ( ARS / FirstVNF_RAM ) / DDR ) ) ,FirstVNF_CPU ),DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( MUR + ( Max( RRSe,MUM ) + ( Min( MUM ,MUM ) / ( Max( MLU,MUM ) + ( Max( RRSe,MUR ) * ( RCSe * RRSe ) ) ) ) ) ) ) - Max( ( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) + Max( MUR,MUR ) ),CS ) )", "obj1": 0.8562992125984252, "obj2": 0.07245722853983541}, {"determining": "Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + MUR ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.36023622047244097, "obj2": 0.41087579324206813}, {"determining": "Min( ( ( AMS - Max( ARS,Min( FirstVNF_Mem ,ARS ) ) ) / ( ( ( FirstVNF_RAM / BR ) + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,BR )", "choosing": "( Min( MLU ,( ( ( Min( MUM ,MLU ) / ( ( ( MUC + RMSe ) - ( RRSe / CS ) ) / ( ( MUR - MUR ) + Max( DS,DS ) ) ) ) * Max( Max( ( ( MUC * MUR ) * ( RCSe + MLU ) ),Min( MUR ,( RRSe + MUC ) ) ),Max( DS,( Min( CS ,MUR ) + Max( CS,MUM ) ) ) ) ) / Max( DS,MLU ) ) ) - MUM )", "obj1": 0.8287401574803149, "obj2": 0.08660566889337082}, {"determining": "Min( Max( FirstVNF_RAM_Server,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( DS / ( RMSe * Max( CS,Min( ( MUR - ( RCSe * RCSe ) ) ,RCSe ) ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.41929133858267714, "obj2": 0.3615185643991935}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( ( MDR * Const ) ,FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ( FirstVNF_RAM_Server * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * CRS ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUM + DS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,( RRSe + Max( ( MUR * MLU ),( RCSe * MUC ) ) ) ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.4012450285572005}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * ( Const - ARS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( Const / AMS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( CS ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( DS - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + Max( ( RMSe / DS ),Min( ( MUC + Max( ( MUM - MUR ),CS ) ) ,( MUR * ( ( MUM / MUC ) * RRSe ) ) ) ) ) ) - Max( RMSe,CS ) )", "obj1": 0.5708661417322834, "obj2": 0.24958800038738088}, {"determining": "Max( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( ( PN - ( MDR - Min( Const ,AMS ) ) ) + MRS ) ),( FirstVNF_RAM_Server * Max( ( Min( FirstVNF_CPU ,CRS ) / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( ( ( ( MLU - DS ) + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.6221465100039393}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( Min( MDR ,MRS ) ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( ( PN / PN ),( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( RCSe * ( RCSe + DS ) ) ,Min( RRSe ,MUC ) ) + Min( ( ( MLU / DS ) + ( ( ( MUM * MUM ) / ( CS / RCSe ) ) + ( ( DS - RRSe ) * MUC ) ) ) ,RRSe ) ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7637795275590551, "obj2": 0.11879025857018376}, {"determining": "Min( Min( CRS ,CRS ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / ( Max( BR,( ARS - ( ( AMS + MRS ) - BR ) ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - ( MUR / CS ) ) / CS ),MUM ),Max( RCSe,MLU ) ) - ( ( ( RCSe + ( Min( MUR ,MUC ) + RMSe ) ) - ( ( ( ( ( RMSe - MUR ) / RRSe ) / RCSe ) * ( ( CS - MUC ) + ( RRSe * CS ) ) ) * ( Max( MUM,( Min( RRSe ,MUM ) / MUM ) ) - MLU ) ) ) * ( MLU - MUC ) ) )", "obj1": 0.6751968503937008, "obj2": 0.1885972678478225}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / Max( PN,( ( FirstVNF_CPU + AMS ) + MRS ) ) ) ,( Max( Max( RRS,Const ),( Min( Max( ( MDR / DDR ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( Min( CS ,Min( MUC ,MUR ) ) / Max( ( RMSe / Min( ( MUM + CS ) ,Max( MLU,Max( MUC,MLU ) ) ) ),MLU ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) - ( MUC * ( Max( MUM,MUC ) * RRSe ) ) )", "obj1": 0.687007874015748, "obj2": 0.18430077631251918}, {"determining": "Max( ( ( Max( ( ( ( ( ARS / MDR ) / MDR ) * FirstVNF_Mem_Server ) - MRS ),( ( FirstVNF_Mem + ( MRS + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) + ( ACS - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( ( MUM / MLU ) + ( ( Max( CS,RRSe ) * RCSe ) + ( MUM + MUM ) ) ) - Max( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ),MUC ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.573519259468276}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,( MDR - PN ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( ( CS + MUC ) ,( DS * RMSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) ,MUM ) ) ) / CS ) * Max( ( ( MUM * MUR ) + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.6181102362204725, "obj2": 0.23158803751913687}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) ) ) ,( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( ( ( CS - DS ) / RMSe ) - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.05254146178129292}, {"determining": "Min( Max( FirstVNF_RAM,( ( ( ( ( BR - FirstVNF_Mem ) / ( FirstVNF_Mem_Server * Const ) ) - MDR ) + DDR ) + ACS ) ) ,Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,Const ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( CS / RRSe ) + ( Max( MLU,DS ) + ( ( ( RRSe - DS ) * ( CS + MUC ) ) - DS ) ) ) * RRSe ) )", "obj1": 0.6161417322834646, "obj2": 0.24743261521586066}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( DS - RCSe ) + ( MUM * RCSe ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7362204724409449, "obj2": 0.13842906184868078}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,AMS ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( CS - Min( Max( MUR,MLU ) ,( MUC * DS ) ) ) / Min( ( Max( MUR,RMSe ) * ( RCSe - DS ) ) ,( MLU * RMSe ) ) ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.034598251836774216}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5696958371208577}, {"determining": "Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.37598425196850394, "obj2": 0.40199159668058443}, {"determining": "Max( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( ( PN - ( MDR - Min( Const ,AMS ) ) ) + MRS ) ),( FirstVNF_RAM_Server * Max( ( Max( ARS,MDR ) / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( RCSe / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.10433070866141732, "obj2": 0.6397046023088081}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) )", "choosing": "( Max( Max( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ),MUM ),( MUR + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.7598425196850394, "obj2": 0.137792931328714}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( Min( MDR ,Min( Const ,PN ) ) ,MDR ) * ( BR * ARS ) ) )", "choosing": "( Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RCSe / MUR ) ) ) / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7353130743445538}, {"determining": "( Max( BR,AMS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( ( Max( Min( MUC ,RRSe ),RRSe ) + RRSe ) * ( CS + MUC ) ) - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5015491776155918}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.45406048239108837}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.5491358883323108}, {"determining": "( Min( ( CRS + Const ) ,( ( AMS * ( FirstVNF_Mem_Server - Max( Const,( ARS - AMS ) ) ) ) - MRS ) ) / ( CRS + DDR ) )", "choosing": "Max( ( RMSe - MLU ),( ( MUM / CS ) - ( RRSe + ( MUC / Min( ( ( MUR + MUR ) * ( RCSe - DS ) ) ,( MLU * RMSe ) ) ) ) ) )", "obj1": 0.2677165354330709, "obj2": 0.4783744226062037}, {"determining": "( Min( Min( Const ,PN ) ,( ACS * FirstVNF_Mem ) ) / ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( MUM - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( MUC / Max( MUR,( ( MUM / ( RMSe / MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.4660222083301621}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( Const,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,AMS ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( CS - Min( Max( MUR,CS ) ,( MUC * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.043629923535583336}, {"determining": "Min( Max( ACS,ARS ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( ( ( ( CS / RRSe ) * Max( MUC,RCSe ) ) - ( CS - RMSe ) ),( Max( ( Min( MUM ,MLU ) - ( CS - RMSe ) ),MUM ) - ( RMSe * RMSe ) ) ) - ( RMSe * RMSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03226637450497108}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( FirstVNF_Mem + Min( ( CRS - RRS ) ,FirstVNF_RAM_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( MUM * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( Max( MUC,Min( RRSe ,( RCSe - MUM ) ) ) / ( Min( CS ,Max( ( DS / MUR ),( CS * RCSe ) ) ) / MUM ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5235841505210636}, {"determining": "Min( ( ( PN * FirstVNF_CPU ) + FirstVNF_Mem_Server ) ,Min( ( ( PN / FirstVNF_Mem_Server ) * MRS ) ,( Min( ( FirstVNF_CPU_Server * ( ( ( BR + ACS ) - ( FirstVNF_RAM / DDR ) ) / FirstVNF_RAM_Server ) ) ,MDR ) * ( ( FirstVNF_RAM - FirstVNF_CPU ) * ARS ) ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( Min( ( RCSe * Max( RMSe,RMSe ) ) ,DS ) + RCSe ) ) ) / CS ) * Max( ( Max( DS,( ( ( MUC + ( RMSe + CS ) ) - RMSe ) + ( RRSe + MUM ) ) ) / DS ),Max( ( RCSe + ( MUM * RRSe ) ),DS ) ) )", "obj1": 0.25, "obj2": 0.4929940246615065}, {"determining": "( ( Min( Min( DDR ,FirstVNF_Mem ) ,Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_Mem ) ) - FirstVNF_RAM ) / Max( ( Const - FirstVNF_CPU_Server ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + MLU ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( RRSe * RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.5122752668388372}, {"determining": "( ( AMS * ( ( CRS + Const ) - Min( ( ( ( ( BR - AMS ) / ( Const + FirstVNF_Mem ) ) + Const ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) ) ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_RAM / AMS ) ) )", "choosing": "Min( Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( MUR / ( ( MUR - CS ) + Min( MUR ,MUM ) ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) ) ,( MUC + MUM ) )", "obj1": 0.9744094488188977, "obj2": 0.006380600621306847}, {"determining": "( Min( ( CRS + Const ) ,( ( ( Const * MRS ) + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( CRS + DDR ) )", "choosing": "Max( ( ( MLU - DS ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( Max( Min( MUC ,RRSe ),Max( MUM,MUC ) ) + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.20866141732283464, "obj2": 0.5176655835593849}, {"determining": "Min( ( ( PN * FirstVNF_CPU ) + FirstVNF_Mem_Server ) ,Min( ( ( PN / FirstVNF_Mem_Server ) * MRS ) ,( Min( ( FirstVNF_CPU_Server * ( ( ( BR + ACS ) - ( FirstVNF_RAM / DDR ) ) / FirstVNF_RAM_Server ) ) ,MDR ) * ( ( FirstVNF_RAM - FirstVNF_CPU ) * ARS ) ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( Min( ( RCSe * Max( RMSe,RMSe ) ) ,DS ) + RCSe ) ) ) / CS ) * Max( ( Max( DS,( ( ( MUC + ( RMSe + CS ) ) - RMSe ) + ( RRSe + MUM ) ) ) / DS ),Max( ( RCSe + ( MUM * RRSe ) ),DS ) ) )", "obj1": 0.2618110236220472, "obj2": 0.48300437912567273}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( Min( ( PN + DDR ) ,( FirstVNF_CPU / BR ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( ( CS - MUR ) / CS ) - MUM ) )", "obj1": 0.9724409448818898, "obj2": 0.0180690635267194}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( ( ( PN - FirstVNF_RAM_Server ) * ( ( ARS * ( DDR + FirstVNF_Mem ) ) + ( MDR - FirstVNF_RAM_Server ) ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( Max( ( MUM - RCSe ),( RRSe / MUC ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( ( ( MLU / CS ) * MLU ) + DS ) - Max( MUR,( DS - RMSe ) ) ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.9862204724409449, "obj2": 0.003836226213948543}, {"determining": "( ( ( ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ACS ) * Max( Min( ARS ,BR ),FirstVNF_RAM_Server ) ) * ( ( Min( PN ,( MDR / FirstVNF_CPU_Server ) ) + PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( ( ( RRSe - CS ) + ( MLU + RRSe ) ) - Max( RCSe,( MLU + Min( ( CS - MUR ) ,MUM ) ) ) ) )", "obj1": 0.2578740157480315, "obj2": 0.49290041965156484}, {"determining": "Max( ( DDR - FirstVNF_Mem ),( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_Mem ) - RRS ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MUC * RRSe ),MUC ) ) + Max( ( ( DS / MUR ) / MUR ),Min( ( MUM / DS ) ,RMSe ) ) ) + CS ) ) * ( RRSe - DS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5367777739291147}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( ( Min( Max( ( ( Min( MUR ,RCSe ) / ( RMSe / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) + MLU ) - Max( RCSe,( MLU + Min( ( MUR - Min( MUM ,Max( MLU,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.46041683203690165}, {"determining": "Min( ( AMS * Min( ( ( FirstVNF_RAM * CRS ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,MRS ) ,( FirstVNF_Mem_Server + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( MLU * ( MUC - RRSe ) ) * ( CS + ( ( ( ( MUR + ( MLU + ( RMSe - MLU ) ) ) / MLU ) - MUC ) + RCSe ) ) )", "obj1": 0.8937007874015748, "obj2": 0.04669094805886115}, {"determining": "Min( Max( ACS,ARS ) ,( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( Min( MUM ,MLU ) - ( RMSe / Max( ( MUR - ( MUC * RCSe ) ),Min( Max( ( MUM + CS ),RMSe ) ,RCSe ) ) ) ),MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.020671908212743836}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.4570420396985107}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - ( ACS / FirstVNF_CPU_Server ) ) * MRS ) )", "choosing": "( Max( RRSe,MUR ) - ( ( DS / MUR ) * DS ) )", "obj1": 0.04330708661417323, "obj2": 0.741286157383387}, {"determining": "( ( Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( Max( Max( RRS,Const ),Max( FirstVNF_CPU_Server,DDR ) ) / FirstVNF_Mem_Server ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( RMSe - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( MUR,MUR ) )", "obj1": 0.9566929133858267, "obj2": 0.0258241575701415}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( ( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU_Server * RRS ) ,DDR ) * ( ACS / ARS ) ) ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( Max( ( MUM - RCSe ),( RRSe / MUC ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( ( DS / ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0017640592559588426}, {"determining": "( ( FirstVNF_CPU * Max( AMS,FirstVNF_Mem_Server ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ( MRS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( MUR - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( CS + CS ) + MUC ) ) ) ),( ( RMSe * ( RRSe + ( MUM - DS ) ) ) + RMSe ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / Min( RMSe ,( MUR / DS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.297244094488189, "obj2": 0.45578663965380145}, {"determining": "( ( Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( Min( ( Max( BR,MRS ) * RRS ) ,DDR ) * Min( ARS ,FirstVNF_CPU ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( RMSe - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * MUM ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.5371105951297989}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + ( Max( ( BR * FirstVNF_CPU ),MRS ) / ( PN - FirstVNF_CPU_Server ) ) ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( RCSe - ( MUR - CS ) ) * Max( CS,RRSe ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5470396844170838}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * ( AMS - Min( Const ,( DDR + PN ) ) ) ) / FirstVNF_CPU ) )", "choosing": "Max( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - ( MUC / ( ( MUM - MUR ) / MUM ) ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.02232323943850786}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( BR + FirstVNF_RAM ) / Min( Min( ( ARS - Min( DDR ,ARS ) ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( Max( ( RCSe * ( ( Max( RMSe,RCSe ) * MUM ) - ( RMSe * ( RMSe + MUM ) ) ) ),MUM ) / ( MLU + RCSe ) ) / CS ) * Max( Max( ( Min( CS ,( ( ( CS / RMSe ) + MUC ) - ( Max( MUC,DS ) + MUC ) ) ) - CS ),( ( MUM - MUR ) / RRSe ) ),Max( Max( ( ( CS - Min( Max( MUR,MLU ) ,( MUC * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.044896950083750276}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5427253618513851}, {"determining": "( ( ( Const - MDR ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( ( RRSe * MUC ) - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * RCSe ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.5453067175455301}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.5465326614282734}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Const + FirstVNF_CPU ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( Max( ( RRSe * RMSe ),( RCSe * MUC ) ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.19291338582677164, "obj2": 0.5427253618513851}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server * ( BR + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( PN - RRS ) ) ,( DDR - FirstVNF_RAM ) )", "choosing": "( Max( ( ( ( CS / RRSe ) * Max( MUC,RCSe ) ) - ( CS - RMSe ) ),( ( DS * DS ) - ( RMSe * RMSe ) ) ) - ( RMSe * RMSe ) )", "obj1": 0.9547244094488189, "obj2": 0.03226637450497108}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,FirstVNF_RAM_Server ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( FirstVNF_RAM_Server * ARS ) ),( ( PN * PN ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( ( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( RCSe * MUC ) * ( DS - RRSe ) ) ),MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * ( AMS - Min( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ,( DDR + PN ) ) ) ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Max( ( RRSe / ( MUR / RCSe ) ),( ( MUM - MUM ) - ( MUC / ( ( MUM - MUR ) / MUM ) ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.02232323943850786}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,RRS ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( RRS * Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + ACS ) ) ) ),( ( FirstVNF_Mem / RRS ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( RRSe * RCSe ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( ( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( ( MLU * ( RRSe + RRSe ) ) + RRSe ) * RRSe ) ),MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( Max( RRS,Const ) * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) ,( Min( CS ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) ,( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,( ( DDR * FirstVNF_RAM ) * ACS ) )", "choosing": "( Max( MUC,MUM ) - ( ( ( ( RRSe / ( RMSe / RRSe ) ) - ( RMSe + ( RMSe * DS ) ) ) / DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( BR + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( PN - RRS ) ) - ( ( FirstVNF_Mem_Server + DDR ) + MDR ) )", "choosing": "Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,( ( CS * Max( ( ( MUR / DS ) * MLU ),DS ) ) - ( Max( MUR,MUC ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( Const + ( FirstVNF_CPU_Server / ACS ) ),MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - Max( RMSe,Min( Max( Max( RRSe,MUR ),CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM / ( RRS * DDR ) ) * FirstVNF_RAM ) - Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / DS ) + MUM ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( MRS,Max( ( ARS / CRS ),MDR ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( ( CS / RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( ARS - FirstVNF_CPU_Server ) / Const ) )", "choosing": "Max( ( MUR + CS ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS + FirstVNF_Mem ) + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + Min( RCSe ,RCSe ) ) * Max( DS,( ( RRSe - MUC ) / ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ,FirstVNF_RAM ) - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( Max( MUR,Max( ( RCSe * ( Min( RCSe ,( RRSe - MLU ) ) / RRSe ) ),( MUM - MUR ) ) ) - ( ( MUC - RMSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( ( ARS * CRS ) - FirstVNF_CPU_Server ) ) - Max( PN,RRS ) ) - Max( PN,( CRS - Const ) ) )", "choosing": "Max( ( MLU / ( RRSe * ( DS * MLU ) ) ),( ( RMSe + Min( RRSe ,( Max( ( RRSe * MUM ),( DS - ( MUC / MLU ) ) ) / DS ) ) ) / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Max( CRS,PN ) + ACS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( MUM - RMSe ) ),Max( ( Max( RRSe,( ( Max( ( RMSe - RCSe ),CS ) - Max( RCSe,( RCSe + RCSe ) ) ) * MUR ) ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( DS ,( Max( DS,MLU ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Const + PN ) ) + ( Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe + ( RMSe + ( RCSe / ( MUM * MLU ) ) ) ) * ( RCSe - RRSe ) ) * ( Max( ( MLU + MUC ),( RCSe - MLU ) ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( Const * DDR ) ),Min( ( ( ( FirstVNF_CPU + ARS ) + Const ) - ( ( ( MRS - PN ) - ( RRS / FirstVNF_RAM ) ) * Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ,( DDR - FirstVNF_RAM ) ) ) + ( FirstVNF_RAM / AMS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( Max( MLU,MUM ) + CS ) / ( CS / MLU ) ) ) - Min( MUM ,RMSe ) ) ,( ( MUC + MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) ) ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_RAM / AMS ) ) )", "choosing": "Min( ( RRSe - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / PN ) ),MDR ) + ( FirstVNF_RAM / AMS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),Max( RMSe,MLU ) ) ) + ( ( Max( MLU,MUM ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( BR / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - MUR ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( Min( ( ( PN * Min( ACS ,( FirstVNF_RAM_Server - ARS ) ) ) * Max( FirstVNF_CPU_Server,PN ) ) ,FirstVNF_RAM_Server ) / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),Min( DS ,RMSe ) ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) ) * CRS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( Min( Max( Min( RMSe ,( MLU / MLU ) ),( MLU * MUR ) ) ,RMSe ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUM ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * FirstVNF_Mem ) * ( ( CRS + Const ) - ( Const + FirstVNF_Mem_Server ) ) ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_RAM / AMS ) ) )", "choosing": "Min( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) ) - BR ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( ( ( MLU / ( MLU + RCSe ) ) / CS ) ,RRSe ) ) ) + CS ) * ( ( ( MUR - RRSe ) / MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - BR ) - ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + ( Min( ( RCSe / ( ( MUR * MUC ) - RCSe ) ) ,RMSe ) + Min( MUR ,MUR ) ) ) * ( ( ( MUR - RRSe ) / MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( BR * FirstVNF_RAM_Server ),Max( PN,RRS ) ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,RRSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7455186487087001}, {"determining": "Max( ( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_RAM_Server * ( AMS - Min( Const ,( DDR + PN ) ) ) ) / FirstVNF_CPU ) ),Min( ( ( PN * Min( ACS ,( FirstVNF_RAM_Server - ARS ) ) ) * Max( FirstVNF_CPU_Server,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * ( ( MUM - MUM ) - ( MUC / ( ( MUM - MUR ) / MUM ) ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.2569966246962253}, {"determining": "Min( Max( FirstVNF_RAM_Server,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,Min( ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ,( Const + DDR ) ) )", "choosing": "( ( ( DS / ( RMSe * Max( CS,Min( ( MUR - ( DS * RCSe ) ) ,RCSe ) ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.43503937007874016, "obj2": 0.3575798237580932}, {"determining": "Max( Min( Const ,( Min( MDR ,( Min( CRS ,Const ) / ( MDR + Min( ( Const - MDR ) ,FirstVNF_RAM ) ) ) ) - Min( FirstVNF_Mem ,ARS ) ) ),Min( ( ( PN * Min( ACS ,( FirstVNF_RAM_Server - ARS ) ) ) * Max( FirstVNF_CPU_Server,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / ( ( RMSe * CS ) / Max( MUM,MUM ) ) ) + Max( ( RCSe - ( RCSe + RRSe ) ),Max( MUC,MUM ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.2737033343714511}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + BR ) ) ) / Max( DDR,AMS ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( ( MUM - RRSe ) - ( MUR - CS ) ) * Max( CS,RRSe ) ) ),( MUR / Min( DS ,RCSe ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7046718261540821}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * ( Const - ARS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( Const / AMS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( CS ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( DS - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + Max( ( RMSe / DS ),Min( ( MUC + Max( ( MUM - MUR ),CS ) ) ,( MUR * ( ( MUM / MUC ) * RRSe ) ) ) ) ) ) - Max( RMSe,CS ) )", "obj1": 0.5708661417322834, "obj2": 0.24958800038738088}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( CRS + ACS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( ( RCSe * MLU ) - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.639763779527559, "obj2": 0.2106915731354793}, {"determining": "( Min( ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Min( ( BR / RRS ) ,( FirstVNF_CPU * ( Min( Const ,DDR ) + PN ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( ( RCSe * ( ( RMSe * RCSe ) - ( Min( RMSe ,CS ) / ( DS - Max( RMSe,MUC ) ) ) ) ) ,( Min( RRSe ,RMSe ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM / ( CS + MLU ) ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6660011202090287}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * ( ( RRS * DDR ) + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,AMS ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( CS - Min( Max( MUR,MLU ) ,( MUC * DS ) ) ) / Min( ( Max( MUR,RMSe ) * ( RCSe - DS ) ) ,( ( RCSe * MLU ) / DS ) ) ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.16330498620548936}, {"determining": "Min( ( ( ( ACS + FirstVNF_Mem ) + Min( ( MDR * Const ) ,FirstVNF_CPU ) ) * ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) / ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) ,Max( ( ( ( FirstVNF_RAM_Server * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * CRS ),Max( ( PN / RRS ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUM + DS ),( MUR / RRSe ) ) * ( Min( MLU ,MLU ) / Min( RCSe ,RMSe ) ) ) * Min( ( Max( DS,MUM ) * Max( MUC,( RRSe + Max( ( MUR * MLU ),( RCSe * MUC ) ) ) ) ) ,Max( ( DS + RCSe ),( RCSe - RMSe ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.4012450285572005}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( Min( MDR ,MRS ) ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( ( PN / PN ),( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( RCSe * ( RCSe + DS ) ) ,Min( RRSe ,MUC ) ) + Min( ( ( MLU / DS ) + ( ( ( MUM * MUM ) / ( CS / RCSe ) ) + ( ( DS - RRSe ) * MUC ) ) ) ,RRSe ) ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7637795275590551, "obj2": 0.11879025857018376}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,( ACS / ARS ) ),Max( Min( Min( FirstVNF_CPU ,( ( ARS / FirstVNF_RAM ) / DDR ) ) ,FirstVNF_CPU ),DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( MUR + ( Max( RRSe,MUM ) + ( Min( MUM ,MUM ) / ( Max( MLU,MUM ) + ( Max( RRSe,MUR ) * ( RCSe * RRSe ) ) ) ) ) ) ) - Max( ( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) + Max( MUR,MUR ) ),CS ) )", "obj1": 0.8562992125984252, "obj2": 0.07245722853983541}, {"determining": "Max( Min( Const ,( Min( MDR ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Min( FirstVNF_Mem ,ARS ) ) ),Min( ( ( PN * Min( ACS ,( FirstVNF_RAM_Server - ARS ) ) ) * Max( FirstVNF_CPU_Server,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Max( MUC,MUM ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.26793784011805727}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( Min( MDR ,MRS ) ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( ( PN / PN ),( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( RCSe * ( RCSe + DS ) ) ,Min( RRSe ,MUC ) ) + Min( ( ( MLU / DS ) + ( ( ( MUM * MUM ) / ( CS / RCSe ) ) + ( ( DS - RRSe ) * MUC ) ) ) ,RRSe ) ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7952755905511811, "obj2": 0.10179967517885896}, {"determining": "Min( Max( FirstVNF_RAM_Server,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( DS / ( RMSe * Max( CS,Min( ( MUR - ( RCSe * RCSe ) ) ,RCSe ) ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.41929133858267714, "obj2": 0.3615185643991935}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / Max( PN,( ( FirstVNF_CPU + AMS ) + MRS ) ) ) ,( Max( Max( RRS,Const ),( Min( Max( ( MDR / DDR ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( Min( CS ,Min( MUC ,MUR ) ) / Max( ( RMSe / Min( ( MUM + CS ) ,Max( MLU,Max( MUC,MLU ) ) ) ),MLU ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) - ( MUC * ( Max( MUM,MUC ) * RRSe ) ) )", "obj1": 0.687007874015748, "obj2": 0.18430077631251918}, {"determining": "Max( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( ( PN - ( MDR - Min( Const ,AMS ) ) ) + MRS ) ),( FirstVNF_RAM_Server * Max( ( Max( ( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( FirstVNF_CPU_Server - PN ) ),MDR ) / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( MUR + Min( RCSe ,RCSe ) ) ),( RCSe / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.6130839544891213}, {"determining": "Min( Min( CRS ,CRS ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / ( Max( BR,( ARS - ( ( AMS + MRS ) - BR ) ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - ( MUR / CS ) ) / CS ),MUM ),Max( RCSe,MLU ) ) - ( ( ( RCSe + ( Min( MUR ,MUC ) + RMSe ) ) - ( ( ( ( ( RMSe - MUR ) / RRSe ) / RCSe ) * ( ( CS - MUC ) + ( RRSe * CS ) ) ) * ( Max( MUM,( Min( RRSe ,MUM ) / MUM ) ) - MLU ) ) ) * ( MLU - MUC ) ) )", "obj1": 0.6751968503937008, "obj2": 0.1885972678478225}, {"determining": "Min( ( BR + ( ( ( Max( FirstVNF_Mem,MRS ) + MDR ) - FirstVNF_RAM ) / ACS ) ) ,Min( ( FirstVNF_RAM_Server - ( PN + DDR ) ) ,( Min( Min( MDR ,FirstVNF_RAM ) ,MDR ) * ( BR * ARS ) ) ) )", "choosing": "( ( ( DS / Min( Min( ( ( Min( RMSe ,RCSe ) + Min( MUM ,MUM ) ) * ( MUR * RCSe ) ) ,( ( Max( RCSe,MUR ) + MLU ) / CS ) ) ,( Min( ( RRSe * DS ) ,DS ) + RCSe ) ) ) / CS ) * Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RRSe + MUM ) ) ) / DS ),Max( ( RCSe + ( MUM * RRSe ) ),DS ) ) )", "obj1": 0.3188976377952756, "obj2": 0.43731144482577416}, {"determining": "Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.34448818897637795, "obj2": 0.42402935871221314}, {"determining": "Max( ( ( Max( ( ( ( ( ARS / DDR ) / MDR ) * FirstVNF_Mem_Server ) - MRS ),( ( BR - RRS ) * AMS ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,MLU ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( MUR + ( DS + ( ( RMSe / RRSe ) / ( ( RRSe - MUM ) * MLU ) ) ) ) - Max( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,( RCSe * RCSe ) ) ) ),MUC ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.5943497563992232}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) ) ) ,( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( ( ( CS - DS ) / RMSe ) - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.05254146178129292}, {"determining": "Min( Max( FirstVNF_RAM_Server,( ( Const + DDR ) * FirstVNF_CPU_Server ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( DS / ( RMSe * Max( ( MLU / Min( RMSe ,( MUR / DS ) ) ),Min( ( MUR - ( RCSe * RCSe ) ) ,RCSe ) ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.6122047244094488, "obj2": 0.2431181584055053}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,( MDR - PN ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( ( CS + MUC ) ,( DS * RMSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) ,MUM ) ) ) / CS ) * Max( ( ( MUM * MUR ) + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.6181102362204725, "obj2": 0.23158803751913687}, {"determining": "Max( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( ( PN - ( MDR - Min( Const ,AMS ) ) ) + MRS ) ),( FirstVNF_RAM_Server * Max( ( Max( ARS,MDR ) / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( RCSe / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.10433070866141732, "obj2": 0.6397046023088081}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Min( ( BR / RRS ) ,( FirstVNF_CPU * ( Min( Const ,DDR ) + PN ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( ( RCSe * ( ( RMSe * RCSe ) - ( Min( RMSe ,CS ) / ( DS - Max( RMSe,MUC ) ) ) ) ) ,( Min( RRSe ,MUC ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM / ( CS + MLU ) ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6549683904529028}, {"determining": "Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + MUR ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.36023622047244097, "obj2": 0.41087579324206813}, {"determining": "Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.37598425196850394, "obj2": 0.40199159668058443}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( DS - RCSe ) + ( MUM * RCSe ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7362204724409449, "obj2": 0.13842906184868078}, {"determining": "( Max( BR,AMS ) / ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( ( Max( Min( MUC ,MUC ),RRSe ) + RRSe ) * ( CS + MUC ) ) - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.08964376833998591}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( DDR * FirstVNF_RAM ) * ACS ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),MUM ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7421259842519685, "obj2": 0.13390784542927883}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( Min( MDR ,Min( Const ,PN ) ) ,MDR ) * ( BR * ARS ) ) )", "choosing": "( Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RCSe / MUR ) ) ) / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7353130743445538}, {"determining": "Max( ( ( Max( ( ( ( ( ARS / MDR ) / MDR ) * FirstVNF_Mem_Server ) - MRS ),DDR ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( ( Max( MUM,MUC ) * RRSe ) ,CS ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( ( MUM / MLU ) + Max( MLU,CS ) ) - Max( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ),MUC ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.5856056952583579}, {"determining": "( ( AMS * ( ( CRS + Const ) - Min( ( ( ( ( BR - AMS ) / ( Const + FirstVNF_Mem ) ) + Const ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) ) ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_RAM / AMS ) ) )", "choosing": "Min( Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( MUR / ( ( MUR - CS ) + Min( MUR ,MUM ) ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) ) ,( MUC + MUM ) )", "obj1": 0.9330708661417323, "obj2": 0.021105830595837385}, {"determining": "Max( ( ( Max( ( ( ( ( ARS / MDR ) / MDR ) * FirstVNF_Mem_Server ) - MRS ),( ( FirstVNF_Mem + ( MRS + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) + ( ACS - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( ( MUM / MLU ) + ( ( Max( CS,RRSe ) * RCSe ) + ( MUM + MUM ) ) ) - Max( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ),MUC ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.573519259468276}, {"determining": "Min( ( ( AMS - Max( ARS,Min( FirstVNF_Mem ,ARS ) ) ) / ( ( ( FirstVNF_RAM / BR ) + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,BR )", "choosing": "( Min( MLU ,( ( ( Min( MUM ,MLU ) / ( ( ( MUC + RMSe ) - ( RRSe / CS ) ) / ( ( MUR - MUR ) + Max( DS,DS ) ) ) ) * Max( Max( ( ( MUC * MUR ) * ( RCSe + MLU ) ),Min( MUR ,( RRSe + MUC ) ) ),Max( DS,( Min( CS ,MUR ) + Max( CS,MUM ) ) ) ) ) / Max( DS,MLU ) ) ) - MUM )", "obj1": 0.8326771653543307, "obj2": 0.08064671059261976}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.45406048239108837}, {"determining": "Min( Max( ACS,ARS ) ,( FirstVNF_CPU_Server * RRS ) )", "choosing": "( Max( ( Min( MUM ,MLU ) - ( RMSe / Max( ( MUR - ( MUC * RCSe ) ),Min( Max( ( MUM + CS ),RMSe ) ,RCSe ) ) ) ),MUM ) - ( RMSe * RMSe ) )", "obj1": 0.9645669291338582, "obj2": 0.020671908212743836}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5696958371208577}, {"determining": "Min( FirstVNF_RAM_Server ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / Min( RMSe ,RCSe ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.265748031496063, "obj2": 0.4742392650716779}, {"determining": "( Min( Min( Const ,PN ) ,( ACS * FirstVNF_Mem ) ) / ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( MUM - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( MUC / Max( MUR,( ( MUM / ( RMSe / MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.4660222083301621}, {"determining": "Min( ( AMS * Min( ( ( FirstVNF_RAM * CRS ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,MRS ) ,( FirstVNF_Mem_Server + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( MLU * ( MUC - RRSe ) ) * ( CS + ( ( ( ( MUR + ( MLU + ( RMSe - MLU ) ) ) / MLU ) - MUC ) + RCSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.03549691792115803}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( ( ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) + MUM ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5578204899206889}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( FirstVNF_Mem + Min( ( CRS - RRS ) ,FirstVNF_RAM_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( MUM * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( Max( MUC,Min( RRSe ,( RCSe - MUM ) ) ) / ( Min( CS ,Max( ( DS / MUR ),( CS * RCSe ) ) ) / MUM ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5235841505210636}, {"determining": "Min( ( ( AMS - Max( ARS,Min( FirstVNF_Mem ,ARS ) ) ) / ( ( ( FirstVNF_RAM / BR ) + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,BR )", "choosing": "( Min( MLU ,( ( ( Min( MUM ,MLU ) / ( ( ( MUC + RMSe ) - ( RRSe / CS ) ) / ( ( MUR - MUR ) + Max( DS,DS ) ) ) ) * Max( Max( ( ( MUC * MUR ) * ( RCSe + MLU ) ),Min( MUR ,( RRSe + MUC ) ) ),Max( DS,( Min( CS ,MUR ) + Max( CS,MUM ) ) ) ) ) / Max( DS,MLU ) ) ) - MUM )", "obj1": 0.8287401574803149, "obj2": 0.08660566889337082}, {"determining": "( ( AMS * ( ( CRS + Const ) - Min( ( ( ( ( BR - AMS ) / ( Const + FirstVNF_Mem ) ) + Const ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) ) ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_RAM / AMS ) ) )", "choosing": "Min( Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( MUR / ( ( MUR - CS ) + Min( MUR ,MUM ) ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) ) ,( MUC + MUM ) )", "obj1": 0.9744094488188977, "obj2": 0.006380600621306847}, {"determining": "Min( ( ( PN * FirstVNF_CPU ) + FirstVNF_Mem_Server ) ,Min( ( ( PN / FirstVNF_Mem_Server ) * MRS ) ,( Min( ( FirstVNF_CPU_Server * ( ( ( BR + ACS ) - ( FirstVNF_RAM / DDR ) ) / FirstVNF_RAM_Server ) ) ,MDR ) * ( ( FirstVNF_RAM - FirstVNF_CPU ) * ARS ) ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( Min( ( RCSe * Max( RMSe,RMSe ) ) ,DS ) + RCSe ) ) ) / CS ) * Max( ( Max( DS,( ( ( MUC + ( RMSe + CS ) ) - RMSe ) + ( RRSe + MUM ) ) ) / DS ),Max( ( RCSe + ( MUM * RRSe ) ),DS ) ) )", "obj1": 0.2618110236220472, "obj2": 0.48300437912567273}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( Const,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,AMS ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( CS - Min( Max( MUR,CS ) ,( MUC * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.043629923535583336}, {"determining": "( Min( ( CRS + Const ) ,( ( ( Const * MRS ) + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( CRS + DDR ) )", "choosing": "Max( ( ( MLU - DS ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( Max( Min( MUC ,RRSe ),Max( MUM,MUC ) ) + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.20866141732283464, "obj2": 0.5176655835593849}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( Min( ( PN + DDR ) ,( FirstVNF_CPU / BR ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( ( CS - MUR ) / CS ) - MUM ) )", "obj1": 0.9724409448818898, "obj2": 0.0180690635267194}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.5491358883323108}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,FirstVNF_Mem ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) / Min( ( Max( MUR,RMSe ) * ( RCSe - DS ) ) ,( MLU * RMSe ) ) ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.03320383565556321}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,RMSe ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.4954764362774032}, {"determining": "( ( ( ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ACS ) * Max( Min( ARS ,BR ),FirstVNF_RAM_Server ) ) * ( ( Min( PN ,( MDR / FirstVNF_CPU_Server ) ) + PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( ( ( RRSe - CS ) + ( MLU + RRSe ) ) - Max( RCSe,( MLU + Min( ( CS - MUR ) ,MUM ) ) ) ) )", "obj1": 0.2578740157480315, "obj2": 0.49290041965156484}, {"determining": "Max( ( DDR - FirstVNF_Mem ),( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_Mem ) - RRS ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MUC * RRSe ),MUC ) ) + Max( ( ( DS / MUR ) / MUR ),Min( ( MUM / DS ) ,RMSe ) ) ) + CS ) ) * ( RRSe - DS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5367777739291147}, {"determining": "Max( ( ( Max( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ),( ( FirstVNF_Mem + ( MRS + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) + ( ACS - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( DS - Max( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ),MUC ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.541991151799818}, {"determining": "( ( Min( Min( DDR ,FirstVNF_Mem ) ,Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_Mem ) ) - FirstVNF_RAM ) / Max( ( Const - FirstVNF_CPU_Server ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + MLU ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( RRSe * RMSe ) )", "obj1": 0.2283464566929134, "obj2": 0.5122752668388372}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( ( Min( Max( ( ( Min( MUR ,RCSe ) / ( RMSe / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) + MLU ) - Max( RCSe,( MLU + Min( ( MUR - Min( MUM ,Max( MLU,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.46041683203690165}, {"determining": "Max( Min( Const ,( Min( MDR ,( FirstVNF_CPU_Server / ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Min( FirstVNF_Mem ,ARS ) ) ),Min( ( ( PN * Min( ACS ,( FirstVNF_RAM_Server - ARS ) ) ) * Max( FirstVNF_CPU_Server,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - RCSe ),Max( MUC,MUM ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.2727134882667121}, {"determining": "( Max( BR,AMS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( ( Max( Min( MUC ,RRSe ),RRSe ) + RRSe ) * ( CS + MUC ) ) - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5015491776155918}, {"determining": "Min( ( AMS * Min( ( ( FirstVNF_RAM * CRS ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,MRS ) ,( FirstVNF_Mem_Server + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( MLU * ( MUC - RRSe ) ) * ( CS + ( ( ( ( MUR + ( MLU + ( RMSe - MLU ) ) ) / MLU ) - MUC ) + RCSe ) ) )", "obj1": 0.8937007874015748, "obj2": 0.04669094805886115}, {"determining": "Min( ( ( PN * FirstVNF_CPU ) + FirstVNF_Mem_Server ) ,Min( ( ( PN / FirstVNF_Mem_Server ) * MRS ) ,( Min( ( FirstVNF_CPU_Server * ( ( ( BR + ACS ) - ( FirstVNF_RAM / DDR ) ) / FirstVNF_RAM_Server ) ) ,MDR ) * ( ( FirstVNF_RAM - FirstVNF_CPU ) * ARS ) ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( Min( ( RCSe * Max( RMSe,RMSe ) ) ,DS ) + RCSe ) ) ) / CS ) * Max( ( Max( DS,( ( ( MUC + ( RMSe + CS ) ) - RMSe ) + ( RRSe + MUM ) ) ) / DS ),Max( ( RCSe + ( MUM * RRSe ) ),DS ) ) )", "obj1": 0.25, "obj2": 0.4929940246615065}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.4570420396985107}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( ( ( PN - FirstVNF_RAM_Server ) * ( ( ARS * ( DDR + FirstVNF_Mem ) ) + ( MDR - FirstVNF_RAM_Server ) ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( Max( ( MUM - RCSe ),( RRSe / MUC ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( ( ( MLU / CS ) * MLU ) + DS ) - Max( MUR,( DS - RMSe ) ) ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.9862204724409449, "obj2": 0.003836226213948543}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + ( Max( ( BR * FirstVNF_CPU ),MRS ) / ( PN - FirstVNF_CPU_Server ) ) ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( RCSe - ( MUR - CS ) ) * Max( CS,RRSe ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5470396844170838}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - ( ACS / FirstVNF_CPU_Server ) ) * MRS ) )", "choosing": "( Max( RRSe,MUR ) - ( ( DS / MUR ) * DS ) )", "obj1": 0.04330708661417323, "obj2": 0.741286157383387}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,AMS ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( CS - Min( Max( MUR,MLU ) ,( MUC * DS ) ) ) / Min( ( Max( MUR,RMSe ) * ( RCSe - DS ) ) ,( MLU * RMSe ) ) ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.034598251836774216}, {"determining": "( ( Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( Min( ( Max( BR,MRS ) * RRS ) ,DDR ) * Min( ARS ,FirstVNF_CPU ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( RMSe - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * MUM ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.5371105951297989}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / Min( RMSe ,( MUR / DS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.297244094488189, "obj2": 0.45578663965380145}, {"determining": "( ( Max( ( Const + ( FirstVNF_CPU_Server / ACS ) ),MDR ) + MDR ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( ( Max( Min( MUC ,RRSe ),RRSe ) + RRSe ) * ( CS + MUC ) ) - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( RRSe + MUM ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5064465666465144}, {"determining": "( ( FirstVNF_CPU * Max( AMS,FirstVNF_Mem_Server ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ( MRS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( MUR - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( CS + CS ) + MUC ) ) ) ),( ( RMSe * ( RRSe + ( MUM - DS ) ) ) + RMSe ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( ( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU_Server * RRS ) ,DDR ) * ( ACS / ARS ) ) ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( Max( ( MUM - RCSe ),( RRSe / MUC ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( ( DS / ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0017640592559588426}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( ( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( ( ( Max( MDR,FirstVNF_RAM_Server ) * FirstVNF_CPU ) + FirstVNF_Mem_Server ) ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( Max( ( MUM - RCSe ),( RRSe / MUC ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( ( MLU - RMSe ) + MUM ) ) )", "obj1": 0.9881889763779528, "obj2": 0.0033173540005977447}, {"determining": "( Min( ( Max( FirstVNF_CPU,Max( ACS,( MDR - Const ) ) ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + ( ( Max( RCSe,RRSe ) * RCSe ) + ( MUM + MUM ) ) ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.234251968503937, "obj2": 0.5051209666944948}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( BR + FirstVNF_RAM ) / Min( Min( ( ARS - Min( DDR ,ARS ) ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( Max( ( RCSe * ( ( Max( RMSe,RCSe ) * MUM ) - ( RMSe * ( RMSe + MUM ) ) ) ),MUM ) / ( MLU + RCSe ) ) / CS ) * Max( Max( ( Min( CS ,( ( ( CS / RMSe ) + MUC ) - ( Max( MUC,DS ) + MUC ) ) ) - CS ),( ( MUM - MUR ) / RRSe ) ),Max( Max( ( ( CS - Min( Max( MUR,MLU ) ,( MUC * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.044896950083750276}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,FirstVNF_RAM_Server ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - Min( FirstVNF_CPU ,CRS ) ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( FirstVNF_RAM_Server * ARS ) ),( ( PN * PN ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( MLU - DS ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( ( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( RCSe * MUC ) * ( DS - RRSe ) ) ),MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0011650247019417577}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( ( ( PN - FirstVNF_RAM_Server ) * ( ( ACS * FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( Max( ( MUM - RCSe ),( RRSe / MUC ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( ( MUR + MUC ) + MUM ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,FirstVNF_RAM_Server ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( FirstVNF_RAM_Server * ARS ) ),( ( PN * PN ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( ( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( RCSe * MUC ) * ( DS - RRSe ) ) ),MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( BR * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( Max( Min( RCSe ,MLU ),( MLU - DS ) ),CS ) ) ) ) ,( Min( CS ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( Max( RRS,Const ) * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) ,( Min( CS ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) ,( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,( ( DDR * FirstVNF_RAM ) * ACS ) )", "choosing": "( Max( MUC,MUM ) - ( ( ( ( RRSe / ( RMSe / RRSe ) ) - ( RMSe + ( RMSe * DS ) ) ) / DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( BR + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( PN - RRS ) ) - ( ( FirstVNF_Mem_Server + DDR ) + MDR ) )", "choosing": "Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,( ( CS * Max( ( ( MUR / DS ) * MLU ),DS ) ) - ( Max( MUR,MUC ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( Const + ( FirstVNF_CPU_Server / ACS ) ),MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - Max( RMSe,Min( Max( Max( RRSe,MUR ),CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM / ( RRS * DDR ) ) * FirstVNF_RAM ) - Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "( ( ( ( RCSe * MLU ) / DS ) + MUM ) * MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Max( MRS,Max( ( ARS / CRS ),MDR ) ) ) * ( DDR + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - RCSe ),( ( CS / RCSe ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,CRS ) - ( ( ARS - FirstVNF_CPU_Server ) / Const ) )", "choosing": "Max( ( MUR + CS ),( MLU - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS + FirstVNF_Mem ) + Const ) - ( Const + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe / RMSe ) / ( MUC - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR + Min( RCSe ,RCSe ) ) * Max( DS,( ( RRSe - MUC ) / ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) ,FirstVNF_RAM ) - ACS ) ,( DDR + PN ) )", "choosing": "( ( MUR - CS ) / ( Max( MUR,Max( ( RCSe * ( Min( RCSe ,( RRSe - MLU ) ) / RRSe ) ),( MUM - MUR ) ) ) - ( ( MUC - RMSe ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU ) * ( ( BR + PN ) * ( Const / ( BR - DDR ) ) ) )", "choosing": "( Min( CS ,( ( RRSe + Max( ( MUC * MUM ),RCSe ) ) / MUR ) ) * Min( DS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( ( ARS * CRS ) - FirstVNF_CPU_Server ) ) - Max( PN,RRS ) ) - Max( PN,( CRS - Const ) ) )", "choosing": "Max( ( MLU / ( RRSe * ( DS * MLU ) ) ),( ( RMSe + Min( RRSe ,( Max( ( RRSe * MUM ),( DS - ( MUC / MLU ) ) ) / DS ) ) ) / Max( RRSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_Mem / MRS ) ) )", "choosing": "Min( ( ( ( MUR - Max( ( MLU * MUR ),DS ) ) + ( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + CS ) / ( CS / MLU ) ) ) - ( MLU + RCSe ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Max( CRS,PN ) + ACS ) ) - ( PN * DDR ) )", "choosing": "Max( ( Min( ( MUC + MLU ) ,( CS + RCSe ) ) * ( MUM - RMSe ) ),Max( ( Max( RRSe,( ( Max( ( RMSe - RCSe ),CS ) - Max( RCSe,( RCSe + RCSe ) ) ) * MUR ) ) / ( RMSe - CS ) ),( ( MUM + MUM ) - Min( DS ,( Max( DS,MLU ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - AMS ) - ( AMS / FirstVNF_CPU_Server ) ) * AMS ) + ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) / FirstVNF_CPU ) )", "choosing": "Max( ( ( RRSe - MUM ) * RMSe ),Min( MUC ,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( AMS - Max( ARS,ARS ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( ( Max( RMSe,RCSe ) / CS ) ,RRSe ) ) ) + CS ) * ( ( ( MUR - RRSe ) / MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) ) - BR ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( ( ( MLU / ( MLU + RCSe ) ) / CS ) ,RRSe ) ) ) + CS ) * ( ( ( MUR - RRSe ) / MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,( ( FirstVNF_RAM * Max( FirstVNF_CPU,Max( ( BR * FirstVNF_RAM_Server ),Max( PN,RRS ) ) ) ) - CRS ) ),( ( ACS / ARS ) * FirstVNF_Mem ) )", "choosing": "( Max( ( MUR / DS ),Min( RRSe ,( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) - Min( CS ,MLU ) ) ) ) - Min( ( MUR * RMSe ) ,RRSe ) )", "obj1": 0.04133858267716536, "obj2": 0.7455186487087001}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * ( Const - ARS ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( Const / AMS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( CS ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( DS - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + Max( ( RMSe / DS ),Min( ( MUC + Max( ( MUM - MUR ),CS ) ) ,( MUR * ( ( MUM / MUC ) * RRSe ) ) ) ) ) ) - Max( RMSe,CS ) )", "obj1": 0.5708661417322834, "obj2": 0.24958800038738088}, {"determining": "Max( ( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) ),Min( ( ( PN * Min( ACS ,( FirstVNF_RAM_Server - ARS ) ) ) * Max( FirstVNF_CPU_Server,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * ( ( MUM - MUM ) - ( MUC / ( ( MUM - MUR ) / MUM ) ) ) ) ) - ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) ) )", "obj1": 0.4763779527559055, "obj2": 0.25668457396917616}, {"determining": "Min( Max( FirstVNF_RAM_Server,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,Min( ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ,( Const + DDR ) ) )", "choosing": "( ( ( DS / ( RMSe * Max( CS,Min( ( MUR - ( DS * RCSe ) ) ,RCSe ) ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.43503937007874016, "obj2": 0.3575798237580932}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + BR ) ) ) / Max( DDR,AMS ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( ( MUM - RRSe ) - ( MUR - CS ) ) * Max( CS,RRSe ) ) ),( MUR / Min( DS ,RCSe ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.047244094488188976, "obj2": 0.7046718261540821}, {"determining": "Max( Min( Const ,( Min( ( MRS + CRS ) ,( FirstVNF_CPU_Server / ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Min( FirstVNF_Mem ,ARS ) ) ),Min( ( ( PN * Min( ACS ,( FirstVNF_RAM_Server - ARS ) ) ) * Max( FirstVNF_CPU_Server,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - RCSe ),Max( DS,MUM ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.4409448818897638, "obj2": 0.27509990686325175}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( CRS + ACS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( ( RCSe * MLU ) - RCSe ) + ( MUM + MLU ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,CS ) )", "obj1": 0.639763779527559, "obj2": 0.2106915731354793}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / ( ( DS / RMSe ) + ( MUM / Max( MUC,MLU ) ) ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.4035433070866142, "obj2": 0.3915840921994055}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( Min( MDR ,MRS ) ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( ( PN / PN ),( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( RCSe * ( RCSe + DS ) ) ,Min( RRSe ,MUC ) ) + Min( ( ( MLU / DS ) + ( ( ( MUM * MUM ) / ( CS / RCSe ) ) + ( ( DS - RRSe ) * MUC ) ) ) ,RRSe ) ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7637795275590551, "obj2": 0.11879025857018376}, {"determining": "( Min( ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Min( ( BR / RRS ) ,( FirstVNF_CPU * ( Min( Const ,DDR ) + PN ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( ( RCSe * ( ( RMSe * RCSe ) - ( Min( RMSe ,CS ) / ( DS - Max( RMSe,MUC ) ) ) ) ) ,( Min( RRSe ,RMSe ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM / ( CS + MLU ) ) ) ) )", "obj1": 0.07283464566929133, "obj2": 0.6660011202090287}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * ( ( RRS * DDR ) + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,AMS ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( CS - Min( Max( MUR,MLU ) ,( MUC * DS ) ) ) / Min( ( Max( MUR,RMSe ) * ( RCSe - DS ) ) ,( ( RCSe * MLU ) / DS ) ) ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.16330498620548936}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( Min( MDR ,MRS ) ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( ( PN / PN ),( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( RCSe * ( RCSe + DS ) ) ,Min( RRSe ,MUC ) ) + Min( ( ( MLU / DS ) + ( ( ( MUM * MUM ) / ( CS / RCSe ) ) + ( ( DS - RRSe ) * MUC ) ) ) ,RRSe ) ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7952755905511811, "obj2": 0.10179967517885896}, {"determining": "Min( Min( CRS ,CRS ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / ( Max( BR,( ARS - ( ( AMS + MRS ) - BR ) ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( CS - ( MUR / CS ) ) / CS ),MUM ),Max( RCSe,MLU ) ) - ( ( ( RCSe + ( Min( MUR ,MUC ) + RMSe ) ) - ( ( ( ( ( RMSe - MUR ) / RRSe ) / RCSe ) * ( ( CS - MUC ) + ( RRSe * CS ) ) ) * ( Max( MUM,( Min( RRSe ,MUM ) / MUM ) ) - MLU ) ) ) * ( MLU - MUC ) ) )", "obj1": 0.6751968503937008, "obj2": 0.1885972678478225}, {"determining": "Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( FirstVNF_Mem_Server + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.34448818897637795, "obj2": 0.42402935871221314}, {"determining": "Min( Max( FirstVNF_RAM_Server,( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( DS / ( RMSe * Max( CS,Min( ( MUR - ( RCSe * RCSe ) ) ,RCSe ) ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.41929133858267714, "obj2": 0.3615185643991935}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,( ACS / ARS ) ),Max( Min( Min( FirstVNF_CPU ,( ( ARS / FirstVNF_RAM ) / DDR ) ) ,FirstVNF_CPU ),DDR ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,( MUR + ( Max( RRSe,MUM ) + ( Min( MUM ,MUM ) / ( Max( MLU,MUM ) + ( Max( RRSe,MUR ) * ( RCSe * RRSe ) ) ) ) ) ) ) - Max( ( ( ( ( CS * Min( MUR ,DS ) ) - Max( DS,Min( MUC ,RMSe ) ) ) / CS ) + Max( MUR,MUR ) ),CS ) )", "obj1": 0.8562992125984252, "obj2": 0.07245722853983541}, {"determining": "Min( Max( FirstVNF_RAM_Server,( ( Const + DDR ) * FirstVNF_CPU_Server ) ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( DS / ( RMSe * Max( ( MLU / Min( RMSe ,( MUR / DS ) ) ),Min( ( MUR - ( RCSe * RCSe ) ) ,RCSe ) ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.6122047244094488, "obj2": 0.2431181584055053}, {"determining": "Min( Max( FirstVNF_RAM,( ( FirstVNF_Mem + DDR ) + FirstVNF_Mem ) ) ,( MDR - PN ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,Min( ( Min( ( CS + MUC ) ,( DS * RMSe ) ) + ( ( MUM * MUC ) + ( RCSe + MLU ) ) ) ,MUM ) ) ) / CS ) * Max( ( ( MUM * MUR ) + RCSe ),( RCSe - RMSe ) ) )", "obj1": 0.6181102362204725, "obj2": 0.23158803751913687}, {"determining": "Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.37598425196850394, "obj2": 0.40199159668058443}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + ( Const + DDR ) ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + ( Max( ( BR * FirstVNF_CPU ),MRS ) / ( PN - FirstVNF_CPU_Server ) ) ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( ( MLU / Min( RMSe ,RCSe ) ) + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( RCSe - ( MUR - CS ) ) * Max( CS,RRSe ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.6909448818897638, "obj2": 0.17259349088766798}, {"determining": "Max( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( ( PN - ( MDR - Min( Const ,AMS ) ) ) + MRS ) ),( FirstVNF_RAM_Server * Max( ( Max( ARS,MDR ) / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( RRSe + MUC ) ),( RCSe / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.10433070866141732, "obj2": 0.6397046023088081}, {"determining": "Max( ( ( Max( ( ( ( ( ARS / DDR ) / MDR ) * FirstVNF_Mem_Server ) - MRS ),( ( BR - RRS ) * AMS ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,MLU ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( MUR + ( DS + ( ( RMSe / RRSe ) / ( ( RRSe - MUM ) * MLU ) ) ) ) - Max( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,( RCSe * RCSe ) ) ) ),MUC ) ) ) )", "obj1": 0.1279527559055118, "obj2": 0.5943497563992232}, {"determining": "Min( ( BR + ( ( ( Max( FirstVNF_Mem,MRS ) + MDR ) - FirstVNF_RAM ) / ACS ) ) ,Min( ( FirstVNF_RAM_Server - ( PN + DDR ) ) ,( Min( Min( MDR ,FirstVNF_RAM ) ,MDR ) * ( BR * ARS ) ) ) )", "choosing": "( ( ( DS / Min( Min( ( ( Min( RMSe ,RCSe ) + Min( MUM ,MUM ) ) * ( MUR * RCSe ) ) ,( ( Max( RCSe,MUR ) + MLU ) / CS ) ) ,( Min( ( RRSe * DS ) ,DS ) + RCSe ) ) ) / CS ) * Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RRSe + MUM ) ) ) / DS ),Max( ( RCSe + ( MUM * RRSe ) ),DS ) ) )", "obj1": 0.3188976377952756, "obj2": 0.43731144482577416}, {"determining": "Min( ( AMS * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + MUR ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.36023622047244097, "obj2": 0.41087579324206813}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Min( Max( MDR,FirstVNF_CPU_Server ) ,ARS ) / ( Max( BR,( ARS - FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( Min( ( ( ( DS - RCSe ) + ( MUM * RCSe ) ) - RMSe ) ,Min( RRSe ,MUC ) ) + DS ) ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7362204724409449, "obj2": 0.13842906184868078}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( DDR * FirstVNF_RAM ) * ACS ) )", "choosing": "( Max( Max( ( ( RRSe - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),MUM ) - Max( RMSe,Min( MUM ,MLU ) ) )", "obj1": 0.7421259842519685, "obj2": 0.13390784542927883}, {"determining": "Max( Min( Const ,( Min( MDR ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) - Min( FirstVNF_Mem ,ARS ) ) ),Min( ( ( PN * Min( ACS ,( FirstVNF_RAM_Server - ARS ) ) ) * Max( FirstVNF_CPU_Server,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Max( MUC,MUM ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.4566929133858268, "obj2": 0.26793784011805727}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( Min( Min( MDR ,Min( Const ,PN ) ) ,MDR ) * ( BR * ARS ) ) )", "choosing": "( Max( ( Max( RRSe,( ( MLU - RMSe ) + ( RCSe / MUR ) ) ) / DS ),Max( MLU,DS ) ) - Max( ( MLU - MUM ),( RMSe + MUC ) ) )", "obj1": 0.045275590551181105, "obj2": 0.7353130743445538}, {"determining": "Max( ( ( Max( ( ( ( ( ARS / MDR ) / MDR ) * FirstVNF_Mem_Server ) - MRS ),DDR ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( ( Max( MUM,MUC ) * RRSe ) ,CS ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( ( MUM / MLU ) + Max( MLU,CS ) ) - Max( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ),MUC ) ) ) )", "obj1": 0.1437007874015748, "obj2": 0.5856056952583579}, {"determining": "( ( AMS * ( ( CRS + Const ) - Min( ( ( ( ( BR - AMS ) / ( Const + FirstVNF_Mem ) ) + Const ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) ) ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_RAM / AMS ) ) )", "choosing": "Min( Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( MUR / ( ( MUR - CS ) + Min( MUR ,MUM ) ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) ) ,( MUC + MUM ) )", "obj1": 0.9330708661417323, "obj2": 0.021105830595837385}, {"determining": "Max( ( ( Max( ( ( ( ( ARS / MDR ) / MDR ) * FirstVNF_Mem_Server ) - MRS ),( ( FirstVNF_Mem + ( MRS + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) + ( ACS - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( ( ( MUM / MLU ) + ( ( Max( CS,RRSe ) * RCSe ) + ( MUM + MUM ) ) ) - Max( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ),MUC ) ) ) )", "obj1": 0.1515748031496063, "obj2": 0.573519259468276}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Min( ( BR / RRS ) ,( FirstVNF_CPU * ( Min( Const ,DDR ) + PN ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( ( RCSe * ( ( RMSe * RCSe ) - ( Min( RMSe ,CS ) / ( DS - Max( RMSe,MUC ) ) ) ) ) ,( Min( RRSe ,MUC ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM / ( CS + MLU ) ) ) ) )", "obj1": 0.09448818897637795, "obj2": 0.6549683904529028}, {"determining": "Min( ( ( AMS - Max( ARS,Min( FirstVNF_Mem ,ARS ) ) ) / ( ( ( FirstVNF_RAM / BR ) + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,BR )", "choosing": "( Min( MLU ,( ( ( Min( MUM ,MLU ) / ( ( ( MUC + RMSe ) - ( RRSe / CS ) ) / ( ( MUR - MUR ) + Max( DS,DS ) ) ) ) * Max( Max( ( ( MUC * MUR ) * ( RCSe + MLU ) ),Min( MUR ,( RRSe + MUC ) ) ),Max( DS,( Min( CS ,MUR ) + Max( CS,MUM ) ) ) ) ) / Max( DS,MLU ) ) ) - MUM )", "obj1": 0.8326771653543307, "obj2": 0.08064671059261976}, {"determining": "Max( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( ( PN - ( MDR - Min( Const ,AMS ) ) ) + MRS ) ),( FirstVNF_RAM_Server * Max( ( Max( ( Const + ( FirstVNF_CPU_Server / ACS ) ),MDR ) + MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( MUR + Min( RCSe ,RCSe ) ) ),( RCSe / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUM + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.11614173228346457, "obj2": 0.611442891379226}, {"determining": "Max( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * Max( ( Max( ( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( FirstVNF_CPU_Server - PN ) ),MDR ) / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( MUR + Min( RCSe ,RCSe ) ) ),( RCSe / ( MLU / RMSe ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.6130839544891213}, {"determining": "Min( ( DDR - FirstVNF_RAM ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + Max( MUC,MLU ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.9645669291338582, "obj2": 0.02028197586368329}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / RRS ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.5696958371208577}, {"determining": "Min( FirstVNF_RAM_Server ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / Min( RMSe ,RCSe ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.265748031496063, "obj2": 0.4742392650716779}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ,MRS ) ,( FirstVNF_Mem_Server + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * ( CS + ( ( ( ( MUR + ( MLU + ( RMSe - RMSe ) ) ) / MLU ) - MUC ) + RCSe ) ) )", "obj1": 0.8740157480314961, "obj2": 0.056633286670470726}, {"determining": "( Min( Min( Const ,PN ) ,( ACS * FirstVNF_Mem ) ) / ( PN - ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( MUM - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( MUC / Max( MUR,( ( MUM / ( RMSe / MUR ) ) / RRSe ) ) ) ) ) )", "obj1": 0.281496062992126, "obj2": 0.4660222083301621}, {"determining": "Min( ( Min( FirstVNF_RAM_Server ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) ) * CRS ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,( ( ( MLU / Min( RMSe ,RCSe ) ) / CS ) * Max( MUC,MUM ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.4464043181459443}, {"determining": "Min( ( AMS * Min( ( ( FirstVNF_RAM * CRS ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,MRS ) ,( FirstVNF_Mem_Server + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( MLU * ( MUC - RRSe ) ) * ( CS + ( ( ( ( MUR + ( MLU + ( RMSe - MLU ) ) ) / MLU ) - MUC ) + RCSe ) ) )", "obj1": 0.9173228346456693, "obj2": 0.03549691792115803}, {"determining": "Min( ( ( AMS - Max( ARS,ARS ) ) / Max( PN,( ( FirstVNF_CPU + AMS ) + MRS ) ) ) ,( Max( Max( RRS,Const ),( Min( Max( ( MDR / DDR ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( ( MDR * Const ) + FirstVNF_RAM ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( ( Min( CS ,Min( MUC ,MUR ) ) / Max( ( RMSe / Min( ( MUM + CS ) ,Max( MLU,Max( MUC,MLU ) ) ) ),MLU ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) - ( MUC * ( Max( MUM,MUC ) * RRSe ) ) )", "obj1": 0.687007874015748, "obj2": 0.18430077631251918}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( ( ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( Max( RMSe,MUR ) + RRSe ) * Max( CS,( MUR * RRSe ) ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) + MUM ) ) )", "obj1": 0.1732283464566929, "obj2": 0.5578204899206889}, {"determining": "( Min( Max( ( BR - MRS ),( BR + DDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) + ( ACS + FirstVNF_RAM ) ) ) / Min( ( BR / RRS ) ,( FirstVNF_CPU * ( Min( FirstVNF_CPU_Server ,DDR ) + PN ) ) ) )", "choosing": "( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( ( RCSe * ( ( RMSe * RCSe ) - ( Min( RMSe ,CS ) / ( DS - Max( RMSe,MUC ) ) ) ) ) ,( Min( RRSe ,RCSe ) * DS ) ) / Min( ( MLU / RMSe ) ,( MUM / ( CS + MLU ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.6600069281127025}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( FirstVNF_Mem + Min( ( CRS - RRS ) ,FirstVNF_RAM_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( MUM * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + ( Max( MUC,Min( RRSe ,( RCSe - MUM ) ) ) / ( Min( CS ,Max( ( DS / MUR ),( CS * RCSe ) ) ) / MUM ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.5235841505210636}, {"determining": "( Max( BR,AMS ) / ( Min( ( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( ( Max( Min( MUC ,MUC ),Min( MUM ,MLU ) ) + RRSe ) * ( CS + MUC ) ) - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.08964376833998591}, {"determining": "Min( ( ( AMS - Max( ARS,Min( FirstVNF_Mem ,ARS ) ) ) / ( ( ( FirstVNF_RAM / BR ) + FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,BR )", "choosing": "( Min( MLU ,( ( ( Min( MUM ,MLU ) / ( ( ( MUC + RMSe ) - ( RRSe / CS ) ) / ( ( MUR - MUR ) + Max( DS,DS ) ) ) ) * Max( Max( ( ( MUC * MUR ) * ( RCSe + MLU ) ),Min( MUR ,( RRSe + MUC ) ) ),Max( DS,( Min( CS ,MUR ) + Max( CS,MUM ) ) ) ) ) / Max( DS,MLU ) ) ) - MUM )", "obj1": 0.8287401574803149, "obj2": 0.08660566889337082}, {"determining": "( ( AMS * ( ( CRS + Const ) - Min( ( ( ( ( BR - AMS ) / ( Const + FirstVNF_Mem ) ) + Const ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + FirstVNF_CPU_Server ) ) ) ) ) - ( Max( ( MRS / ( FirstVNF_Mem_Server / Const ) ),MDR ) + ( FirstVNF_RAM / AMS ) ) )", "choosing": "Min( Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( MUR / ( ( MUR - CS ) + Min( MUR ,MUM ) ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) ) ,( MUC + MUM ) )", "obj1": 0.9744094488188977, "obj2": 0.006380600621306847}, {"determining": "Min( ( ( PN * FirstVNF_CPU ) + FirstVNF_Mem_Server ) ,Min( ( ( PN / FirstVNF_Mem_Server ) * MRS ) ,( Min( ( FirstVNF_CPU_Server * ( ( ( BR + ACS ) - ( FirstVNF_RAM / DDR ) ) / FirstVNF_RAM_Server ) ) ,MDR ) * ( ( FirstVNF_RAM - FirstVNF_CPU ) * ARS ) ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( Min( ( RCSe * Max( RMSe,RMSe ) ) ,DS ) + RCSe ) ) ) / CS ) * Max( ( Max( DS,( ( ( MUC + ( RMSe + CS ) ) - RMSe ) + ( RRSe + MUM ) ) ) / DS ),Max( ( RCSe + ( MUM * RRSe ) ),DS ) ) )", "obj1": 0.2618110236220472, "obj2": 0.48300437912567273}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( Const,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,AMS ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( CS - Min( Max( MUR,CS ) ,( MUC * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.043629923535583336}, {"determining": "( Min( ( CRS + Const ) ,( ( ( Const * MRS ) + ACS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( CRS + DDR ) )", "choosing": "Max( ( ( MLU - DS ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( Max( Min( MUC ,RRSe ),Max( MUM,MUC ) ) + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.20866141732283464, "obj2": 0.5176655835593849}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( FirstVNF_Mem_Server ,MRS ) ,( MRS + CRS ) ) ) ) ) ,( MRS * FirstVNF_Mem ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( ( ( CS - DS ) / RMSe ) - Min( RCSe ,( MLU * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.05254146178129292}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.3031496062992126, "obj2": 0.45406048239108837}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( Min( ( PN + DDR ) ,( FirstVNF_CPU / BR ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( ( ( CRS - FirstVNF_CPU ) * ( MRS + AMS ) ) ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( ( CS - MUR ) / CS ) - MUM ) )", "obj1": 0.9724409448818898, "obj2": 0.0180690635267194}, {"determining": "Max( ( FirstVNF_RAM * ( RRS * ( BR / MDR ) ) ),( ( MDR / FirstVNF_CPU ) - MRS ) )", "choosing": "( ( ( ( ( CS * MUC ) + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( ( MUC + MUM ) + ( ( ( CS / MUR ) / RCSe ) - CS ) ) * RMSe ) ) )", "obj1": 0.18110236220472442, "obj2": 0.5491358883323108}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( Max( ACS,Const ),MRS ) ) / Min( Min( Min( FirstVNF_CPU ,AMS ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( CS - Min( Max( MUR,MLU ) ,( MUC * RCSe ) ) ) / Min( ( Max( MUR,RMSe ) * ( RCSe - DS ) ) ,( MLU * RMSe ) ) ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.9311023622047244, "obj2": 0.03217898446314816}, {"determining": "Max( ( DDR - FirstVNF_Mem ),Min( ( CRS + ( Max( ( FirstVNF_CPU_Server * ( Max( MRS,PN ) * ARS ) ),( Max( DDR,Const ) / FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,RMSe ) / MUM ) + Max( ( RCSe - ( RCSe + RRSe ) ),Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( Max( RRSe,RRSe ) * Max( Min( MUR ,MUR ),Max( ( RCSe - MUC ),CS ) ) ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.4954764362774032}, {"determining": "( ( ( ( FirstVNF_CPU - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ACS ) * Max( Min( ARS ,BR ),FirstVNF_RAM_Server ) ) * ( ( Min( PN ,( MDR / FirstVNF_CPU_Server ) ) + PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( ( ( RRSe - CS ) + ( MLU + RRSe ) ) - Max( RCSe,( MLU + Min( ( CS - MUR ) ,MUM ) ) ) ) )", "obj1": 0.2578740157480315, "obj2": 0.49290041965156484}, {"determining": "Max( ( DDR - FirstVNF_Mem ),( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_Mem ) - RRS ) ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( ( Min( RCSe ,CS ) / ( MUM + RRSe ) ) * Max( ( MUC * RRSe ),MUC ) ) + Max( ( ( DS / MUR ) / MUR ),Min( ( MUM / DS ) ,RMSe ) ) ) + CS ) ) * ( RRSe - DS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.5367777739291147}, {"determining": "Max( ( ( Max( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ),( ( FirstVNF_Mem + ( MRS + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) + ( ACS - Min( FirstVNF_Mem_Server ,DDR ) ) ) ) - ( FirstVNF_Mem - BR ) ) - Max( ARS,MDR ) ),( FirstVNF_RAM_Server * Max( ( ARS / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( DS,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,CS ) - ( DS - Max( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ),MUC ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.541991151799818}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / CRS )", "choosing": "Max( ( Max( CS,CS ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.2204724409448819, "obj2": 0.5103027921523472}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / ACS ) * Max( Min( ARS ,FirstVNF_CPU ),FirstVNF_RAM_Server ) ) * ( ( Const + PN ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU - ( CS + CS ) ) - RCSe ) + ( ( Min( Max( ( ( Min( MUR ,RCSe ) / ( RMSe / RMSe ) ) * Max( MUM,MUR ) ),Min( MUM ,( RRSe / ( RCSe + RRSe ) ) ) ) ,MLU ) + MLU ) - Max( RCSe,( MLU + Min( ( MUR - Min( MUM ,Max( MLU,MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.46041683203690165}, {"determining": "Max( Min( Const ,( PN - AMS ) ),Min( ( ( PN * Min( ACS ,( FirstVNF_RAM_Server - ARS ) ) ) * Max( FirstVNF_CPU_Server,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / ( ( RMSe * CS ) / Min( MUC ,MLU ) ) ) + Max( ( RCSe - ( RCSe + RRSe ) ),Max( MUC,MUM ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.27244339802205786}, {"determining": "( ( Max( ( Const + ( FirstVNF_CPU_Server / ACS ) ),MDR ) + MDR ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( ( Max( Min( MUC ,RRSe ),RRSe ) + RRSe ) * ( CS + MUC ) ) - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( RRSe + MUM ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.23228346456692914, "obj2": 0.5064465666465144}, {"determining": "( Max( BR,AMS ) / ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( ( Max( Min( MUC ,RRSe ),RRSe ) + RRSe ) * ( CS + MUC ) ) - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.23622047244094488, "obj2": 0.5015491776155918}, {"determining": "Min( ( AMS * Min( ( ( FirstVNF_RAM * CRS ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,MRS ) ,( FirstVNF_Mem_Server + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( MLU * ( MUC - RRSe ) ) * ( CS + ( ( ( ( MUR + ( MLU + ( RMSe - MLU ) ) ) / MLU ) - MUC ) + RCSe ) ) )", "obj1": 0.8937007874015748, "obj2": 0.04669094805886115}, {"determining": "( Max( BR,AMS ) / ( Min( FirstVNF_RAM_Server ,( AMS - Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( ( ( Max( Min( MUC ,MUC ),RRSe ) + RRSe ) * ( CS + MUC ) ) - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.8110236220472441, "obj2": 0.08964376833998591}, {"determining": "Min( ( ( PN * FirstVNF_CPU ) + FirstVNF_Mem_Server ) ,Min( ( ( PN / FirstVNF_Mem_Server ) * MRS ) ,( Min( ( FirstVNF_CPU_Server * ( ( ( BR + ACS ) - ( FirstVNF_RAM / DDR ) ) / FirstVNF_RAM_Server ) ) ,MDR ) * ( ( FirstVNF_RAM - FirstVNF_CPU ) * ARS ) ) ) )", "choosing": "( ( ( DS / Min( ( MUC + MLU ) ,( Min( ( RCSe * Max( RMSe,RMSe ) ) ,DS ) + RCSe ) ) ) / CS ) * Max( ( Max( DS,( ( ( MUC + ( RMSe + CS ) ) - RMSe ) + ( RRSe + MUM ) ) ) / DS ),Max( ( RCSe + ( MUM * RRSe ) ),DS ) ) )", "obj1": 0.25, "obj2": 0.4929940246615065}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( CRS,Const ),Max( ARS,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,MRS ) ,( FirstVNF_Mem_Server + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * ( CS + ( ( ( ( ( MLU / ( MLU + MUR ) ) + ( MLU + ( RMSe - MLU ) ) ) / MLU ) - MUC ) + RCSe ) ) )", "obj1": 0.8759842519685039, "obj2": 0.05580428294670486}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * ( MDR + Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( Max( Max( RRS,Const ),Max( ARS,MDR ) ) / Min( Min( Min( FirstVNF_CPU ,AMS ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / ( MLU + RCSe ) ) / CS ) * Max( MUC,Max( Max( ( ( CS - Min( Max( MUR,MLU ) ,( MUC * DS ) ) ) / Min( ( Max( MUR,RMSe ) * ( RCSe - DS ) ) ,( MLU * RMSe ) ) ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.034598251836774216}, {"determining": "Min( ( Max( DDR,( DDR * MDR ) ) + ( FirstVNF_Mem * ( Min( AMS ,FirstVNF_RAM ) * FirstVNF_Mem ) ) ) ,( FirstVNF_RAM - MRS ) )", "choosing": "( ( ( MLU / ( MUR / Max( Max( MUM,MUM ),CS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.29133858267716534, "obj2": 0.4570420396985107}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( ( ( PN - FirstVNF_RAM_Server ) * ( ( ARS * ( DDR + FirstVNF_Mem ) ) + ( MDR - FirstVNF_RAM_Server ) ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( Max( ( MUM - RCSe ),( RRSe / MUC ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( ( ( MLU / CS ) * MLU ) + DS ) - Max( MUR,( DS - RMSe ) ) ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.9862204724409449, "obj2": 0.003836226213948543}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + ( ( ( Min( RRS ,PN ) - FirstVNF_CPU_Server ) * ( Const + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ) ,( Min( CRS ,Const ) / ( MDR + ( Max( ( BR * FirstVNF_CPU ),MRS ) / ( PN - FirstVNF_CPU_Server ) ) ) ) ) / Max( ( ( RRS / FirstVNF_Mem ) - Max( PN,RRS ) ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( Max( ( DS / ( ( RCSe - ( MUR - CS ) ) * Max( CS,RRSe ) ) ),( MUR / Max( RRSe,MUR ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.18503937007874016, "obj2": 0.5470396844170838}, {"determining": "( ( Min( FirstVNF_CPU ,Const ) / Min( Const ,RRS ) ) + ( ( ( FirstVNF_RAM * FirstVNF_Mem ) - ( ACS / FirstVNF_CPU_Server ) ) * MRS ) )", "choosing": "( Max( RRSe,MUR ) - ( ( DS / MUR ) * DS ) )", "obj1": 0.04330708661417323, "obj2": 0.741286157383387}, {"determining": "Min( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ,Min( ( ACS - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( MLU / Min( RMSe ,( MUR / DS ) ) ) / CS ) * Max( MUC,MUM ) )", "obj1": 0.297244094488189, "obj2": 0.45578663965380145}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( ( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,( Min( ( FirstVNF_CPU_Server * RRS ) ,DDR ) * ( ACS / ARS ) ) ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( Max( ( MUM - RCSe ),( RRSe / MUC ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( ( DS / ( ( ( MUM + MUM ) - Max( MUC,MLU ) ) / ( MLU / MLU ) ) ) / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0017640592559588426}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( ( ( PN - FirstVNF_RAM_Server ) * ( DDR + FirstVNF_RAM_Server ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( ( ( Max( MDR,FirstVNF_RAM_Server ) * FirstVNF_CPU ) + FirstVNF_Mem_Server ) ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( Max( ( MUM - RCSe ),( RRSe / MUC ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( ( MLU - RMSe ) + MUM ) ) )", "obj1": 0.9881889763779528, "obj2": 0.0033173540005977447}, {"determining": "( ( Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( Min( ( Max( BR,( MDR - PN ) ) * RRS ) ,DDR ) * Min( ARS ,FirstVNF_CPU ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( RMSe - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * MUM ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MLU + MUC ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.5371105951297989}, {"determining": "Min( ( AMS * Min( ( ( AMS - Max( ARS,ARS ) ) / ( ( AMS * FirstVNF_Mem_Server ) - Min( FirstVNF_Mem_Server ,DDR ) ) ) ,( ( BR + FirstVNF_RAM ) / Min( Min( ( ARS - Min( DDR ,ARS ) ) ,MRS ) ,( MRS + CRS ) ) ) ) ) ,Min( ( ( FirstVNF_Mem - BR ) - FirstVNF_CPU ) ,( Const + DDR ) ) )", "choosing": "( ( ( Max( ( RCSe * ( ( Max( RMSe,RCSe ) * MUM ) - ( RMSe * ( RMSe + MUM ) ) ) ),MUM ) / ( MLU + RCSe ) ) / CS ) * Max( Max( ( Min( CS ,( ( ( CS / RMSe ) + MUC ) - ( Max( MUC,DS ) + MUC ) ) ) - CS ),( ( MUM - MUR ) / RRSe ) ),Max( Max( ( ( CS - Min( Max( MUR,MLU ) ,( MUC * DS ) ) ) / CS ),MUM ),( MUR + DS ) ) ) )", "obj1": 0.8976377952755905, "obj2": 0.044896950083750276}, {"determining": "( ( FirstVNF_CPU * Max( AMS,FirstVNF_Mem_Server ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ( MRS * Min( RRS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Max( ( ( ( ( MUR + MUC ) + ( DS + DS ) ) / ( MUR - RMSe ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( ( CS + CS ) + MUC ) ) ) ),( ( RMSe * ( RRSe + ( MUM - DS ) ) ) + RMSe ) )", "obj1": 0.21850393700787402, "obj2": 0.5129373419877116}, {"determining": "Max( Min( Const ,( Min( MDR ,( Min( CRS ,Const ) / ( MDR + Min( ( Const - MDR ) ,FirstVNF_RAM ) ) ) ) - Min( FirstVNF_Mem ,ARS ) ) ),Min( ( ( PN * Min( ACS ,( FirstVNF_RAM_Server - ARS ) ) ) * Max( FirstVNF_CPU_Server,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / ( ( RMSe * CS ) / Max( MUM,MUM ) ) ) + Max( ( RCSe - ( RCSe + RRSe ) ),Max( MUC,MUM ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( Min( Max( RCSe,MUM ) ,( MUR * RRSe ) ) - ( ( MUC + DS ) - Max( MUC,MLU ) ) ) )", "obj1": 0.44291338582677164, "obj2": 0.2737033343714511}, {"determining": "( Min( ( Max( FirstVNF_CPU,Max( ACS,( MDR - Const ) ) ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + ( ( Max( RCSe,RRSe ) * RCSe ) + ( MUM + MUM ) ) ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.234251968503937, "obj2": 0.5051209666944948}, {"determining": "( ( Min( Max( Min( BR ,FirstVNF_CPU_Server ),ARS ) ,( DDR - FirstVNF_RAM ) ) * ( Min( ( Max( BR,MRS ) * RRS ) ,DDR ) * Min( ARS ,FirstVNF_CPU ) ) ) * Min( ACS ,BR ) )", "choosing": "( Min( ( RMSe - ( MUC * MUR ) ) ,( ( MUM - RMSe ) - ( CS * MUM ) ) ) * Max( ( ( RMSe * CS ) / Max( MUM,MUM ) ),( Min( CS ,MUR ) - ( MUR + MUC ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.5371105951297989}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,FirstVNF_RAM_Server ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - Min( FirstVNF_CPU ,CRS ) ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( FirstVNF_RAM_Server * ARS ) ),( ( PN * PN ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( MLU - DS ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( ( ( ( DS / Min( ( MUC + MLU ) ,( CS + RCSe ) ) ) / CS ) * ( ( RCSe * MUC ) * ( DS - RRSe ) ) ),MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0011650247019417577}, {"determining": "Max( ( ( ACS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) + ( ( PN - ( MDR - Min( Const ,AMS ) ) ) + MRS ) ),( FirstVNF_RAM_Server * Max( ( Max( ( ( ARS * Max( FirstVNF_RAM,ARS ) ) - ( FirstVNF_CPU_Server - PN ) ),MDR ) / MDR ),MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( ( Min( CS ,DS ) / MUM ) + Max( RMSe,Min( Max( RRSe,CS ) ,RMSe ) ) ) + CS ) ) * Min( RRSe ,CS ) ) - ( ( Max( ( ( DS / MUM ) + ( MUR + Min( RCSe ,RCSe ) ) ),( RCSe / ( MLU / MLU ) ) ) * ( Min( DS ,RCSe ) + Min( MLU ,DS ) ) ) - ( ( MUR + CS ) - Max( DS,MUC ) ) ) )", "obj1": 0.1062992125984252, "obj2": 0.6130839544891213}, {"determining": "( Min( ( Max( FirstVNF_CPU,Max( ACS,( MDR - Const ) ) ) + Min( CRS ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( ( ( MUR + ( ( Max( RCSe,RRSe ) * RCSe ) + ( MUM + MUM ) ) ) + ( DS + RCSe ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( RRSe + MUM ) ) )", "obj1": 0.234251968503937, "obj2": 0.5051209666944948}, {"determining": "( ( ARS + ( ( Min( ( FirstVNF_RAM + BR ) ,PN ) - FirstVNF_CPU_Server ) / ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem + Min( ARS ,ACS ) ) ),Min( MDR ,MRS ) ) + ( RRS / Max( ( FirstVNF_CPU - MRS ),DDR ) ) ) ) ) * Max( ( ( MRS * AMS ) / ( FirstVNF_RAM_Server * ARS ) ),( ( PN * PN ) + ( ( Const + FirstVNF_CPU ) / CRS ) ) ) )", "choosing": "( ( ( ( MUM / RCSe ) / ( MUC / RCSe ) ) / Min( Min( RRSe ,MLU ) ,Min( MUC ,MUC ) ) ) + ( Max( ( ( ( DS / Min( RMSe ,( MUR / DS ) ) ) / CS ) * ( ( RCSe * MUC ) * ( DS - RRSe ) ) ),MUC ) - ( ( CS + MUM ) * MLU ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( Min( ( Max( FirstVNF_CPU,ACS ) + Min( ( ( PN - FirstVNF_RAM_Server ) * ( ( ACS * FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ,BR ) ) ,( Min( CRS ,Const ) / ( MDR + Min( FirstVNF_CPU ,CRS ) ) ) ) / Max( Min( MDR ,FirstVNF_Mem ),( BR + ACS ) ) )", "choosing": "Max( ( ( Max( ( MUM - RCSe ),( RRSe / MUC ) ) / ( Min( MUM ,MLU ) - ( CS - RMSe ) ) ) * ( ( Max( CS,CS ) - ( RCSe + MUM ) ) * ( ( RCSe + RRSe ) * ( CS + MUC ) ) ) ),( ( MUM / CS ) - ( ( MUR + MUC ) + MUM ) ) )", "obj1": 0.9980314960629921, "obj2": 0.0005188722133507979}, {"determining": "( ( FirstVNF_Mem - BR ) - ( Const / FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR * Min( MUR ,DS ) ) - ( MUR / Min( MUR ,RRSe ) ) ) + ( Min( ( RCSe / ( ( MUR * MUC ) - RCSe ) ) ,RMSe ) + Min( MUR ,MUR ) ) ) * ( ( ( MUR - RRSe ) / MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( BR * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( Max( Min( RCSe ,MLU ),( MLU - DS ) ),CS ) ) ) ) ,( Min( CS ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( Max( RRS,Const ) * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) ,( Min( CS ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( ( DDR - ( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) * RRS ) ,DDR ) * DDR ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( Min( DS ,RCSe ) + ( ( MUM / MLU ) + Max( MLU,CS ) ) ) ) ,( Min( Max( Max( MUR,RCSe ),RRSe ) ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,( ( DDR * FirstVNF_RAM ) * ACS ) )", "choosing": "( Max( MUC,MUM ) - ( ( ( ( RRSe / ( RMSe / RRSe ) ) - ( RMSe + ( RMSe * DS ) ) ) / DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( FirstVNF_CPU_Server - BR ) ) - Max( DDR,FirstVNF_RAM_Server ) ) - ( Max( Max( ACS,Const ),MRS ) - MRS ) )", "choosing": "( Max( ( ( Min( CS ,( ( ( MUM / MLU ) + CS ) * Max( RMSe,MUM ) ) ) + RCSe ) - CS ),( ( RRSe * CS ) + ( MUC + DS ) ) ) + ( Min( ( RMSe - RRSe ) ,( RRSe + MUM ) ) + Min( ( ( ( MUR / RRSe ) / ( MUC * CS ) ) * RCSe ) ,( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( BR + FirstVNF_CPU ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( PN - RRS ) ) - ( ( FirstVNF_Mem_Server + DDR ) + MDR ) )", "choosing": "Min( ( ( ( ( RCSe + DS ) * ( DS * DS ) ) + ( ( MUR + MLU ) / Max( DS,MUC ) ) ) / ( Min( Max( MUM,DS ) ,( MUM * DS ) ) / Min( ( MLU / RMSe ) ,( MUM * MUR ) ) ) ) ,( ( CS * Max( ( ( MUR / DS ) * MLU ),DS ) ) - ( Max( MUR,MUC ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * CRS ) - ( Max( ( Const + ( FirstVNF_CPU_Server / ACS ) ),MDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUM ) - ( MLU + RCSe ) ) ,( Max( MUM,RRSe ) - Max( RMSe,Min( Max( Max( RRSe,MUR ),CS ) ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}]}