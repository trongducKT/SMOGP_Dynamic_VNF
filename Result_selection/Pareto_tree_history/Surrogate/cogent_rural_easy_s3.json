{"1": [{"determining": "Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MLU + RMSe ) * ( RRSe - RCSe ) )", "obj1": 0.20342205323193915, "obj2": 0.6359040663046145}, {"determining": "Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( DS - CS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_CPU_Server / MRS ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( MUR - Max( Min( MUC ,( DS * ( MUR - RCSe ) ) ),CS ) ) ) + MUC ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( Max( DS,RRSe ) - ( RCSe * MLU ) )", "obj1": 0.20532319391634982, "obj2": 0.6163455720359576}, {"determining": "( ( RRS - ( FirstVNF_RAM * ( ( ARS / BR ) - CRS ) ) ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( Max( MUR,( ( MLU - Max( CS,MLU ) ) - MLU ) ) * DS ) - RMSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) / ( ARS - AMS ) )", "choosing": "( Min( MUM ,RRSe ) / ( MUC - MUC ) )", "obj1": 0.7490494296577946, "obj2": 0.216987299938036}, {"determining": "Min( ( AMS - PN ) ,Max( Const,ARS ) )", "choosing": "( ( MLU / DS ) * ( MUC * Min( MLU ,( RMSe / ( Max( MUR,( RRSe + Min( RCSe ,MUR ) ) ) + RRSe ) ) ) ) )", "obj1": 0.06463878326996197, "obj2": 0.7690431770830667}, {"determining": "Max( ( ARS / PN ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUM + DS ) )", "obj1": 0.11787072243346007, "obj2": 0.7090900269543777}, {"determining": "( ( Const * Const ) / ( BR - PN ) )", "choosing": "( ( MUM - MLU ) + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( ( Min( Max( Const,CRS ) ,FirstVNF_RAM ) * Min( PN ,( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ARS ) ) ) * ( ( ARS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) / ( ( ( RCSe + MUR ) - ( Max( MUC,( ( ( RRSe - CS ) + Max( DS,RRSe ) ) - CS ) ) * DS ) ) + ( ( ( MLU * ( MUM + MUC ) ) / CS ) / ( MUM * RMSe ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "( ( ( MRS * ARS ) + ( CRS + CRS ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2224334600760456, "obj2": 0.5685836437516011}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - ( Min( PN ,RRS ) * FirstVNF_RAM ) ) ) / ( MRS / PN ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( RMSe ,Max( MUM,( MUC / Min( RCSe ,MLU ) ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - Min( ( Min( FirstVNF_RAM ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ,( ( Max( FirstVNF_CPU,DDR ) * MRS ) + ARS ) ) ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ( MDR * ARS ) ) ) )", "choosing": "Max( ( ( MLU - MUC ) - Min( Min( MUR ,CS ) ,( MLU - Min( ( Max( ( MLU * MUC ),MUM ) - MUM ) ,MUC ) ) ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( MUR * DS ) + ( RMSe * DS ) ) + Max( MLU,CS ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( Min( Min( FirstVNF_Mem_Server ,Const ) ,MDR ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( ( RRSe + MLU ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUR * RCSe ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "( ( AMS - Min( Max( ( ( RRS - FirstVNF_RAM ) + AMS ),MDR ) ,FirstVNF_RAM_Server ) ) * Min( ( ( Min( Max( MRS,MRS ) ,AMS ) * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Max( Max( MUC,RCSe ),( DS + ( MUC * MUC ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Min( FirstVNF_RAM_Server ,( ( RRS + ( MDR - MDR ) ) + BR ) ) ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - Max( MUM,( MUC * ( MUC - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Min( ( ( RRS * FirstVNF_Mem_Server ) - AMS ) ,( CRS / MRS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( MUC / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,RCSe ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( ( MUR * RCSe ) / MLU ) ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( RCSe * CS ) ) ) )", "obj1": 0.8231939163498099, "obj2": 0.14280437030831059}, {"determining": "( ( ( ACS - ( ACS * ( BR * BR ) ) ) / AMS ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( ( RRSe + RMSe ) ,( MUR * MLU ) ) + ( ( DS + Max( ( MLU - ( MUR * MUM ) ),MUM ) ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + MRS ) - PN ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Max( ( MUR - ( Max( MUR,MUR ) + ( MUR - ( MLU / ( MLU * MUM ) ) ) ) ),CS ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * ( RRSe + Min( DS ,( ( CS * Min( MLU ,MUR ) ) * MUC ) ) ) ) / ( MUR + ( ( RMSe + DS ) - RMSe ) ) )", "obj1": 0.8536121673003803, "obj2": 0.11911139587479602}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( Min( Min( ( DDR * FirstVNF_RAM ) ,Const ) ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * Max( FirstVNF_Mem_Server,( CRS + RRS ) ) ) ) ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( DS + CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + MRS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( Min( MUC ,MUC ),Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6425855513307985, "obj2": 0.2797447602726257}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_Mem * ( MDR - ( ( AMS - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( DDR + ( PN - Const ) ) ) ) + RRS ) ) ) )", "choosing": "( ( Max( ( RRSe + DS ),Max( CS,MUR ) ) / Max( ( ( DS - ( RMSe / RCSe ) ) * CS ),( RCSe * DS ) ) ) + ( Max( MUR,MUM ) * ( ( MLU - Min( ( Max( ( CS + DS ),DS ) + CS ) ,( CS - RRSe ) ) ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( ( BR / Max( Min( ACS ,RRS ),ARS ) ) * Min( Min( RRS ,FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( RCSe - ( ( MUM / ( DS / MLU ) ) - RMSe ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR - FirstVNF_RAM ) * ( MRS - MDR ) ) * ( ( FirstVNF_RAM / ACS ) + ( FirstVNF_Mem + AMS ) ) ) * ( FirstVNF_RAM_Server * ( AMS * FirstVNF_RAM ) ) )", "choosing": "Max( ( ( ( DS * MUC ) * Min( MUR ,MUR ) ) + Max( ( MUC + CS ),( CS - RMSe ) ) ),( ( MUM + MUM ) - Min( Max( MUC,RRSe ) ,( DS + RRSe ) ) ) )", "obj1": 0.5931558935361216, "obj2": 0.347911300402542}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( DS - CS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_CPU_Server / MRS ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( MUR - Max( Min( MUC ,( DS * ( MUR - RCSe ) ) ),CS ) ) ) + MUC ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM * ( ( ARS / BR ) - CRS ) ) ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( Max( MUR,( ( MLU - Max( CS,MLU ) ) - MLU ) ) * DS ) - RMSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ARS / PN ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUM + DS ) )", "obj1": 0.11787072243346007, "obj2": 0.7090900269543777}, {"determining": "( ( Const * Const ) / ( BR - PN ) )", "choosing": "( ( MUM - MLU ) + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0012126691837671432}, {"determining": "( ( Min( Max( Const,CRS ) ,FirstVNF_RAM ) * Min( PN ,( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ARS ) ) ) * ( ( ARS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) / ( ( ( RCSe + MUR ) - ( Max( MUC,( ( ( RRSe - CS ) + Max( DS,RRSe ) ) - CS ) ) * DS ) ) + ( ( ( MLU * ( MUM + MUC ) ) / CS ) / ( MUM * RMSe ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "( ( ( MRS * ARS ) + ( CRS + CRS ) ) + ( Max( FirstVNF_RAM_Server,MRS ) / ( ARS + FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * MLU ) ,Max( MUR,DS ) ) - ( ( CS - MLU ) + Min( MUC ,RCSe ) ) )", "obj1": 0.2224334600760456, "obj2": 0.5685836437516011}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - ( Min( PN ,RRS ) * FirstVNF_RAM ) ) ) / ( MRS / PN ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( RMSe ,Max( MUM,( MUC / Min( RCSe ,MLU ) ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - Min( ( Min( FirstVNF_RAM ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ,( ( Max( FirstVNF_CPU,DDR ) * MRS ) + ARS ) ) ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ( MDR * ARS ) ) ) )", "choosing": "Max( ( ( MLU - MUC ) - Min( Min( MUR ,CS ) ,( MLU - Min( ( Max( ( MLU * MUC ),MUM ) - MUM ) ,MUC ) ) ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( MUR * DS ) + ( RMSe * DS ) ) + Max( MLU,CS ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( Min( Min( FirstVNF_Mem_Server ,Const ) ,MDR ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( ( RRSe + MLU ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUR * RCSe ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "( ( AMS - Min( Max( ( ( RRS - FirstVNF_RAM ) + AMS ),MDR ) ,FirstVNF_RAM_Server ) ) * Min( ( ( Min( Max( MRS,MRS ) ,AMS ) * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Max( Max( MUC,RCSe ),( DS + ( MUC * MUC ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Min( FirstVNF_RAM_Server ,( ( RRS + ( MDR - MDR ) ) + BR ) ) ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - Max( MUM,( MUC * ( MUC - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Min( ( ( RRS * FirstVNF_Mem_Server ) - AMS ) ,( CRS / MRS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( MUC / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,RCSe ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( ( MUR * RCSe ) / MLU ) ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( RCSe * CS ) ) ) )", "obj1": 0.8231939163498099, "obj2": 0.14280437030831059}, {"determining": "( ( ( ACS - ( ACS * ( BR * BR ) ) ) / AMS ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( ( RRSe + RMSe ) ,( MUR * MLU ) ) + ( ( DS + Max( ( MLU - ( MUR * MUM ) ),MUM ) ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + MRS ) - PN ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Max( ( MUR - ( Max( MUR,MUR ) + ( MUR - ( MLU / ( MLU * MUM ) ) ) ) ),CS ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * ( RRSe + Min( DS ,( ( CS * Min( MLU ,MUR ) ) * MUC ) ) ) ) / ( MUR + ( ( RMSe + DS ) - RMSe ) ) )", "obj1": 0.8536121673003803, "obj2": 0.11911139587479602}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( Min( Min( ( DDR * FirstVNF_RAM ) ,Const ) ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * Max( FirstVNF_Mem_Server,( CRS + RRS ) ) ) ) ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( DS + CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( MDR + MRS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( Max( Min( MUC ,MUC ),Min( MUC ,MUC ) ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.6425855513307985, "obj2": 0.2797447602726257}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_Mem * ( MDR - ( ( AMS - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( DDR + ( PN - Const ) ) ) ) + RRS ) ) ) )", "choosing": "( ( Max( ( RRSe + DS ),Max( CS,MUR ) ) / Max( ( ( DS - ( RMSe / RCSe ) ) * CS ),( RCSe * DS ) ) ) + ( Max( MUR,MUM ) * ( ( MLU - Min( ( Max( ( CS + DS ),DS ) + CS ) ,( CS - RRSe ) ) ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( ( BR / Max( Min( ACS ,RRS ),ARS ) ) * Min( Min( RRS ,FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( RCSe - ( ( MUM / ( DS / MLU ) ) - RMSe ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( DDR - ( ARS * ACS ) ) ) / ( FirstVNF_CPU_Server + ( Const - CRS ) ) ) ) )", "choosing": "Min( Min( CS ,MUM ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - FirstVNF_Mem_Server )", "choosing": "Min( ( Min( Max( MLU,MUC ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 0.9201520912547528, "obj2": 0.07413170115338605}, {"determining": "( Max( Min( PN ,FirstVNF_Mem ),Const ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( ( ( ( MLU + CS ) / ( CS - RMSe ) ) / ( DS + Min( MUC ,( MUM - MLU ) ) ) ) - ( ( ( RMSe - RRSe ) + ( RMSe / DS ) ) + ( ( MLU - MUC ) - ( RCSe / RCSe ) ) ) ) ,( Max( RMSe,MUC ) + CS ) )", "obj1": 0.9809885931558935, "obj2": 0.010380683211813214}, {"determining": "Min( Max( FirstVNF_RAM,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( RRSe - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.903041825095057, "obj2": 0.08610442386444708}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( PN / FirstVNF_CPU_Server ) ) - PN ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( ( MLU * RCSe ) / ( MUR * RCSe ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.2718631178707224, "obj2": 0.51741705180633}, {"determining": "Min( ( Min( Max( PN,( FirstVNF_Mem_Server * MRS ) ) ,( PN / PN ) ) * AMS ) ,( FirstVNF_RAM * ARS ) )", "choosing": "Max( ( DS / MUR ),( ( CS * DS ) - ( Max( MLU,MUC ) + ( MUC - RRSe ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( Max( ( FirstVNF_Mem * ( FirstVNF_CPU_Server / CRS ) ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ),BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( ( MUM * Min( ( ( RRSe / MUM ) - RCSe ) ,Max( MUR,( RMSe / MUM ) ) ) ) - ( ( ( ( DS / MLU ) * RMSe ) + ( RCSe + Max( RRSe,MUR ) ) ) * MLU ) ) * DS ) + ( RMSe * DS ) ) + ( Max( ( MLU - RRSe ),MLU ) / Min( MUC ,CS ) ) )", "obj1": 0.6920152091254753, "obj2": 0.21521417013354469}, {"determining": "Min( ( ( ( CRS + MDR ) / RRS ) * AMS ) ,( FirstVNF_RAM * ARS ) )", "choosing": "Max( ( DS / Max( Max( RMSe,MUM ),( MLU + Min( RRSe ,( ( Min( MUC ,RRSe ) - ( DS + RCSe ) ) + Min( ( MUM * MLU ) ,RCSe ) ) ) ) ) ),( ( CS * DS ) - Min( ( RCSe / RMSe ) ,Min( CS ,RMSe ) ) ) )", "obj1": 0.6368821292775665, "obj2": 0.2825722337838668}, {"determining": "( ( Const / CRS ) * Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "Min( DS ,Max( ( RMSe * MUR ),( MUC - MUR ) ) )", "obj1": 0.7186311787072244, "obj2": 0.20868490048397736}, {"determining": "( ( Max( PN,( Const - FirstVNF_RAM ) ) / Max( ( CRS * PN ),( RRS * RRS ) ) ) / Min( FirstVNF_CPU ,Min( Max( DDR,MDR ) ,RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( ( RCSe / Min( MUR ,MLU ) ) * Max( MUM,MUM ) ) ) ) / ( ( ( DS + RRSe ) - RMSe ) - RMSe ) ) ) )", "obj1": 0.18250950570342206, "obj2": 0.5776098277400395}, {"determining": "( ( ( ( ( AMS - ( ( CRS * ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server / ( AMS + Const ) ) ) ) + BR ) / MDR ) * ( ( FirstVNF_RAM_Server - ( ARS * ACS ) ) * BR ) ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( ( Max( Min( MLU ,Min( MLU ,( MLU / MUM ) ) ),MLU ) * RMSe ) ,( ( RCSe - ( ( ( ( RRSe / RRSe ) + RMSe ) - ( MLU - DS ) ) + MUM ) ) + ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN * ( FirstVNF_Mem_Server - AMS ) )", "choosing": "( Max( DS,RRSe ) - ( MUR / DS ) )", "obj1": 0.6349809885931559, "obj2": 0.2866746818373392}, {"determining": "Min( Max( CRS,( Max( Max( FirstVNF_RAM_Server,( ARS * BR ) ),FirstVNF_RAM_Server ) + Max( ( PN + ( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - BR ) ),( Max( ( CRS * FirstVNF_RAM_Server ),ACS ) + ( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,ARS ) + ACS ) ) ) ) ) ) ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "( ( RCSe * ( Max( MLU,( Max( ( Min( MLU ,CS ) - Min( MUR ,MUR ) ),DS ) / Max( ( ( CS / RRSe ) + DS ),DS ) ) ) / DS ) ) / ( RMSe * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.760192902051305}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_RAM ,FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( DS + DS ) - MLU ) / Min( RMSe ,Max( CS,MLU ) ) )", "obj1": 0.6254752851711026, "obj2": 0.29668488139549903}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,( FirstVNF_CPU_Server - MRS ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( MUR / ( MLU - CS ) ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5457730895918398}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( MRS,ARS ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( ( RRSe / MUR ) - ( CS / MUM ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.1634980988593156, "obj2": 0.629031992034724}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - ( RRS + Max( CRS,RRS ) ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( RRSe * ( RRSe * MUM ) ) )", "obj1": 0.07034220532319392, "obj2": 0.7559805203087555}, {"determining": "( Min( MDR ,MRS ) - ( MDR - FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( RMSe - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) ,RMSe ) + ( MUM - RMSe ) )", "obj1": 0.36311787072243346, "obj2": 0.4666970185003274}, {"determining": "Max( ( ARS / Max( Min( FirstVNF_RAM ,PN ),( AMS + FirstVNF_CPU ) ) ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUM + ( ( CS * MUR ) - ( RCSe - MUM ) ) ) )", "obj1": 0.23193916349809887, "obj2": 0.5581668968043034}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( ( ( RRS + Max( FirstVNF_RAM,Min( Max( BR,Const ) ,ACS ) ) ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( ( ( Max( ( ( RMSe - RCSe ) + ( MLU - DS ) ),MUC ) - Min( Max( RRSe,( CS * RRSe ) ) ,( RRSe * ( MLU * RMSe ) ) ) ) / RCSe ) + MLU ) ,Min( MLU ,( Max( DS,MLU ) + Min( MUR ,( ( RMSe / MLU ) * Min( MUR ,Max( MUR,CS ) ) ) ) ) ) ) - ( RCSe / RRSe ) )", "obj1": 0.17300380228136883, "obj2": 0.6098043380980241}, {"determining": "( ( ( FirstVNF_Mem_Server / PN ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MUC * MLU ) + MUM ) ) / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 0.3231939163498099, "obj2": 0.50272025828927}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( Min( Min( FirstVNF_RAM_Server ,AMS ) ,( CRS - FirstVNF_RAM_Server ) ),( Min( ACS ,ACS ) - Min( ACS ,Const ) ) ) )", "choosing": "( ( Max( CS,DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + RRS ) / ( MRS + CRS ) ) - ( MRS * AMS ) )", "choosing": "( ( ( ( ( MUM + MUC ) - Max( CS,RRSe ) ) - MUC ) + ( DS * RMSe ) ) * ( Max( RCSe,MUC ) + ( RMSe + CS ) ) )", "obj1": 0.5779467680608364, "obj2": 0.3265190195927945}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + DDR ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( ( MUM * MUR ) ,( Max( MUR,RMSe ) - Max( Max( RCSe,Min( MLU ,DS ) ),RCSe ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( DDR ,PN ) * Min( AMS ,AMS ) ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - ( MUM * MUR ) ) / Max( RRSe,MLU ) ) )", "obj1": 0.935361216730038, "obj2": 0.061674446631869974}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + AMS ) - FirstVNF_CPU ) - MDR ) + PN ) + ( BR / Min( ARS ,MDR ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( ( ( Max( RCSe,MUR ) + ( ( CS - RRSe ) / RMSe ) ) * MUR ) / MLU ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.007385451211767366}], "3": [{"determining": "Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( DS - CS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_CPU_Server / MRS ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( MUR - Max( Min( MUC ,( DS * ( MUR - RCSe ) ) ),CS ) ) ) + MUC ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM * ( ( ARS / BR ) - CRS ) ) ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( Max( MUR,( ( MLU - Max( CS,MLU ) ) - MLU ) ) * DS ) - RMSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( Const,CRS ) ,FirstVNF_RAM ) * Min( PN ,( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ARS ) ) ) * ( ( ARS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) / ( ( ( RCSe + MUR ) - ( Max( MUC,( ( ( RRSe - CS ) + Max( DS,RRSe ) ) - CS ) ) * DS ) ) + ( ( ( MLU * ( MUM + MUC ) ) / CS ) / ( MUM * RMSe ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - ( Min( PN ,RRS ) * FirstVNF_RAM ) ) ) / ( MRS / PN ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( RMSe ,Max( MUM,( MUC / Min( RCSe ,MLU ) ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - Min( ( Min( FirstVNF_RAM ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ,( ( Max( FirstVNF_CPU,DDR ) * MRS ) + ARS ) ) ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ( MDR * ARS ) ) ) )", "choosing": "Max( ( ( MLU - MUC ) - Min( Min( MUR ,CS ) ,( MLU - Min( ( Max( ( MLU * MUC ),MUM ) - MUM ) ,MUC ) ) ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( MUR * DS ) + ( RMSe * DS ) ) + Max( MLU,CS ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( Min( Min( FirstVNF_Mem_Server ,Const ) ,MDR ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( ( RRSe + MLU ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUR * RCSe ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "( ( AMS - Min( Max( ( ( RRS - FirstVNF_RAM ) + AMS ),MDR ) ,FirstVNF_RAM_Server ) ) * Min( ( ( Min( Max( MRS,MRS ) ,AMS ) * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Max( Max( MUC,RCSe ),( DS + ( MUC * MUC ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Min( FirstVNF_RAM_Server ,( ( RRS + ( MDR - MDR ) ) + BR ) ) ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - Max( MUM,( MUC * ( MUC - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - DDR ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( ( MUR * RCSe ) / MLU ) ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( RCSe * CS ) ) ) )", "obj1": 0.8231939163498099, "obj2": 0.14280437030831059}, {"determining": "( ( ( ACS - ( ACS * ( BR * BR ) ) ) / AMS ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( ( RRSe + RMSe ) ,( MUR * MLU ) ) + ( ( DS + Max( ( MLU - ( MUR * MUM ) ),MUM ) ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + MRS ) - PN ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Max( ( MUR - ( Max( MUR,MUR ) + ( MUR - ( MLU / ( MLU * MUM ) ) ) ) ),CS ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( Min( Min( ( DDR * FirstVNF_RAM ) ,Const ) ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * Max( FirstVNF_Mem_Server,( CRS + RRS ) ) ) ) ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( DS + CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_Mem * ( MDR - ( ( AMS - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( DDR + ( PN - Const ) ) ) ) + RRS ) ) ) )", "choosing": "( ( Max( ( RRSe + DS ),Max( CS,MUR ) ) / Max( ( ( DS - ( RMSe / RCSe ) ) * CS ),( RCSe * DS ) ) ) + ( Max( MUR,MUM ) * ( ( MLU - Min( ( Max( ( CS + DS ),DS ) + CS ) ,( CS - RRSe ) ) ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( ( BR / Max( Min( ACS ,RRS ),ARS ) ) * Min( Min( RRS ,FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( RCSe - ( ( MUM / ( DS / MLU ) ) - RMSe ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( DDR - ( ARS * ACS ) ) ) / ( FirstVNF_CPU_Server + ( Const - CRS ) ) ) ) )", "choosing": "Min( Min( CS ,MUM ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - FirstVNF_Mem_Server )", "choosing": "Min( ( Min( Max( MLU,MUC ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 0.9201520912547528, "obj2": 0.07413170115338605}, {"determining": "Min( Max( FirstVNF_RAM,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( RRSe - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.903041825095057, "obj2": 0.08610442386444708}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( PN / FirstVNF_CPU_Server ) ) - PN ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( ( MLU * RCSe ) / ( MUR * RCSe ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.2718631178707224, "obj2": 0.51741705180633}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( Max( ( FirstVNF_Mem * ( FirstVNF_CPU_Server / CRS ) ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ),BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( ( MUM * Min( ( ( RRSe / MUM ) - RCSe ) ,Max( MUR,( RMSe / MUM ) ) ) ) - ( ( ( ( DS / MLU ) * RMSe ) + ( RCSe + Max( RRSe,MUR ) ) ) * MLU ) ) * DS ) + ( RMSe * DS ) ) + ( Max( ( MLU - RRSe ),MLU ) / Min( MUC ,CS ) ) )", "obj1": 0.6920152091254753, "obj2": 0.21521417013354469}, {"determining": "( ( Const / CRS ) * Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "Min( DS ,Max( ( RMSe * MUR ),( MUC - MUR ) ) )", "obj1": 0.7186311787072244, "obj2": 0.20868490048397736}, {"determining": "( ( Max( PN,( Const - FirstVNF_RAM ) ) / Max( ( CRS * PN ),( RRS * RRS ) ) ) / Min( FirstVNF_CPU ,Min( Max( DDR,MDR ) ,RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( ( RCSe / Min( MUR ,MLU ) ) * Max( MUM,MUM ) ) ) ) / ( ( ( DS + RRSe ) - RMSe ) - RMSe ) ) ) )", "obj1": 0.18250950570342206, "obj2": 0.5776098277400395}, {"determining": "( ( ( ( ( AMS - ( ( CRS * ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server / ( AMS + Const ) ) ) ) + BR ) / MDR ) * ( ( FirstVNF_RAM_Server - ( ARS * ACS ) ) * BR ) ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( ( Max( Min( MLU ,Min( MLU ,( MLU / MUM ) ) ),MLU ) * RMSe ) ,( ( RCSe - ( ( ( ( RRSe / RRSe ) + RMSe ) - ( MLU - DS ) ) + MUM ) ) + ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,( Max( Max( FirstVNF_RAM_Server,( ARS * BR ) ),FirstVNF_RAM_Server ) + Max( ( PN + ( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - BR ) ),( Max( ( CRS * FirstVNF_RAM_Server ),ACS ) + ( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,ARS ) + ACS ) ) ) ) ) ) ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "( ( RCSe * ( Max( MLU,( Max( ( Min( MLU ,CS ) - Min( MUR ,MUR ) ),DS ) / Max( ( ( CS / RRSe ) + DS ),DS ) ) ) / DS ) ) / ( RMSe * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.760192902051305}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_RAM ,FirstVNF_Mem ) - PN ) )", "choosing": "( ( ( DS + DS ) - MLU ) / Min( RMSe ,Max( CS,MLU ) ) )", "obj1": 0.6254752851711026, "obj2": 0.29668488139549903}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( MRS,ARS ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( ( RRSe / MUR ) - ( CS / MUM ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.1634980988593156, "obj2": 0.629031992034724}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - ( RRS + Max( CRS,RRS ) ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( RRSe * ( RRSe * MUM ) ) )", "obj1": 0.07034220532319392, "obj2": 0.7559805203087555}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( ( ( RRS + Max( FirstVNF_RAM,Min( Max( BR,Const ) ,ACS ) ) ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( ( ( Max( ( ( RMSe - RCSe ) + ( MLU - DS ) ),MUC ) - Min( Max( RRSe,( CS * RRSe ) ) ,( RRSe * ( MLU * RMSe ) ) ) ) / RCSe ) + MLU ) ,Min( MLU ,( Max( DS,MLU ) + Min( MUR ,( ( RMSe / MLU ) * Min( MUR ,Max( MUR,CS ) ) ) ) ) ) ) - ( RCSe / RRSe ) )", "obj1": 0.17300380228136883, "obj2": 0.6098043380980241}, {"determining": "( ( ( FirstVNF_Mem_Server / PN ) * Min( PN ,DDR ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( Min( ( MUM + RCSe ) ,( ( MUC * MLU ) + MUM ) ) / Max( Max( RCSe,MUM ),( CS + MUC ) ) )", "obj1": 0.3231939163498099, "obj2": 0.50272025828927}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( Min( Min( FirstVNF_RAM_Server ,AMS ) ,( CRS - FirstVNF_RAM_Server ) ),( Min( ACS ,ACS ) - Min( ACS ,Const ) ) ) )", "choosing": "( ( Max( CS,DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + RRS ) / ( MRS + CRS ) ) - ( MRS * AMS ) )", "choosing": "( ( ( ( ( MUM + MUC ) - Max( CS,RRSe ) ) - MUC ) + ( DS * RMSe ) ) * ( Max( RCSe,MUC ) + ( RMSe + CS ) ) )", "obj1": 0.5779467680608364, "obj2": 0.3265190195927945}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + DDR ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( ( MUM * MUR ) ,( Max( MUR,RMSe ) - Max( Max( RCSe,Min( MLU ,DS ) ),RCSe ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( DDR ,PN ) * Min( AMS ,AMS ) ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - ( MUM * MUR ) ) / Max( RRSe,MLU ) ) )", "obj1": 0.935361216730038, "obj2": 0.061674446631869974}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + AMS ) - FirstVNF_CPU ) - MDR ) + PN ) + ( BR / Min( ARS ,MDR ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( ( ( Max( RCSe,MUR ) + ( ( CS - RRSe ) / RMSe ) ) * MUR ) / MLU ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.007385451211767366}, {"determining": "( ( ( FirstVNF_Mem_Server - PN ) - ( Const / Max( ( CRS * PN ),( RRS * RRS ) ) ) ) + ( Max( ACS,FirstVNF_Mem_Server ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ) - ( DS + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / CRS ) * Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "Min( DS ,Max( ( RMSe * MUR ),( ( MLU * RCSe ) - MUR ) ) )", "obj1": 0.7186311787072244, "obj2": 0.20868490048397736}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),MDR ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_Mem + AMS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( MUR * MUR ) ) ,( ( Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( Max( Const,Const ) ,AMS ),BR ) ,( PN + ARS ) )", "choosing": "( ( MUM + ( MUM - MUC ) ) + ( MLU + DS ) )", "obj1": 0.5627376425855514, "obj2": 0.3384788430603548}, {"determining": "( ( MRS * AMS ) / ( ( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( MRS - FirstVNF_Mem ) ) / AMS ) )", "choosing": "( Min( ( MUC - MUC ) ,MLU ) - Max( Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ),( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "Min( MLU ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,( ( ( ( Const / ACS ) * BR ) - FirstVNF_Mem ) - ARS ) ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( MLU / Max( Max( RCSe,( MUM / ( CS * Max( MUC,( CS + ( DS / MUR ) ) ) ) ) ),( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,( ARS - FirstVNF_RAM_Server ) ) * Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - PN ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,Min( MUM ,Max( MUM,( ( RMSe / MUR ) - MLU ) ) ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( ( MLU * RCSe ) / ( MUR * MLU ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.28517110266159695, "obj2": 0.5131893742501484}, {"determining": "Min( ( ( RRS * FirstVNF_Mem_Server ) - AMS ) ,( CRS / MRS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( MUC / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,RCSe ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,( ( ( ARS / FirstVNF_CPU_Server ) / ( DDR - ( FirstVNF_Mem_Server - DDR ) ) ) + Const ) ) )", "choosing": "Max( Min( DS ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( Min( MUC ,( MLU / ( MUR / DS ) ) ) * CS ) ) ) )", "obj1": 0.8403041825095057, "obj2": 0.11098282165433564}, {"determining": "( ( ( ( BR * MRS ) - MDR ) + PN ) + ( BR / ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Max( MUC,CS ),( RMSe + CS ) )", "obj1": 0.9752851711026616, "obj2": 0.009010282967540579}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - Max( PN,AMS ) ) + PN ) + ( BR / Min( ARS ,MDR ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( ( ( Max( RCSe,MUR ) + RCSe ) * MUR ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( Const,CRS ) ,FirstVNF_RAM ) * Min( PN ,( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ARS ) ) ) * ( ( ARS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) / ( ( ( RCSe + MUR ) - ( Max( MUC,( ( ( RRSe - CS ) + Max( DS,RRSe ) ) - CS ) ) * DS ) ) + ( ( ( MLU * ( MUM + MUC ) ) / CS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,MRS ) * ( ( FirstVNF_Mem_Server - AMS ) - MRS ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Max( Max( RRSe,RCSe ),RMSe ) ,( ( RCSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) ) / RRS ) * AMS ) ,( FirstVNF_RAM * ARS ) )", "choosing": "Max( ( DS / Max( Max( RMSe,MUM ),( MLU + Min( RRSe ,( ( Min( MUC ,RRSe ) - ( DS + RCSe ) ) + Min( ( MUM * MLU ) ,RCSe ) ) ) ) ) ),( ( CS * DS ) - RCSe ) )", "obj1": 0.6901140684410646, "obj2": 0.22949895155886088}, {"determining": "Min( FirstVNF_Mem_Server ,( Min( FirstVNF_CPU_Server ,( ( PN - Const ) + PN ) ) - PN ) )", "choosing": "( ( MUR - ( MLU * ( MUC / ( ( RRSe + ( Max( DS,MLU ) - CS ) ) - Min( Max( RMSe,MUR ) ,CS ) ) ) ) ) / Min( RMSe ,Min( MUC ,MUC ) ) )", "obj1": 0.35551330798479086, "obj2": 0.45971618730601926}, {"determining": "Min( ( Min( CRS ,( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / MRS ) ) - AMS ) ,Min( Const ,ACS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( ( RRSe * CS ) / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,MUR ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( DS / ( ( MUC * RRSe ) / RCSe ) ) - ( RMSe / CS ) ) / ( ( RRSe / MUR ) - ( CS / MUM ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Min( ( MDR * AMS ) ,( FirstVNF_RAM * ARS ) ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / Min( ( RCSe / RMSe ) ,Min( CS ,RMSe ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5246593947209274}, {"determining": "( ( ( Min( Max( BR,MRS ) ,FirstVNF_CPU ) - AMS ) + ( MRS - FirstVNF_Mem ) ) / AMS )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( Max( Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ),RRSe ) ,Min( MUC ,MUR ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,( ( ( AMS * ACS ) / DDR ) + ( RRS * CRS ) ) ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * ( RRSe + Min( DS ,( ( ( MUC + MLU ) / MUR ) * MUC ) ) ) ) / Max( DS,Max( RMSe,MUM ) ) )", "obj1": 0.9657794676806084, "obj2": 0.037018318496857355}, {"determining": "( Min( Max( ( AMS - BR ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * BR )", "choosing": "Min( Min( Max( MUR,MUM ) ,( ( ( RRSe / MUC ) * RRSe ) * ( RCSe - ( Max( MUC,( Max( CS,RCSe ) - ( RCSe - RCSe ) ) ) * MUM ) ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.21102661596958175, "obj2": 0.5557855523360038}, {"determining": "( ( Const * Min( Max( Const,Const ) ,AMS ) ) / ( BR - PN ) )", "choosing": "( ( ( MUM + ( MUM - MUC ) ) + ( MLU + DS ) ) + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0011284028428857173}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) + Max( ( AMS - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * RRS ) ) ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( DS - ( ( DS / MUR ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( RRS ,BR ),( Const * CRS ) ) * ( FirstVNF_CPU - BR ) ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( ( MUR + Max( CS,RCSe ) ) ,( ( RCSe - ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ) ) + ( Max( MLU,DS ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ARS / Max( Min( FirstVNF_RAM ,PN ),( PN + FirstVNF_CPU ) ) ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUR + ( ( CS * MUR ) - ( RCSe - MUM ) ) ) )", "obj1": 0.2414448669201521, "obj2": 0.5364090944580744}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - Max( BR,MRS ) ) )", "choosing": "( Max( DS,RRSe ) - ( RCSe * Min( Max( Max( RRSe,RCSe ),RMSe ) ,( MUC * MUR ) ) ) )", "obj1": 0.9182509505703422, "obj2": 0.08479048656254809}, {"determining": "Min( Max( CRS,( Max( Max( FirstVNF_RAM_Server,( ARS * BR ) ),FirstVNF_RAM_Server ) + Max( ( PN + ( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - BR ) ),( Max( ( CRS * FirstVNF_RAM_Server ),ACS ) + ( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ACS ) ) ) ) ) ) ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "( ( RCSe * ( Max( MLU,( ( RRSe - RCSe ) / Max( ( ( CS / RRSe ) + DS ),DS ) ) ) / DS ) ) / ( RMSe * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.760192902051305}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_CPU ),( ( ( ( FirstVNF_Mem / MDR ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Min( RCSe ,MUM ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17870722433460076, "obj2": 0.5855879543622823}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( MRS + CRS ) ) )", "choosing": "( ( ( MUM / ( ( MUM / MLU ) + MUC ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17490494296577946, "obj2": 0.5994139578363669}, {"determining": "( Min( Const ,BR ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( Max( RMSe,( MLU + RCSe ) ) ,( ( RCSe - ( MUM + MUM ) ) + ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * FirstVNF_Mem_Server ) - AMS ) ,( CRS / MRS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( MUC / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,RCSe ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( DDR,( BR + FirstVNF_RAM_Server ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( RMSe / MLU ) ) ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11026615969581749, "obj2": 0.647452134043304}, {"determining": "Min( Max( CRS,( Max( Max( FirstVNF_RAM_Server,( ARS * BR ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / MRS ) ) ) ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "( ( RCSe * ( Max( MLU,( Max( ( Min( CS ,CS ) - Min( MUR ,MUR ) ),DS ) / Max( ( ( CS / RRSe ) + DS ),DS ) ) ) / DS ) ) / ( RMSe * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.760192902051305}, {"determining": "Min( Max( Max( DDR,AMS ),( ( MRS - FirstVNF_CPU_Server ) * MRS ) ) ,( PN / ( ( ( ( ( FirstVNF_Mem / MDR ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) / Max( FirstVNF_CPU_Server,ARS ) ) ) )", "choosing": "( ( Max( ( RMSe / ( MLU - ( DS + ( RMSe / ( MLU + MUR ) ) ) ) ),MUR ) * RMSe ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( ACS - ( Max( FirstVNF_CPU,MRS ) + MRS ) ) )", "choosing": "( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) / ( ( MLU * RCSe ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) )", "obj1": 0.629277566539924, "obj2": 0.279155883884035}], "4": [{"determining": "Min( Max( CRS,( Max( Max( FirstVNF_RAM_Server,( ARS * BR ) ),FirstVNF_RAM_Server ) + Max( ( PN + ( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - BR ) ),( Max( ( CRS * FirstVNF_RAM_Server ),ACS ) + ( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,ARS ) + ACS ) ) ) ) ) ) ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "( ( RCSe * ( Max( MLU,( Max( ( Min( MLU ,CS ) - Min( MUR ,MUR ) ),DS ) / Max( ( ( CS / RRSe ) + DS ),DS ) ) ) / DS ) ) / ( RMSe * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.760192902051305}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,Max( DDR,FirstVNF_Mem ) ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * ( ( ARS - ( FirstVNF_CPU_Server / PN ) ) + PN ) )", "choosing": "Max( Max( Min( DS ,Max( MUM,( ( Min( RRSe ,CS ) * ( ( RRSe / RCSe ) - Min( RRSe ,DS ) ) ) + RRSe ) ) ),MUC ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_CPU_Server / MRS ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( MUR - Max( Min( MUC ,( DS * ( MUR - RCSe ) ) ),CS ) ) ) + MUC ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,( ( Min( CRS ,( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / MRS ) ) - AMS ) + Max( ( PN + ( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - BR ) ),( Max( ( CRS * FirstVNF_RAM_Server ),ACS ) + ( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,ARS ) + ACS ) ) ) ) ) ) ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "( ( RCSe * ( Max( MLU,( Max( ( Min( MLU ,RMSe ) - Min( MUR ,MUR ) ),DS ) / Max( ( ( CS / RRSe ) + DS ),DS ) ) ) / DS ) ) / ( RMSe * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.760192902051305}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( ( ( CRS * AMS ) + PN ) * ARS ) * ( CRS + ACS ) ) ) + ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( DS * ( ( ( RCSe - ( ( RCSe + Min( RCSe ,MLU ) ) + MUC ) ) * Min( Max( DS,MUR ) ,MUM ) ) + ( DS - CS ) ) ) / Max( DS,Max( RMSe,MUM ) ) )", "obj1": 0.5608365019011406, "obj2": 0.30913357764386223}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - ( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) ) ) / AMS )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( ( MUM * MUR ) ,Min( MUC ,MUR ) ) ) * CS ) )", "obj1": 0.8003802281368821, "obj2": 0.16875293031012426}, {"determining": "( ( ( ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,PN ) * PN ) + ( ( Const * Max( ( MRS - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * MRS ) ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * ( DS * MUM ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.596958174904943, "obj2": 0.2706435928786264}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( Min( Min( ( DDR * FirstVNF_RAM ) ,Const ) ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * Max( FirstVNF_Mem_Server,( CRS + RRS ) ) ) ) ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( DS + CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( DS - CS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Min( RRSe ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.7015209125475285, "obj2": 0.18943427505725996}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( FirstVNF_CPU,BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( MUR * DS ) + ( RMSe * DS ) ) + Max( MLU,CS ) )", "obj1": 0.6596958174904943, "obj2": 0.24795919283556372}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( DDR,( BR + FirstVNF_RAM_Server ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( RMSe / MLU ) ) ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11026615969581749, "obj2": 0.647452134043304}, {"determining": "Min( ( ( ( BR + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,( ( ( ARS / FirstVNF_CPU_Server ) / ( DDR - ( FirstVNF_Mem_Server - DDR ) ) ) + Const ) ) )", "choosing": "Max( Min( DS ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( Min( MUC ,( MLU / ( MUR / DS ) ) ) * CS ) ) ) )", "obj1": 0.8403041825095057, "obj2": 0.11098282165433564}, {"determining": "( Min( ( DDR / MRS ) ,FirstVNF_Mem_Server ) / ( ( FirstVNF_RAM + Min( AMS ,MDR ) ) - ARS ) )", "choosing": "( ( Max( Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( RRSe / ( MLU / MUR ) ) / Min( MUC ,RCSe ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) ),DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 0.8174904942965779, "obj2": 0.13744802757295274}, {"determining": "Min( ( ( ( AMS - ( ( CRS * ( FirstVNF_Mem - FirstVNF_RAM ) ) + MDR ) ) + BR ) * Min( AMS ,AMS ) ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( RCSe - ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ) ) / Max( RRSe,MLU ) ) )", "obj1": 0.8935361216730038, "obj2": 0.09219050216031655}, {"determining": "( ( AMS - Min( Max( ( ( RRS - FirstVNF_RAM ) + AMS ),MDR ) ,FirstVNF_RAM_Server ) ) * Min( ( ( Min( Max( MRS,MRS ) ,AMS ) * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Max( Max( MUC,RCSe ),( DS + ( MUC * MUC ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "( Min( ( ARS - RRS ) ,MRS ) - ( MDR - FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( ( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( MLU - RMSe ) + Min( DS ,RRSe ) ) ) / ( ( MLU * RCSe ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) ) - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) ,RMSe ) + ( MUM - RMSe ) )", "obj1": 0.3041825095057034, "obj2": 0.4832791266920754}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( MRS,ARS ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( ( RRSe / MUR ) - ( CS / MUM ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.1634980988593156, "obj2": 0.629031992034724}, {"determining": "( ( Min( Max( Const,CRS ) ,FirstVNF_RAM ) * Min( PN ,( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ARS ) ) ) * ( ( ARS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) / ( ( ( RCSe + MUR ) - ( Max( MUC,( ( ( RRSe - CS ) + Max( DS,RRSe ) ) - CS ) ) * DS ) ) + ( ( ( MLU * ( MUM + MUC ) ) / CS ) / ( MUM * RMSe ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "Min( ( ( ( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) ) / RRS ) * AMS ) ,( FirstVNF_RAM * ARS ) )", "choosing": "Max( ( DS / Max( Max( RMSe,MUM ),( MLU + Min( RRSe ,( ( Min( MUC ,RRSe ) - ( DS + RCSe ) ) + Min( ( MUM * MLU ) ,RCSe ) ) ) ) ) ),( ( CS * DS ) - RCSe ) )", "obj1": 0.6901140684410646, "obj2": 0.22949895155886088}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - ( RRS + Max( CRS,RRS ) ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( RRSe * ( RRSe * MUM ) ) )", "obj1": 0.07034220532319392, "obj2": 0.7559805203087555}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( Max( ( FirstVNF_Mem * ( FirstVNF_CPU_Server / CRS ) ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ),BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( ( MUM * Min( ( ( RRSe / MUM ) - RCSe ) ,Max( MUR,( RMSe / MUM ) ) ) ) - ( ( ( ( DS / MLU ) * RMSe ) + ( RCSe + Max( RRSe,MUR ) ) ) * MLU ) ) * DS ) + ( RMSe * DS ) ) + ( Max( ( MLU - RRSe ),MLU ) / Min( MUC ,CS ) ) )", "obj1": 0.6920152091254753, "obj2": 0.21521417013354469}, {"determining": "( Min( Max( ( AMS - BR ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * BR )", "choosing": "Min( Min( Max( MUR,MUM ) ,( ( ( RRSe / MUC ) * RRSe ) * ( RCSe - ( Max( MUC,( Max( CS,RCSe ) - ( RCSe - RCSe ) ) ) * MUM ) ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.21102661596958175, "obj2": 0.5557855523360038}, {"determining": "( ( ( FirstVNF_CPU - BR ) + FirstVNF_RAM_Server ) + ( DDR / MDR ) )", "choosing": "Min( ( Max( ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( Max( RCSe,( Min( DS ,( ( ( RMSe / MUC ) - MUR ) + DS ) ) - RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Min( FirstVNF_Mem_Server ,( Min( FirstVNF_CPU_Server ,( ( PN - Const ) + PN ) ) - PN ) )", "choosing": "( ( MUR - ( MLU * ( MUC / ( ( RRSe + ( Max( DS,MLU ) - CS ) ) - Min( Max( RMSe,MUR ) ,CS ) ) ) ) ) / Min( RMSe ,Min( MUC ,MUC ) ) )", "obj1": 0.35551330798479086, "obj2": 0.45971618730601926}, {"determining": "( Min( ( RRS / PN ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Min( ( BR * FirstVNF_Mem ) ,Max( ( ( MRS - FirstVNF_CPU ) / ( CRS - PN ) ),BR ) ) / FirstVNF_RAM ) )", "choosing": "( ( Max( MUR,MUC ) / ( Max( ( MLU / MUM ),RRSe ) / MUM ) ) * Min( ( MUM / MUC ) ,( DS - CS ) ) )", "obj1": 0.30228136882129275, "obj2": 0.502039539954397}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( PN - PN ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( MUM + ( MUM - MUC ) ) + ( ( CS + ( ( MUC * MUR ) / MUR ) ) + MUC ) ) ) / CS ) - Max( RCSe,MUM ) )", "obj1": 0.188212927756654, "obj2": 0.5680260794857914}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( Min( Max( FirstVNF_CPU,MRS ) ,( ( RRS * PN ) - PN ) ) ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - CRS ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU / ( ( RCSe / MLU ) - ( RRSe / MLU ) ) ) ),Min( RCSe ,( MUM - ( RCSe * Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) ) ) )", "obj1": 0.8992395437262357, "obj2": 0.08046334128373532}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( ( ( RRS + Max( FirstVNF_RAM,Min( Max( BR,Const ) ,ACS ) ) ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( ( ( Max( ( ( RMSe - RCSe ) + ( MLU - DS ) ),MUC ) - Min( Max( RRSe,( CS * RRSe ) ) ,( RRSe * ( MLU * RMSe ) ) ) ) / RCSe ) + MLU ) ,Min( MLU ,( Max( DS,MLU ) + Min( MUR ,( ( RMSe / MLU ) * Min( MUR ,Max( MUR,CS ) ) ) ) ) ) ) - ( RCSe / RRSe ) )", "obj1": 0.17300380228136883, "obj2": 0.6098043380980241}, {"determining": "Max( ( ARS / Max( Min( FirstVNF_RAM ,PN ),( PN + FirstVNF_CPU ) ) ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUR + ( ( CS * MUR ) - ( RCSe - MUM ) ) ) )", "obj1": 0.2414448669201521, "obj2": 0.5364090944580744}, {"determining": "Min( ( Min( DDR ,PN ) * Min( AMS ,AMS ) ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - ( MUM * MUR ) ) / Max( RRSe,MLU ) ) )", "obj1": 0.935361216730038, "obj2": 0.061674446631869974}, {"determining": "( FirstVNF_Mem - ( ( ( ( AMS - ( ( CRS * ( FirstVNF_Mem - ARS ) ) + MDR ) ) + BR ) / MDR ) * ( FirstVNF_CPU - BR ) ) )", "choosing": "( Max( ( ( MUM * CS ) + Max( MUC,DS ) ),( Max( ( ( MLU * MUR ) - MLU ),RMSe ) + ( MUM / RCSe ) ) ) / ( ( ( RRSe / MUR ) - ( CS / MUM ) ) * ( ( Max( DS,MUM ) - Min( MLU ,MUM ) ) - Max( ( MUR + RRSe ),( MUM * CS ) ) ) ) )", "obj1": 0.9714828897338403, "obj2": 0.03120418926458439}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * ( RRSe + Min( DS ,( ( CS * Min( MLU ,MUR ) ) * MUC ) ) ) ) / ( MUR + ( ( RMSe + DS ) - RMSe ) ) )", "obj1": 0.9486692015209125, "obj2": 0.04037201730011143}, {"determining": "( ( ( ( BR * MRS ) - MDR ) + PN ) + ( BR / ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Max( MUC,CS ),( RMSe + CS ) )", "obj1": 0.9752851711026616, "obj2": 0.009010282967540579}, {"determining": "( Min( FirstVNF_RAM_Server ,( ARS - FirstVNF_RAM_Server ) ) * Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - PN ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,Min( MUM ,Max( MUM,( ( RMSe / MUR ) - MLU ) ) ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( ( MLU * RCSe ) / ( MUR * MLU ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.28517110266159695, "obj2": 0.5131893742501484}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - FirstVNF_Mem_Server )", "choosing": "Min( ( Min( Max( MLU,MUC ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 0.9201520912547528, "obj2": 0.07413170115338605}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( MRS + CRS ) ) )", "choosing": "( ( ( MUM / ( ( MUM / MLU ) + MUC ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17490494296577946, "obj2": 0.5994139578363669}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_CPU ),( ( ( ( FirstVNF_Mem / MDR ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Min( RCSe ,MUM ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17870722433460076, "obj2": 0.5855879543622823}, {"determining": "( ( Max( PN,( Const - FirstVNF_RAM ) ) / Max( ( CRS * PN ),( RRS * RRS ) ) ) / Min( RRS ,Min( Max( DDR,MDR ) ,RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( ( RCSe / Min( MUR ,MLU ) ) * Max( MUM,MUM ) ) ) ) / ( ( ( DS + RRSe ) - RMSe ) - ( MUR + CS ) ) ) ) )", "obj1": 0.2300380228136882, "obj2": 0.5502326985412844}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,( ( ( AMS * ACS ) / DDR ) + ( RRS * CRS ) ) ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * ( RRSe + Min( DS ,( ( ( MUC + MLU ) / MUR ) * MUC ) ) ) ) / Max( DS,Max( RMSe,MUM ) ) )", "obj1": 0.9657794676806084, "obj2": 0.037018318496857355}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + AMS ) - FirstVNF_CPU ) - MDR ) + PN ) + ( BR / Min( ARS ,MDR ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( ( ( Max( RCSe,MUR ) + ( ( CS - RRSe ) / RMSe ) ) * MUR ) / MLU ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.007385451211767366}, {"determining": "( ( Max( PN,( Const - FirstVNF_RAM ) ) / Max( ( CRS * PN ),( RRS * RRS ) ) ) / Min( FirstVNF_CPU ,Min( Max( DDR,MDR ) ,RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( ( RCSe / Min( MUR ,MLU ) ) * Max( MUM,MUM ) ) ) ) / ( ( ( DS + RRSe ) - RMSe ) - RMSe ) ) ) )", "obj1": 0.18250950570342206, "obj2": 0.5776098277400395}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( DDR * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUR * RCSe ) ) + ( MUM - CS ) ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.2718631178707224, "obj2": 0.5172855768011667}, {"determining": "( ( Const * Min( Max( Const,Const ) ,AMS ) ) / ( BR - PN ) )", "choosing": "( ( ( MUM + ( MUM - MUC ) ) + ( MLU + DS ) ) + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0011284028428857173}, {"determining": "( ( ARS + PN ) + ( BR / Min( ARS ,MDR ) ) )", "choosing": "Max( Max( MUC,CS ),( ( MUC + MLU ) / ( MUM + ( ( CS * MUR ) - ( MUR - MUM ) ) ) ) )", "obj1": 0.22813688212927757, "obj2": 0.5535513921656631}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( ( ( RRS + ( MDR - MDR ) ) + BR ) / CRS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - BR ) ) ) ) * BR )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( CS * MUR ) ) ,Max( Max( ( DS / Min( RRSe ,( RMSe * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.24904942965779467, "obj2": 0.5273066123538753}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( Const * AMS ) ) ) * Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - PN ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( MUM * ( ( ( MLU * RCSe ) / ( CS * MLU ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5235870788156413}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - Max( BR,FirstVNF_RAM ) ) )", "choosing": "( Max( DS,DS ) - ( RCSe * Min( Max( Max( RRSe,RCSe ),RMSe ) ,( MUC * MUR ) ) ) )", "obj1": 0.9277566539923955, "obj2": 0.0713842871221237}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( Min( Min( FirstVNF_Mem_Server ,Const ) ,MDR ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( ( RRSe + MLU ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUR * RCSe ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "( ( FirstVNF_Mem_Server + AMS ) + ( ( Min( AMS ,FirstVNF_Mem ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * ( RRSe + Min( DS ,( ( CS * Min( MLU ,MUR ) ) * MUC ) ) ) ) / ( MUR + ( ( RMSe + DS ) - RMSe ) ) )", "obj1": 0.9486692015209125, "obj2": 0.04037201730011143}, {"determining": "Min( Max( PN,AMS ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - MRS ) ) )", "choosing": "Min( ( Min( CS ,CS ) / ( MUM * RRSe ) ) ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 0.9296577946768061, "obj2": 0.06492634646358728}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_Mem * ( MDR - ( ( AMS - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( DDR + ( PN - Const ) ) ) ) + RRS ) ) ) )", "choosing": "( ( Max( ( RRSe + DS ),Max( CS,MUR ) ) / Max( ( ( DS - ( RMSe / RCSe ) ) * CS ),( RCSe * DS ) ) ) + ( Max( MUR,MUM ) * ( ( MLU - Min( ( Max( ( CS + DS ),DS ) + CS ) ,( CS - RRSe ) ) ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Min( ( MDR * AMS ) ,( FirstVNF_RAM * ARS ) ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / Min( ( RCSe / RMSe ) ,Min( CS ,RMSe ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5246593947209274}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( ( ( AMS - PN ) / ( FirstVNF_RAM_Server - PN ) ) - Max( Max( DDR,( ( ( AMS * ACS ) / DDR ) + ( RRS * CRS ) ) ),( DDR / ACS ) ) ) )", "choosing": "( ( DS * ( RRSe + Min( DS ,( ( ( MUC + MLU ) / MUR ) * MUC ) ) ) ) / Max( DS,MLU ) )", "obj1": 0.9315589353612167, "obj2": 0.06379670577292061}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Min( ( MDR * ( ARS / ( ( ( BR * AMS ) - ARS ) * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_RAM * ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) ) ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * ( ( MUR / DS ) - MLU ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / Min( ( RCSe / RMSe ) ,Min( CS ,RMSe ) ) ) )", "obj1": 0.2585551330798479, "obj2": 0.5238532318683589}, {"determining": "( ( RRS - ( FirstVNF_RAM * ( ( ARS / BR ) - CRS ) ) ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( Max( MUR,( ( MLU - Max( CS,MLU ) ) - MLU ) ) * DS ) - RMSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - ( Min( PN ,RRS ) * FirstVNF_RAM ) ) ) / ( MRS / PN ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( RMSe ,Max( MUM,( MUC / Min( RCSe ,MLU ) ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - Min( ( Min( FirstVNF_RAM ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ,( ( Max( FirstVNF_CPU,DDR ) * MRS ) + ARS ) ) ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ( MDR * ARS ) ) ) )", "choosing": "Max( ( ( MLU - MUC ) - Min( Min( MUR ,CS ) ,( MLU - Min( ( Max( ( MLU * MUC ),MUM ) - MUM ) ,MUC ) ) ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Min( FirstVNF_RAM_Server ,( ( RRS + ( MDR - MDR ) ) + BR ) ) ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - Max( MUM,( MUC * ( MUC - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - ( ACS * ( BR * BR ) ) ) / AMS ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( ( RRSe + RMSe ) ,( MUR * MLU ) ) + ( ( DS + Max( ( MLU - ( MUR * MUM ) ),MUM ) ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + MRS ) - PN ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Max( ( MUR - ( Max( MUR,MUR ) + ( MUR - ( MLU / ( MLU * MUM ) ) ) ) ),CS ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Max( Min( ACS ,RRS ),ARS ) ) * Min( Min( RRS ,FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( RCSe - ( ( MUM / ( DS / MLU ) ) - RMSe ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( DDR - ( ARS * ACS ) ) ) / ( FirstVNF_CPU_Server + ( Const - CRS ) ) ) ) )", "choosing": "Min( Min( CS ,MUM ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - ( ( CRS * ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server / ( AMS + Const ) ) ) ) + BR ) / MDR ) * ( ( FirstVNF_RAM_Server - ( ARS * ACS ) ) * BR ) ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( ( Max( Min( MLU ,Min( MLU ,( MLU / MUM ) ) ),MLU ) * RMSe ) ,( ( RCSe - ( ( ( ( RRSe / RRSe ) + RMSe ) - ( MLU - DS ) ) + MUM ) ) + ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( Min( Min( FirstVNF_RAM_Server ,AMS ) ,( CRS - FirstVNF_RAM_Server ) ),( Min( ACS ,ACS ) - Min( ACS ,Const ) ) ) )", "choosing": "( ( Max( CS,DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + DDR ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( ( MUM * MUR ) ,( Max( MUR,RMSe ) - Max( Max( RCSe,Min( MLU ,DS ) ),RCSe ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - PN ) - ( Const / Max( ( CRS * PN ),( RRS * RRS ) ) ) ) + ( Max( ACS,FirstVNF_Mem_Server ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ) - ( DS + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),MDR ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_Mem + AMS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( MUR * MUR ) ) ,( ( Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( ( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( MRS - FirstVNF_Mem ) ) / AMS ) )", "choosing": "( Min( ( MUC - MUC ) ,MLU ) - Max( Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ),( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "Min( MLU ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,( ( ( ( Const / ACS ) * BR ) - FirstVNF_Mem ) - ARS ) ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( MLU / Max( Max( RCSe,( MUM / ( CS * Max( MUC,( CS + ( DS / MUR ) ) ) ) ) ),( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * FirstVNF_Mem_Server ) - AMS ) ,( CRS / MRS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( MUC / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,RCSe ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - Max( PN,AMS ) ) + PN ) + ( BR / Min( ARS ,MDR ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( ( ( Max( RCSe,MUR ) + RCSe ) * MUR ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( Const,CRS ) ,FirstVNF_RAM ) * Min( PN ,( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ARS ) ) ) * ( ( ARS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) / ( ( ( RCSe + MUR ) - ( Max( MUC,( ( ( RRSe - CS ) + Max( DS,RRSe ) ) - CS ) ) * DS ) ) + ( ( ( MLU * ( MUM + MUC ) ) / CS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,MRS ) * ( ( FirstVNF_Mem_Server - AMS ) - MRS ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Max( Max( RRSe,RCSe ),RMSe ) ,( ( RCSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( CRS ,( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / MRS ) ) - AMS ) ,Min( Const ,ACS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( ( RRSe * CS ) / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,MUR ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( DS / ( ( MUC * RRSe ) / RCSe ) ) - ( RMSe / CS ) ) / ( ( RRSe / MUR ) - ( CS / MUM ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( BR,MRS ) ,FirstVNF_CPU ) - AMS ) + ( MRS - FirstVNF_Mem ) ) / AMS )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( Max( Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ),RRSe ) ,Min( MUC ,MUR ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) + Max( ( AMS - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * RRS ) ) ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( DS - ( ( DS / MUR ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( RRS ,BR ),( Const * CRS ) ) * ( FirstVNF_CPU - BR ) ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( ( MUR + Max( CS,RCSe ) ) ,( ( RCSe - ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ) ) + ( Max( MLU,DS ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( Max( RMSe,( MLU + RCSe ) ) ,( ( RCSe - ( MUM + MUM ) ) + ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * FirstVNF_Mem_Server ) - AMS ) ,( CRS / MRS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( MUC / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,RCSe ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( DDR,AMS ),( ( MRS - FirstVNF_CPU_Server ) * MRS ) ) ,( PN / ( ( ( ( ( FirstVNF_Mem / MDR ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) / Max( FirstVNF_CPU_Server,ARS ) ) ) )", "choosing": "( ( Max( ( RMSe / ( MLU - ( DS + ( RMSe / ( MLU + MUR ) ) ) ) ),MUR ) * RMSe ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_CPU ) + ( MRS - Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) ) ) / AMS )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( ( MUM * ( MUM * DS ) ) ,RMSe ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Max( MDR,MRS ) ) + ( MRS - FirstVNF_Mem ) ) + ( MRS - FirstVNF_Mem ) ) / AMS )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( Max( Min( Max( RRSe,( MUC + MUM ) ) ,( MUC * MUR ) ),RRSe ) ,Min( MUC ,MUR ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,BR ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ACS ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( Max( Max( MUR,RRSe ),( ( Max( MUC,( MUR - MLU ) ) / Max( RCSe,MUC ) ) / Max( MUR,( MUR / DS ) ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - ( ARS + FirstVNF_Mem ) ) ,MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( RMSe - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) ,RMSe ) + ( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * Max( ( CS / RMSe ),Min( MUC ,RCSe ) ) ) / ( ( ( MUR - ( MLU + Max( RRSe,MUC ) ) ) / ( CS + RCSe ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,( ( ( MDR * BR ) - FirstVNF_RAM_Server ) - ARS ) ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( MLU / Max( Max( RCSe,MUM ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * Max( Min( Max( Const,Const ) ,AMS ),BR ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUM + ( MUM - MUC ) ) + ( MLU + DS ) ),RRSe ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( RRS * FirstVNF_Mem_Server ) - AMS ) ,Min( Const ,ACS ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,( ( ( ARS / FirstVNF_CPU_Server ) / ( DDR - ( FirstVNF_Mem_Server - DDR ) ) ) + Const ) ) )", "choosing": "Max( Min( DS ,( MLU / RCSe ) ),Min( RCSe ,Max( ( ( MUC / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,MUR ) ,CS ) ) ) * RCSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( Max( RRSe,MUC ) + Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( ( Max( ( CRS * PN ),( RRS * RRS ) ) + ( MRS - FirstVNF_Mem ) ) / AMS ) )", "choosing": "( ( MUM + MUC ) - Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR * AMS ) ,( FirstVNF_RAM * ARS ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) ) * Min( MUR ,RMSe ) ) - Max( ( RCSe - CS ),( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( Min( DS ,Max( ( RMSe * MUR ),( MUC - MUR ) ) ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Min( FirstVNF_RAM_Server ,( ( RRS + ( MDR - MDR ) ) + BR ) ) ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - Max( MUM,( MUC * ( MUC - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,( ( AMS - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * RRS ) ) ) ) - ARS ) ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( Max( MLU,MUC ) / Max( Max( RCSe,MUM ),( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( RRS - RRS ) - Min( ACS ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,Max( DDR,FirstVNF_Mem ) ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * ( ( ARS - ( FirstVNF_CPU_Server / PN ) ) + PN ) )", "choosing": "Max( Max( Min( DS ,Max( MUM,( ( Min( RRSe ,CS ) * ( ( RRSe / RCSe ) - Min( RRSe ,DS ) ) ) + RRSe ) ) ),MUC ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,( ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( DDR * Const ) ,( ACS / PN ) ) ) + Max( ( PN + ( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - BR ) ),( Max( ( CRS * FirstVNF_RAM_Server ),ACS ) + ( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,ARS ) + ACS ) ) ) ) ) ) ,( Max( ( Const - FirstVNF_CPU ),FirstVNF_CPU_Server ) + ARS ) )", "choosing": "( ( RCSe * ( DS * DS ) ) / ( RMSe * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7582812570701774}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( ( ( CRS * AMS ) + PN ) * ARS ) * ( CRS + ACS ) ) ) + ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( DS * ( ( ( RCSe - ( ( RCSe + Min( RCSe ,MLU ) ) + MUC ) ) * Min( Max( DS,MUR ) ,MUM ) ) + ( DS - CS ) ) ) / Max( DS,Max( RMSe,MUM ) ) )", "obj1": 0.5608365019011406, "obj2": 0.30913357764386223}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( Min( Min( ( DDR * FirstVNF_RAM ) ,Const ) ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * Max( FirstVNF_Mem_Server,( CRS + RRS ) ) ) ) ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( DS + CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( DS - CS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / BR ) - ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Min( DS ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.876425855513308, "obj2": 0.0707244269841918}, {"determining": "( ( ( ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,PN ) * PN ) + ( ( Const * Max( ( MRS - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * MRS ) ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * ( DS * MUM ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.596958174904943, "obj2": 0.2706435928786264}, {"determining": "Min( ( ( ( BR + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,( ( ( ARS / FirstVNF_CPU_Server ) / ( DDR - ( FirstVNF_Mem_Server - DDR ) ) ) + Const ) ) )", "choosing": "Max( Min( DS ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( Min( MUC ,( MLU / ( MUR / DS ) ) ) * CS ) ) ) )", "obj1": 0.8403041825095057, "obj2": 0.11098282165433564}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( DDR,( BR + FirstVNF_RAM_Server ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( RMSe / MLU ) ) ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11026615969581749, "obj2": 0.647452134043304}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( RRS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( ( DS * ( RRSe + ( MUM - CS ) ) ) / Max( DS,Max( RMSe,MUM ) ) )", "obj1": 0.6520912547528517, "obj2": 0.240619280019109}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / Const ) ) - PN ) ) ,FirstVNF_Mem ),Min( Min( MDR ,PN ) ,( AMS / BR ) ) ) ) ,Min( Min( ( MDR * PN ) ,( Max( FirstVNF_RAM_Server,MDR ) + FirstVNF_Mem_Server ) ) ,Max( ( RRS - Max( FirstVNF_Mem,ARS ) ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU / Max( ( ( ( RMSe / ( MUC + DS ) ) + Max( MUC,RCSe ) ) * CS ),MUC ) ) ),( ( RMSe / ( Max( ( MUM / ( ( CS / CS ) + DS ) ),MUM ) - RMSe ) ) * RCSe ) )", "obj1": 0.7737642585551331, "obj2": 0.1862294236638698}, {"determining": "Max( Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Max( Max( RRSe,RCSe ),RMSe ) ) / CS ) - Max( RCSe,MUM ) )", "obj1": 0.9220532319391636, "obj2": 0.05750662905634403}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Min( RRSe ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.7015209125475285, "obj2": 0.18943427505725996}, {"determining": "( ( FirstVNF_RAM - ( BR + CRS ) ) - ( ( MRS / CRS ) * ( ( RRS / BR ) / ( PN + BR ) ) ) )", "choosing": "Min( Min( RRSe ,( ( Min( MLU ,Min( RMSe ,( RRSe - Max( RRSe,MLU ) ) ) ) - RMSe ) / CS ) ) ,( ( ( Max( ( ( Max( MUC,CS ) - MLU ) * RMSe ),Max( Min( RRSe ,MUM ),MUR ) ) / DS ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.935361216730038, "obj2": 0.0223075541840483}, {"determining": "( Min( ( DDR / MRS ) ,FirstVNF_Mem_Server ) / ( ( FirstVNF_RAM + Min( AMS ,MDR ) ) - ARS ) )", "choosing": "( ( Max( Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( RRSe / ( MLU / MUR ) ) / Min( MUC ,RCSe ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) ),DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 0.8174904942965779, "obj2": 0.13744802757295274}, {"determining": "Max( ( RRS - MRS ),( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Min( BR ,MDR ) / AMS ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( Min( Max( ( ( MUM - RCSe ) / RMSe ),( RRSe - MLU ) ) ,RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.7908745247148289, "obj2": 0.1607645699097716}, {"determining": "( ( AMS - Min( Max( ( ( RRS - FirstVNF_RAM ) + AMS ),MDR ) ,FirstVNF_RAM_Server ) ) * Min( ( ( Min( Max( MRS,MRS ) ,AMS ) * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Max( Max( MUC,RCSe ),( DS + ( MUC * MUC ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "( Min( ( ARS - RRS ) ,MRS ) - ( MDR - FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( ( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( MLU - RMSe ) + Min( DS ,RRSe ) ) ) / ( ( MLU * RCSe ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) ) - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) ,RMSe ) + ( MUM - RMSe ) )", "obj1": 0.3041825095057034, "obj2": 0.4832791266920754}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( MRS,ARS ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( ( RRSe / MUR ) - ( CS / MUM ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.1634980988593156, "obj2": 0.629031992034724}, {"determining": "( ( Min( MRS ,MRS ) - ( MDR - FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( MUR - ( ( Max( DS,( MUM + RRSe ) ) - ( MUM - RMSe ) ) - ( RCSe - RCSe ) ) ) * DS ) + ( RMSe * DS ) ) + ( ( DS + DS ) / Min( MUC ,CS ) ) )", "obj1": 0.5798479087452472, "obj2": 0.3014469173492317}, {"determining": "( ( Min( Max( Const,CRS ) ,FirstVNF_RAM ) * Min( PN ,( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ARS ) ) ) * ( ( ARS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) / ( ( ( RCSe + MUR ) - ( Max( MUC,( ( ( RRSe - CS ) + Max( DS,RRSe ) ) - CS ) ) * DS ) ) + ( ( ( MLU * ( MUM + MUC ) ) / CS ) / ( MUM * RMSe ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "( ( ( ( BR * MRS ) - MDR ) + PN ) + ( BR / ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Max( MUC,CS ),( RMSe + CS ) )", "obj1": 0.9752851711026616, "obj2": 0.009010282967540579}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - ( RRS + Max( CRS,RRS ) ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( RRSe * ( RRSe * MUM ) ) )", "obj1": 0.07034220532319392, "obj2": 0.7559805203087555}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( Max( ( FirstVNF_Mem * ( FirstVNF_CPU_Server / CRS ) ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ),BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( ( MUM * Min( ( ( RRSe / MUM ) - RCSe ) ,Max( MUR,( RMSe / MUM ) ) ) ) - ( ( ( ( DS / MLU ) * RMSe ) + ( RCSe + Max( RRSe,MUR ) ) ) * MLU ) ) * DS ) + ( RMSe * DS ) ) + ( Max( ( MLU - RRSe ),MLU ) / Min( MUC ,CS ) ) )", "obj1": 0.6920152091254753, "obj2": 0.21521417013354469}, {"determining": "( Min( Max( ( AMS - BR ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * BR )", "choosing": "Min( Min( Max( MUR,MUM ) ,( ( ( RRSe / MUC ) * RRSe ) * ( RCSe - ( Max( MUC,( Max( CS,RCSe ) - ( RCSe - RCSe ) ) ) * MUM ) ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.21102661596958175, "obj2": 0.5557855523360038}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Min( FirstVNF_Mem_Server ,( Min( FirstVNF_CPU_Server ,( ( PN - Const ) + PN ) ) - PN ) )", "choosing": "( ( MUR - ( MLU * ( MUC / ( ( RRSe + ( Max( DS,MLU ) - CS ) ) - Min( Max( RMSe,MUR ) ,CS ) ) ) ) ) / Min( RMSe ,Min( MUC ,MUC ) ) )", "obj1": 0.35551330798479086, "obj2": 0.45971618730601926}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( PN - PN ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( MUM + ( MUM - MUC ) ) + ( ( CS + ( ( MUC * MUR ) / MUR ) ) + MUC ) ) ) / CS ) - Max( RCSe,MUM ) )", "obj1": 0.188212927756654, "obj2": 0.5680260794857914}, {"determining": "Min( ( ( ( MRS + Max( PN,BR ) ) / RRS ) * AMS ) ,( FirstVNF_RAM * ARS ) )", "choosing": "Max( ( DS / Max( Max( RMSe,MUM ),( MLU + Min( RRSe ,( ( Min( MUM ,RRSe ) - ( DS + RCSe ) ) + Min( ( MUM * MLU ) ,RCSe ) ) ) ) ) ),( ( CS * DS ) - RCSe ) )", "obj1": 0.688212927756654, "obj2": 0.23768667145943845}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( ( ( RRS + Max( FirstVNF_RAM,Min( Max( BR,Const ) ,ACS ) ) ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( ( ( Max( ( ( RMSe - RCSe ) + ( MLU - DS ) ),MUC ) - Min( Max( RRSe,( CS * RRSe ) ) ,( RRSe * ( MLU * RMSe ) ) ) ) / RCSe ) + MLU ) ,Min( MLU ,( Max( DS,MLU ) + Min( MUR ,( ( RMSe / MLU ) * Min( MUR ,Max( MUR,CS ) ) ) ) ) ) ) - ( RCSe / RRSe ) )", "obj1": 0.17300380228136883, "obj2": 0.6098043380980241}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_RAM_Server - ( Min( CRS ,CRS ) / MRS ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( DS - MUC ) )", "obj1": 0.21863117870722434, "obj2": 0.5459036312323976}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( MRS + CRS ) ) )", "choosing": "( ( ( MUM / ( ( MUM / MLU ) + MUC ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17490494296577946, "obj2": 0.5994139578363669}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_Mem * ( MDR - ( ( AMS - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( DDR + ( PN - Const ) ) ) ) + RRS ) ) ) )", "choosing": "( ( Max( ( RRSe + DS ),Max( CS,MUR ) ) / Max( ( ( DS - ( RMSe / RCSe ) ) * CS ),( RCSe * DS ) ) ) + ( Max( MUR,MUM ) * ( ( MLU - Min( ( Max( ( CS + DS ),DS ) + CS ) ,( CS - RRSe ) ) ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2338403041825095, "obj2": 0.5408224111759229}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_CPU ),( ( ( ( FirstVNF_Mem / MDR ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Min( RCSe ,MUM ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17870722433460076, "obj2": 0.5855879543622823}, {"determining": "( Min( ( RRS / PN ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Min( ( BR * FirstVNF_Mem ) ,Max( ( ( MRS - FirstVNF_CPU ) / ( CRS - PN ) ),BR ) ) / FirstVNF_RAM ) )", "choosing": "( ( Max( MUR,MUC ) / ( Max( ( MLU / MUM ),RRSe ) / MUM ) ) * Min( ( MUM / MUC ) ,( DS - CS ) ) )", "obj1": 0.30228136882129275, "obj2": 0.502039539954397}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + AMS ) - FirstVNF_CPU ) - MDR ) + PN ) + ( BR / Min( ARS ,MDR ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( ( ( Max( RCSe,MUR ) + ( ( CS - RRSe ) / RMSe ) ) * MUR ) / MLU ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.007385451211767366}, {"determining": "Max( ( ARS / Max( Min( FirstVNF_RAM ,PN ),( PN + FirstVNF_CPU ) ) ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUR + ( ( CS * MUR ) - ( RCSe - MUM ) ) ) )", "obj1": 0.2414448669201521, "obj2": 0.5364090944580744}, {"determining": "Min( ( ( ( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) ) / RRS ) * AMS ) ,( FirstVNF_RAM * ARS ) )", "choosing": "Max( ( DS / Max( Max( RMSe,MUM ),( MLU + Min( RRSe ,( ( Min( MUC ,RRSe ) - ( DS + RCSe ) ) + Min( ( MUM * MLU ) ,RCSe ) ) ) ) ) ),( ( CS * DS ) - RCSe ) )", "obj1": 0.6901140684410646, "obj2": 0.22949895155886088}, {"determining": "( ( Max( PN,( Const - FirstVNF_RAM ) ) / Max( ( CRS * PN ),( RRS * RRS ) ) ) / Min( FirstVNF_CPU ,Min( Max( DDR,MDR ) ,RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( ( RCSe / Min( MUR ,MLU ) ) * Max( MUM,MUM ) ) ) ) / ( ( ( DS + RRSe ) - RMSe ) - RMSe ) ) ) )", "obj1": 0.18250950570342206, "obj2": 0.5776098277400395}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( DDR * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUR * RCSe ) ) + ( MUM - CS ) ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.2718631178707224, "obj2": 0.5172855768011667}, {"determining": "( ( Const * Min( Max( Min( FirstVNF_RAM ,PN ),Min( Const ,CRS ) ) ,AMS ) ) / ( BR - PN ) )", "choosing": "( ( ( MUM + ( Max( DS,( CS * Min( RMSe ,DS ) ) ) - ( ( CS * MUR ) - ( RCSe - MUM ) ) ) ) + ( MLU + DS ) ) + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0008306537479135193}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( ( ( RRS + ( MDR - MDR ) ) + BR ) / CRS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - BR ) ) ) ) * BR )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( CS * MUR ) ) ,Max( Max( ( DS / Min( RRSe ,( RMSe * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.24904942965779467, "obj2": 0.5273066123538753}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Max( Min( FirstVNF_RAM ,PN ),( AMS + FirstVNF_CPU ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( ( MUC + MLU ) / ( MUM + Min( RMSe ,MUC ) ) ) * ( ( Max( MUM,RRSe ) / ( MUR * RCSe ) ) + ( MUM - CS ) ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.28517110266159695, "obj2": 0.5121439322944272}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( ARS / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( DDR * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( DS * RCSe ) ) + ( MUM - CS ) ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.2870722433460076, "obj2": 0.5048949336612717}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( Const * AMS ) ) ) * Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - PN ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( MUM * ( ( ( MLU * RCSe ) / ( CS * MLU ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5235870788156413}, {"determining": "( ( ( FirstVNF_CPU - BR ) + FirstVNF_RAM_Server ) + ( DDR / MDR ) )", "choosing": "Min( ( Max( ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( Max( RCSe,( Min( DS ,( ( ( RMSe / MUC ) - MUR ) + DS ) ) - RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUC * RCSe ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.2946768060836502, "obj2": 0.5024792145674526}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - PN ) ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( DDR * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( RCSe * Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_Mem * ( MDR - ( ( AMS - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( DDR + ( PN - Const ) ) ) ) + RRS ) ) ) )", "choosing": "( ( Max( ( RRSe + DS ),Max( CS,MUR ) ) / Max( ( ( DS - ( RMSe / RCSe ) ) * CS ),( RCSe * DS ) ) ) + ( Max( MUR,MUM ) * ( ( MLU - Min( ( Max( ( CS + DS ),DS ) + CS ) ,( CS - RRSe ) ) ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2509505703422053, "obj2": 0.5258712481710074}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Min( ( MDR * AMS ) ,( FirstVNF_RAM * ARS ) ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / Min( ( RCSe / RMSe ) ,Min( CS ,RMSe ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5246593947209274}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( Min( Min( FirstVNF_Mem_Server ,Const ) ,MDR ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( ( RRSe + MLU ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUR * RCSe ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5132854821888563}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Min( Min( ( BR * FirstVNF_Mem ) ,Max( ( ( MRS - FirstVNF_CPU ) / FirstVNF_CPU ),BR ) ) ,( FirstVNF_RAM * ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) ) ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( ( ( MUM - MLU ) * ( MUR / CS ) ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / Min( ( RCSe / RMSe ) ,Min( CS ,RMSe ) ) ) )", "obj1": 0.2585551330798479, "obj2": 0.5238532318683589}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Min( ( MDR * ( ARS / ( ( ( BR * AMS ) - ARS ) * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_RAM * ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) ) ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * ( ( MUR / DS ) - MLU ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / Min( ( RCSe / RMSe ) ,Min( CS ,RMSe ) ) ) )", "obj1": 0.2585551330798479, "obj2": 0.5238532318683589}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_CPU_Server / MRS ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( MUR - Max( Min( MUC ,( DS * ( MUR - RCSe ) ) ),CS ) ) ) + MUC ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM * ( ( ARS / BR ) - CRS ) ) ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( Max( MUR,( ( MLU - Max( CS,MLU ) ) - MLU ) ) * DS ) - RMSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - ( Min( PN ,RRS ) * FirstVNF_RAM ) ) ) / ( MRS / PN ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( RMSe ,Max( MUM,( MUC / Min( RCSe ,MLU ) ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - Min( ( Min( FirstVNF_RAM ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ,( ( Max( FirstVNF_CPU,DDR ) * MRS ) + ARS ) ) ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ( MDR * ARS ) ) ) )", "choosing": "Max( ( ( MLU - MUC ) - Min( Min( MUR ,CS ) ,( MLU - Min( ( Max( ( MLU * MUC ),MUM ) - MUM ) ,MUC ) ) ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Min( FirstVNF_RAM_Server ,( ( RRS + ( MDR - MDR ) ) + BR ) ) ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - Max( MUM,( MUC * ( MUC - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - ( ACS * ( BR * BR ) ) ) / AMS ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( ( RRSe + RMSe ) ,( MUR * MLU ) ) + ( ( DS + Max( ( MLU - ( MUR * MUM ) ),MUM ) ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + MRS ) - PN ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Max( ( MUR - ( Max( MUR,MUR ) + ( MUR - ( MLU / ( MLU * MUM ) ) ) ) ),CS ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Max( Min( ACS ,RRS ),ARS ) ) * Min( Min( RRS ,FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( RCSe - ( ( MUM / ( DS / MLU ) ) - RMSe ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( DDR - ( ARS * ACS ) ) ) / ( FirstVNF_CPU_Server + ( Const - CRS ) ) ) ) )", "choosing": "Min( Min( CS ,MUM ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - ( ( CRS * ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server / ( AMS + Const ) ) ) ) + BR ) / MDR ) * ( ( FirstVNF_RAM_Server - ( ARS * ACS ) ) * BR ) ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( ( Max( Min( MLU ,Min( MLU ,( MLU / MUM ) ) ),MLU ) * RMSe ) ,( ( RCSe - ( ( ( ( RRSe / RRSe ) + RMSe ) - ( MLU - DS ) ) + MUM ) ) + ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( Min( Min( FirstVNF_RAM_Server ,AMS ) ,( CRS - FirstVNF_RAM_Server ) ),( Min( ACS ,ACS ) - Min( ACS ,Const ) ) ) )", "choosing": "( ( Max( CS,DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + DDR ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( ( MUM * MUR ) ,( Max( MUR,RMSe ) - Max( Max( RCSe,Min( MLU ,DS ) ),RCSe ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - PN ) - ( Const / Max( ( CRS * PN ),( RRS * RRS ) ) ) ) + ( Max( ACS,FirstVNF_Mem_Server ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ) - ( DS + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),MDR ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_Mem + AMS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( MUR * MUR ) ) ,( ( Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( ( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( MRS - FirstVNF_Mem ) ) / AMS ) )", "choosing": "( Min( ( MUC - MUC ) ,MLU ) - Max( Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ),( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "Min( MLU ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,( ( ( ( Const / ACS ) * BR ) - FirstVNF_Mem ) - ARS ) ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( MLU / Max( Max( RCSe,( MUM / ( CS * Max( MUC,( CS + ( DS / MUR ) ) ) ) ) ),( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * FirstVNF_Mem_Server ) - AMS ) ,( CRS / MRS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( MUC / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,RCSe ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - Max( PN,AMS ) ) + PN ) + ( BR / Min( ARS ,MDR ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( ( ( Max( RCSe,MUR ) + RCSe ) * MUR ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( Const,CRS ) ,FirstVNF_RAM ) * Min( PN ,( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ARS ) ) ) * ( ( ARS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) / ( ( ( RCSe + MUR ) - ( Max( MUC,( ( ( RRSe - CS ) + Max( DS,RRSe ) ) - CS ) ) * DS ) ) + ( ( ( MLU * ( MUM + MUC ) ) / CS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,MRS ) * ( ( FirstVNF_Mem_Server - AMS ) - MRS ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Max( Max( RRSe,RCSe ),RMSe ) ,( ( RCSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( CRS ,( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / MRS ) ) - AMS ) ,Min( Const ,ACS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( ( RRSe * CS ) / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,MUR ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( DS / ( ( MUC * RRSe ) / RCSe ) ) - ( RMSe / CS ) ) / ( ( RRSe / MUR ) - ( CS / MUM ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( BR,MRS ) ,FirstVNF_CPU ) - AMS ) + ( MRS - FirstVNF_Mem ) ) / AMS )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( Max( Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ),RRSe ) ,Min( MUC ,MUR ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) + Max( ( AMS - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * RRS ) ) ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( DS - ( ( DS / MUR ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( RRS ,BR ),( Const * CRS ) ) * ( FirstVNF_CPU - BR ) ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( ( MUR + Max( CS,RCSe ) ) ,( ( RCSe - ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ) ) + ( Max( MLU,DS ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( Max( RMSe,( MLU + RCSe ) ) ,( ( RCSe - ( MUM + MUM ) ) + ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * FirstVNF_Mem_Server ) - AMS ) ,( CRS / MRS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( MUC / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,RCSe ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( DDR,AMS ),( ( MRS - FirstVNF_CPU_Server ) * MRS ) ) ,( PN / ( ( ( ( ( FirstVNF_Mem / MDR ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) / Max( FirstVNF_CPU_Server,ARS ) ) ) )", "choosing": "( ( Max( ( RMSe / ( MLU - ( DS + ( RMSe / ( MLU + MUR ) ) ) ) ),MUR ) * RMSe ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_CPU ) + ( MRS - Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) ) ) / AMS )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( ( MUM * ( MUM * DS ) ) ,RMSe ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Max( MDR,MRS ) ) + ( MRS - FirstVNF_Mem ) ) + ( MRS - FirstVNF_Mem ) ) / AMS )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( Max( Min( Max( RRSe,( MUC + MUM ) ) ,( MUC * MUR ) ),RRSe ) ,Min( MUC ,MUR ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,BR ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ACS ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( Max( Max( MUR,RRSe ),( ( Max( MUC,( MUR - MLU ) ) / Max( RCSe,MUC ) ) / Max( MUR,( MUR / DS ) ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS - ( ARS + FirstVNF_Mem ) ) ,MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( RMSe - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) ,RMSe ) + ( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * Max( ( CS / RMSe ),Min( MUC ,RCSe ) ) ) / ( ( ( MUR - ( MLU + Max( RRSe,MUC ) ) ) / ( CS + RCSe ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,( ( ( MDR * BR ) - FirstVNF_RAM_Server ) - ARS ) ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( MLU / Max( Max( RCSe,MUM ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( ( PN - ACS ) * Max( Min( Max( Const,Const ) ,AMS ),BR ) ) ) * Min( ( ( DDR / AMS ) + Min( MRS ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( ( Max( ( ( MUM + ( MUM - MUC ) ) + ( MLU + DS ) ),RRSe ) / MUC ) / RMSe ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( RRS * FirstVNF_Mem_Server ) - AMS ) ,Min( Const ,ACS ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,( ( ( ARS / FirstVNF_CPU_Server ) / ( DDR - ( FirstVNF_Mem_Server - DDR ) ) ) + Const ) ) )", "choosing": "Max( Min( DS ,( MLU / RCSe ) ),Min( RCSe ,Max( ( ( MUC / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,MUR ) ,CS ) ) ) * RCSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( Max( RRSe,MUC ) + Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( ( Max( ( CRS * PN ),( RRS * RRS ) ) + ( MRS - FirstVNF_Mem ) ) / AMS ) )", "choosing": "( ( MUM + MUC ) - Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR * AMS ) ,( FirstVNF_RAM * ARS ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) ) * Min( MUR ,RMSe ) ) - Max( ( RCSe - CS ),( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - FirstVNF_RAM_Server ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( Min( DS ,Max( ( RMSe * MUR ),( MUC - MUR ) ) ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Min( FirstVNF_RAM_Server ,( ( RRS + ( MDR - MDR ) ) + BR ) ) ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - Max( MUM,( MUC * ( MUC - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,( ( AMS - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * RRS ) ) ) ) - ARS ) ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( Max( MLU,MUC ) / Max( Max( RCSe,MUM ),( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( FirstVNF_CPU,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + RMSe )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( FirstVNF_CPU ,ARS ) ) / ( ( PN - ACS ) * Max( Min( Max( Min( RRS ,( FirstVNF_RAM * RRS ) ),Const ) ,AMS ),BR ) ) ) * Min( Min( ( MDR * AMS ) ,( FirstVNF_RAM * ARS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( ( Max( MUC,Max( CS,( Max( RMSe,CS ) * CS ) ) ) * DS ) ,( DS * ( ( MUC + RRSe ) - RRSe ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - Min( ACS ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,( ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( DDR * Const ) ,( ACS / PN ) ) ) + Max( ( PN + ( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - BR ) ),( Max( ( CRS * FirstVNF_RAM_Server ),ACS ) + ( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,ARS ) + ACS ) ) ) ) ) ) ,( Max( ( Const - FirstVNF_CPU ),FirstVNF_CPU_Server ) + ARS ) )", "choosing": "( ( RCSe * ( DS * DS ) ) / ( RMSe * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7582812570701774}, {"determining": "( ( ( ( ACS * PN ) + ( Max( Max( ( FirstVNF_RAM - ACS ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + FirstVNF_CPU ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( ( DS / MUR ) * ( RCSe * Max( Max( RRSe,DS ),Min( MLU ,( MUM * CS ) ) ) ) ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.49619771863117873, "obj2": 0.3520641590807026}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( Min( Min( ( DDR * FirstVNF_RAM ) ,Const ) ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * Max( FirstVNF_Mem_Server,( CRS + RRS ) ) ) ) ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( DS + CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( ( ( CRS * AMS ) + PN ) * ARS ) * ( CRS + ACS ) ) ) + ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( DS * ( ( ( RCSe - ( ( RCSe + Min( RCSe ,MLU ) ) + MUC ) ) * Min( Max( DS,MUR ) ,MUM ) ) + ( DS - CS ) ) ) / Max( DS,Max( RMSe,MUM ) ) )", "obj1": 0.5608365019011406, "obj2": 0.30913357764386223}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( DDR,( BR + FirstVNF_RAM_Server ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( RMSe / MLU ) ) ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11026615969581749, "obj2": 0.647452134043304}, {"determining": "( ( ( ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,PN ) * PN ) + ( ( Const * Max( ( MRS - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * MRS ) ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * ( DS * MUM ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.596958174904943, "obj2": 0.2706435928786264}, {"determining": "Min( ( MDR * ( Const / ( PN + Max( Max( Const,AMS ),PN ) ) ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - Max( Max( ( MLU - MLU ),RCSe ),DS ) ) ,( DS - CS ) )", "obj1": 0.39923954372623577, "obj2": 0.40942747713068767}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Min( RRSe ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.7015209125475285, "obj2": 0.18943427505725996}, {"determining": "( ( FirstVNF_RAM - ( BR + CRS ) ) - ( ( MRS / CRS ) * ( ( RRS / BR ) / ( PN + BR ) ) ) )", "choosing": "Min( Min( RRSe ,( ( Min( MLU ,Min( RMSe ,( RRSe - Max( RRSe,MLU ) ) ) ) - RMSe ) / CS ) ) ,( ( ( Max( ( ( Max( MUC,CS ) - MLU ) * RMSe ),Max( Min( RRSe ,MUM ),MUR ) ) / DS ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.935361216730038, "obj2": 0.0223075541840483}, {"determining": "( Min( ( DDR / MRS ) ,FirstVNF_Mem_Server ) / ( ( FirstVNF_RAM + Min( AMS ,MDR ) ) - ARS ) )", "choosing": "( ( Max( Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( RRSe / ( MLU / MUR ) ) / Min( MUC ,RCSe ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) ),DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 0.8174904942965779, "obj2": 0.13744802757295274}, {"determining": "Max( ( RRS - MRS ),( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Min( BR ,MDR ) / AMS ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( Min( Max( ( ( MUM - RCSe ) / RMSe ),( RRSe - MLU ) ) ,RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.7908745247148289, "obj2": 0.1607645699097716}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( RRS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( ( DS * ( RRSe + ( MUM - CS ) ) ) / Max( DS,Max( RMSe,MUM ) ) )", "obj1": 0.6520912547528517, "obj2": 0.240619280019109}, {"determining": "Min( ( ( ( BR + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,( ( ( ARS / FirstVNF_CPU_Server ) / ( DDR - ( FirstVNF_Mem_Server - DDR ) ) ) + Const ) ) )", "choosing": "Max( Min( DS ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( Min( MUC ,( MLU / ( MUR / DS ) ) ) * CS ) ) ) )", "obj1": 0.8403041825095057, "obj2": 0.11098282165433564}, {"determining": "( ( AMS - Min( Max( ( ( RRS - FirstVNF_RAM ) + AMS ),MDR ) ,FirstVNF_RAM_Server ) ) * Min( ( ( Min( Max( MRS,MRS ) ,AMS ) * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Max( Max( MUC,RCSe ),( DS + ( MUC * MUC ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / BR ) - ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Min( DS ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.876425855513308, "obj2": 0.0707244269841918}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) / ( Min( PN ,AMS ) / FirstVNF_RAM_Server ) ) / Max( Min( Min( FirstVNF_RAM_Server ,PN ) ,( CRS - FirstVNF_RAM_Server ) ),( Min( ACS ,ACS ) - Min( ACS ,Const ) ) ) )", "choosing": "( ( Max( Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Min( Min( CS ,RRSe ) ,( RMSe / Max( MUR,RRSe ) ) ) ),DS ) / CS ) + ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + Min( RRSe ,MUC ) ) )", "obj1": 0.8669201520912547, "obj2": 0.09889436633262294}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( Min( Max( FirstVNF_CPU,MRS ) ,( ( ( PN - FirstVNF_Mem ) - BR ) - PN ) ) ,Min( MRS ,ARS ) ),Min( Min( MDR ,RRS ) ,( AMS / BR ) ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - CRS ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU / RCSe ) ),( ( RCSe + MUR ) - ( Max( MUC,( ( Min( MUR ,RCSe ) - CS ) - CS ) ) * DS ) ) )", "obj1": 0.7718631178707225, "obj2": 0.18765738680687685}, {"determining": "( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / BR ) - ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) ) + ( MRS - FirstVNF_Mem ) ) / ( MRS / PN ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( ( ( DS / MLU ) / ( MLU - CS ) ) ,Max( MUM,( MUC / MUC ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 0.1634980988593156, "obj2": 0.6234745659581492}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( MUM + ( MUM - MUC ) ) + MUC ) ) / CS ) - ( CS / MUM ) )", "obj1": 0.32509505703422054, "obj2": 0.4712265949232812}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,MRS ) - RRS ) ,MRS ) - ( MDR - FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( DS / MLU ) ) ,RMSe ) + ( MUM - RMSe ) )", "obj1": 0.688212927756654, "obj2": 0.22039431142868904}, {"determining": "Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( DS - CS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - ( RRS + Max( CRS,RRS ) ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( RRSe * ( RRSe * MUM ) ) )", "obj1": 0.07034220532319392, "obj2": 0.7559805203087555}, {"determining": "( ( ( ( BR * MRS ) - MDR ) + PN ) + ( BR / ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Max( MUC,CS ),( RMSe + CS ) )", "obj1": 0.9752851711026616, "obj2": 0.009010282967540579}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( Max( ( MRS * PN ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ),BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( MUR - Max( MUC,( ( Max( MLU,MUM ) * RMSe ) - ( ( MUC / CS ) - ( DS - MUR ) ) ) ) ) * DS ) + ( RMSe * DS ) ) + ( ( DS + DS ) / Min( MUC ,CS ) ) )", "obj1": 0.6539923954372624, "obj2": 0.2367364963695978}, {"determining": "( Min( ( ARS - RRS ) ,MRS ) - ( MDR - FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( ( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( MLU - RMSe ) + Min( DS ,RRSe ) ) ) / ( ( MLU * RCSe ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) ) - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) ,RMSe ) + ( MUM - RMSe ) )", "obj1": 0.3041825095057034, "obj2": 0.4832791266920754}, {"determining": "( ( ( BR - FirstVNF_Mem ) / MRS ) + Max( Max( DDR,MDR ),BR ) )", "choosing": "Min( ( ( MLU + Min( RRSe ,( ( Min( MUM ,RRSe ) - ( DS + RCSe ) ) + Min( ( MUM * MLU ) ,RCSe ) ) ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Min( ( DS + ( DS + RRSe ) ) ,RCSe ) - MLU ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6339607267569531}, {"determining": "Max( Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Max( Max( RRSe,RCSe ),RMSe ) ) / CS ) - Max( RCSe,MUM ) )", "obj1": 0.9220532319391636, "obj2": 0.05750662905634403}, {"determining": "Max( ( RRS - MRS ),( ( ( DDR + MDR ) - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( DDR - ( ( FirstVNF_CPU - BR ) * ACS ) ) ) / AMS ) ) ) )", "choosing": "( ( RCSe / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( Min( Max( ( ( Min( MUR ,MUM ) - RCSe ) / RMSe ),RCSe ) ,RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.9125475285171103, "obj2": 0.06585871418179678}, {"determining": "Min( FirstVNF_Mem_Server ,( Min( FirstVNF_CPU_Server ,( ( PN - Const ) + PN ) ) - PN ) )", "choosing": "( ( MUR - ( MLU * ( MUC / ( ( RRSe + ( Max( DS,MLU ) - CS ) ) - Min( Max( RMSe,MUR ) ,CS ) ) ) ) ) / Min( RMSe ,Min( MUC ,MUC ) ) )", "obj1": 0.35551330798479086, "obj2": 0.45971618730601926}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( RRS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,Max( Min( FirstVNF_RAM ,PN ),( AMS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( DS * ( RRSe + ( MUM - CS ) ) ) / Max( DS,Max( RMSe,Max( Max( MUC,CS ),( ( MUC + MLU ) / ( MUM + Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.5855513307984791, "obj2": 0.29381791258544404}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / Const ) ) - PN ) ) ,FirstVNF_Mem ),Min( Min( MDR ,PN ) ,( AMS / BR ) ) ) ) ,Min( Min( ( MDR * PN ) ,( Max( FirstVNF_RAM_Server,MDR ) + FirstVNF_Mem_Server ) ) ,Max( ( RRS - Max( FirstVNF_Mem,ARS ) ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU / Max( ( ( ( RMSe / ( MUC + DS ) ) + Max( MUC,RCSe ) ) * CS ),MUC ) ) ),( ( RMSe / ( Max( ( MUM / ( ( CS / CS ) + DS ) ),MUM ) - RMSe ) ) * RCSe ) )", "obj1": 0.7737642585551331, "obj2": 0.1862294236638698}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( Max( ( FirstVNF_Mem * ( FirstVNF_CPU_Server / CRS ) ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ),BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( ( MUM * Min( ( ( RRSe / MUM ) - RCSe ) ,Max( MUR,( RMSe / MUM ) ) ) ) - ( ( ( ( DS / MLU ) * RMSe ) + ( RCSe + Max( RRSe,MUR ) ) ) * MLU ) ) * DS ) + ( RMSe * DS ) ) + ( Max( ( MLU - RRSe ),MLU ) / Min( MUC ,CS ) ) )", "obj1": 0.6920152091254753, "obj2": 0.21521417013354469}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( PN - PN ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( MUM + ( MUM - MUC ) ) + ( ( CS + ( ( MUC * MUR ) / MUR ) ) + MUC ) ) ) / CS ) - Max( RCSe,MUM ) )", "obj1": 0.188212927756654, "obj2": 0.5680260794857914}, {"determining": "( ( Min( Max( Const,CRS ) ,FirstVNF_RAM ) * Min( PN ,( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ARS ) ) ) * ( ( ARS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) / ( ( ( RCSe + MUR ) - ( Max( MUC,( ( ( RRSe - CS ) + Max( DS,RRSe ) ) - CS ) ) * DS ) ) + ( ( ( MLU * ( MUM + MUC ) ) / CS ) / ( MUM * RMSe ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "( ( Min( MRS ,MRS ) - ( MDR - FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( MUR - ( ( Max( DS,( MUM + RRSe ) ) - ( MUM - RMSe ) ) - ( RCSe - RCSe ) ) ) * DS ) + ( RMSe * DS ) ) + ( ( DS + DS ) / Min( MUC ,CS ) ) )", "obj1": 0.5798479087452472, "obj2": 0.3014469173492317}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_RAM_Server - ( Min( CRS ,CRS ) / MRS ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( DS - MUC ) )", "obj1": 0.21863117870722434, "obj2": 0.5459036312323976}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( ( ( RRS + Max( FirstVNF_RAM,Min( Max( BR,Const ) ,ACS ) ) ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( ( ( Max( ( ( RMSe - RCSe ) + ( MLU - DS ) ),MUC ) - Min( Max( RRSe,( CS * RRSe ) ) ,( RRSe * ( MLU * RMSe ) ) ) ) / RCSe ) + MLU ) ,Min( MLU ,( Max( DS,MLU ) + Min( MUR ,( ( RMSe / MLU ) * Min( MUR ,Max( MUR,CS ) ) ) ) ) ) ) - ( RCSe / RRSe ) )", "obj1": 0.17300380228136883, "obj2": 0.6098043380980241}, {"determining": "( Min( RRS ,Max( ( ( ( RRS + ( MDR - MDR ) ) + BR ) / CRS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - BR ) ) ) ) * BR )", "choosing": "Min( ( ( Max( MUM,DS ) - Min( RMSe ,RRSe ) ) - ( CS * MUR ) ) ,Max( Max( ( DS / Min( RRSe ,( RMSe * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.20532319391634982, "obj2": 0.559295232239951}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_Mem * ( MDR - ( ( AMS - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( DDR + ( PN - Const ) ) ) ) + RRS ) ) ) )", "choosing": "( ( Max( ( RRSe + DS ),Max( CS,MUR ) ) / Max( ( ( DS - ( RMSe / RCSe ) ) * CS ),( RCSe * DS ) ) ) + ( Max( MUR,MUM ) * ( ( MLU - Min( ( Max( ( CS + DS ),DS ) + CS ) ,( CS - RRSe ) ) ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2338403041825095, "obj2": 0.5408224111759229}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_CPU ),( ( ( ( FirstVNF_Mem / MDR ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Min( RCSe ,MUM ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17870722433460076, "obj2": 0.5855879543622823}, {"determining": "( Min( ( RRS / PN ) ,Min( RRS ,FirstVNF_CPU ) ) / ( Min( ( BR * FirstVNF_Mem ) ,Max( ( ( MRS - FirstVNF_CPU ) / ( CRS - PN ) ),BR ) ) / FirstVNF_RAM ) )", "choosing": "( ( Max( MUR,MUC ) / ( Max( ( MLU / MUM ),RRSe ) / MUM ) ) * Min( ( MUM / MUC ) ,( DS - CS ) ) )", "obj1": 0.30228136882129275, "obj2": 0.502039539954397}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( DDR * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUR * RCSe ) ) + ( MUM - CS ) ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.2718631178707224, "obj2": 0.5172855768011667}, {"determining": "( ( Max( PN,( Const - FirstVNF_RAM ) ) / Max( ( CRS * PN ),( RRS * RRS ) ) ) / Min( FirstVNF_CPU ,Min( Max( DDR,MDR ) ,RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( ( RCSe / Min( MUR ,MLU ) ) * Max( MUM,MUM ) ) ) ) / ( ( ( DS + RRSe ) - RMSe ) - RMSe ) ) ) )", "obj1": 0.18250950570342206, "obj2": 0.5776098277400395}, {"determining": "( ( Max( FirstVNF_RAM,ARS ) / Max( ( CRS * PN ),( RRS * ( FirstVNF_RAM * RRS ) ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,( MLU / ( ( Min( RRSe ,MUM ) / MUC ) + ( ( MUM * RMSe ) / CS ) ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5101120175139304}, {"determining": "( Min( Max( ( AMS - BR ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * BR )", "choosing": "Min( Min( Max( MUR,MUM ) ,( ( ( RRSe / MUC ) * RRSe ) * ( RCSe - ( Max( MUC,( Max( CS,RCSe ) - ( RCSe - RCSe ) ) ) * MUM ) ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.21102661596958175, "obj2": 0.5557855523360038}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( ARS / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( DDR * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( DS * RCSe ) ) + ( MUM - CS ) ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.2870722433460076, "obj2": 0.5048949336612717}, {"determining": "( ( Const * Min( Max( Min( FirstVNF_RAM ,PN ),Min( Const ,CRS ) ) ,AMS ) ) / ( BR - PN ) )", "choosing": "( ( ( MUM + ( Max( DS,( CS * Min( RMSe ,DS ) ) ) - ( ( CS * MUR ) - ( RCSe - MUM ) ) ) ) + ( MLU + DS ) ) + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0008306537479135193}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + AMS ) - FirstVNF_CPU ) - MDR ) + PN ) + ( BR / Min( ARS ,MDR ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( ( ( Max( RCSe,MUR ) + ( ( CS - RRSe ) / RMSe ) ) * MUR ) / MLU ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.007385451211767366}, {"determining": "Max( ( ARS / Max( Min( FirstVNF_RAM ,PN ),( PN + FirstVNF_CPU ) ) ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUR + ( ( CS * MUR ) - ( RCSe - MUM ) ) ) )", "obj1": 0.2414448669201521, "obj2": 0.5364090944580744}, {"determining": "( ( ( FirstVNF_CPU - BR ) + FirstVNF_RAM_Server ) + ( DDR / MDR ) )", "choosing": "Min( ( Max( ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( Max( RCSe,( Min( DS ,( ( ( RMSe / MUC ) - MUR ) + DS ) ) - RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Min( Min( ( BR * FirstVNF_Mem ) ,Max( ( ( MRS - FirstVNF_CPU ) / FirstVNF_CPU ),( ( ARS * MDR ) * DDR ) ) ) ,( FirstVNF_RAM * ( Min( PN ,( PN + FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem * PN ) ) ) ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( ( ( DS / MLU ) / ( MLU - CS ) ),MUM ) * Max( ( ( MUM - MLU ) * ( MUR / CS ) ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( ( Max( DS,RMSe ) - MLU ) / RRSe ) * ( MLU / RMSe ) ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5275465304829348}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( Const * AMS ) ) ) * Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - PN ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( MUM * ( ( ( MLU * RCSe ) / ( CS * MLU ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5235870788156413}, {"determining": "Max( Min( ( FirstVNF_Mem - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( Min( MDR ,( ( FirstVNF_RAM_Server * ACS ) + ( RRS + DDR ) ) ) ,( AMS / BR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Max( Max( RRSe,RCSe ),Min( Min( Max( RCSe,( CS + MUM ) ) ,MUM ) ,Min( RMSe ,( ( CS - MUR ) * RRSe ) ) ) ) ) / CS ) - Max( ( MUR / RRSe ),MUM ) )", "obj1": 0.9201520912547528, "obj2": 0.05840933566684482}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( ( Max( ( FirstVNF_CPU_Server / ( MDR / BR ) ),( Const / Min( DDR ,PN ) ) ) - MRS ) - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( PN + BR ) )", "choosing": "( Max( MUR,RMSe ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.24904942965779467, "obj2": 0.5241097778072733}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( MRS + CRS ) ) )", "choosing": "( ( ( MUM / ( ( MUM / MLU ) + MUC ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17490494296577946, "obj2": 0.5994139578363669}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) / ( PN / MDR ) ) ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( MUM + ( MUM - MUC ) ) + ( ( MLU / CS ) - ( RCSe + MUR ) ) ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17490494296577946, "obj2": 0.5994139578363669}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( MDR + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUC * RCSe ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.2946768060836502, "obj2": 0.5024792145674526}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Min( Min( ( BR * FirstVNF_Mem ) ,Max( ( ( MRS - FirstVNF_CPU ) / FirstVNF_CPU ),BR ) ) ,( FirstVNF_RAM * ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) ) ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( ( ( MUM - MLU ) * ( MUR / CS ) ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / Min( ( RCSe / RMSe ) ,Min( CS ,RMSe ) ) ) )", "obj1": 0.2585551330798479, "obj2": 0.5238532318683589}, {"determining": "( ( MRS * AMS ) / ( ( ( ( BR - FirstVNF_CPU ) - ( RRS * FirstVNF_CPU_Server ) ) + PN ) + ( BR / Min( ARS ,MDR ) ) ) )", "choosing": "( ( MUM + MUC ) - ( RCSe * RRSe ) )", "obj1": 0.9809885931558935, "obj2": 0.00809228812433844}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUC * RCSe ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.2946768060836502, "obj2": 0.5024792145674526}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Min( ( MDR * ( ARS / ( ( ( BR * AMS ) - ARS ) * FirstVNF_CPU_Server ) ) ) ,( FirstVNF_RAM * ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) ) ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * ( ( MUR / DS ) - MLU ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / Min( ( RCSe / RMSe ) ,Min( CS ,RMSe ) ) ) )", "obj1": 0.2585551330798479, "obj2": 0.5238532318683589}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,Max( DDR,FirstVNF_Mem ) ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * ( ( ARS - ( FirstVNF_CPU_Server / PN ) ) + PN ) )", "choosing": "Max( Max( Min( DS ,Max( MUM,( ( Min( RRSe ,CS ) * ( ( RRSe / RCSe ) - Min( RRSe ,DS ) ) ) + RRSe ) ) ),MUC ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_CPU_Server / MRS ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( MUR - Max( Min( MUC ,( DS * ( MUR - RCSe ) ) ),CS ) ) ) + MUC ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM * ( ( ARS / BR ) - CRS ) ) ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( Max( MUR,( ( MLU - Max( CS,MLU ) ) - MLU ) ) * DS ) - RMSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - ( Min( PN ,RRS ) * FirstVNF_RAM ) ) ) / ( MRS / PN ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( RMSe ,Max( MUM,( MUC / Min( RCSe ,MLU ) ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - Min( ( Min( FirstVNF_RAM ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ,( ( Max( FirstVNF_CPU,DDR ) * MRS ) + ARS ) ) ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ( MDR * ARS ) ) ) )", "choosing": "Max( ( ( MLU - MUC ) - Min( Min( MUR ,CS ) ,( MLU - Min( ( Max( ( MLU * MUC ),MUM ) - MUM ) ,MUC ) ) ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Min( FirstVNF_RAM_Server ,( ( RRS + ( MDR - MDR ) ) + BR ) ) ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - Max( MUM,( MUC * ( MUC - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - ( ACS * ( BR * BR ) ) ) / AMS ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( ( RRSe + RMSe ) ,( MUR * MLU ) ) + ( ( DS + Max( ( MLU - ( MUR * MUM ) ),MUM ) ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + MRS ) - PN ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Max( ( MUR - ( Max( MUR,MUR ) + ( MUR - ( MLU / ( MLU * MUM ) ) ) ) ),CS ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Max( Min( ACS ,RRS ),ARS ) ) * Min( Min( RRS ,FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( RCSe - ( ( MUM / ( DS / MLU ) ) - RMSe ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( DDR - ( ARS * ACS ) ) ) / ( FirstVNF_CPU_Server + ( Const - CRS ) ) ) ) )", "choosing": "Min( Min( CS ,MUM ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - ( ( CRS * ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server / ( AMS + Const ) ) ) ) + BR ) / MDR ) * ( ( FirstVNF_RAM_Server - ( ARS * ACS ) ) * BR ) ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( ( Max( Min( MLU ,Min( MLU ,( MLU / MUM ) ) ),MLU ) * RMSe ) ,( ( RCSe - ( ( ( ( RRSe / RRSe ) + RMSe ) - ( MLU - DS ) ) + MUM ) ) + ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( Min( Min( FirstVNF_RAM_Server ,AMS ) ,( CRS - FirstVNF_RAM_Server ) ),( Min( ACS ,ACS ) - Min( ACS ,Const ) ) ) )", "choosing": "( ( Max( CS,DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + DDR ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( ( MUM * MUR ) ,( Max( MUR,RMSe ) - Max( Max( RCSe,Min( MLU ,DS ) ),RCSe ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - PN ) - ( Const / Max( ( CRS * PN ),( RRS * RRS ) ) ) ) + ( Max( ACS,FirstVNF_Mem_Server ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ) - ( DS + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),MDR ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_Mem + AMS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( MUR * MUR ) ) ,( ( Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( ( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) + ( MRS - FirstVNF_Mem ) ) / AMS ) )", "choosing": "( Min( ( MUC - MUC ) ,MLU ) - Max( Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ),( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - CRS ) ) )", "choosing": "Min( MLU ,( ( DS - RCSe ) / Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( PN ,( ( ( ( Const / ACS ) * BR ) - FirstVNF_Mem ) - ARS ) ) ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) )", "choosing": "( MLU / Max( Max( RCSe,( MUM / ( CS * Max( MUC,( CS + ( DS / MUR ) ) ) ) ) ),( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * FirstVNF_Mem_Server ) - AMS ) ,( CRS / MRS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( MUC / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,RCSe ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - FirstVNF_CPU ) - Max( PN,AMS ) ) + PN ) + ( BR / Min( ARS ,MDR ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( ( ( Max( RCSe,MUR ) + RCSe ) * MUR ) / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( Const,CRS ) ,FirstVNF_RAM ) * Min( PN ,( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ARS ) ) ) * ( ( ARS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) / ( ( ( RCSe + MUR ) - ( Max( MUC,( ( ( RRSe - CS ) + Max( DS,RRSe ) ) - CS ) ) * DS ) ) + ( ( ( MLU * ( MUM + MUC ) ) / CS ) / ( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,MRS ) * ( ( FirstVNF_Mem_Server - AMS ) - MRS ) ) * ( ( BR * FirstVNF_Mem ) + ( FirstVNF_Mem - BR ) ) )", "choosing": "Min( Max( Max( RRSe,RCSe ),RMSe ) ,( ( RCSe * MLU ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( CRS ,( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / MRS ) ) - AMS ) ,Min( Const ,ACS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( ( RRSe * CS ) / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,MUR ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( RRS + DDR ) ) ) )", "choosing": "Min( ( ( ( DS / ( ( MUC * RRSe ) / RCSe ) ) - ( RMSe / CS ) ) / ( ( RRSe / MUR ) - ( CS / MUM ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Max( BR,MRS ) ,FirstVNF_CPU ) - AMS ) + ( MRS - FirstVNF_Mem ) ) / AMS )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( Max( Min( Max( Max( MUR,RCSe ),RMSe ) ,( MUC * MUR ) ),RRSe ) ,Min( MUC ,MUR ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) + Max( ( AMS - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * RRS ) ) ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( DS - ( ( DS / MUR ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( RRS ,BR ),( Const * CRS ) ) * ( FirstVNF_CPU - BR ) ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( ( MUR + Max( CS,RCSe ) ) ,( ( RCSe - ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ) ) + ( Max( MLU,DS ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( Max( RMSe,( MLU + RCSe ) ) ,( ( RCSe - ( MUM + MUM ) ) + ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * FirstVNF_Mem_Server ) - AMS ) ,( CRS / MRS ) )", "choosing": "Max( ( DS / MUR ),( Max( ( ( MUC / ( ( RRSe + ( DS - CS ) ) - Min( Max( RMSe,RCSe ) ,CS ) ) ) * RCSe ),MUM ) - Min( ( RCSe / RMSe ) ,Min( MUR ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Max( DDR,AMS ),( ( MRS - FirstVNF_CPU_Server ) * MRS ) ) ,( PN / ( ( ( ( ( FirstVNF_Mem / MDR ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) / Max( FirstVNF_CPU_Server,ARS ) ) ) )", "choosing": "( ( Max( ( RMSe / ( MLU - ( DS + ( RMSe / ( MLU + MUR ) ) ) ) ),MUR ) * RMSe ) / RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,FirstVNF_CPU ) + ( MRS - Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) ) ) / AMS )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( ( MUM * ( MUM * DS ) ) ,RMSe ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - Max( MDR,MRS ) ) + ( MRS - FirstVNF_Mem ) ) + ( MRS - FirstVNF_Mem ) ) / AMS )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( Max( Min( Max( RRSe,( MUC + MUM ) ) ,( MUC * MUR ) ),RRSe ) ,Min( MUC ,MUR ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,BR ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ACS ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( Max( Max( MUR,RRSe ),( ( Max( MUC,( MUR - MLU ) ) / Max( RCSe,MUC ) ) / Max( MUR,( MUR / DS ) ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( RRS - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Min( CS ,MUM ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( FirstVNF_CPU ,ARS ) ) / ( ( PN - ACS ) * Max( Min( Max( Min( RRS ,( FirstVNF_RAM * RRS ) ),Const ) ,AMS ),BR ) ) ) * Min( Min( ( MDR * AMS ) ,( FirstVNF_RAM * ARS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( ( Max( MUC,Max( CS,( Max( RMSe,CS ) * CS ) ) ) * DS ) ,( DS * ( ( MUC + RRSe ) - RRSe ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,( ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( DDR * Const ) ,( ACS / PN ) ) ) + Max( ( PN + ( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - BR ) ),( Max( ( CRS * FirstVNF_RAM_Server ),ACS ) + ( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,ARS ) + ACS ) ) ) ) ) ) ,( Max( ( Const - FirstVNF_CPU ),FirstVNF_CPU_Server ) + ARS ) )", "choosing": "( ( RCSe * ( DS * DS ) ) / ( RMSe * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7582812570701774}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( Min( Min( ( DDR * FirstVNF_RAM ) ,Const ) ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * Max( FirstVNF_Mem_Server,( CRS + RRS ) ) ) ) ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( DS + CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "Min( ( MDR * ( Const / ( PN + Max( Max( Const,AMS ),PN ) ) ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - Max( Max( ( MLU - MLU ),RCSe ),DS ) ) ,( DS - CS ) )", "obj1": 0.3935361216730038, "obj2": 0.40268477265498054}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( ARS - RRS ) ,MRS ) - ( MDR - FirstVNF_Mem ) ) ) + FirstVNF_RAM_Server ) + ( DDR / MDR ) )", "choosing": "Min( ( Max( ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( Max( RCSe,( ( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( MLU - RMSe ) + Min( DS ,RRSe ) ) ) / ( ( MLU * RCSe ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) ) - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6491493886399305}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Min( RRSe ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.7015209125475285, "obj2": 0.18943427505725996}, {"determining": "( ( ( ( ACS * PN ) + ( Max( Max( ( FirstVNF_RAM - ACS ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + FirstVNF_CPU ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( ( DS / MUR ) * ( RCSe * Max( Max( RRSe,DS ),Min( MLU ,( MUM * CS ) ) ) ) ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.49619771863117873, "obj2": 0.3520641590807026}, {"determining": "( ( AMS - Min( Max( ( ( RRS - FirstVNF_RAM ) + AMS ),MDR ) ,FirstVNF_RAM_Server ) ) * Min( ( ( Min( Max( MRS,MRS ) ,AMS ) * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Max( Max( MUC,RCSe ),( DS + ( MUC * MUC ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "Max( ( RRS - MRS ),( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Min( BR ,MDR ) / AMS ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( Min( Max( ( ( MUM - RCSe ) / RMSe ),( RRSe - MLU ) ) ,RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.7908745247148289, "obj2": 0.1607645699097716}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / BR ) - ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Min( DS ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.876425855513308, "obj2": 0.0707244269841918}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( RRS + ARS ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / ( BR - MRS ) ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * ( ( DS / MUR ) * ( ( Max( MUM,MUC ) / ( MUR * RCSe ) ) + ( MUC / RRSe ) ) ) ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 0.5209125475285171, "obj2": 0.33585073922335285}, {"determining": "( ( Min( MRS ,MRS ) - ( MDR - FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / CRS ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) ) ),( PN + BR ) ) )", "choosing": "( ( ( ( MUR - ( MUM + ( MUM - MUC ) ) ) * DS ) + ( RMSe * DS ) ) + ( ( DS + DS ) / Min( MUC ,CS ) ) )", "obj1": 0.6444866920152091, "obj2": 0.2578025962772816}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( Max( ( FirstVNF_Mem * ( FirstVNF_CPU_Server / CRS ) ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ),BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( ( MUM * Min( ( ( RRSe / MUM ) - RCSe ) ,Max( MUR,( RMSe / MUM ) ) ) ) - ( ( ( ( DS / MLU ) * RMSe ) + ( RCSe + Max( RRSe,MUR ) ) ) * MLU ) ) * DS ) + ( RMSe * DS ) ) + ( Max( ( MLU - RRSe ),MLU ) / Min( MUC ,CS ) ) )", "obj1": 0.6920152091254753, "obj2": 0.21521417013354469}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( Min( Max( FirstVNF_CPU,MRS ) ,( ( ( PN - FirstVNF_Mem ) - BR ) - PN ) ) ,Min( MRS ,ARS ) ),Min( Min( MDR ,RRS ) ,( AMS / BR ) ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - CRS ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU / RCSe ) ),( ( RCSe + MUR ) - ( Max( MUC,( ( Min( MUR ,RCSe ) - CS ) - CS ) ) * DS ) ) )", "obj1": 0.7718631178707225, "obj2": 0.18765738680687685}, {"determining": "( Min( RRS ,Max( ( Min( ACS ,ACS ) / CRS ),Min( CRS ,BR ) ) ) * BR )", "choosing": "Min( ( Max( Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,( MUM / MUC ) ),DS ) / CS ) ,Max( Max( ( DS / Min( RRSe ,( RMSe * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.5437262357414449, "obj2": 0.32284072046518164}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) / ( Min( PN ,AMS ) / FirstVNF_RAM_Server ) ) / Max( Min( Min( FirstVNF_RAM_Server ,PN ) ,( CRS - FirstVNF_RAM_Server ) ),( Min( ACS ,ACS ) - Min( ACS ,Const ) ) ) )", "choosing": "( ( Max( Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Min( Min( CS ,RRSe ) ,( RMSe / Max( MUR,RRSe ) ) ) ),DS ) / CS ) + ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + Min( RRSe ,MUC ) ) )", "obj1": 0.8669201520912547, "obj2": 0.09889436633262294}, {"determining": "( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / BR ) - ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) ) + ( MRS - FirstVNF_Mem ) ) / ( MRS / PN ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( ( ( DS / MLU ) / ( MLU - CS ) ) ,Max( MUM,( MUC / MUC ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 0.1634980988593156, "obj2": 0.6234745659581492}, {"determining": "Min( ( ( ( BR + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,( ( ( ARS / FirstVNF_CPU_Server ) / ( DDR - ( FirstVNF_Mem_Server - DDR ) ) ) + Const ) ) )", "choosing": "Max( Min( DS ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( Min( MUC ,( MLU / ( MUR / DS ) ) ) * CS ) ) ) )", "obj1": 0.8403041825095057, "obj2": 0.11098282165433564}, {"determining": "Min( Max( ACS,ACS ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - MUM ) ,( DS - CS ) )", "obj1": 0.38783269961977185, "obj2": 0.40974950638311264}, {"determining": "( Min( ( DDR / MRS ) ,FirstVNF_Mem_Server ) / ( ( FirstVNF_RAM + Min( AMS ,MDR ) ) - ARS ) )", "choosing": "( ( Max( Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( RRSe / ( MLU / MUR ) ) / Min( MUC ,RCSe ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) ),DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 0.8174904942965779, "obj2": 0.13744802757295274}, {"determining": "( ( ( ( ACS * PN ) + ( Max( Min( Min( AMS ,ARS ) ,ACS ),( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( ( DS / MUR ) * ( MUM - MUR ) ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( Max( RCSe,MUR ) + ( RCSe - ( MUC * Min( DS ,( RCSe / RRSe ) ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.6596958174904943, "obj2": 0.21858997934122706}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - ( RRS + Max( CRS,RRS ) ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( RRSe * ( RRSe * MUM ) ) )", "obj1": 0.07034220532319392, "obj2": 0.7559805203087555}, {"determining": "( ( ( ( ACS * PN ) + ( Min( ( ARS - RRS ) ,MRS ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( Min( DS ,( DS * RCSe ) ) ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.6083650190114068, "obj2": 0.2697354399566197}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( ( ( CRS * AMS ) + PN ) * ARS ) * ( CRS + ACS ) ) ) + ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( DS * ( ( ( RCSe - ( ( RCSe + Min( RCSe ,MLU ) ) + MUC ) ) * Min( Max( DS,MUR ) ,MUM ) ) + ( DS - CS ) ) ) / Max( DS,Max( RMSe,MUM ) ) )", "obj1": 0.5608365019011406, "obj2": 0.30913357764386223}, {"determining": "Max( Max( Min( FirstVNF_RAM ,PN ),( PN + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( CS * MUR ) + MUC ) ) / CS ) - ( CS / MUM ) )", "obj1": 0.279467680608365, "obj2": 0.5000179664257737}, {"determining": "( Min( ( ARS - RRS ) ,MRS ) - ( MDR - FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( ( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( MLU - RMSe ) + Min( DS ,RRSe ) ) ) / ( ( MLU * RCSe ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) ) - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) ,RMSe ) + ( MUM - RMSe ) )", "obj1": 0.3041825095057034, "obj2": 0.4832791266920754}, {"determining": "( ( ( BR - FirstVNF_Mem ) / MRS ) + Max( Max( DDR,MDR ),BR ) )", "choosing": "Min( ( ( MLU + Min( RRSe ,( ( Min( MUM ,RRSe ) - ( DS + RCSe ) ) + Min( ( MUM * MLU ) ,RCSe ) ) ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Min( ( DS + ( DS + RRSe ) ) ,RCSe ) - MLU ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6339607267569531}, {"determining": "Min( FirstVNF_Mem_Server ,( Min( FirstVNF_CPU_Server ,( ( PN - Const ) + PN ) ) - PN ) )", "choosing": "( ( MUR - ( MLU * ( MUC / ( ( RRSe + ( Max( DS,MLU ) - CS ) ) - Min( Max( RMSe,MUR ) ,CS ) ) ) ) ) / Min( RMSe ,Min( MUC ,MUC ) ) )", "obj1": 0.35551330798479086, "obj2": 0.45971618730601926}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / FirstVNF_Mem )", "choosing": "( ( Max( Min( ( ( Max( RCSe,( DS / MLU ) ) - Min( RMSe ,RRSe ) ) - ( ( RRSe / ( MUR / MUR ) ) / Min( MUC ,RCSe ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) ),DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 0.811787072243346, "obj2": 0.14169384067852905}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( RRS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,Max( Min( FirstVNF_RAM ,PN ),( AMS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( DS * ( RRSe + ( MUM - CS ) ) ) / Max( DS,Max( RMSe,Max( Max( MUC,CS ),( ( MUC + MLU ) / ( MUM + Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.5855513307984791, "obj2": 0.29381791258544404}, {"determining": "Min( FirstVNF_Mem_Server ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR - ( MLU * ( ( RMSe + ( Min( MUR ,RCSe ) * RMSe ) ) / Max( RMSe,( MLU + RCSe ) ) ) ) ) / Min( RMSe ,Min( MUC ,MUC ) ) )", "obj1": 0.9315589353612167, "obj2": 0.040454007165969585}, {"determining": "( ( ( ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,PN ) * PN ) + ( ( Const * Max( ( MRS - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * MRS ) ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * ( DS * MUM ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.596958174904943, "obj2": 0.2706435928786264}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / Const ) ) - PN ) ) ,FirstVNF_Mem ),Min( Min( MDR ,PN ) ,( AMS / BR ) ) ) ) ,Min( Min( ( MDR * PN ) ,( Max( FirstVNF_RAM_Server,MDR ) + FirstVNF_Mem_Server ) ) ,Max( ( RRS - Max( FirstVNF_Mem,ARS ) ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU / Max( ( ( ( RMSe / ( MUC + DS ) ) + Max( MUC,RCSe ) ) * CS ),MUC ) ) ),( ( RMSe / ( Max( ( MUM / ( ( CS / CS ) + DS ) ),MUM ) - RMSe ) ) * RCSe ) )", "obj1": 0.7737642585551331, "obj2": 0.1862294236638698}, {"determining": "Max( ( RRS - MRS ),( ( ( DDR + MDR ) - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( DDR - ( ( FirstVNF_CPU - BR ) * ACS ) ) ) / AMS ) ) ) )", "choosing": "( ( RCSe / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( Min( Max( ( ( Min( MUR ,MUM ) - RCSe ) / RMSe ),RCSe ) ,RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.9125475285171103, "obj2": 0.06585871418179678}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( PN - PN ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( MUM + ( MUM - MUC ) ) + ( ( CS + ( ( MUC * MUR ) / MUR ) ) + MUC ) ) ) / CS ) - Max( RCSe,MUM ) )", "obj1": 0.188212927756654, "obj2": 0.5680260794857914}, {"determining": "( ( Min( Max( Const,CRS ) ,FirstVNF_RAM ) * Min( PN ,( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ARS ) ) ) * ( ( ARS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) / ( ( ( RCSe + MUR ) - ( Max( MUC,( ( ( RRSe - CS ) + Max( DS,RRSe ) ) - CS ) ) * DS ) ) + ( ( ( MLU * ( MUM + MUC ) ) / CS ) / ( MUM * RMSe ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "( ( Min( MRS ,MRS ) - ( MDR - FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( MUR - ( ( Max( DS,( MUM + RRSe ) ) - ( MUM - RMSe ) ) - ( RCSe - RCSe ) ) ) * DS ) + ( RMSe * DS ) ) + ( ( DS + DS ) / Min( MUC ,CS ) ) )", "obj1": 0.5798479087452472, "obj2": 0.3014469173492317}, {"determining": "( Min( ( ARS - RRS ) ,MRS ) - ( ( ( ( ACS * PN ) + ( ( Const * Max( ( MRS - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * MRS ) ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * ( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) ,RMSe ) + ( MUM - RMSe ) )", "obj1": 0.8517110266159695, "obj2": 0.10954161362998782}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_RAM_Server - ( Min( CRS ,CRS ) / MRS ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( DS - MUC ) )", "obj1": 0.21863117870722434, "obj2": 0.5459036312323976}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( ( ( RRS + Max( FirstVNF_RAM,Min( Max( BR,Const ) ,ACS ) ) ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( ( ( Max( ( ( RMSe - RCSe ) + ( MLU - DS ) ),MUC ) - Min( Max( RRSe,( CS * RRSe ) ) ,( RRSe * ( MLU * RMSe ) ) ) ) / RCSe ) + MLU ) ,Min( MLU ,( Max( DS,MLU ) + Min( MUR ,( ( RMSe / MLU ) * Min( MUR ,Max( MUR,CS ) ) ) ) ) ) ) - ( RCSe / RRSe ) )", "obj1": 0.17300380228136883, "obj2": 0.6098043380980241}, {"determining": "( ( ( PN - Const ) + PN ) * ( PN + BR ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( Min( MUM ,DS ) * ( ( ( MLU * RCSe ) / ( MUR * MLU ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.9581749049429658, "obj2": 0.018576008354620505}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( MUM + ( MUM - MUC ) ) + MUC ) ) / CS ) - ( CS / MUM ) )", "obj1": 0.32509505703422054, "obj2": 0.4712265949232812}, {"determining": "( Min( RRS ,Max( ( ( ( RRS + ( MDR - MDR ) ) + BR ) / CRS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - BR ) ) ) ) * BR )", "choosing": "Min( ( ( Max( MUM,DS ) - Min( RMSe ,RRSe ) ) - ( CS * MUR ) ) ,Max( Max( ( DS / Min( RRSe ,( RMSe * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.20532319391634982, "obj2": 0.559295232239951}, {"determining": "( ( FirstVNF_RAM - ( BR + CRS ) ) - ( ( MRS / CRS ) * ( ( RRS / BR ) / ( PN + BR ) ) ) )", "choosing": "Min( Min( RRSe ,( ( Min( MLU ,Min( RMSe ,( RRSe - Max( RRSe,MLU ) ) ) ) - RMSe ) / CS ) ) ,( ( ( Max( ( ( Max( MUC,CS ) - MLU ) * RMSe ),Max( Min( RRSe ,MUM ),MUR ) ) / DS ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.935361216730038, "obj2": 0.0223075541840483}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( RRS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( ( DS * ( RRSe + ( MUM - CS ) ) ) / Max( DS,Max( RMSe,MUM ) ) )", "obj1": 0.6520912547528517, "obj2": 0.240619280019109}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( Max( ( MRS * PN ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ),BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( MUR - Max( MUC,( ( Max( MLU,MUM ) * RMSe ) - ( ( MUC / CS ) - ( DS - MUR ) ) ) ) ) * DS ) + ( RMSe * DS ) ) + ( ( DS + DS ) / Min( MUC ,CS ) ) )", "obj1": 0.6539923954372624, "obj2": 0.2367364963695978}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_Mem * ( MDR - ( ( AMS - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( DDR + ( PN - Const ) ) ) ) + RRS ) ) ) )", "choosing": "( ( Max( ( RRSe + DS ),Max( CS,MUR ) ) / Max( ( ( DS - ( RMSe / RCSe ) ) * CS ),( RCSe * DS ) ) ) + ( Max( MUR,MUM ) * ( ( MLU - Min( ( Max( ( CS + DS ),DS ) + CS ) ,( CS - RRSe ) ) ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2338403041825095, "obj2": 0.5408224111759229}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_CPU ),( ( ( ( FirstVNF_Mem / MDR ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Min( RCSe ,MUM ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17870722433460076, "obj2": 0.5855879543622823}, {"determining": "( ( FirstVNF_RAM - ACS ) * BR )", "choosing": "Min( ( ( Max( MUM,DS ) - Min( RMSe ,RRSe ) ) - ( CS * MUR ) ) ,Max( Max( ( DS / Min( RRSe ,( MUR * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.9220532319391636, "obj2": 0.055913178944750265}, {"determining": "( ( Max( PN,( Const - FirstVNF_RAM ) ) / Max( ( CRS * PN ),( RRS * RRS ) ) ) / Min( FirstVNF_CPU ,Min( Max( DDR,MDR ) ,RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( ( RCSe / Min( MUR ,MLU ) ) * Max( MUM,MUM ) ) ) ) / ( ( ( DS + RRSe ) - RMSe ) - RMSe ) ) ) )", "obj1": 0.18250950570342206, "obj2": 0.5776098277400395}, {"determining": "( Min( Max( ( AMS - BR ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * BR )", "choosing": "Min( Min( Max( MUR,MUM ) ,( ( ( RRSe / MUC ) * RRSe ) * ( RCSe - ( Max( MUC,( Max( CS,RCSe ) - ( RCSe - RCSe ) ) ) * MUM ) ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.21102661596958175, "obj2": 0.5557855523360038}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( MRS - Max( ( FirstVNF_RAM_Server - DDR ),Max( AMS,AMS ) ) ) ) )", "choosing": "Max( ( ( MLU - MUC ) - Min( DS ,( MLU - Min( ( ( DS + RRSe ) - Max( CS,DS ) ) ,MUC ) ) ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 0.9714828897338403, "obj2": 0.01024580608857119}, {"determining": "( ( FirstVNF_RAM - Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( Max( Const,AMS ) / FirstVNF_CPU_Server ) ) - PN ) ) ) - ( MDR * ( Const / ( PN + ( FirstVNF_CPU_Server * ( ( PN + PN ) / FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( MLU / RCSe ) ,( ( ( CS * MUR ) * Max( Max( ( ( CS - ( DS - RCSe ) ) - MLU ),RCSe ),DS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.9448669201520913, "obj2": 0.021643635368646257}, {"determining": "Max( ( ARS / Max( Min( FirstVNF_RAM ,PN ),( PN + FirstVNF_CPU ) ) ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUR + ( ( CS * MUR ) - ( RCSe - MUM ) ) ) )", "obj1": 0.2414448669201521, "obj2": 0.5364090944580744}, {"determining": "Max( Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( ( AMS - ( FirstVNF_RAM_Server * Max( FirstVNF_CPU_Server,ACS ) ) ) ,( AMS / BR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Max( Max( RRSe,RCSe ),RMSe ) ) / CS ) - Max( ( MUR / ( ( Max( MLU,MUM ) * RMSe ) - ( ( MUC / CS ) - ( MUC - MUR ) ) ) ),MUM ) )", "obj1": 0.30988593155893535, "obj2": 0.4753021280961202}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - Min( CRS ,DDR ) ) )", "choosing": "Min( RRSe ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( Max( Max( RRSe,( MUR / RRSe ) ),Min( MLU ,MUR ) ) / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.9904942965779467, "obj2": 0.0026169352388956918}, {"determining": "( ( Max( FirstVNF_RAM,ARS ) / Max( ( CRS * PN ),( RRS * ( FirstVNF_RAM * RRS ) ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,( MLU / ( ( Min( RRSe ,MUM ) / MUC ) + ( ( MUM * RMSe ) / CS ) ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5101120175139304}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Min( Min( ( BR * FirstVNF_Mem ) ,Max( ( ( MRS - FirstVNF_CPU ) / FirstVNF_CPU ),( ( ARS * MDR ) * DDR ) ) ) ,( FirstVNF_RAM * ( Min( PN ,( PN + FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem * PN ) ) ) ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( ( ( DS / MLU ) / ( MLU - CS ) ),MUM ) * Max( ( ( MUM - MLU ) * ( MUR / CS ) ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( ( Max( DS,RMSe ) - MLU ) / RRSe ) * ( MLU / RMSe ) ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5275465304829348}, {"determining": "Max( ( RRS - ( FirstVNF_CPU_Server - RRS ) ),Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( DS / MUR ) * ( ( Max( ( MUM / CS ),RRSe ) / ( MUC * RCSe ) ) + RMSe ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5160070926849357}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( DDR,MDR ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ) )", "choosing": "Min( ( Max( ( DS + DS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,RCSe ) ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11406844106463879, "obj2": 0.6455576143756445}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) ),( BR / Min( ARS ,MDR ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUC * RCSe ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),( ( CS - RRSe ) / RMSe ) ) )", "obj1": 0.31749049429657794, "obj2": 0.4735224454988405}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( MRS + CRS ) ) )", "choosing": "( ( ( MUM / ( ( MUM / MLU ) + MUC ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17490494296577946, "obj2": 0.5994139578363669}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) / ( PN / MDR ) ) ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( MUM + ( MUM - MUC ) ) + ( ( MLU / CS ) - ( RCSe + MUR ) ) ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17490494296577946, "obj2": 0.5994139578363669}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + AMS ) - FirstVNF_CPU ) - MDR ) + PN ) + ( BR / Min( ARS ,MDR ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( ( ( Max( RCSe,MUR ) + ( ( CS - RRSe ) / RMSe ) ) * MUR ) / MLU ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.007385451211767366}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( ( Max( ( FirstVNF_CPU_Server / ( MDR / BR ) ),( Const / Min( DDR ,PN ) ) ) - MRS ) - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( PN + BR ) )", "choosing": "( Max( MUR,RMSe ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.24904942965779467, "obj2": 0.5241097778072733}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Min( Min( ( BR * FirstVNF_Mem ) ,Max( ( ( MDR - FirstVNF_CPU ) / FirstVNF_CPU ),BR ) ) ,( FirstVNF_RAM * ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) ) ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( ( MLU * MLU ) / DS ) ) / ( Max( RCSe,MUM ) * Max( ( ( MUM - MLU ) * ( MUR / CS ) ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / Min( ( RCSe / RMSe ) ,Min( CS ,RMSe ) ) ) )", "obj1": 0.26806083650190116, "obj2": 0.5146805589892743}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),Max( Max( DDR,( ( ( FirstVNF_CPU_Server / CRS ) - RRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * Max( Const,CRS ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( MUC - MUR ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.25665399239543724, "obj2": 0.5235957319472838}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),BR ) * ( PN + BR ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( Min( MUM ,DS ) * ( ( ( MLU * RCSe ) / ( MUR * CS ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.2737642585551331, "obj2": 0.5141889004918115}, {"determining": "Max( Min( Max( FirstVNF_CPU,Max( ( FirstVNF_CPU - FirstVNF_Mem ),FirstVNF_RAM_Server ) ) ,CRS ),( ( ( CRS + ( FirstVNF_CPU_Server * BR ) ) * ( DDR - ( ARS * ACS ) ) ) / AMS ) )", "choosing": "( ( ( Min( Max( ( ( MUM - RCSe ) / RMSe ),RCSe ) ,RCSe ) / Max( Max( RRSe,RCSe ),RMSe ) ) / CS ) - Max( RCSe,( Max( ( ( MLU / ( ( DS / RCSe ) * RMSe ) ) - MLU ),MUC ) + ( RRSe - ( MUM + CS ) ) ) ) )", "obj1": 0.9163498098859315, "obj2": 0.06260652599774914}, {"determining": "( ( ( ( BR * MRS ) - MDR ) + PN ) + ( BR / ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Max( MUC,CS ),( RMSe + CS ) )", "obj1": 0.9752851711026616, "obj2": 0.009010282967540579}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( DDR,( BR + FirstVNF_RAM_Server ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( RMSe / MLU ) ) ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11026615969581749, "obj2": 0.647452134043304}, {"determining": "( ( ( FirstVNF_CPU - BR ) + FirstVNF_RAM_Server ) + ( DDR / MDR ) )", "choosing": "Min( ( Max( ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( Max( RCSe,( Min( DS ,( ( ( RMSe / MUC ) - MUR ) + DS ) ) - RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Max( ( RRS - MRS ),( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( ( RRS + Max( FirstVNF_RAM,ARS ) ) - ( ARS * ACS ) ) ) / AMS ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( Min( Max( ( ( MUM - RCSe ) / RMSe ),RRSe ) ,RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.9182509505703422, "obj2": 0.060079994763492864}, {"determining": "Max( Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( Min( MDR ,PN ) ,( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Max( CS,RMSe ) ) / CS ) - Max( RCSe,MUM ) )", "obj1": 0.9201520912547528, "obj2": 0.058216184682238874}, {"determining": "( ( Const * Min( Max( Min( FirstVNF_RAM ,PN ),Min( Const ,CRS ) ) ,AMS ) ) / ( BR - PN ) )", "choosing": "( ( ( MUM + ( Max( DS,( CS * Min( RMSe ,DS ) ) ) - ( ( CS * MUR ) - ( RCSe - MUM ) ) ) ) + ( MLU + DS ) ) + Min( MUC ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0008306537479135193}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUC * RCSe ) ) + ( ( MUM - RCSe ) / RMSe ) ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),Max( Max( RRSe,DS ),Min( MLU ,MUR ) ) ) )", "obj1": 0.25475285171102663, "obj2": 0.5238709213669401}, {"determining": "( ( MRS * AMS ) / ( ( ( ( BR - FirstVNF_CPU ) - ( RRS * FirstVNF_CPU_Server ) ) + PN ) + ( BR / Min( ARS ,MDR ) ) ) )", "choosing": "( ( MUM + MUC ) - ( RCSe * RRSe ) )", "obj1": 0.9809885931558935, "obj2": 0.00809228812433844}, {"determining": "( ( Const * Min( Max( Min( FirstVNF_RAM ,PN ),( PN + ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) ) ,AMS ) ) / ( BR - PN ) )", "choosing": "( ( ( MUM + ( MUM - ( ( CS * MUR ) - ( RCSe - MUM ) ) ) ) + ( MLU + DS ) ) + Min( MLU ,RCSe ) )", "obj1": 0.9980988593155894, "obj2": 0.0008306537479135193}, {"determining": "( ( PN * AMS ) / ( ( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) + ( BR / Min( ARS ,MDR ) ) ) )", "choosing": "( ( MUM + MUC ) - Max( Min( Max( RMSe,Min( ( Max( RCSe,MUR ) + ( RCSe / RRSe ) ) ,MUR ) ) ,DS ),( RMSe * RCSe ) ) )", "obj1": 0.9809885931558935, "obj2": 0.00809228812433844}, {"determining": "( ( RRS - RRS ) - Min( ACS ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,Max( DDR,FirstVNF_Mem ) ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * ( ( ARS - ( FirstVNF_CPU_Server / PN ) ) + PN ) )", "choosing": "Max( Max( Min( DS ,Max( MUM,( ( Min( RRSe ,CS ) * ( ( RRSe / RCSe ) - Min( RRSe ,DS ) ) ) + RRSe ) ) ),MUC ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_CPU_Server / MRS ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( MUR - Max( Min( MUC ,( DS * ( MUR - RCSe ) ) ),CS ) ) ) + MUC ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM * ( ( ARS / BR ) - CRS ) ) ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( Max( MUR,( ( MLU - Max( CS,MLU ) ) - MLU ) ) * DS ) - RMSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - ( Min( PN ,RRS ) * FirstVNF_RAM ) ) ) / ( MRS / PN ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( RMSe ,Max( MUM,( MUC / Min( RCSe ,MLU ) ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - Min( ( Min( FirstVNF_RAM ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ,( ( Max( FirstVNF_CPU,DDR ) * MRS ) + ARS ) ) ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ( MDR * ARS ) ) ) )", "choosing": "Max( ( ( MLU - MUC ) - Min( Min( MUR ,CS ) ,( MLU - Min( ( Max( ( MLU * MUC ),MUM ) - MUM ) ,MUC ) ) ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Min( FirstVNF_RAM_Server ,( ( RRS + ( MDR - MDR ) ) + BR ) ) ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - Max( MUM,( MUC * ( MUC - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - ( ACS * ( BR * BR ) ) ) / AMS ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( ( RRSe + RMSe ) ,( MUR * MLU ) ) + ( ( DS + Max( ( MLU - ( MUR * MUM ) ),MUM ) ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + MRS ) - PN ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Max( ( MUR - ( Max( MUR,MUR ) + ( MUR - ( MLU / ( MLU * MUM ) ) ) ) ),CS ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Max( Min( ACS ,RRS ),ARS ) ) * Min( Min( RRS ,FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( RCSe - ( ( MUM / ( DS / MLU ) ) - RMSe ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( DDR - ( ARS * ACS ) ) ) / ( FirstVNF_CPU_Server + ( Const - CRS ) ) ) ) )", "choosing": "Min( Min( CS ,MUM ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - ( ( CRS * ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server / ( AMS + Const ) ) ) ) + BR ) / MDR ) * ( ( FirstVNF_RAM_Server - ( ARS * ACS ) ) * BR ) ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( ( Max( Min( MLU ,Min( MLU ,( MLU / MUM ) ) ),MLU ) * RMSe ) ,( ( RCSe - ( ( ( ( RRSe / RRSe ) + RMSe ) - ( MLU - DS ) ) + MUM ) ) + ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( Min( Min( FirstVNF_RAM_Server ,AMS ) ,( CRS - FirstVNF_RAM_Server ) ),( Min( ACS ,ACS ) - Min( ACS ,Const ) ) ) )", "choosing": "( ( Max( CS,DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server + DDR ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( ( MUM * MUR ) ,( Max( MUR,RMSe ) - Max( Max( RCSe,Min( MLU ,DS ) ),RCSe ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - PN ) - ( Const / Max( ( CRS * PN ),( RRS * RRS ) ) ) ) + ( Max( ACS,FirstVNF_Mem_Server ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ) - ( DS + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),MDR ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_Mem + AMS ) / Min( Const ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( MUR * MUR ) ) ,( ( Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) ) * Min( MUR ,RMSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( AMS - Min( Max( ( ( RRS - FirstVNF_RAM ) + AMS ),MDR ) ,FirstVNF_RAM_Server ) ) * Min( ( ( Min( Max( MRS,MRS ) ,AMS ) * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Max( Max( MUC,RCSe ),( DS + ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Min( CS ,MUM ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,( ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( DDR * Const ) ,( ACS / PN ) ) ) + Max( ( PN + ( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - BR ) ),( Max( ( CRS * FirstVNF_RAM_Server ),ACS ) + ( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,ARS ) + ACS ) ) ) ) ) ) ,( Max( ( Const - FirstVNF_CPU ),FirstVNF_CPU_Server ) + ARS ) )", "choosing": "( ( RCSe * ( DS * DS ) ) / ( RMSe * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7582812570701774}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( Min( Min( ( DDR * FirstVNF_RAM ) ,Const ) ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * Max( FirstVNF_Mem_Server,( CRS + RRS ) ) ) ) ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( DS + CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( ARS - RRS ) ,MRS ) - ( MDR - FirstVNF_Mem ) ) ) + FirstVNF_RAM_Server ) + ( DDR / MDR ) )", "choosing": "Min( ( Max( ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( Max( RCSe,( ( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( MLU - RMSe ) + Min( DS ,RRSe ) ) ) / ( ( MLU * RCSe ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) ) - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6491493886399305}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Min( RRSe ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.7015209125475285, "obj2": 0.18943427505725996}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( BR + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - Min( Min( DS ,( DS * RCSe ) ) ,RRSe ) )", "obj1": 0.43155893536121676, "obj2": 0.3853751473273491}, {"determining": "( ( ( ( ACS * PN ) + ( Max( Max( ( FirstVNF_RAM - ACS ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + FirstVNF_CPU ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( ( DS / MUR ) * ( RCSe * Max( Max( RRSe,DS ),Min( MLU ,( MUM * CS ) ) ) ) ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.49619771863117873, "obj2": 0.3520641590807026}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / BR ) - ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Min( DS ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.876425855513308, "obj2": 0.0707244269841918}, {"determining": "( ( AMS - Min( Max( ( ( RRS - FirstVNF_RAM ) + AMS ),MDR ) ,FirstVNF_RAM_Server ) ) * Min( ( ( Min( Max( MRS,MRS ) ,AMS ) * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Max( Max( MUC,RCSe ),( DS + ( MUC * MUC ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( RRS + ARS ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / ( BR - MRS ) ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * ( ( DS / MUR ) * ( ( Max( MUM,MUC ) / ( MUR * RCSe ) ) + ( MUC / RRSe ) ) ) ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 0.5209125475285171, "obj2": 0.33585073922335285}, {"determining": "Min( ( MDR * ( Const / ( PN + Max( Max( Const,AMS ),PN ) ) ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - Max( Max( ( MLU - MLU ),RCSe ),DS ) ) ,( DS - CS ) )", "obj1": 0.3935361216730038, "obj2": 0.40268477265498054}, {"determining": "( ( Min( MRS ,Min( MDR ,PN ) ) - ( MDR - FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU_Server / CRS ) * Min( Min( MDR ,PN ) ,( AMS / BR ) ) ) ),( PN + BR ) ) )", "choosing": "( ( ( ( MUR - ( MUM + ( Min( RMSe ,RRSe ) - MUC ) ) ) * DS ) + ( RMSe * DS ) ) + ( ( DS + DS ) / Min( MUC ,CS ) ) )", "obj1": 0.6349809885931559, "obj2": 0.2572742173502985}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( Min( Max( FirstVNF_CPU,MRS ) ,( ( ( PN - FirstVNF_Mem ) - BR ) - PN ) ) ,Min( MRS ,ARS ) ),Min( Min( MDR ,RRS ) ,( AMS / BR ) ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - CRS ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU / RCSe ) ),( ( RCSe + MUR ) - ( Max( MUC,( ( Min( MUR ,RCSe ) - CS ) - CS ) ) * DS ) ) )", "obj1": 0.7718631178707225, "obj2": 0.18765738680687685}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( Max( ( FirstVNF_Mem * ( FirstVNF_CPU_Server / CRS ) ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ),BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( ( MUM * Min( ( ( RRSe / MUM ) - RCSe ) ,Max( MUR,( RMSe / MUM ) ) ) ) - ( ( ( ( DS / MLU ) * RMSe ) + ( RCSe + Max( RRSe,MUR ) ) ) * MLU ) ) * DS ) + ( RMSe * DS ) ) + ( Max( ( MLU - RRSe ),MLU ) / Min( MUC ,CS ) ) )", "obj1": 0.6920152091254753, "obj2": 0.21521417013354469}, {"determining": "( Min( RRS ,Max( ( Min( ACS ,ACS ) / CRS ),Min( CRS ,BR ) ) ) * BR )", "choosing": "Min( ( Max( Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,( MUM / MUC ) ),DS ) / CS ) ,Max( Max( ( DS / Min( RRSe ,( RMSe * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.5437262357414449, "obj2": 0.32284072046518164}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) / ( Min( PN ,AMS ) / FirstVNF_RAM_Server ) ) / Max( Min( Min( FirstVNF_RAM_Server ,PN ) ,( CRS - FirstVNF_RAM_Server ) ),( Min( ACS ,ACS ) - Min( ACS ,Const ) ) ) )", "choosing": "( ( Max( Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Min( Min( CS ,RRSe ) ,( RMSe / Max( MUR,RRSe ) ) ) ),DS ) / CS ) + ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + Min( RRSe ,MUC ) ) )", "obj1": 0.8669201520912547, "obj2": 0.09889436633262294}, {"determining": "Max( ( RRS - MRS ),( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Min( BR ,MDR ) / AMS ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( Min( Max( ( ( MUM - RCSe ) / RMSe ),( RRSe - MLU ) ) ,RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.7908745247148289, "obj2": 0.1607645699097716}, {"determining": "( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / BR ) - ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) ) + ( MRS - FirstVNF_Mem ) ) / ( MRS / PN ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( ( ( DS / MLU ) / ( MLU - CS ) ) ,Max( MUM,( MUC / MUC ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 0.1634980988593156, "obj2": 0.6234745659581492}, {"determining": "Min( ( ( ( BR + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( PN ,FirstVNF_Mem ),( MRS / FirstVNF_CPU_Server ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,( ( ( ARS / FirstVNF_CPU_Server ) / ( DDR - ( FirstVNF_Mem_Server - DDR ) ) ) + Const ) ) )", "choosing": "Max( Min( DS ,( MLU / RCSe ) ),Min( RCSe ,( MUM - ( Min( MUC ,( MLU / ( MUR / DS ) ) ) * CS ) ) ) )", "obj1": 0.8403041825095057, "obj2": 0.11098282165433564}, {"determining": "Min( ( MDR * ( MRS / CRS ) ) ,( Min( ( FirstVNF_CPU_Server - DDR ) ,CRS ) - Const ) )", "choosing": "Min( ( ( ( CS + ( Max( ( RMSe + CS ),RCSe ) / RMSe ) ) / ( MUM / RCSe ) ) * ( MUM * ( MLU - ( RRSe - ( RMSe - MUM ) ) ) ) ) ,( DS - CS ) )", "obj1": 0.38022813688212925, "obj2": 0.40872264928616925}, {"determining": "( Min( ( DDR / MRS ) ,FirstVNF_Mem_Server ) / ( ( FirstVNF_RAM + Min( AMS ,MDR ) ) - ARS ) )", "choosing": "( ( Max( Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( ( RRSe / ( MLU / MUR ) ) / Min( MUC ,RCSe ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) ),DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 0.8174904942965779, "obj2": 0.13744802757295274}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - ( RRS + Max( CRS,RRS ) ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( RRSe * ( RRSe * MUM ) ) )", "obj1": 0.07034220532319392, "obj2": 0.7559805203087555}, {"determining": "( ( ( BR - FirstVNF_Mem ) / MRS ) + Max( Max( DDR,MDR ),BR ) )", "choosing": "Min( ( ( MLU + Min( RRSe ,( ( Min( MUM ,RRSe ) - ( DS + RCSe ) ) + Min( ( MUM * MLU ) ,RCSe ) ) ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Min( ( DS + ( DS + RRSe ) ) ,RCSe ) - MLU ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6339607267569531}, {"determining": "Min( FirstVNF_Mem_Server ,( Min( FirstVNF_CPU_Server ,( ( PN - Const ) + PN ) ) - PN ) )", "choosing": "( ( MUR - ( MLU * ( MUC / ( ( RRSe + ( Max( DS,MLU ) - CS ) ) - Min( Max( RMSe,MUR ) ,CS ) ) ) ) ) / Min( RMSe ,Min( MUC ,MUC ) ) )", "obj1": 0.35551330798479086, "obj2": 0.45971618730601926}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / FirstVNF_Mem )", "choosing": "( ( Max( Min( ( ( Max( RCSe,( DS / MLU ) ) - Min( RMSe ,RRSe ) ) - ( ( RRSe / ( MUR / MUR ) ) / Min( MUC ,RCSe ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) ),DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 0.811787072243346, "obj2": 0.14169384067852905}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( RRS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,Max( Min( FirstVNF_RAM ,PN ),( AMS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( DS * ( RRSe + ( MUM - CS ) ) ) / Max( DS,Max( RMSe,Max( Max( MUC,CS ),( ( MUC + MLU ) / ( MUM + Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.5855513307984791, "obj2": 0.29381791258544404}, {"determining": "( ( ( ( ACS * PN ) + ( Min( ( ARS - RRS ) ,MRS ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * ( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( Min( DS ,( DS * RCSe ) ) ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - ( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) ) ) ) ) )", "obj1": 0.9106463878326996, "obj2": 0.060838809165990555}, {"determining": "Min( FirstVNF_Mem_Server ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR - ( MLU * ( ( RMSe + ( Min( MUR ,RCSe ) * RMSe ) ) / Max( RMSe,( MLU + RCSe ) ) ) ) ) / Min( RMSe ,Min( MUC ,MUC ) ) )", "obj1": 0.9315589353612167, "obj2": 0.040454007165969585}, {"determining": "( ( ( ( ACS * PN ) + ( Min( ( ARS - RRS ) ,MRS ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( Min( DS ,( DS * RCSe ) ) ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.6083650190114068, "obj2": 0.2697354399566197}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( ( ( CRS * AMS ) + PN ) * ARS ) * ( CRS + ACS ) ) ) + ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( DS * ( ( ( RCSe - ( ( RCSe + Min( RCSe ,MLU ) ) + MUC ) ) * Min( Max( DS,MUR ) ,MUM ) ) + ( DS - CS ) ) ) / Max( DS,Max( RMSe,MUM ) ) )", "obj1": 0.5608365019011406, "obj2": 0.30913357764386223}, {"determining": "( ( ( ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,PN ) * PN ) + ( ( Const * Max( ( MRS - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * MRS ) ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * ( DS * MUM ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.596958174904943, "obj2": 0.2706435928786264}, {"determining": "( ( FirstVNF_RAM - Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( ARS * ( DDR - ( ARS * ACS ) ) ) / AMS ) ) ) ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( MLU / RCSe ) ,( ( Max( Min( Max( ( ( MUM - RCSe ) / RMSe ),RCSe ) ,RCSe ),( RRSe - RMSe ) ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.9448669201520913, "obj2": 0.016448642128288442}, {"determining": "( ( AMS - ( Min( ARS ,FirstVNF_Mem ) * Min( Min( FirstVNF_RAM ,Const ) ,FirstVNF_Mem_Server ) ) ) * Min( ( ( Max( Const,FirstVNF_RAM_Server ) * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Max( MUC,( ( RCSe + DS ) - CS ) ) )", "obj1": 0.7832699619771863, "obj2": 0.1770572801522673}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( PN - PN ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( MUM + ( MUM - MUC ) ) + ( ( CS + ( ( MUC * MUR ) / MUR ) ) + MUC ) ) ) / CS ) - Max( RCSe,MUM ) )", "obj1": 0.188212927756654, "obj2": 0.5680260794857914}, {"determining": "( ( Min( Max( Const,CRS ) ,FirstVNF_RAM ) * Min( PN ,( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) - ARS ) ) ) * ( ( ARS + FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,MUC ) / ( ( ( RCSe + MUR ) - ( Max( MUC,( ( ( RRSe - CS ) + Max( DS,RRSe ) ) - CS ) ) * DS ) ) + ( ( ( MLU * ( MUM + MUC ) ) / CS ) / ( MUM * RMSe ) ) ) )", "obj1": 0.3517110266159696, "obj2": 0.46835391715389396}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( RRS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( ( DS * ( RRSe + ( MUM - CS ) ) ) / Max( DS,Max( RMSe,MUM ) ) )", "obj1": 0.6520912547528517, "obj2": 0.240619280019109}, {"determining": "( ( FirstVNF_RAM - ( BR + CRS ) ) - ( ( MRS / CRS ) * ( ( RRS / BR ) / ( PN + BR ) ) ) )", "choosing": "Min( Min( RRSe ,( ( Min( MLU ,Min( RMSe ,( RRSe - Max( RRSe,MLU ) ) ) ) - RMSe ) / CS ) ) ,( ( ( Max( ( ( Max( MUC,CS ) - MLU ) * RMSe ),Max( Min( RRSe ,MUM ),MUR ) ) / DS ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.935361216730038, "obj2": 0.0223075541840483}, {"determining": "( Min( ( ARS - RRS ) ,MRS ) - ( ( ( ( ACS * PN ) + ( ( Const * Max( ( MRS - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * MRS ) ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) ) )", "choosing": "( Min( ( RRSe * ( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) ,RMSe ) + ( MUM - RMSe ) )", "obj1": 0.8517110266159695, "obj2": 0.10954161362998782}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_RAM_Server - ( Min( CRS ,CRS ) / MRS ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( DS - MUC ) )", "obj1": 0.21863117870722434, "obj2": 0.5459036312323976}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( ( ( RRS + Max( FirstVNF_RAM,Min( Max( BR,Const ) ,ACS ) ) ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( ( ( ( Max( ( ( RMSe - RCSe ) + ( MLU - DS ) ),MUC ) - Min( Max( RRSe,( CS * RRSe ) ) ,( RRSe * ( MLU * RMSe ) ) ) ) / RCSe ) + MLU ) ,Min( MLU ,( Max( DS,MLU ) + Min( MUR ,( ( RMSe / MLU ) * Min( MUR ,Max( MUR,CS ) ) ) ) ) ) ) - ( RCSe / RRSe ) )", "obj1": 0.17300380228136883, "obj2": 0.6098043380980241}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( MUM + ( MUM - MUC ) ) + MUC ) ) / CS ) - ( CS / MUM ) )", "obj1": 0.32509505703422054, "obj2": 0.4712265949232812}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( MRS - Max( ( FirstVNF_RAM_Server - DDR ),Max( AMS,AMS ) ) ) ) )", "choosing": "Max( ( ( MLU - MUC ) - Min( DS ,( MLU - Min( ( ( DS + RRSe ) - Max( CS,DS ) ) ,MUC ) ) ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 0.9714828897338403, "obj2": 0.01024580608857119}, {"determining": "Max( Max( Min( FirstVNF_RAM ,PN ),( PN + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( CS * MUR ) + MUC ) ) / CS ) - ( CS / MUM ) )", "obj1": 0.279467680608365, "obj2": 0.5000179664257737}, {"determining": "( ( ( ( ACS * PN ) + ( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( ( ( Min( MRS ,MRS ) - ( MDR - FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) ) * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( ( DS / MUR ) * ( RCSe * Max( Max( RRSe,DS ),Max( DS,( MUM + RRSe ) ) ) ) ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( Max( RCSe,MUR ) + ( CS / RMSe ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.6615969581749049, "obj2": 0.21821474520512696}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( Max( ( MRS * PN ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ),BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( MUR - Max( MUC,( ( Max( MLU,MUM ) * RMSe ) - ( ( MUC / CS ) - ( DS - MUR ) ) ) ) ) * DS ) + ( RMSe * DS ) ) + ( ( DS + DS ) / Min( MUC ,CS ) ) )", "obj1": 0.6539923954372624, "obj2": 0.2367364963695978}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_Mem * ( MDR - ( ( AMS - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( DDR + ( PN - Const ) ) ) ) + RRS ) ) ) )", "choosing": "( ( Max( ( RRSe + DS ),Max( CS,MUR ) ) / Max( ( ( DS - ( RMSe / RCSe ) ) * CS ),( RCSe * DS ) ) ) + ( Max( MUR,MUM ) * ( ( MLU - Min( ( Max( ( CS + DS ),DS ) + CS ) ,( CS - RRSe ) ) ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2338403041825095, "obj2": 0.5408224111759229}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_CPU ),( ( ( ( FirstVNF_Mem / MDR ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Min( RCSe ,MUM ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17870722433460076, "obj2": 0.5855879543622823}, {"determining": "( Min( ( ARS - RRS ) ,MRS ) - ( MDR - FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( ( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( MLU - RMSe ) + Min( DS ,RRSe ) ) ) / ( ( MLU * RCSe ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) ) - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) ,RMSe ) + ( MUM - RMSe ) )", "obj1": 0.3041825095057034, "obj2": 0.4832791266920754}, {"determining": "( ( FirstVNF_RAM - ACS ) * BR )", "choosing": "Min( ( ( Max( MUM,DS ) - Min( RMSe ,RRSe ) ) - ( CS * MUR ) ) ,Max( Max( ( DS / Min( RRSe ,( MUR * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.9220532319391636, "obj2": 0.055913178944750265}, {"determining": "( Min( RRS ,Max( ( ( ( RRS + ( MDR - MDR ) ) + BR ) / CRS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - BR ) ) ) ) * BR )", "choosing": "Min( ( ( Max( MUM,DS ) - Min( RMSe ,RRSe ) ) - ( CS * MUR ) ) ,Max( Max( ( DS / Min( RRSe ,( RMSe * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.20532319391634982, "obj2": 0.559295232239951}, {"determining": "Max( ( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) ),( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( DDR - ( ARS * ACS ) ) ) / AMS ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( Min( Max( ( ( MUM - RCSe ) / RMSe ),( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) ) ) ,RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.24904942965779467, "obj2": 0.5221941812510751}, {"determining": "( ( Max( PN,( Const - FirstVNF_RAM ) ) / Max( ( CRS * PN ),( RRS * RRS ) ) ) / Min( FirstVNF_CPU ,Min( Max( DDR,MDR ) ,RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( ( RCSe / Min( MUR ,MLU ) ) * Max( MUM,MUM ) ) ) ) / ( ( ( DS + RRSe ) - RMSe ) - RMSe ) ) ) )", "obj1": 0.18250950570342206, "obj2": 0.5776098277400395}, {"determining": "( ( ( ( ACS * PN ) + ( Max( Min( Min( AMS ,ARS ) ,ACS ),( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( ( DS / MUR ) * ( MUM - MUR ) ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( Max( RCSe,MUR ) + ( RCSe - ( MUC * Min( DS ,( RCSe / RRSe ) ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.6596958174904943, "obj2": 0.21858997934122706}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * ( DS * MUM ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUR ) + Min( DS ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.5722433460076045, "obj2": 0.3033169352653052}, {"determining": "( ( Max( FirstVNF_RAM,ARS ) / Max( ( CRS * PN ),( RRS * ( FirstVNF_RAM * RRS ) ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,( MLU / ( ( Min( RRSe ,MUM ) / MUC ) + ( ( MUM * RMSe ) / CS ) ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5101120175139304}, {"determining": "Max( ( RRS - MRS ),( ( RRS / Min( PN ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( ( AMS - ( FirstVNF_RAM_Server * Max( FirstVNF_CPU_Server,ACS ) ) ) ,( AMS / BR ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( RRSe * ( MUC * MUM ) ) )", "obj1": 0.2965779467680608, "obj2": 0.4954958910932139}, {"determining": "( Min( Max( ( AMS - BR ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * BR )", "choosing": "Min( Min( Max( MUR,MUM ) ,( ( ( RRSe / MUC ) * RRSe ) * ( RCSe - ( Max( MUC,( Max( CS,RCSe ) - ( RCSe - RCSe ) ) ) * MUM ) ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.21102661596958175, "obj2": 0.5557855523360038}, {"determining": "Max( ( ARS / Max( Min( FirstVNF_RAM ,PN ),( PN + FirstVNF_CPU ) ) ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUR + ( ( CS * MUR ) - ( RCSe - MUM ) ) ) )", "obj1": 0.2414448669201521, "obj2": 0.5364090944580744}, {"determining": "Max( Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( ( AMS - ( FirstVNF_RAM_Server * Max( FirstVNF_CPU_Server,ACS ) ) ) ,( AMS / BR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Max( Max( RRSe,RCSe ),RMSe ) ) / CS ) - Max( ( MUR / ( ( Max( MLU,MUM ) * RMSe ) - ( ( MUC / CS ) - ( MUC - MUR ) ) ) ),MUM ) )", "obj1": 0.30988593155893535, "obj2": 0.4753021280961202}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Min( Min( ( BR * FirstVNF_Mem ) ,Max( ( ( MRS - FirstVNF_CPU ) / FirstVNF_CPU ),( ( ARS * MDR ) * DDR ) ) ) ,( FirstVNF_RAM * ( Min( PN ,( PN + FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem * PN ) ) ) ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( ( ( DS / MLU ) / ( MLU - CS ) ),MUM ) * Max( ( ( MUM - MLU ) * ( MUR / CS ) ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( ( Max( DS,RMSe ) - MLU ) / RRSe ) * ( MLU / RMSe ) ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5275465304829348}, {"determining": "( ( Min( MRS ,MRS ) - ( MDR - FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( MUR - ( ( Max( DS,( MUM + RRSe ) ) - ( MUM - RMSe ) ) - ( RCSe - RCSe ) ) ) * DS ) + ( RMSe * DS ) ) + ( ( DS + DS ) / Min( MUC ,CS ) ) )", "obj1": 0.5798479087452472, "obj2": 0.3014469173492317}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / Const ) ) - PN ) ) ,FirstVNF_Mem ),Min( Min( MDR ,PN ) ,( AMS / BR ) ) ) ) ,Min( Min( ( MDR * PN ) ,( Max( FirstVNF_RAM_Server,MDR ) + FirstVNF_Mem_Server ) ) ,Max( ( RRS - Max( FirstVNF_Mem,ARS ) ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU / Max( ( ( ( RMSe / ( MUC + DS ) ) + Max( MUC,RCSe ) ) * CS ),MUC ) ) ),( ( RMSe / ( Max( ( MUM / ( ( CS / CS ) + DS ) ),MUM ) - RMSe ) ) * RCSe ) )", "obj1": 0.7737642585551331, "obj2": 0.1862294236638698}, {"determining": "Max( ( RRS - ( FirstVNF_CPU_Server - RRS ) ),Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( DS / MUR ) * ( ( Max( ( MUM / CS ),RRSe ) / ( MUC * RCSe ) ) + RMSe ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5160070926849357}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - Min( CRS ,DDR ) ) )", "choosing": "Min( RRSe ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( Max( Max( RRSe,( MUR / RRSe ) ),Min( MLU ,MUR ) ) / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.9904942965779467, "obj2": 0.0026169352388956918}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server / CRS ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe - RCSe ) - ( CS / MUM ) )", "obj1": 0.2984790874524715, "obj2": 0.4933718693653632}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( DDR,MDR ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ) )", "choosing": "Min( ( Max( ( DS + DS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,RCSe ) ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11406844106463879, "obj2": 0.6455576143756445}, {"determining": "( ( ( FirstVNF_CPU - BR ) + FirstVNF_RAM_Server ) + ( DDR / MDR ) )", "choosing": "Min( ( Max( ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( Max( RCSe,( Min( DS ,( ( ( RMSe / MUC ) - MUR ) + DS ) ) - RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "( Max( Max( ( FirstVNF_RAM - ACS ),Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) ),( BR / Min( ARS ,MDR ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * Const ) ,( ACS / PN ) ) ) )", "choosing": "( Min( Min( ( MUM / MUC ) ,( DS - CS ) ) ,( ( RRSe - MUC ) * ( ( ( DS / MUR ) * ( ( Max( MUM,RRSe ) / ( MUC * RCSe ) ) + RMSe ) ) + MUC ) ) ) * Max( Max( Min( CS ,RCSe ),( DS / MLU ) ),( ( CS - RRSe ) / RMSe ) ) )", "obj1": 0.31749049429657794, "obj2": 0.4735224454988405}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( MRS + CRS ) ) )", "choosing": "( ( ( MUM / ( ( MUM / MLU ) + MUC ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17490494296577946, "obj2": 0.5994139578363669}, {"determining": "Max( ( RRS - ( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ),Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + RRSe )", "obj1": 0.26806083650190116, "obj2": 0.513648249533027}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) / ( PN / MDR ) ) ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( MUM + ( MUM - MUC ) ) + ( ( MLU / CS ) - ( RCSe + MUR ) ) ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17490494296577946, "obj2": 0.5994139578363669}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + AMS ) - FirstVNF_CPU ) - MDR ) + PN ) + ( BR / Min( ARS ,MDR ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( ( ( Max( RCSe,MUR ) + ( ( CS - RRSe ) / RMSe ) ) * MUR ) / MLU ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.007385451211767366}, {"determining": "Max( ( RRS - MRS ),( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( ( RRS + Max( FirstVNF_RAM,ARS ) ) - ( ARS * ACS ) ) ) / AMS ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( Min( Max( ( ( MUM - RCSe ) / RMSe ),RRSe ) ,RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.9182509505703422, "obj2": 0.060079994763492864}, {"determining": "( ( ( ( BR * MRS ) - MDR ) + PN ) + ( BR / ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Max( MUC,CS ),( RMSe + CS ) )", "obj1": 0.9752851711026616, "obj2": 0.009010282967540579}, {"determining": "Max( Max( Min( FirstVNF_RAM ,PN ),( PN + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / ( Max( ( FirstVNF_CPU_Server / ( MDR / BR ) ),( Const / Min( DDR ,PN ) ) ) - MRS ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( CS * Max( Min( CS ,RCSe ),( DS / MLU ) ) ) + MUC ) ) / CS ) - ( CS / MUM ) )", "obj1": 0.26425855513307983, "obj2": 0.5155085892723502}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( DDR,( BR + FirstVNF_RAM_Server ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( RMSe / MLU ) ) ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11026615969581749, "obj2": 0.647452134043304}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( DDR,MDR ),Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,CRS ) ) )", "choosing": "Min( ( ( MUM / Max( CS,RMSe ) ) / CS ) ,( ( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,RCSe ) ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.5577879434909406}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Max( Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( Min( MDR ,PN ) ,( RRS + ( MRS - FirstVNF_Mem ) ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Max( CS,( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ) / CS ) - Max( RCSe,MUM ) )", "obj1": 0.9201520912547528, "obj2": 0.05819740998202571}, {"determining": "( ( FirstVNF_RAM - ( BR + CRS ) ) - ( ( MRS / CRS ) * ( ( RRS / BR ) / ( PN + BR ) ) ) )", "choosing": "Min( Min( RRSe ,( ( Min( MLU ,Min( RMSe ,( RRSe - Max( RRSe,MLU ) ) ) ) - RMSe ) / CS ) ) ,( ( ( Max( ( ( Max( MUC,CS ) - MLU ) * RMSe ),Max( Min( RRSe ,MUM ),MUR ) ) / DS ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007724911181790356}, {"determining": "( ( MRS * AMS ) / ( ( ( ( BR - FirstVNF_CPU ) - ( RRS * FirstVNF_CPU_Server ) ) + PN ) + ( BR / Min( ARS ,MDR ) ) ) )", "choosing": "( ( MUM + MUC ) - ( RCSe * RRSe ) )", "obj1": 0.9809885931558935, "obj2": 0.00809228812433844}, {"determining": "( ( FirstVNF_RAM - Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( CRS / BR ) ) - PN ) ) ) - ( ( MRS / CRS ) * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( Min( RRSe ,( ( Min( ( MUM + RRSe ) ,Min( RMSe ,( RMSe / DS ) ) ) - RMSe ) / CS ) ) ,( Min( RCSe ,RRSe ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007724911181790356}, {"determining": "( ( PN * AMS ) / ( ( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) + ( BR / Min( ARS ,MDR ) ) ) )", "choosing": "( ( MUM + MUC ) - Max( Min( Max( RMSe,Min( ( Max( RCSe,MUR ) + ( RCSe / RRSe ) ) ,MUR ) ) ,DS ),( RMSe * RCSe ) ) )", "obj1": 0.9809885931558935, "obj2": 0.00809228812433844}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( FirstVNF_CPU ,ARS ) ) / ( ( PN - ACS ) * Max( Min( Max( Min( RRS ,( FirstVNF_RAM * RRS ) ),Const ) ,AMS ),BR ) ) ) * Min( Min( ( MDR * AMS ) ,( FirstVNF_RAM * ARS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( ( Max( MUC,Max( CS,( Max( RMSe,CS ) * CS ) ) ) * DS ) ,( DS * ( ( MUC + RRSe ) - RRSe ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - Min( ACS ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,Max( DDR,FirstVNF_Mem ) ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * ( ( ARS - ( FirstVNF_CPU_Server / PN ) ) + PN ) )", "choosing": "Max( Max( Min( DS ,Max( MUM,( ( Min( RRSe ,CS ) * ( ( RRSe / RCSe ) - Min( RRSe ,DS ) ) ) + RRSe ) ) ),MUC ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_CPU_Server / MRS ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( MUR - Max( Min( MUC ,( DS * ( MUR - RCSe ) ) ),CS ) ) ) + MUC ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM * ( ( ARS / BR ) - CRS ) ) ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( Max( MUR,( ( MLU - Max( CS,MLU ) ) - MLU ) ) * DS ) - RMSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - ( Min( PN ,RRS ) * FirstVNF_RAM ) ) ) / ( MRS / PN ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( RMSe ,Max( MUM,( MUC / Min( RCSe ,MLU ) ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - Min( ( Min( FirstVNF_RAM ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ,( ( Max( FirstVNF_CPU,DDR ) * MRS ) + ARS ) ) ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ( MDR * ARS ) ) ) )", "choosing": "Max( ( ( MLU - MUC ) - Min( Min( MUR ,CS ) ,( MLU - Min( ( Max( ( MLU * MUC ),MUM ) - MUM ) ,MUC ) ) ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Min( FirstVNF_RAM_Server ,( ( RRS + ( MDR - MDR ) ) + BR ) ) ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - Max( MUM,( MUC * ( MUC - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - ( ACS * ( BR * BR ) ) ) / AMS ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( ( RRSe + RMSe ) ,( MUR * MLU ) ) + ( ( DS + Max( ( MLU - ( MUR * MUM ) ),MUM ) ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + MRS ) - PN ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Max( ( MUR - ( Max( MUR,MUR ) + ( MUR - ( MLU / ( MLU * MUM ) ) ) ) ),CS ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Max( Min( ACS ,RRS ),ARS ) ) * Min( Min( RRS ,FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( RCSe - ( ( MUM / ( DS / MLU ) ) - RMSe ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( DDR - ( ARS * ACS ) ) ) / ( FirstVNF_CPU_Server + ( Const - CRS ) ) ) ) )", "choosing": "Min( Min( CS ,MUM ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - ( ( CRS * ( FirstVNF_Mem - FirstVNF_RAM ) ) + ( FirstVNF_Mem_Server / ( AMS + Const ) ) ) ) + BR ) / MDR ) * ( ( FirstVNF_RAM_Server - ( ARS * ACS ) ) * BR ) ) * ( Min( FirstVNF_CPU_Server ,MRS ) - ( FirstVNF_Mem_Server / BR ) ) )", "choosing": "Min( ( Max( Min( MLU ,Min( MLU ,( MLU / MUM ) ) ),MLU ) * RMSe ) ,( ( RCSe - ( ( ( ( RRSe / RRSe ) + RMSe ) - ( MLU - DS ) ) + MUM ) ) + ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Max( ( RRS - MRS ),( FirstVNF_Mem * ( MDR - ( ( AMS - ( ( RRS + Max( FirstVNF_RAM,ARS ) ) - ( ARS * ACS ) ) ) + RRS ) ) ) )", "choosing": "( ( Max( ( RRSe + DS ),Max( CS,MUR ) ) / Max( ( ( DS - ( RMSe / RCSe ) ) * CS ),( RCSe * DS ) ) ) + ( Max( MUR,MUM ) * ( ( MLU - Min( ( Max( ( CS + RRSe ),DS ) + CS ) ,( CS - RRSe ) ) ) / Max( RRSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( Max( ( ( RRS - FirstVNF_RAM ) + AMS ),MDR ) ,FirstVNF_RAM_Server ) ) * Min( ( ( Min( Max( MRS,MRS ) ,AMS ) * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Max( Max( MUC,RCSe ),( DS + ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,( ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * Min( ( DDR * Const ) ,( ACS / PN ) ) ) + Max( ( PN + ( ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - BR ) ),( Max( ( CRS * FirstVNF_RAM_Server ),ACS ) + ( FirstVNF_CPU - ( Max( FirstVNF_Mem_Server,ARS ) + ACS ) ) ) ) ) ) ,( Max( ( Const - FirstVNF_CPU ),FirstVNF_CPU_Server ) + ARS ) )", "choosing": "( ( RCSe * ( DS * DS ) ) / ( RMSe * MLU ) )", "obj1": 0.06463878326996197, "obj2": 0.7582812570701774}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / ( ( ( BR * MRS ) - MDR ) + PN ) ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * ( RMSe + CS ) ) * MUM ) )", "obj1": 0.7775665399239544, "obj2": 0.06878108114269432}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + Max( ( Min( Min( ( DDR * FirstVNF_RAM ) ,Const ) ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( FirstVNF_CPU - ( MRS * Max( FirstVNF_Mem_Server,( CRS + RRS ) ) ) ) ) ),Min( FirstVNF_RAM_Server ,CRS ) ) )", "choosing": "( ( ( ( MUM - CS ) - ( MLU + MUC ) ) * ( ( DS + DS ) / Min( MUC ,CS ) ) ) + ( DS + CS ) )", "obj1": 0.07604562737642585, "obj2": 0.7159706074089407}, {"determining": "( ( ( ( BR * MRS ) - MDR ) + PN ) + ( BR / ARS ) )", "choosing": "Max( Max( MUC,CS ),( RMSe + ( MLU * DS ) ) )", "obj1": 0.8631178707224335, "obj2": 0.05599473211556188}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / Const ) ) - PN ) ) ,FirstVNF_Mem ),Min( Min( MDR ,PN ) ,( AMS / BR ) ) ) ) ,Min( Min( ( MDR * PN ) ,( Max( FirstVNF_RAM_Server,MDR ) + FirstVNF_Mem_Server ) ) ,Max( ( RRS - Max( FirstVNF_Mem,ARS ) ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU / Max( ( ( ( RMSe / ( MUC + DS ) ) + Max( MUC,RCSe ) ) * CS ),MUC ) ) ),( ( RMSe / ( Max( ( MUM / ( ( CS / CS ) + DS ) ),MUM ) - RMSe ) ) * RCSe ) )", "obj1": 0.7737642585551331, "obj2": 0.1862294236638698}, {"determining": "( ( ( FirstVNF_CPU - ( Min( ( ARS - RRS ) ,MRS ) - ( MDR - FirstVNF_Mem ) ) ) + FirstVNF_RAM_Server ) + ( DDR / MDR ) )", "choosing": "Min( ( Max( ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( Max( RCSe,( ( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( MLU - RMSe ) + Min( DS ,RRSe ) ) ) / ( ( MLU * RCSe ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) ) - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.10836501901140684, "obj2": 0.6491493886399305}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - AMS ) ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Min( RRSe ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.7015209125475285, "obj2": 0.18943427505725996}, {"determining": "( ( AMS - Min( Max( ( ( RRS - FirstVNF_RAM ) + AMS ),MDR ) ,FirstVNF_RAM_Server ) ) * Min( ( ( Min( Max( MRS,MRS ) ,AMS ) * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,Max( Max( MUC,RCSe ),( DS + ( MUC * MUC ) ) ) )", "obj1": 0.3745247148288973, "obj2": 0.44125492582878423}, {"determining": "( ( FirstVNF_RAM - ACS ) * BR )", "choosing": "Min( ( ( Max( MUM,DS ) - Min( RMSe ,RRSe ) ) - ( CS * MUR ) ) ,Max( Max( ( DS / Min( RRSe ,( MUR * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.9220532319391636, "obj2": 0.055913178944750265}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( MRS + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) ) )", "choosing": "( ( ( MUM / ( ( ( DS * Min( MUR ,RMSe ) ) / MLU ) + MUC ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.1634980988593156, "obj2": 0.607026014858247}, {"determining": "Min( FirstVNF_Mem_Server ,( Min( FirstVNF_CPU_Server ,( ( PN - Const ) + PN ) ) - PN ) )", "choosing": "( ( MUR - ( MLU * ( MUC / ( ( RRSe + ( Max( DS,MLU ) - CS ) ) - Min( Max( RMSe,MUR ) ,CS ) ) ) ) ) / Min( RMSe ,Min( MUC ,MUC ) ) )", "obj1": 0.35551330798479086, "obj2": 0.45971618730601926}, {"determining": "( ( ( BR - FirstVNF_Mem ) / MRS ) + Max( Max( DDR,MDR ),BR ) )", "choosing": "Min( ( ( MLU + Min( RRSe ,( ( Min( MUM ,RRSe ) - ( DS + RCSe ) ) + Min( ( MUM * MLU ) ,RCSe ) ) ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Min( ( DS + ( DS + RRSe ) ) ,RCSe ) - MLU ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.1311787072243346, "obj2": 0.6339607267569531}, {"determining": "Min( ( ( ( FirstVNF_CPU + MDR ) * ( DDR - FirstVNF_CPU ) ) * Max( Min( Min( Max( FirstVNF_CPU,MRS ) ,( ( ( PN - FirstVNF_Mem ) - BR ) - PN ) ) ,Min( MRS ,ARS ) ),Min( Min( MDR ,RRS ) ,( AMS / BR ) ) ) ) ,Min( Min( ( MDR * PN ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ,Max( ( RRS - CRS ),Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( DS ,( MLU / RCSe ) ),( ( RCSe + MUR ) - ( Max( MUC,( ( Min( MUR ,RCSe ) - CS ) - CS ) ) * DS ) ) )", "obj1": 0.7718631178707225, "obj2": 0.18765738680687685}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( Max( ( FirstVNF_Mem * ( FirstVNF_CPU_Server / CRS ) ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ),BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( ( MUM * Min( ( ( RRSe / MUM ) - RCSe ) ,Max( MUR,( RMSe / MUM ) ) ) ) - ( ( ( ( DS / MLU ) * RMSe ) + ( RCSe + Max( RRSe,MUR ) ) ) * MLU ) ) * DS ) + ( RMSe * DS ) ) + ( Max( ( MLU - RRSe ),MLU ) / Min( MUC ,CS ) ) )", "obj1": 0.6920152091254753, "obj2": 0.21521417013354469}, {"determining": "( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) )", "obj1": 0.4467680608365019, "obj2": 0.3603327783727882}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( RRS + ARS ) ) ) * ( ( ( RRS - MRS ) + Max( ( AMS + FirstVNF_Mem ),FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM_Server / ( BR - MRS ) ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * ( ( DS / MUR ) * ( ( Max( MUM,MUC ) / ( MUR * RCSe ) ) + ( MUC / RRSe ) ) ) ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 0.5209125475285171, "obj2": 0.33585073922335285}, {"determining": "( ( ( ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,PN ) * PN ) + ( ( Const * Max( ( MRS - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * MRS ) ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * ( DS * MUM ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.596958174904943, "obj2": 0.2706435928786264}, {"determining": "Max( Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( ( AMS - ( FirstVNF_RAM_Server * Max( FirstVNF_CPU_Server,ACS ) ) ) ,( PN / BR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Max( Max( RRSe,RCSe ),RMSe ) ) / CS ) - Max( ( MUR / ( ( Min( Min( CS ,RRSe ) ,( RMSe / Max( MUR,RRSe ) ) ) * RMSe ) - ( ( MUC / CS ) - ( MUC - MUR ) ) ) ),MUM ) )", "obj1": 0.31749049429657794, "obj2": 0.4629824943988289}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - ( RRS + Max( CRS,RRS ) ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( RRSe * ( RRSe * MUM ) ) )", "obj1": 0.07034220532319392, "obj2": 0.7559805203087555}, {"determining": "( ( ( ( ACS * PN ) + ( Max( Max( ( FirstVNF_RAM - ACS ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + FirstVNF_CPU ) ),( Max( FirstVNF_CPU_Server,AMS ) / ( PN / MDR ) ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( ( DS / MUR ) * ( RCSe * Max( Max( RRSe,DS ),Min( MLU ,( MUM * CS ) ) ) ) ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( DS ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.49619771863117873, "obj2": 0.3520641590807026}, {"determining": "( ( ( RRS - RRS ) - Min( ACS ,MDR ) ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUM ) + Min( Min( DS ,( CS * RCSe ) ) ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.4866920152091255, "obj2": 0.35701709736687387}, {"determining": "Min( ( MDR * ( Const / ( PN + Max( Max( MDR,AMS ),PN ) ) ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUM / ( ( CS * Max( Min( CS ,RCSe ),( DS / MLU ) ) ) + MUC ) ) - Max( Max( ( MLU - MLU ),RCSe ),DS ) ) ,( DS - CS ) )", "obj1": 0.3973384030418251, "obj2": 0.4009476050577674}, {"determining": "Min( ( MDR * ( MRS / CRS ) ) ,( Min( ( FirstVNF_CPU_Server - DDR ) ,CRS ) - Const ) )", "choosing": "Min( ( ( ( CS + ( Max( ( RMSe + CS ),RCSe ) / RMSe ) ) / ( MUM / RCSe ) ) * ( MUM * ( MLU - ( RRSe - ( RMSe - MUM ) ) ) ) ) ,( DS - CS ) )", "obj1": 0.38022813688212925, "obj2": 0.40872264928616925}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( RRS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,Max( Min( FirstVNF_RAM ,PN ),( AMS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( DS * ( RRSe + ( MUM - CS ) ) ) / Max( DS,Max( RMSe,Max( Max( MUC,CS ),( ( MUC + MLU ) / ( MUM + Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.5855513307984791, "obj2": 0.29381791258544404}, {"determining": "Min( FirstVNF_Mem_Server ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR - ( MLU * ( ( RMSe + ( Min( MUR ,RCSe ) * RMSe ) ) / Max( RMSe,( MLU + RCSe ) ) ) ) ) / Min( RMSe ,Min( MUC ,MUC ) ) )", "obj1": 0.9315589353612167, "obj2": 0.040454007165969585}, {"determining": "( ( FirstVNF_RAM - CRS ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / MLU ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.6026615969581749, "obj2": 0.25383961400623484}, {"determining": "( Min( RRS ,Max( ( MRS / CRS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - BR ) ) ) ) * BR )", "choosing": "Min( ( Max( Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - DS ) ) ,Min( Min( CS ,RRSe ) ,( RMSe / Max( MUR,RRSe ) ) ) ),DS ) / CS ) ,Max( Max( ( DS / Min( RRSe ,( RMSe * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.6273764258555133, "obj2": 0.25276855251601366}, {"determining": "( ( FirstVNF_RAM - Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( ARS * ( DDR - ( ARS * ACS ) ) ) / AMS ) ) ) ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( MLU / RCSe ) ,( ( Max( Min( Max( ( ( MUM - RCSe ) / RMSe ),RCSe ) ,RCSe ),( RRSe - RMSe ) ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.9448669201520913, "obj2": 0.016448642128288442}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server * AMS ) - Max( FirstVNF_CPU_Server,ACS ) ) ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU_Server * FirstVNF_Mem ) ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / FirstVNF_Mem )", "choosing": "( ( Max( ( ( Max( ( MUM / CS ),RRSe ) / ( MUC * RCSe ) ) + RMSe ),DS ) / CS ) + ( MUR + Min( RRSe ,MUC ) ) )", "obj1": 0.4429657794676806, "obj2": 0.3766511984698301}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( PN - PN ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( MUM + ( MUM - MUC ) ) + ( ( CS + ( ( MUC * MUR ) / MUR ) ) + MUC ) ) ) / CS ) - Max( RCSe,MUM ) )", "obj1": 0.188212927756654, "obj2": 0.5680260794857914}, {"determining": "( BR + ( ACS / FirstVNF_Mem ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - Min( Min( DS ,( DS * RCSe ) ) ,RRSe ) )", "obj1": 0.43155893536121676, "obj2": 0.3853751473273491}, {"determining": "( ( FirstVNF_RAM - ( BR + CRS ) ) - ( ( MRS / CRS ) * ( ( RRS / BR ) / ( PN + BR ) ) ) )", "choosing": "Min( Min( RRSe ,( ( Min( MLU ,Min( RMSe ,( RRSe - Max( RRSe,MLU ) ) ) ) - RMSe ) / CS ) ) ,( ( ( Max( ( ( Max( MUC,CS ) - MLU ) * RMSe ),Max( Min( RRSe ,MUM ),MUR ) ) / DS ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.935361216730038, "obj2": 0.0223075541840483}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( ( ( CRS * AMS ) + PN ) * ARS ) * ( CRS + ACS ) ) ) + ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( DS * ( ( ( RCSe - ( ( RCSe + Min( RCSe ,MLU ) ) + MUC ) ) * Min( Max( DS,MUR ) ,MUM ) ) + ( DS - CS ) ) ) / Max( DS,Max( RMSe,MUM ) ) )", "obj1": 0.5608365019011406, "obj2": 0.30913357764386223}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( RRS * Max( PN,Max( FirstVNF_CPU_Server,Max( Min( FirstVNF_RAM ,PN ),( AMS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( DS * ( RRSe + ( MUM - CS ) ) ) / Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( ( RCSe / Min( MUR ,MLU ) ) * Max( MUM,MUM ) ) ) ) )", "obj1": 0.6406844106463878, "obj2": 0.24419277484328972}, {"determining": "( Min( RRS ,Max( ( Min( ACS ,ACS ) / CRS ),Min( CRS ,BR ) ) ) * BR )", "choosing": "Min( ( Max( Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,( MUM / MUC ) ),DS ) / CS ) ,Max( Max( ( DS / Min( RRSe ,( RMSe * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.5380228136882129, "obj2": 0.33097660185826827}, {"determining": "Max( Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( ( AMS - ( FirstVNF_RAM_Server * Max( FirstVNF_CPU_Server,ACS ) ) ) ,( AMS / BR ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Max( Max( RRSe,RCSe ),RMSe ) ) / CS ) - Max( ( MUR / ( ( Max( MLU,MUM ) * RMSe ) - ( ( MUC / CS ) - ( MUC - MUR ) ) ) ),MUM ) )", "obj1": 0.30988593155893535, "obj2": 0.4753021280961202}, {"determining": "( ( Min( FirstVNF_RAM_Server ,PN ) / Max( Max( ( MRS * PN ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ),BR ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( MUR - Max( MUC,( ( Max( MLU,MUM ) * RMSe ) - ( ( MUC / CS ) - ( DS - MUR ) ) ) ) ) * DS ) + ( RMSe * DS ) ) + ( ( DS + DS ) / Min( MUC ,CS ) ) )", "obj1": 0.6539923954372624, "obj2": 0.2367364963695978}, {"determining": "Max( Min( FirstVNF_Mem ,FirstVNF_CPU ),( ( ( ( FirstVNF_Mem / MDR ) + ( ACS / Const ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / Min( RCSe ,MUM ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17870722433460076, "obj2": 0.5855879543622823}, {"determining": "( ( MRS * ( ( FirstVNF_RAM - ( BR + CRS ) ) - ( ( MRS / CRS ) * ( ( RRS / BR ) / ( PN + BR ) ) ) ) ) / ( ( ( ( BR - FirstVNF_CPU ) - ( RRS * FirstVNF_CPU_Server ) ) + PN ) + ( BR / Min( ARS ,MDR ) ) ) )", "choosing": "( ( MUM + MUC ) - ( ( ( Min( MLU ,Min( RMSe ,( RRSe - Max( RRSe,MLU ) ) ) ) - RMSe ) / CS ) * RRSe ) )", "obj1": 0.967680608365019, "obj2": 0.010541142628487403}, {"determining": "( ( FirstVNF_RAM - Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) - ( ( ARS * ( ( ACS / FirstVNF_Mem ) - ( ARS * ACS ) ) ) / AMS ) ) ) ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( MLU / RCSe ) ,( ( Max( Min( Max( ( ( MUM - RCSe ) / RMSe ),RCSe ) ,RCSe ),( Min( DS ,( DS * RCSe ) ) - RMSe ) ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.6634980988593155, "obj2": 0.21798338590910477}, {"determining": "( Max( Min( DDR ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( RRS * FirstVNF_Mem_Server ) )", "choosing": "( ( DS * ( RRSe + ( DS - CS ) ) ) / Max( DS,Max( RMSe,( ( DS + RRSe ) - RMSe ) ) ) )", "obj1": 0.5475285171102662, "obj2": 0.3170030688491846}, {"determining": "( Min( ( ARS - RRS ) ,MRS ) - ( MDR - FirstVNF_Mem ) )", "choosing": "( Min( ( RRSe * ( ( Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( MLU - RMSe ) + Min( DS ,RRSe ) ) ) / ( ( MLU * RCSe ) / ( Max( MUM,MUM ) / ( RCSe / MUR ) ) ) ) - Max( Max( ( ( RCSe * RCSe ) - MUM ),Min( DS ,( DS * RCSe ) ) ),CS ) ) ) ,RMSe ) + ( MUM - RMSe ) )", "obj1": 0.3041825095057034, "obj2": 0.4832791266920754}, {"determining": "( Min( RRS ,Max( ( ( ( RRS + ( MDR - MDR ) ) + BR ) / CRS ),( FirstVNF_RAM_Server - ( FirstVNF_CPU - BR ) ) ) ) * BR )", "choosing": "Min( ( ( Max( MUM,DS ) - Min( RMSe ,RRSe ) ) - ( CS * MUR ) ) ,Max( Max( ( DS / Min( RRSe ,( RMSe * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.20532319391634982, "obj2": 0.559295232239951}, {"determining": "Max( ( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) ),( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( DDR - ( ARS * ACS ) ) ) / AMS ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( Min( Max( ( ( MUM - RCSe ) / RMSe ),( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUM ) ) ) ,RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.24904942965779467, "obj2": 0.5221941812510751}, {"determining": "( ( Max( PN,( Const - FirstVNF_RAM ) ) / Max( ( CRS * PN ),( RRS * RRS ) ) ) / Min( FirstVNF_CPU ,Min( Max( DDR,MDR ) ,RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( ( RCSe / Min( MUR ,MLU ) ) * Max( MUM,MUM ) ) ) ) / ( ( ( DS + RRSe ) - RMSe ) - RMSe ) ) ) )", "obj1": 0.18250950570342206, "obj2": 0.5776098277400395}, {"determining": "( BR + ( ( ( FirstVNF_CPU - ( Min( ( ARS - RRS ) ,MRS ) - ( MDR - FirstVNF_Mem ) ) ) + FirstVNF_RAM_Server ) + ( DDR / MDR ) ) )", "choosing": "( ( ( RCSe / CS ) * ( MLU * DS ) ) - Min( Min( Max( ( ( MLU * MUR ) - MLU ),RMSe ) ,( DS * RCSe ) ) ,RRSe ) )", "obj1": 0.43155893536121676, "obj2": 0.3853751473273491}, {"determining": "( ( ( ( ACS * PN ) + ( Max( Min( Min( AMS ,ARS ) ,ACS ),( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( ( DS / MUR ) * ( MUM - MUR ) ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( Max( RCSe,MUR ) + ( RCSe - ( MUC * Min( DS ,( RCSe / RRSe ) ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.6596958174904943, "obj2": 0.21858997934122706}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( ( MDR * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( CS - MUR ) ) * ( DS * MUM ) ) / ( ( ( MUM * MUR ) / Min( ( ( RMSe / MUC ) + Max( RRSe,RRSe ) ) ,( ( RMSe - MUR ) + Min( DS ,RRSe ) ) ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.5722433460076045, "obj2": 0.3033169352653052}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( MRS + CRS ) ) )", "choosing": "( ( ( MUM / ( ( MUM / MLU ) + MUC ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17490494296577946, "obj2": 0.5994139578363669}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_Mem * ( MDR - ( ( AMS - ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * ( DDR + ( PN - Const ) ) ) ) + RRS ) ) ) )", "choosing": "( ( Max( ( RRSe + DS ),Max( CS,MUR ) ) / Max( ( ( DS - ( RMSe / RCSe ) ) * CS ),( RCSe * DS ) ) ) + ( Max( MUR,MUM ) * ( ( MLU - Min( ( Max( ( CS + DS ),DS ) + CS ) ,( CS - RRSe ) ) ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2338403041825095, "obj2": 0.5408224111759229}, {"determining": "Max( ( RRS - MRS ),( ( RRS / Min( PN ,FirstVNF_Mem ) ) / ( ( FirstVNF_CPU_Server / CRS ) * Min( ( AMS - ( FirstVNF_RAM_Server * Max( FirstVNF_CPU_Server,ACS ) ) ) ,( AMS / BR ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( RRSe * ( MUC * MUM ) ) )", "obj1": 0.2965779467680608, "obj2": 0.4954958910932139}, {"determining": "Max( ( RRS - MRS ),( FirstVNF_RAM_Server - ( Min( CRS ,CRS ) / MRS ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( DS - MUC ) )", "obj1": 0.21863117870722434, "obj2": 0.5459036312323976}, {"determining": "( Min( RRS ,Max( ( Min( ACS ,ACS ) / CRS ),Min( CRS ,BR ) ) ) * BR )", "choosing": "Min( ( Max( Min( ( ( Max( RCSe,DS ) - Min( RMSe ,RRSe ) ) - ( MUR - ( MLU * RRSe ) ) ) ,( MUM / MUC ) ),DS ) / CS ) ,Max( Max( ( DS / Min( RRSe ,( RMSe * MLU ) ) ),( ( ( RMSe * ( ( CS / RMSe ) * ( DS + RRSe ) ) ) * ( MUR - Max( RMSe,RMSe ) ) ) / ( Max( CS,( RMSe * RCSe ) ) - MUM ) ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.5437262357414449, "obj2": 0.32284072046518164}, {"determining": "( Min( Max( ( AMS - BR ),Max( FirstVNF_CPU_Server,ACS ) ) ,Max( ( BR / CRS ),( FirstVNF_RAM_Server - PN ) ) ) * BR )", "choosing": "Min( Min( Max( MUR,MUM ) ,( ( ( RRSe / MUC ) * RRSe ) * ( RCSe - ( Max( MUC,( Max( CS,RCSe ) - ( RCSe - RCSe ) ) ) * MUM ) ) ) ) ,Max( Max( ( DS / DS ),Max( MUC,MUM ) ),( ( MUM + RMSe ) * ( RRSe / CS ) ) ) )", "obj1": 0.21102661596958175, "obj2": 0.5557855523360038}, {"determining": "Max( ( ARS / Max( Min( FirstVNF_RAM ,PN ),( PN + FirstVNF_CPU ) ) ),( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( MUC + MLU ) / ( MUR + ( ( CS * MUR ) - ( RCSe - MUM ) ) ) )", "obj1": 0.2414448669201521, "obj2": 0.5364090944580744}, {"determining": "Max( Max( Min( FirstVNF_RAM ,PN ),( PN + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server / CRS ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( CS * MUR ) + MUC ) ) / CS ) - ( CS / MUM ) )", "obj1": 0.279467680608365, "obj2": 0.5000179664257737}, {"determining": "( ( Max( FirstVNF_RAM,ARS ) / Max( ( CRS * PN ),( RRS * ( FirstVNF_RAM * RRS ) ) ) ) / ( FirstVNF_RAM - ( FirstVNF_CPU * RRS ) ) )", "choosing": "( ( MUR * CS ) / Min( RCSe ,( MLU / ( ( Min( RRSe ,MUM ) / MUC ) + ( ( MUM * RMSe ) / CS ) ) ) ) )", "obj1": 0.27566539923954375, "obj2": 0.5101120175139304}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),Min( Min( ( BR * FirstVNF_Mem ) ,Max( ( ( MRS - FirstVNF_CPU ) / FirstVNF_CPU ),( ( ARS * MDR ) * DDR ) ) ) ,( FirstVNF_RAM * ( Min( PN ,( PN + FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem * PN ) ) ) ) ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( ( ( DS / MLU ) / ( MLU - CS ) ),MUM ) * Max( ( ( MUM - MLU ) * ( MUR / CS ) ),RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( ( Max( DS,RMSe ) - MLU ) / RRSe ) * ( MLU / RMSe ) ) ) )", "obj1": 0.24334600760456274, "obj2": 0.5275465304829348}, {"determining": "( ( Min( MRS ,MRS ) - ( MDR - FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) )", "choosing": "( ( ( ( MUR - ( ( Max( DS,( MUM + RRSe ) ) - ( MUM - RMSe ) ) - ( RCSe - RCSe ) ) ) * DS ) + ( RMSe * DS ) ) + ( ( DS + DS ) / Min( MUC ,CS ) ) )", "obj1": 0.5798479087452472, "obj2": 0.3014469173492317}, {"determining": "Max( ( RRS - ( FirstVNF_CPU_Server - RRS ) ),Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( DS / MUR ) * ( ( Max( ( MUM / CS ),RRSe ) / ( MUC * RCSe ) ) + RMSe ) ) )", "obj1": 0.26045627376425856, "obj2": 0.5160070926849357}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - Min( CRS ,DDR ) ) )", "choosing": "Min( RRSe ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( Max( Max( RRSe,( MUR / RRSe ) ),Min( MLU ,MUR ) ) / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.9904942965779467, "obj2": 0.0026169352388956918}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server / CRS ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM ) - CRS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe - RCSe ) - ( CS / MUM ) )", "obj1": 0.2984790874524715, "obj2": 0.4933718693653632}, {"determining": "( Max( Min( ( DDR * FirstVNF_CPU_Server ) ,( MRS * PN ) ),( ( FirstVNF_RAM * ARS ) * ( CRS + ACS ) ) ) + ( RRS * Max( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ),Max( FirstVNF_CPU_Server,ACS ) ) ) )", "choosing": "( ( DS * ( RRSe + ( MUM - CS ) ) ) / Max( DS,Max( RMSe,MUM ) ) )", "obj1": 0.6520912547528517, "obj2": 0.240619280019109}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( DDR,MDR ),Min( ( RRS - FirstVNF_RAM ) ,CRS ) ) )", "choosing": "Min( ( Max( ( DS + DS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,RCSe ) ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11406844106463879, "obj2": 0.6455576143756445}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( PN,BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( ( MUR + MLU ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "Max( ( ( FirstVNF_CPU_Server + ARS ) + ( ACS / FirstVNF_Mem ) ),( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( DDR - ( ARS * ACS ) ) ) / ( FirstVNF_CPU_Server / CRS ) ) ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + ( ( Min( Max( ( ( MUM - RCSe ) / RMSe ),( ( ( RCSe / CS ) * ( MLU * DS ) ) - ( ( DS * RRSe ) * MUR ) ) ) ,RCSe ) / Max( MUC,MLU ) ) * ( ( MLU - MUM ) / Max( RRSe,MUR ) ) ) )", "obj1": 0.2224334600760456, "obj2": 0.5432827661535855}, {"determining": "Min( ( MDR * ( MRS / CRS ) ) ,Max( FirstVNF_CPU,( ( MRS * AMS ) / ( ( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) + ( BR / Min( ARS ,MDR ) ) ) ) ) )", "choosing": "Min( ( RRSe - Max( Min( Max( RMSe,Min( ( Max( RCSe,MUR ) + ( CS / RMSe ) ) ,MUR ) ) ,DS ),DS ) ) ,( DS - CS ) )", "obj1": 0.38593155893536124, "obj2": 0.40502896271510536}, {"determining": "Max( ( RRS - ( Min( ( Max( MDR,BR ) / Max( FirstVNF_CPU,ACS ) ) ,Max( ( ARS - FirstVNF_RAM_Server ),Max( MDR,ARS ) ) ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ),Max( Max( DDR,( Min( FirstVNF_RAM_Server ,CRS ) + Max( FirstVNF_Mem_Server,MRS ) ) ),( DDR / ACS ) ) )", "choosing": "( ( Max( Max( RRSe,RMSe ),Max( CS,MUR ) ) / Max( ( RRSe * CS ),( RCSe * DS ) ) ) + RRSe )", "obj1": 0.26806083650190116, "obj2": 0.513648249533027}, {"determining": "Min( ( MDR * ( Const / ( PN + Max( Max( Const,AMS ),PN ) ) ) ) ,Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( RRSe - Max( Max( ( MLU - MLU ),RCSe ),DS ) ) ,( DS - CS ) )", "obj1": 0.3935361216730038, "obj2": 0.40268477265498054}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server + AMS ) - FirstVNF_CPU ) - MDR ) + PN ) + ( BR / Min( ARS ,MDR ) ) )", "choosing": "Max( Max( MUC,CS ),( DS - ( MUC + ( ( ( Max( RCSe,MUR ) + ( ( CS - RRSe ) / RMSe ) ) * MUR ) / MLU ) ) ) )", "obj1": 0.9828897338403042, "obj2": 0.007385451211767366}, {"determining": "Max( Max( Min( FirstVNF_RAM ,PN ),( PN + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / ( Max( ( FirstVNF_CPU_Server / ( MDR / BR ) ),( Const / Min( DDR ,PN ) ) ) - ( RRS * ( FirstVNF_RAM * RRS ) ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( CS * RMSe ) + MUC ) ) / CS ) - ( CS / MUM ) )", "obj1": 0.27756653992395436, "obj2": 0.5009256721290632}, {"determining": "Max( Min( FirstVNF_Mem ,CRS ),( ( Const / ( ( FirstVNF_CPU_Server / Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) / ( PN / MDR ) ) ) ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( MUM + ( MUM - MUC ) ) + ( ( MLU / CS ) - ( RCSe + MUR ) ) ) ) / CS ) - ( RCSe / RRSe ) )", "obj1": 0.17490494296577946, "obj2": 0.5994139578363669}, {"determining": "( ( ( ( BR * MRS ) - MDR ) + PN ) + ( BR / ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Max( MUC,CS ),( RMSe + CS ) )", "obj1": 0.9752851711026616, "obj2": 0.009010282967540579}, {"determining": "Max( Max( Min( FirstVNF_RAM ,PN ),( PN + FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / ( Max( ( FirstVNF_CPU_Server / ( MDR / BR ) ),( Const / Min( DDR ,PN ) ) ) - MRS ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( MUM / ( ( CS * Max( Min( CS ,RCSe ),( DS / MLU ) ) ) + MUC ) ) / CS ) - ( CS / MUM ) )", "obj1": 0.26425855513307983, "obj2": 0.5155085892723502}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( DDR,( BR + FirstVNF_RAM_Server ) ),BR ) )", "choosing": "Min( ( Max( ( RCSe - CS ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( ( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,( RMSe / MLU ) ) ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11026615969581749, "obj2": 0.647452134043304}, {"determining": "( ( PN + FirstVNF_RAM_Server ) + Max( Max( DDR,MDR ),Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,CRS ) ) )", "choosing": "Min( ( ( MUM / Max( CS,RMSe ) ) / CS ) ,( ( Max( Min( Max( RMSe,Min( ( MLU + MUC ) ,MUR ) ) ,DS ),Max( RMSe,RCSe ) ) * ( MUR / RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.20722433460076045, "obj2": 0.5577879434909406}, {"determining": "( ( ( FirstVNF_CPU - BR ) + FirstVNF_RAM_Server ) + ( DDR / MDR ) )", "choosing": "Min( ( Max( ( ( Max( ( ( MLU * MUR ) - MLU ),RMSe ) - ( MLU - DS ) ) + MUM ),( MUR / DS ) ) / ( Max( RCSe,MUM ) * Max( MUR,RCSe ) ) ) ,( Max( RCSe,( Min( DS ,( ( ( RMSe / MUC ) - MUR ) + DS ) ) - RRSe ) ) / ( ( DS / MLU ) / ( MLU - CS ) ) ) )", "obj1": 0.11977186311787072, "obj2": 0.6372333136411811}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - AMS ) - ( FirstVNF_CPU + ( MRS - Max( ( FirstVNF_RAM_Server - DDR ),Max( AMS,AMS ) ) ) ) )", "choosing": "Max( ( ( MLU - MUC ) - Min( DS ,( MLU - Min( ( ( DS + RRSe ) - Max( CS,DS ) ) ,MUC ) ) ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 0.9714828897338403, "obj2": 0.01024580608857119}, {"determining": "( ( FirstVNF_RAM - ( BR + CRS ) ) - ( ( MRS / CRS ) * ( ( RRS / BR ) / ( PN + BR ) ) ) )", "choosing": "Min( Min( RRSe ,( ( Min( MLU ,Min( RMSe ,( RRSe - Max( RRSe,MLU ) ) ) ) - RMSe ) / CS ) ) ,( ( ( Max( ( ( Max( MUC,CS ) - MLU ) * RMSe ),Max( Min( RRSe ,MUM ),MUR ) ) / DS ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007724911181790356}, {"determining": "( ( MRS * AMS ) / ( ( ( ( BR - FirstVNF_CPU ) - ( RRS * FirstVNF_CPU_Server ) ) + PN ) + ( BR / Min( ARS ,MDR ) ) ) )", "choosing": "( ( MUM + MUC ) - ( RCSe * RRSe ) )", "obj1": 0.9809885931558935, "obj2": 0.00809228812433844}, {"determining": "( ( ( ( ACS * PN ) + ( Max( Max( ( FirstVNF_RAM - ACS ),( PN - Const ) ),( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) ) * FirstVNF_CPU_Server ) ) - DDR ) - ( ( ( ( Min( MRS ,MRS ) - ( MDR - FirstVNF_Mem ) ) + Max( ( FirstVNF_RAM_Server - DDR ),( PN + BR ) ) ) * BR ) - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUR + ( RCSe + DS ) ),( ( DS / MUR ) * ( RCSe * Max( Max( RRSe,DS ),Max( DS,( MUM + RRSe ) ) ) ) ) ) * Max( ( CS / RMSe ),( DS / MUM ) ) ) / ( ( Max( RCSe,MUR ) + ( CS / RMSe ) ) / ( ( MLU * MLU ) * ( MUM - CS ) ) ) )", "obj1": 0.6615969581749049, "obj2": 0.21821474520512696}, {"determining": "( ( FirstVNF_RAM - Min( Max( FirstVNF_CPU,MRS ) ,( Min( FirstVNF_CPU_Server ,( CRS / BR ) ) - PN ) ) ) - ( ( MRS / CRS ) * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( Min( RRSe ,( ( Min( ( MUM + RRSe ) ,Min( RMSe ,( RMSe / DS ) ) ) - RMSe ) / CS ) ) ,( Min( RCSe ,RRSe ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 0.9980988593155894, "obj2": 0.0007724911181790356}, {"determining": "( ( PN * AMS ) / ( ( ( ( BR - FirstVNF_CPU ) - MDR ) + PN ) + ( BR / Min( ARS ,MDR ) ) ) )", "choosing": "( ( MUM + MUC ) - Max( Min( Max( RMSe,Min( ( Max( RCSe,MUR ) + ( RCSe / RRSe ) ) ,MUR ) ) ,DS ),( RMSe * RCSe ) ) )", "obj1": 0.9809885931558935, "obj2": 0.00809228812433844}, {"determining": "( ( RRS - RRS ) - Min( ACS ,MDR ) )", "choosing": "( Min( CS ,MUM ) / ( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( FirstVNF_CPU ,ARS ) ) / ( ( PN - ACS ) * Max( Min( Max( Min( RRS ,( FirstVNF_RAM * RRS ) ),Const ) ,AMS ),BR ) ) ) * Min( Min( ( MDR * AMS ) ,( FirstVNF_RAM * ARS ) ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( Min( ( Max( MUC,Max( CS,( Max( RMSe,CS ) * CS ) ) ) * DS ) ,( DS * ( ( MUC + RRSe ) - RRSe ) ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - RRS ) - Min( ACS ,Min( Min( MDR ,PN ) ,( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUM / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_CPU ,ACS ) ,Min( DDR ,Max( DDR,FirstVNF_Mem ) ) ) / ( ( PN - ACS ) * ( FirstVNF_CPU + AMS ) ) ) * ( ( ARS - ( FirstVNF_CPU_Server / PN ) ) + PN ) )", "choosing": "Max( Max( Min( DS ,Max( MUM,( ( Min( RRSe ,CS ) * ( ( RRSe / RCSe ) - Min( RRSe ,DS ) ) ) + RRSe ) ) ),MUC ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( FirstVNF_CPU_Server / MRS ) )", "choosing": "( ( Min( Min( RMSe ,DS ) ,( MUR - Max( Min( MUC ,( DS * ( MUR - RCSe ) ) ),CS ) ) ) + MUC ) + ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM * ( ( ARS / BR ) - CRS ) ) ) - Min( ACS ,MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( ( Max( MUR,( ( MLU - Max( CS,MLU ) ) - MLU ) ) * DS ) - RMSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - AMS ) + ( MRS - ( Min( PN ,RRS ) * FirstVNF_RAM ) ) ) / ( MRS / PN ) )", "choosing": "( Max( Max( CS,DS ),Min( MUM ,DS ) ) / ( Min( MUR ,Min( RMSe ,Max( MUM,( MUC / Min( RCSe ,MLU ) ) ) ) ) * ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - Min( ( Min( FirstVNF_RAM ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + FirstVNF_Mem ) ,( ( Max( FirstVNF_CPU,DDR ) * MRS ) + ARS ) ) ) - ( FirstVNF_CPU + ( FirstVNF_RAM - ( MDR * ARS ) ) ) )", "choosing": "Max( ( ( MLU - MUC ) - Min( Min( MUR ,CS ) ,( MLU - Min( ( Max( ( MLU * MUC ),MUM ) - MUM ) ,MUC ) ) ) ),( ( RMSe - RMSe ) * Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM * RRS ),( BR + RRS ) ) + ( Min( DDR ,CRS ) - ( ACS / AMS ) ) ) - ( ( Min( PN ,MDR ) * ( FirstVNF_Mem * PN ) ) + ( ( FirstVNF_CPU + CRS ) / Min( Min( FirstVNF_RAM_Server ,( ( RRS + ( MDR - MDR ) ) + BR ) ) ,RRS ) ) ) )", "choosing": "Min( Min( RRSe ,( RMSe * MLU ) ) ,( ( DS * Min( MUR ,RMSe ) ) - Max( MUM,( MUC * ( MUC - RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - ( ACS * ( BR * BR ) ) ) / AMS ) - ( MDR * ( Const / AMS ) ) )", "choosing": "Min( ( Min( ( RRSe + RMSe ) ,( MUR * MLU ) ) + ( ( DS + Max( ( MLU - ( MUR * MUM ) ),MUM ) ) + Min( RMSe ,MUC ) ) ) ,Min( MUR ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + MRS ) - PN ) * ( ( ( MDR - ARS ) / Min( CRS ,FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + CS ) + ( Max( ( MUR - ( Max( MUR,MUR ) + ( MUR - ( MLU / ( MLU * MUM ) ) ) ) ),CS ) + ( Max( RRSe,MUC ) + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Max( Min( ACS ,RRS ),ARS ) ) * Min( Min( RRS ,FirstVNF_RAM ) ,( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "Max( ( RCSe - ( ( MUM / ( DS / MLU ) ) - RMSe ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / MRS ),Max( FirstVNF_CPU_Server,MRS ) ) + Min( ( ARS - FirstVNF_CPU_Server ) ,Min( MDR ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) - ( ( FirstVNF_RAM_Server * ACS ) + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS / ( RRSe / RCSe ) ) - ( RMSe / CS ) ) / ( MUM / ( MLU * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( ( ARS * ( DDR - ( ARS * ACS ) ) ) / ( FirstVNF_CPU_Server + ( Const - CRS ) ) ) ) )", "choosing": "Min( Min( CS ,MUM ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( RMSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - FirstVNF_RAM_Server ) - ( MDR * ( Const / ( PN + BR ) ) ) )", "choosing": "Min( ( Min( Max( MLU,DS ) ,( MUR * MLU ) ) + ( ( DS + RRSe ) + Min( RMSe ,MUC ) ) ) ,( ( ( CS * MUR ) * ( MUR / CS ) ) - Min( Min( RCSe ,MUR ) ,( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}]}