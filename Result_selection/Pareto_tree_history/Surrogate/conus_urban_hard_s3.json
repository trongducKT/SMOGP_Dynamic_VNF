{"1": [{"determining": "( ( CRS / ARS ) / ( Const - FirstVNF_CPU ) )", "choosing": "Max( ( DS + MLU ),( MLU + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( Const * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * RMSe ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) + ( RRS / CRS ) )", "choosing": "( Max( MUM,RMSe ) - Min( MLU ,RRSe ) )", "obj1": 0.6747663551401869, "obj2": 0.22990285294945734}, {"determining": "( ( ACS * DDR ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,CS ) - ( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) ,( FirstVNF_CPU_Server / ARS ) )", "choosing": "( ( ( RMSe + MUM ) * ( RRSe / RRSe ) ) + ( ( MLU - MUM ) * Max( ( DS + MUM ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( BR + DDR ) / Min( AMS ,FirstVNF_CPU ) ),( ( MRS + FirstVNF_CPU_Server ) + Min( CRS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + CS ) - ( RRSe - RMSe ) ) / ( Min( MUR ,DS ) * ( MLU * MUR ) ) )", "obj1": 0.6261682242990654, "obj2": 0.272561314455281}, {"determining": "( ( ( RRS / Const ) - ( Max( ( BR - ARS ),RRS ) - ( Min( Max( FirstVNF_Mem,ACS ) ,Const ) * RRS ) ) ) + Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( Min( MLU ,DS ) * Max( MUR,( MUC + ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( ( ( DDR / ACS ) * FirstVNF_RAM ) ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * ( RCSe + ( MLU - Max( ( MUM * ( DS * RMSe ) ),( CS * RCSe ) ) ) ) ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Max( AMS,MRS ) ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( MLU - MUM ) * ( CS * MLU ) ) * Min( ( MUR - MLU ) ,( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,MRS ) - FirstVNF_CPU ) * Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( MUR / MUR ) ,( DS - MLU ) )", "obj1": 0.8299065420560747, "obj2": 0.13096130130797137}, {"determining": "( ( Min( MRS ,ARS ) - ( AMS * Const ) ) / ( ( MDR * ARS ) / ( Min( ( CRS / MRS ) ,( MDR * Max( Max( FirstVNF_RAM_Server,ACS ),DDR ) ) ) - DDR ) ) )", "choosing": "( ( ( MUR / Max( RRSe,( MUC + ( Max( ( RMSe * MUC ),( RCSe + RRSe ) ) + DS ) ) ) ) + Min( MUM ,MLU ) ) + ( ( MUM + MUC ) + ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_CPU_Server ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( Min( Max( RMSe,MLU ) ,( MUC / MUM ) ) - ( ( RRSe * RCSe ) * ( DS - MLU ) ) )", "obj1": 0.708411214953271, "obj2": 0.22242827943088095}, {"determining": "Min( ( ( CRS / MRS ) + ( FirstVNF_Mem_Server * Min( ( RRS + FirstVNF_CPU_Server ) ,ACS ) ) ) ,( Min( BR ,FirstVNF_Mem_Server ) - ( DDR + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( CS,CS ),Max( CS,RMSe ) ) * ( CS / Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( Max( ACS,FirstVNF_RAM ) ,( PN - Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),MRS ) ) ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + ( MDR - AMS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,RRSe ) + ( MUC * RRSe ) ) * ( ( MUM - MUC ) + Max( RRSe,MUM ) ) ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * ( MUR * DS ) ) )", "obj1": 0.9121495327102803, "obj2": 0.03856845846723953}, {"determining": "( Max( ( ( MDR / FirstVNF_RAM_Server ) / ( FirstVNF_Mem * ACS ) ),Max( Min( BR ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + AMS ) ) ) + ( Min( ( FirstVNF_RAM / CRS ) ,( ACS * BR ) ) / ( FirstVNF_CPU_Server * ( RRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + RMSe ) + MLU ) + MUC ) - ( MUC + MLU ) )", "obj1": 0.6897196261682244, "obj2": 0.22708990753133956}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) - ( DDR * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,RCSe ) + ( ( CS - ( CS / MUC ) ) - MLU ) )", "obj1": 0.6616822429906543, "obj2": 0.24490497899839914}, {"determining": "( ( ( ( RRS + MDR ) * ( DDR + MDR ) ) + ( Min( RRS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) + Min( ( ( FirstVNF_CPU / AMS ) / ( CRS * DDR ) ) ,Min( ( PN * ACS ) ,( CRS / ARS ) ) ) )", "choosing": "Max( Max( Max( ( RCSe - MLU ),Max( CS,CS ) ),( ( MUC - RMSe ) * ( MLU + CS ) ) ),( ( ( DS / CS ) / Min( CS ,MUR ) ) - ( ( MUR * CS ) / ( RRSe - CS ) ) ) )", "obj1": 0.9719626168224299, "obj2": 0.03170801777309511}, {"determining": "( ( FirstVNF_CPU_Server * Min( Min( AMS ,CRS ) ,Const ) ) - Max( ( ( MDR * AMS ) / ( CRS * ACS ) ),Min( ( Const / FirstVNF_Mem ) ,( MRS / ACS ) ) ) )", "choosing": "( Min( DS ,Max( Max( ( CS * ( RRSe + ( Max( DS,MLU ) + Min( RRSe ,MLU ) ) ) ),RMSe ),MUR ) ) / ( CS / CS ) )", "obj1": 0.8074766355140187, "obj2": 0.1488531954345764}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( PN,Const ) ,( DDR - MDR ) ) ) + ( ( ( MRS + AMS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / ( ( RMSe + CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - ( RRS * ( RRS + FirstVNF_RAM ) ) ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( ACS + FirstVNF_RAM ) + ( RRS / MRS ) ) * ( ( DDR - ACS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) - Max( MUM,RMSe ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( ( RRSe + MLU ) / Max( RCSe,MUM ) ) - ( Min( MUC ,RRSe ) - ( DS - DS ) ) ) )", "obj1": 0.7252336448598131, "obj2": 0.1612898930704234}], "2": [{"determining": "( ( CRS / ARS ) / ( Const - FirstVNF_CPU ) )", "choosing": "Max( ( DS + MLU ),( MLU + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( Const * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * RMSe ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) + ( RRS / CRS ) )", "choosing": "( Max( MUM,RMSe ) - Min( MLU ,RRSe ) )", "obj1": 0.6747663551401869, "obj2": 0.22990285294945734}, {"determining": "( ( ACS * DDR ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,CS ) - ( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) ,( FirstVNF_CPU_Server / ARS ) )", "choosing": "( ( ( RMSe + MUM ) * ( RRSe / RRSe ) ) + ( ( MLU - MUM ) * Max( ( DS + MUM ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( BR + DDR ) / Min( AMS ,FirstVNF_CPU ) ),( ( MRS + FirstVNF_CPU_Server ) + Min( CRS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + CS ) - ( RRSe - RMSe ) ) / ( Min( MUR ,DS ) * ( MLU * MUR ) ) )", "obj1": 0.6261682242990654, "obj2": 0.272561314455281}, {"determining": "( ( ( RRS / Const ) - ( Max( ( BR - ARS ),RRS ) - ( Min( Max( FirstVNF_Mem,ACS ) ,Const ) * RRS ) ) ) + Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( Min( MLU ,DS ) * Max( MUR,( MUC + ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( ( ( DDR / ACS ) * FirstVNF_RAM ) ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * ( RCSe + ( MLU - Max( ( MUM * ( DS * RMSe ) ),( CS * RCSe ) ) ) ) ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Max( AMS,MRS ) ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( MLU - MUM ) * ( CS * MLU ) ) * Min( ( MUR - MLU ) ,( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,MRS ) - FirstVNF_CPU ) * Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( MUR / MUR ) ,( DS - MLU ) )", "obj1": 0.8299065420560747, "obj2": 0.13096130130797137}, {"determining": "( ( Min( MRS ,ARS ) - ( AMS * Const ) ) / ( ( MDR * ARS ) / ( Min( ( CRS / MRS ) ,( MDR * Max( Max( FirstVNF_RAM_Server,ACS ),DDR ) ) ) - DDR ) ) )", "choosing": "( ( ( MUR / Max( RRSe,( MUC + ( Max( ( RMSe * MUC ),( RCSe + RRSe ) ) + DS ) ) ) ) + Min( MUM ,MLU ) ) + ( ( MUM + MUC ) + ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( CRS / MRS ) + ( FirstVNF_Mem_Server * Min( ( RRS + FirstVNF_CPU_Server ) ,ACS ) ) ) ,( Min( BR ,FirstVNF_Mem_Server ) - ( DDR + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( CS,CS ),Max( CS,RMSe ) ) * ( CS / Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( Max( ACS,FirstVNF_RAM ) ,( PN - Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),MRS ) ) ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + ( MDR - AMS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,RRSe ) + ( MUC * RRSe ) ) * ( ( MUM - MUC ) + Max( RRSe,MUM ) ) ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * ( MUR * DS ) ) )", "obj1": 0.9121495327102803, "obj2": 0.03856845846723953}, {"determining": "( Max( ( ( MDR / FirstVNF_RAM_Server ) / ( FirstVNF_Mem * ACS ) ),Max( Min( BR ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + AMS ) ) ) + ( Min( ( FirstVNF_RAM / CRS ) ,( ACS * BR ) ) / ( FirstVNF_CPU_Server * ( RRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + RMSe ) + MLU ) + MUC ) - ( MUC + MLU ) )", "obj1": 0.6897196261682244, "obj2": 0.22708990753133956}, {"determining": "( ( FirstVNF_CPU_Server * Min( Min( AMS ,CRS ) ,Const ) ) - Max( ( ( MDR * AMS ) / ( CRS * ACS ) ),Min( ( Const / FirstVNF_Mem ) ,( MRS / ACS ) ) ) )", "choosing": "( Min( DS ,Max( Max( ( CS * ( RRSe + ( Max( DS,MLU ) + Min( RRSe ,MLU ) ) ) ),RMSe ),MUR ) ) / ( CS / CS ) )", "obj1": 0.8074766355140187, "obj2": 0.1488531954345764}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( PN,Const ) ,( DDR - MDR ) ) ) + ( ( ( MRS + AMS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / ( ( RMSe + CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( ( ( DDR / ACS ) * FirstVNF_RAM ) ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * ( RCSe + ( MLU - Max( ( MUM * ( DS * RMSe ) ),( CS * RCSe ) ) ) ) ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( ( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / ACS ) * FirstVNF_RAM ) ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * ( RCSe + ( MLU - ( Min( RCSe ,RCSe ) + ( RMSe - MUM ) ) ) ) ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR + FirstVNF_RAM ) ,( AMS / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( ( ( ( CS * MUC ) / ( DS * RRSe ) ) / ( ( RMSe / DS ) / ( MLU * MUC ) ) ) * ( ( ( MUM - DS ) + ( ( MLU / MUM ) / MUM ) ) + Max( ( RMSe + MLU ),( RRSe + MUC ) ) ) )", "obj1": 0.6579439252336449, "obj2": 0.24158599199962985}, {"determining": "( DDR + Min( ( Const - ARS ) ,Max( ( FirstVNF_Mem / MDR ),Max( FirstVNF_CPU,( Max( ( PN - FirstVNF_RAM ),RRS ) - BR ) ) ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( ( MLU * ( MUR + RCSe ) ) * ( MUR / RMSe ) ) )", "obj1": 0.7046728971962617, "obj2": 0.21484863298222795}, {"determining": "Max( ( Max( ( ( PN / ACS ) / ( ACS / FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem_Server - PN ) / Min( MRS ,RRS ) ) ) * DDR ),( DDR + MRS ) )", "choosing": "( ( DS * MUM ) - ( Max( ( RMSe + MUR ),Min( MUM ,MLU ) ) / DS ) )", "obj1": 0.7102803738317757, "obj2": 0.21193300913715046}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( PN,Const ) ,( DDR - MDR ) ) ) + ( ( MRS - FirstVNF_CPU_Server ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / ( ( RMSe + CS ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - Const ) ,( Min( Const ,FirstVNF_Mem ) * ( BR + RRS ) ) )", "choosing": "( ( ( RMSe + MUM ) * ( RRSe / RRSe ) ) + ( ( CS + MUC ) * ( MUR + Max( RCSe,( MUM - ( ( RCSe - ( MUC * MUM ) ) + Max( DS,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) ,( BR + Min( PN ,DDR ) ) )", "choosing": "( ( ( RMSe + ( RCSe * CS ) ) * ( RRSe / RRSe ) ) + ( ( MLU - MUM ) * ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( MDR / FirstVNF_RAM_Server ) / ( FirstVNF_Mem * ACS ) ),Max( Min( BR ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server + AMS ) ) ) + ( Min( ( FirstVNF_RAM / CRS ) ,Min( ( ( FirstVNF_Mem + BR ) * ( RRS / BR ) ) ,( ( ARS + AMS ) + Max( CRS,ACS ) ) ) ) / ( FirstVNF_CPU_Server * ( RRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( ( ( ( RRSe - RCSe ) * ( MUR * RRSe ) ) - ( Max( RCSe,DS ) - ( RMSe / MUM ) ) ) + RMSe ) + MLU ) + MUC ) - ( MUC + MLU ) )", "obj1": 0.6635514018691588, "obj2": 0.24065674970573933}, {"determining": "( ( ( ( CRS / ARS ) / ( DDR - ARS ) ) * Max( ( MRS * FirstVNF_RAM_Server ),Const ) ) / Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( ( ( RCSe * ( MLU - RRSe ) ) + Max( ( DS + MLU ),( MLU + RCSe ) ) ) ,( RRSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( PN,Const ) ,( DDR - MDR ) ) ) + ( Max( CRS,MRS ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / Min( CS ,RRSe ) ) - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / ( ( RMSe + CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * DDR ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( MLU,CS ) - ( MUC / Min( ( ( CS + RRSe ) + ( RCSe - MUR ) ) ,( ( MUR / RRSe ) - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Max( AMS,MRS ) ) / Min( MDR ,AMS ) )", "choosing": "( ( ( MLU - MUM ) * ( CS * MLU ) ) * ( MUC + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - ACS ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( ACS + FirstVNF_RAM ) + ( RRS / MRS ) ) * ( ( AMS - ACS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) - Max( MUM,RMSe ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( ( ( ( DS * CS ) + Max( MUC,RCSe ) ) + ( Min( RMSe ,MUC ) * ( RMSe / RCSe ) ) ) / Max( RCSe,MUM ) ) - ( Min( MUC ,RRSe ) - ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem ) - FirstVNF_RAM ) / ( Min( Const ,FirstVNF_Mem ) * ( BR + RRS ) ) )", "choosing": "Min( MUC ,( MUR + MUC ) )", "obj1": 0.6728971962616822, "obj2": 0.24059290550540907}, {"determining": "( ( Min( MRS ,ARS ) - ( ( Max( Min( ARS ,FirstVNF_Mem ),( Const / AMS ) ) + ( ( ACS + FirstVNF_Mem ) + Min( ARS ,Const ) ) ) * Const ) ) / ( ( MDR * ARS ) / ( ACS - DDR ) ) )", "choosing": "( ( ( MUR / DS ) + Min( MUM ,MLU ) ) + ( MUM / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( RRS * FirstVNF_Mem ) * MRS ) * ( DDR - FirstVNF_Mem ) ) + Min( ( ( DDR / ACS ) * FirstVNF_RAM ) ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * ( RCSe + ( MLU - Max( ( MUM * ( RMSe * RMSe ) ),( CS * RCSe ) ) ) ) ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( ( ( DDR / ACS ) * FirstVNF_RAM ) ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RCSe ) + ( ( ( CS * RRSe ) + ( CS / MUR ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + FirstVNF_Mem ),( MDR * Max( AMS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( ( ( MUM + RMSe ) + MLU ) * RCSe ) / ( ( ( CS + DS ) / ( RRSe - DS ) ) * Max( CS,( RCSe / MUM ) ) ) ) + RCSe ) * MUC ) - RRSe ) - ( MLU * RRSe ) )", "obj1": 0.6336448598130842, "obj2": 0.2614394464480771}, {"determining": "( ( Min( ( Max( Min( ARS ,FirstVNF_Mem ),( Const / AMS ) ) + ( ( ACS + FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU - RRS ) ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + ( MDR - AMS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,RRSe ) + ( MUC * RRSe ) ) * ( ( MUM - MUC ) + Max( RRSe,( RCSe + MUM ) ) ) ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 0.9121495327102803, "obj2": 0.03856845846723953}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / ( MRS * CRS ) ) - ( Max( DDR,FirstVNF_RAM_Server ) * AMS ) )", "choosing": "Min( ( ( RCSe + ( MUM + Max( RMSe,( MUC * MUM ) ) ) ) * ( ( MUM - MUC ) + Max( RRSe,MUM ) ) ) ,( Min( ( ( ( MUC / CS ) + RMSe ) + Min( MUC ,MUM ) ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 0.9327102803738317, "obj2": 0.02860226800864057}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - RRS ) ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + ( MDR - AMS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( CS + RRSe ) + ( RCSe - MUR ) ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 0.9102803738317757, "obj2": 0.039536046537095505}, {"determining": "( Min( Const ,FirstVNF_Mem ) * ( Min( Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) ,( BR + Min( PN ,DDR ) ) ) + RRS ) )", "choosing": "( ( ( ( RMSe + MUM ) * ( RRSe / RRSe ) ) + ( ( MLU - MUM ) * ( MUR + DS ) ) ) - ( MLU - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,( Max( Const,( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - FirstVNF_RAM ) ) * Max( Max( FirstVNF_RAM_Server,ACS ),DDR ) ) ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) * Max( ( MRS * FirstVNF_RAM_Server ),Const ) ) / Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( ( ( RCSe * ( MUM - CS ) ) + MUM ) ,( MUR / Max( RRSe,( MUC + ( Min( DS ,MUR ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + FirstVNF_Mem ),( DDR - ( ( DDR - ACS ) + ( AMS * BR ) ) ) )", "choosing": "( ( MUM - Max( ( ( MUC / CS ) - Max( MUM,RMSe ) ),( ( DS * MUR ) - ( CS - CS ) ) ) ) - ( MLU * RRSe ) )", "obj1": 0.6560747663551402, "obj2": 0.24214675071313416}, {"determining": "( ( ( ( BR - ( RRS * ( RRS + FirstVNF_RAM ) ) ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( ACS + FirstVNF_RAM ) + ( RRS / MRS ) ) * ( ( DDR - ACS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) - Max( MUM,RMSe ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( ( RRSe + MLU ) / Max( RCSe,MUM ) ) - ( Min( MUC ,RRSe ) - ( DS - DS ) ) ) )", "obj1": 0.7252336448598131, "obj2": 0.1578795753856624}], "3": [{"determining": "( ( CRS / ARS ) / ( Const - FirstVNF_CPU ) )", "choosing": "Max( ( DS + MLU ),( MLU + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,MRS ) - ( Const * FirstVNF_Mem ) )", "choosing": "Min( ( MLU * RMSe ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_CPU ) + ( RRS / CRS ) )", "choosing": "( Max( MUM,RMSe ) - Min( MLU ,RRSe ) )", "obj1": 0.6747663551401869, "obj2": 0.22990285294945734}, {"determining": "( ( ACS * DDR ) - ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) )", "choosing": "( Max( MLU,CS ) - ( MUC / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) ,( FirstVNF_CPU_Server / ARS ) )", "choosing": "( ( ( RMSe + MUM ) * ( RRSe / RRSe ) ) + ( ( MLU - MUM ) * Max( ( DS + MUM ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( BR + DDR ) / Min( AMS ,FirstVNF_CPU ) ),( ( MRS + FirstVNF_CPU_Server ) + Min( CRS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + CS ) - ( RRSe - RMSe ) ) / ( Min( MUR ,DS ) * ( MLU * MUR ) ) )", "obj1": 0.6261682242990654, "obj2": 0.272561314455281}, {"determining": "( ( ( RRS / Const ) - ( Max( ( BR - ARS ),RRS ) - ( Min( Max( FirstVNF_Mem,ACS ) ,Const ) * RRS ) ) ) + Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( Min( MLU ,DS ) * Max( MUR,( MUC + ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( ( ( DDR / ACS ) * FirstVNF_RAM ) ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * ( RCSe + ( MLU - Max( ( MUM * ( DS * RMSe ) ),( CS * RCSe ) ) ) ) ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Max( AMS,MRS ) ) / ( MDR / FirstVNF_CPU ) )", "choosing": "( ( ( MLU - MUM ) * ( CS * MLU ) ) * Min( ( MUR - MLU ) ,( MUR / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ACS ,MRS ) - FirstVNF_CPU ) * Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( MUR / MUR ) ,( DS - MLU ) )", "obj1": 0.8299065420560747, "obj2": 0.13096130130797137}, {"determining": "( ( Min( MRS ,ARS ) - ( AMS * Const ) ) / ( ( MDR * ARS ) / ( Min( ( CRS / MRS ) ,( MDR * Max( Max( FirstVNF_RAM_Server,ACS ),DDR ) ) ) - DDR ) ) )", "choosing": "( ( ( MUR / Max( RRSe,( MUC + ( Max( ( RMSe * MUC ),( RCSe + RRSe ) ) + DS ) ) ) ) + Min( MUM ,MLU ) ) + ( ( MUM + MUC ) + ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( CRS / MRS ) + ( FirstVNF_Mem_Server * Min( ( RRS + FirstVNF_CPU_Server ) ,ACS ) ) ) ,( Min( BR ,FirstVNF_Mem_Server ) - ( DDR + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( CS,CS ),Max( CS,RMSe ) ) * ( CS / Max( RCSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( PN,Const ) ,( DDR - MDR ) ) ) + ( ( ( MRS + AMS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / ( ( RMSe + CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( ( ( DDR / ACS ) * FirstVNF_RAM ) ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * ( RCSe + ( MLU - Max( ( MUM * ( DS * RMSe ) ),( CS * RCSe ) ) ) ) ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( ( ( ( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / ACS ) * FirstVNF_RAM ) ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * ( RCSe + ( MLU - ( Min( RCSe ,RCSe ) + ( RMSe - MUM ) ) ) ) ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR + FirstVNF_RAM ) ,( AMS / ( FirstVNF_RAM / RRS ) ) )", "choosing": "( ( ( ( CS * MUC ) / ( DS * RRSe ) ) / ( ( RMSe / DS ) / ( MLU * MUC ) ) ) * ( ( ( MUM - DS ) + ( ( MLU / MUM ) / MUM ) ) + Max( ( RMSe + MLU ),( RRSe + MUC ) ) ) )", "obj1": 0.6579439252336449, "obj2": 0.24158599199962985}, {"determining": "( DDR + Min( ( Const - ARS ) ,Max( ( FirstVNF_Mem / MDR ),Max( FirstVNF_CPU,( Max( ( PN - FirstVNF_RAM ),RRS ) - BR ) ) ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( ( MLU * ( MUR + RCSe ) ) * ( MUR / RMSe ) ) )", "obj1": 0.7046728971962617, "obj2": 0.21484863298222795}, {"determining": "Max( ( Max( ( ( PN / ACS ) / ( ACS / FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem_Server - PN ) / Min( MRS ,RRS ) ) ) * DDR ),( DDR + MRS ) )", "choosing": "( ( DS * MUM ) - ( Max( ( RMSe + MUR ),Min( MUM ,MLU ) ) / DS ) )", "obj1": 0.7102803738317757, "obj2": 0.21193300913715046}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( PN,Const ) ,( DDR - MDR ) ) ) + ( ( MRS - FirstVNF_CPU_Server ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / ( ( RMSe + CS ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - Const ) ,( Min( Const ,FirstVNF_Mem ) * ( BR + RRS ) ) )", "choosing": "( ( ( RMSe + MUM ) * ( RRSe / RRSe ) ) + ( ( CS + MUC ) * ( MUR + Max( RCSe,( MUM - ( ( RCSe - ( MUC * MUM ) ) + Max( DS,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) ,( BR + Min( PN ,DDR ) ) )", "choosing": "( ( ( RMSe + ( RCSe * CS ) ) * ( RRSe / RRSe ) ) + ( ( MLU - MUM ) * ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) / ( DDR - ARS ) ) * Max( ( MRS * FirstVNF_RAM_Server ),Const ) ) / Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( ( ( RCSe * ( MLU - RRSe ) ) + Max( ( DS + MLU ),( MLU + RCSe ) ) ) ,( RRSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( PN,Const ) ,( DDR - MDR ) ) ) + ( Max( CRS,MRS ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / Min( CS ,RRSe ) ) - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / ( ( RMSe + CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * DDR ) - ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( MLU,CS ) - ( MUC / Min( ( ( CS + RRSe ) + ( RCSe - MUR ) ) ,( ( MUR / RRSe ) - Min( RCSe ,RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Max( AMS,MRS ) ) / Min( MDR ,AMS ) )", "choosing": "( ( ( MLU - MUM ) * ( CS * MLU ) ) * ( MUC + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - ACS ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( ACS + FirstVNF_RAM ) + ( RRS / MRS ) ) * ( ( AMS - ACS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) - Max( MUM,RMSe ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( ( ( ( DS * CS ) + Max( MUC,RCSe ) ) + ( Min( RMSe ,MUC ) * ( RMSe / RCSe ) ) ) / Max( RCSe,MUM ) ) - ( Min( MUC ,RRSe ) - ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,ARS ) - ( ( Max( Min( ARS ,FirstVNF_Mem ),( Const / AMS ) ) + ( ( ACS + FirstVNF_Mem ) + Min( ARS ,Const ) ) ) * Const ) ) / ( ( MDR * ARS ) / ( ACS - DDR ) ) )", "choosing": "( ( ( MUR / DS ) + Min( MUM ,MLU ) ) + ( MUM / ( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( RRS * FirstVNF_Mem ) * MRS ) * ( DDR - FirstVNF_Mem ) ) + Min( ( ( DDR / ACS ) * FirstVNF_RAM ) ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * ( RCSe + ( MLU - Max( ( MUM * ( RMSe * RMSe ) ),( CS * RCSe ) ) ) ) ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem ) * ( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) + Min( ( ( DDR / ACS ) * FirstVNF_RAM ) ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RCSe ) + ( ( ( CS * RRSe ) + ( CS / MUR ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + FirstVNF_Mem ),( MDR * Max( AMS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( ( ( MUM + RMSe ) + MLU ) * RCSe ) / ( ( ( CS + DS ) / ( RRSe - DS ) ) * Max( CS,( RCSe / MUM ) ) ) ) + RCSe ) * MUC ) - RRSe ) - ( MLU * RRSe ) )", "obj1": 0.6336448598130842, "obj2": 0.2614394464480771}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / ( MRS * CRS ) ) - ( Max( DDR,FirstVNF_RAM_Server ) * AMS ) )", "choosing": "Min( ( ( RCSe + ( MUM + Max( RMSe,( MUC * MUM ) ) ) ) * ( ( MUM - MUC ) + Max( RRSe,MUM ) ) ) ,( Min( ( ( ( MUC / CS ) + RMSe ) + Min( MUC ,MUM ) ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 0.9327102803738317, "obj2": 0.02860226800864057}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - RRS ) ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + ( MDR - AMS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( CS + RRSe ) + ( RCSe - MUR ) ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 0.9102803738317757, "obj2": 0.039536046537095505}, {"determining": "( Min( Const ,FirstVNF_Mem ) * ( Min( Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) ,( BR + Min( PN ,DDR ) ) ) + RRS ) )", "choosing": "( ( ( ( RMSe + MUM ) * ( RRSe / RRSe ) ) + ( ( MLU - MUM ) * ( MUR + DS ) ) ) - ( MLU - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,( Max( Const,( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - FirstVNF_RAM ) ) * Max( Max( FirstVNF_RAM_Server,ACS ),DDR ) ) ) / ( FirstVNF_RAM / FirstVNF_CPU ) ) * Max( ( MRS * FirstVNF_RAM_Server ),Const ) ) / Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( ( ( RCSe * ( MUM - CS ) ) + MUM ) ,( MUR / Max( RRSe,( MUC + ( Min( DS ,MUR ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + FirstVNF_Mem ),( DDR - ( ( DDR - ACS ) + ( AMS * BR ) ) ) )", "choosing": "( ( MUM - Max( ( ( MUC / CS ) - Max( MUM,RMSe ) ),( ( DS * MUR ) - ( CS - CS ) ) ) ) - ( MLU * RRSe ) )", "obj1": 0.6560747663551402, "obj2": 0.24214675071313416}, {"determining": "( ( ( ( BR - ( RRS * ( RRS + FirstVNF_RAM ) ) ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( ACS + FirstVNF_RAM ) + ( RRS / MRS ) ) * ( ( DDR - ACS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) - Max( MUM,RMSe ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( ( RRSe + MLU ) / Max( RCSe,MUM ) ) - ( Min( MUC ,RRSe ) - ( DS - DS ) ) ) )", "obj1": 0.7252336448598131, "obj2": 0.1578795753856624}, {"determining": "( Min( ( CRS - Max( AMS,MRS ) ) ,Min( Max( PN,Const ) ,( DDR - MDR ) ) ) + ( ( ( MRS + AMS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( MLU - MUM ) * ( CS * MLU ) ) ) - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / ( ( RMSe + CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - ACS ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( ACS + FirstVNF_RAM ) + ( ( ( ( CRS - FirstVNF_Mem_Server ) - ( DDR * FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) / MRS ) ) * ( ( AMS - ACS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) - Max( MUM,RMSe ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( ( ( ( DS * CS ) + Max( MUC,RCSe ) ) + ( CS * ( RMSe / RCSe ) ) ) / Max( RCSe,MUM ) ) - ( Min( MUC ,RRSe ) - ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Max( Min( ARS ,FirstVNF_Mem ),Min( ( FirstVNF_Mem / MRS ) ,Const ) ) + ( ( ACS + FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU - RRS ) ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + ( MDR - AMS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,RRSe ) + ( MUC * RRSe ) ) * ( ( ( MUR - CS ) - MUC ) + Max( RRSe,( RCSe + MUM ) ) ) ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 0.9158878504672897, "obj2": 0.0373699029431252}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / ( MRS * CRS ) ) - ( Max( DDR,FirstVNF_RAM_Server ) * AMS ) )", "choosing": "Min( ( ( RCSe + ( MUM + Max( RMSe,( MUC * MUM ) ) ) ) * ( ( MUM - MUC ) + Max( RRSe,MUM ) ) ) ,( Min( ( ( ( MUC / CS ) + RMSe ) + Min( MUC ,MUM ) ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / ( MRS * CRS ) ) - ( Max( DDR,FirstVNF_RAM_Server ) * AMS ) )", "choosing": "Min( ( ( RCSe + ( MUM + Max( RMSe,( MUC * MUM ) ) ) ) * ( ( MUM - MUC ) + Max( RRSe,MUM ) ) ) ,( Min( ( ( ( MUC / CS ) + RMSe ) + Min( MUC ,MUM ) ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( Max( ACS,FirstVNF_RAM ) ,( FirstVNF_CPU - RRS ) ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + ( MDR - AMS ) ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( MUR ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * Min( ( MLU + MUR ) ,Min( MLU ,RMSe ) ) ) )", "obj1": 0.8598130841121495, "obj2": 0.0884573875993082}, {"determining": "( ( Min( Max( FirstVNF_RAM,BR ) ,Min( FirstVNF_RAM_Server ,RRS ) ) / Min( Max( ACS,FirstVNF_RAM ) ,( PN - Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),MRS ) ) ) ) - Min( ( ( FirstVNF_RAM * FirstVNF_CPU ) + ( MDR - AMS ) ) ,( Max( MDR,CRS ) * ( FirstVNF_RAM_Server / ACS ) ) ) )", "choosing": "Min( ( ( Min( RRSe ,RRSe ) + ( MUC * RRSe ) ) * ( ( MUM - MUC ) + Max( RRSe,MUM ) ) ) ,( Min( ( MLU - MUR ) ,Max( DS,MUC ) ) * ( MUR * DS ) ) )", "obj1": 0.9121495327102803, "obj2": 0.037923506185265916}, {"determining": "( ( ( RRS / Const ) - ( Max( ( BR - ARS ),RRS ) - ( Min( Max( FirstVNF_Mem,ACS ) ,Const ) * RRS ) ) ) + Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( Min( MLU ,DS ) * Max( MUR,( MUC + ( RRSe - MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + FirstVNF_Mem ),( MDR * Max( ( Min( Const ,FirstVNF_Mem ) * ( Min( Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) ,( BR + Min( PN ,DDR ) ) ) + RRS ) ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( ( ( MUM + RMSe ) + MLU ) * RCSe ) / ( ( ( CS + DS ) / ( RRSe - DS ) ) * Max( CS,MUR ) ) ) + RCSe ) * MUC ) - RRSe ) - ( MLU * RRSe ) )", "obj1": 0.6299065420560748, "obj2": 0.2647857569244803}, {"determining": "Min( RRS ,( Min( BR ,FirstVNF_Mem_Server ) - ( DDR + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( CS,CS ),Max( ( MLU / MUM ),RMSe ) ) * ( ( MUR * RCSe ) - ( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ACS ) + ( AMS * BR ) ) + ( ( MRS - FirstVNF_CPU_Server ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( DS * MUR ) - ( CS - CS ) ) - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / ( ( RMSe + CS ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,Min( Max( PN,Const ) ,( DDR - MDR ) ) ) + ( ( MRS - FirstVNF_CPU_Server ) - Max( ( FirstVNF_Mem / CRS ),Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( MUC - ( ( ( MLU + CS ) + ( MUC - RMSe ) ) / ( ( RMSe + CS ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * ARS ) / ( Min( FirstVNF_RAM ,( MDR * Max( Max( FirstVNF_RAM_Server,ACS ),DDR ) ) ) - DDR ) ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( Min( Max( RMSe,MLU ) ,( MUC / MUM ) ) - ( ( RRSe * RCSe ) * ( DS - ( MUR / Max( RRSe,( MUC + ( RMSe + DS ) ) ) ) ) ) )", "obj1": 0.902803738317757, "obj2": 0.07207833602369007}, {"determining": "Max( ( FirstVNF_RAM + FirstVNF_Mem ),( MDR * Max( AMS,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( ( ( MUM + RMSe ) + MLU ) * RCSe ) / ( ( ( CS + DS ) / ( RRSe - DS ) ) * Max( CS,( RCSe / MUM ) ) ) ) + RCSe ) * MUC ) - RRSe ) - ( MLU * RRSe ) )", "obj1": 0.6392523364485981, "obj2": 0.24871145616327842}, {"determining": "( Max( ( RRS * ( RRS + FirstVNF_RAM ) ),MRS ) - ( Const * FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( ( MUC / CS ) - Max( MUM,RMSe ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( ( RRSe + MLU ) / Max( RCSe,MUM ) ) - ( Min( MUC ,RRSe ) - ( DS - DS ) ) ) ) ,Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MRS ) - ( FirstVNF_RAM_Server * ACS ) ) / Max( RRS,MRS ) )", "choosing": "( ( MLU + MUC ) * ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - ( RRS * ( RRS + ( Max( ARS,FirstVNF_CPU_Server ) - Max( DDR,FirstVNF_RAM ) ) ) ) ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( ACS + FirstVNF_RAM ) + ( RRS / MRS ) ) * ( ( DDR - ACS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) - Max( MUM,RMSe ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( ( RRSe + MLU ) / Max( RCSe,MUM ) ) - ( Min( ( DS - MLU ) ,RRSe ) - ( DS - DS ) ) ) )", "obj1": 0.7420560747663552, "obj2": 0.14153944554653983}, {"determining": "( ( ( ( BR - ( RRS * ( RRS + FirstVNF_RAM ) ) ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( ACS + RRS ) + ( RRS / MRS ) ) * ( ( DDR - ACS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( ( ( MUC / CS ) - Max( MUM,RMSe ) ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( ( RRSe + MLU ) / Max( RCSe,MUM ) ) - ( Min( MUC ,RRSe ) - ( Max( MUM,RMSe ) - Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.719626168224299, "obj2": 0.1707473344137524}, {"determining": "( ( ( ( BR - ( RRS * CRS ) ) - ( MRS * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) ) / ( ( ( ACS + FirstVNF_RAM ) + ( RRS / MRS ) ) * ( ( DDR - ACS ) + ( AMS * BR ) ) ) )", "choosing": "( Max( Min( CS ,RRSe ),( ( DS * MUR ) - ( CS - CS ) ) ) / ( ( ( RRSe + MLU ) / Max( RCSe,MUM ) ) - ( Min( MUC ,RRSe ) - ( DS - DS ) ) ) )", "obj1": 0.6822429906542056, "obj2": 0.2167733699613476}, {"determining": "( ( ( FirstVNF_CPU * ( ( ( MRS / ACS ) / PN ) + ( FirstVNF_CPU_Server * ACS ) ) ) + MDR ) - ( PN - FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR - CS ) * Min( DS ,MUC ) ),Min( MLU ,( MUC / Min( Min( MUC ,RCSe ) ,( Max( MUC,( MUR * DS ) ) - RRSe ) ) ) ) )", "obj1": 0.6542056074766355, "obj2": 0.2464698469522856}, {"determining": "( ( Min( MRS ,ARS ) - ( Min( ( FirstVNF_RAM / CRS ) ,( ACS * BR ) ) / ( FirstVNF_CPU_Server * ( RRS - FirstVNF_Mem_Server ) ) ) ) / ( ( MDR * ARS ) / ( ACS - DDR ) ) )", "choosing": "( ( ( MUR / DS ) + Min( MUM ,( ( ( RCSe + RMSe ) + MLU ) + MUC ) ) ) + ( MUM / ( RMSe + RMSe ) ) )", "obj1": 0.6616822429906543, "obj2": 0.2328433478505681}, {"determining": "( ( Min( ( FirstVNF_CPU_Server * ( RRS - FirstVNF_Mem_Server ) ) ,MRS ) - FirstVNF_CPU ) * Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "Min( ( MUR / MUR ) ,( ( RCSe + RMSe ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( PN / ACS ) / ( ACS / FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem_Server - PN ) / Min( MRS ,RRS ) ) ) * DDR ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * ( RCSe + ( MLU - ( Min( MUM ,MLU ) + ( RMSe - MUM ) ) ) ) ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( RRS * FirstVNF_Mem ) * MRS ) * ( DDR - FirstVNF_Mem ) ) + Min( ( ( DDR / ACS ) * FirstVNF_RAM ) ,AMS ) ) - ( ACS + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * ( RCSe + ( MLU - Max( ( MUM * RMSe ),( CS * RCSe ) ) ) ) ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,Min( Max( PN,Const ) ,( DDR - MDR ) ) ) + ( ( MRS - FirstVNF_CPU_Server ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( ( ( MLU / MUM ) * ( RRSe - CS ) ) / ( ( RMSe + CS ) * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( AMS * AMS ) - Min( ARS ,FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem / MDR ) ) + ( ( ( MRS + AMS ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_Mem / CRS ),( FirstVNF_Mem + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUM + RRSe ) * ( MLU - CS ) ) / ( ( CS - DS ) / ( RCSe - MUC ) ) ) - ( Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),( ( MLU * ( MUR + RCSe ) ) * ( MUR / RMSe ) ) ) / ( ( RMSe + CS ) * ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) ,CRS )", "choosing": "( ( ( RMSe + MUM ) * ( RRSe / RRSe ) ) + ( ( ( MLU / DS ) + MUC ) * ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,( MRS - FirstVNF_CPU_Server ) ) ,( Min( Const ,FirstVNF_Mem ) * ( BR + RRS ) ) )", "choosing": "( ( ( RMSe + MUM ) * ( MUR * DS ) ) + ( ( CS + MUC ) * ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / Const ) - Min( MRS ,FirstVNF_CPU_Server ) ) + Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) )", "choosing": "Max( ( ( RMSe - MUM ) / ( RRSe - MUM ) ),RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem ,PN ) / ( MDR - DDR ) ) ,Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) )", "choosing": "( DS * ( ( MUR * RCSe ) - ( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM / ( ( MDR * ARS ) / ( Min( FirstVNF_RAM ,( MDR * Max( Max( FirstVNF_RAM_Server,ACS ),DDR ) ) ) - DDR ) ) )", "choosing": "( ( ( MUR / Max( RRSe,( ( RRSe * RCSe ) * ( DS - MLU ) ) ) ) + Min( MUM ,MLU ) ) + ( ( MUM + MUC ) + ( MUM * DS ) ) )", "obj1": 0.9925233644859813, "obj2": 0.0075263745555681225}, {"determining": "Min( ( DDR + Max( ( CRS * DDR ),( DDR + MRS ) ) ) ,( ( Max( ( FirstVNF_RAM_Server / ACS ),Min( AMS ,RRS ) ) * Min( Max( FirstVNF_RAM,FirstVNF_Mem ) ,( ARS - FirstVNF_RAM ) ) ) / FirstVNF_RAM ) )", "choosing": "( ( ( ( CS * MUC ) / ( DS * RRSe ) ) / DS ) * ( ( ( MUM - DS ) + ( DS / MUM ) ) + Max( ( RMSe + MLU ),( Max( Min( Min( CS ,RCSe ) ,Max( MUR,CS ) ),( ( RMSe + MUM ) - Max( MUR,RCSe ) ) ) - ( ( Max( MUR,RCSe ) - Min( MUM ,RMSe ) ) + ( ( MUR * RCSe ) - Min( MLU ,RCSe ) ) ) ) ) ) )", "obj1": 0.708411214953271, "obj2": 0.21469296652779876}, {"determining": "( ( ( ( CRS / Min( FirstVNF_RAM_Server ,AMS ) ) / ( DDR - ARS ) ) * Max( ( MRS * FirstVNF_RAM_Server ),Const ) ) / Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( ( ( RCSe * ( MLU - ( RRSe * DS ) ) ) + Max( ( DS + MLU ),( MLU + RCSe ) ) ) ,( RRSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ARS ) / ( DDR - ARS ) ) * Max( ( ( FirstVNF_CPU * ( ( ( FirstVNF_Mem / ACS ) / PN ) + BR ) ) + MDR ),Const ) ) / Min( AMS ,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Max( MLU,CS ) * ( RRSe + DS ) ) * ( MLU - RRSe ) ) + Max( ( DS + MLU ),( MLU + RCSe ) ) ) ,( RRSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + Min( ( ( DDR / ACS ) * FirstVNF_RAM ) ,AMS ) ) - ( Min( FirstVNF_RAM ,PN ) + ( ACS + ACS ) ) )", "choosing": "( ( ( MUC * ( RCSe + ( MLU - Max( ( MUM * ( DS * RMSe ) ),( CS * MUM ) ) ) ) ) * ( MUR + MLU ) ) * ( ( CS * RRSe ) + ( CS / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ACS ,( MRS - FirstVNF_CPU_Server ) ) ,( BR + Min( PN ,( ( ( RRS / Const ) - Min( MRS ,FirstVNF_CPU_Server ) ) + Min( ( Const - ARS ) ,( FirstVNF_RAM / RRS ) ) ) ) ) )", "choosing": "( ( ( RMSe + MUM ) * ( ( MLU * RMSe ) * ( MUR / RMSe ) ) ) + ( ( MLU - MUM ) * ( MUR + DS ) ) )", "obj1": 1.0, "obj2": 0.0}]}