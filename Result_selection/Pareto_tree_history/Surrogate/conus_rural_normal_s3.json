{"1": [{"determining": "( Max( FirstVNF_CPU_Server,Min( FirstVNF_RAM_Server ,RRS ) ) - ( Const * ARS ) )", "choosing": "( ( MUR + DS ) * ( MUR + ( ( DS * CS ) + Min( MUR ,MUC ) ) ) )", "obj1": 0.47764227642276424, "obj2": 0.4202472339281251}, {"determining": "( ( PN / PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( RMSe * CS ) )", "obj1": 0.32926829268292684, "obj2": 0.5005168188587477}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "( ( RRSe + DS ) + ( MUR + MUR ) )", "obj1": 0.6117886178861789, "obj2": 0.2562598528431283}, {"determining": "( ( MDR - Min( AMS ,( DDR / RRS ) ) ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * Min( MUC ,RCSe ) )", "obj1": 0.4634146341463415, "obj2": 0.4256459771212945}, {"determining": "Min( ( FirstVNF_RAM - ARS ) ,( DDR * ACS ) )", "choosing": "( Min( CS ,RCSe ) - ( RCSe + MUM ) )", "obj1": 0.9065040650406504, "obj2": 0.0990035653909965}, {"determining": "( ( FirstVNF_CPU_Server - ARS ) - ( MRS * DDR ) )", "choosing": "( ( MUM + MUR ) * Max( ( MUC + Max( RCSe,Max( MUC,RRSe ) ) ),DS ) )", "obj1": 0.5833333333333334, "obj2": 0.3155031042991125}, {"determining": "( ( Min( ( ACS * CRS ) ,AMS ) * PN ) - Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC / ( RMSe * ( ( MUM / MUM ) * MUM ) ) ) ,Min( RRSe ,( Max( RRSe,MUM ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * ARS ) / ( AMS * FirstVNF_Mem ) )", "choosing": "( ( MUC / MLU ) / Max( DS,MUM ) )", "obj1": 0.2682926829268293, "obj2": 0.6127640770565935}, {"determining": "( Max( ARS,PN ) + ( MDR * BR ) )", "choosing": "( Min( MUM ,RMSe ) / ( RCSe - Min( MUM ,Min( ( MUR / RCSe ) ,RRSe ) ) ) )", "obj1": 0.2804878048780488, "obj2": 0.6118157495849121}, {"determining": "( Max( ( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) - RRS ),( FirstVNF_RAM_Server - CRS ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUM + ( MUC / ( ( MUM + Min( ( MUM * MUM ) ,CS ) ) - MUC ) ) ) * MUR ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,Const ) ,( ACS * RRS ) ) / ( Min( FirstVNF_Mem_Server ,PN ) * ( MDR - FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / ( MUM / DS ) ) + ( RCSe / Max( DS,MLU ) ) )", "obj1": 0.5813008130081301, "obj2": 0.3209056580175497}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( ( ( Max( DDR,MDR ) / ( CRS / PN ) ) + ( ( Const * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,( CRS + ( FirstVNF_CPU + PN ) ) ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( Min( ( MUR + Min( RRSe ,( Min( MUC ,Max( CS,RMSe ) ) + Max( MUR,Max( CS,MUC ) ) ) ) ) ,Max( CS,RRSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,( FirstVNF_RAM + MRS ) ),( BR + ( Min( Const ,FirstVNF_CPU ) / ( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - MLU ) ) / ( ( CS - ( RMSe / ( RCSe + Max( MLU,RCSe ) ) ) ) / ( RRSe - DS ) ) )", "obj1": 0.22560975609756098, "obj2": 0.6468310315275366}, {"determining": "Min( ( Min( PN ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU * DDR ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( ( ( MUR * MUR ) + MUR ) / ( MUM + MUR ) ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( Min( PN ,Min( Max( RRS,MDR ) ,( RRS - ( ( DDR / ARS ) * Min( MRS ,DDR ) ) ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( Max( FirstVNF_Mem,( ARS + MRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe * ( RMSe * ( ( ( MUC - ( RRSe + ( MUC - MUR ) ) ) - RCSe ) * ( DS + RRSe ) ) ) ),( Max( MLU,RRSe ) + ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( MUR - Min( DS ,RMSe ) ) ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * ( ( ( MUR / RMSe ) - RRSe ) + Min( MUR ,MUM ) ) ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MRS - PN ) ,( ARS / DDR ) ) * Min( ( FirstVNF_RAM + PN ) ,Min( PN ,DDR ) ) ) * ( Min( Min( DDR ,Const ) ,( DDR * FirstVNF_CPU ) ) / ( ( BR / ARS ) - ( CRS - MRS ) ) ) )", "choosing": "Max( ( RRSe / RCSe ),( CS + Max( RRSe,( MUC * MUC ) ) ) )", "obj1": 0.8475609756097561, "obj2": 0.1678938875523856}, {"determining": "( Max( Max( Max( DDR,FirstVNF_CPU_Server ),ARS ),BR ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( MUM + DS ) ) ),Min( CS ,Max( MUR,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( Min( FirstVNF_CPU_Server ,ACS ) ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( FirstVNF_CPU * DDR ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Min( ( MUM + DS ) ,MLU ) + Max( DS,MUR ) ) + Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - FirstVNF_RAM ) / ( ( FirstVNF_CPU + CRS ) - ACS ) ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) )", "obj1": 0.943089430894309, "obj2": 0.03710097999289731}, {"determining": "( Min( Min( ( ARS + DDR ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - AMS ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( BR - AMS ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,( MUR + MUC ) ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( ( RCSe * ( RCSe * RRSe ) ) - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem,( BR - FirstVNF_Mem_Server ) ) ,Max( Min( ( DDR * FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ),( DDR - ( PN / PN ) ) ) ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( CS - ( Max( RMSe,Min( RMSe ,CS ) ) / RRSe ) ) + Min( RRSe ,Min( MUR ,( MUR / ( MLU * MUC ) ) ) ) ) ,Min( MUC ,Max( DS,MUM ) ) )", "obj1": 0.2886178861788618, "obj2": 0.5669810776158694}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( ( FirstVNF_RAM / CRS ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( Min( RRSe ,Min( RRSe ,( DS * DS ) ) ) / ( MLU / MUR ) )", "obj1": 0.9715447154471545, "obj2": 0.015113998439609975}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - ACS ) ,( ACS * FirstVNF_Mem ) ) ) * ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const / FirstVNF_RAM ) ) * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * MLU ),CS ) ) )", "obj1": 0.9410569105691057, "obj2": 0.0557241125324581}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / ( FirstVNF_CPU - FirstVNF_CPU ) ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + Max( ( RCSe / ( CS * RCSe ) ),DS ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const + ( Const * CRS ) ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( ( ( Max( ( CS + MUM ),( MLU * DS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( MRS * AMS ) ) ,( FirstVNF_Mem - DDR ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * Max( ( CS - MUC ),( CS - ( ( Max( ( MUC + DS ),( RRSe / MUM ) ) * MUR ) - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( RRS - BR ) * DDR ),( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( MRS / ( PN * PN ) ) ) ) )", "choosing": "( ( ( Min( RCSe ,MUM ) - ( MUC * MLU ) ) + ( Max( MUR,MLU ) / ( MUM + MLU ) ) ) - ( ( ( MUR + CS ) - ( CS + RCSe ) ) - ( ( MLU / MLU ) + ( RMSe + MUR ) ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5669399500112732}, {"determining": "( ( Const - FirstVNF_CPU_Server ) - Max( BR,ARS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( MUC,RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( DDR,FirstVNF_RAM ) ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / Min( CS ,RMSe ) ) ) ,( ( RCSe * RMSe ) / Max( ( MUR * ( ( DS - Min( MLU ,RRSe ) ) * MUC ) ),RRSe ) ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0007750556015560908}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUR ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.4604052367825234}], "2": [{"determining": "( Max( FirstVNF_CPU_Server,Min( FirstVNF_RAM_Server ,RRS ) ) - ( Const * ARS ) )", "choosing": "( ( MUR + DS ) * ( MUR + ( ( DS * CS ) + Min( MUR ,MUC ) ) ) )", "obj1": 0.47764227642276424, "obj2": 0.4202472339281251}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "( ( RRSe + DS ) + ( MUR + MUR ) )", "obj1": 0.6117886178861789, "obj2": 0.2562598528431283}, {"determining": "( ( MDR - Min( AMS ,( DDR / RRS ) ) ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * Min( MUC ,RCSe ) )", "obj1": 0.4634146341463415, "obj2": 0.4256459771212945}, {"determining": "Min( ( FirstVNF_RAM - ARS ) ,( DDR * ACS ) )", "choosing": "( Min( CS ,RCSe ) - ( RCSe + MUM ) )", "obj1": 0.9065040650406504, "obj2": 0.0990035653909965}, {"determining": "( ( FirstVNF_CPU_Server - ARS ) - ( MRS * DDR ) )", "choosing": "( ( MUM + MUR ) * Max( ( MUC + Max( RCSe,Max( MUC,RRSe ) ) ),DS ) )", "obj1": 0.5833333333333334, "obj2": 0.3155031042991125}, {"determining": "( ( Min( ( ACS * CRS ) ,AMS ) * PN ) - Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC / ( RMSe * ( ( MUM / MUM ) * MUM ) ) ) ,Min( RRSe ,( Max( RRSe,MUM ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) - RRS ),( FirstVNF_RAM_Server - CRS ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUM + ( MUC / ( ( MUM + Min( ( MUM * MUM ) ,CS ) ) - MUC ) ) ) * MUR ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,Const ) ,( ACS * RRS ) ) / ( Min( FirstVNF_Mem_Server ,PN ) * ( MDR - FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / ( MUM / DS ) ) + ( RCSe / Max( DS,MLU ) ) )", "obj1": 0.5813008130081301, "obj2": 0.3209056580175497}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( ( ( Max( DDR,MDR ) / ( CRS / PN ) ) + ( ( Const * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,( CRS + ( FirstVNF_CPU + PN ) ) ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( Min( ( MUR + Min( RRSe ,( Min( MUC ,Max( CS,RMSe ) ) + Max( MUR,Max( CS,MUC ) ) ) ) ) ,Max( CS,RRSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_RAM_Server,( FirstVNF_RAM + MRS ) ),( BR + ( Min( Const ,FirstVNF_CPU ) / ( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - MLU ) ) / ( ( CS - ( RMSe / ( RCSe + Max( MLU,RCSe ) ) ) ) / ( RRSe - DS ) ) )", "obj1": 0.22560975609756098, "obj2": 0.6468310315275366}, {"determining": "Min( ( Min( PN ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU * DDR ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( ( ( MUR * MUR ) + MUR ) / ( MUM + MUR ) ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( Min( PN ,Min( Max( RRS,MDR ) ,( RRS - ( ( DDR / ARS ) * Min( MRS ,DDR ) ) ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( Max( FirstVNF_Mem,( ARS + MRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe * ( RMSe * ( ( ( MUC - ( RRSe + ( MUC - MUR ) ) ) - RCSe ) * ( DS + RRSe ) ) ) ),( Max( MLU,RRSe ) + ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( MUR - Min( DS ,RMSe ) ) ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * ( ( ( MUR / RMSe ) - RRSe ) + Min( MUR ,MUM ) ) ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MRS - PN ) ,( ARS / DDR ) ) * Min( ( FirstVNF_RAM + PN ) ,Min( PN ,DDR ) ) ) * ( Min( Min( DDR ,Const ) ,( DDR * FirstVNF_CPU ) ) / ( ( BR / ARS ) - ( CRS - MRS ) ) ) )", "choosing": "Max( ( RRSe / RCSe ),( CS + Max( RRSe,( MUC * MUC ) ) ) )", "obj1": 0.8475609756097561, "obj2": 0.1678938875523856}, {"determining": "( Max( Max( Max( DDR,FirstVNF_CPU_Server ),ARS ),BR ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( MUM + DS ) ) ),Min( CS ,Max( MUR,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( Min( FirstVNF_CPU_Server ,ACS ) ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( FirstVNF_CPU * DDR ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Min( ( MUM + DS ) ,MLU ) + Max( DS,MUR ) ) + Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - FirstVNF_RAM ) / ( ( FirstVNF_CPU + CRS ) - ACS ) ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) )", "obj1": 0.943089430894309, "obj2": 0.03710097999289731}, {"determining": "( Min( Min( ( ARS + DDR ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - AMS ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( BR - AMS ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,( MUR + MUC ) ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( ( RCSe * ( RCSe * RRSe ) ) - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem,( BR - FirstVNF_Mem_Server ) ) ,Max( Min( ( DDR * FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ),( DDR - ( PN / PN ) ) ) ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( CS - ( Max( RMSe,Min( RMSe ,CS ) ) / RRSe ) ) + Min( RRSe ,Min( MUR ,( MUR / ( MLU * MUC ) ) ) ) ) ,Min( MUC ,Max( DS,MUM ) ) )", "obj1": 0.2886178861788618, "obj2": 0.5669810776158694}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( ( FirstVNF_RAM / CRS ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( Min( RRSe ,Min( RRSe ,( DS * DS ) ) ) / ( MLU / MUR ) )", "obj1": 0.9715447154471545, "obj2": 0.015113998439609975}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - ACS ) ,( ACS * FirstVNF_Mem ) ) ) * ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const / FirstVNF_RAM ) ) * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * MLU ),CS ) ) )", "obj1": 0.9410569105691057, "obj2": 0.0557241125324581}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / ( FirstVNF_CPU - FirstVNF_CPU ) ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + Max( ( RCSe / ( CS * RCSe ) ),DS ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const + ( Const * CRS ) ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( ( ( Max( ( CS + MUM ),( MLU * DS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( MRS * AMS ) ) ,( FirstVNF_Mem - DDR ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * Max( ( CS - MUC ),( CS - ( ( Max( ( MUC + DS ),( RRSe / MUM ) ) * MUR ) - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) - Max( BR,ARS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( MUC,RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( DDR,FirstVNF_RAM ) ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / Min( CS ,RMSe ) ) ) ,( ( RCSe * RMSe ) / Max( ( MUR * ( ( DS - Min( MLU ,RRSe ) ) * MUC ) ),RRSe ) ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0007750556015560908}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUR ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.4604052367825234}, {"determining": "( ( MDR + Min( Max( ARS,MRS ) ,( MRS + RRS ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( DS ,Min( MLU ,MLU ) ) / ( CS - MUM ) ) + ( ( MLU - MUM ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Min( AMS ,CRS ) ) - FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( DDR * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( MLU / MUM ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,ARS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( Min( CS ,Max( ( CS + CS ),MLU ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( DS ,MLU ) ) ),( MLU + DS ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * ( ARS * ( AMS + ( CRS - ( Max( MRS,Min( FirstVNF_CPU ,DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MLU + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * DDR ) ) )", "choosing": "( ( CS / Min( ( MLU / ( MLU / MLU ) ) ,RMSe ) ) - ( MUR / MUM ) )", "obj1": 0.9939024390243902, "obj2": 0.0026023843013552803}, {"determining": "( ( CRS + ( ( Max( Const,DDR ) - FirstVNF_RAM_Server ) * MRS ) ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( ( Max( PN,PN ) / FirstVNF_RAM_Server ) * MDR ),( MDR + MDR ) ) ) )", "choosing": "Min( Max( MLU,RMSe ) ,Max( ( MUC + CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ACS,FirstVNF_CPU_Server ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + DS ) * Min( MUC ,RCSe ) )", "obj1": 0.4634146341463415, "obj2": 0.4256459771212945}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( RRS + Const ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUR,RCSe ) / Max( CS,( ( CS / MLU ) * Min( MUM ,MUM ) ) ) ) / MUC ) - ( ( Min( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUC / DS ) ) - ( MUR * DS ) ) ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) )", "obj1": 0.38414634146341464, "obj2": 0.45548193763351125}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,Min( ( ( Const / AMS ) - ( Min( MRS ,( FirstVNF_Mem / FirstVNF_Mem ) ) * DDR ) ) ,Max( DDR,MRS ) ) ) ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * Max( RMSe,MUC ) ) - ( MLU + ( ( MUM + MUR ) * ( CS / MUR ) ) ) )", "obj1": 0.3252032520325203, "obj2": 0.4966786044428145}, {"determining": "( Min( Max( FirstVNF_Mem,( BR - FirstVNF_Mem_Server ) ) ,Max( Min( ( DDR * FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ),( DDR - ( PN / PN ) ) ) ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( CS - ( Max( RMSe,Min( RMSe ,CS ) ) / RRSe ) ) + Min( RRSe ,Min( MUR ,( MUR / ( MLU * MUC ) ) ) ) ) ,Min( MUC ,Max( DS,MUM ) ) )", "obj1": 0.25, "obj2": 0.5892275375869334}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( CS - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0025211577697886343}, {"determining": "( ( ( CRS / MRS ) - MRS ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( RRSe * Min( RCSe ,( RMSe / MUC ) ) ) + ( Max( ( ( ( MUR - MLU ) - ( ( RMSe + RMSe ) + MUM ) ) - ( ( MUC / Max( CS,MLU ) ) + DS ) ),Min( MLU ,Min( DS ,MUM ) ) ) / Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( Max( ( BR + DDR ),Max( PN,( FirstVNF_CPU * Min( PN ,ARS ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( ( ( RRSe * Min( MLU ,( MUC / MUR ) ) ) / ( Min( ( MLU - MUC ) ,MLU ) / MUM ) ) + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( CRS / ACS ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( ( FirstVNF_RAM / CRS ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( Max( ( CS - MLU ),Min( RMSe ,RMSe ) ) - ( MUR / CS ) ) / ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) + FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( RRSe - DS ) - ( CS - MUM ) )", "obj1": 0.31910569105691056, "obj2": 0.5378556243656791}, {"determining": "Min( ( Min( MRS ,MDR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,Max( MLU,DS ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - Max( Max( FirstVNF_Mem,Max( Max( Const,FirstVNF_Mem ),ACS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS * ( DS + ( MUM + MUC ) ) ) + MUR ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / BR ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / MUM ) + DS ) + ( ( MUC * MUC ) + Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / Min( ( MLU / ( ( Max( ( MUR - RCSe ),MUM ) + CS ) - ( MLU * CS ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.9878048780487805, "obj2": 0.005326105669089767}, {"determining": "( Min( ( FirstVNF_Mem + Max( RRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR * FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( Max( RCSe,( ( MUC - ( MUC * RCSe ) ) - DS ) ),( ( RMSe * MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Max( ACS,MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( MUR * CS ) ) - ( Min( MUR ,MUM ) - Max( RRSe,MUC ) ) )", "obj1": 0.36585365853658536, "obj2": 0.47941429529640395}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * ( ( Max( DDR,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) - ( Min( MRS ,RRS ) * ( PN + ACS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) + Max( MUC,CS ) ) + MUM ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( Const * DDR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) )", "choosing": "Min( ( ( RMSe / MUM ) * RRSe ) ,Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ) + ( ( MUM * MLU ) / ( MUR - Max( Min( ( MUR / MUC ) ,( CS - MUM ) ),Min( MLU ,( RMSe * MUC ) ) ) ) ) ) ,( Min( ( RCSe / Max( RMSe,( ( CS / RCSe ) + MLU ) ) ) ,( CS * MUM ) ) - ( Max( MUR,CS ) * Min( MUR ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / ACS ) + ( FirstVNF_CPU_Server * AMS ) ) * ( Min( ( ( ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_CPU ) + FirstVNF_CPU ) * RRS ) ,( CRS + MRS ) ) - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS * MLU ) ,Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - PN ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( RMSe * ( ( ( ( ( CS - CS ) - MUR ) + ( CS / ( MUC / RRSe ) ) ) * RMSe ) - ( ( MLU / CS ) * RRSe ) ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + ( RCSe - MUC ) ) ,( Min( MLU ,RRSe ) - ( MUM - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( ( ( Const - ( Min( ( ( FirstVNF_RAM - FirstVNF_Mem ) / CRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) / Min( DDR ,RRS ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( ( RMSe * ( ( MUR + RCSe ) - RCSe ) ) + MUR ) ,( CS / Max( ( Max( MUM,RRSe ) * RRSe ),RCSe ) ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Max( ACS,MRS ) ) + ( BR - MRS ) )", "choosing": "( Min( MUM ,RMSe ) / CS )", "obj1": 0.4166666666666667, "obj2": 0.4414191746925994}, {"determining": "( Max( ARS,PN ) + ( MDR * BR ) )", "choosing": "( Min( MUM ,RMSe ) / ( RCSe - Min( MUM ,Min( ( MUR / RCSe ) ,RRSe ) ) ) )", "obj1": 0.3089430894308943, "obj2": 0.5574287797302642}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR - Const ) ) / ( Const - MDR ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( ( MLU - DS ) * Max( Max( ( Min( DS ,MUM ) - Min( RRSe ,RMSe ) ),Max( ( MUC + DS ),( MUR + ( DS - ( DS / MLU ) ) ) ) ),Max( ( ( RCSe + MLU ) * ( CS - ( ( DS * MUC ) / RCSe ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( CRS ,( Max( Min( FirstVNF_RAM_Server ,Max( BR,PN ) ),FirstVNF_Mem_Server ) + ( ARS - FirstVNF_Mem ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( MLU - DS ) / ( DS / RMSe ) ) ,Max( DS,( RMSe * RRSe ) ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,Max( RRS,FirstVNF_RAM ) )", "choosing": "Min( ( CS - MLU ) ,Max( RCSe,RMSe ) )", "obj1": 0.20121951219512196, "obj2": 0.7242466755469142}, {"determining": "( Min( Min( Min( FirstVNF_RAM ,MRS ) ,( MDR * PN ) ) ,Max( Min( ( DDR * FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ),( DDR - ARS ) ) ) + ( ( ( FirstVNF_CPU + FirstVNF_RAM ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - RMSe ) ,( RRSe - ( ( ( DS / RMSe ) / ( MUR * CS ) ) - ( Min( MUR ,MUM ) - Max( RRSe,MUC ) ) ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5775771898687547}, {"determining": "( Min( Min( Min( FirstVNF_RAM ,MRS ) ,( MDR * PN ) ) ,Max( ( FirstVNF_Mem * CRS ),( DDR - ARS ) ) ) + FirstVNF_CPU_Server )", "choosing": "Min( ( Min( MUR ,RRSe ) - RMSe ) ,( RRSe - ( ( DS * MUM ) / RMSe ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5611099729534027}, {"determining": "( ( Const * Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,Max( RRS,DDR ) ) ) - ( ( FirstVNF_Mem + RRS ) - Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * RMSe ) - Min( ( MUC * RCSe ) ,Max( RCSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + DDR ) * ( ( ARS - ( ARS - RRS ) ) * ( ACS * ( MDR / FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) + FirstVNF_RAM )", "choosing": "( Min( Min( DS ,( ( CS / MUC ) - ( MLU + Min( CS ,( ( RCSe - RMSe ) - ( RMSe - RCSe ) ) ) ) ) ) ,Max( Max( MUC,RRSe ),( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( RCSe / DS ) ) ) + MUR ) ) ) ) - ( ( MUR * DS ) * Max( DS,CS ) ) )", "obj1": 0.39634146341463417, "obj2": 0.45182032105905484}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN * Max( ACS,MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( DDR * ACS ) )", "choosing": "( Min( CS ,RCSe ) - ( RCSe + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_CPU ) + ( DDR * CRS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( MLU + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( MDR * ( FirstVNF_CPU_Server * Min( BR ,Min( CRS ,MDR ) ) ) ) - ( Const - FirstVNF_RAM ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / ( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * Max( RCSe,MUM ) ) - ( RCSe * Max( MLU,Max( MUM,( MUM * ( RMSe * ( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( AMS ,( DDR / RRS ) ) ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,Max( RRS,FirstVNF_RAM ) )", "choosing": "Min( ( CS - MLU ) ,Max( RCSe,RMSe ) )", "obj1": 0.20121951219512196, "obj2": 0.7242466755469142}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( CS / ( MLU / ( Max( MUC,MUM ) * MUR ) ) )", "obj1": 0.7784552845528455, "obj2": 0.18463329227271846}, {"determining": "( ( Const - MDR ) * ( AMS * AMS ) )", "choosing": "( ( RRSe + DS ) + ( MUR + MUR ) )", "obj1": 0.6117886178861789, "obj2": 0.2562598528431283}, {"determining": "( Min( Min( MRS ,MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( RRS + AMS ) * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * ( MLU + RMSe ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 0.7967479674796748, "obj2": 0.1520497659022055}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / ( Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) - FirstVNF_CPU ) ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - ( RRSe - DS ) ) ) + Min( ( ( CS + RRSe ) + Max( ( RCSe / ( CS * RCSe ) ),DS ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 0.8658536585365854, "obj2": 0.10486874983766499}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( FirstVNF_RAM + MRS ) - ( MRS * DDR ) )", "choosing": "( ( Max( MUC,MUC ) / ( RRSe - DS ) ) * Max( DS,DS ) )", "obj1": 0.5630081300813008, "obj2": 0.32743756058408663}, {"determining": "( Min( Max( FirstVNF_Mem,( BR - FirstVNF_Mem_Server ) ) ,Max( Min( ( DDR * FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ),( DDR - ( PN / PN ) ) ) ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( CS - ( Max( RMSe,Min( RMSe ,CS ) ) / RRSe ) ) + Min( RRSe ,Min( MUR ,( MUR / ( MLU * MUC ) ) ) ) ) ,Min( MUC ,Max( DS,MUM ) ) )", "obj1": 0.25, "obj2": 0.5892275375869334}, {"determining": "Max( Max( ( FirstVNF_Mem / MDR ),( FirstVNF_RAM + MRS ) ),Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - ( ( MUM - MUR ) * ( MLU / DS ) ) ) ) / ( Max( MUC,MUC ) / Max( ( ( ( MUR * MLU ) - Min( CS ,CS ) ) + MLU ),( RCSe + MLU ) ) ) )", "obj1": 0.20528455284552846, "obj2": 0.6618362486102837}, {"determining": "( Max( FirstVNF_CPU_Server,Min( FirstVNF_RAM_Server ,RRS ) ) - ( ( ( DDR + FirstVNF_CPU ) + ( DDR * CRS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR + DS ) * ( MUR + ( ( DS * ( MLU + ( MUM * MUR ) ) ) + Min( MUR ,MUC ) ) ) )", "obj1": 0.44308943089430897, "obj2": 0.43512118321130966}, {"determining": "( ( Max( FirstVNF_CPU_Server,Min( FirstVNF_RAM_Server ,RRS ) ) - ( Const * ARS ) ) * ( ( FirstVNF_CPU + MDR ) - Min( RRS ,FirstVNF_CPU ) ) )", "choosing": "( ( DS + DS ) - Min( MUM ,Min( ( DS * CS ) ,CS ) ) )", "obj1": 0.5995934959349594, "obj2": 0.2744623732182897}, {"determining": "Min( ( FirstVNF_RAM - ARS ) ,( DDR * ACS ) )", "choosing": "( Min( CS ,RCSe ) - ( RCSe + MUM ) )", "obj1": 0.9065040650406504, "obj2": 0.0990035653909965}, {"determining": "( ( BR * Max( ACS,MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( MUR * CS ) ) - ( Min( MUR ,MUM ) - Max( RRSe,MUC ) ) )", "obj1": 0.36585365853658536, "obj2": 0.47941429529640395}, {"determining": "Min( Min( ( FirstVNF_CPU + ( Const * ARS ) ) ,MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) )", "choosing": "( MUR / Max( MLU,( MUC * MUC ) ) )", "obj1": 0.24796747967479674, "obj2": 0.6452711404432265}, {"determining": "Min( ( ( RRS - FirstVNF_RAM ) / ( ( FirstVNF_CPU + CRS ) - ACS ) ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) )", "obj1": 0.943089430894309, "obj2": 0.03710097999289731}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),( MRS / Const ) ) )", "choosing": "Max( ( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 0.9126016260162602, "obj2": 0.06279319199968024}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( ( FirstVNF_RAM / CRS ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( Min( RRSe ,Min( RRSe ,( DS * DS ) ) ) / ( MLU / MUR ) )", "obj1": 0.9715447154471545, "obj2": 0.015113998439609975}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,Min( ( ( Const / AMS ) - ( Min( MRS ,( FirstVNF_Mem / FirstVNF_Mem ) ) * DDR ) ) ,Max( DDR,MRS ) ) ) ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * Max( RMSe,MUC ) ) - ( MLU + ( ( MUM + MUR ) * ( CS / MUR ) ) ) )", "obj1": 0.3252032520325203, "obj2": 0.4966786044428145}, {"determining": "( ( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) + FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,DDR ) )", "choosing": "( ( RRSe - DS ) - ( CS - MUM ) )", "obj1": 0.31910569105691056, "obj2": 0.5378556243656791}, {"determining": "( ( FirstVNF_CPU_Server - ARS ) - ( MRS * DDR ) )", "choosing": "( ( MUM + MUR ) * Max( ( MUC + Max( RCSe,Max( MUC,RRSe ) ) ),DS ) )", "obj1": 0.5833333333333334, "obj2": 0.3155031042991125}, {"determining": "( ( PN * Max( ACS,MRS ) ) + ( BR - MRS ) )", "choosing": "( Min( MUM ,RMSe ) / CS )", "obj1": 0.4166666666666667, "obj2": 0.4414191746925994}, {"determining": "( Min( Max( FirstVNF_Mem,( BR - FirstVNF_Mem_Server ) ) ,Max( Min( ( DDR * FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ),( DDR - ( PN / PN ) ) ) ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( CS - ( Max( RMSe,Min( RMSe ,CS ) ) / RRSe ) ) + Min( RRSe ,Min( MUR ,( MUR / ( MLU * MUC ) ) ) ) ) ,Min( MUC ,Max( DS,MUM ) ) )", "obj1": 0.2784552845528455, "obj2": 0.5729597828431598}, {"determining": "Max( Max( FirstVNF_RAM_Server,( FirstVNF_RAM + MRS ) ),( BR + ( Min( Const ,FirstVNF_CPU ) / ( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - MLU ) ) / ( ( CS - ( RMSe / ( RCSe + Max( MLU,RCSe ) ) ) ) / ( RRSe - DS ) ) )", "obj1": 0.22560975609756098, "obj2": 0.6468310315275366}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const / FirstVNF_RAM ) ) * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( RRSe - DS ) )", "obj1": 0.9329268292682927, "obj2": 0.05439308163555352}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - ACS ) ,( ACS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "( ( ( ( FirstVNF_CPU_Server + DDR ) * ( ( ARS - ( ARS - RRS ) ) * ( ACS * ( MDR / FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) + FirstVNF_RAM )", "choosing": "( Min( Min( DS ,( ( CS / MUC ) - ( MLU + Min( CS ,( ( RCSe - RMSe ) - ( RMSe - RCSe ) ) ) ) ) ) ,Max( Max( MUC,RRSe ),( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( RCSe / DS ) ) ) + MUR ) ) ) ) - ( ( MUR * DS ) * Max( DS,CS ) ) )", "obj1": 0.39634146341463417, "obj2": 0.45182032105905484}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUR ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.4604052367825234}, {"determining": "( Min( Max( FirstVNF_Mem,( BR - FirstVNF_Mem_Server ) ) ,Max( Min( ( DDR * FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ),( DDR - ( PN / PN ) ) ) ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( CS - ( Max( RMSe,Min( RMSe ,CS ) ) / RRSe ) ) + Min( RRSe ,Min( MUR ,( MUR / ( MLU * MUC ) ) ) ) ) ,Min( MUC ,Max( DS,MUM ) ) )", "obj1": 0.2886178861788618, "obj2": 0.5669810776158694}, {"determining": "( Max( ARS,PN ) + ( MDR * BR ) )", "choosing": "( Min( MUM ,RMSe ) / ( RCSe - Min( MUM ,Min( ( MUR / RCSe ) ,RRSe ) ) ) )", "obj1": 0.3089430894308943, "obj2": 0.5574287797302642}, {"determining": "( Min( Max( AMS,Const ) ,( ACS * RRS ) ) / ( Min( FirstVNF_Mem_Server ,PN ) * ( MDR - FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / ( MUM / DS ) ) + ( RCSe / Max( DS,MLU ) ) )", "obj1": 0.5813008130081301, "obj2": 0.3209056580175497}, {"determining": "( ( PN / ( RRS + Const ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUR,RCSe ) / Max( CS,( ( CS / MLU ) * Min( MUM ,MUM ) ) ) ) / MUC ) - ( ( Min( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUC / DS ) ) - ( MUR * DS ) ) ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) )", "obj1": 0.38414634146341464, "obj2": 0.45548193763351125}, {"determining": "( Min( Min( Min( FirstVNF_RAM ,MRS ) ,( MDR * PN ) ) ,Max( ( FirstVNF_Mem * CRS ),( DDR - ARS ) ) ) + FirstVNF_CPU_Server )", "choosing": "Min( ( Min( MUR ,RRSe ) - RMSe ) ,( RRSe - ( ( DS * MUM ) / RMSe ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5611099729534027}, {"determining": "( ( Const * Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU ) ) - ( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) + RRS ) - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Max( AMS,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( ( ( ( ( MUM + MUC ) - MUC ) - RCSe ) + RCSe ) ,( RMSe + ( Min( RRSe ,Min( RRSe ,( ( MUM / DS ) * DS ) ) ) / ( MLU / MUR ) ) ) ) ,( ( MUR * RMSe ) - Min( ( MUC * RCSe ) ,Max( RCSe,RMSe ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.006119823351656751}, {"determining": "Min( Max( AMS,( BR - ARS ) ) ,( PN - DDR ) )", "choosing": "( ( MLU / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) )", "obj1": 0.9939024390243902, "obj2": 0.002078450932766717}, {"determining": "( ( ARS - ( DDR * FirstVNF_RAM_Server ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Min( ( CS / ( ( MUR * MLU ) * RMSe ) ) ,( ( RCSe - CS ) + MLU ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0035002450233018153}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / Min( ( MLU / ( ( Max( ( MUR - RCSe ),MUM ) + CS ) - ( MLU * CS ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.9878048780487805, "obj2": 0.005326105669089767}, {"determining": "( ( Min( Max( DDR,FirstVNF_RAM ) ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / Min( CS ,RMSe ) ) ) ,( ( RCSe * RMSe ) / Max( ( MUR * ( ( DS - Min( MLU ,RRSe ) ) * MUC ) ),RRSe ) ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0007750556015560908}, {"determining": "( ( Min( ( ACS * CRS ) ,AMS ) * PN ) - Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC / ( RMSe * ( ( MUM / MUM ) * MUM ) ) ) ,Min( RRSe ,( Max( RRSe,MUM ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) - RRS ),( FirstVNF_RAM_Server - CRS ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUM + ( MUC / ( ( MUM + Min( ( MUM * MUM ) ,CS ) ) - MUC ) ) ) * MUR ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,MDR ) / ( CRS / PN ) ) + ( ( Const * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,( CRS + ( FirstVNF_CPU + PN ) ) ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( Min( ( MUR + Min( RRSe ,( Min( MUC ,Max( CS,RMSe ) ) + Max( MUR,Max( CS,MUC ) ) ) ) ) ,Max( CS,RRSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( PN ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU * DDR ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( ( ( MUR * MUR ) + MUR ) / ( MUM + MUR ) ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( Min( PN ,Min( Max( RRS,MDR ) ,( RRS - ( ( DDR / ARS ) * Min( MRS ,DDR ) ) ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( Max( FirstVNF_Mem,( ARS + MRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe * ( RMSe * ( ( ( MUC - ( RRSe + ( MUC - MUR ) ) ) - RCSe ) * ( DS + RRSe ) ) ) ),( Max( MLU,RRSe ) + ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( MUR - Min( DS ,RMSe ) ) ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * ( ( ( MUR / RMSe ) - RRSe ) + Min( MUR ,MUM ) ) ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( DDR,FirstVNF_CPU_Server ),ARS ),BR ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( MUM + DS ) ) ),Min( CS ,Max( MUR,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( Min( FirstVNF_CPU_Server ,ACS ) ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( FirstVNF_CPU * DDR ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Min( ( MUM + DS ) ,MLU ) + Max( DS,MUR ) ) + Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( ARS + DDR ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - AMS ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( BR - AMS ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,( MUR + MUC ) ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( ( RCSe * ( RCSe * RRSe ) ) - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / ( FirstVNF_CPU - FirstVNF_CPU ) ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + Max( ( RCSe / ( CS * RCSe ) ),DS ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const + ( Const * CRS ) ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( ( ( Max( ( CS + MUM ),( MLU * DS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( MRS * AMS ) ) ,( FirstVNF_Mem - DDR ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * Max( ( CS - MUC ),( CS - ( ( Max( ( MUC + DS ),( RRSe / MUM ) ) * MUR ) - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) - Max( BR,ARS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( MUC,RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + Min( Max( ARS,MRS ) ,( MRS + RRS ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( DS ,Min( MLU ,MLU ) ) / ( CS - MUM ) ) + ( ( MLU - MUM ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Min( AMS ,CRS ) ) - FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( DDR * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( MLU / MUM ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,ARS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( Min( CS ,Max( ( CS + CS ),MLU ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( DS ,MLU ) ) ),( MLU + DS ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * ( ARS * ( AMS + ( CRS - ( Max( MRS,Min( FirstVNF_CPU ,DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MLU + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + ( ( Max( Const,DDR ) - FirstVNF_RAM_Server ) * MRS ) ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( ( Max( PN,PN ) / FirstVNF_RAM_Server ) * MDR ),( MDR + MDR ) ) ) )", "choosing": "Min( Max( MLU,RMSe ) ,Max( ( MUC + CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / MRS ) - MRS ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( RRSe * Min( RCSe ,( RMSe / MUC ) ) ) + ( Max( ( ( ( MUR - MLU ) - ( ( RMSe + RMSe ) + MUM ) ) - ( ( MUC / Max( CS,MLU ) ) + DS ) ),Min( MLU ,Min( DS ,MUM ) ) ) / Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( Max( ( BR + DDR ),Max( PN,( FirstVNF_CPU * Min( PN ,ARS ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( ( ( RRSe * Min( MLU ,( MUC / MUR ) ) ) / ( Min( ( MLU - MUC ) ,MLU ) / MUM ) ) + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( CRS / ACS ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( ( FirstVNF_RAM / CRS ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( Max( ( CS - MLU ),Min( RMSe ,RMSe ) ) - ( MUR / CS ) ) / ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MRS ,MDR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,Max( MLU,DS ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - Max( Max( FirstVNF_Mem,Max( Max( Const,FirstVNF_Mem ),ACS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS * ( DS + ( MUM + MUC ) ) ) + MUR ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / BR ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / MUM ) + DS ) + ( ( MUC * MUC ) + Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Max( RRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR * FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( Max( RCSe,( ( MUC - ( MUC * RCSe ) ) - DS ) ),( ( RMSe * MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * ( ( Max( DDR,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) - ( Min( MRS ,RRS ) * ( PN + ACS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) + Max( MUC,CS ) ) + MUM ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( Const * DDR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) )", "choosing": "Min( ( ( RMSe / MUM ) * RRSe ) ,Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ) + ( ( MUM * MLU ) / ( MUR - Max( Min( ( MUR / MUC ) ,( CS - MUM ) ),Min( MLU ,( RMSe * MUC ) ) ) ) ) ) ,( Min( ( RCSe / Max( RMSe,( ( CS / RCSe ) + MLU ) ) ) ,( CS * MUM ) ) - ( Max( MUR,CS ) * Min( MUR ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / ACS ) + ( FirstVNF_CPU_Server * AMS ) ) * ( Min( ( ( ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_CPU ) + FirstVNF_CPU ) * RRS ) ,( CRS + MRS ) ) - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS * MLU ) ,Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - PN ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( RMSe * ( ( ( ( ( CS - CS ) - MUR ) + ( CS / ( MUC / RRSe ) ) ) * RMSe ) - ( ( MLU / CS ) * RRSe ) ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + ( RCSe - MUC ) ) ,( Min( MLU ,RRSe ) - ( MUM - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( ( ( Const - ( Min( ( ( FirstVNF_RAM - FirstVNF_Mem ) / CRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) / Min( DDR ,RRS ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( ( RMSe * ( ( MUR + RCSe ) - RCSe ) ) + MUR ) ,( CS / Max( ( Max( MUM,RRSe ) * RRSe ),RCSe ) ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR - Const ) ) / ( Const - MDR ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( ( MLU - DS ) * Max( Max( ( Min( DS ,MUM ) - Min( RRSe ,RMSe ) ),Max( ( MUC + DS ),( MUR + ( DS - ( DS / MLU ) ) ) ) ),Max( ( ( RCSe + MLU ) * ( CS - ( ( DS * MUC ) / RCSe ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( CRS ,( Max( Min( FirstVNF_RAM_Server ,Max( BR,PN ) ),FirstVNF_Mem_Server ) + ( ARS - FirstVNF_Mem ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( MLU - DS ) / ( DS / RMSe ) ) ,Max( DS,( RMSe * RRSe ) ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,Max( RRS,DDR ) ) ) - ( ( FirstVNF_Mem + RRS ) - Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * RMSe ) - Min( ( MUC * RCSe ) ,Max( RCSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN * Max( ACS,MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( DDR * ACS ) )", "choosing": "( Min( CS ,RCSe ) - ( RCSe + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_CPU ) + ( DDR * CRS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( MLU + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / Const ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * Max( CS,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - MUR ) * ( MLU / Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( ( MUC - MUM ) - ( DS * ( ( CS + ( ( RRSe - CS ) / ( DS / RMSe ) ) ) / Max( MLU,RCSe ) ) ) ) * Max( ( MUM + ( MUR * MUM ) ),( ( RMSe * MLU ) - ( CS * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( Max( FirstVNF_CPU_Server,RRS ) - Max( MDR,MRS ) ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ) + ( ( MUM * ( MUC * Max( CS,( ( RMSe - MUR ) - MUM ) ) ) ) / ( MUR - RRSe ) ) ) ,( Min( ( ( ( MUM + MUR ) * Max( DS,DS ) ) / RMSe ) ,( CS * MUM ) ) - ( Max( ( MUC + MLU ),CS ) * Min( MUR ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / ACS ) + ( FirstVNF_CPU_Server * AMS ) ) * ( Min( ( PN * ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - MRS ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( Max( RCSe,MUM ) * ( CS + MUM ) ) + ( MLU / ( MUR - RRSe ) ) ) ,Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_Mem ) - Max( ( PN - ( ACS + Min( ( ( MRS - Min( PN ,MRS ) ) - MDR ) ,Const ) ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( DS * DS ) ,( ( ( RRSe + Min( ( Max( RRSe,RRSe ) / RRSe ) ,( RCSe + Max( RMSe,RCSe ) ) ) ) / RRSe ) / ( Max( CS,RCSe ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / FirstVNF_Mem )", "choosing": "( ( MLU + MUM ) - Min( ( RMSe + MUR ) ,( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( ( Const - MDR ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( ( ( Min( Max( Min( ( CS * MUC ) ,RCSe ),Max( ( MUR - MUR ),RMSe ) ) ,( MUC / DS ) ) + ( ( MUC * MUC ) + Max( MUC,RRSe ) ) ) + RMSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - ( ( DDR * PN ) / FirstVNF_RAM ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - MUR ) * ( MLU / ( Max( MLU,RRSe ) + ( ( Min( RCSe ,RCSe ) / RRSe ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) ),( ( PN * Max( ACS,MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( CS - MLU ) / ( RCSe / MUM ) ) ),Min( ( Min( CS ,RCSe ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( ( DS - ( RRSe + ( MUM / Min( MUM ,( CS / MUM ) ) ) ) ) + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * ( FirstVNF_CPU_Server * Min( BR ,Min( CRS ,MDR ) ) ) ) - ( Const - FirstVNF_RAM ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / ( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * Max( RCSe,MUM ) ) - ( RCSe * Max( MLU,Max( MUM,( MUM * ( RMSe * ( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,Max( RRS,FirstVNF_RAM ) )", "choosing": "Min( ( CS - MLU ) ,Max( RCSe,RMSe ) )", "obj1": 0.20121951219512196, "obj2": 0.7242466755469142}, {"determining": "( ( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - ( ( DDR * PN ) / FirstVNF_RAM ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - MUR ) * ( MLU / ( Max( MLU,RRSe ) + ( ( Min( RCSe ,RCSe ) / RRSe ) + RMSe ) ) ) )", "obj1": 0.6951219512195121, "obj2": 0.251515006135543}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( CS / ( MLU / ( Max( MUC,MUM ) * MUR ) ) )", "obj1": 0.7784552845528455, "obj2": 0.18463329227271846}, {"determining": "( ( MRS - ( CRS * ( Max( ( Min( MRS ,Max( PN,FirstVNF_Mem ) ) * ( AMS * Max( AMS,FirstVNF_RAM_Server ) ) ),DDR ) * ( FirstVNF_CPU_Server + CRS ) ) ) ) - ( MRS * DDR ) )", "choosing": "( ( Max( MUC,( RMSe * Max( ( RRSe - Min( ( CS / RCSe ) ,RRSe ) ),( ( RRSe - ( RCSe + DS ) ) - MUM ) ) ) ) / ( RRSe - DS ) ) * ( Max( ( DS - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.8191056910569106, "obj2": 0.09970489273292009}, {"determining": "( Min( Min( MRS ,MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( RRS + AMS ) * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * ( MLU + RMSe ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 0.7967479674796748, "obj2": 0.1520497659022055}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 0.8780487804878049, "obj2": 0.08178419211759885}, {"determining": "( Min( Max( FirstVNF_Mem,( BR - FirstVNF_Mem_Server ) ) ,Max( Min( ( DDR * FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ),( DDR - ( PN / PN ) ) ) ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( CS - ( Max( RMSe,Min( RMSe ,CS ) ) / RRSe ) ) + Min( RRSe ,Min( MUR ,( MUR / ( MLU * MUC ) ) ) ) ) ,Min( MUC ,Max( DS,MUM ) ) )", "obj1": 0.25, "obj2": 0.5892275375869334}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * ( FirstVNF_Mem_Server - Min( AMS ,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( ( ( RRSe * Min( MLU ,( MUC / CS ) ) ) / ( Min( ( MLU - MUC ) ,( RRSe - CS ) ) / MUM ) ) + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + MLU )", "obj1": 0.5020325203252033, "obj2": 0.30014693880933485}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - ( ( CS + MUR ) * RCSe ) ) ,Min( MUC ,CS ) ) ) - ( Min( MUR ,Max( Max( Max( MLU,RCSe ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5525444823907202}, {"determining": "( ( PN * Max( ACS,MRS ) ) + ( BR - MRS ) )", "choosing": "( Min( MUM ,RMSe ) / CS )", "obj1": 0.4166666666666667, "obj2": 0.4414191746925994}, {"determining": "Max( Max( ( FirstVNF_Mem / MDR ),( FirstVNF_RAM + MRS ) ),Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - ( ( MUM - MUR ) * ( MLU / DS ) ) ) ) / ( Max( MUC,MUC ) / Max( ( ( ( MUR * MLU ) - Min( CS ,CS ) ) + MLU ),( RCSe + MLU ) ) ) )", "obj1": 0.20528455284552846, "obj2": 0.6618362486102837}, {"determining": "( ( ( BR + ( FirstVNF_CPU_Server - CRS ) ) * ARS ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( CS / ( ( MUC - MUM ) + ( CS * RMSe ) ) ) - DS ) )", "obj1": 0.4349593495934959, "obj2": 0.38700590309922395}, {"determining": "( ( BR * Max( ACS,MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( MUR * CS ) ) - ( Min( MUR ,MUM ) - Max( RRSe,MUC ) ) )", "obj1": 0.36585365853658536, "obj2": 0.47941429529640395}, {"determining": "Min( Min( ( FirstVNF_CPU + ( Const * ARS ) ) ,MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) )", "choosing": "( MUR / Max( MLU,( MUC * MUC ) ) )", "obj1": 0.24796747967479674, "obj2": 0.6452711404432265}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),( MRS / Const ) ) )", "choosing": "Max( ( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 0.9126016260162602, "obj2": 0.06279319199968024}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "( ( ( ( FirstVNF_CPU_Server * ( CRS - ( ( RRS + FirstVNF_Mem_Server ) - AMS ) ) ) + Const ) * ( FirstVNF_Mem - ARS ) ) - ( MRS * DDR ) )", "choosing": "( ( ( DS / MUC ) - ( ( Min( ( CS * RRSe ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) ) * Min( ( MLU / Min( RMSe ,Min( MUC ,( Min( DS ,MUC ) / ( MUR - CS ) ) ) ) ) ,RRSe ) )", "obj1": 0.3008130081300813, "obj2": 0.5311745787627501}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,Min( ( ( Const / AMS ) - ( Min( MRS ,( FirstVNF_Mem / FirstVNF_Mem ) ) * DDR ) ) ,Max( DDR,MRS ) ) ) ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * Max( RMSe,MUC ) ) - ( MLU + ( ( MUM + MUR ) * ( CS / MUR ) ) ) )", "obj1": 0.3252032520325203, "obj2": 0.4966786044428145}, {"determining": "Max( Max( FirstVNF_RAM_Server,( FirstVNF_RAM + MRS ) ),( BR + ( Min( Const ,FirstVNF_CPU ) / ( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - MLU ) ) / ( ( CS - ( RMSe / ( RCSe + Max( MLU,RCSe ) ) ) ) / ( RRSe - DS ) ) )", "obj1": 0.22560975609756098, "obj2": 0.6468310315275366}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( Min( ( FirstVNF_RAM - FirstVNF_RAM_Server ) ,( Const / FirstVNF_RAM ) ) * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( RRSe - DS ) )", "obj1": 0.9329268292682927, "obj2": 0.05439308163555352}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( PN / Const ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( ( FirstVNF_RAM / CRS ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( Min( RRSe ,Min( RRSe ,( DS * DS ) ) ) / ( MLU / MUR ) )", "obj1": 0.9715447154471545, "obj2": 0.015113998439609975}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( Const ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ,( ( Const - MDR ) - ( ( BR / PN ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( ( ( ( MUR + MUC ) * ( ( RCSe / RCSe ) + ( ( Max( DS,CS ) + ( CS / MUR ) ) / Min( MUC ,CS ) ) ) ) + RMSe ) - MUC ) )", "obj1": 0.959349593495935, "obj2": 0.03476782681107997}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,Min( Max( ( ACS - FirstVNF_CPU ),Max( Max( Const,FirstVNF_Mem ),ACS ) ) ,FirstVNF_Mem_Server ) ) ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( ( MUC / MLU ) * MLU ) - ( MLU + ( Min( RCSe ,CS ) * ( CS / MUR ) ) ) )", "obj1": 0.32113821138211385, "obj2": 0.5273423352328139}, {"determining": "Min( ( ( RRS - FirstVNF_RAM ) / ( ( FirstVNF_CPU + CRS ) - ACS ) ) ,( PN - ( FirstVNF_CPU_Server * Max( Const,RRS ) ) ) )", "choosing": "( ( Min( DS ,MUR ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) )", "obj1": 0.943089430894309, "obj2": 0.03710097999289731}, {"determining": "( ( ( ( FirstVNF_CPU_Server + DDR ) * ( ( ARS - ( ARS - RRS ) ) * ( ACS * ( MDR / FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) + FirstVNF_RAM )", "choosing": "( Min( Min( DS ,( ( CS / MUC ) - ( MLU + Min( CS ,( ( RCSe - RMSe ) - ( RMSe - RCSe ) ) ) ) ) ) ,Max( Max( MUC,RRSe ),( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( RCSe / DS ) ) ) + MUR ) ) ) ) - ( ( MUR * DS ) * Max( DS,CS ) ) )", "obj1": 0.39634146341463417, "obj2": 0.45182032105905484}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUR ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.4604052367825234}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - ACS ) ,( ACS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( DDR - RRS ) )", "choosing": "Min( ( ( MUM * Max( RRSe,MLU ) ) + ( RMSe + Max( RCSe,MUC ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( PN / ( RRS + Const ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUR,RCSe ) / Max( CS,( ( CS / MLU ) * Min( MUM ,MUM ) ) ) ) / MUC ) - ( ( Min( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUC / DS ) ) - ( MUR * DS ) ) ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) )", "obj1": 0.38414634146341464, "obj2": 0.45548193763351125}, {"determining": "( ( Const * Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU ) ) - ( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) + RRS ) - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Max( AMS,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( ( ( ( ( MUM + MUC ) - MUC ) - RCSe ) + RCSe ) ,( RMSe + ( Min( RRSe ,Min( RRSe ,( ( MUM / DS ) * DS ) ) ) / ( MLU / MUR ) ) ) ) ,( ( MUR * RMSe ) - Min( ( MUC * RCSe ) ,Max( RCSe,RMSe ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.006119823351656751}, {"determining": "Min( Max( AMS,( BR - ARS ) ) ,( PN - DDR ) )", "choosing": "( ( MLU / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) )", "obj1": 0.9939024390243902, "obj2": 0.002078450932766717}, {"determining": "( ( ARS - ( DDR * FirstVNF_RAM_Server ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Min( ( CS / ( ( MUR * MLU ) * RMSe ) ) ,( ( RCSe - CS ) + MLU ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0035002450233018153}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / Min( ( MLU / ( ( Max( ( MUR - RCSe ),MUM ) + CS ) - ( MLU * CS ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.9878048780487805, "obj2": 0.005326105669089767}, {"determining": "( ( Min( Max( DDR,FirstVNF_RAM ) ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / Min( CS ,RMSe ) ) ) ,( ( RCSe * RMSe ) / Max( ( MUR * ( ( DS - Min( MLU ,RRSe ) ) * MUC ) ),RRSe ) ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0007750556015560908}, {"determining": "( ( MDR - Min( AMS ,( DDR / RRS ) ) ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * CRS ) ,AMS ) * PN ) - Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC / ( RMSe * ( ( MUM / MUM ) * MUM ) ) ) ,Min( RRSe ,( Max( RRSe,MUM ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) - RRS ),( FirstVNF_RAM_Server - CRS ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUM + ( MUC / ( ( MUM + Min( ( MUM * MUM ) ,CS ) ) - MUC ) ) ) * MUR ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,MDR ) / ( CRS / PN ) ) + ( ( Const * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,( CRS + ( FirstVNF_CPU + PN ) ) ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( Min( ( MUR + Min( RRSe ,( Min( MUC ,Max( CS,RMSe ) ) + Max( MUR,Max( CS,MUC ) ) ) ) ) ,Max( CS,RRSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( PN ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU * DDR ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( ( ( MUR * MUR ) + MUR ) / ( MUM + MUR ) ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( Min( PN ,Min( Max( RRS,MDR ) ,( RRS - ( ( DDR / ARS ) * Min( MRS ,DDR ) ) ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( Max( FirstVNF_Mem,( ARS + MRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe * ( RMSe * ( ( ( MUC - ( RRSe + ( MUC - MUR ) ) ) - RCSe ) * ( DS + RRSe ) ) ) ),( Max( MLU,RRSe ) + ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( MUR - Min( DS ,RMSe ) ) ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * ( ( ( MUR / RMSe ) - RRSe ) + Min( MUR ,MUM ) ) ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( DDR,FirstVNF_CPU_Server ),ARS ),BR ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( MUM + DS ) ) ),Min( CS ,Max( MUR,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( Min( FirstVNF_CPU_Server ,ACS ) ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( FirstVNF_CPU * DDR ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Min( ( MUM + DS ) ,MLU ) + Max( DS,MUR ) ) + Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( ARS + DDR ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - AMS ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( BR - AMS ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,( MUR + MUC ) ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( ( RCSe * ( RCSe * RRSe ) ) - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / ( FirstVNF_CPU - FirstVNF_CPU ) ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + Max( ( RCSe / ( CS * RCSe ) ),DS ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const + ( Const * CRS ) ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( ( ( Max( ( CS + MUM ),( MLU * DS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( MRS * AMS ) ) ,( FirstVNF_Mem - DDR ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * Max( ( CS - MUC ),( CS - ( ( Max( ( MUC + DS ),( RRSe / MUM ) ) * MUR ) - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) - Max( BR,ARS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( MUC,RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + Min( Max( ARS,MRS ) ,( MRS + RRS ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( DS ,Min( MLU ,MLU ) ) / ( CS - MUM ) ) + ( ( MLU - MUM ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Min( AMS ,CRS ) ) - FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( DDR * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( MLU / MUM ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,ARS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( Min( CS ,Max( ( CS + CS ),MLU ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( DS ,MLU ) ) ),( MLU + DS ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * ( ARS * ( AMS + ( CRS - ( Max( MRS,Min( FirstVNF_CPU ,DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MLU + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + ( ( Max( Const,DDR ) - FirstVNF_RAM_Server ) * MRS ) ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( ( Max( PN,PN ) / FirstVNF_RAM_Server ) * MDR ),( MDR + MDR ) ) ) )", "choosing": "Min( Max( MLU,RMSe ) ,Max( ( MUC + CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / MRS ) - MRS ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( RRSe * Min( RCSe ,( RMSe / MUC ) ) ) + ( Max( ( ( ( MUR - MLU ) - ( ( RMSe + RMSe ) + MUM ) ) - ( ( MUC / Max( CS,MLU ) ) + DS ) ),Min( MLU ,Min( DS ,MUM ) ) ) / Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( Max( ( BR + DDR ),Max( PN,( FirstVNF_CPU * Min( PN ,ARS ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( ( ( RRSe * Min( MLU ,( MUC / MUR ) ) ) / ( Min( ( MLU - MUC ) ,MLU ) / MUM ) ) + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( CRS / ACS ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( ( FirstVNF_RAM / CRS ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( Max( ( CS - MLU ),Min( RMSe ,RMSe ) ) - ( MUR / CS ) ) / ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MRS ,MDR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,Max( MLU,DS ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - Max( Max( FirstVNF_Mem,Max( Max( Const,FirstVNF_Mem ),ACS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS * ( DS + ( MUM + MUC ) ) ) + MUR ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / BR ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / MUM ) + DS ) + ( ( MUC * MUC ) + Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Max( RRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR * FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( Max( RCSe,( ( MUC - ( MUC * RCSe ) ) - DS ) ),( ( RMSe * MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * ( ( Max( DDR,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) - ( Min( MRS ,RRS ) * ( PN + ACS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) + Max( MUC,CS ) ) + MUM ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( Const * DDR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) )", "choosing": "Min( ( ( RMSe / MUM ) * RRSe ) ,Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ) + ( ( MUM * MLU ) / ( MUR - Max( Min( ( MUR / MUC ) ,( CS - MUM ) ),Min( MLU ,( RMSe * MUC ) ) ) ) ) ) ,( Min( ( RCSe / Max( RMSe,( ( CS / RCSe ) + MLU ) ) ) ,( CS * MUM ) ) - ( Max( MUR,CS ) * Min( MUR ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / ACS ) + ( FirstVNF_CPU_Server * AMS ) ) * ( Min( ( ( ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_CPU ) + FirstVNF_CPU ) * RRS ) ,( CRS + MRS ) ) - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS * MLU ) ,Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - PN ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( RMSe * ( ( ( ( ( CS - CS ) - MUR ) + ( CS / ( MUC / RRSe ) ) ) * RMSe ) - ( ( MLU / CS ) * RRSe ) ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + ( RCSe - MUC ) ) ,( Min( MLU ,RRSe ) - ( MUM - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( ( ( Const - ( Min( ( ( FirstVNF_RAM - FirstVNF_Mem ) / CRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) / Min( DDR ,RRS ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( ( RMSe * ( ( MUR + RCSe ) - RCSe ) ) + MUR ) ,( CS / Max( ( Max( MUM,RRSe ) * RRSe ),RCSe ) ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR - Const ) ) / ( Const - MDR ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( ( MLU - DS ) * Max( Max( ( Min( DS ,MUM ) - Min( RRSe ,RMSe ) ),Max( ( MUC + DS ),( MUR + ( DS - ( DS / MLU ) ) ) ) ),Max( ( ( RCSe + MLU ) * ( CS - ( ( DS * MUC ) / RCSe ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( CRS ,( Max( Min( FirstVNF_RAM_Server ,Max( BR,PN ) ),FirstVNF_Mem_Server ) + ( ARS - FirstVNF_Mem ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( MLU - DS ) / ( DS / RMSe ) ) ,Max( DS,( RMSe * RRSe ) ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,Max( RRS,DDR ) ) ) - ( ( FirstVNF_Mem + RRS ) - Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * RMSe ) - Min( ( MUC * RCSe ) ,Max( RCSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN * Max( ACS,MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( DDR * ACS ) )", "choosing": "( Min( CS ,RCSe ) - ( RCSe + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_CPU ) + ( DDR * CRS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( MLU + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / Const ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * Max( CS,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - MUR ) * ( MLU / Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( ( MUC - MUM ) - ( DS * ( ( CS + ( ( RRSe - CS ) / ( DS / RMSe ) ) ) / Max( MLU,RCSe ) ) ) ) * Max( ( MUM + ( MUR * MUM ) ),( ( RMSe * MLU ) - ( CS * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( Max( FirstVNF_CPU_Server,RRS ) - Max( MDR,MRS ) ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ) + ( ( MUM * ( MUC * Max( CS,( ( RMSe - MUR ) - MUM ) ) ) ) / ( MUR - RRSe ) ) ) ,( Min( ( ( ( MUM + MUR ) * Max( DS,DS ) ) / RMSe ) ,( CS * MUM ) ) - ( Max( ( MUC + MLU ),CS ) * Min( MUR ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / ACS ) + ( FirstVNF_CPU_Server * AMS ) ) * ( Min( ( PN * ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - MRS ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( Max( RCSe,MUM ) * ( CS + MUM ) ) + ( MLU / ( MUR - RRSe ) ) ) ,Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_Mem ) - Max( ( PN - ( ACS + Min( ( ( MRS - Min( PN ,MRS ) ) - MDR ) ,Const ) ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( DS * DS ) ,( ( ( RRSe + Min( ( Max( RRSe,RRSe ) / RRSe ) ,( RCSe + Max( RMSe,RCSe ) ) ) ) / RRSe ) / ( Max( CS,RCSe ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / FirstVNF_Mem )", "choosing": "( ( MLU + MUM ) - Min( ( RMSe + MUR ) ,( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( ( Const - MDR ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( ( ( Min( Max( Min( ( CS * MUC ) ,RCSe ),Max( ( MUR - MUR ),RMSe ) ) ,( MUC / DS ) ) + ( ( MUC * MUC ) + Max( MUC,RRSe ) ) ) + RMSe ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - ( ( DDR * PN ) / FirstVNF_RAM ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - MUR ) * ( MLU / ( Max( MLU,RRSe ) + ( ( Min( RCSe ,RCSe ) / RRSe ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) ),( ( PN * Max( ACS,MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( CS - MLU ) / ( RCSe / MUM ) ) ),Min( ( Min( CS ,RCSe ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( RRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( ( MUR - MUC ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( ( DS - ( RRSe + ( MUM / Min( MUM ,( CS / MUM ) ) ) ) ) + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),Const ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) / DS ) + ( ( Min( MUR ,RCSe ) - MUM ) * Max( MUM,MUM ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7372254339418387}, {"determining": "( ( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - ( ( DDR * PN ) / FirstVNF_RAM ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - MUR ) * ( MLU / ( Max( MLU,RRSe ) + ( ( Min( RCSe ,RCSe ) / RRSe ) + RMSe ) ) ) )", "obj1": 0.6951219512195121, "obj2": 0.251515006135543}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( CS / ( MLU / ( Max( MUC,MUM ) * MUR ) ) )", "obj1": 0.7784552845528455, "obj2": 0.18463329227271846}, {"determining": "( ( MRS - ( CRS * ( Max( ( Min( MRS ,Max( PN,FirstVNF_Mem ) ) * ( AMS * Max( AMS,FirstVNF_RAM_Server ) ) ),DDR ) * ( FirstVNF_CPU_Server + CRS ) ) ) ) - ( MRS * DDR ) )", "choosing": "( ( Max( MUC,( RMSe * Max( ( RRSe - Min( ( CS / RCSe ) ,RRSe ) ),( ( RRSe - ( RCSe + DS ) ) - MUM ) ) ) ) / ( RRSe - DS ) ) * ( Max( ( DS - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.8191056910569106, "obj2": 0.09970489273292009}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * MUC ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.14227642276422764, "obj2": 0.6979111103532208}, {"determining": "( Min( Max( FirstVNF_Mem,( BR - FirstVNF_Mem_Server ) ) ,Max( Min( ( DDR * FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ),( DDR - ( PN / PN ) ) ) ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( CS - ( Max( RMSe,Min( RMSe ,CS ) ) / RRSe ) ) + Min( RRSe ,Min( MUR ,( MUR / ( MLU * MUC ) ) ) ) ) ,Min( MUC ,Max( DS,MUM ) ) )", "obj1": 0.25, "obj2": 0.5892275375869334}, {"determining": "( Min( Min( MRS ,MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( RRS + AMS ) * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * ( MLU + RMSe ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 0.7967479674796748, "obj2": 0.1520497659022055}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 0.8780487804878049, "obj2": 0.08178419211759885}, {"determining": "( ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) * ACS ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( ( MUC - MUM ) - ( DS * ( ( CS + ( RCSe + ( MUR * CS ) ) ) / Max( MLU,RCSe ) ) ) ) * Max( ( MUM + ( MUR * MUM ) ),( ( RMSe * MLU ) - ( CS * CS ) ) ) )", "obj1": 0.21951219512195122, "obj2": 0.6296417955890082}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * ( FirstVNF_Mem_Server - Min( AMS ,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( ( ( RRSe * Min( MLU ,( MUC / CS ) ) ) / ( Min( ( MLU - MUC ) ,( RRSe - CS ) ) / MUM ) ) + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + MLU )", "obj1": 0.5020325203252033, "obj2": 0.30014693880933485}, {"determining": "Min( ( DDR * Const ) ,( Max( MDR,FirstVNF_RAM ) - ( ( ( Min( MDR ,Const ) / ( MRS + ( BR * PN ) ) ) + RRS ) + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( MUC + ( Min( Max( MUM,Max( RMSe,DS ) ) ,MUM ) / MLU ) ) )", "obj1": 0.9288617886178862, "obj2": 0.0299472464356333}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),( MRS / Const ) ) )", "choosing": "Max( ( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 0.9126016260162602, "obj2": 0.06279319199968024}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - ( ( CS + MUR ) * RCSe ) ) ,Min( MUC ,CS ) ) ) - ( Min( MUR ,Max( Max( Max( MLU,RCSe ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5525444823907202}, {"determining": "Max( Max( FirstVNF_RAM_Server,( FirstVNF_RAM + ( AMS - ( MRS * DDR ) ) ) ),( BR + ( Min( Const ,FirstVNF_CPU ) / ( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - MLU ) ) / ( ( CS - ( ( ( Min( ( CS * RRSe ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) / ( RCSe + Max( MLU,RCSe ) ) ) ) / ( RRSe - DS ) ) )", "obj1": 0.2032520325203252, "obj2": 0.6733876656156265}, {"determining": "( ( ( BR + ( FirstVNF_CPU_Server - CRS ) ) * ARS ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( CS / ( ( MUC - MUM ) + ( CS * RMSe ) ) ) - DS ) )", "obj1": 0.4349593495934959, "obj2": 0.38700590309922395}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( ( MRS / AMS ) ,Min( ACS ,( ARS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( DS * ( CS / MUM ) ) * Max( Max( Min( DS ,CS ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 0.4166666666666667, "obj2": 0.43774793180815885}, {"determining": "( ( BR * Max( ACS,MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( MUM / ( MUR * CS ) ) - ( Min( MUR ,MUM ) - Max( RRSe,MUC ) ) )", "obj1": 0.36585365853658536, "obj2": 0.47941429529640395}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,Min( ( ( Const / AMS ) - ( Min( MRS ,( FirstVNF_Mem / FirstVNF_Mem ) ) * DDR ) ) ,Max( DDR,MRS ) ) ) ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * Max( RMSe,MUC ) ) - ( MLU + ( ( MUM + MUR ) * ( CS / MUR ) ) ) )", "obj1": 0.3252032520325203, "obj2": 0.4966786044428145}, {"determining": "Max( Max( ( FirstVNF_Mem / MDR ),( FirstVNF_RAM + MRS ) ),Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - ( ( MUM - MUR ) * ( MLU / DS ) ) ) ) / ( Max( MUC,MUC ) / Max( ( ( ( MUR * MLU ) - Min( CS ,CS ) ) + MLU ),( RCSe + MLU ) ) ) )", "obj1": 0.20528455284552846, "obj2": 0.6618362486102837}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - ACS ) ,( ACS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.29065040650406504, "obj2": 0.5324869611414282}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( ( ( FirstVNF_CPU_Server * ( CRS - ( ( RRS + FirstVNF_Mem_Server ) - AMS ) ) ) + Const ) * ( FirstVNF_Mem - ARS ) ) - ( MRS * DDR ) )", "choosing": "( ( ( DS / MUC ) - ( ( Min( ( CS * RRSe ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) ) * Min( ( MLU / Min( RMSe ,Min( MUC ,( Min( DS ,MUC ) / ( MUR - CS ) ) ) ) ) ,RRSe ) )", "obj1": 0.3008130081300813, "obj2": 0.5311745787627501}, {"determining": "Min( Max( FirstVNF_CPU_Server,ACS ) ,( MDR * Min( Min( FirstVNF_RAM ,Const ) ,( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * MRS ) ) ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * MLU ) - ( MLU + ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ) ) )", "obj1": 0.31910569105691056, "obj2": 0.5112168711682711}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUR ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.4604052367825234}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( ( CRS * RRS ) * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,MUC ) ) * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - DS ) )", "obj1": 0.40040650406504064, "obj2": 0.44034109952527434}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( DDR - RRS ) )", "choosing": "Min( ( ( MUM * Max( RRSe,MLU ) ) + ( RMSe + Max( RCSe,MUC ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( PN / ( RRS + Const ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUR,RCSe ) / Max( CS,( ( CS / MLU ) * Min( MUM ,MUM ) ) ) ) / MUC ) - ( ( Min( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUC / DS ) ) - ( MUR * DS ) ) ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) )", "obj1": 0.38414634146341464, "obj2": 0.45548193763351125}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - ACS ) ,( ACS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "( ( ( ( FirstVNF_CPU_Server + DDR ) * ( ( ARS - ( ARS - RRS ) ) * ( ACS * ( MDR / FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) + FirstVNF_RAM )", "choosing": "( Min( Min( DS ,( ( CS / MUC ) - ( MLU + Min( CS ,( ( RCSe - RMSe ) - ( RMSe - RCSe ) ) ) ) ) ) ,Max( Max( MUC,RRSe ),( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( RCSe / DS ) ) ) + MUR ) ) ) ) - ( ( MUR * DS ) * Max( DS,CS ) ) )", "obj1": 0.39634146341463417, "obj2": 0.45182032105905484}, {"determining": "( ( Const * Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU ) ) - ( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) + RRS ) - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Max( AMS,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( ( ( ( ( MUM + MUC ) - MUC ) - RCSe ) + RCSe ) ,( RMSe + ( Min( RRSe ,Min( RRSe ,( ( MUM / DS ) * DS ) ) ) / ( MLU / MUR ) ) ) ) ,( ( MUR * RMSe ) - Min( ( MUC * RCSe ) ,Max( RCSe,RMSe ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.006119823351656751}, {"determining": "( ( Max( ( DDR * RRS ),FirstVNF_RAM_Server ) - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( ACS ,FirstVNF_RAM ) - Min( ( Max( BR,( PN + PN ) ) - ( ACS - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( Max( MUR,MLU ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( ( ( CS + ( Min( ( CS * RCSe ) ,RMSe ) * RMSe ) ) - RMSe ) / ( RRSe / RMSe ) ) ) )", "obj1": 0.39227642276422764, "obj2": 0.45194566676318526}, {"determining": "Min( Max( AMS,( BR - ARS ) ) ,( PN - DDR ) )", "choosing": "( ( MLU / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) )", "obj1": 0.9939024390243902, "obj2": 0.002078450932766717}, {"determining": "( ( ARS - ( DDR * FirstVNF_RAM_Server ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Min( ( CS / ( ( MUR * MLU ) * RMSe ) ) ,( ( RCSe - CS ) + MLU ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0035002450233018153}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / Min( ( MLU / ( ( Max( ( MUR - RCSe ),MUM ) + CS ) - ( MLU * CS ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.9878048780487805, "obj2": 0.005326105669089767}, {"determining": "( ( Min( Max( DDR,FirstVNF_RAM ) ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / Min( CS ,RMSe ) ) ) ,( ( RCSe * RMSe ) / Max( ( MUR * ( ( DS - Min( MLU ,RRSe ) ) * MUC ) ),RRSe ) ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0007750556015560908}, {"determining": "( ( ( MDR * ( FirstVNF_CPU_Server * Min( BR ,Min( CRS ,MDR ) ) ) ) - ( Const - FirstVNF_RAM ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / ( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * Max( RCSe,MUM ) ) - ( RCSe * Max( MLU,Max( MUM,( MUM * ( RMSe * ( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( AMS ,( DDR / RRS ) ) ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * CRS ) ,AMS ) * PN ) - Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC / ( RMSe * ( ( MUM / MUM ) * MUM ) ) ) ,Min( RRSe ,( Max( RRSe,MUM ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) - RRS ),( FirstVNF_RAM_Server - CRS ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUM + ( MUC / ( ( MUM + Min( ( MUM * MUM ) ,CS ) ) - MUC ) ) ) * MUR ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,MDR ) / ( CRS / PN ) ) + ( ( Const * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,( CRS + ( FirstVNF_CPU + PN ) ) ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( Min( ( MUR + Min( RRSe ,( Min( MUC ,Max( CS,RMSe ) ) + Max( MUR,Max( CS,MUC ) ) ) ) ) ,Max( CS,RRSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( PN ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU * DDR ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( ( ( MUR * MUR ) + MUR ) / ( MUM + MUR ) ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( Min( PN ,Min( Max( RRS,MDR ) ,( RRS - ( ( DDR / ARS ) * Min( MRS ,DDR ) ) ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( Max( FirstVNF_Mem,( ARS + MRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe * ( RMSe * ( ( ( MUC - ( RRSe + ( MUC - MUR ) ) ) - RCSe ) * ( DS + RRSe ) ) ) ),( Max( MLU,RRSe ) + ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( MUR - Min( DS ,RMSe ) ) ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * ( ( ( MUR / RMSe ) - RRSe ) + Min( MUR ,MUM ) ) ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( DDR,FirstVNF_CPU_Server ),ARS ),BR ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( MUM + DS ) ) ),Min( CS ,Max( MUR,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( Min( FirstVNF_CPU_Server ,ACS ) ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( FirstVNF_CPU * DDR ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Min( ( MUM + DS ) ,MLU ) + Max( DS,MUR ) ) + Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( ARS + DDR ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - AMS ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( BR - AMS ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,( MUR + MUC ) ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( ( RCSe * ( RCSe * RRSe ) ) - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / ( FirstVNF_CPU - FirstVNF_CPU ) ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + Max( ( RCSe / ( CS * RCSe ) ),DS ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const + ( Const * CRS ) ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( ( ( Max( ( CS + MUM ),( MLU * DS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( MRS * AMS ) ) ,( FirstVNF_Mem - DDR ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * Max( ( CS - MUC ),( CS - ( ( Max( ( MUC + DS ),( RRSe / MUM ) ) * MUR ) - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) - Max( BR,ARS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( MUC,RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + Min( Max( ARS,MRS ) ,( MRS + RRS ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( DS ,Min( MLU ,MLU ) ) / ( CS - MUM ) ) + ( ( MLU - MUM ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Min( AMS ,CRS ) ) - FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( DDR * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( MLU / MUM ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,ARS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( Min( CS ,Max( ( CS + CS ),MLU ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( DS ,MLU ) ) ),( MLU + DS ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * ( ARS * ( AMS + ( CRS - ( Max( MRS,Min( FirstVNF_CPU ,DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MLU + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + ( ( Max( Const,DDR ) - FirstVNF_RAM_Server ) * MRS ) ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( ( Max( PN,PN ) / FirstVNF_RAM_Server ) * MDR ),( MDR + MDR ) ) ) )", "choosing": "Min( Max( MLU,RMSe ) ,Max( ( MUC + CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / MRS ) - MRS ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( RRSe * Min( RCSe ,( RMSe / MUC ) ) ) + ( Max( ( ( ( MUR - MLU ) - ( ( RMSe + RMSe ) + MUM ) ) - ( ( MUC / Max( CS,MLU ) ) + DS ) ),Min( MLU ,Min( DS ,MUM ) ) ) / Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( Max( ( BR + DDR ),Max( PN,( FirstVNF_CPU * Min( PN ,ARS ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( ( ( RRSe * Min( MLU ,( MUC / MUR ) ) ) / ( Min( ( MLU - MUC ) ,MLU ) / MUM ) ) + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( CRS / ACS ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( ( FirstVNF_RAM / CRS ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( Max( ( CS - MLU ),Min( RMSe ,RMSe ) ) - ( MUR / CS ) ) / ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MRS ,MDR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,Max( MLU,DS ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - Max( Max( FirstVNF_Mem,Max( Max( Const,FirstVNF_Mem ),ACS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS * ( DS + ( MUM + MUC ) ) ) + MUR ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / BR ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / MUM ) + DS ) + ( ( MUC * MUC ) + Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Max( RRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR * FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( Max( RCSe,( ( MUC - ( MUC * RCSe ) ) - DS ) ),( ( RMSe * MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * ( ( Max( DDR,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) - ( Min( MRS ,RRS ) * ( PN + ACS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) + Max( MUC,CS ) ) + MUM ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( Const * DDR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) )", "choosing": "Min( ( ( RMSe / MUM ) * RRSe ) ,Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ) + ( ( MUM * MLU ) / ( MUR - Max( Min( ( MUR / MUC ) ,( CS - MUM ) ),Min( MLU ,( RMSe * MUC ) ) ) ) ) ) ,( Min( ( RCSe / Max( RMSe,( ( CS / RCSe ) + MLU ) ) ) ,( CS * MUM ) ) - ( Max( MUR,CS ) * Min( MUR ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / ACS ) + ( FirstVNF_CPU_Server * AMS ) ) * ( Min( ( ( ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_CPU ) + FirstVNF_CPU ) * RRS ) ,( CRS + MRS ) ) - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS * MLU ) ,Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - PN ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( RMSe * ( ( ( ( ( CS - CS ) - MUR ) + ( CS / ( MUC / RRSe ) ) ) * RMSe ) - ( ( MLU / CS ) * RRSe ) ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + ( RCSe - MUC ) ) ,( Min( MLU ,RRSe ) - ( MUM - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( ( ( Const - ( Min( ( ( FirstVNF_RAM - FirstVNF_Mem ) / CRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) / Min( DDR ,RRS ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( ( RMSe * ( ( MUR + RCSe ) - RCSe ) ) + MUR ) ,( CS / Max( ( Max( MUM,RRSe ) * RRSe ),RCSe ) ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR - Const ) ) / ( Const - MDR ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( ( MLU - DS ) * Max( Max( ( Min( DS ,MUM ) - Min( RRSe ,RMSe ) ),Max( ( MUC + DS ),( MUR + ( DS - ( DS / MLU ) ) ) ) ),Max( ( ( RCSe + MLU ) * ( CS - ( ( DS * MUC ) / RCSe ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( CRS ,( Max( Min( FirstVNF_RAM_Server ,Max( BR,PN ) ),FirstVNF_Mem_Server ) + ( ARS - FirstVNF_Mem ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( MLU - DS ) / ( DS / RMSe ) ) ,Max( DS,( RMSe * RRSe ) ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,Max( RRS,DDR ) ) ) - ( ( FirstVNF_Mem + RRS ) - Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * RMSe ) - Min( ( MUC * RCSe ) ,Max( RCSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN * Max( ACS,MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( DDR * ACS ) )", "choosing": "( Min( CS ,RCSe ) - ( RCSe + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_CPU ) + ( DDR * CRS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( MLU + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / Const ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * Max( CS,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) )", "choosing": "( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( RRSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - MUR ) * ( MLU / Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( ( MUC - MUM ) - ( DS * ( ( CS + ( ( RRSe - CS ) / ( DS / RMSe ) ) ) / Max( MLU,RCSe ) ) ) ) * Max( ( MUM + ( MUR * MUM ) ),( ( RMSe * MLU ) - ( CS * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( Max( FirstVNF_CPU_Server,RRS ) - Max( MDR,MRS ) ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ) + ( ( MUM * ( MUC * Max( CS,( ( RMSe - MUR ) - MUM ) ) ) ) / ( MUR - RRSe ) ) ) ,( Min( ( ( ( MUM + MUR ) * Max( DS,DS ) ) / RMSe ) ,( CS * MUM ) ) - ( Max( ( MUC + MLU ),CS ) * Min( MUR ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / ACS ) + ( FirstVNF_CPU_Server * AMS ) ) * ( Min( ( PN * ( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - MRS ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( Max( RCSe,MUM ) * ( CS + MUM ) ) + ( MLU / ( MUR - RRSe ) ) ) ,Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_Mem ) - Max( ( PN - ( ACS + Min( ( ( MRS - Min( PN ,MRS ) ) - MDR ) ,Const ) ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( DS * DS ) ,( ( ( RRSe + Min( ( Max( RRSe,RRSe ) / RRSe ) ,( RCSe + Max( RMSe,RCSe ) ) ) ) / RRSe ) / ( Max( CS,RCSe ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / FirstVNF_Mem )", "choosing": "( ( MLU + MUM ) - Min( ( RMSe + MUR ) ,( CS / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / Min( MRS ,( DDR * ACS ) ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * MLU ) - ( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( RCSe + ( MUR * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( RRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( ( MUR - MUC ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),Const ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) / DS ) + ( ( Min( MUR ,RCSe ) - MUM ) * Max( MUM,MUM ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7372254339418387}, {"determining": "( ( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - ( ( DDR * PN ) / FirstVNF_RAM ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - MUR ) * ( MLU / ( Max( MLU,RRSe ) + ( ( Min( RCSe ,RCSe ) / RRSe ) + RMSe ) ) ) )", "obj1": 0.6951219512195121, "obj2": 0.251515006135543}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( ( MRS - ( CRS * ( Max( ( Min( MRS ,Max( PN,FirstVNF_Mem ) ) * ( AMS * Max( AMS,FirstVNF_RAM_Server ) ) ),DDR ) * ( FirstVNF_CPU_Server + CRS ) ) ) ) - ( MRS * DDR ) )", "choosing": "( ( Max( MUC,( RMSe * Max( ( RRSe - Min( ( CS / RCSe ) ,RRSe ) ),( ( RRSe - ( RCSe + DS ) ) - MUM ) ) ) ) / ( RRSe - DS ) ) * ( Max( ( DS - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.8191056910569106, "obj2": 0.09970489273292009}, {"determining": "( ( MRS / Const ) - ( Min( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) - Min( Const ,BR ) ) ,( ( Const - MDR ) - ( FirstVNF_RAM_Server + MRS ) ) ) + ARS ) )", "choosing": "( Max( ( MUC * Max( MUR,MLU ) ),( ( RMSe + RMSe ) - MUC ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 0.766260162601626, "obj2": 0.22166115089529517}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * MUC ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.14227642276422764, "obj2": 0.6979111103532208}, {"determining": "( Min( Max( FirstVNF_Mem,( BR - FirstVNF_Mem_Server ) ) ,Max( Min( ( DDR * FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,PN ) ),( DDR - ( PN / PN ) ) ) ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_CPU_Server ,Const ),( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( CS - ( Max( RMSe,Min( RMSe ,CS ) ) / RRSe ) ) + Min( RRSe ,Min( MUR ,( MUR / ( MLU * MUC ) ) ) ) ) ,Min( MUC ,Max( DS,MUM ) ) )", "obj1": 0.25, "obj2": 0.5892275375869334}, {"determining": "( Min( Min( MRS ,MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( RRS + AMS ) * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * ( MLU + RMSe ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 0.7967479674796748, "obj2": 0.1520497659022055}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * ( FirstVNF_Mem_Server - Min( AMS ,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( ( ( RRSe * Min( MLU ,( MUC / CS ) ) ) / ( Min( ( MLU - MUC ) ,( RRSe - CS ) ) / MUM ) ) + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + MLU )", "obj1": 0.5020325203252033, "obj2": 0.30014693880933485}, {"determining": "Min( ( DDR * Const ) ,( Max( MDR,FirstVNF_RAM ) - ( ( ( Min( MDR ,Const ) / ( MRS + ( BR * PN ) ) ) + RRS ) + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( MUC + ( Min( Max( MUM,Max( RMSe,DS ) ) ,MUM ) / MLU ) ) )", "obj1": 0.9288617886178862, "obj2": 0.0299472464356333}, {"determining": "( ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) * ACS ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( ( MUC - MUM ) - ( DS * ( ( CS + ( RCSe + ( MUR * CS ) ) ) / Max( MLU,RCSe ) ) ) ) * Max( ( MUM + ( MUR * MUM ) ),( ( RMSe * MLU ) - ( CS * CS ) ) ) )", "obj1": 0.21951219512195122, "obj2": 0.6296417955890082}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( CS / ( MLU / ( Max( MUC,MUM ) * MUR ) ) )", "obj1": 0.7784552845528455, "obj2": 0.18463329227271846}, {"determining": "Max( Max( FirstVNF_RAM_Server,( FirstVNF_RAM + ( AMS - ( MRS * DDR ) ) ) ),( BR + ( Min( Const ,FirstVNF_CPU ) / ( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - MLU ) ) / ( ( CS - ( ( ( Min( ( CS * RRSe ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) / ( RCSe + Max( MLU,RCSe ) ) ) ) / ( RRSe - DS ) ) )", "obj1": 0.2032520325203252, "obj2": 0.6733876656156265}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - ( ( CS + MUR ) * RCSe ) ) ,Min( MUC ,CS ) ) ) - ( Min( MUR ,Max( Max( Max( MLU,RCSe ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5525444823907202}, {"determining": "( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),( MRS / Const ) ) )", "choosing": "Max( ( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 0.9126016260162602, "obj2": 0.06279319199968024}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5301330586889882}, {"determining": "( ( ( BR + ( FirstVNF_CPU_Server - CRS ) ) * ARS ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( CS / ( ( MUC - MUM ) + ( CS * RMSe ) ) ) - DS ) )", "obj1": 0.4349593495934959, "obj2": 0.38700590309922395}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 0.8780487804878049, "obj2": 0.08178419211759885}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) )", "choosing": "Min( ( ( CS + ( DS + RMSe ) ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.46960296009518787}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,Min( ( ( Const / AMS ) - ( Min( MRS ,( FirstVNF_Mem / FirstVNF_Mem ) ) * DDR ) ) ,Max( DDR,MRS ) ) ) ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * Max( RMSe,MUC ) ) - ( MLU + ( ( MUM + MUR ) * ( CS / MUR ) ) ) )", "obj1": 0.3252032520325203, "obj2": 0.4966786044428145}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + FirstVNF_Mem )", "choosing": "( ( ( RMSe / Min( ( RMSe + MUR ) ,( CS / RRSe ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.4186991869918699, "obj2": 0.4374811854445273}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Min( ( ( ARS - Const ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) )", "choosing": "Min( ( ( RMSe / MUM ) * RRSe ) ,( Min( ( DS / CS ) ,( RRSe - MUR ) ) / Max( MUC,( RMSe + DS ) ) ) )", "obj1": 0.46747967479674796, "obj2": 0.3674142375809188}, {"determining": "Min( Max( FirstVNF_CPU_Server,ACS ) ,( MDR * Min( Min( FirstVNF_RAM ,Const ) ,( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * MRS ) ) ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * MLU ) - ( MLU + ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ) ) )", "obj1": 0.31910569105691056, "obj2": 0.5112168711682711}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ACS )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUM ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.8902439024390244, "obj2": 0.08102959479599285}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "Max( Max( FirstVNF_RAM_Server,( FirstVNF_RAM + ( AMS - ( MRS * DDR ) ) ) ),( BR + ( Const / AMS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - MLU ) ) / ( ( CS - ( ( ( MUC - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) / ( RCSe + Max( MLU,RCSe ) ) ) ) / ( RRSe - DS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6577400440741202}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUR ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.4604052367825234}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( ( CRS * RRS ) * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,MUC ) ) * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - DS ) )", "obj1": 0.40040650406504064, "obj2": 0.44034109952527434}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( DDR - RRS ) )", "choosing": "Min( ( ( MUM * Max( RRSe,MLU ) ) + ( RMSe + Max( RCSe,MUC ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "Max( Max( ( FirstVNF_Mem / MDR ),( FirstVNF_RAM + MRS ) ),Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - ( ( MUM - MUR ) * ( MLU / DS ) ) ) ) / ( Max( MUC,MUC ) / Max( ( ( ( MUR * MLU ) - Min( CS ,CS ) ) + MLU ),( RCSe + MLU ) ) ) )", "obj1": 0.20528455284552846, "obj2": 0.6618362486102837}, {"determining": "( ( PN / ( RRS + Const ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUR,RCSe ) / Max( CS,( ( CS / MLU ) * Min( MUM ,MUM ) ) ) ) / MUC ) - ( ( Min( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUC / DS ) ) - ( MUR * DS ) ) ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) )", "obj1": 0.38414634146341464, "obj2": 0.45548193763351125}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( ( ( FirstVNF_CPU_Server + DDR ) * ( ( ARS - ( ARS - RRS ) ) * ( ACS * ( MDR / FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) + FirstVNF_RAM )", "choosing": "( Min( Min( DS ,( ( CS / MUC ) - ( MLU + Min( CS ,( ( RCSe - RMSe ) - ( RMSe - RCSe ) ) ) ) ) ) ,Max( Max( MUC,RRSe ),( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( RCSe / DS ) ) ) + MUR ) ) ) ) - ( ( MUR * DS ) * Max( DS,CS ) ) )", "obj1": 0.39634146341463417, "obj2": 0.45182032105905484}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( ( MRS / AMS ) ,Min( ACS ,( ARS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( DS * ( CS / MUM ) ) * Max( Max( Min( DS ,CS ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 0.4166666666666667, "obj2": 0.43774793180815885}, {"determining": "( ( Const * Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU ) ) - ( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) + RRS ) - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Max( AMS,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( ( ( ( ( MUM + MUC ) - MUC ) - RCSe ) + RCSe ) ,( RMSe + ( Min( RRSe ,Min( RRSe ,( ( MUM / DS ) * DS ) ) ) / ( MLU / MUR ) ) ) ) ,( ( MUR * RMSe ) - Min( ( MUC * RCSe ) ,Max( RCSe,RMSe ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.006119823351656751}, {"determining": "( ( Max( ( DDR * RRS ),FirstVNF_RAM_Server ) - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( ACS ,FirstVNF_RAM ) - Min( ( Max( BR,( PN + PN ) ) - ( ACS - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( Max( MUR,MLU ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( ( ( CS + ( Min( ( CS * RCSe ) ,RMSe ) * RMSe ) ) - RMSe ) / ( RRSe / RMSe ) ) ) )", "obj1": 0.39227642276422764, "obj2": 0.45194566676318526}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - ACS ) ,( ACS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "( ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + Max( MRS,( ( ( CRS + Const ) + FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - ( RRSe + RMSe ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( Min( MUC ,RMSe ),RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / Min( ( MLU / ( ( Max( ( MUR - RCSe ),MUM ) + CS ) - ( MLU * CS ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.9878048780487805, "obj2": 0.005326105669089767}, {"determining": "( ( Min( Max( DDR,FirstVNF_RAM ) ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / Min( CS ,RMSe ) ) ) ,( ( RCSe * RMSe ) / Max( ( MUR * ( ( DS - Min( MLU ,RRSe ) ) * MUC ) ),RRSe ) ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0007750556015560908}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "Min( Max( AMS,( BR - ARS ) ) ,( PN - DDR ) )", "choosing": "( ( MLU / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) )", "obj1": 0.9939024390243902, "obj2": 0.002078450932766717}, {"determining": "( ( ARS - ( DDR * FirstVNF_RAM_Server ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Min( ( CS / ( ( MUR * MLU ) * RMSe ) ) ,( ( RCSe - CS ) + MLU ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0035002450233018153}, {"determining": "( ( Min( ( Min( AMS ,Min( RRS ,Const ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( MUC ,( ( RMSe - MUM ) - ( ( MUC * ( CS + MUR ) ) + ( MUC / MLU ) ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.0023276466880874365}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( ( DS - ( RRSe + ( MUM / Min( MUM ,( CS / MUM ) ) ) ) ) + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * ( FirstVNF_CPU_Server * Min( BR ,Min( CRS ,MDR ) ) ) ) - ( Const - FirstVNF_RAM ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / ( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * Max( RCSe,MUM ) ) - ( RCSe * Max( MLU,Max( MUM,( MUM * ( RMSe * ( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( AMS ,( DDR / RRS ) ) ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * CRS ) ,AMS ) * PN ) - Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC / ( RMSe * ( ( MUM / MUM ) * MUM ) ) ) ,Min( RRSe ,( Max( RRSe,MUM ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) - RRS ),( FirstVNF_RAM_Server - CRS ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUM + ( MUC / ( ( MUM + Min( ( MUM * MUM ) ,CS ) ) - MUC ) ) ) * MUR ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,MDR ) / ( CRS / PN ) ) + ( ( Const * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,( CRS + ( FirstVNF_CPU + PN ) ) ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( Min( ( MUR + Min( RRSe ,( Min( MUC ,Max( CS,RMSe ) ) + Max( MUR,Max( CS,MUC ) ) ) ) ) ,Max( CS,RRSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( PN ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU * DDR ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( ( ( MUR * MUR ) + MUR ) / ( MUM + MUR ) ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( Min( PN ,Min( Max( RRS,MDR ) ,( RRS - ( ( DDR / ARS ) * Min( MRS ,DDR ) ) ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( Max( FirstVNF_Mem,( ARS + MRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe * ( RMSe * ( ( ( MUC - ( RRSe + ( MUC - MUR ) ) ) - RCSe ) * ( DS + RRSe ) ) ) ),( Max( MLU,RRSe ) + ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( MUR - Min( DS ,RMSe ) ) ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * ( ( ( MUR / RMSe ) - RRSe ) + Min( MUR ,MUM ) ) ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( DDR,FirstVNF_CPU_Server ),ARS ),BR ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( MUM + DS ) ) ),Min( CS ,Max( MUR,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( Min( FirstVNF_CPU_Server ,ACS ) ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( FirstVNF_CPU * DDR ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Min( ( MUM + DS ) ,MLU ) + Max( DS,MUR ) ) + Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( ARS + DDR ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - AMS ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( BR - AMS ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,( MUR + MUC ) ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( ( RCSe * ( RCSe * RRSe ) ) - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / ( FirstVNF_CPU - FirstVNF_CPU ) ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + Max( ( RCSe / ( CS * RCSe ) ),DS ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const + ( Const * CRS ) ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( ( ( Max( ( CS + MUM ),( MLU * DS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( MRS * AMS ) ) ,( FirstVNF_Mem - DDR ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * Max( ( CS - MUC ),( CS - ( ( Max( ( MUC + DS ),( RRSe / MUM ) ) * MUR ) - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) - Max( BR,ARS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( MUC,RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + Min( Max( ARS,MRS ) ,( MRS + RRS ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( DS ,Min( MLU ,MLU ) ) / ( CS - MUM ) ) + ( ( MLU - MUM ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Min( AMS ,CRS ) ) - FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( DDR * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( MLU / MUM ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,ARS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( Min( CS ,Max( ( CS + CS ),MLU ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( DS ,MLU ) ) ),( MLU + DS ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * ( ARS * ( AMS + ( CRS - ( Max( MRS,Min( FirstVNF_CPU ,DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MLU + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + ( ( Max( Const,DDR ) - FirstVNF_RAM_Server ) * MRS ) ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( ( Max( PN,PN ) / FirstVNF_RAM_Server ) * MDR ),( MDR + MDR ) ) ) )", "choosing": "Min( Max( MLU,RMSe ) ,Max( ( MUC + CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / MRS ) - MRS ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( RRSe * Min( RCSe ,( RMSe / MUC ) ) ) + ( Max( ( ( ( MUR - MLU ) - ( ( RMSe + RMSe ) + MUM ) ) - ( ( MUC / Max( CS,MLU ) ) + DS ) ),Min( MLU ,Min( DS ,MUM ) ) ) / Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( Max( ( BR + DDR ),Max( PN,( FirstVNF_CPU * Min( PN ,ARS ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( ( ( RRSe * Min( MLU ,( MUC / MUR ) ) ) / ( Min( ( MLU - MUC ) ,MLU ) / MUM ) ) + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( CRS / ACS ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( ( FirstVNF_RAM / CRS ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( Max( ( CS - MLU ),Min( RMSe ,RMSe ) ) - ( MUR / CS ) ) / ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MRS ,MDR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,Max( MLU,DS ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - Max( Max( FirstVNF_Mem,Max( Max( Const,FirstVNF_Mem ),ACS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS * ( DS + ( MUM + MUC ) ) ) + MUR ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / BR ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / MUM ) + DS ) + ( ( MUC * MUC ) + Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Max( RRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR * FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( Max( RCSe,( ( MUC - ( MUC * RCSe ) ) - DS ) ),( ( RMSe * MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * ( ( Max( DDR,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) - ( Min( MRS ,RRS ) * ( PN + ACS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) + Max( MUC,CS ) ) + MUM ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( Const * DDR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) )", "choosing": "Min( ( ( RMSe / MUM ) * RRSe ) ,Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ) + ( ( MUM * MLU ) / ( MUR - Max( Min( ( MUR / MUC ) ,( CS - MUM ) ),Min( MLU ,( RMSe * MUC ) ) ) ) ) ) ,( Min( ( RCSe / Max( RMSe,( ( CS / RCSe ) + MLU ) ) ) ,( CS * MUM ) ) - ( Max( MUR,CS ) * Min( MUR ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / ACS ) + ( FirstVNF_CPU_Server * AMS ) ) * ( Min( ( ( ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_CPU ) + FirstVNF_CPU ) * RRS ) ,( CRS + MRS ) ) - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS * MLU ) ,Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - PN ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( RMSe * ( ( ( ( ( CS - CS ) - MUR ) + ( CS / ( MUC / RRSe ) ) ) * RMSe ) - ( ( MLU / CS ) * RRSe ) ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + ( RCSe - MUC ) ) ,( Min( MLU ,RRSe ) - ( MUM - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( ( ( Const - ( Min( ( ( FirstVNF_RAM - FirstVNF_Mem ) / CRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) / Min( DDR ,RRS ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( ( RMSe * ( ( MUR + RCSe ) - RCSe ) ) + MUR ) ,( CS / Max( ( Max( MUM,RRSe ) * RRSe ),RCSe ) ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ( DDR - Const ) ) / ( Const - MDR ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( ( MLU - DS ) * Max( Max( ( Min( DS ,MUM ) - Min( RRSe ,RMSe ) ),Max( ( MUC + DS ),( MUR + ( DS - ( DS / MLU ) ) ) ) ),Max( ( ( RCSe + MLU ) * ( CS - ( ( DS * MUC ) / RCSe ) ) ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( CRS ,( Max( Min( FirstVNF_RAM_Server ,Max( BR,PN ) ),FirstVNF_Mem_Server ) + ( ARS - FirstVNF_Mem ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( MLU - DS ) / ( DS / RMSe ) ) ,Max( DS,( RMSe * RRSe ) ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,Max( RRS,DDR ) ) ) - ( ( FirstVNF_Mem + RRS ) - Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * RMSe ) - Min( ( MUC * RCSe ) ,Max( RCSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN * Max( ACS,MRS ) ) + ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ,( DDR * ACS ) )", "choosing": "( Min( CS ,RCSe ) - ( RCSe + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_CPU ) + ( DDR * CRS ) ) / ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( MLU + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( Min( ( Min( Max( ( PN * ACS ),Min( FirstVNF_RAM ,ACS ) ) ,MRS ) + BR ) ,( ( ( Min( ( FirstVNF_RAM_Server / MRS ) ,FirstVNF_RAM ) + Max( CRS,( Const - AMS ) ) ) + FirstVNF_RAM ) - AMS ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ),Max( ( CS / ( MUC * RCSe ) ),( ( ( RMSe + ( ( RMSe - ( DS + RMSe ) ) * RMSe ) ) + ( MUM + ( RMSe * DS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / Min( MRS ,( DDR * ACS ) ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * MLU ) - ( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( RCSe + ( MUR * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),Const ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) / DS ) + ( ( Min( MUR ,RCSe ) - MUM ) * Max( MUM,MUM ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7372254339418387}, {"determining": "Min( ( MRS / Const ) ,( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - ( Const - ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS / CS ) ,( MUM / Min( Max( Max( MUM,MUR ),Max( MLU,CS ) ) ,CS ) ) ) / ( ( ( Max( Max( ( MUR / ( RCSe - RRSe ) ),CS ),( ( MUC - Min( CS ,CS ) ) / CS ) ) * ( MUC + MLU ) ) / ( ( MUC + MUC ) + ( MUM - DS ) ) ) / DS ) )", "obj1": 0.6056910569105691, "obj2": 0.21314489411551926}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,DDR ) )", "choosing": "( CS / ( MLU / ( Max( MUC,MUM ) * MUR ) ) )", "obj1": 0.7784552845528455, "obj2": 0.18463329227271846}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( ( MRS - ( CRS * ( Max( ( Min( MRS ,Max( PN,FirstVNF_Mem ) ) * ( AMS * Max( AMS,FirstVNF_RAM_Server ) ) ),DDR ) * ( FirstVNF_CPU_Server + CRS ) ) ) ) - ( MRS * DDR ) )", "choosing": "( ( Max( MUC,( RMSe * Max( ( RRSe - Min( ( CS / RCSe ) ,RRSe ) ),( ( RRSe - ( RCSe + DS ) ) - MUM ) ) ) ) / ( RRSe - DS ) ) * ( Max( ( DS - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.8191056910569106, "obj2": 0.09970489273292009}, {"determining": "( Min( Min( MRS ,MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( RRS + AMS ) * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * ( MLU + RMSe ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 0.7967479674796748, "obj2": 0.1520497659022055}, {"determining": "( ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) * ACS ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( ( MUC - MUM ) - ( DS * ( ( CS + ( RCSe + ( MUR * CS ) ) ) / Max( MLU,RCSe ) ) ) ) * Max( ( MUM + ( MUR * MUM ) ),( ( RMSe * MLU ) - ( CS * CS ) ) ) )", "obj1": 0.21951219512195122, "obj2": 0.6296417955890082}, {"determining": "Min( MRS ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.24796747967479674, "obj2": 0.5696451683508261}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * ( FirstVNF_Mem_Server - Min( AMS ,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( ( ( RRSe * Min( MLU ,( MUC / CS ) ) ) / ( Min( ( MLU - MUC ) ,( RRSe - CS ) ) / MUM ) ) + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + MLU )", "obj1": 0.5020325203252033, "obj2": 0.30014693880933485}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5301330586889882}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 0.8780487804878049, "obj2": 0.08178419211759885}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) )", "choosing": "Min( ( ( CS + ( DS + RMSe ) ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.46960296009518787}, {"determining": "( ARS * ( PN * FirstVNF_CPU ) )", "choosing": "( DS * ( MLU / ( RMSe * ( ( ( MUC - ( RRSe + ( MUC - MUR ) ) ) - RCSe ) * ( DS + RRSe ) ) ) ) )", "obj1": 0.18902439024390244, "obj2": 0.6917913848231293}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,Min( ( ( Const / AMS ) - ( Min( MRS ,( FirstVNF_Mem / FirstVNF_Mem ) ) * DDR ) ) ,Max( DDR,MRS ) ) ) ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * Max( RMSe,MUC ) ) - ( MLU + ( ( MUM + MUR ) * ( CS / MUR ) ) ) )", "obj1": 0.3252032520325203, "obj2": 0.4966786044428145}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( ( ( BR + ( FirstVNF_CPU_Server - CRS ) ) * ARS ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( CS / ( ( MUC - MUM ) + ( CS * RMSe ) ) ) - DS ) )", "obj1": 0.4349593495934959, "obj2": 0.38700590309922395}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( PN,DDR ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( Min( RCSe ,DS ) ,( RRSe - MUR ) ) / ( ( RRSe / ( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) / Max( RMSe,MUR ) ) ) ,( MLU - MUM ) )", "obj1": 0.4247967479674797, "obj2": 0.4271906890516183}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * MUC ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.14227642276422764, "obj2": 0.6979111103532208}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Min( ( ( ARS - Const ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) )", "choosing": "Min( ( ( RMSe / MUM ) * RRSe ) ,( Min( ( DS / CS ) ,( RRSe - MUR ) ) / Max( MUC,( RMSe + DS ) ) ) )", "obj1": 0.46747967479674796, "obj2": 0.3674142375809188}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),AMS ) / FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - Min( Min( CRS ,Min( ACS ,( ARS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( DS ,MLU ) ) ),CS ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.1402439024390244, "obj2": 0.7150101940306676}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 0.9126016260162602, "obj2": 0.06141427102291515}, {"determining": "Min( Max( FirstVNF_CPU_Server,ACS ) ,( MDR * Min( Min( FirstVNF_RAM ,Const ) ,( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * MRS ) ) ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * MLU ) - ( MLU + ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ) ) )", "obj1": 0.31910569105691056, "obj2": 0.5112168711682711}, {"determining": "Min( ( DDR * Const ) ,( Max( MDR,FirstVNF_RAM ) - ( ( ( Min( MDR ,Const ) / ( MRS + ( BR * PN ) ) ) + RRS ) + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( MUC + ( Min( Max( MUM,Max( RMSe,DS ) ) ,MUM ) / MLU ) ) )", "obj1": 0.9288617886178862, "obj2": 0.0299472464356333}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ACS )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUM ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.8902439024390244, "obj2": 0.08102959479599285}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - ( ( CS + MUR ) * RCSe ) ) ,Min( MUC ,CS ) ) ) - ( Min( MUR ,Max( Max( Max( MLU,RCSe ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5525444823907202}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * PN ) / ( MRS + FirstVNF_RAM ) ) - Min( Const ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( ( MLU / ( MLU + ( DS - MLU ) ) ),MUR ) - RCSe ) )", "obj1": 0.9247967479674797, "obj2": 0.05280388869877578}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "Max( Max( FirstVNF_RAM_Server,( FirstVNF_RAM + ( AMS - ( MRS * DDR ) ) ) ),( BR + ( Const / AMS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - MLU ) ) / ( ( CS - ( ( ( MUC - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) / ( RCSe + Max( MLU,RCSe ) ) ) ) / ( RRSe - DS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6577400440741202}, {"determining": "Max( Max( FirstVNF_RAM_Server,( FirstVNF_RAM + ( AMS - ( MRS * DDR ) ) ) ),( BR + ( Min( Const ,FirstVNF_CPU ) / ( Min( MRS ,FirstVNF_RAM ) * BR ) ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - MLU ) ) / ( ( CS - ( ( ( Min( ( CS * RRSe ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) / ( RCSe + Max( MLU,RCSe ) ) ) ) / ( RRSe - DS ) ) )", "obj1": 0.2032520325203252, "obj2": 0.6733876656156265}, {"determining": "Min( ( FirstVNF_CPU / Min( PN ,AMS ) ) ,( ACS + Min( FirstVNF_CPU_Server ,( RRS * ARS ) ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( Max( MUC,DS ) + ( MUM / ( Max( RCSe,MUR ) - RCSe ) ) ) )", "obj1": 0.9552845528455285, "obj2": 0.02282602914283523}, {"determining": "Min( Max( AMS,( BR - ARS ) ) ,Min( MRS ,( DDR * ACS ) ) )", "choosing": "( ( MLU / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + ( RCSe + ( MUR * CS ) ) ) / Max( MUM,MUR ) ) )", "obj1": 0.26422764227642276, "obj2": 0.558777513217245}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUR ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.4604052367825234}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( ( CRS * RRS ) * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,MUC ) ) * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - DS ) )", "obj1": 0.40040650406504064, "obj2": 0.44034109952527434}, {"determining": "( Min( ( PN - ( Const / ( ACS * ( PN * ( ( RRS * Const ) + ( BR / FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * ( MUC / MUC ) ) + ( ( ( CS / ( ( MUR / RRSe ) + CS ) ) - ( CS - CS ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9654471544715447, "obj2": 0.01774557021708144}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "Max( Max( ( FirstVNF_Mem / MDR ),( FirstVNF_RAM + MRS ) ),Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - ( ( MUM - MUR ) * ( MLU / DS ) ) ) ) / ( Max( MUC,MUC ) / Max( ( ( ( MUR * MLU ) - Min( CS ,CS ) ) + MLU ),( RCSe + MLU ) ) ) )", "obj1": 0.20528455284552846, "obj2": 0.6618362486102837}, {"determining": "( ( PN / ( RRS + Const ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUR,RCSe ) / Max( CS,( ( CS / MLU ) * Min( MUM ,MUM ) ) ) ) / MUC ) - ( ( Min( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUC / DS ) ) - ( MUR * DS ) ) ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) )", "obj1": 0.38414634146341464, "obj2": 0.45548193763351125}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( DDR - RRS ) )", "choosing": "Min( ( ( MUM * Max( RRSe,MLU ) ) + ( RMSe + Max( RCSe,MUC ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( ( ( FirstVNF_CPU_Server + DDR ) * ( ( ARS - ( ARS - RRS ) ) * ( ACS * ( MDR / FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) + FirstVNF_RAM )", "choosing": "( Min( Min( DS ,( ( CS / MUC ) - ( MLU + Min( CS ,( ( RCSe - RMSe ) - ( RMSe - RCSe ) ) ) ) ) ) ,Max( Max( MUC,RRSe ),( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( RCSe / DS ) ) ) + MUR ) ) ) ) - ( ( MUR * DS ) * Max( DS,CS ) ) )", "obj1": 0.39634146341463417, "obj2": 0.45182032105905484}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( ( MRS / AMS ) ,Min( ACS ,( ARS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( DS * ( CS / MUM ) ) * Max( Max( Min( DS ,CS ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 0.4166666666666667, "obj2": 0.43774793180815885}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + FirstVNF_Mem )", "choosing": "( ( ( RMSe / Min( ( RMSe + MUR ) ,( CS / RRSe ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.4186991869918699, "obj2": 0.4374811854445273}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "( ( Const * Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU ) ) - ( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) + RRS ) - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Max( AMS,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( ( ( ( ( MUM + MUC ) - MUC ) - RCSe ) + RCSe ) ,( RMSe + ( Min( RRSe ,Min( RRSe ,( ( MUM / DS ) * DS ) ) ) / ( MLU / MUR ) ) ) ) ,( ( MUR * RMSe ) - Min( ( MUC * RCSe ) ,Max( RCSe,RMSe ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.006119823351656751}, {"determining": "( ( Max( ( DDR * RRS ),FirstVNF_RAM_Server ) - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( ACS ,FirstVNF_RAM ) - Min( ( Max( BR,( PN + PN ) ) - ( ACS - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( Max( MUR,MLU ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( ( ( CS + ( Min( ( CS * RCSe ) ,RMSe ) * RMSe ) ) - RMSe ) / ( RRSe / RMSe ) ) ) )", "obj1": 0.39227642276422764, "obj2": 0.45194566676318526}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - ACS ) ,( ACS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "( ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + Max( MRS,( ( ( CRS + Const ) + FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - ( RRSe + RMSe ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( Min( MUC ,RMSe ),RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / Min( ( MLU / ( ( Max( ( MUR - RCSe ),MUM ) + CS ) - ( MLU * CS ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.9878048780487805, "obj2": 0.005326105669089767}, {"determining": "( ( Min( Max( DDR,FirstVNF_RAM ) ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / Min( CS ,RMSe ) ) ) ,( ( RCSe * RMSe ) / Max( ( MUR * ( ( DS - Min( MLU ,RRSe ) ) * MUC ) ),RRSe ) ) ) )", "obj1": 0.9979674796747967, "obj2": 0.0007750556015560908}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "( ( ARS - ( DDR * FirstVNF_RAM_Server ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Min( ( CS / ( ( MUR * MLU ) * RMSe ) ) ,( ( RCSe - CS ) + MLU ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0035002450233018153}, {"determining": "( ( Min( ( Min( AMS ,Min( RRS ,Const ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( MUC ,( ( RMSe - MUM ) - ( ( MUC * ( CS + MUR ) ) + ( MUC / MLU ) ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.0023276466880874365}, {"determining": "Min( Max( AMS,( Min( CRS ,( Max( Min( FirstVNF_RAM_Server ,Max( BR,PN ) ),FirstVNF_Mem_Server ) + ( ARS - FirstVNF_Mem ) ) ) - ARS ) ) ,( AMS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / Min( ( MLU / ( RRSe * ( MUC - CS ) ) ) ,RMSe ) ) - RMSe )", "obj1": 0.9939024390243902, "obj2": 0.002078450932766717}, {"determining": "Min( Max( AMS,( BR - ARS ) ) ,( PN - DDR ) )", "choosing": "( ( MLU / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) )", "obj1": 0.9939024390243902, "obj2": 0.002078450932766717}, {"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( RRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( ( MUR - MUC ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( ( DS - ( RRSe + ( MUM / Min( MUM ,( CS / MUM ) ) ) ) ) + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * ( FirstVNF_CPU_Server * Min( BR ,Min( CRS ,MDR ) ) ) ) - ( Const - FirstVNF_RAM ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / ( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * Max( RCSe,MUM ) ) - ( RCSe * Max( MLU,Max( MUM,( MUM * ( RMSe * ( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( AMS ,( DDR / RRS ) ) ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * CRS ) ,AMS ) * PN ) - Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC / ( RMSe * ( ( MUM / MUM ) * MUM ) ) ) ,Min( RRSe ,( Max( RRSe,MUM ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) - RRS ),( FirstVNF_RAM_Server - CRS ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUM + ( MUC / ( ( MUM + Min( ( MUM * MUM ) ,CS ) ) - MUC ) ) ) * MUR ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,MDR ) / ( CRS / PN ) ) + ( ( Const * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,( CRS + ( FirstVNF_CPU + PN ) ) ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( Min( ( MUR + Min( RRSe ,( Min( MUC ,Max( CS,RMSe ) ) + Max( MUR,Max( CS,MUC ) ) ) ) ) ,Max( CS,RRSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( PN ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU * DDR ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( ( ( MUR * MUR ) + MUR ) / ( MUM + MUR ) ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( Min( PN ,Min( Max( RRS,MDR ) ,( RRS - ( ( DDR / ARS ) * Min( MRS ,DDR ) ) ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( Max( FirstVNF_Mem,( ARS + MRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe * ( RMSe * ( ( ( MUC - ( RRSe + ( MUC - MUR ) ) ) - RCSe ) * ( DS + RRSe ) ) ) ),( Max( MLU,RRSe ) + ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( MUR - Min( DS ,RMSe ) ) ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * ( ( ( MUR / RMSe ) - RRSe ) + Min( MUR ,MUM ) ) ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( DDR,FirstVNF_CPU_Server ),ARS ),BR ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( MUM + DS ) ) ),Min( CS ,Max( MUR,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( Min( FirstVNF_CPU_Server ,ACS ) ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( FirstVNF_CPU * DDR ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Min( ( MUM + DS ) ,MLU ) + Max( DS,MUR ) ) + Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( ARS + DDR ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - AMS ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( BR - AMS ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,( MUR + MUC ) ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( ( RCSe * ( RCSe * RRSe ) ) - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / ( FirstVNF_CPU - FirstVNF_CPU ) ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + Max( ( RCSe / ( CS * RCSe ) ),DS ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const + ( Const * CRS ) ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( ( ( Max( ( CS + MUM ),( MLU * DS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( MRS * AMS ) ) ,( FirstVNF_Mem - DDR ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * Max( ( CS - MUC ),( CS - ( ( Max( ( MUC + DS ),( RRSe / MUM ) ) * MUR ) - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) - Max( BR,ARS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( MUC,RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + Min( Max( ARS,MRS ) ,( MRS + RRS ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( DS ,Min( MLU ,MLU ) ) / ( CS - MUM ) ) + ( ( MLU - MUM ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Min( AMS ,CRS ) ) - FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( DDR * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( MLU / MUM ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,ARS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( Min( CS ,Max( ( CS + CS ),MLU ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( DS ,MLU ) ) ),( MLU + DS ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * ( ARS * ( AMS + ( CRS - ( Max( MRS,Min( FirstVNF_CPU ,DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MLU + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + ( ( Max( Const,DDR ) - FirstVNF_RAM_Server ) * MRS ) ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( ( Max( PN,PN ) / FirstVNF_RAM_Server ) * MDR ),( MDR + MDR ) ) ) )", "choosing": "Min( Max( MLU,RMSe ) ,Max( ( MUC + CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / MRS ) - MRS ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( RRSe * Min( RCSe ,( RMSe / MUC ) ) ) + ( Max( ( ( ( MUR - MLU ) - ( ( RMSe + RMSe ) + MUM ) ) - ( ( MUC / Max( CS,MLU ) ) + DS ) ),Min( MLU ,Min( DS ,MUM ) ) ) / Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( Max( ( BR + DDR ),Max( PN,( FirstVNF_CPU * Min( PN ,ARS ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( ( ( RRSe * Min( MLU ,( MUC / MUR ) ) ) / ( Min( ( MLU - MUC ) ,MLU ) / MUM ) ) + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( CRS / ACS ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( ( FirstVNF_RAM / CRS ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( Max( ( CS - MLU ),Min( RMSe ,RMSe ) ) - ( MUR / CS ) ) / ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MRS ,MDR ) * ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,Max( MLU,DS ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / AMS ) - Max( Max( FirstVNF_Mem,Max( Max( Const,FirstVNF_Mem ),ACS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( DS * ( DS + ( MUM + MUC ) ) ) + MUR ) * Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / BR ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / MUM ) + DS ) + ( ( MUC * MUC ) + Max( MUC,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + Max( RRS,( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,( DDR * FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( Max( RCSe,( ( MUC - ( MUC * RCSe ) ) - DS ) ),( ( RMSe * MUR ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * ( ( Max( DDR,FirstVNF_CPU ) / ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) - ( Min( MRS ,RRS ) * ( PN + ACS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,CS ) + Max( MUC,CS ) ) + MUM ) - ( CS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / ( Const * DDR ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) )", "choosing": "Min( ( ( RMSe / MUM ) * RRSe ) ,Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ) + ( ( MUM * MLU ) / ( MUR - Max( Min( ( MUR / MUC ) ,( CS - MUM ) ),Min( MLU ,( RMSe * MUC ) ) ) ) ) ) ,( Min( ( RCSe / Max( RMSe,( ( CS / RCSe ) + MLU ) ) ) ,( CS * MUM ) ) - ( Max( MUR,CS ) * Min( MUR ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR / ACS ) + ( FirstVNF_CPU_Server * AMS ) ) * ( Min( ( ( ( Max( FirstVNF_RAM_Server,Const ) + FirstVNF_CPU ) + FirstVNF_CPU ) * RRS ) ,( CRS + MRS ) ) - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS * MLU ) ,Max( MLU,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - PN ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( RMSe * ( ( ( ( ( CS - CS ) - MUR ) + ( CS / ( MUC / RRSe ) ) ) * RMSe ) - ( ( MLU / CS ) * RRSe ) ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + ( RCSe - MUC ) ) ,( Min( MLU ,RRSe ) - ( MUM - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( ( ( Const - ( Min( ( ( FirstVNF_RAM - FirstVNF_Mem ) / CRS ) ,FirstVNF_RAM_Server ) - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) / Min( DDR ,RRS ) ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( ( RMSe * ( ( MUR + RCSe ) - RCSe ) ) + MUR ) ,( CS / Max( ( Max( MUM,RRSe ) * RRSe ),RCSe ) ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( Min( DDR ,ACS ),Min( MDR ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) ) - ( ( FirstVNF_Mem * MDR ) / Max( FirstVNF_RAM,BR ) ) ) - Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) )", "choosing": "Max( Max( ( Max( ( RMSe + RRSe ),( MLU - RMSe ) ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) ),Min( ( ( MUM + CS ) + ( RRSe / MUM ) ) ,( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( Min( Min( ( DDR * Const ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - ( DDR / MRS ) ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( BR * ACS ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,RMSe ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + Min( ( DS / CS ) ,( MUR - Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Max( ( PN * ACS ),Min( FirstVNF_RAM ,ACS ) ) ,MRS ) + BR ) ,( ( ( Min( ( FirstVNF_RAM_Server / MRS ) ,FirstVNF_RAM ) + Max( CRS,( Const - AMS ) ) ) + FirstVNF_RAM ) - AMS ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ),Max( ( CS / ( MUC * RCSe ) ),( ( ( RMSe + ( ( RMSe - ( DS + RMSe ) ) * RMSe ) ) + ( MUM + ( RMSe * DS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),Const ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) / DS ) + ( ( Min( MUR ,RCSe ) - MUM ) * Max( MUM,MUM ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7372254339418387}, {"determining": "Min( ( MRS / Const ) ,( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - ( Const - ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS / CS ) ,( MUM / Min( Max( Max( MUM,MUR ),Max( MLU,CS ) ) ,CS ) ) ) / ( ( ( Max( Max( ( MUR / ( RCSe - RRSe ) ),CS ),( ( MUC - Min( CS ,CS ) ) / CS ) ) * ( MUC + MLU ) ) / ( ( MUC + MUC ) + ( MUM - DS ) ) ) / DS ) )", "obj1": 0.6056910569105691, "obj2": 0.21314489411551926}, {"determining": "( ( Min( RRS ,( Const * ( ( MDR + Max( FirstVNF_RAM,AMS ) ) - ( Min( MRS ,RRS ) * ( PN + ACS ) ) ) ) ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) + ( Min( Max( BR,ARS ) ,AMS ) - AMS ) )", "choosing": "( Min( RMSe ,( Min( ( MUC + ( MUM / MUM ) ) ,MUM ) + ( DS / ( Max( Max( MUM,( RMSe + RCSe ) ),( Max( MUR,MUR ) - RRSe ) ) + ( ( RRSe + MUM ) / Min( RMSe ,CS ) ) ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( MUC,RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( CS / ( MUC + DS ) ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.7723577235772358, "obj2": 0.18015430779061925}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( ( MRS - ( CRS * ( Max( ( Min( MRS ,Max( PN,FirstVNF_Mem ) ) * ( AMS * Max( AMS,FirstVNF_RAM_Server ) ) ),DDR ) * ( FirstVNF_CPU_Server + CRS ) ) ) ) - ( MRS * DDR ) )", "choosing": "( ( Max( MUC,( RMSe * Max( ( RRSe - Min( ( CS / RCSe ) ,RRSe ) ),( ( RRSe - ( RCSe + DS ) ) - MUM ) ) ) ) / ( RRSe - DS ) ) * ( Max( ( DS - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.8191056910569106, "obj2": 0.09970489273292009}, {"determining": "( Min( Min( MRS ,MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( RRS + AMS ) * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * ( MLU + RMSe ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 0.7967479674796748, "obj2": 0.1520497659022055}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * ( FirstVNF_Mem_Server - Min( AMS ,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( ( ( RRSe * Min( MLU ,( MUC / CS ) ) ) / ( Min( ( MLU - MUC ) ,( RRSe - CS ) ) / MUM ) ) + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + MLU )", "obj1": 0.5020325203252033, "obj2": 0.30014693880933485}, {"determining": "( ( ( CRS + MDR ) + ACS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) - MUM ) ) + ( ( MLU - MUM ) * Max( MUM,MUM ) ) )", "obj1": 0.18902439024390244, "obj2": 0.672060278283267}, {"determining": "( ( Min( FirstVNF_Mem ,( ( FirstVNF_RAM / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) * ACS ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( ( MUC - MUM ) - ( DS * ( ( CS + ( RCSe + ( ( RCSe / MUM ) * CS ) ) ) / Max( MLU,RCSe ) ) ) ) * Max( ( MUM + ( MUR * MUM ) ),( ( RMSe * MLU ) - ( CS * CS ) ) ) )", "obj1": 0.23170731707317074, "obj2": 0.6052303091200669}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * MUC ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.14227642276422764, "obj2": 0.6979111103532208}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 0.8780487804878049, "obj2": 0.08178419211759885}, {"determining": "Min( MRS ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.24796747967479674, "obj2": 0.5696451683508261}, {"determining": "( ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) * ACS ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( ( MUC - MUM ) - ( DS * ( ( CS + ( RCSe + ( MUR * CS ) ) ) / Max( MLU,RCSe ) ) ) ) * Max( ( MUM + ( MUR * MUM ) ),( ( RMSe * MLU ) - ( CS * CS ) ) ) )", "obj1": 0.21951219512195122, "obj2": 0.6296417955890082}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( ( ( BR + ( FirstVNF_CPU_Server - CRS ) ) * ARS ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( CS / ( ( MUC - MUM ) + ( CS * RMSe ) ) ) - DS ) )", "obj1": 0.4349593495934959, "obj2": 0.38700590309922395}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( PN,DDR ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( Min( RCSe ,DS ) ,( RRSe - MUR ) ) / ( ( RRSe / ( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) / Max( RMSe,MUR ) ) ) ,( MLU - MUM ) )", "obj1": 0.4247967479674797, "obj2": 0.4271906890516183}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Min( ( ( ARS - Const ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) )", "choosing": "Min( ( ( RMSe / MUM ) * RRSe ) ,( Min( ( DS / CS ) ,( RRSe - MUR ) ) / Max( MUC,( RMSe + DS ) ) ) )", "obj1": 0.46747967479674796, "obj2": 0.3674142375809188}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( ( Min( Min( FirstVNF_CPU_Server ,DDR ) ,MRS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * Max( CS,Min( DS ,MUR ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "Min( ( DDR * Const ) ,( Max( MDR,FirstVNF_RAM ) - ( ( ( Min( MDR ,Const ) / ( MRS + ( BR * PN ) ) ) + RRS ) + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( MUC + ( Min( Max( MUM,Max( RMSe,DS ) ) ,MUM ) / MLU ) ) )", "obj1": 0.9288617886178862, "obj2": 0.0299472464356333}, {"determining": "( ( PN / PN ) - Min( ( Max( Max( DDR,FirstVNF_RAM ),( ( AMS * MRS ) / Max( RRS,RRS ) ) ) + MDR ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( ( Min( ( CS * RRSe ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * ( Min( DS ,Min( CS ,MUR ) ) / ( ( MLU - DS ) * DS ) ) ) ) ) * MUR ) )", "obj1": 0.3150406504065041, "obj2": 0.5235470146225624}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * PN ) / ( MRS + FirstVNF_RAM ) ) - Min( Const ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( ( MLU / ( MLU + ( DS - MLU ) ) ),MUR ) - RCSe ) )", "obj1": 0.9247967479674797, "obj2": 0.05280388869877578}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) )", "choosing": "Min( ( ( CS + ( DS + RMSe ) ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.46960296009518787}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "Max( Max( FirstVNF_RAM_Server,( FirstVNF_RAM + ( AMS - ( MRS * DDR ) ) ) ),( BR + ( Const / AMS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - MLU ) ) / ( ( CS - ( ( ( MUC - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) / ( RCSe + Max( MLU,RCSe ) ) ) ) / ( RRSe - DS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6577400440741202}, {"determining": "Min( Max( FirstVNF_CPU_Server,Max( FirstVNF_RAM_Server,Min( ( ( Const / AMS ) - ( Min( MRS ,( FirstVNF_Mem / FirstVNF_Mem ) ) * DDR ) ) ,Max( DDR,MRS ) ) ) ) ,Min( FirstVNF_RAM_Server ,CRS ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * Max( RMSe,MUC ) ) - ( MLU + ( ( MUM + MUR ) * ( CS / MUR ) ) ) )", "obj1": 0.3252032520325203, "obj2": 0.4966786044428145}, {"determining": "Min( ( FirstVNF_CPU / Min( PN ,AMS ) ) ,( ACS + Min( FirstVNF_CPU_Server ,( RRS * ARS ) ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( Max( MUC,DS ) + ( MUM / ( Max( RCSe,MUR ) - RCSe ) ) ) )", "obj1": 0.9552845528455285, "obj2": 0.02282602914283523}, {"determining": "( ( Max( ( FirstVNF_Mem - ( Const - BR ) ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( ( MLU + ( RMSe / ( RRSe - ( CS - DS ) ) ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.13414634146341464, "obj2": 0.720736306677644}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5301330586889882}, {"determining": "Min( Max( AMS,( BR - ARS ) ) ,Min( MRS ,( DDR * ACS ) ) )", "choosing": "( ( MLU / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + ( RCSe + ( MUR * CS ) ) ) / Max( MUM,MUR ) ) )", "obj1": 0.26422764227642276, "obj2": 0.558777513217245}, {"determining": "Max( Max( ( FirstVNF_Mem / MDR ),( FirstVNF_RAM + MRS ) ),Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - ( ( MUM - MUR ) * ( MLU / DS ) ) ) ) / ( Max( MUC,MUC ) / Max( ( ( ( MUR * MLU ) - Min( CS ,CS ) ) + MLU ),( RCSe + MLU ) ) ) )", "obj1": 0.20528455284552846, "obj2": 0.6618362486102837}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUR ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.4604052367825234}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 0.9126016260162602, "obj2": 0.06141427102291515}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),AMS ) / FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - Min( Min( CRS ,Min( ACS ,( ARS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( DS ,MLU ) ) ),CS ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.1402439024390244, "obj2": 0.7150101940306676}, {"determining": "( Min( ( PN - ( Const / ( ACS * ( PN * ( ( RRS * Const ) + ( BR / FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * ( MUC / MUC ) ) + ( ( ( CS / ( ( MUR / RRSe ) + CS ) ) - ( CS - CS ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9654471544715447, "obj2": 0.01774557021708144}, {"determining": "Min( ( ( Min( MDR ,MRS ) / ( MRS + FirstVNF_RAM ) ) - Min( Const ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( ( MLU / ( MLU * ( Min( DS ,CS ) * ( MUR * CS ) ) ) ),MUR ) - RCSe ) )", "obj1": 0.8963414634146342, "obj2": 0.06313269045339738}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( Max( FirstVNF_CPU_Server,MRS ) ,MRS ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - ( RCSe * MUM ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2784552845528455, "obj2": 0.5518543607193759}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2804878048780488, "obj2": 0.5335672985611909}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( DDR - RRS ) )", "choosing": "Min( ( ( MUM * Max( RRSe,MLU ) ) + ( RMSe + Max( RCSe,MUC ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "Min( Max( FirstVNF_CPU_Server,ACS ) ,( MDR * Min( Min( FirstVNF_RAM ,Const ) ,( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * MRS ) ) ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * MLU ) - ( MLU + ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ) ) )", "obj1": 0.31910569105691056, "obj2": 0.5112168711682711}, {"determining": "( ( PN / ( RRS + Const ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUR,RCSe ) / Max( CS,( ( CS / MLU ) * Min( MUM ,MUM ) ) ) ) / MUC ) - ( ( Min( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUC / DS ) ) - ( MUR * DS ) ) ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) )", "obj1": 0.38414634146341464, "obj2": 0.45548193763351125}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 0.8922764227642277, "obj2": 0.07249864871517869}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ACS )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUM ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.8902439024390244, "obj2": 0.08102959479599285}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - ( ( CS + MUR ) * RCSe ) ) ,Min( MUC ,CS ) ) ) - ( Min( MUR ,Max( Max( Max( MLU,RCSe ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5525444823907202}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( ACS ,FirstVNF_RAM ) - Min( ( Max( BR,( PN + FirstVNF_CPU_Server ) ) - ( ACS - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( MLU - DS ) / ( DS / RMSe ) ) ,DS ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( ( ( CS + ( Min( ( CS * RCSe ) ,RMSe ) * RMSe ) ) - RMSe ) / ( RRSe / RMSe ) ) ) )", "obj1": 0.39634146341463417, "obj2": 0.4481892765695431}, {"determining": "( ( Max( ( DDR * RRS ),FirstVNF_RAM_Server ) - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( ACS ,FirstVNF_RAM ) - Min( ( Max( BR,( PN + PN ) ) - ( ACS - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( Max( MUR,MLU ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( ( ( CS + ( Min( ( CS * RCSe ) ,RMSe ) * RMSe ) ) - RMSe ) / ( RRSe / RMSe ) ) ) )", "obj1": 0.39227642276422764, "obj2": 0.45194566676318526}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + FirstVNF_Mem )", "choosing": "( ( ( RMSe / Min( ( RMSe + MUR ) ,( CS / RRSe ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.4186991869918699, "obj2": 0.4374811854445273}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( ( MRS / AMS ) ,Min( ACS ,( ARS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( DS * ( CS / MUM ) ) * Max( Max( Min( DS ,CS ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 0.4166666666666667, "obj2": 0.43774793180815885}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( CRS ,Min( ACS ,( ARS - ( FirstVNF_RAM_Server - Min( BR ,BR ) ) ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( Min( DS ,CS ),Max( ( Max( MUC,MUM ) * MUM ),Min( MUR ,MLU ) ) ),MUC ) ) ,( DS / Max( RRSe,MUM ) ) )", "obj1": 0.4024390243902439, "obj2": 0.4401721384344387}, {"determining": "( ( Const * Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU ) ) - ( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) + RRS ) - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Max( AMS,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( ( ( ( ( MUM + MUC ) - MUC ) - RCSe ) + RCSe ) ,( RMSe + ( Min( RRSe ,Min( RRSe ,( ( MUM / DS ) * DS ) ) ) / ( MLU / MUR ) ) ) ) ,( ( MUR * RMSe ) - Min( ( MUC * RCSe ) ,Max( RCSe,RMSe ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.006119823351656751}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( ( CRS * RRS ) * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,MUC ) ) * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - DS ) )", "obj1": 0.40040650406504064, "obj2": 0.44034109952527434}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - ACS ) ,( ACS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( MDR * MDR ) )", "choosing": "( ( Min( ( ( RMSe * ( ( ( MUR * RRSe ) - ( MUM * MUM ) ) / ( RMSe - ( CS - DS ) ) ) ) + MUR ) ,( CS / CS ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / Min( ( MLU / ( ( Max( ( MUR - RCSe ),MUM ) + CS ) - ( MLU * CS ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.9878048780487805, "obj2": 0.005326105669089767}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.0005721666807895921}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "( ( ARS - ( DDR * FirstVNF_RAM_Server ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Min( ( CS / ( ( MUR * MLU ) * RMSe ) ) ,( ( RCSe - CS ) + MLU ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0035002450233018153}, {"determining": "( ( Min( ( Min( AMS ,Min( RRS ,Const ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( MUC ,( ( RMSe - MUM ) - ( ( MUC * ( CS + MUR ) ) + ( MUC / MLU ) ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.0023276466880874365}, {"determining": "Min( Max( AMS,( BR - ARS ) ) ,( PN - DDR ) )", "choosing": "( ( MLU / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) )", "obj1": 0.9939024390243902, "obj2": 0.002078450932766717}, {"determining": "Min( Max( AMS,( Min( CRS ,( Max( Min( FirstVNF_RAM_Server ,Max( BR,PN ) ),FirstVNF_Mem_Server ) + ( ARS - FirstVNF_Mem ) ) ) - ARS ) ) ,( AMS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / Min( ( MLU / ( RRSe * ( MUC - CS ) ) ) ,RMSe ) ) - RMSe )", "obj1": 0.9939024390243902, "obj2": 0.002078450932766717}, {"determining": "( ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + Max( MRS,( ( ( CRS + Const ) + FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - ( RRSe + RMSe ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( Min( MUC ,RMSe ),RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / Min( MRS ,( DDR * ACS ) ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * MLU ) - ( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( RCSe + ( MUR * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( RRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( ( MUR - MUC ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( ( DS - ( RRSe + ( MUM / Min( MUM ,( CS / MUM ) ) ) ) ) + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * ( FirstVNF_CPU_Server * Min( BR ,Min( CRS ,MDR ) ) ) ) - ( Const - FirstVNF_RAM ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / ( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * Max( RCSe,MUM ) ) - ( RCSe * Max( MLU,Max( MUM,( MUM * ( RMSe * ( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( AMS ,( DDR / RRS ) ) ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * CRS ) ,AMS ) * PN ) - Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC / ( RMSe * ( ( MUM / MUM ) * MUM ) ) ) ,Min( RRSe ,( Max( RRSe,MUM ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) - RRS ),( FirstVNF_RAM_Server - CRS ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUM + ( MUC / ( ( MUM + Min( ( MUM * MUM ) ,CS ) ) - MUC ) ) ) * MUR ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,MDR ) / ( CRS / PN ) ) + ( ( Const * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,( CRS + ( FirstVNF_CPU + PN ) ) ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( Min( ( MUR + Min( RRSe ,( Min( MUC ,Max( CS,RMSe ) ) + Max( MUR,Max( CS,MUC ) ) ) ) ) ,Max( CS,RRSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( PN ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU * DDR ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( ( ( MUR * MUR ) + MUR ) / ( MUM + MUR ) ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( Min( PN ,Min( Max( RRS,MDR ) ,( RRS - ( ( DDR / ARS ) * Min( MRS ,DDR ) ) ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( Max( FirstVNF_Mem,( ARS + MRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe * ( RMSe * ( ( ( MUC - ( RRSe + ( MUC - MUR ) ) ) - RCSe ) * ( DS + RRSe ) ) ) ),( Max( MLU,RRSe ) + ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( MUR - Min( DS ,RMSe ) ) ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * ( ( ( MUR / RMSe ) - RRSe ) + Min( MUR ,MUM ) ) ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( DDR,FirstVNF_CPU_Server ),ARS ),BR ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( MUM + DS ) ) ),Min( CS ,Max( MUR,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( Min( FirstVNF_CPU_Server ,ACS ) ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( FirstVNF_CPU * DDR ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Min( ( MUM + DS ) ,MLU ) + Max( DS,MUR ) ) + Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( ARS + DDR ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - AMS ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( BR - AMS ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,( MUR + MUC ) ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( ( RCSe * ( RCSe * RRSe ) ) - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / ( FirstVNF_CPU - FirstVNF_CPU ) ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + Max( ( RCSe / ( CS * RCSe ) ),DS ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const + ( Const * CRS ) ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( ( ( Max( ( CS + MUM ),( MLU * DS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( MRS * AMS ) ) ,( FirstVNF_Mem - DDR ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * Max( ( CS - MUC ),( CS - ( ( Max( ( MUC + DS ),( RRSe / MUM ) ) * MUR ) - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) - Max( BR,ARS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( MUC,RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + Min( Max( ARS,MRS ) ,( MRS + RRS ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( DS ,Min( MLU ,MLU ) ) / ( CS - MUM ) ) + ( ( MLU - MUM ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Min( AMS ,CRS ) ) - FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( DDR * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( MLU / MUM ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,ARS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( Min( CS ,Max( ( CS + CS ),MLU ) ) * ( MLU / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( DS ,MLU ) ) ),( MLU + DS ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( Const * ( ARS * ( AMS + ( CRS - ( Max( MRS,Min( FirstVNF_CPU ,DDR ) ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MLU + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + ( ( Max( Const,DDR ) - FirstVNF_RAM_Server ) * MRS ) ) * ( Min( ( PN * RRS ) ,( CRS + MRS ) ) - Max( ( ( Max( PN,PN ) / FirstVNF_RAM_Server ) * MDR ),( MDR + MDR ) ) ) )", "choosing": "Min( Max( MLU,RMSe ) ,Max( ( MUC + CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / MRS ) - MRS ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( RRSe * Min( RCSe ,( RMSe / MUC ) ) ) + ( Max( ( ( ( MUR - MLU ) - ( ( RMSe + RMSe ) + MUM ) ) - ( ( MUC / Max( CS,MLU ) ) + DS ) ),Min( MLU ,Min( DS ,MUM ) ) ) / Max( MLU,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( Max( ( BR + DDR ),Max( PN,( FirstVNF_CPU * Min( PN ,ARS ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( ( ( RRSe * Min( MLU ,( MUC / MUR ) ) ) / ( Min( ( MLU - MUC ) ,MLU ) / MUM ) ) + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ),( ( CRS / ACS ) / ( FirstVNF_CPU_Server - MRS ) ) ) - ( Min( ( FirstVNF_RAM / CRS ) ,Min( ARS ,FirstVNF_Mem ) ) + ( Min( FirstVNF_Mem ,Const ) * Max( ARS,ACS ) ) ) )", "choosing": "( ( Max( ( CS - MLU ),Min( RMSe ,RMSe ) ) - ( MUR / CS ) ) / ( MLU / MUR ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MUC,MUM ) * MUM ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR * Const ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - ( DDR / MRS ) ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( BR * ACS ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,RMSe ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + Min( ( DS / CS ) ,( MUR - Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.0975609756097561, "obj2": 0.7428417404604929}, {"determining": "Min( ( MRS / Const ) ,( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - ( Const - ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS / CS ) ,( MUM / Min( Max( Max( MUM,MUR ),Max( MLU,CS ) ) ,CS ) ) ) / ( ( ( Max( Max( ( MUR / ( RCSe - RRSe ) ),CS ),( ( MUC - Min( CS ,CS ) ) / CS ) ) * ( MUC + MLU ) ) / ( ( MUC + MUC ) + ( MUM - DS ) ) ) / DS ) )", "obj1": 0.6056910569105691, "obj2": 0.21314489411551926}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( ( ( MDR + Max( ( DDR / AMS ),AMS ) ) - ( Min( MRS ,RRS ) * ( PN + ACS ) ) ) * MDR ) ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Max( ( DS * Min( Min( DS ,MUR ) ,( RRSe - Min( RRSe ,( DS * CS ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.7601626016260162, "obj2": 0.19518261816496968}, {"determining": "( ( MRS - ( CRS * ( Max( ( Min( MRS ,Max( PN,FirstVNF_Mem ) ) * ( AMS * Max( AMS,FirstVNF_RAM_Server ) ) ),DDR ) * ( FirstVNF_CPU_Server + CRS ) ) ) ) - ( MRS * DDR ) )", "choosing": "( ( Max( MUC,( RMSe * Max( ( RRSe - Min( ( CS / RCSe ) ,RRSe ) ),( ( RRSe - ( RCSe + DS ) ) - MUM ) ) ) ) / ( RRSe - DS ) ) * ( Max( ( DS - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.8191056910569106, "obj2": 0.09970489273292009}, {"determining": "( Min( Min( MRS ,MDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) - ( ( RRS + AMS ) * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * ( MLU + RMSe ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 0.7967479674796748, "obj2": 0.1520497659022055}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * ( FirstVNF_Mem_Server - Min( AMS ,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) ) * ( ( ( MDR / AMS ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( ( ( RRSe * Min( MLU ,( MUC / CS ) ) ) / ( Min( ( MLU - MUC ) ,( RRSe - CS ) ) / MUM ) ) + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + MLU )", "obj1": 0.5020325203252033, "obj2": 0.30014693880933485}, {"determining": "( ( Min( FirstVNF_Mem ,( ( FirstVNF_RAM / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) * ACS ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( ( MUC - MUM ) - ( DS * ( ( CS + ( RCSe + ( ( RCSe / MUM ) * CS ) ) ) / Max( MLU,RCSe ) ) ) ) * Max( ( MUM + ( MUR * MUM ) ),( ( RMSe * MLU ) - ( CS * CS ) ) ) )", "obj1": 0.23170731707317074, "obj2": 0.6052303091200669}, {"determining": "Min( MRS ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.24796747967479674, "obj2": 0.5696451683508261}, {"determining": "( ( Min( RRS ,( Const * ( ( MDR + Max( FirstVNF_RAM,AMS ) ) - ( Min( MRS ,RRS ) * ( PN + ACS ) ) ) ) ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) + ( Min( Max( BR,ARS ) ,AMS ) - AMS ) )", "choosing": "( Min( RMSe ,( Min( ( MUC + ( MUM / MUM ) ) ,MUM ) + ( DS / ( Max( Max( MUM,( RMSe + RCSe ) ),( Max( MUR,MUR ) - RRSe ) ) + ( ( RRSe + MUM ) / Min( RMSe ,CS ) ) ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( MUC,RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( CS / ( MUC + DS ) ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.7723577235772358, "obj2": 0.18015430779061925}, {"determining": "( ( Min( FirstVNF_Mem ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * FirstVNF_Mem_Server ) ) * ACS ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( ( MUC - MUM ) - ( DS * ( ( CS + ( RCSe + ( MUR * CS ) ) ) / Max( MLU,RCSe ) ) ) ) * Max( ( MUM + ( MUR * MUM ) ),( ( RMSe * MLU ) - ( CS * CS ) ) ) )", "obj1": 0.21951219512195122, "obj2": 0.6296417955890082}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * PN ) / ( MRS + FirstVNF_RAM ) ) - Min( Const ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( ( MLU / ( MLU + ( DS - MLU ) ) ),MUR ) - RCSe ) )", "obj1": 0.8760162601626016, "obj2": 0.08710105634988445}, {"determining": "( ( ( BR + ( FirstVNF_CPU_Server - CRS ) ) * ARS ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( CS / ( ( MUC - MUM ) + ( CS * RMSe ) ) ) - DS ) )", "obj1": 0.4349593495934959, "obj2": 0.38700590309922395}, {"determining": "Min( FirstVNF_RAM_Server ,( Max( PN,DDR ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( Min( RCSe ,DS ) ,( RRSe - MUR ) ) / ( ( RRSe / ( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) / Max( RMSe,MUR ) ) ) ,( MLU - MUM ) )", "obj1": 0.4247967479674797, "obj2": 0.4271906890516183}, {"determining": "Min( Max( RRS,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Min( Min( ( RRS * FirstVNF_Mem ) ,FirstVNF_RAM ) ,MDR ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( ( RCSe * RRSe ) * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.16260162601626016, "obj2": 0.6693672618102888}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Min( ( ( ARS - Const ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) )", "choosing": "Min( ( ( RMSe / MUM ) * RRSe ) ,( Min( ( DS / CS ) ,( RRSe - MUR ) ) / Max( MUC,( RMSe + DS ) ) ) )", "obj1": 0.46747967479674796, "obj2": 0.3674142375809188}, {"determining": "Min( ( DDR * Const ) ,( Max( MDR,FirstVNF_RAM ) - ( ( ( Min( MDR ,Const ) / ( MRS + ( BR * PN ) ) ) + RRS ) + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( MUC + ( Min( Max( MUM,Max( RMSe,DS ) ) ,MUM ) / MLU ) ) )", "obj1": 0.9288617886178862, "obj2": 0.0299472464356333}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( ( Min( Min( FirstVNF_CPU_Server ,DDR ) ,MRS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * Max( CS,Min( DS ,MUR ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( PN / PN ) - Min( ( Max( Max( DDR,FirstVNF_RAM ),( ( AMS * MRS ) / Max( RRS,RRS ) ) ) + MDR ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( ( Min( ( CS * RRSe ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * ( Min( DS ,Min( CS ,MUR ) ) / ( ( MLU - DS ) * DS ) ) ) ) ) * MUR ) )", "obj1": 0.3150406504065041, "obj2": 0.5235470146225624}, {"determining": "( ( Max( ( FirstVNF_Mem - ( Min( ( ( CRS + MDR ) + ACS ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( Max( MUC,MUM ) * MUM ) ),( CS + DS ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.16056910569105692, "obj2": 0.6964241821974224}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * PN ) / ( MRS + FirstVNF_RAM ) ) - Min( Const ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( ( MLU / ( MLU + ( DS - MLU ) ) ),MUR ) - RCSe ) )", "obj1": 0.9247967479674797, "obj2": 0.05280388869877578}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) )", "choosing": "Min( ( ( CS + ( DS + RMSe ) ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.46960296009518787}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "Max( Max( FirstVNF_RAM_Server,( FirstVNF_RAM + ( AMS - ( MRS * DDR ) ) ) ),( BR + ( Const / AMS ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - MLU ) ) / ( ( CS - ( ( ( MUC - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) / ( RCSe + Max( MLU,RCSe ) ) ) ) / ( RRSe - DS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6577400440741202}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),( ( CRS - AMS ) - ( BR * ( Min( DDR ,FirstVNF_Mem ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - ( MUC + DS ) ) ) + Max( ( RMSe * Min( RMSe ,( RCSe / DS ) ) ),CS ) ) )", "obj1": 0.3252032520325203, "obj2": 0.49490312642804346}, {"determining": "( ( Max( ( FirstVNF_Mem - ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ( ACS / DDR ) ) ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( DS ,MLU ) ) ),( CS + Min( MUM ,CS ) ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.1951219512195122, "obj2": 0.6626155943068461}, {"determining": "Min( ( FirstVNF_CPU / Min( PN ,AMS ) ) ,( ACS + Min( FirstVNF_CPU_Server ,( RRS * ARS ) ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( Max( MUC,DS ) + ( MUM / ( Max( RCSe,MUR ) - RCSe ) ) ) )", "obj1": 0.9552845528455285, "obj2": 0.02282602914283523}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5301330586889882}, {"determining": "Min( MRS ,Max( ( FirstVNF_Mem + BR ),( BR * ( Min( Min( ( DDR - CRS ) ,( MRS - ( DDR - FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( ( MUC - ( ( CS / MUC ) / MUC ) ) - MUC ) ,Min( ( ( Max( ( RCSe + MUM ),( MLU - CS ) ) + RCSe ) - RRSe ) ,MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.554973485905694}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * MUC ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.14227642276422764, "obj2": 0.6979111103532208}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUR ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.4604052367825234}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 0.9126016260162602, "obj2": 0.06141427102291515}, {"determining": "( Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),Const ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) / DS ) + ( ( Min( MUR ,RCSe ) - MUM ) * Max( MUM,MUM ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7372254339418387}, {"determining": "( ( Max( ( FirstVNF_Mem - ( Const - BR ) ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( ( MLU + ( RMSe / ( RRSe - ( CS - DS ) ) ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.13414634146341464, "obj2": 0.720736306677644}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),AMS ) / FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server - Min( Min( CRS ,Min( ACS ,( ARS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( DS ,MLU ) ) ),CS ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.1402439024390244, "obj2": 0.7150101940306676}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),( BR * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) * ( MLU / DS ) )", "obj1": 0.12195121951219512, "obj2": 0.7302510965476139}, {"determining": "( Min( ( PN - ( Const / ( ACS * ( PN * ( ( RRS * Const ) + ( BR / FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * ( MUC / MUC ) ) + ( ( ( CS / ( ( MUR / RRSe ) + CS ) ) - ( CS - CS ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9654471544715447, "obj2": 0.01774557021708144}, {"determining": "Min( ( ( Min( MDR ,MRS ) / ( MRS + FirstVNF_RAM ) ) - Min( Const ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( ( MLU / ( MLU * ( Min( DS ,CS ) * ( MUR * CS ) ) ) ),MUR ) - RCSe ) )", "obj1": 0.8963414634146342, "obj2": 0.06313269045339738}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( Max( FirstVNF_CPU_Server,MRS ) ,MRS ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - ( RCSe * MUM ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2784552845528455, "obj2": 0.5518543607193759}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2804878048780488, "obj2": 0.5335672985611909}, {"determining": "( ( Max( ( DDR * RRS ),FirstVNF_RAM_Server ) - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( ACS ,FirstVNF_RAM ) - Min( ( Max( BR,( PN + PN ) ) - ( ACS - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( Max( MUR,MLU ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( ( ( CS + ( Min( ( CS * RCSe ) ,RMSe ) * RMSe ) ) - RMSe ) / ( RRSe / RMSe ) ) ) )", "obj1": 0.39227642276422764, "obj2": 0.45194566676318526}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "Min( Max( FirstVNF_CPU_Server,ACS ) ,( MDR * Min( Min( FirstVNF_RAM ,Const ) ,( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * MRS ) ) ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * MLU ) - ( MLU + ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ) ) )", "obj1": 0.31910569105691056, "obj2": 0.5112168711682711}, {"determining": "( ( PN / ( RRS + Const ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUR,RCSe ) / Max( CS,( ( CS / MLU ) * Min( MUM ,MUM ) ) ) ) / MUC ) - ( ( Min( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUC / DS ) ) - ( MUR * DS ) ) ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) )", "obj1": 0.38414634146341464, "obj2": 0.45548193763351125}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 0.8922764227642277, "obj2": 0.07249864871517869}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( DDR - RRS ) )", "choosing": "Min( ( ( MUM * Max( RRSe,MLU ) ) + ( RMSe + Max( RCSe,MUC ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ACS )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUM ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.8902439024390244, "obj2": 0.08102959479599285}, {"determining": "Max( Max( ( FirstVNF_Mem / MDR ),( FirstVNF_RAM + MRS ) ),Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC + RMSe ) * ( MUC - ( ( MUM - MUR ) * ( MLU / DS ) ) ) ) / ( Max( MUC,MUC ) / Max( ( ( ( MUR * MLU ) - Min( CS ,CS ) ) + MLU ),( RCSe + MLU ) ) ) )", "obj1": 0.20528455284552846, "obj2": 0.6618362486102837}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),RMSe ),MUC ) ) ,( ( RRSe * RRSe ) * ( DS + RRSe ) ) )", "obj1": 0.39634146341463417, "obj2": 0.44065568931128046}, {"determining": "Min( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) - Min( ( AMS + FirstVNF_Mem_Server ) ,BR ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( RRSe / Max( RRSe,RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,MUR ) - RCSe ) )", "obj1": 0.8780487804878049, "obj2": 0.08178419211759885}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + FirstVNF_Mem )", "choosing": "( ( ( RMSe / Min( ( RMSe + MUR ) ,( CS / RRSe ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.4186991869918699, "obj2": 0.4374811854445273}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - ( ( CS + MUR ) * RCSe ) ) ,Min( MUC ,CS ) ) ) - ( Min( MUR ,Max( Max( Max( MLU,RCSe ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5525444823907202}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - ACS ) ,( ACS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - MRS ) * ( ( PN / PN ) - Min( ( Max( Max( ( MDR - FirstVNF_RAM_Server ),( CRS * FirstVNF_Mem ) ),( ( AMS * MRS ) / Max( RRS,RRS ) ) ) + MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM - CS ) / Max( MLU,DS ) ) + Min( ( ( DS / MUC ) - ( ( Min( ( CS * RRSe ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * MUR ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 0.41260162601626016, "obj2": 0.438714653642483}, {"determining": "( ( Const * Max( ( FirstVNF_CPU_Server / ACS ),FirstVNF_CPU ) ) - ( ( ( Min( MDR ,Const ) / ( MRS + FirstVNF_RAM ) ) + RRS ) - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Max( AMS,( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( Min( ( ( ( ( MUM + MUC ) - MUC ) - RCSe ) + RCSe ) ,( RMSe + ( Min( RRSe ,Min( RRSe ,( ( MUM / DS ) * DS ) ) ) / ( MLU / MUR ) ) ) ) ,( ( MUR * RMSe ) - Min( ( MUC * RCSe ) ,Max( RCSe,RMSe ) ) ) )", "obj1": 0.983739837398374, "obj2": 0.006119823351656751}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( CRS ,Min( ACS ,( ARS - ( FirstVNF_RAM_Server - Min( BR ,BR ) ) ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( Min( DS ,CS ),Max( ( Max( MUC,MUM ) * MUM ),Min( MUR ,MLU ) ) ),MUC ) ) ,( DS / Max( RRSe,MUM ) ) )", "obj1": 0.4024390243902439, "obj2": 0.4401721384344387}, {"determining": "( ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + Max( MRS,( ( ( CRS + Const ) + FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - ( RRSe + RMSe ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( Min( MUC ,RMSe ),RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / Min( ( MLU / ( ( Max( ( MUR - RCSe ),MUM ) + CS ) - ( MLU * CS ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.9878048780487805, "obj2": 0.005326105669089767}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( RCSe / RMSe ) / DS ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( ( MRS / AMS ) ,Min( ACS ,( ARS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( DS * ( CS / MUM ) ) * Max( Max( Min( DS ,CS ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 0.4166666666666667, "obj2": 0.43774793180815885}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( ( CRS * RRS ) * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,MUC ) ) * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - DS ) )", "obj1": 0.40040650406504064, "obj2": 0.44034109952527434}, {"determining": "( ( Min( ( Min( AMS ,Min( RRS ,Const ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( MUC ,( ( RMSe - MUM ) - ( ( MUC * ( CS + MUR ) ) + ( MUC / MLU ) ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.0023276466880874365}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.0005721666807895921}, {"determining": "Min( Max( AMS,( Min( CRS ,( Max( Min( FirstVNF_RAM_Server ,Max( BR,PN ) ),FirstVNF_Mem_Server ) + ( ARS - FirstVNF_Mem ) ) ) - ARS ) ) ,( AMS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / Min( ( MLU / ( RRSe * ( MUC - CS ) ) ) ,RMSe ) ) - RMSe )", "obj1": 0.9939024390243902, "obj2": 0.002078450932766717}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * MUC ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.0005721666807895921}, {"determining": "Min( Max( AMS,( BR - ARS ) ) ,( PN - DDR ) )", "choosing": "( ( MLU / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) )", "obj1": 0.9939024390243902, "obj2": 0.002078450932766717}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( MDR * MDR ) )", "choosing": "( ( Min( ( ( RMSe * ( ( ( MUR * RRSe ) - ( MUM * MUM ) ) / ( RMSe - ( CS - DS ) ) ) ) + MUR ) ,( CS / CS ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "( Min( ( Min( Max( ( PN * ACS ),Min( FirstVNF_RAM ,ACS ) ) ,MRS ) + BR ) ,( ( ( Min( ( FirstVNF_RAM_Server / MRS ) ,FirstVNF_RAM ) + Max( CRS,( Const - AMS ) ) ) + FirstVNF_RAM ) - AMS ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ),Max( ( CS / ( MUC * RCSe ) ),( ( ( RMSe + ( ( RMSe - ( DS + RMSe ) ) * RMSe ) ) + ( MUM + ( RMSe * DS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / Min( MRS ,( DDR * ACS ) ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * MLU ) - ( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( RCSe + ( MUR * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( RRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( ( MUR - MUC ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( ( DS - ( RRSe + ( MUM / Min( MUM ,( CS / MUM ) ) ) ) ) + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * ( FirstVNF_CPU_Server * Min( BR ,Min( CRS ,MDR ) ) ) ) - ( Const - FirstVNF_RAM ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / ( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * Max( RCSe,MUM ) ) - ( RCSe * Max( MLU,Max( MUM,( MUM * ( RMSe * ( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( AMS ,( DDR / RRS ) ) ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * CRS ) ,AMS ) * PN ) - Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC / ( RMSe * ( ( MUM / MUM ) * MUM ) ) ) ,Min( RRSe ,( Max( RRSe,MUM ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) - RRS ),( FirstVNF_RAM_Server - CRS ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUM + ( MUC / ( ( MUM + Min( ( MUM * MUM ) ,CS ) ) - MUC ) ) ) * MUR ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,MDR ) / ( CRS / PN ) ) + ( ( Const * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,( CRS + ( FirstVNF_CPU + PN ) ) ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( Min( ( MUR + Min( RRSe ,( Min( MUC ,Max( CS,RMSe ) ) + Max( MUR,Max( CS,MUC ) ) ) ) ) ,Max( CS,RRSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( PN ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU * DDR ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( ( ( MUR * MUR ) + MUR ) / ( MUM + MUR ) ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( Min( PN ,Min( Max( RRS,MDR ) ,( RRS - ( ( DDR / ARS ) * Min( MRS ,DDR ) ) ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( Max( FirstVNF_Mem,( ARS + MRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe * ( RMSe * ( ( ( MUC - ( RRSe + ( MUC - MUR ) ) ) - RCSe ) * ( DS + RRSe ) ) ) ),( Max( MLU,RRSe ) + ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( MUR - Min( DS ,RMSe ) ) ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * ( ( ( MUR / RMSe ) - RRSe ) + Min( MUR ,MUM ) ) ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( DDR,FirstVNF_CPU_Server ),ARS ),BR ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( MUM + DS ) ) ),Min( CS ,Max( MUR,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( Min( FirstVNF_CPU_Server ,ACS ) ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( FirstVNF_CPU * DDR ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Min( ( MUM + DS ) ,MLU ) + Max( DS,MUR ) ) + Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( ARS + DDR ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - AMS ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( BR - AMS ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,( MUR + MUC ) ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( ( RCSe * ( RCSe * RRSe ) ) - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / ( FirstVNF_CPU - FirstVNF_CPU ) ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + Max( ( RCSe / ( CS * RCSe ) ),DS ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const + ( Const * CRS ) ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( ( ( Max( ( CS + MUM ),( MLU * DS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( MRS * AMS ) ) ,( FirstVNF_Mem - DDR ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * Max( ( CS - MUC ),( CS - ( ( Max( ( MUC + DS ),( RRSe / MUM ) ) * MUR ) - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) - Max( BR,ARS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( MUC,RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + Min( Max( ARS,MRS ) ,( MRS + RRS ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( DS ,Min( MLU ,MLU ) ) / ( CS - MUM ) ) + ( ( MLU - MUM ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Min( AMS ,CRS ) ) - FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( DDR * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( MLU / MUM ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MUC,MUM ) * MUM ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / DS ) + ( ( Min( MUR ,RCSe ) - ( MLU - ( MUR - Min( DS ,RMSe ) ) ) ) * Max( MUM,MUM ) ) )", "obj1": 0.09552845528455285, "obj2": 0.7499642317221371}, {"determining": "Min( ( MRS / Const ) ,( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - ( Const - ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS / CS ) ,( MUM / Min( Max( Max( MUM,MUR ),Max( MLU,CS ) ) ,CS ) ) ) / ( ( ( Max( Max( ( MUR / ( RCSe - RRSe ) ),CS ),( ( MUC - Min( CS ,CS ) ) / CS ) ) * ( MUC + MLU ) ) / ( ( MUC + MUC ) + ( MUM - DS ) ) ) / DS ) )", "obj1": 0.6056910569105691, "obj2": 0.21314489411551926}, {"determining": "Min( Max( AMS,( BR - ARS ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) )", "obj1": 0.7317073170731707, "obj2": 0.11025741271534215}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( ( MRS - ( CRS * ( Max( ( Min( MRS ,Max( PN,FirstVNF_Mem ) ) * ( AMS * Max( AMS,FirstVNF_RAM_Server ) ) ),DDR ) * ( FirstVNF_CPU_Server + CRS ) ) ) ) - ( MRS * DDR ) )", "choosing": "( ( Max( MUC,( RMSe * Max( ( RRSe - Min( ( CS / RCSe ) ,RRSe ) ),( ( RRSe - ( RCSe + DS ) ) - MUM ) ) ) ) / ( RRSe - DS ) ) * ( Max( ( DS - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.8191056910569106, "obj2": 0.09970489273292009}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.056656275837327706}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8902439024390244, "obj2": 0.04176253353843697}, {"determining": "Min( MRS ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.24796747967479674, "obj2": 0.5696451683508261}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( ( Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) * ACS ) + ( FirstVNF_CPU + FirstVNF_RAM ) )", "choosing": "( ( ( MUC - MUM ) - ( DS * ( ( CS + ( RCSe + ( ( RCSe / MUM ) * CS ) ) ) / Max( MLU,RCSe ) ) ) ) * Max( ( MUM + ( MUR * MUM ) ),( ( RMSe * MLU ) - ( MUC - ( Min( DS ,MUC ) - RRSe ) ) ) ) )", "obj1": 0.20121951219512196, "obj2": 0.640193934156865}, {"determining": "Min( ( DDR * Const ) ,( Max( MDR,FirstVNF_RAM ) - ( ( ( Min( MDR ,Const ) / ( MRS + ( BR * PN ) ) ) + RRS ) + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( MUC + ( Min( Max( MUM,Max( RMSe,DS ) ) ,MUM ) / MLU ) ) )", "obj1": 0.9288617886178862, "obj2": 0.0299472464356333}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "( ( Max( ( FirstVNF_Mem - ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ( ACS / DDR ) ) ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( DS ,MLU ) ) ),( CS + Min( MUM ,CS ) ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.1951219512195122, "obj2": 0.6626155943068461}, {"determining": "Min( ( MRS / Const ) ,( ( ( FirstVNF_Mem + RRS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( DS / CS ) ,( CS + Min( RMSe ,RCSe ) ) ) / Max( MUC,( RMSe + DS ) ) )", "obj1": 0.4105691056910569, "obj2": 0.4190978045481961}, {"determining": "Min( Max( RRS,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Min( Min( ( RRS * FirstVNF_Mem ) ,FirstVNF_RAM ) ,MDR ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( ( RCSe * RRSe ) * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.16260162601626016, "obj2": 0.6693672618102888}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( ( Min( Min( FirstVNF_CPU_Server ,DDR ) ,MRS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * Max( CS,Min( DS ,MUR ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Min( ( ( ARS - Const ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) )", "choosing": "Min( ( ( RMSe / MUM ) * RRSe ) ,( Min( ( DS / CS ) ,( RRSe - MUR ) ) / Max( MUC,( RMSe + DS ) ) ) )", "obj1": 0.46747967479674796, "obj2": 0.3674142375809188}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "( ( Max( ( FirstVNF_Mem - ( Min( RRS ,( MDR - ( Const + FirstVNF_Mem_Server ) ) ) * ACS ) ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( MUR ,MLU ) ) ),( RRSe * RMSe ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.13617886178861788, "obj2": 0.715094233191315}, {"determining": "Min( ( Min( MRS ,BR ) + ARS ) ,( AMS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / ( RMSe / MLU ) ) - RMSe )", "obj1": 0.3089430894308943, "obj2": 0.5202046187646818}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) )", "choosing": "Min( ( ( CS + ( DS + RMSe ) ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.46960296009518787}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),( ( CRS - AMS ) - ( BR * ( Min( DDR ,FirstVNF_Mem ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - ( MUC + DS ) ) ) + Max( ( RMSe * Min( RMSe ,( RCSe / DS ) ) ),CS ) ) )", "obj1": 0.3252032520325203, "obj2": 0.49490312642804346}, {"determining": "Min( ( FirstVNF_CPU / Min( PN ,AMS ) ) ,( ACS + Min( FirstVNF_CPU_Server ,( RRS * ARS ) ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( Max( MUC,DS ) + ( MUM / ( Max( RCSe,MUR ) - RCSe ) ) ) )", "obj1": 0.9552845528455285, "obj2": 0.02282602914283523}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5301330586889882}, {"determining": "Min( MRS ,Max( ( FirstVNF_Mem + BR ),( BR * ( Min( Min( ( DDR - CRS ) ,( MRS - ( DDR - FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( ( MUC - ( ( CS / MUC ) / MUC ) ) - MUC ) ,Min( ( ( Max( ( RCSe + MUM ),( MLU - CS ) ) + RCSe ) - RRSe ) ,MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.554973485905694}, {"determining": "( ( ( ( ACS * Const ) / ( FirstVNF_RAM - DDR ) ) / ( Min( RRS ,AMS ) - ( MDR * MDR ) ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Max( ( DS * Min( CS ,( RRSe - Min( RRSe ,( RCSe * Max( MUM,MUR ) ) ) ) ) ),RCSe ) / ( Min( ( MUR * CS ) ,MUC ) + RMSe ) )", "obj1": 0.37398373983739835, "obj2": 0.4604052367825234}, {"determining": "( ( ( BR + ( FirstVNF_CPU_Server - CRS ) ) * ARS ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( CS / ( ( MUC - MUM ) + ( CS * RMSe ) ) ) - DS ) )", "obj1": 0.4349593495934959, "obj2": 0.38700590309922395}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.0975609756097561, "obj2": 0.7428417404604929}, {"determining": "( Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),Const ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) / DS ) + ( ( Min( MUR ,RCSe ) - MUM ) * Max( MUM,MUM ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7372254339418387}, {"determining": "( ( PN / ( RRS + Const ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUR,RCSe ) / Max( CS,( ( CS / MLU ) * Min( MUM ,MUM ) ) ) ) / MUC ) - ( ( Min( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUC / DS ) ) - ( MUR * DS ) ) ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) )", "obj1": 0.38414634146341464, "obj2": 0.45548193763351125}, {"determining": "Min( ( Min( Min( ( DDR * FirstVNF_RAM_Server ) ,Min( ACS ,( ARS - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( ( ARS / AMS ) * RRS ) * RRS ) - ( ACS - Max( FirstVNF_CPU_Server,( BR * MDR ) ) ) ) )", "choosing": "( ( DS + Min( ( ( RRSe + CS ) - MLU ) ,Max( MUC,( MUR - DS ) ) ) ) / ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - RMSe ) / RCSe ) + ( ( DS / Min( ( ( CS * MUC ) / ( DS - DS ) ) ,CS ) ) / ( CS + RMSe ) ) ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),( BR * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) * ( MLU / DS ) )", "obj1": 0.12195121951219512, "obj2": 0.7302510965476139}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.40447154471544716, "obj2": 0.4373083391272935}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( Max( FirstVNF_CPU_Server,MRS ) ,MRS ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - ( RCSe * MUM ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2784552845528455, "obj2": 0.5518543607193759}, {"determining": "( ( Max( ( FirstVNF_Mem - ( Const - BR ) ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( ( MLU + ( RMSe / ( RRSe - ( CS - DS ) ) ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.13414634146341464, "obj2": 0.720736306677644}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2804878048780488, "obj2": 0.5335672985611909}, {"determining": "Min( Max( FirstVNF_CPU_Server,ACS ) ,( MDR * Min( Min( FirstVNF_RAM ,Const ) ,( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * MRS ) ) ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * MLU ) - ( MLU + ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ) ) )", "obj1": 0.31910569105691056, "obj2": 0.5112168711682711}, {"determining": "( ( PN / PN ) - Min( ( BR * ( Min( ACS ,FirstVNF_RAM ) - Min( ( Max( BR,( PN + PN ) ) - Min( FirstVNF_Mem ,CRS ) ) ,FirstVNF_CPU_Server ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( ( ( ( CS + ( Min( ( CS * RCSe ) ,RMSe ) * RMSe ) ) - RMSe ) - ( Min( DS ,CS ) * ( MUR * ( Min( DS ,Min( CS ,CS ) ) / ( ( MLU - DS ) * DS ) ) ) ) ) * MUR ) )", "obj1": 0.39227642276422764, "obj2": 0.44547157114346825}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( DDR - RRS ) )", "choosing": "Min( ( ( MUM * Max( RRSe,MLU ) ) + ( RMSe + Max( RCSe,MUC ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( ( Const - MDR ) - ( ( ( Min( MDR ,FirstVNF_CPU_Server ) / FirstVNF_CPU ) + RRS ) + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( ( ( ( MUR * ( RRSe / ( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) ) + ( Min( RRSe ,Min( RRSe ,( DS * DS ) ) ) / ( MLU / MUR ) ) ) + RMSe ) - MUC ) )", "obj1": 0.9634146341463414, "obj2": 0.016559945769200373}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( Const - FirstVNF_CPU_Server ) ,( ACS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ( ( MRS - CRS ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - ( RCSe * MUM ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( MUM / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.004600856860033415}, {"determining": "( Min( ( PN - ( Const / ( ACS * ( PN * ( ( RRS * Const ) + ( BR / FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * ( MUC / MUC ) ) + ( ( ( CS / ( ( MUR / RRSe ) + CS ) ) - ( CS - CS ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.014004323612130984}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - ( ( CS + MUR ) * RCSe ) ) ,Min( MUC ,CS ) ) ) - ( Min( MUR ,Max( Max( Max( MLU,RCSe ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5525444823907202}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - ACS ) ,( ACS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),RMSe ),MUC ) ) ,( ( RRSe * RRSe ) * ( DS + RRSe ) ) )", "obj1": 0.39634146341463417, "obj2": 0.44065568931128046}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( RCSe / RMSe ) / DS ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),( ( ( Max( ACS,FirstVNF_RAM_Server ) * PN ) - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( Max( MUR,MLU ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( CRS ,Min( ACS ,( ARS - ( FirstVNF_RAM_Server - Min( BR ,BR ) ) ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( Min( DS ,CS ),Max( ( Max( MUC,MUM ) * MUM ),Min( MUR ,MLU ) ) ),MUC ) ) ,( DS / Max( RRSe,MUM ) ) )", "obj1": 0.4024390243902439, "obj2": 0.4401721384344387}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( MDR * MDR ) )", "choosing": "( ( Min( ( ( RMSe * ( ( ( MUR * RRSe ) - ( MUM * MUM ) ) / ( RMSe - ( CS - DS ) ) ) ) + MUR ) ,( CS / CS ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( ( CRS * RRS ) * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,MUC ) ) * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - DS ) )", "obj1": 0.40040650406504064, "obj2": 0.44034109952527434}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "( ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + Max( MRS,( ( ( CRS + Const ) + FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - ( RRSe + RMSe ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( Min( MUC ,RMSe ),RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "( ( Min( ( Min( AMS ,Min( RRS ,Const ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( MUC ,( ( RMSe - MUM ) - ( ( MUC * ( CS + MUR ) ) + ( MUC / MLU ) ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.0023276466880874365}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( MUM ,MUC ) ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "Min( Max( AMS,( Min( CRS ,( Max( Min( FirstVNF_RAM_Server ,Max( BR,PN ) ),FirstVNF_Mem_Server ) + ( ARS - FirstVNF_Mem ) ) ) - ARS ) ) ,( AMS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / Min( ( MLU / ( RRSe * ( MUC - CS ) ) ) ,RMSe ) ) - RMSe )", "obj1": 0.9939024390243902, "obj2": 0.002078450932766717}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,( CRS / PN ) ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * ( RRS + FirstVNF_RAM ) ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * ( CS / RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( RMSe - RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.0005721666807895921}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.0005721666807895921}, {"determining": "Min( Max( AMS,( BR - ARS ) ) ,( PN - DDR ) )", "choosing": "( ( MLU / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) )", "obj1": 0.9939024390243902, "obj2": 0.002078450932766717}, {"determining": "( Min( Min( ( DDR * Const ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - ( DDR / MRS ) ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( BR * ACS ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,RMSe ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + Min( ( DS / CS ) ,( MUR - Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Max( ( PN * ACS ),Min( FirstVNF_RAM ,ACS ) ) ,MRS ) + BR ) ,( ( ( Min( ( FirstVNF_RAM_Server / MRS ) ,FirstVNF_RAM ) + Max( CRS,( Const - AMS ) ) ) + FirstVNF_RAM ) - AMS ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ),Max( ( CS / ( MUC * RCSe ) ),( ( ( RMSe + ( ( RMSe - ( DS + RMSe ) ) * RMSe ) ) + ( MUM + ( RMSe * DS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / Min( MRS ,( DDR * ACS ) ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * MLU ) - ( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( RCSe + ( MUR * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( RRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( ( MUR - MUC ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( ( DS - ( RRSe + ( MUM / Min( MUM ,( CS / MUM ) ) ) ) ) + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * ( FirstVNF_CPU_Server * Min( BR ,Min( CRS ,MDR ) ) ) ) - ( Const - FirstVNF_RAM ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / ( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * Max( RCSe,MUM ) ) - ( RCSe * Max( MLU,Max( MUM,( MUM * ( RMSe * ( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( AMS ,( DDR / RRS ) ) ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * CRS ) ,AMS ) * PN ) - Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC / ( RMSe * ( ( MUM / MUM ) * MUM ) ) ) ,Min( RRSe ,( Max( RRSe,MUM ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) - RRS ),( FirstVNF_RAM_Server - CRS ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUM + ( MUC / ( ( MUM + Min( ( MUM * MUM ) ,CS ) ) - MUC ) ) ) * MUR ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,MDR ) / ( CRS / PN ) ) + ( ( Const * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,( CRS + ( FirstVNF_CPU + PN ) ) ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( Min( ( MUR + Min( RRSe ,( Min( MUC ,Max( CS,RMSe ) ) + Max( MUR,Max( CS,MUC ) ) ) ) ) ,Max( CS,RRSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( PN ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU * DDR ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( ( ( MUR * MUR ) + MUR ) / ( MUM + MUR ) ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( Min( PN ,Min( Max( RRS,MDR ) ,( RRS - ( ( DDR / ARS ) * Min( MRS ,DDR ) ) ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( Max( FirstVNF_Mem,( ARS + MRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe * ( RMSe * ( ( ( MUC - ( RRSe + ( MUC - MUR ) ) ) - RCSe ) * ( DS + RRSe ) ) ) ),( Max( MLU,RRSe ) + ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( MUR - Min( DS ,RMSe ) ) ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * ( ( ( MUR / RMSe ) - RRSe ) + Min( MUR ,MUM ) ) ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( DDR,FirstVNF_CPU_Server ),ARS ),BR ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( MUM + DS ) ) ),Min( CS ,Max( MUR,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( Min( FirstVNF_CPU_Server ,ACS ) ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( FirstVNF_CPU * DDR ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Min( ( MUM + DS ) ,MLU ) + Max( DS,MUR ) ) + Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( ARS + DDR ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - AMS ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( BR - AMS ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,( MUR + MUC ) ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( ( RCSe * ( RCSe * RRSe ) ) - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / ( FirstVNF_CPU - FirstVNF_CPU ) ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + Max( ( RCSe / ( CS * RCSe ) ),DS ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const + ( Const * CRS ) ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( ( ( Max( ( CS + MUM ),( MLU * DS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,( MRS * AMS ) ) ,( FirstVNF_Mem - DDR ) ) - ( AMS + ARS ) )", "choosing": "( ( ( DS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( RCSe - CS ) ) ) * ( DS * Max( ( CS - MUC ),( CS - ( ( Max( ( MUC + DS ),( RRSe / MUM ) ) * MUR ) - MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - FirstVNF_CPU_Server ) - Max( BR,ARS ) )", "choosing": "( Max( ( ( RCSe * MUM ) + Max( MUC,RMSe ) ),MLU ) - ( RCSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + Min( Max( ARS,MRS ) ,( MRS + RRS ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( DS ,Min( MLU ,MLU ) ) / ( CS - MUM ) ) + ( ( MLU - MUM ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,Min( AMS ,CRS ) ) - FirstVNF_Mem_Server ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( DDR * FirstVNF_Mem ) ) )", "choosing": "( ( ( CS + ( MUM - MUM ) ) + ( ( MLU * CS ) * ( MLU / MUM ) ) ) * ( DS * ( MUC / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * ( RMSe * ( ( Max( MUM,MUC ) - ( MUM * MUM ) ) / ( RMSe - ( CS - DS ) ) ) ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( ( MDR + Max( FirstVNF_RAM,AMS ) ) - ( Min( MRS ,RRS ) * ( PN + ACS ) ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS / Min( ( MLU / ( ( Max( ( MUR - RCSe ),MUM ) + CS ) - ( MLU * CS ) ) ) ,RMSe ) ) - Min( RMSe ,( Min( ( MUC + ( MUM / MUM ) ) ,MUM ) + ( DS / ( Max( Max( MUM,( RMSe + RCSe ) ),( Max( MUR,MUR ) - RRSe ) ) + ( ( RRSe + MUM ) / Min( RMSe ,CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MLU - ( MUR - Min( DS ,Min( MUR ,RCSe ) ) ) ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / Min( ( DDR * Const ) ,( DDR * ACS ) ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * MLU ) - ( Min( CS ,Min( ( Min( RRSe ,CS ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( RCSe + ( MUR * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,( BR / ( BR + ( FirstVNF_CPU_Server - ( ACS * FirstVNF_Mem ) ) ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( ( ( RRSe / ( ( Min( ( CS + MUR ) ,Max( MUR,MUR ) ) * MUC ) - CS ) ) + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Min( ( ( ARS - Const ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( ( RMSe + ( MUR - Max( RMSe,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "Min( ( ( ( FirstVNF_CPU_Server + MDR ) / Const ) - ( ( FirstVNF_CPU / MDR ) + ARS ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * ( CS / RCSe ) ) ) * Max( MUR,MLU ) ),( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * Min( ( MUC / ( ( RCSe * MUM ) * DS ) ) ,MLU ) ) * Min( MUR ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - Max( ACS,( FirstVNF_Mem_Server / AMS ) ) ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,( ( FirstVNF_Mem + RRS ) * FirstVNF_Mem ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / DS ) + Max( Max( RCSe,MUR ),MLU ) )", "obj1": 0.07926829268292683, "obj2": 0.756486022920312}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + ( Min( ( FirstVNF_RAM_Server / MRS ) ,FirstVNF_RAM ) + Max( CRS,( Const - AMS ) ) ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( Min( DS ,CS ) * ( ( RMSe - ( DS + RMSe ) ) * RMSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.7012195121951219, "obj2": 0.20639558672449176}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MUR / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) )", "obj1": 0.7317073170731707, "obj2": 0.11025741271534215}, {"determining": "( ( MRS - ( CRS * ( Max( ( Min( MRS ,Max( PN,FirstVNF_Mem ) ) * ( AMS * Max( AMS,FirstVNF_RAM_Server ) ) ),DDR ) * ( FirstVNF_CPU_Server + CRS ) ) ) ) - ( MRS * DDR ) )", "choosing": "( ( Max( MUC,( RMSe * Max( ( RRSe - Min( ( CS / RCSe ) ,RRSe ) ),( ( RRSe - ( RCSe + DS ) ) - MUM ) ) ) ) / ( RRSe - DS ) ) * ( Max( ( DS - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.8191056910569106, "obj2": 0.09970489273292009}, {"determining": "Min( ( MRS / Const ) ,( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - ( Const - ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS / CS ) ,( MUM / Min( Max( Max( MUM,MUR ),Max( MLU,CS ) ) ,CS ) ) ) / ( ( ( Max( Max( ( MUR / ( RCSe - RRSe ) ),CS ),( ( MUC - Min( CS ,CS ) ) / CS ) ) * ( MUC + MLU ) ) / ( ( MUC + MUC ) + ( MUM - DS ) ) ) / DS ) )", "obj1": 0.6056910569105691, "obj2": 0.21314489411551926}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.056656275837327706}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5772357723577236, "obj2": 0.22947153103099036}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8902439024390244, "obj2": 0.04176253353843697}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "Min( MRS ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.24796747967479674, "obj2": 0.5696451683508261}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "Min( ( DDR * Const ) ,( Max( MDR,FirstVNF_RAM ) - ( ( ( Min( MDR ,Const ) / ( MRS + ( BR * PN ) ) ) + RRS ) + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( MUC + ( Min( Max( MUM,Max( RMSe,DS ) ) ,MUM ) / MLU ) ) )", "obj1": 0.9288617886178862, "obj2": 0.0299472464356333}, {"determining": "Min( ( Min( ARS ,( BR + Const ) ) + MDR ) ,( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( ( CS * Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) * ( RRSe - MUR ) ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "Min( Max( RRS,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Min( Min( ( RRS * FirstVNF_Mem ) ,FirstVNF_RAM ) ,MDR ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( ( RCSe * RRSe ) * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.16260162601626016, "obj2": 0.6693672618102888}, {"determining": "Min( ( MRS / Const ) ,( ( ( FirstVNF_Mem + RRS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( DS / CS ) ,( CS + Min( RMSe ,RCSe ) ) ) / Max( MUC,( RMSe + DS ) ) )", "obj1": 0.4105691056910569, "obj2": 0.4190978045481961}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Min( ( ( ARS - Const ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) )", "choosing": "Min( ( ( RMSe / MUM ) * RRSe ) ,( Min( ( DS / CS ) ,( RRSe - MUR ) ) / Max( MUC,( RMSe + DS ) ) ) )", "obj1": 0.46747967479674796, "obj2": 0.3674142375809188}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "( ( Max( ( FirstVNF_Mem - ( Min( RRS ,( MDR - ( Const + FirstVNF_Mem_Server ) ) ) * ACS ) ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( MUR ,MLU ) ) ),( RRSe * RMSe ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.13617886178861788, "obj2": 0.715094233191315}, {"determining": "Min( ( Min( MRS ,BR ) + ARS ) ,( AMS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / ( RMSe / MLU ) ) - RMSe )", "obj1": 0.3089430894308943, "obj2": 0.5202046187646818}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),( ( CRS - AMS ) - ( BR * ( Min( DDR ,FirstVNF_Mem ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - ( MUC + DS ) ) ) + Max( ( RMSe * Min( RMSe ,( RCSe / DS ) ) ),CS ) ) )", "obj1": 0.3252032520325203, "obj2": 0.49490312642804346}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( Const * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( Min( MUC ,CS ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) )", "choosing": "Min( ( ( CS + ( DS + RMSe ) ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.46960296009518787}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5301330586889882}, {"determining": "Min( Max( AMS,( BR - ARS ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) )", "obj1": 0.7317073170731707, "obj2": 0.11025741271534215}, {"determining": "Min( MRS ,Max( ( FirstVNF_Mem + BR ),( BR * ( Min( Min( ( DDR - CRS ) ,( MRS - ( DDR - FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( ( MUC - ( ( CS / MUC ) / MUC ) ) - MUC ) ,Min( ( ( Max( ( RCSe + MUM ),( MLU - CS ) ) + RCSe ) - RRSe ) ,MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.554973485905694}, {"determining": "( ( ( BR + ( FirstVNF_CPU_Server - CRS ) ) * ARS ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( CS / ( ( MUC - MUM ) + ( CS * RMSe ) ) ) - DS ) )", "obj1": 0.4349593495934959, "obj2": 0.38700590309922395}, {"determining": "( Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),Const ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUM ,MLU ) / DS ) + ( ( Min( MUR ,RCSe ) - MUM ) * Max( MUM,MUM ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7372254339418387}, {"determining": "Min( ( FirstVNF_CPU / Min( PN ,AMS ) ) ,( ACS + Min( FirstVNF_CPU_Server ,( RRS * ARS ) ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( Max( MUC,DS ) + ( MUM / ( Max( RCSe,MUR ) - RCSe ) ) ) )", "obj1": 0.9552845528455285, "obj2": 0.02282602914283523}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.0975609756097561, "obj2": 0.7428417404604929}, {"determining": "Min( ( Min( Min( ( DDR * FirstVNF_RAM_Server ) ,Min( ACS ,( ARS - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( ( ARS / AMS ) * RRS ) * RRS ) - ( ACS - Max( FirstVNF_CPU_Server,( BR * MDR ) ) ) ) )", "choosing": "( ( DS + Min( ( ( RRSe + CS ) - MLU ) ,Max( MUC,( MUR - DS ) ) ) ) / ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - RMSe ) / RCSe ) + ( ( DS / Min( ( ( CS * MUC ) / ( DS - DS ) ) ,CS ) ) / ( CS + RMSe ) ) ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.40447154471544716, "obj2": 0.4373083391272935}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "Min( Max( FirstVNF_CPU_Server,ACS ) ,( MDR * Min( Min( FirstVNF_RAM ,Const ) ,( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * MRS ) ) ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * MLU ) - ( MLU + ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ) ) )", "obj1": 0.31910569105691056, "obj2": 0.5112168711682711}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Max( AMS,ARS ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( ( ( FirstVNF_RAM_Server - MRS ) / FirstVNF_Mem ) + ( FirstVNF_RAM - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( MUM + DS ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,MUR ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( DS / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe + CS ) ) ) )", "obj1": 0.36585365853658536, "obj2": 0.4609955907456165}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( RRSe / Min( DS ,MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.753216281704483}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( CRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - ( ( CS + MUR ) * RCSe ) ) ,Min( MUC ,CS ) ) ) - ( Min( MUR ,Max( Max( Max( MLU,RCSe ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5525444823907202}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( DDR - RRS ) )", "choosing": "Min( ( ( MUM * Max( RRSe,MLU ) ) + ( RMSe + Max( RCSe,MUC ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( Max( AMS,( BR - ARS ) ) * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / MUR ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.37398373983739835, "obj2": 0.45571157816252317}, {"determining": "( ( Max( ( FirstVNF_Mem - ( Const - BR ) ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( ( MLU + ( RMSe / ( RRSe - ( CS - DS ) ) ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.13414634146341464, "obj2": 0.720736306677644}, {"determining": "( ( Max( ( FirstVNF_Mem - ( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( AMS / AMS ) ) ) + DDR ) ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUM / DS ) ) - ( MUR * DS ) ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.12804878048780488, "obj2": 0.7285917505311622}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2804878048780488, "obj2": 0.5335672985611909}, {"determining": "( ( PN / ( RRS + Const ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUR,RCSe ) / Max( CS,( ( CS / MLU ) * Min( MUM ,MUM ) ) ) ) / MUC ) - ( ( Min( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUC / DS ) ) - ( MUR * DS ) ) ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) )", "obj1": 0.38414634146341464, "obj2": 0.45548193763351125}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( Const - FirstVNF_CPU_Server ) ,( ACS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ( ( MRS - CRS ) * FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - ( RCSe * MUM ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( MUM / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.004600856860033415}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( ( Const - MDR ) - ( ( ( Min( MDR ,FirstVNF_CPU_Server ) / FirstVNF_CPU ) + RRS ) + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( ( ( ( MUR * ( RRSe / ( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) ) + ( Min( RRSe ,Min( RRSe ,( DS * DS ) ) ) / ( MLU / MUR ) ) ) + RMSe ) - MUC ) )", "obj1": 0.9634146341463414, "obj2": 0.016559945769200373}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / ( MDR - FirstVNF_CPU_Server ) ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * DS ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.746806853340888}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( Min( CS ,DS ) ,RMSe ) ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.3882113821138211, "obj2": 0.4492022687548012}, {"determining": "( ( Max( ( FirstVNF_Mem - BR ),( BR * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) * ( MLU / DS ) )", "obj1": 0.12195121951219512, "obj2": 0.7302510965476139}, {"determining": "( ( PN / PN ) - Min( ( BR * ( Min( ACS ,FirstVNF_RAM ) - Min( ( Max( BR,( PN + PN ) ) - Min( FirstVNF_Mem ,CRS ) ) ,FirstVNF_CPU_Server ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( ( ( ( CS + ( Min( ( CS * RCSe ) ,RMSe ) * RMSe ) ) - RMSe ) - ( Min( DS ,CS ) * ( MUR * ( Min( DS ,Min( CS ,CS ) ) / ( ( MLU - DS ) * DS ) ) ) ) ) * MUR ) )", "obj1": 0.39227642276422764, "obj2": 0.44547157114346825}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( ( Min( Min( FirstVNF_CPU_Server ,DDR ) ,MRS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * Max( CS,Min( DS ,MUR ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( Min( ( PN - ( Const / ( ACS * ( PN * ( ( RRS * Const ) + ( BR / FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * ( MUC / MUC ) ) + ( ( ( CS / ( ( MUR / RRSe ) + CS ) ) - ( CS - CS ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.014004323612130984}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),Min( ( FirstVNF_RAM_Server - ACS ) ,( ACS * FirstVNF_Mem ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "( Min( ( PN - ( Const / ACS ) ) ,Max( ( MRS / ( DDR + Max( FirstVNF_Mem_Server,( FirstVNF_RAM * PN ) ) ) ),CRS ) ) / ( Min( Min( AMS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Max( ( ( RCSe * ( MLU / DS ) ) / MUC ),RRSe ) ) + ( ( ( CS / Min( ( ( ( RCSe / RRSe ) - Min( CS ,MUC ) ) / MLU ) ,RMSe ) ) - ( ( MLU + MUC ) / Max( MUM,MUR ) ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9573170731707317, "obj2": 0.021299594802441264}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),RMSe ),MUC ) ) ,( ( RRSe * RRSe ) * ( DS + RRSe ) ) )", "obj1": 0.39634146341463417, "obj2": 0.44065568931128046}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( RCSe / RMSe ) / DS ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * RRS ) ),( ( ( Max( ACS,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * ( FirstVNF_RAM / RRS ) ) ) - Min( BR ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( RMSe - RCSe ) ) + Max( ( RMSe * ( Max( MUR,MLU ) - ( ( Min( RCSe ,CS ) * ( MLU + MUM ) ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.3231707317073171, "obj2": 0.5062187971473695}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( CRS ,Min( ACS ,( ARS - ( FirstVNF_RAM_Server - Min( BR ,BR ) ) ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( Min( DS ,CS ),Max( ( Max( MUC,MUM ) * MUM ),Min( MUR ,MLU ) ) ),MUC ) ) ,( DS / Max( RRSe,MUM ) ) )", "obj1": 0.4024390243902439, "obj2": 0.4401721384344387}, {"determining": "( ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + Max( MRS,( ( ( CRS + Const ) + FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - ( RRSe + RMSe ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( Min( MUC ,RMSe ),RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( ( CRS * RRS ) * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,MUC ) ) * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - DS ) )", "obj1": 0.40040650406504064, "obj2": 0.44034109952527434}, {"determining": "( ( Min( ( Min( AMS ,Min( RRS ,Const ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( MUC ,( ( RMSe - MUM ) - ( ( MUC * ( CS + MUR ) ) + ( MUC / MLU ) ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.0023276466880874365}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( MDR * MDR ) )", "choosing": "( ( Min( ( ( RMSe * ( ( ( MUR * RRSe ) - ( MUM * MUM ) ) / ( RMSe - ( CS - DS ) ) ) ) + MUR ) ,( CS / CS ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( RRS + PN ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( ( RRSe / RCSe ) ,MUC ) ) ) ) + MUR ) ) ,( DS / ( RMSe + ( ( RRSe + DS ) / MUM ) ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0013664756328364612}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( MUM ,MUC ) ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.0005721666807895921}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,( CRS / PN ) ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * ( RRS + FirstVNF_RAM ) ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * ( CS / RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( RMSe - RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.0005721666807895921}, {"determining": "( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MUC,MUM ) * MUM ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR * Const ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - ( DDR / MRS ) ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( BR * ACS ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,RMSe ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + Min( ( DS / CS ) ,( MUR - Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Max( ( PN * ACS ),Min( FirstVNF_RAM ,ACS ) ) ,MRS ) + BR ) ,( ( ( Min( ( FirstVNF_RAM_Server / MRS ) ,FirstVNF_RAM ) + Max( CRS,( Const - AMS ) ) ) + FirstVNF_RAM ) - AMS ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ),Max( ( CS / ( MUC * RCSe ) ),( ( ( RMSe + ( ( RMSe - ( DS + RMSe ) ) * RMSe ) ) + ( MUM + ( RMSe * DS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / Min( MRS ,( DDR * ACS ) ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * MLU ) - ( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( RCSe + ( MUR * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( RRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( ( MUR - MUC ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( ( DS - ( RRSe + ( MUM / Min( MUM ,( CS / MUM ) ) ) ) ) + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * ( FirstVNF_CPU_Server * Min( BR ,Min( CRS ,MDR ) ) ) ) - ( Const - FirstVNF_RAM ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / ( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * Max( RCSe,MUM ) ) - ( RCSe * Max( MLU,Max( MUM,( MUM * ( RMSe * ( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( AMS ,( DDR / RRS ) ) ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * CRS ) ,AMS ) * PN ) - Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC / ( RMSe * ( ( MUM / MUM ) * MUM ) ) ) ,Min( RRSe ,( Max( RRSe,MUM ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) - RRS ),( FirstVNF_RAM_Server - CRS ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUM + ( MUC / ( ( MUM + Min( ( MUM * MUM ) ,CS ) ) - MUC ) ) ) * MUR ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,MDR ) / ( CRS / PN ) ) + ( ( Const * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,( CRS + ( FirstVNF_CPU + PN ) ) ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( Min( ( MUR + Min( RRSe ,( Min( MUC ,Max( CS,RMSe ) ) + Max( MUR,Max( CS,MUC ) ) ) ) ) ,Max( CS,RRSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( PN ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU * DDR ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( ( ( MUR * MUR ) + MUR ) / ( MUM + MUR ) ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( Min( PN ,Min( Max( RRS,MDR ) ,( RRS - ( ( DDR / ARS ) * Min( MRS ,DDR ) ) ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( Max( FirstVNF_Mem,( ARS + MRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe * ( RMSe * ( ( ( MUC - ( RRSe + ( MUC - MUR ) ) ) - RCSe ) * ( DS + RRSe ) ) ) ),( Max( MLU,RRSe ) + ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( MUR - Min( DS ,RMSe ) ) ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * ( ( ( MUR / RMSe ) - RRSe ) + Min( MUR ,MUM ) ) ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( DDR,FirstVNF_CPU_Server ),ARS ),BR ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( MUM + DS ) ) ),Min( CS ,Max( MUR,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( Min( FirstVNF_CPU_Server ,ACS ) ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( FirstVNF_CPU * DDR ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Min( ( MUM + DS ) ,MLU ) + Max( DS,MUR ) ) + Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( ARS + DDR ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - AMS ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( BR - AMS ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,( MUR + MUC ) ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( ( RCSe * ( RCSe * RRSe ) ) - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) - Max( Min( ( FirstVNF_CPU_Server * MDR ) ,MDR ),MRS ) )", "choosing": "( Min( MLU ,MUC ) * Max( RMSe,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + Const ) * ( ( PN * ( FirstVNF_Mem_Server - MDR ) ) - Max( ( FirstVNF_RAM / MRS ),( MDR + MDR ) ) ) )", "choosing": "Min( ( ( ( DS * ( RMSe / CS ) ) * ( CS + Max( MUM,( RCSe + MUM ) ) ) ) + Min( ( ( MUR + RCSe ) - RRSe ) ,MUR ) ) ,Min( MUC ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM / FirstVNF_RAM ) / ( CRS * FirstVNF_Mem_Server ) ) - ( ( MRS - FirstVNF_CPU ) + ( FirstVNF_RAM + Const ) ) ) * ( ( ( MDR / ( FirstVNF_CPU - FirstVNF_CPU ) ) - Min( MDR ,FirstVNF_CPU_Server ) ) - Min( ( BR + ACS ) ,Max( FirstVNF_Mem,CRS ) ) ) )", "choosing": "( ( ( ( MLU + MUC ) - Max( MUM,MUC ) ) * ( ( MUR + MUM ) - Min( MLU ,MLU ) ) ) + Min( ( ( CS + RRSe ) + Max( ( RCSe / ( CS * RCSe ) ),DS ) ) ,( Min( MLU ,RRSe ) - ( MUM - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const + ( Const * CRS ) ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + ( Min( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ,AMS ) - AMS ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - RCSe ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( MLU,Min( ( ( Max( ( CS + MUM ),( MLU * DS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( ( ( ( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( CRS * MDR ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Max( ACS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( Min( MUC ,RRSe ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + MDR ) / Const ) - ( ( FirstVNF_CPU / MDR ) + ARS ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * ( CS / RCSe ) ) ) * Max( MUR,MLU ) ),( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * Min( ( MUC / ( ( RCSe * MUM ) * DS ) ) ,MLU ) ) * Min( MUR ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - Max( ACS,( FirstVNF_Mem_Server / AMS ) ) ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,( ( FirstVNF_Mem + RRS ) * FirstVNF_Mem ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / DS ) + Max( Max( RCSe,MUR ),MLU ) )", "obj1": 0.07926829268292683, "obj2": 0.756486022920312}, {"determining": "Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( ( RRSe * DS ) / ( RRSe / ( DS * MLU ) ) ) ) )", "obj1": 0.6910569105691057, "obj2": 0.1871274423146118}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.056656275837327706}, {"determining": "Min( ( MRS / Const ) ,( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - ( Const - ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS / CS ) ,( MUM / Min( Max( Max( MUM,MUR ),Max( MLU,CS ) ) ,CS ) ) ) / ( ( ( Max( Max( ( MUR / ( RCSe - RRSe ) ),CS ),( ( MUC - Min( CS ,CS ) ) / CS ) ) * ( MUC + MLU ) ) / ( ( MUC + MUC ) + ( MUM - DS ) ) ) / DS ) )", "obj1": 0.6056910569105691, "obj2": 0.21314489411551926}, {"determining": "Min( Max( ( FirstVNF_RAM * BR ),( FirstVNF_CPU - ARS ) ) ,( ARS - ( ( CRS - ( MDR + FirstVNF_Mem ) ) + ARS ) ) )", "choosing": "( ( MUM / Min( MUM ,( MLU * Min( Max( ( Max( RCSe,DS ) + Min( RCSe ,RMSe ) ),RCSe ) ,Max( DS,DS ) ) ) ) ) - ( ( MLU + RRSe ) / ( DS - ( MUM * Max( Min( CS ,( ( MLU - MUC ) - MLU ) ),MUC ) ) ) ) )", "obj1": 0.7459349593495935, "obj2": 0.09111625720918921}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5772357723577236, "obj2": 0.22947153103099036}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MUR / MLU ) ,RMSe ) ) - MLU )", "obj1": 0.7134146341463414, "obj2": 0.11664282569737443}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8902439024390244, "obj2": 0.04176253353843697}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "Min( MRS ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.24796747967479674, "obj2": 0.5696451683508261}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "Min( ( DDR * Const ) ,( Max( MDR,FirstVNF_RAM ) - ( ( ( Min( MDR ,Const ) / ( MRS + ( BR * PN ) ) ) + RRS ) + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( MUC + ( Min( Max( MUM,Max( RMSe,DS ) ) ,MUM ) / MLU ) ) )", "obj1": 0.9288617886178862, "obj2": 0.0299472464356333}, {"determining": "Min( ( Min( ARS ,( BR + Const ) ) + MDR ) ,( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( ( CS * Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) * ( RRSe - MUR ) ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "Min( Max( RRS,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Min( Min( ( RRS * FirstVNF_Mem ) ,FirstVNF_RAM ) ,MDR ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( ( RCSe * RRSe ) * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.16260162601626016, "obj2": 0.6693672618102888}, {"determining": "Min( ( MRS / Const ) ,( ( ( FirstVNF_Mem + RRS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( DS / CS ) ,( CS + Min( RMSe ,RCSe ) ) ) / Max( MUC,( RMSe + DS ) ) )", "obj1": 0.4105691056910569, "obj2": 0.4190978045481961}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Min( ( ( ARS - Const ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) * ( Min( ACS ,FirstVNF_RAM ) - ( BR * ACS ) ) )", "choosing": "Min( ( ( RMSe / MUM ) * RRSe ) ,( Min( ( DS / CS ) ,( RRSe - MUR ) ) / Max( MUC,( RMSe + DS ) ) ) )", "obj1": 0.46747967479674796, "obj2": 0.3674142375809188}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "( ( Max( ( FirstVNF_Mem - ( Min( RRS ,( MDR - ( Const + FirstVNF_Mem_Server ) ) ) * ACS ) ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( Max( Max( RCSe,( MUM + Min( MUR ,MLU ) ) ),( RRSe * RMSe ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.13617886178861788, "obj2": 0.715094233191315}, {"determining": "( Max( Max( Min( ( MRS * ACS ) ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( ( DS / ( MUC - MUM ) ) / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.32113821138211385, "obj2": 0.494302713446085}, {"determining": "Min( ( Min( MRS ,BR ) + ARS ) ,( AMS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / ( RMSe / MLU ) ) - RMSe )", "obj1": 0.3089430894308943, "obj2": 0.5202046187646818}, {"determining": "Min( MRS ,Max( ( FirstVNF_Mem + BR ),( BR * ( Min( Min( ( DDR - CRS ) ,( MRS - ( DDR - FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( ( MUC - ( ( CS / MUC ) / MUC ) ) - MUC ) ,Min( ( ( Max( ( RCSe + MUM ),( MLU - CS ) ) + RCSe ) - RRSe ) ,MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.554973485905694}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( ( Min( Min( FirstVNF_CPU_Server ,DDR ) ,MRS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * Max( CS,Min( DS ,MUR ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) )", "choosing": "Min( ( ( CS + ( DS + RMSe ) ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.46960296009518787}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5301330586889882}, {"determining": "Min( Max( FirstVNF_CPU_Server,ACS ) ,( MDR * Min( Min( FirstVNF_RAM ,Const ) ,( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * MRS ) ) ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * MLU ) - ( MLU + ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ) ) )", "obj1": 0.31910569105691056, "obj2": 0.5112168711682711}, {"determining": "( ( ( BR + ( FirstVNF_CPU_Server - CRS ) ) * ARS ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( CS / ( ( MUC - MUM ) + ( CS * RMSe ) ) ) - DS ) )", "obj1": 0.4349593495934959, "obj2": 0.38700590309922395}, {"determining": "Min( ( FirstVNF_CPU / Min( PN ,AMS ) ) ,( ACS + Min( FirstVNF_CPU_Server ,( RRS * ARS ) ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( Max( MUC,DS ) + ( MUM / ( Max( RCSe,MUR ) - RCSe ) ) ) )", "obj1": 0.9552845528455285, "obj2": 0.02282602914283523}, {"determining": "( ( FirstVNF_RAM_Server + Max( CRS,( ( BR / ( Min( CRS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) ) ) / ( Min( ARS ,( ( PN / PN ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / ( ( RRSe + ( ( RCSe * RMSe ) - ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ) - RRSe ) ) + ( ( Min( MUR ,RCSe ) - ( MLU - MUC ) ) * Max( MUM,( ( MUC / Max( RRSe,RCSe ) ) * MLU ) ) ) )", "obj1": 0.08536585365853659, "obj2": 0.7505720038317084}, {"determining": "Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7398373983739838, "obj2": 0.10519783089293441}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "( ( Max( ( FirstVNF_Mem - ( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM - ( AMS / AMS ) ) ) + DDR ) ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUM / DS ) ) - ( MUR * DS ) ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.12804878048780488, "obj2": 0.7285917505311622}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.40447154471544716, "obj2": 0.4373083391272935}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Max( AMS,ARS ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( ( ( FirstVNF_RAM_Server - MRS ) / FirstVNF_Mem ) + ( FirstVNF_RAM - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( MUM + DS ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,MUR ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( DS / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe + CS ) ) ) )", "obj1": 0.36585365853658536, "obj2": 0.4609955907456165}, {"determining": "Min( ( FirstVNF_RAM_Server / ( Max( AMS,FirstVNF_CPU_Server ) * MDR ) ) ,( ( FirstVNF_CPU + PN ) * Max( ACS,ARS ) ) )", "choosing": "( Min( Max( MUM,RCSe ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( DDR - RRS ) )", "choosing": "Min( ( ( MUM * Max( RRSe,MLU ) ) + ( RMSe + Max( RCSe,MUC ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Max( FirstVNF_CPU_Server,ACS ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Min( ( FirstVNF_CPU / ARS ) ,Max( MRS,( PN - MDR ) ) ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,( RCSe + RRSe ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ),CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5487079774377545}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( Max( AMS,( BR - ARS ) ) * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / MUR ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.37398373983739835, "obj2": 0.45571157816252317}, {"determining": "( ( Max( ( FirstVNF_Mem - ( Const - BR ) ),AMS ) / FirstVNF_CPU_Server ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( ( MLU + ( RMSe / ( RRSe - ( CS - DS ) ) ) ) - MUC ) - MUR ) ) * ( MLU / DS ) )", "obj1": 0.13414634146341464, "obj2": 0.720736306677644}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MUR / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) )", "obj1": 0.7317073170731707, "obj2": 0.11025741271534215}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2804878048780488, "obj2": 0.5335672985611909}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( Const * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( Min( MUC ,CS ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( PN / ( RRS + Const ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUR,RCSe ) / Max( CS,( ( CS / MLU ) * Min( MUM ,MUM ) ) ) ) / MUC ) - ( ( Min( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUC / DS ) ) - ( MUR * DS ) ) ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) )", "obj1": 0.38414634146341464, "obj2": 0.45548193763351125}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( MRS ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( MUR ,Max( Max( Max( MLU,( RCSe - RCSe ) ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "Min( ( FirstVNF_CPU / FirstVNF_RAM_Server ) ,( ( Const - MDR ) - ( ( ( Min( MDR ,FirstVNF_CPU_Server ) / FirstVNF_CPU ) + RRS ) + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( ( ( ( MUR * ( RRSe / ( ( RCSe * RMSe ) / Max( CS,RRSe ) ) ) ) + ( Min( RRSe ,Min( RRSe ,( DS * DS ) ) ) / ( MLU / MUR ) ) ) + RMSe ) - MUC ) )", "obj1": 0.9634146341463414, "obj2": 0.016559945769200373}, {"determining": "( ( PN / PN ) - Min( ( BR * ( Min( ACS ,FirstVNF_RAM ) - Min( ( Max( BR,( PN + PN ) ) - Min( FirstVNF_Mem ,CRS ) ) ,FirstVNF_CPU_Server ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( ( ( ( CS + ( Min( ( CS * RCSe ) ,RMSe ) * RMSe ) ) - RMSe ) - ( Min( DS ,CS ) * ( MUR * ( Min( DS ,Min( CS ,CS ) ) / ( ( MLU - DS ) * DS ) ) ) ) ) * MUR ) )", "obj1": 0.39227642276422764, "obj2": 0.44547157114346825}, {"determining": "( Min( ( PN - ( Const / ( ACS * ( PN * ( ( RRS * Const ) + ( BR / FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * ( MUC / MUC ) ) + ( ( ( CS / ( ( MUR / RRSe ) + CS ) ) - ( CS - CS ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.014004323612130984}, {"determining": "Min( Max( AMS,( BR - ARS ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) )", "obj1": 0.7317073170731707, "obj2": 0.11025741271534215}, {"determining": "( Min( ( PN - ( Const / ACS ) ) ,Max( ( MRS / ( DDR + Max( FirstVNF_Mem_Server,( FirstVNF_RAM * PN ) ) ) ),CRS ) ) / ( Min( Min( AMS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Max( ( ( RCSe * ( MLU / DS ) ) / MUC ),RRSe ) ) + ( ( ( CS / Min( ( ( ( RCSe / RRSe ) - Min( CS ,MUC ) ) / MLU ) ,RMSe ) ) - ( ( MLU + MUC ) / Max( MUM,MUR ) ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9573170731707317, "obj2": 0.021299594802441264}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),RMSe ),MUC ) ) ,( ( RRSe * RRSe ) * ( DS + RRSe ) ) )", "obj1": 0.39634146341463417, "obj2": 0.44065568931128046}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "( ( ARS * ARS ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe * CS ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( Min( CS ,DS ) ,RMSe ) ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.3882113821138211, "obj2": 0.4492022687548012}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( RCSe / RMSe ) / DS ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( Min( CS ,DS ) ,RMSe ) ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.3882113821138211, "obj2": 0.4492022687548012}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( CRS ,Min( ACS ,( ARS - ( FirstVNF_RAM_Server - Min( BR ,BR ) ) ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( Min( DS ,CS ),Max( ( Max( MUC,MUM ) * MUM ),Min( MUR ,MLU ) ) ),MUC ) ) ,( DS / Max( RRSe,MUM ) ) )", "obj1": 0.4024390243902439, "obj2": 0.4401721384344387}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( MDR * MDR ) )", "choosing": "( ( Min( ( ( RMSe * ( ( ( MUR * RRSe ) - ( MUM * MUM ) ) / ( RMSe - ( CS - DS ) ) ) ) + MUR ) ,( CS / CS ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( ( CRS * RRS ) * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,MUC ) ) * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - DS ) )", "obj1": 0.40040650406504064, "obj2": 0.44034109952527434}, {"determining": "( ( Min( ( Min( AMS ,Min( RRS ,Const ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( MUC ,( ( RMSe - MUM ) - ( ( MUC * ( CS + MUR ) ) + ( MUC / MLU ) ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.0023276466880874365}, {"determining": "( ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + Max( MRS,( ( ( CRS + Const ) + FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - ( RRSe + RMSe ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( Min( MUC ,RMSe ),RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "Min( ( Min( Min( ( DDR * FirstVNF_RAM_Server ) ,Min( ACS ,( ARS - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( ( ARS / AMS ) * RRS ) * RRS ) - ( ACS - Max( FirstVNF_CPU_Server,( BR * MDR ) ) ) ) )", "choosing": "( ( DS + Min( ( ( RRSe + CS ) - MLU ) ,Max( MUC,( MUR - DS ) ) ) ) / ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - RMSe ) / RCSe ) + ( ( DS / Min( ( ( CS * MUC ) / ( DS - DS ) ) ,CS ) ) / ( CS + RMSe ) ) ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "( ( Min( ( CRS * DDR ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MLU / CS ) - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( ( MUM * DS ) * Max( MUM,MUM ) ) / DS ) ) ) + ( ( RCSe - RRSe ) - ( ( Max( MLU,Max( RCSe,MUM ) ) - MUR ) * Max( MLU,RMSe ) ) ) ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( RRS + PN ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( ( RRSe / RCSe ) ,MUC ) ) ) ) + MUR ) ) ,( DS / ( RMSe + ( ( RRSe + DS ) / MUM ) ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0013664756328364612}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,( CRS / PN ) ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * ( RRS + FirstVNF_RAM ) ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * ( CS / RCSe ) ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( RMSe - RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.0005721666807895921}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),RRS ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.0005721666807895921}, {"determining": "( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( RRS + PN ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( ( RRSe / RCSe ) ,MUC ) ) ) ) + MUR ) ) ,( DS / ( RMSe + ( ( RRSe + DS ) / MUM ) ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0013664756328364612}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( Min( MRS ,Max( FirstVNF_RAM_Server,Const ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( CS * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MUC,MUM ) * MUM ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR * Const ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - ( DDR / MRS ) ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( BR * ACS ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,RMSe ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + Min( ( DS / CS ) ,( MUR - Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Max( ( PN * ACS ),Min( FirstVNF_RAM ,ACS ) ) ,MRS ) + BR ) ,( ( ( Min( ( FirstVNF_RAM_Server / MRS ) ,FirstVNF_RAM ) + Max( CRS,( Const - AMS ) ) ) + FirstVNF_RAM ) - AMS ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ),Max( ( CS / ( MUC * RCSe ) ),( ( ( RMSe + ( ( RMSe - ( DS + RMSe ) ) * RMSe ) ) + ( MUM + ( RMSe * DS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / Min( MRS ,( DDR * ACS ) ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * MLU ) - ( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( RCSe + ( MUR * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( RRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( ( MUR - MUC ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( ( DS - ( RRSe + ( MUM / Min( MUM ,( CS / MUM ) ) ) ) ) + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * ( FirstVNF_CPU_Server * Min( BR ,Min( CRS ,MDR ) ) ) ) - ( Const - FirstVNF_RAM ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / ( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * Max( RCSe,MUM ) ) - ( RCSe * Max( MLU,Max( MUM,( MUM * ( RMSe * ( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( AMS ,( DDR / RRS ) ) ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * CRS ) ,AMS ) * PN ) - Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC / ( RMSe * ( ( MUM / MUM ) * MUM ) ) ) ,Min( RRSe ,( Max( RRSe,MUM ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) - RRS ),( FirstVNF_RAM_Server - CRS ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUM + ( MUC / ( ( MUM + Min( ( MUM * MUM ) ,CS ) ) - MUC ) ) ) * MUR ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,MDR ) / ( CRS / PN ) ) + ( ( Const * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,( CRS + ( FirstVNF_CPU + PN ) ) ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( Min( ( MUR + Min( RRSe ,( Min( MUC ,Max( CS,RMSe ) ) + Max( MUR,Max( CS,MUC ) ) ) ) ) ,Max( CS,RRSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( PN ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU * DDR ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( ( ( MUR * MUR ) + MUR ) / ( MUM + MUR ) ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Const ,ACS ) - Min( Min( PN ,Min( Max( RRS,MDR ) ,( RRS - ( ( DDR / ARS ) * Min( MRS ,DDR ) ) ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( Max( FirstVNF_Mem,( ARS + MRS ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) )", "choosing": "Max( ( RCSe * ( RMSe * ( ( ( MUC - ( RRSe + ( MUC - MUR ) ) ) - RCSe ) * ( DS + RRSe ) ) ) ),( Max( MLU,RRSe ) + ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - BR ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU - ( MUR - Min( DS ,RMSe ) ) ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) - ( FirstVNF_RAM_Server * BR ) )", "choosing": "Min( Min( ( DS + RCSe ) ,( RMSe + MUC ) ) ,( ( MUR * ( ( ( MUR / RMSe ) - RRSe ) + Min( MUR ,MUM ) ) ) - Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( ( FirstVNF_RAM / PN ) + FirstVNF_RAM_Server ) - MRS ) )", "choosing": "Max( ( MUM + ( Min( ( MLU / Max( MLU,MUC ) ) ,( Max( ( RRSe / ( RMSe - CS ) ),CS ) / Max( RCSe,Min( ( MLU + RCSe ) ,RRSe ) ) ) ) * ( RRSe + MUC ) ) ),Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( DDR,FirstVNF_CPU_Server ),ARS ),BR ) / ( MDR - ACS ) )", "choosing": "Max( Min( RCSe ,( ( DS + RRSe ) + ( MUM + DS ) ) ),Min( CS ,Max( MUR,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( Const - AMS ),Min( Min( FirstVNF_CPU_Server ,ACS ) ,FirstVNF_CPU_Server ) ) * ( ( PN * RRS ) / ( FirstVNF_CPU_Server - PN ) ) ) + Min( ( FirstVNF_CPU * DDR ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Min( ( MUM + DS ) ,MLU ) + Max( DS,MUR ) ) + Min( MUC ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( ARS + DDR ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - AMS ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) * ( BR - AMS ) ) / Min( Min( BR ,MRS ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,( MUR + MUC ) ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + ( ( ( MLU / RRSe ) / ( RRSe * MUC ) ) / ( ( ( RCSe * ( RCSe * RRSe ) ) - CS ) * ( DS * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( ( FirstVNF_CPU / MDR ) + ( FirstVNF_Mem_Server / Max( MRS,Max( ACS,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * ( Max( MLU,RCSe ) + RCSe ) ) * Min( MUR ,DS ) ) + ( ( ( RRSe + MUM ) * ( RMSe + RRSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( CRS * MDR ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Max( ACS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( Min( MUC ,RRSe ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - Max( ACS,( FirstVNF_Mem_Server / AMS ) ) ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,( ( FirstVNF_Mem + RRS ) * FirstVNF_Mem ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / DS ) + Max( Max( RCSe,MUR ),MLU ) )", "obj1": 0.07926829268292683, "obj2": 0.756486022920312}, {"determining": "Min( ( MRS / Const ) ,( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - ( Const - ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS / CS ) ,( MUM / Min( Max( Max( MUM,MUR ),Max( MLU,CS ) ) ,CS ) ) ) / ( ( ( Max( Max( ( MUR / ( RCSe - RRSe ) ),CS ),( ( MUC - Min( CS ,CS ) ) / CS ) ) * ( MUC + MLU ) ) / ( ( MUC + MUC ) + ( MUM - DS ) ) ) / DS ) )", "obj1": 0.6056910569105691, "obj2": 0.21314489411551926}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.056656275837327706}, {"determining": "Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( ( RRSe * DS ) / ( RRSe / ( DS * MLU ) ) ) ) )", "obj1": 0.6910569105691057, "obj2": 0.1871274423146118}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "( Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( MRS ,MDR ) ) * ( FirstVNF_CPU_Server * ( ( RRS / ( FirstVNF_CPU_Server - AMS ) ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( Min( RMSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.766260162601626, "obj2": 0.07510903232372351}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8902439024390244, "obj2": 0.04176253353843697}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "Min( MRS ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.24796747967479674, "obj2": 0.5696451683508261}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( Max( ( ( Const - FirstVNF_RAM ) * FirstVNF_RAM_Server ),RRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) * Min( Min( ( RMSe / ( MUC / Max( Max( MLU,MUR ),Min( Min( MLU ,RRSe ) ,RCSe ) ) ) ) ,MLU ) ,( Max( ( MLU * MUR ),( Max( ( RMSe * Min( DS ,MUM ) ),MUC ) / Min( ( MUM * Min( MUM ,MLU ) ) ,( MUM * DS ) ) ) ) / ( MUR / ( ( ( CS * ( RCSe + MUC ) ) - RMSe ) / ( ( ( MUM - MUR ) - ( RMSe + DS ) ) - MUR ) ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.7036733638876238}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + ( MLU + Min( RRSe ,Max( MLU,RCSe ) ) ) )", "obj1": 0.5548780487804879, "obj2": 0.23786531304784386}, {"determining": "Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( ( RRSe * DS ) / ( RRSe / ( DS * MLU ) ) ) ) )", "obj1": 0.7012195121951219, "obj2": 0.1761458835121544}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9207317073170732, "obj2": 0.02866187901897091}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / ( ( ( ( Min( ( MUC * DS ) ,( MUR + MUC ) ) / Max( RRSe,RCSe ) ) / RMSe ) / CS ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.7052845528455285, "obj2": 0.12642085898705085}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5772357723577236, "obj2": 0.22947153103099036}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "Min( Max( RRS,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Min( Min( ( RRS * FirstVNF_Mem ) ,FirstVNF_RAM ) ,MDR ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( ( RCSe * RRSe ) * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.16260162601626016, "obj2": 0.6693672618102888}, {"determining": "Min( ( MRS / Const ) ,( ( ( FirstVNF_Mem + RRS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( DS / CS ) ,( CS + Min( RMSe ,RCSe ) ) ) / Max( MUC,( RMSe + DS ) ) )", "obj1": 0.4105691056910569, "obj2": 0.4190978045481961}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "Min( ( ( DDR + ARS ) - FirstVNF_Mem_Server ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * ( CS / MUM ) ) / ( ( RRSe - RMSe ) * ( ( MUR - ( Max( RMSe,MUR ) * CS ) ) - MLU ) ) ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) )", "obj1": 0.4532520325203252, "obj2": 0.3660506287979113}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "Min( Max( ( FirstVNF_RAM * BR ),( FirstVNF_CPU - ARS ) ) ,( ARS - ( ( CRS - ( MDR + FirstVNF_Mem ) ) + ARS ) ) )", "choosing": "( ( MUM / Min( MUM ,( MLU * Min( Max( ( Max( RCSe,DS ) + Min( RCSe ,RMSe ) ),RCSe ) ,Max( DS,DS ) ) ) ) ) - ( ( MLU + RRSe ) / ( DS - ( MUM * Max( Min( CS ,( ( MLU - MUC ) - MLU ) ),MUC ) ) ) ) )", "obj1": 0.7459349593495935, "obj2": 0.09111625720918921}, {"determining": "( Max( Max( Min( ( MRS * ACS ) ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( ( DS / ( MUC - MUM ) ) / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.32113821138211385, "obj2": 0.494302713446085}, {"determining": "Min( MRS ,Max( ( FirstVNF_Mem + BR ),( BR * ( Min( Min( ( DDR - CRS ) ,( MRS - ( DDR - FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( ( MUC - ( ( CS / MUC ) / MUC ) ) - MUC ) ,Min( ( ( Max( ( RCSe + MUM ),( MLU - CS ) ) + RCSe ) - RRSe ) ,MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.554973485905694}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MUR / MLU ) ,RMSe ) ) - MLU )", "obj1": 0.7134146341463414, "obj2": 0.11664282569737443}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( Const * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( Min( MUC ,CS ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "Min( ( FirstVNF_CPU / Min( PN ,AMS ) ) ,( ACS + Min( FirstVNF_CPU_Server ,( RRS * ARS ) ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( Max( MUC,DS ) + ( MUM / ( Max( RCSe,MUR ) - RCSe ) ) ) )", "obj1": 0.9552845528455285, "obj2": 0.02282602914283523}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) )", "choosing": "Min( ( ( CS + ( DS + RMSe ) ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.46960296009518787}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5301330586889882}, {"determining": "Min( ( Min( ARS ,( BR + Const ) ) + MDR ) ,( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( ( CS * Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) * ( RRSe - MUR ) ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( ( FirstVNF_Mem + RRS ),BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - MUR ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3048780487804878, "obj2": 0.5168163397247075}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "( ( ( BR + ( FirstVNF_CPU_Server - CRS ) ) * ARS ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( CS / ( ( MUC - MUM ) + ( CS * RMSe ) ) ) - DS ) )", "obj1": 0.4349593495934959, "obj2": 0.38700590309922395}, {"determining": "Min( Max( FirstVNF_CPU_Server,ACS ) ,( MDR * Min( Min( FirstVNF_RAM ,Const ) ,( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * MRS ) ) ) )", "choosing": "( ( ( MUC / Max( RRSe,RCSe ) ) * MLU ) - ( MLU + ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ) ) )", "obj1": 0.31910569105691056, "obj2": 0.5112168711682711}, {"determining": "Min( Max( AMS,( Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7296747967479674, "obj2": 0.10755887233784144}, {"determining": "Min( ( MRS / Const ) ,( ( ( ARS / FirstVNF_Mem_Server ) * ( ( ( Max( BR,( PN + PN ) ) - ( ACS - FirstVNF_CPU_Server ) ) / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( DS / CS ) ,( ( MUR * ( Min( DS ,Min( CS ,MUR ) ) / ( ( MLU - DS ) * DS ) ) ) / Min( RCSe ,CS ) ) ) / Max( MUC,( RMSe + DS ) ) )", "obj1": 0.40447154471544716, "obj2": 0.437158121012209}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Max( AMS,ARS ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( ( ( FirstVNF_RAM_Server - MRS ) / FirstVNF_Mem ) + ( FirstVNF_RAM - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( MUM + DS ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,MUR ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( DS / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe + CS ) ) ) )", "obj1": 0.36585365853658536, "obj2": 0.4609955907456165}, {"determining": "Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7398373983739838, "obj2": 0.10519783089293441}, {"determining": "Min( ( Min( Min( ( DDR * FirstVNF_RAM_Server ) ,Min( ACS ,( ARS - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( ( ARS / AMS ) * RRS ) * RRS ) - ( ACS - Max( FirstVNF_CPU_Server,( BR * MDR ) ) ) ) )", "choosing": "( ( DS + Min( ( ( RRSe + CS ) - MLU ) ,Max( MUC,( MUR - DS ) ) ) ) / ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - RMSe ) / RCSe ) + ( ( DS / Min( ( ( CS * MUC ) / ( DS - DS ) ) ,CS ) ) / ( CS + RMSe ) ) ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( DDR - RRS ) )", "choosing": "Min( ( ( MUM * Max( RRSe,MLU ) ) + ( RMSe + Max( RCSe,MUC ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Max( FirstVNF_CPU_Server,ACS ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Min( ( FirstVNF_CPU / ARS ) ,Max( MRS,( PN - MDR ) ) ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,( RCSe + RRSe ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ),CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5487079774377545}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( Max( AMS,( BR - ARS ) ) * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / MUR ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.37398373983739835, "obj2": 0.45571157816252317}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2804878048780488, "obj2": 0.5335672985611909}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( ( Min( Min( FirstVNF_CPU_Server ,DDR ) ,MRS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * Max( CS,Min( DS ,MUR ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( PN / ( RRS + Const ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUR,RCSe ) / Max( CS,( ( CS / MLU ) * Min( MUM ,MUM ) ) ) ) / MUC ) - ( ( Min( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUC / DS ) ) - ( MUR * DS ) ) ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) )", "obj1": 0.38414634146341464, "obj2": 0.45548193763351125}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.7422024261236431}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.9613821138211383, "obj2": 0.014684668301543526}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.31097560975609756, "obj2": 0.5160583268888964}, {"determining": "Min( ( FirstVNF_RAM_Server / ( Max( AMS,FirstVNF_CPU_Server ) * MDR ) ) ,( ( FirstVNF_CPU + PN ) * Max( ACS,ARS ) ) )", "choosing": "( Min( Max( MUM,RCSe ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( ( PN / PN ) - Min( ( BR * ( Min( ACS ,FirstVNF_RAM ) - Min( ( Max( BR,( PN + PN ) ) - Min( FirstVNF_Mem ,CRS ) ) ,FirstVNF_CPU_Server ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( ( ( ( CS + ( Min( ( CS * RCSe ) ,RMSe ) * RMSe ) ) - RMSe ) - ( Min( DS ,CS ) * ( MUR * ( Min( DS ,Min( CS ,CS ) ) / ( ( MLU - DS ) * DS ) ) ) ) ) * MUR ) )", "obj1": 0.39227642276422764, "obj2": 0.44547157114346825}, {"determining": "( Min( ( PN - ( Const / ( ACS * ( PN * ( ( RRS * Const ) + ( BR / FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * ( MUC / MUC ) ) + ( ( ( CS / ( ( MUR / RRSe ) + CS ) ) - ( CS - CS ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.014004323612130984}, {"determining": "( ( FirstVNF_RAM_Server + Max( CRS,( ( BR / ( Min( CRS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) ) ) / ( Min( ARS ,( ( PN / PN ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / ( ( RRSe + ( ( RCSe * RMSe ) - ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ) - RRSe ) ) + ( ( Min( MUR ,RCSe ) - ( MLU - MUC ) ) * Max( MUM,( ( MUC / Max( RRSe,RCSe ) ) * MLU ) ) ) )", "obj1": 0.08536585365853659, "obj2": 0.7505720038317084}, {"determining": "( Min( ( PN - ( Const / ACS ) ) ,Max( ( MRS / ( DDR + Max( FirstVNF_Mem_Server,( FirstVNF_RAM * PN ) ) ) ),CRS ) ) / ( Min( Min( AMS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Max( ( ( RCSe * ( MLU / DS ) ) / MUC ),RRSe ) ) + ( ( ( CS / Min( ( ( ( RCSe / RRSe ) - Min( CS ,MUC ) ) / MLU ) ,RMSe ) ) - ( ( MLU + MUC ) / Max( MUM,MUR ) ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9573170731707317, "obj2": 0.021299594802441264}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),RMSe ),MUC ) ) ,( ( RRSe * RRSe ) * ( DS + RRSe ) ) )", "obj1": 0.39634146341463417, "obj2": 0.44065568931128046}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( ( RRSe - MUC ) * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08739837398373984, "obj2": 0.7495017477263146}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( MRS ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( MUR ,Max( Max( Max( MLU,( RCSe - RCSe ) ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "Min( Max( ( ( MRS * ARS ) - CRS ),( MRS / MDR ) ) ,( PN - MDR ) )", "choosing": "( MLU - ( ( ( CS + Min( CS ,RCSe ) ) + RMSe ) / ( Min( ( DS / CS ) ,( RRSe - ( RCSe + ( MUR + DS ) ) ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.10714230939445664}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( Min( CS ,DS ) ,RMSe ) ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.3882113821138211, "obj2": 0.4492022687548012}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( RCSe / RMSe ) / DS ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( ( ARS * ARS ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe * CS ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( Min( CS ,DS ) ,RMSe ) ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.3882113821138211, "obj2": 0.4492022687548012}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( CRS ,Min( ACS ,( ARS - ( FirstVNF_RAM_Server - Min( BR ,BR ) ) ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( Min( DS ,CS ),Max( ( Max( MUC,MUM ) * MUM ),Min( MUR ,MLU ) ) ),MUC ) ) ,( DS / Max( RRSe,MUM ) ) )", "obj1": 0.4024390243902439, "obj2": 0.4401721384344387}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( MRS ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( MUR ,Max( Max( Max( MLU,( RCSe - RCSe ) ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "( ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + Max( MRS,( ( ( CRS + Const ) + FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - ( RRSe + RMSe ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( Min( MUC ,RMSe ),RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( ( CRS * RRS ) * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,MUC ) ) * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - DS ) )", "obj1": 0.40040650406504064, "obj2": 0.44034109952527434}, {"determining": "( ( Min( ( Min( AMS ,Min( RRS ,Const ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( MUC ,( ( RMSe - MUM ) - ( ( MUC * ( CS + MUR ) ) + ( MUC / MLU ) ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.0023276466880874365}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( MDR * MDR ) )", "choosing": "( ( Min( ( ( RMSe * ( ( ( MUR * RRSe ) - ( MUM * MUM ) ) / ( RMSe - ( CS - DS ) ) ) ) + MUR ) ,( CS / CS ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * MRS ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( ACS,Const ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + ( ( Max( MUM,DS ) / RCSe ) / Min( MUM ,( CS / MUM ) ) ) ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.00052460722251585}, {"determining": "( ( Min( ( CRS * DDR ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MLU / CS ) - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( ( MUM * DS ) * Max( MUM,MUM ) ) / DS ) ) ) + ( ( RCSe - RRSe ) - ( ( Max( MLU,Max( RCSe,MUM ) ) - MUR ) * Max( MLU,RMSe ) ) ) ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( RRS + PN ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( ( RRSe / RCSe ) ,MUC ) ) ) ) + MUR ) ) ,( DS / ( RMSe + ( ( RRSe + DS ) / MUM ) ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0013664756328364612}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( RRS + PN ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( ( RRSe / RCSe ) ,MUC ) ) ) ) + MUR ) ) ,( DS / ( RMSe + ( ( RRSe + DS ) / MUM ) ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0013664756328364612}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( Min( MRS ,Max( FirstVNF_RAM_Server,Const ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( CS * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + MDR ) / Const ) - ( ( FirstVNF_CPU / MDR ) + ARS ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * ( CS / RCSe ) ) ) * Max( MUR,MLU ) ),( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * Min( ( MUC / ( ( RCSe * MUM ) * DS ) ) ,MLU ) ) * Min( MUR ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MUC,MUM ) * MUM ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR * Const ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - ( DDR / MRS ) ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( BR * ACS ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,RMSe ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + Min( ( DS / CS ) ,( MUR - Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Max( ( PN * ACS ),Min( FirstVNF_RAM ,ACS ) ) ,MRS ) + BR ) ,( ( ( Min( ( FirstVNF_RAM_Server / MRS ) ,FirstVNF_RAM ) + Max( CRS,( Const - AMS ) ) ) + FirstVNF_RAM ) - AMS ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ),Max( ( CS / ( MUC * RCSe ) ),( ( ( RMSe + ( ( RMSe - ( DS + RMSe ) ) * RMSe ) ) + ( MUM + ( RMSe * DS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / Min( MRS ,( DDR * ACS ) ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * MLU ) - ( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( RCSe + ( MUR * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( RRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( ( MUR - MUC ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) / ( FirstVNF_CPU * MDR ) )", "choosing": "( ( ( DS - ( RRSe + ( MUM / Min( MUM ,( CS / MUM ) ) ) ) ) + MUM ) - ( CS - ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * ( FirstVNF_CPU_Server * Min( BR ,Min( CRS ,MDR ) ) ) ) - ( Const - FirstVNF_RAM ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / ( Const - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * Max( RCSe,MUM ) ) - ( RCSe * Max( MLU,Max( MUM,( MUM * ( RMSe * ( MUR - MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - Min( AMS ,( DDR / RRS ) ) ) / ( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MLU + MUM ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ACS * CRS ) ,AMS ) * PN ) - Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_RAM_Server * AMS ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC / ( RMSe * ( ( MUM / MUM ) * MUM ) ) ) ,Min( RRSe ,( Max( RRSe,MUM ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + PN ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( ( RMSe * DS ) - ( RRSe + ( MUM / ( RRSe / RMSe ) ) ) ),RRSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( ( ACS + FirstVNF_CPU_Server ),MDR ) - RRS ),( FirstVNF_RAM_Server - CRS ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( MUM + ( MUC / ( ( MUM + Min( ( MUM * MUM ) ,CS ) ) - MUC ) ) ) * MUR ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( DDR / ( ACS / ( ACS * MDR ) ) ) ,( DDR * ARS ) ) / ( Max( Max( MDR,FirstVNF_CPU ),FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( MUR - Min( ( Max( ( MUR + DS ),CS ) - RMSe ) ,MUC ) ) ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( DDR,MDR ) / ( CRS / PN ) ) + ( ( Const * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,( CRS + ( FirstVNF_CPU + PN ) ) ) ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( ARS * AMS ) ) )", "choosing": "( ( Min( DS ,MUC ) / ( CS - MUM ) ) + ( Min( ( MUR + Min( RRSe ,( Min( MUC ,Max( CS,RMSe ) ) + Max( MUR,Max( CS,MUC ) ) ) ) ) ,Max( CS,RRSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( PN ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU * DDR ) ) ,( ( RRS * ARS ) - Max( FirstVNF_RAM_Server,CRS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( ( ( MUR * MUR ) + MUR ) / ( MUM + MUR ) ) ) + ( ( MUC * MUC ) + Max( MUC,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "Min( ( ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( ( FirstVNF_CPU / ( FirstVNF_CPU - RRS ) ) / Const ) ) ) * ACS ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,( RRSe / DS ) ) ),( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( ( FirstVNF_CPU / MDR ) + ( FirstVNF_Mem_Server / Max( MRS,Max( ACS,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * ( Max( MLU,RCSe ) + RCSe ) ) * Min( MUR ,DS ) ) + ( ( ( RRSe + MUM ) * ( RMSe + RRSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - Max( ACS,( FirstVNF_Mem_Server / AMS ) ) ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,( ( FirstVNF_Mem + RRS ) * FirstVNF_Mem ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / DS ) + Max( Max( RCSe,MUR ),MLU ) )", "obj1": 0.07926829268292683, "obj2": 0.756486022920312}, {"determining": "Min( ( MRS / Const ) ,( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - ( Const - ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS / CS ) ,( MUM / Min( Max( Max( MUM,MUR ),Max( MLU,CS ) ) ,CS ) ) ) / ( ( ( Max( Max( ( MUR / ( RCSe - RRSe ) ),CS ),( ( MUC - Min( CS ,CS ) ) / CS ) ) * ( MUC + MLU ) ) / ( ( MUC + MUC ) + ( MUM - DS ) ) ) / DS ) )", "obj1": 0.6056910569105691, "obj2": 0.21314489411551926}, {"determining": "Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( ( RRSe * DS ) / ( RRSe / ( DS * MLU ) ) ) ) )", "obj1": 0.6910569105691057, "obj2": 0.1871274423146118}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "Min( MRS ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.24796747967479674, "obj2": 0.5696451683508261}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8902439024390244, "obj2": 0.04176253353843697}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( MRS ,MDR ) ) * ( FirstVNF_CPU_Server * ( ( RRS / ( FirstVNF_CPU_Server - AMS ) ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( Min( RMSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.766260162601626, "obj2": 0.07510903232372351}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + ( MLU + Min( RRSe ,Max( MLU,RCSe ) ) ) )", "obj1": 0.5548780487804879, "obj2": 0.23786531304784386}, {"determining": "Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( ( RRSe * DS ) / ( RRSe / ( DS * MLU ) ) ) ) )", "obj1": 0.7012195121951219, "obj2": 0.1761458835121544}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ),Max( AMS,MDR ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * CS ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * ( DS * ( MUR * Max( MUR,MUC ) ) ) ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8150406504065041, "obj2": 0.06978064250920878}, {"determining": "( Max( ( ( Const - FirstVNF_RAM ) * FirstVNF_RAM_Server ),RRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) * Min( Min( ( RMSe / ( MUC / Max( Max( MLU,MUR ),Min( Min( MLU ,RRSe ) ,RCSe ) ) ) ) ,MLU ) ,( Max( ( MLU * MUR ),( Max( ( RMSe * Min( DS ,MUM ) ),MUC ) / Min( ( MUM * Min( MUM ,MLU ) ) ,( MUM * DS ) ) ) ) / ( MUR / ( ( ( CS * ( RCSe + MUC ) ) - RMSe ) / ( ( ( MUM - MUR ) - ( RMSe + DS ) ) - MUR ) ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.7036733638876238}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9207317073170732, "obj2": 0.02866187901897091}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5772357723577236, "obj2": 0.22947153103099036}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / ( ( ( ( Min( ( MUC * DS ) ,( MUR + MUC ) ) / Max( RRSe,RCSe ) ) / RMSe ) / CS ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.7052845528455285, "obj2": 0.12642085898705085}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8434959349593496, "obj2": 0.052442122598040604}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "Min( Max( RRS,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Min( Min( ( RRS * FirstVNF_Mem ) ,FirstVNF_RAM ) ,MDR ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( ( RCSe * RRSe ) * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.16260162601626016, "obj2": 0.6693672618102888}, {"determining": "Min( ( ( DDR + ARS ) - FirstVNF_Mem_Server ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * ( CS / MUM ) ) / ( ( RRSe - RMSe ) * ( ( MUR - ( Max( RMSe,MUR ) * CS ) ) - MLU ) ) ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) )", "obj1": 0.4532520325203252, "obj2": 0.3660506287979113}, {"determining": "Min( Max( ( FirstVNF_RAM * BR ),( FirstVNF_CPU - ARS ) ) ,( ARS - ( ( CRS - ( MDR + FirstVNF_Mem ) ) + ARS ) ) )", "choosing": "( ( MUM / Min( MUM ,( MLU * Min( Max( ( Max( RCSe,DS ) + Min( RCSe ,RMSe ) ),RCSe ) ,Max( DS,DS ) ) ) ) ) - ( ( MLU + RRSe ) / ( DS - ( MUM * Max( Min( CS ,( ( MLU - MUC ) - MLU ) ),MUC ) ) ) ) )", "obj1": 0.7459349593495935, "obj2": 0.09111625720918921}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.40853658536585363, "obj2": 0.40795315734292575}, {"determining": "( Max( Max( Min( ( MRS * ACS ) ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( ( DS / ( MUC - MUM ) ) / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.32113821138211385, "obj2": 0.494302713446085}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.056656275837327706}, {"determining": "( ( Min( PN ,PN ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) / ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( CS / ( MUC * RMSe ) ) * ( ( MUM / ( MLU * ( MUC / MUC ) ) ) / ( RMSe - ( CS * ( MUR * RCSe ) ) ) ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.11382113821138211, "obj2": 0.723705035495608}, {"determining": "Min( MRS ,Max( ( FirstVNF_Mem + BR ),( BR * ( Min( Min( ( DDR - CRS ) ,( MRS - ( DDR - FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( ( MUC - ( ( CS / MUC ) / MUC ) ) - MUC ) ,Min( ( ( Max( ( RCSe + MUM ),( MLU - CS ) ) + RCSe ) - RRSe ) ,MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.554973485905694}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( ( Min( Min( FirstVNF_CPU_Server ,DDR ) ,MRS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * Max( CS,Min( DS ,MUR ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,DDR ) )", "choosing": "( ( MLU / ( MLU * ( ( ( ( CS - RMSe ) + MUR ) - DS ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.40447154471544716, "obj2": 0.42593934484140245}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) )", "choosing": "Min( ( ( CS + ( DS + RMSe ) ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.46960296009518787}, {"determining": "Min( ( Min( ARS ,( BR + Const ) ) + MDR ) ,( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( ( CS * Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) * ( RRSe - MUR ) ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "( Min( ( PN - ( Const / ACS ) ) ,Max( ( MRS / ( DDR + Max( FirstVNF_Mem_Server,( FirstVNF_RAM * PN ) ) ) ),CRS ) ) / ( Min( Min( AMS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Max( ( ( RCSe * ( MLU / DS ) ) / MUC ),RRSe ) ) + ( ( ( CS / Min( ( ( ( RCSe / RRSe ) - Min( CS ,MUC ) ) / MLU ) ,RMSe ) ) - ( ( MLU + MUC ) / Max( MUM,MUR ) ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9532520325203252, "obj2": 0.026136976575816085}, {"determining": "( ( ( BR + ( FirstVNF_CPU_Server - CRS ) ) * ARS ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( CS / ( ( MUC - MUM ) + ( CS * RMSe ) ) ) - DS ) )", "obj1": 0.4349593495934959, "obj2": 0.38700590309922395}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,Min( BR ,MRS ) ) * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,DS ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.3150406504065041, "obj2": 0.5021606663780508}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * MUR ) ,Max( ( MUM / ( RRSe / RMSe ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2886178861788618, "obj2": 0.5176160361980437}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Max( AMS,ARS ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( ( ( FirstVNF_RAM_Server - MRS ) / FirstVNF_Mem ) + ( FirstVNF_RAM - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( MUM + DS ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,MUR ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( DS / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe + CS ) ) ) )", "obj1": 0.36585365853658536, "obj2": 0.4609955907456165}, {"determining": "Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7398373983739838, "obj2": 0.10519783089293441}, {"determining": "Min( ( FirstVNF_RAM_Server / ( Max( AMS,FirstVNF_CPU_Server ) * MDR ) ) ,( ( FirstVNF_CPU + PN ) * Max( ACS,ARS ) ) )", "choosing": "( Min( Max( MUM,RCSe ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( DDR - RRS ) )", "choosing": "Min( ( ( MUM * Max( RRSe,MLU ) ) + ( RMSe + Max( RCSe,MUC ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.31097560975609756, "obj2": 0.5160583268888964}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5301330586889882}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Max( FirstVNF_CPU_Server,ACS ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Min( ( FirstVNF_CPU / ARS ) ,Max( MRS,( PN - MDR ) ) ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,( RCSe + RRSe ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ),CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5487079774377545}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( Max( AMS,( BR - ARS ) ) * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / MUR ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.37398373983739835, "obj2": 0.45571157816252317}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( ( FirstVNF_Mem + RRS ),BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - MUR ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3048780487804878, "obj2": 0.5168163397247075}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2804878048780488, "obj2": 0.5335672985611909}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( DDR / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( RMSe,( MUC - RCSe ) ) / Min( ( MUR / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7215447154471545, "obj2": 0.11394014997581521}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( Const * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( Min( MUC ,CS ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.7422024261236431}, {"determining": "( ( FirstVNF_Mem_Server - Min( Min( CRS ,Min( ACS ,( ARS - ( FirstVNF_RAM_Server - Min( BR ,BR ) ) ) ) ) ,FirstVNF_Mem_Server ) ) - ( BR * FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( Min( DS ,CS ),Max( ( Max( MUC,MUM ) * MUM ),Min( MUR ,MLU ) ) ),MUC ) ) ,( DS / Max( RRSe,MUM ) ) )", "obj1": 0.4024390243902439, "obj2": 0.4401721384344387}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.9613821138211383, "obj2": 0.014684668301543526}, {"determining": "Min( ( Min( Min( ( DDR * FirstVNF_RAM_Server ) ,Min( ACS ,( ARS - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( ( ARS / AMS ) * RRS ) * RRS ) - ( ACS - Max( FirstVNF_CPU_Server,( BR * MDR ) ) ) ) )", "choosing": "( ( DS + Min( ( ( RRSe + CS ) - MLU ) ,Max( MUC,( MUR - DS ) ) ) ) / ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - RMSe ) / RCSe ) + ( ( DS / Min( ( ( CS * MUC ) / ( DS - DS ) ) ,CS ) ) / ( CS + RMSe ) ) ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( ( PN / PN ) - Min( ( BR * ( Min( ACS ,FirstVNF_RAM ) - Min( ( Max( BR,( PN + PN ) ) - Min( FirstVNF_Mem ,CRS ) ) ,FirstVNF_CPU_Server ) ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS / MUC ) - ( ( ( ( CS + ( Min( ( CS * RCSe ) ,RMSe ) * RMSe ) ) - RMSe ) - ( Min( DS ,CS ) * ( MUR * ( Min( DS ,Min( CS ,CS ) ) / ( ( MLU - DS ) * DS ) ) ) ) ) * MUR ) )", "obj1": 0.39227642276422764, "obj2": 0.44547157114346825}, {"determining": "Min( Max( AMS,( ( CRS * ( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( RMSe - DS ) ) )", "obj1": 0.709349593495935, "obj2": 0.11907416053183334}, {"determining": "Min( Max( ( Max( ARS,FirstVNF_CPU ) / ( RRS * RRS ) ),( ( CRS * RRS ) - ( ACS - ( DDR + FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( MLU,MUC ) / RCSe ) - ( CS - Max( Min( RMSe ,MUR ),( MUR * ( ( RCSe * RCSe ) * MUR ) ) ) ) )", "obj1": 0.7113821138211383, "obj2": 0.11622432521475008}, {"determining": "( Min( ( PN - ( Const / ( ACS * ( PN * ( ( RRS * Const ) + ( BR / FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * ( MUC / MUC ) ) + ( ( ( CS / ( ( MUR / RRSe ) + CS ) ) - ( CS - CS ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.014004323612130984}, {"determining": "( ( FirstVNF_RAM_Server + Max( CRS,( ( BR / ( Min( CRS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) ) ) / ( Min( ARS ,( ( PN / PN ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / ( ( RRSe + ( ( RCSe * RMSe ) - ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ) - RRSe ) ) + ( ( Min( MUR ,RCSe ) - ( MLU - MUC ) ) * Max( MUM,( ( MUC / Max( RRSe,RCSe ) ) * MLU ) ) ) )", "obj1": 0.08536585365853659, "obj2": 0.7505720038317084}, {"determining": "( Min( ( PN - ( Const / ACS ) ) ,Max( ( MRS / ( DDR + Max( FirstVNF_Mem_Server,( FirstVNF_RAM * PN ) ) ) ),CRS ) ) / ( Min( Min( AMS ,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( Min( DS ,MUC ) / Max( ( ( RCSe * ( MLU / DS ) ) / MUC ),RRSe ) ) + ( ( ( CS / Min( ( ( ( RCSe / RRSe ) - Min( CS ,MUC ) ) / MLU ) ,RMSe ) ) - ( ( MLU + MUC ) / Max( MUM,MUR ) ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9573170731707317, "obj2": 0.021299594802441264}, {"determining": "Min( Max( AMS,( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ( Const * Max( Max( FirstVNF_CPU_Server,RRS ),ARS ) ) - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( ( ( MUM + ( CS / ( ( CS + MUC ) + CS ) ) ) - MUR ) + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / ( ( ( RRSe - MUC ) * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) ) ) ) )", "obj1": 0.725609756097561, "obj2": 0.1089024904910045}, {"determining": "( ( PN / ( RRS + Const ) ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) )", "choosing": "( ( ( Max( MUR,RCSe ) / Max( CS,( ( CS / MLU ) * Min( MUM ,MUM ) ) ) ) / MUC ) - ( ( Min( ( ( ( CS - MUM ) * MUR ) / ( ( MUR - ( MUC / DS ) ) - ( MUR * DS ) ) ) ,Min( MUR ,MLU ) ) - ( Min( DS ,CS ) * ( MUR * CS ) ) ) * CS ) )", "obj1": 0.38414634146341464, "obj2": 0.45548193763351125}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),RMSe ),MUC ) ) ,( ( RRSe * RRSe ) * ( DS + RRSe ) ) )", "obj1": 0.39634146341463417, "obj2": 0.44065568931128046}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( ( RRSe - MUC ) * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08739837398373984, "obj2": 0.7495017477263146}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( ( CRS * RRS ) ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,( RRSe - MUR ) ) - ( Min( MUR ,Max( Max( Max( MLU,( RCSe - RCSe ) ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "Min( Max( ( ( MRS * ARS ) - CRS ),( MRS / MDR ) ) ,( PN - MDR ) )", "choosing": "( MLU - ( ( ( CS + Min( CS ,RCSe ) ) + RMSe ) / ( Min( ( DS / CS ) ,( RRSe - ( RCSe + ( MUR + DS ) ) ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.10714230939445664}, {"determining": "Min( Max( AMS,( Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7296747967479674, "obj2": 0.10755887233784144}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - MDR ) ) - ( BR * ACS ) ) ) )", "choosing": "Min( ( ( RRSe - CS ) * Max( Max( ( Min( ( ( RMSe - MLU ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),RMSe ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.3861788617886179, "obj2": 0.4530357046754446}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( RCSe / RMSe ) / DS ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "Min( ( FirstVNF_CPU / Min( PN ,AMS ) ) ,( ACS + Min( FirstVNF_CPU_Server ,( RRS * ARS ) ) ) )", "choosing": "Max( ( MUC * Max( MUR,MLU ) ),( Max( MUC,DS ) + ( MUM / ( Max( RCSe,MUR ) - RCSe ) ) ) )", "obj1": 0.9552845528455285, "obj2": 0.02282602914283523}, {"determining": "( ( ARS * ARS ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe * CS ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( Min( CS ,DS ) ,RMSe ) ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.3882113821138211, "obj2": 0.4492022687548012}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( MRS ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( MUR ,Max( Max( Max( MLU,( RCSe - RCSe ) ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( MDR * MDR ) )", "choosing": "( ( Min( ( ( RMSe * ( ( ( MUR * RRSe ) - ( MUM * MUM ) ) / ( RMSe - ( CS - DS ) ) ) ) + MUR ) ,( CS / CS ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( ( CRS * RRS ) * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,MUC ) ) * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - DS ) )", "obj1": 0.40040650406504064, "obj2": 0.44034109952527434}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( CS / Min( Min( CS ,DS ) ,RMSe ) ) - ( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) ) ),CS ) ) )", "obj1": 0.3882113821138211, "obj2": 0.4492022687548012}, {"determining": "( ( Min( ( Min( AMS ,Min( RRS ,Const ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( MUC ,( ( RMSe - MUM ) - ( ( MUC * ( CS + MUR ) ) + ( MUC / MLU ) ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.0023276466880874365}, {"determining": "( ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + Max( MRS,( ( ( CRS + Const ) + FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - ( RRSe + RMSe ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( Min( MUC ,RMSe ),RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * MRS ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( ACS,Const ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + ( ( Max( MUM,DS ) / RCSe ) / Min( MUM ,( CS / MUM ) ) ) ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.00052460722251585}, {"determining": "( ( Min( ( CRS * DDR ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MLU / CS ) - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( ( MUM * DS ) * Max( MUM,MUM ) ) / DS ) ) ) + ( ( RCSe - RRSe ) - ( ( Max( MLU,Max( RCSe,MUM ) ) - MUR ) * Max( MLU,RMSe ) ) ) ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( RRS + PN ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( ( RRSe / RCSe ) ,MUC ) ) ) ) + MUR ) ) ,( DS / ( RMSe + ( ( RRSe + DS ) / MUM ) ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0013664756328364612}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( RRS + PN ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( ( RRSe / RCSe ) ,MUC ) ) ) ) + MUR ) ) ,( DS / ( RMSe + ( ( RRSe + DS ) / MUM ) ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0013664756328364612}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( Min( MRS ,Max( FirstVNF_RAM_Server,Const ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( CS * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "( ( ( ( ( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( CRS * MDR ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Max( ACS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( Min( MUC ,RRSe ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + MDR ) / Const ) - ( ( FirstVNF_CPU / MDR ) + ARS ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * ( CS / RCSe ) ) ) * Max( MUR,MLU ) ),( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * Min( ( MUC / ( ( RCSe * MUM ) * DS ) ) ,MLU ) ) * Min( MUR ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MUC,MUM ) * MUM ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR * Const ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - ( DDR / MRS ) ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( BR * ACS ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,RMSe ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + Min( ( DS / CS ) ,( MUR - Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Max( ( PN * ACS ),Min( FirstVNF_RAM ,ACS ) ) ,MRS ) + BR ) ,( ( ( Min( ( FirstVNF_RAM_Server / MRS ) ,FirstVNF_RAM ) + Max( CRS,( Const - AMS ) ) ) + FirstVNF_RAM ) - AMS ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ),Max( ( CS / ( MUC * RCSe ) ),( ( ( RMSe + ( ( RMSe - ( DS + RMSe ) ) * RMSe ) ) + ( MUM + ( RMSe * DS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / Min( MRS ,( DDR * ACS ) ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * MLU ) - ( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( RCSe + ( MUR * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( RRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( ( MUR - MUC ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / Min( MRS ,( DDR * ACS ) ) ) ) ) )", "choosing": "Max( RCSe,( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( RCSe + ( MUR * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( ( FirstVNF_CPU / ( FirstVNF_CPU - RRS ) ) / Const ) ) ) * ACS ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,( RRSe / DS ) ) ),( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - Max( ACS,( FirstVNF_Mem_Server / AMS ) ) ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,( ( FirstVNF_Mem + RRS ) * FirstVNF_Mem ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / DS ) + Max( Max( RCSe,MUR ),MLU ) )", "obj1": 0.07926829268292683, "obj2": 0.756486022920312}, {"determining": "Min( ( MRS / Const ) ,( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - ( Const - ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS / CS ) ,( MUM / Min( Max( Max( MUM,MUR ),Max( MLU,CS ) ) ,CS ) ) ) / ( ( ( Max( Max( ( MUR / ( RCSe - RRSe ) ),CS ),( ( MUC - Min( CS ,CS ) ) / CS ) ) * ( MUC + MLU ) ) / ( ( MUC + MUC ) + ( MUM - DS ) ) ) / DS ) )", "obj1": 0.6056910569105691, "obj2": 0.21314489411551926}, {"determining": "Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( ( RRSe * DS ) / ( RRSe / ( DS * MLU ) ) ) ) )", "obj1": 0.6910569105691057, "obj2": 0.1871274423146118}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8902439024390244, "obj2": 0.04176253353843697}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "( Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( MRS ,MDR ) ) * ( FirstVNF_CPU_Server * ( ( RRS / ( FirstVNF_CPU_Server - AMS ) ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( Min( RMSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.766260162601626, "obj2": 0.07510903232372351}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + ( MLU + Min( RRSe ,Max( MLU,RCSe ) ) ) )", "obj1": 0.5548780487804879, "obj2": 0.23786531304784386}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ),Max( AMS,MDR ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * CS ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * ( DS * ( MUR * Max( MUR,MUC ) ) ) ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8150406504065041, "obj2": 0.06978064250920878}, {"determining": "( Max( ( ( Const - FirstVNF_RAM ) * FirstVNF_RAM_Server ),RRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) * Min( Min( ( RMSe / ( MUC / Max( Max( MLU,MUR ),Min( Min( MLU ,RRSe ) ,RCSe ) ) ) ) ,MLU ) ,( Max( ( MLU * MUR ),( Max( ( RMSe * Min( DS ,MUM ) ),MUC ) / Min( ( MUM * Min( MUM ,MLU ) ) ,( MUM * DS ) ) ) ) / ( MUR / ( ( ( CS * ( RCSe + MUC ) ) - RMSe ) / ( ( ( MUM - MUR ) - ( RMSe + DS ) ) - MUR ) ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.7036733638876238}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5772357723577236, "obj2": 0.22947153103099036}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.22967479674796748, "obj2": 0.5880922496274563}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8394308943089431, "obj2": 0.049905995973038464}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "Min( Max( RRS,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Min( Min( ( RRS * FirstVNF_Mem ) ,FirstVNF_RAM ) ,MDR ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( ( RCSe * RRSe ) * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.16260162601626016, "obj2": 0.6693672618102888}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.3699186991869919, "obj2": 0.43434950466899847}, {"determining": "Min( ( DDR / Min( ( FirstVNF_Mem * ( MDR - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ) - ( ( CS + MUC ) * ( Min( ( CS / MUC ) ,( RMSe * ( MUC - MUC ) ) ) + Max( ( MLU * Min( DS ,MUC ) ),CS ) ) ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2459349593495935, "obj2": 0.5637004437884627}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( ( ( Max( ACS,FirstVNF_RAM_Server ) * PN ) * RRS ) * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( DS * ( CS / RCSe ) ) ) * Max( MUR,MLU ) ),( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * Min( MUM ,MLU ) ) * Min( MUR ,DS ) ) ) - Min( MUM ,MUC ) ) * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - DS ) )", "obj1": 0.3943089430894309, "obj2": 0.42219957579365114}, {"determining": "Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( ( RRSe * DS ) / ( RRSe / ( DS * MLU ) ) ) ) )", "obj1": 0.7012195121951219, "obj2": 0.1761458835121544}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9207317073170732, "obj2": 0.02866187901897091}, {"determining": "Min( Max( Min( FirstVNF_RAM ,Const ),( ( CRS * RRS ) - ( ACS - ( ( MDR - FirstVNF_CPU_Server ) / ( MRS * MDR ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( MLU - ( ( MLU + RRSe ) / ( ( CS - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 0.7032520325203252, "obj2": 0.14087701230761862}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.40853658536585363, "obj2": 0.40795315734292575}, {"determining": "Min( ( ( DDR + ARS ) - FirstVNF_Mem_Server ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * ( CS / MUM ) ) / ( ( RRSe - RMSe ) * ( ( MUR - ( Max( RMSe,MUR ) * CS ) ) - MLU ) ) ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) )", "obj1": 0.4532520325203252, "obj2": 0.3660506287979113}, {"determining": "Min( Max( ( FirstVNF_RAM * BR ),( FirstVNF_CPU - ARS ) ) ,( ARS - ( ( CRS - ( MDR + FirstVNF_Mem ) ) + ARS ) ) )", "choosing": "( ( MUM / Min( MUM ,( MLU * Min( Max( ( Max( RCSe,DS ) + Min( RCSe ,RMSe ) ),RCSe ) ,Max( DS,DS ) ) ) ) ) - ( ( MLU + RRSe ) / ( DS - ( MUM * Max( Min( CS ,( ( MLU - MUC ) - MLU ) ),MUC ) ) ) ) )", "obj1": 0.7459349593495935, "obj2": 0.09111625720918921}, {"determining": "( Max( Max( Min( ( MRS * ACS ) ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( ( DS / ( MUC - MUM ) ) / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.32113821138211385, "obj2": 0.494302713446085}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Max( AMS,ARS ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( ( ( FirstVNF_RAM_Server - MRS ) / FirstVNF_Mem ) + ( FirstVNF_RAM - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( MUM + DS ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,MUR ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( DS / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe + CS ) ) ) )", "obj1": 0.36585365853658536, "obj2": 0.4609955907456165}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "( ( Min( PN ,PN ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) / ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( CS / ( MUC * RMSe ) ) * ( ( MUM / ( MLU * ( MUC / MUC ) ) ) / ( RMSe - ( CS * ( MUR * RCSe ) ) ) ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.11382113821138211, "obj2": 0.723705035495608}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.056656275837327706}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( Min( MUC ,CS ) - ( ( RRSe * RRSe ) * ( RCSe / ( RMSe - DS ) ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) )", "choosing": "Min( ( ( CS + ( DS + RMSe ) ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.46960296009518787}, {"determining": "Min( ( Min( ARS ,( BR + Const ) ) + MDR ) ,( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( ( CS * Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) * ( RRSe - MUR ) ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "Min( MRS ,Max( ( FirstVNF_Mem + BR ),( BR * ( Min( Min( ( DDR - CRS ) ,( MRS - ( DDR - FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( ( MUC - ( ( CS / MUC ) / MUC ) ) - MUC ) ,Min( ( ( Max( ( RCSe + MUM ),( MLU - CS ) ) + RCSe ) - RRSe ) ,MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.554973485905694}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "( ( ( BR + ( FirstVNF_CPU_Server - CRS ) ) * ARS ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( CS / ( ( MUC - MUM ) + ( CS * RMSe ) ) ) - DS ) )", "obj1": 0.4349593495934959, "obj2": 0.38700590309922395}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.9613821138211383, "obj2": 0.014684668301543526}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ) ) + MRS ) ) + Min( Max( DDR,AMS ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( RRSe * RRSe ) * Min( Min( ( MUC + Max( CS,CS ) ) ,( Min( RRSe ,MUR ) * MLU ) ) ,CS ) ) * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9390243902439024, "obj2": 0.02129715060472555}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * MUR ) ,Max( ( MUM / ( RRSe / RMSe ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2886178861788618, "obj2": 0.5176160361980437}, {"determining": "Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7398373983739838, "obj2": 0.10519783089293441}, {"determining": "Min( ( Min( Min( ( DDR * FirstVNF_RAM_Server ) ,Min( ACS ,( ARS - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( ( ARS / AMS ) * RRS ) * RRS ) - ( ACS - Max( FirstVNF_CPU_Server,( BR * MDR ) ) ) ) )", "choosing": "( ( DS + Min( ( ( RRSe + CS ) - MLU ) ,Max( MUC,( MUR - DS ) ) ) ) / ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - RMSe ) / RCSe ) + ( ( DS / Min( ( ( CS * MUC ) / ( DS - DS ) ) ,CS ) ) / ( CS + RMSe ) ) ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( BR * ACS ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / ( ( ( ( Min( ( MUC * DS ) ,( MUR + MUC ) ) / Max( RRSe,RCSe ) ) / RMSe ) / CS ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.7052845528455285, "obj2": 0.12642085898705085}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( DDR - RRS ) )", "choosing": "Min( ( ( MUM * Max( RRSe,MLU ) ) + ( RMSe + Max( RCSe,MUC ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5301330586889882}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / Max( MUC,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9349593495934959, "obj2": 0.024674951185628947}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Max( FirstVNF_CPU_Server,ACS ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Min( ( FirstVNF_CPU / ARS ) ,Max( MRS,( PN - MDR ) ) ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,( RCSe + RRSe ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ),CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5487079774377545}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( ( FirstVNF_Mem + RRS ),BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - MUR ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3048780487804878, "obj2": 0.5168163397247075}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2804878048780488, "obj2": 0.5335672985611909}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.31097560975609756, "obj2": 0.5160583268888964}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( DDR / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( RMSe,( MUC - RCSe ) ) / Min( ( MUR / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7215447154471545, "obj2": 0.11394014997581521}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( ( Min( Min( FirstVNF_CPU_Server ,DDR ) ,MRS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * Max( CS,Min( DS ,MUR ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( ARS - CRS ) ,FirstVNF_CPU ) ,Min( ( AMS / FirstVNF_Mem ) ,FirstVNF_Mem ) ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( Max( RMSe,RCSe ) + RMSe ) / RRSe ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( ( MUR - ( ( DS / Max( DS,RMSe ) ) + CS ) ) + MUC ) ) ) * CS )", "obj1": 0.3130081300813008, "obj2": 0.5044245150747501}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,Min( BR ,MRS ) ) * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,DS ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.3150406504065041, "obj2": 0.5021606663780508}, {"determining": "( ( FirstVNF_RAM_Server + Max( CRS,( ( BR / ( Min( CRS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) ) ) / ( Min( ARS ,( ( PN / PN ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / ( ( RRSe + ( ( RCSe * RMSe ) - ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ) - RRSe ) ) + ( ( Min( MUR ,RCSe ) - ( MLU - MUC ) ) * Max( MUM,( ( MUC / Max( RRSe,RCSe ) ) * MLU ) ) ) )", "obj1": 0.08536585365853659, "obj2": 0.7505720038317084}, {"determining": "Min( ( FirstVNF_RAM_Server / ( Max( AMS,FirstVNF_CPU_Server ) * MDR ) ) ,( ( FirstVNF_CPU + PN ) * Max( ACS,ARS ) ) )", "choosing": "( Min( Max( MUM,RCSe ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.7422024261236431}, {"determining": "Min( Max( ( Max( ARS,FirstVNF_CPU ) / ( RRS * RRS ) ),( ( CRS * RRS ) - ( ACS - ( DDR + FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( MLU,MUC ) / RCSe ) - ( CS - Max( Min( RMSe ,MUR ),( MUR * ( ( RCSe * RCSe ) * MUR ) ) ) ) )", "obj1": 0.7113821138211383, "obj2": 0.11622432521475008}, {"determining": "( Min( ( PN - ( Const / ( ACS * ( PN * ( ( RRS * Const ) + ( BR / FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * ( MUC / MUC ) ) + ( ( ( CS / ( ( MUR / RRSe ) + CS ) ) - ( CS - CS ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.014004323612130984}, {"determining": "Min( Max( AMS,( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ( Const * Max( Max( FirstVNF_CPU_Server,RRS ),ARS ) ) - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( ( ( MUM + ( CS / ( ( CS + MUC ) + CS ) ) ) - MUR ) + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / ( ( ( RRSe - MUC ) * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) ) ) ) )", "obj1": 0.725609756097561, "obj2": 0.1089024904910045}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ) + FirstVNF_CPU_Server ) ) + Min( Max( Max( MDR,BR ),RRS ) ,( ( MRS / ( FirstVNF_CPU_Server * PN ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( ( RRSe - MUC ) * ( ( RCSe * MUM ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08739837398373984, "obj2": 0.7467413685233467}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( MRS ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( MUR ,Max( Max( Max( MLU,( RCSe - RCSe ) ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "Min( Max( Min( FirstVNF_RAM ,Const ),( CRS * RRS ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe - RMSe ) * ( ( MUR - ( Max( RMSe,MUR ) * CS ) ) - MLU ) ) - ( ( MLU + RRSe ) / ( ( Max( RRSe,MUC ) - DS ) * Max( MUM,MUM ) ) ) )", "obj1": 0.7073170731707317, "obj2": 0.12057208708244631}, {"determining": "Min( Max( AMS,( Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7296747967479674, "obj2": 0.10755887233784144}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( RCSe / RMSe ) / DS ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "Min( Max( AMS,( ( CRS * ( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( RMSe - DS ) ) )", "obj1": 0.709349593495935, "obj2": 0.11907416053183334}, {"determining": "Min( Max( ( ( MRS * ARS ) - CRS ),( MRS / MDR ) ) ,( PN - MDR ) )", "choosing": "( MLU - ( ( ( CS + Min( CS ,RCSe ) ) + RMSe ) / ( Min( ( DS / CS ) ,( RRSe - ( RCSe + ( MUR + DS ) ) ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.10714230939445664}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( ( CRS * RRS ) ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,( RRSe - MUR ) ) - ( Min( MUR ,Max( Max( Max( MLU,( RCSe - RCSe ) ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "( ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + Max( MRS,( ( ( CRS + Const ) + FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - ( RRSe + RMSe ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( Min( MUC ,RMSe ),RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "( ( Min( ( Min( AMS ,Min( RRS ,Const ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( MUC ,( ( RMSe - MUM ) - ( ( MUC * ( CS + MUR ) ) + ( MUC / MLU ) ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.0023276466880874365}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( MDR * MDR ) )", "choosing": "( ( Min( ( ( RMSe * ( ( ( MUR * RRSe ) - ( MUM * MUM ) ) / ( RMSe - ( CS - DS ) ) ) ) + MUR ) ,( CS / CS ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "Min( Max( ( FirstVNF_Mem_Server - DDR ),( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( DDR + DDR ) + DDR ) )", "choosing": "( ( ( CS - RRSe ) - CS ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( MUM,MUR ) ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.10714230939445664}, {"determining": "( ( Min( ( CRS * DDR ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MLU / CS ) - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( ( MUM * DS ) * Max( MUM,MUM ) ) / DS ) ) ) + ( ( RCSe - RRSe ) - ( ( Max( MLU,Max( RCSe,MUM ) ) - MUR ) * Max( MLU,RMSe ) ) ) ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( RRS + PN ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( ( RRSe / RCSe ) ,MUC ) ) ) ) + MUR ) ) ,( DS / ( RMSe + ( ( RRSe + DS ) / MUM ) ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0013664756328364612}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( FirstVNF_RAM,Const ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + ( MUM / Min( MUM ,CS ) ) ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.00052460722251585}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "Min( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * MRS ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( ACS,Const ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + ( ( Max( MUM,DS ) / RCSe ) / Min( MUM ,( CS / MUM ) ) ) ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.00052460722251585}, {"determining": "( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( RRS + PN ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( ( RRSe / RCSe ) ,MUC ) ) ) ) + MUR ) ) ,( DS / ( RMSe + ( ( RRSe + DS ) / MUM ) ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0013664756328364612}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( Min( MRS ,Max( FirstVNF_RAM_Server,Const ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( CS * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( ( FirstVNF_CPU / MDR ) + ( FirstVNF_Mem_Server / Max( MRS,Max( ACS,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * ( Max( MLU,RCSe ) + RCSe ) ) * Min( MUR ,DS ) ) + ( ( ( RRSe + MUM ) * ( RMSe + RRSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( CRS * MDR ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Max( ACS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( Min( MUC ,RRSe ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + MDR ) / Const ) - ( ( FirstVNF_CPU / MDR ) + ARS ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * ( CS / RCSe ) ) ) * Max( MUR,MLU ) ),( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * Min( ( MUC / ( ( RCSe * MUM ) * DS ) ) ,MLU ) ) * Min( MUR ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MUC,MUM ) * MUM ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( DDR * Const ) ,( ( ( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( AMS - FirstVNF_CPU_Server ) ) - Const ) - ( DDR / MRS ) ) + FirstVNF_CPU ) ) ,Max( Min( DDR ,CRS ),( FirstVNF_CPU - MRS ) ) ) - ( BR * ACS ) )", "choosing": "( ( Min( Max( MUR,MUC ) ,( Min( Min( RRSe ,CS ) ,( CS - Min( ( MUC * DS ) ,RMSe ) ) ) + MUC ) ) + ( ( ( ( ( RCSe + DS ) - CS ) * Max( CS,RMSe ) ) - RMSe ) + ( RMSe + RRSe ) ) ) + Min( ( DS / CS ) ,( MUR - Min( RRSe ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Max( ( PN * ACS ),Min( FirstVNF_RAM ,ACS ) ) ,MRS ) + BR ) ,( ( ( Min( ( FirstVNF_RAM_Server / MRS ) ,FirstVNF_RAM ) + Max( CRS,( Const - AMS ) ) ) + FirstVNF_RAM ) - AMS ) ) - ( FirstVNF_Mem_Server * RRS ) )", "choosing": "Max( ( ( DS * ( RMSe / CS ) ) * ( CS + MUM ) ),Max( ( CS / ( MUC * RCSe ) ),( ( ( RMSe + ( ( RMSe - ( DS + RMSe ) ) * RMSe ) ) + ( MUM + ( RMSe * DS ) ) ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + BR ) ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / Min( MRS ,( DDR * ACS ) ) ) ) ) )", "choosing": "Max( RCSe,( ( RMSe * MLU ) - ( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( RCSe + ( MUR * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / ( RRS - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( ( MUR - MUC ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - ( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + Min( ( MLU / MLU ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( Min( ( Min( AMS ,AMS ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "Min( MRS ,( Min( RRS ,( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) - ( ( MRS * MDR ) - ( FirstVNF_Mem - ACS ) ) ) )", "choosing": "( Min( CS ,RRSe ) - Min( RMSe ,( ( MLU + MUR ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,( RRS - AMS ) ) - ( ( MDR / FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,( DDR / Min( MRS ,( DDR * ACS ) ) ) ) ) )", "choosing": "Max( RCSe,( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( RCSe + ( MUR * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - Max( ACS,( FirstVNF_Mem_Server / AMS ) ) ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,( ( FirstVNF_Mem + RRS ) * FirstVNF_Mem ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / DS ) + Max( Max( RCSe,MUR ),MLU ) )", "obj1": 0.07926829268292683, "obj2": 0.756486022920312}, {"determining": "Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( ( RRSe * DS ) / ( RRSe / ( DS * MLU ) ) ) ) )", "obj1": 0.6910569105691057, "obj2": 0.1871274423146118}, {"determining": "Min( ( MRS / Const ) ,( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - ( Const - ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS / CS ) ,( MUM / Min( Max( Max( MUM,MUR ),Max( MLU,CS ) ) ,CS ) ) ) / ( ( ( Max( Max( ( MUR / ( RCSe - RRSe ) ),CS ),( ( MUC - Min( CS ,CS ) ) / CS ) ) * ( MUC + MLU ) ) / ( ( MUC + MUC ) + ( MUM - DS ) ) ) / DS ) )", "obj1": 0.6056910569105691, "obj2": 0.21314489411551926}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.483739837398374, "obj2": 0.3363959491782824}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * Const ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - MUC ) ) * RRSe ) / ( ( ( ( Min( ( MUC * DS ) ,( MUR + MUC ) ) / Max( RRSe,RCSe ) ) / RMSe ) / CS ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.6991869918699187, "obj2": 0.12814597153169074}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + ( MLU + Min( RRSe ,Max( MLU,RCSe ) ) ) )", "obj1": 0.5548780487804879, "obj2": 0.23786531304784386}, {"determining": "Min( ( ( ( Const - MDR ) + RRS ) / Const ) ,( Const + FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( CS / RCSe ) ) ) / Max( RCSe,MLU ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.7886178861788617, "obj2": 0.06908440463076967}, {"determining": "( Max( ( ( Const - FirstVNF_RAM ) * FirstVNF_RAM_Server ),RRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) * Min( Min( ( RMSe / ( MUC / Max( Max( MLU,MUR ),Min( Min( MLU ,RRSe ) ,RCSe ) ) ) ) ,MLU ) ,( Max( ( MLU * MUR ),( Max( ( RMSe * Min( DS ,MUM ) ),MUC ) / Min( ( MUM * Min( MUM ,MLU ) ) ,( MUM * DS ) ) ) ) / ( MUR / ( ( ( CS * ( RCSe + MUC ) ) - RMSe ) / ( ( ( MUM - MUR ) - ( RMSe + DS ) ) - MUR ) ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.7036733638876238}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5772357723577236, "obj2": 0.22947153103099036}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "Min( Max( RRS,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Min( Min( ( RRS * FirstVNF_Mem ) ,FirstVNF_RAM ) ,MDR ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( ( RCSe * RRSe ) * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.16260162601626016, "obj2": 0.6693672618102888}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.3699186991869919, "obj2": 0.43434950466899847}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.056656275837327706}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8902439024390244, "obj2": 0.04176253353843697}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( ( ( Max( ACS,FirstVNF_RAM_Server ) * PN ) * RRS ) * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( DS * ( CS / RCSe ) ) ) * Max( MUR,MLU ) ),( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * Min( MUM ,MLU ) ) * Min( MUR ,DS ) ) ) - Min( MUM ,MUC ) ) * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - DS ) )", "obj1": 0.3943089430894309, "obj2": 0.42219957579365114}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.40853658536585363, "obj2": 0.40795315734292575}, {"determining": "Min( ( ( DDR + ARS ) - FirstVNF_Mem_Server ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS * ( CS / MUM ) ) / ( ( RRSe - RMSe ) * ( ( MUR - ( Max( RMSe,MUR ) * CS ) ) - MLU ) ) ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) )", "obj1": 0.4532520325203252, "obj2": 0.3660506287979113}, {"determining": "Min( MDR ,( PN - ( RRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( ( MUC - DS ) / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * ( Max( RMSe,MUM ) - ( Max( Min( RRSe ,MUR ),RMSe ) * MUR ) ) ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8394308943089431, "obj2": 0.049905995973038464}, {"determining": "( Max( Max( Min( ( MRS * ACS ) ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( ( DS / ( MUC - MUM ) ) / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.32113821138211385, "obj2": 0.494302713446085}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Max( AMS,ARS ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( ( ( FirstVNF_RAM_Server - MRS ) / FirstVNF_Mem ) + ( FirstVNF_RAM - ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( MUM + DS ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,MUR ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( DS / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe + CS ) ) ) )", "obj1": 0.36585365853658536, "obj2": 0.4609955907456165}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9207317073170732, "obj2": 0.02866187901897091}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - Max( ACS,Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU_Server + MDR ) ,ARS ) ) ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( MUC * RMSe ) ) ) )", "obj1": 0.5020325203252033, "obj2": 0.2653003587665751}, {"determining": "( ( Min( PN ,PN ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) / ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( CS / ( MUC * RMSe ) ) * ( ( MUM / ( MLU * ( MUC / MUC ) ) ) / ( RMSe - ( CS * ( MUR * RCSe ) ) ) ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.11382113821138211, "obj2": 0.723705035495608}, {"determining": "Min( Max( ( FirstVNF_RAM * BR ),( FirstVNF_CPU - ARS ) ) ,( ARS - ( ( CRS - ( MDR + FirstVNF_Mem ) ) + ARS ) ) )", "choosing": "( ( MUM / Min( MUM ,( MLU * Min( Max( ( Max( RCSe,DS ) + Min( RCSe ,RMSe ) ),RCSe ) ,Max( DS,DS ) ) ) ) ) - ( ( MLU + RRSe ) / ( DS - ( MUM * Max( Min( CS ,( ( MLU - MUC ) - MLU ) ),MUC ) ) ) ) )", "obj1": 0.7459349593495935, "obj2": 0.09111625720918921}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( ( MRS - AMS ) * PN ) ),RRS ) ) + Min( FirstVNF_CPU_Server ,ARS ) ) ) + Min( ( MRS / MRS ) ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / ( MLU * ( MUM - Min( ( MUR * ( DS / MUC ) ) ,DS ) ) ) ) + ( MUR - Max( ( ( ( ( MUR / RCSe ) * RCSe ) - MUM ) * Max( RMSe,MUM ) ),( ( DS + RRSe ) * Min( RMSe ,Max( RMSe,( RCSe / MUM ) ) ) ) ) ) )", "obj1": 0.9004065040650406, "obj2": 0.03960595650078555}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( ( Min( Min( FirstVNF_CPU_Server ,DDR ) ,MRS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * Max( CS,Min( DS ,MUR ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) )", "choosing": "Min( ( ( CS + ( DS + RMSe ) ) * Max( Max( ( Min( ( ( RMSe - DS ) / ( DS / RMSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUR ) ),Max( Min( RCSe ,CS ),Min( MUR ,MLU ) ) ),MUC ) ) ,( ( RRSe * RRSe ) * ( RCSe / RMSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.46960296009518787}, {"determining": "Min( ( DDR / Min( ( FirstVNF_Mem * ( MDR - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ) - ( ( CS + MUC ) * ( Min( ( CS / MUC ) ,( RMSe * ( MUC - MUC ) ) ) + Max( ( MLU * Min( DS ,MUC ) ),CS ) ) ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2459349593495935, "obj2": 0.5637004437884627}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.22967479674796748, "obj2": 0.5880922496274563}, {"determining": "Min( ( Min( ARS ,( BR + Const ) ) + MDR ) ,( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( ( CS * Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) * ( RRSe - MUR ) ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "( Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( MRS ,MDR ) ) * ( FirstVNF_CPU_Server * ( ( RRS / ( FirstVNF_CPU_Server - AMS ) ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( Min( RMSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.766260162601626, "obj2": 0.07510903232372351}, {"determining": "Min( MRS ,Max( ( FirstVNF_Mem + BR ),( BR * ( Min( Min( ( DDR - CRS ) ,( MRS - ( DDR - FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( ( MUC - ( ( CS / MUC ) / MUC ) ) - MUC ) ,Min( ( ( Max( ( RCSe + MUM ),( MLU - CS ) ) + RCSe ) - RRSe ) ,MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.554973485905694}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "( ( ( BR + ( FirstVNF_CPU_Server - CRS ) ) * ARS ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( CS / ( ( MUC - MUM ) + ( CS * RMSe ) ) ) - DS ) )", "obj1": 0.4349593495934959, "obj2": 0.38700590309922395}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2967479674796748, "obj2": 0.5101703451370706}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ARS - ( Min( FirstVNF_CPU ,Const ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( Const * ARS ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( ( MUR + RRSe ) ,MUC ) ) - RMSe ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.758130081300813, "obj2": 0.07968188087624445}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * MUR ) ,Max( ( MUM / ( RRSe / RMSe ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2886178861788618, "obj2": 0.5176160361980437}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( ACS * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RCSe,RMSe ) ) + ( Max( MUC,RMSe ) * CS ) ) )", "obj1": 0.23983739837398374, "obj2": 0.5718174699822056}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),( ACS - ( ( FirstVNF_CPU + DDR ) / ACS ) ) ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / Max( MUM,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9491869918699187, "obj2": 0.020860530646288514}, {"determining": "Min( Max( RRS,Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( ACS * DDR ) * DDR ) ) ) / ACS ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RCSe,RMSe ) ) + ( Max( MUC,RMSe ) * CS ) ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.23780487804878048, "obj2": 0.5842054036438697}, {"determining": "Min( Max( AMS,( Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( ( Max( MUC,MUC ) - MUM ) / ( Max( MUC,MUC ) - MUM ) ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7378048780487805, "obj2": 0.10221220498491236}, {"determining": "Min( ( FirstVNF_RAM_Server / ( Max( AMS,FirstVNF_CPU_Server ) * MDR ) ) ,( ( FirstVNF_CPU + PN ) * Max( ACS,ARS ) ) )", "choosing": "( Min( Max( MUM,RCSe ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.9613821138211383, "obj2": 0.014684668301543526}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( DDR - RRS ) )", "choosing": "Min( ( ( MUM * Max( RRSe,MLU ) ) + ( RMSe + Max( RCSe,MUC ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( ARS - CRS ) ,FirstVNF_CPU ) ,Min( ( AMS / FirstVNF_Mem ) ,FirstVNF_Mem ) ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( Max( RMSe,RCSe ) + RMSe ) / RRSe ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( ( MUR - ( ( DS / Max( DS,RMSe ) ) + CS ) ) + MUC ) ) ) * CS )", "obj1": 0.3130081300813008, "obj2": 0.5044245150747501}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5301330586889882}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / Max( MUC,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9349593495934959, "obj2": 0.024674951185628947}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Max( FirstVNF_CPU_Server,ACS ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Min( ( FirstVNF_CPU / ARS ) ,Max( MRS,( PN - MDR ) ) ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,( RCSe + RRSe ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ),CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5487079774377545}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7032520325203252, "obj2": 0.11867566495112286}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2804878048780488, "obj2": 0.5335672985611909}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( DDR / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( RMSe,( MUC - RCSe ) ) / Min( ( MUR / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7215447154471545, "obj2": 0.11394014997581521}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( Min( MUC ,CS ) - ( ( RRSe * RRSe ) * ( RCSe / ( RMSe - DS ) ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( FirstVNF_RAM_Server + Max( CRS,( ( BR / ( Min( CRS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) ) ) / ( Min( ARS ,( ( PN / PN ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / ( ( RRSe + ( ( RCSe * RMSe ) - ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ) - RRSe ) ) + ( ( Min( MUR ,RCSe ) - ( MLU - MUC ) ) * Max( MUM,( ( MUC / Max( RRSe,RCSe ) ) * MLU ) ) ) )", "obj1": 0.08536585365853659, "obj2": 0.7505720038317084}, {"determining": "Min( ( Min( Min( ( DDR * FirstVNF_RAM_Server ) ,Min( ACS ,( ARS - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( ( ARS / AMS ) * RRS ) * RRS ) - ( ACS - Max( FirstVNF_CPU_Server,( BR * MDR ) ) ) ) )", "choosing": "( ( DS + Min( ( ( RRSe + CS ) - MLU ) ,Max( MUC,( MUR - DS ) ) ) ) / ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - RMSe ) / RCSe ) + ( ( DS / Min( ( ( CS * MUC ) / ( DS - DS ) ) ,CS ) ) / ( CS + RMSe ) ) ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ) ) + MRS ) ) + Min( Max( DDR,AMS ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( RRSe * RRSe ) * Min( Min( ( MUC + Max( CS,CS ) ) ,( Min( RRSe ,MUR ) * MLU ) ) ,CS ) ) * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9390243902439024, "obj2": 0.02129715060472555}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.7422024261236431}, {"determining": "( Min( ( PN - ( Const / ( ACS * ( PN * ( ( RRS * Const ) + ( BR / FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem,CRS ) ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Min( ARS ,ACS ) ) )", "choosing": "( ( MUM * ( MUC / MUC ) ) + ( ( ( CS / ( ( MUR / RRSe ) + CS ) ) - ( CS - CS ) ) * Max( MUM,MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.014004323612130984}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8394308943089431, "obj2": 0.049905995973038464}, {"determining": "Min( Max( AMS,( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ( Const * Max( Max( FirstVNF_CPU_Server,RRS ),ARS ) ) - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( ( ( MUM + ( CS / ( ( CS + MUC ) + CS ) ) ) - MUR ) + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / ( ( ( RRSe - MUC ) * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) ) ) ) )", "obj1": 0.725609756097561, "obj2": 0.1089024904910045}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ,Max( RCSe,RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.37942060004090966}, {"determining": "Min( Max( ( Max( ARS,FirstVNF_CPU ) / ( RRS * RRS ) ),( ( CRS * RRS ) - ( ACS - ( DDR + FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( MLU,MUC ) / RCSe ) - ( CS - Max( Min( RMSe ,MUR ),( MUR * ( ( RCSe * RCSe ) * MUR ) ) ) ) )", "obj1": 0.7113821138211383, "obj2": 0.11622432521475008}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - AMS ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU - ARS ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( Max( ( CS * ( MLU + MUM ) ),CS ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08739837398373984, "obj2": 0.7465212981803773}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( ( CRS * RRS ) ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,( RRSe - MUR ) ) - ( Min( MUR ,Max( Max( Max( MLU,( RCSe - RCSe ) ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "Min( Max( AMS,( Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7296747967479674, "obj2": 0.10755887233784144}, {"determining": "Min( Max( ( ( MRS * ARS ) - CRS ),( MRS / MDR ) ) ,( PN - MDR ) )", "choosing": "( MLU - ( ( ( CS + Min( CS ,RCSe ) ) + RMSe ) / ( Min( ( DS / CS ) ,( RRSe - ( RCSe + ( MUR + DS ) ) ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.10714230939445664}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,Min( BR ,MRS ) ) * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,DS ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.3150406504065041, "obj2": 0.5021606663780508}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( RCSe / RMSe ) / DS ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "Min( Max( ( Max( ARS,FirstVNF_CPU ) / ( RRS * RRS ) ),( ( CRS * RRS ) - ( ACS - ( DDR + FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( MLU,MUC ) / RCSe ) - ( CS - Max( Min( RMSe ,MUR ),( MUR * ( ( RCSe * RCSe ) * MUR ) ) ) ) )", "obj1": 0.709349593495935, "obj2": 0.11622844394888032}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( ( FirstVNF_RAM_Server * ( MDR / Const ) ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,( Const - MDR ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Min( RMSe ,RRSe ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) ) * CS )", "obj1": 0.3150406504065041, "obj2": 0.5021606663780508}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( MRS ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( MUR ,Max( Max( Max( MLU,( RCSe - RCSe ) ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( MDR * MDR ) )", "choosing": "( ( Min( ( ( RMSe * ( ( ( MUR * RRSe ) - ( MUM * MUM ) ) / ( RMSe - ( CS - DS ) ) ) ) + MUR ) ,( CS / CS ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "( ( Min( ( Min( AMS ,Min( RRS ,Const ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( MUC ,( ( RMSe - MUM ) - ( ( MUC * ( CS + MUR ) ) + ( MUC / MLU ) ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.0023276466880874365}, {"determining": "( ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + Max( MRS,( ( ( CRS + Const ) + FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - ( RRSe + RMSe ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( Min( MUC ,RMSe ),RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "( ( Min( ( CRS * DDR ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MLU / CS ) - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( ( MUM * DS ) * Max( MUM,MUM ) ) / DS ) ) ) + ( ( RCSe - RRSe ) - ( ( Max( MLU,Max( RCSe,MUM ) ) - MUR ) * Max( MLU,RMSe ) ) ) ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( RRS + PN ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( ( RRSe / RCSe ) ,MUC ) ) ) ) + MUR ) ) ,( DS / ( RMSe + ( ( RRSe + DS ) / MUM ) ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0013664756328364612}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( FirstVNF_RAM,PN ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + ( MLU / Min( MUM ,CS ) ) ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.00052460722251585}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( FirstVNF_RAM,Const ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + ( MUM / Min( MUM ,CS ) ) ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.00052460722251585}, {"determining": "Min( Max( ( FirstVNF_Mem_Server - DDR ),( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( DDR + DDR ) + DDR ) )", "choosing": "( ( ( CS - RRSe ) - CS ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( MUM,MUR ) ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.10714230939445664}, {"determining": "( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( RRS + PN ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( ( RRSe / RCSe ) ,MUC ) ) ) ) + MUR ) ) ,( DS / ( RMSe + ( ( RRSe + DS ) / MUM ) ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0013664756328364612}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( Min( MRS ,Max( FirstVNF_RAM_Server,Const ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( CS * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "Min( ( ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( ( FirstVNF_CPU / ( FirstVNF_CPU - RRS ) ) / Const ) ) ) * ACS ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( MUR,( RRSe / DS ) ) ),( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( AMS - PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( ( FirstVNF_CPU / MDR ) + ( FirstVNF_Mem_Server / Max( MRS,Max( ACS,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * ( Max( MLU,RCSe ) + RCSe ) ) * Min( MUR ,DS ) ) + ( ( ( RRSe + MUM ) * ( RMSe + RRSe ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( Min( Const ,ACS ) - Min( AMS ,RRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) + Const ) * ( Min( ( PN * Max( Max( FirstVNF_CPU,AMS ),RRS ) ) ,( CRS + MRS ) ) - Max( ( FirstVNF_RAM / ( ( CRS * MDR ) / Min( Const ,FirstVNF_Mem_Server ) ) ),( MDR + MDR ) ) ) ) / AMS ) / ( Min( ARS ,FirstVNF_CPU_Server ) / Max( ACS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( RMSe - ( ( Max( Min( MUC ,RRSe ),CS ) - RMSe ) + MUC ) ) ,MUC ) / ( MLU / ( ( MUR / RRSe ) * ( DS - CS ) ) ) ) + ( ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) * Max( MUM,( DS * ( RMSe / ( MUM * Max( RRSe,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server + MDR ) / Const ) - ( ( FirstVNF_CPU / MDR ) + ARS ) ) ,( ( Const - MDR ) - ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * ( CS / RCSe ) ) ) * Max( MUR,MLU ) ),( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * Min( ( MUC / ( ( RCSe * MUM ) * DS ) ) ,MLU ) ) * Min( MUR ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( RRS ,ARS ) * ( PN - CRS ) ) ,( ( BR + PN ) - ( FirstVNF_RAM_Server + MRS ) ) )", "choosing": "Max( ( MUC * Max( ( RCSe / RCSe ),( RRSe / DS ) ) ),( ( RMSe + ( MUR - Max( MUC,( ( MLU * RMSe ) * DS ) ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MUC,MUM ) * MUM ) * ( MUM - ( MUC - DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ) ) + MRS ) ) + ( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) )", "choosing": "( ( MLU / ( ( ( RRSe * RRSe ) * Min( Min( ( MUC + Max( CS,CS ) ) ,( Min( RRSe ,MUR ) * MLU ) ) ,CS ) ) * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( Min( RRS ,( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) - ( ( MRS * MDR ) - ( FirstVNF_Mem - ACS ) ) ) )", "choosing": "( Min( CS ,RRSe ) - Min( RMSe ,( ( MLU + MUR ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - Max( ACS,( FirstVNF_Mem_Server / AMS ) ) ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,( ( FirstVNF_Mem + RRS ) * FirstVNF_Mem ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / DS ) + Max( Max( RCSe,MUR ),MLU ) )", "obj1": 0.07926829268292683, "obj2": 0.756486022920312}, {"determining": "Min( ( MRS / Const ) ,( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - ( Const - ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS / CS ) ,( MUM / Min( Max( Max( MUM,MUR ),Max( MLU,CS ) ) ,CS ) ) ) / ( ( ( Max( Max( ( MUR / ( RCSe - RRSe ) ),CS ),( ( MUC - Min( CS ,CS ) ) / CS ) ) * ( MUC + MLU ) ) / ( ( MUC + MUC ) + ( MUM - DS ) ) ) / DS ) )", "obj1": 0.6056910569105691, "obj2": 0.21314489411551926}, {"determining": "( ( Min( PN ,PN ) + Max( ( FirstVNF_RAM_Server / ( BR - AMS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( ( ( RCSe - ( MUR - RMSe ) ) - ( ( RMSe * CS ) * MUM ) ) + MUC ) ,DS ) ) ) + ( MUR - MUC ) )", "obj1": 0.6910569105691057, "obj2": 0.1412910012858366}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.4349593495934959, "obj2": 0.3471318570666753}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "( ( ( FirstVNF_Mem * ( Min( ARS ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( DS ,( Min( CS ,( DS + RRSe ) ) * Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.4796747967479675, "obj2": 0.3251743480194966}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.3699186991869919, "obj2": 0.43434950466899847}, {"determining": "( Max( ( ( Const - FirstVNF_RAM ) * FirstVNF_RAM_Server ),RRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) * Min( Min( ( RMSe / ( MUC / Max( Max( MLU,MUR ),Min( Min( MLU ,RRSe ) ,RCSe ) ) ) ) ,MLU ) ,( Max( ( MLU * MUR ),( Max( ( RMSe * Min( DS ,MUM ) ),MUC ) / Min( ( MUM * Min( MUM ,MLU ) ) ,( MUM * DS ) ) ) ) / ( MUR / ( ( ( CS * ( RCSe + MUC ) ) - RMSe ) / ( ( ( MUM - MUR ) - ( RMSe + DS ) ) - MUR ) ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.7036733638876238}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,Min( PN ,PN ) ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MUR ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3475609756097561, "obj2": 0.4605860525128217}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5772357723577236, "obj2": 0.22947153103099036}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "Min( Max( RRS,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Min( Min( ( RRS * FirstVNF_Mem ) ,FirstVNF_RAM ) ,MDR ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( ( RCSe * RRSe ) * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.16260162601626016, "obj2": 0.6693672618102888}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.056656275837327706}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8902439024390244, "obj2": 0.04176253353843697}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( Max( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * Max( AMS,MDR ) ),Min( ( ( ( Max( ACS,FirstVNF_RAM_Server ) * PN ) * RRS ) * FirstVNF_CPU_Server ) ,( Const / CRS ) ) ) * ( FirstVNF_CPU_Server * Max( Const,RRS ) ) )", "choosing": "( ( Max( ( Min( RRSe ,( DS * ( CS / RCSe ) ) ) * Max( MUR,MLU ) ),( ( ( DS * ( ( RRSe - CS ) * Max( MUR,MUC ) ) ) * Min( MUM ,MLU ) ) * Min( MUR ,DS ) ) ) - Min( MUM ,MUC ) ) * ( ( CS / Min( ( MLU / MLU ) ,RMSe ) ) - DS ) )", "obj1": 0.3943089430894309, "obj2": 0.42219957579365114}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.40853658536585363, "obj2": 0.40795315734292575}, {"determining": "Min( ( ( ( Const - MDR ) + RRS ) / Const ) ,( Const + FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( CS / RCSe ) ) ) / Max( RCSe,MLU ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.7886178861788617, "obj2": 0.06908440463076967}, {"determining": "( ( ( Max( PN,( FirstVNF_Mem - Min( ( ARS + DDR ) ,MDR ) ) ) - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_Mem / MRS ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe / ( Max( ( ( CS * CS ) + CS ),MUC ) / RRSe ) ) + ( MUR - ( ( RRSe - MUR ) + RCSe ) ) )", "obj1": 0.5467479674796748, "obj2": 0.2435320501709903}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8394308943089431, "obj2": 0.049905995973038464}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - Max( ACS,Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU_Server + MDR ) ,ARS ) ) ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( MUC * RMSe ) ) ) )", "obj1": 0.5020325203252033, "obj2": 0.2653003587665751}, {"determining": "( ( Min( PN ,PN ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) / ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( CS / ( MUC * RMSe ) ) * ( ( MUM / ( MLU * ( MUC / MUC ) ) ) / ( RMSe - ( CS * ( MUR * RCSe ) ) ) ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.11382113821138211, "obj2": 0.723705035495608}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5855420653005877}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + ( MLU + Min( RRSe ,Max( MLU,RCSe ) ) ) )", "obj1": 0.5548780487804879, "obj2": 0.23786531304784386}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( ( MRS - AMS ) * PN ) ),RRS ) ) + Min( FirstVNF_CPU_Server ,ARS ) ) ) + Min( ( MRS / MRS ) ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / ( MLU * ( MUM - Min( ( MUR * ( DS / MUC ) ) ,DS ) ) ) ) + ( MUR - Max( ( ( ( ( MUR / RCSe ) * RCSe ) - MUM ) * Max( RMSe,MUM ) ),( ( DS + RRSe ) * Min( RMSe ,Max( RMSe,( RCSe / MUM ) ) ) ) ) ) )", "obj1": 0.9004065040650406, "obj2": 0.03960595650078555}, {"determining": "Min( ( DDR / Min( ( FirstVNF_Mem * ( MDR - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ) - ( ( CS + MUC ) * ( Min( ( CS / MUC ) ,( RMSe * ( MUC - MUC ) ) ) + Max( ( MLU * Min( DS ,MUC ) ),CS ) ) ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2459349593495935, "obj2": 0.5637004437884627}, {"determining": "Min( ( Min( ARS ,( BR + Const ) ) + MDR ) ,( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( ( CS * Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) * ( RRSe - MUR ) ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "Min( MRS ,Max( ( FirstVNF_Mem + BR ),( BR * ( Min( Min( ( DDR - CRS ) ,( MRS - ( DDR - FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( ( MUC - ( ( CS / MUC ) / MUC ) ) - MUC ) ,Min( ( ( Max( ( RCSe + MUM ),( MLU - CS ) ) + RCSe ) - RRSe ) ,MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.554973485905694}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9207317073170732, "obj2": 0.02866187901897091}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3353658536585366, "obj2": 0.4872706427032224}, {"determining": "( Max( Max( Min( ( MRS * ACS ) ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( ( DS / ( MUC - MUM ) ) / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.32113821138211385, "obj2": 0.494302713446085}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "Min( ( FirstVNF_RAM_Server / ( Max( AMS,FirstVNF_CPU_Server ) * MDR ) ) ,( ( FirstVNF_CPU + PN ) * Max( ACS,ARS ) ) )", "choosing": "( Min( Max( MUM,RCSe ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * MUR ) ,Max( ( MUM / ( RRSe / RMSe ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2886178861788618, "obj2": 0.5176160361980437}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "( Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( MRS ,MDR ) ) * ( FirstVNF_CPU_Server * ( ( RRS / ( FirstVNF_CPU_Server - AMS ) ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( Min( RMSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.766260162601626, "obj2": 0.07510903232372351}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( ( BR * ARS ),( ( ACS - ACS ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,BR ) ) + Max( PN,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( ( MUR - CS ) + MUR ) )", "obj1": 0.23373983739837398, "obj2": 0.5784232908749067}, {"determining": "Min( Max( ( FirstVNF_RAM * BR ),( FirstVNF_CPU - ARS ) ) ,( ARS - ( ( CRS - ( MDR + FirstVNF_Mem ) ) + ARS ) ) )", "choosing": "( ( MUM / Min( MUM ,( MLU * Min( Max( ( Max( RCSe,DS ) + Min( RCSe ,RMSe ) ),RCSe ) ,Max( DS,DS ) ) ) ) ) - ( ( MLU + RRSe ) / ( DS - ( MUM * Max( Min( CS ,( ( MLU - MUC ) - MLU ) ),MUC ) ) ) ) )", "obj1": 0.7459349593495935, "obj2": 0.09111625720918921}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( ACS * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RCSe,RMSe ) ) + ( Max( MUC,RMSe ) * CS ) ) )", "obj1": 0.23983739837398374, "obj2": 0.5718174699822056}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * Const ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - MUC ) ) * RRSe ) / ( ( ( ( Min( ( MUC * DS ) ,( MUR + MUC ) ) / Max( RRSe,RCSe ) ) / RMSe ) / CS ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.6991869918699187, "obj2": 0.12814597153169074}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN - ( ( MDR + CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MUC,( MUR - ( Max( RMSe,MUR ) * CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( MLU / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MLU ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( ( CS / MLU ),( CS / MUM ) ) ) )", "obj1": 0.7865853658536586, "obj2": 0.07052145933571784}, {"determining": "Min( Max( AMS,( Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( ( Max( MUC,MUC ) - MUM ) / ( Max( MUC,MUC ) - MUM ) ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7378048780487805, "obj2": 0.10221220498491236}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( DDR / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( RMSe,( MUC - RCSe ) ) / Min( ( MUR / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7215447154471545, "obj2": 0.11394014997581521}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( ARS - CRS ) ,FirstVNF_CPU ) ,Min( ( AMS / FirstVNF_Mem ) ,FirstVNF_Mem ) ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( Max( RMSe,RCSe ) + RMSe ) / RRSe ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( ( MUR - ( ( DS / Max( DS,RMSe ) ) + CS ) ) + MUC ) ) ) * CS )", "obj1": 0.3130081300813008, "obj2": 0.5044245150747501}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2845528455284553, "obj2": 0.5301330586889882}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Max( FirstVNF_CPU_Server,ACS ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Min( ( FirstVNF_CPU / ARS ) ,Max( MRS,( PN - MDR ) ) ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,( RCSe + RRSe ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ),CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5487079774377545}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( Min( MUC ,CS ) - ( ( RRSe * RRSe ) * ( RCSe / ( RMSe - DS ) ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * MUM ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2967479674796748, "obj2": 0.5101703451370706}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( BR * Const ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - MUC ) ) * RRSe ) / ( ( ( ( RMSe / Max( RRSe,RCSe ) ) / RMSe ) / CS ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.693089430894309, "obj2": 0.13473843921385018}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( ( Min( RRSe ,MUR ) * MLU ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,AMS ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * Max( Min( ACS ,CRS ),CRS ) )", "choosing": "( ( Min( ( ( RRSe - Max( RMSe,RMSe ) ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( Min( DS ,( CS * ( MLU / RMSe ) ) ) ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * Max( ( ( ( ( ( ( RCSe + DS ) - Min( MLU ,MUC ) ) * MLU ) / ( Min( Min( RMSe ,MUR ) ,Max( MLU,RRSe ) ) * ( Min( MUR ,RCSe ) * ( RMSe - MUC ) ) ) ) - MUR ) * MLU ),Min( ( ( MLU / ( MUM + MUC ) ) - RRSe ) ,MUR ) ) )", "obj1": 0.2804878048780488, "obj2": 0.5335672985611909}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7032520325203252, "obj2": 0.11867566495112286}, {"determining": "( ( FirstVNF_RAM_Server + Max( CRS,( ( BR / ( Min( CRS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) ) ) / ( Min( ARS ,( ( PN / PN ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / ( ( RRSe + ( ( RCSe * RMSe ) - ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ) - RRSe ) ) + ( ( Min( MUR ,RCSe ) - ( MLU - MUC ) ) * Max( MUM,( ( MUC / Max( RRSe,RCSe ) ) * MLU ) ) ) )", "obj1": 0.08536585365853659, "obj2": 0.7505720038317084}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / Max( MUC,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9349593495934959, "obj2": 0.024674951185628947}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Max( Min( Const ,FirstVNF_Mem_Server ),Min( ( ACS - Max( MRS,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MUC + MLU ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( RMSe / ( ( MUM * RMSe ) * ( MLU + MUR ) ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7520325203252033, "obj2": 0.08132398926508261}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( ( Min( Min( FirstVNF_CPU_Server ,DDR ) ,MRS ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * Max( CS,Min( DS ,MUR ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( ( ARS - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * Min( ( ( RRSe + CS ) - MLU ) ,Max( MUC,( MUR - DS ) ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.926829268292683, "obj2": 0.027587337975469153}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ) ) + MRS ) ) + Min( Max( DDR,AMS ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( RRSe * RRSe ) * Min( Min( ( MUC + Max( CS,CS ) ) ,( Min( RRSe ,MUR ) * MLU ) ) ,CS ) ) * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9390243902439024, "obj2": 0.02129715060472555}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.9613821138211383, "obj2": 0.014684668301543526}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.7422024261236431}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( ( CRS * ( MRS / FirstVNF_RAM_Server ) ) ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,( RRSe - MUR ) ) - ( DS + ( MUM - MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.009192388663185861}, {"determining": "Min( MDR ,( PN - ( RRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( ( MUC - DS ) / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * ( Max( RMSe,MUM ) - ( Max( Min( RRSe ,MUR ),RMSe ) * MUR ) ) ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8394308943089431, "obj2": 0.049905995973038464}, {"determining": "( ( Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe / CS ) + RMSe )", "obj1": 0.7479674796747967, "obj2": 0.08576370647120687}, {"determining": "Min( Max( AMS,( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ( Const * Max( Max( FirstVNF_CPU_Server,RRS ),ARS ) ) - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( ( ( MUM + ( CS / ( ( CS + MUC ) + CS ) ) ) - MUR ) + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / ( ( ( RRSe - MUC ) * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) ) ) ) )", "obj1": 0.725609756097561, "obj2": 0.1089024904910045}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),( ACS - ( ( FirstVNF_CPU + DDR ) / ACS ) ) ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ARS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( MUM * ( MUC / MUC ) ) * ( ( RRSe / Max( MUM,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9512195121951219, "obj2": 0.019130388766334383}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.959349593495935, "obj2": 0.016153645420753936}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2967479674796748, "obj2": 0.5101703451370706}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),( ACS - ( ( FirstVNF_CPU + DDR ) / ACS ) ) ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / Max( MUM,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9491869918699187, "obj2": 0.020860530646288514}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - AMS ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU - ARS ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( Max( ( CS * ( MLU + MUM ) ),CS ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08739837398373984, "obj2": 0.7465212981803773}, {"determining": "( ( Min( PN ,PN ) + ( ( ( ( BR * ( PN * Min( ARS ,MRS ) ) ) * ( PN + MDR ) ) / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / ( DDR * RRS ) ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) - ( RRSe * RMSe ) ) * Min( RMSe ,MLU ) ) ) + ( MUR - MUC ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "( Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.7601626016260162, "obj2": 0.07758902635834393}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,Min( BR ,MRS ) ) * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,DS ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.3150406504065041, "obj2": 0.5021606663780508}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( RCSe / RMSe ) / DS ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "Min( Max( AMS,( Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7296747967479674, "obj2": 0.10755887233784144}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( ( FirstVNF_RAM_Server * ( MDR / Const ) ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,( Const - MDR ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Min( RMSe ,RRSe ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) ) * CS )", "obj1": 0.3150406504065041, "obj2": 0.5021606663780508}, {"determining": "Min( Max( ( ( MRS * ARS ) - CRS ),( MRS / MDR ) ) ,( PN - MDR ) )", "choosing": "( MLU - ( ( ( CS + Min( CS ,RCSe ) ) + RMSe ) / ( Min( ( DS / CS ) ,( RRSe - ( RCSe + ( MUR + DS ) ) ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.10714230939445664}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( ( CRS * RRS ) ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,( RRSe - MUR ) ) - ( Min( MUR ,Max( Max( Max( MLU,( RCSe - RCSe ) ),MUC ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "( ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + Max( MRS,( ( ( CRS + Const ) + FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - ( RRSe + RMSe ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( Min( MUC ,RMSe ),RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "Min( Max( AMS,( Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( PN * FirstVNF_RAM_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / ( Max( MUC,MUC ) - MUM ) ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.733739837398374, "obj2": 0.1075189343154387}, {"determining": "Min( Max( ( Max( ARS,FirstVNF_CPU ) / ( RRS * RRS ) ),( ( CRS * RRS ) - ( ( ( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_Mem ) + FirstVNF_Mem_Server ) - ( DDR + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( MLU,MUC ) / RCSe ) - Min( ( RMSe * Min( Max( MUR,( RRSe / RRSe ) ) ,( RCSe * ( MUC + MUR ) ) ) ) ,RMSe ) )", "obj1": 0.758130081300813, "obj2": 0.07797510744348335}, {"determining": "( ( Min( ( Min( AMS ,Min( RRS ,Const ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( MUC ,( ( RMSe - MUM ) - ( ( MUC * ( CS + MUR ) ) + ( MUC / MLU ) ) ) ) )", "obj1": 0.991869918699187, "obj2": 0.0023276466880874365}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "Min( Max( ( Max( ARS,FirstVNF_CPU ) / ( RRS * RRS ) ),( ( CRS * RRS ) - ( ACS - ( DDR + FirstVNF_CPU_Server ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( MLU,MUC ) / RCSe ) - ( CS - Max( Min( RMSe ,MUR ),( MUR * ( ( RCSe * RCSe ) * MUR ) ) ) ) )", "obj1": 0.758130081300813, "obj2": 0.07797510744348335}, {"determining": "Min( ( Min( Min( ( DDR * FirstVNF_RAM_Server ) ,Min( ACS ,( ARS - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( ( ARS / AMS ) * RRS ) * RRS ) - ( ACS - Max( FirstVNF_CPU_Server,( BR * MDR ) ) ) ) )", "choosing": "( ( DS + Min( ( ( RRSe + CS ) - MLU ) ,Max( MUC,( MUR - DS ) ) ) ) / ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - RMSe ) / RCSe ) + ( ( DS / Min( ( ( CS * MUC ) / ( DS - DS ) ) ,CS ) ) / ( CS + RMSe ) ) ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( MDR * MDR ) )", "choosing": "( ( Min( ( ( RMSe * ( ( ( MUR * RRSe ) - ( MUM * MUM ) ) / ( RMSe - ( CS - DS ) ) ) ) + MUR ) ,( CS / CS ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "( ( Min( ( CRS * DDR ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MLU / CS ) - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( ( MUM * DS ) * Max( MUM,MUM ) ) / DS ) ) ) + ( ( RCSe - RRSe ) - ( ( Max( MLU,Max( RCSe,MUM ) ) - MUR ) * Max( MLU,RMSe ) ) ) ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( RRS + PN ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( ( RRSe / RCSe ) ,MUC ) ) ) ) + MUR ) ) ,( DS / ( RMSe + ( ( RRSe + DS ) / MUM ) ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0013664756328364612}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( FirstVNF_RAM,Const ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + ( MUM / Min( MUM ,CS ) ) ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.00052460722251585}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( FirstVNF_RAM,PN ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + ( MLU / Min( MUM ,CS ) ) ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9979674796747967, "obj2": 0.00052460722251585}, {"determining": "Min( Max( ( FirstVNF_Mem_Server - DDR ),( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( DDR + DDR ) + DDR ) )", "choosing": "( ( ( CS - RRSe ) - CS ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( MUM,MUR ) ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.10714230939445664}], "18": [{"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN - ( ( ( Min( ( BR / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,BR ) * RRS ) + ( FirstVNF_Mem_Server / ( BR + CRS ) ) ) * ( FirstVNF_RAM * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MUC,( MUR - ( Max( RMSe,MUR ) * CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( MLU / MUC ) / Max( RMSe,( CS / CS ) ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MUC ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( ( CS / MLU ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ) ) + MRS ) ) + ( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) )", "choosing": "( ( MLU / ( ( ( RRSe * RRSe ) * Min( Min( ( MUC + Max( CS,CS ) ) ,( Min( RRSe ,MUR ) * MLU ) ) ,CS ) ) * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - Max( ACS,( FirstVNF_Mem_Server / AMS ) ) ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,( ( FirstVNF_Mem + RRS ) * FirstVNF_Mem ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / DS ) + Max( Max( RCSe,MUR ),MLU ) )", "obj1": 0.07926829268292683, "obj2": 0.756486022920312}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - Min( ( FirstVNF_CPU * PN ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( DDR + RRS ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),CRS ) ,PN ) / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - Max( ( ( RCSe + ( ( Max( RMSe,MUM ) + DS ) * ( ( CS + RRSe ) * ( MUM + RMSe ) ) ) ) + ( DS / RRSe ) ),Min( ( DS - RMSe ) ,RCSe ) ) ) )", "obj1": 0.6321138211382114, "obj2": 0.15791073943624762}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,DDR ) ) ) ) )", "choosing": "( ( RRSe / Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) + ( MUR - ( ( RRSe - MUR ) + RCSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.40754922092611057}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "Min( ( MRS / Const ) ,( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - ( Const - ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS / CS ) ,( MUM / Min( Max( Max( MUM,MUR ),Max( MLU,CS ) ) ,CS ) ) ) / ( ( ( Max( Max( ( MUR / ( RCSe - RRSe ) ),CS ),( ( MUC - Min( CS ,CS ) ) / CS ) ) * ( MUC + MLU ) ) / ( ( MUC + MUC ) + ( MUM - DS ) ) ) / DS ) )", "obj1": 0.6056910569105691, "obj2": 0.21314489411551926}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.4349593495934959, "obj2": 0.3471318570666753}, {"determining": "( ( ( FirstVNF_Mem * ( Min( ARS ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( DS ,( Min( CS ,( DS + RRSe ) ) * Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.4796747967479675, "obj2": 0.3251743480194966}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,Min( PN ,PN ) ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MUR ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3475609756097561, "obj2": 0.4605860525128217}, {"determining": "( ( Min( PN ,PN ) + Max( ( FirstVNF_RAM_Server / ( BR - AMS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( ( ( RCSe - ( MUR - RMSe ) ) - ( ( RMSe * CS ) * MUM ) ) + MUC ) ,DS ) ) ) + ( MUR - MUC ) )", "obj1": 0.6910569105691057, "obj2": 0.1412910012858366}, {"determining": "( Max( ( ( Const - FirstVNF_RAM ) * FirstVNF_RAM_Server ),RRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) * Min( Min( ( RMSe / ( MUC / Max( Max( MLU,MUR ),Min( Min( MLU ,RRSe ) ,RCSe ) ) ) ) ,MLU ) ,( Max( ( MLU * MUR ),( Max( ( RMSe * Min( DS ,MUM ) ),MUC ) / Min( ( MUM * Min( MUM ,MLU ) ) ,( MUM * DS ) ) ) ) / ( MUR / ( ( ( CS * ( RCSe + MUC ) ) - RMSe ) / ( ( ( MUM - MUR ) - ( RMSe + DS ) ) - MUR ) ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.7036733638876238}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "Min( Max( RRS,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Min( Min( ( RRS * FirstVNF_Mem ) ,FirstVNF_RAM ) ,MDR ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( ( RCSe * RRSe ) * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.16260162601626016, "obj2": 0.6693672618102888}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.056656275837327706}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8902439024390244, "obj2": 0.04176253353843697}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5772357723577236, "obj2": 0.22947153103099036}, {"determining": "Min( ( ( ( Const - MDR ) + RRS ) / Const ) ,( Const + FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( CS / RCSe ) ) ) / Max( RCSe,MLU ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.7886178861788617, "obj2": 0.06908440463076967}, {"determining": "Min( MDR ,( PN - ( RRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( ( MUC - DS ) / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * ( Max( RMSe,MUM ) - ( Max( Min( RRSe ,MUR ),RMSe ) * MUR ) ) ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8394308943089431, "obj2": 0.049905995973038464}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - Max( ACS,Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU_Server + MDR ) ,ARS ) ) ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( MUC * RMSe ) ) ) )", "obj1": 0.5020325203252033, "obj2": 0.2653003587665751}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / DDR ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( ( DDR + RRS ) * ( MDR / ( ACS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( ( MUR + MUR ) - MUC ) ) * RRSe ) / ( ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / Max( RMSe,MUR ) ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.7215447154471545, "obj2": 0.10296090985621957}, {"determining": "( ( Min( PN ,PN ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) / ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( CS / ( MUC * RMSe ) ) * ( ( MUM / ( MLU * ( MUC / MUC ) ) ) / ( RMSe - ( CS * ( MUR * RCSe ) ) ) ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.11382113821138211, "obj2": 0.723705035495608}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( Max( PN,( RRS * FirstVNF_Mem_Server ) ) * DDR ) * Const ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RRSe,( Min( DS ,MUR ) / MUR ) ) ) + ( Max( MUC,( RCSe / MLU ) ) * CS ) ) )", "obj1": 0.21544715447154472, "obj2": 0.5823360114899261}, {"determining": "( ( Min( PN ,Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - CS ) * Max( MUR,MUC ) ) + ( MUR - MUC ) )", "obj1": 0.5386178861788617, "obj2": 0.25371638482413006}, {"determining": "Min( ( Min( ARS ,( BR + Const ) ) + MDR ) ,( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( ( CS * Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) * ( RRSe - MUR ) ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "Min( MRS ,Max( ( FirstVNF_Mem + BR ),( BR * ( Min( Min( ( DDR - CRS ) ,( MRS - ( DDR - FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) / FirstVNF_Mem ) ) ) )", "choosing": "( Min( CS ,Min( ( Min( MUR ,RRSe ) - RMSe ) ,Min( MUC ,CS ) ) ) - ( Min( ( ( MUC - ( ( CS / MUC ) / MUC ) ) - MUC ) ,Min( ( ( Max( ( RCSe + MUM ),( MLU - CS ) ) + RCSe ) - RRSe ) ,MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.554973485905694}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( MUR - MUM ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / ( MLU / MLU ) ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5248641712176909}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "Min( ( DDR / Min( ( FirstVNF_Mem * ( MDR - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ) - ( ( CS + MUC ) * ( Min( ( CS / MUC ) ,( RMSe * ( MUC - MUC ) ) ) + Max( ( MLU * Min( DS ,MUC ) ),CS ) ) ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2459349593495935, "obj2": 0.5637004437884627}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9207317073170732, "obj2": 0.02866187901897091}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( ( BR * ARS ),( ( ACS - ACS ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,BR ) ) + Max( PN,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( ( MUR - CS ) + MUR ) )", "obj1": 0.23373983739837398, "obj2": 0.5784232908749067}, {"determining": "Min( Max( AMS,( Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( MLU / MLU ) ,RMSe ) ) - ( ( MLU + RRSe ) / ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( ( Max( MUC,MUC ) - MUM ) / ( Max( MUC,MUC ) - MUM ) ) / Max( RMSe,MUR ) ) ) ) )", "obj1": 0.7378048780487805, "obj2": 0.10221220498491236}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.51651679792255}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( ( MRS - AMS ) * PN ) ),RRS ) ) + Min( FirstVNF_CPU_Server ,ARS ) ) ) + Min( ( MRS / MRS ) ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / ( MLU * ( MUM - Min( ( MUR * ( DS / MUC ) ) ,DS ) ) ) ) + ( MUR - Max( ( ( ( ( MUR / RCSe ) * RCSe ) - MUM ) * Max( RMSe,MUM ) ),( ( DS + RRSe ) * Min( RMSe ,Max( RMSe,( RCSe / MUM ) ) ) ) ) ) )", "obj1": 0.9004065040650406, "obj2": 0.03960595650078555}, {"determining": "Min( ( FirstVNF_RAM_Server / ( Max( AMS,FirstVNF_CPU_Server ) * MDR ) ) ,( ( FirstVNF_CPU + PN ) * Max( ACS,ARS ) ) )", "choosing": "( Min( Max( MUM,RCSe ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "( ( ( Max( PN,( FirstVNF_Mem - Min( ( ARS + DDR ) ,MDR ) ) ) - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_Mem / MRS ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe / ( Max( ( ( CS * CS ) + CS ),MUC ) / RRSe ) ) + ( MUR - ( ( RRSe - MUR ) + RCSe ) ) )", "obj1": 0.5467479674796748, "obj2": 0.2435320501709903}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * ( CRS - MRS ) ) ) ,Max( MRS,FirstVNF_RAM ) )", "choosing": "( Min( MUC ,( MUR + MLU ) ) / Min( Min( MUM ,Max( MUM,( Min( RRSe ,MUR ) - MUR ) ) ) ,MUC ) )", "obj1": 0.4735772357723577, "obj2": 0.3432326659479347}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( ( PN + Max( DDR,MRS ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ( FirstVNF_RAM + DDR ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + CS ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.5650406504065041, "obj2": 0.23261778802821553}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + ( MLU + Min( RRSe ,Max( MLU,RCSe ) ) ) )", "obj1": 0.5548780487804879, "obj2": 0.23786531304784386}, {"determining": "Min( Max( ( FirstVNF_RAM * BR ),( FirstVNF_CPU - ARS ) ) ,( ARS - ( ( CRS - ( MDR + FirstVNF_Mem ) ) + ARS ) ) )", "choosing": "( ( MUM / Min( MUM ,( MLU * Min( Max( ( Max( RCSe,DS ) + Min( RCSe ,RMSe ) ),RCSe ) ,Max( DS,DS ) ) ) ) ) - ( ( MLU + RRSe ) / ( DS - ( MUM * Max( Min( CS ,( ( MLU - MUC ) - MLU ) ),MUC ) ) ) ) )", "obj1": 0.7459349593495935, "obj2": 0.09111625720918921}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( PN,( ( ACS - ACS ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,BR ) ) + Max( Min( FirstVNF_Mem ,Max( CRS,FirstVNF_RAM_Server ) ),( ( ACS * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Max( DS,RCSe ) + ( Max( MUC,RMSe ) * CS ) ) )", "obj1": 0.23983739837398374, "obj2": 0.569423192947459}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * Const ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - MUC ) ) * RRSe ) / ( ( ( ( Min( ( MUC * DS ) ,( MUR + MUC ) ) / Max( RRSe,RCSe ) ) / RMSe ) / CS ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.6991869918699187, "obj2": 0.12814597153169074}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3353658536585366, "obj2": 0.4872706427032224}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "Min( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - FirstVNF_CPU_Server ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * MUR ) ,Max( ( MUM / Min( ( MUC * ( CS + CS ) ) ,CS ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.32113821138211385, "obj2": 0.4896587639979515}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.34146341463414637, "obj2": 0.46665683367535743}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),( Max( FirstVNF_CPU_Server,ACS ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Min( ( FirstVNF_CPU / ARS ) ,Max( MRS,( PN - MDR ) ) ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,( RCSe + RRSe ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( ( MUM + MUR ) * ( ( DS * MUC ) + MUR ) ),CS ) ) )", "obj1": 0.2703252032520325, "obj2": 0.5487079774377545}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN - ( ( MDR + CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MUC,( MUR - ( Max( RMSe,MUR ) * CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( MLU / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MLU ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( ( CS / MLU ),( CS / MUM ) ) ) )", "obj1": 0.7865853658536586, "obj2": 0.07052145933571784}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) * CS )", "obj1": 0.7682926829268293, "obj2": 0.07450484052087938}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( BR * Const ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - MUC ) ) * RRSe ) / ( ( ( ( RMSe / Max( RRSe,RCSe ) ) / RMSe ) / CS ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.693089430894309, "obj2": 0.13473843921385018}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,( Const - MDR ) ) ) ) ) * ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,MLU ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) ) * CS )", "obj1": 0.3089430894308943, "obj2": 0.5079316300645608}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7032520325203252, "obj2": 0.11867566495112286}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2967479674796748, "obj2": 0.5101703451370706}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / Max( MUC,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9349593495934959, "obj2": 0.024674951185628947}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Max( Min( Const ,FirstVNF_Mem_Server ),Min( ( ACS - Max( MRS,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MUC + MLU ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( RMSe / ( ( MUM * RMSe ) * ( MLU + MUR ) ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7520325203252033, "obj2": 0.08132398926508261}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( Min( ( MDR / CRS ) ,AMS ) ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Min( MUM ,( MLU + Min( RMSe ,RMSe ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - ( ( RRSe * RRSe ) * ( RCSe / ( RMSe - DS ) ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( ( ARS - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * Min( ( ( RRSe + CS ) - MLU ) ,Max( MUC,( MUR - DS ) ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.926829268292683, "obj2": 0.027587337975469153}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ) ) + MRS ) ) + Min( Max( DDR,AMS ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( RRSe * RRSe ) * Min( Min( ( MUC + Max( CS,CS ) ) ,( Min( RRSe ,MUR ) * MLU ) ) ,CS ) ) * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9390243902439024, "obj2": 0.02129715060472555}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.9613821138211383, "obj2": 0.014684668301543526}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.7422024261236431}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( ( CRS * ( MRS / FirstVNF_RAM_Server ) ) ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,( RRSe - MUR ) ) - ( DS + ( MUM - MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.009192388663185861}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8394308943089431, "obj2": 0.049905995973038464}, {"determining": "( ( Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe / CS ) + RMSe )", "obj1": 0.7479674796747967, "obj2": 0.08576370647120687}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( ( Min( RRSe ,MUR ) * MLU ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,Min( BR ,MRS ) ) * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,DS ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.3150406504065041, "obj2": 0.5021606663780508}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ( Const * Max( Max( FirstVNF_CPU_Server,RRS ),ARS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * MUM ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3252032520325203, "obj2": 0.4879673339459019}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),( ACS - ( ( FirstVNF_CPU + DDR ) / ACS ) ) ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ARS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( MUM * ( MUC / MUC ) ) * ( ( RRSe / Max( MUM,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9512195121951219, "obj2": 0.019130388766334383}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.959349593495935, "obj2": 0.016153645420753936}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),( ACS - ( ( FirstVNF_CPU + DDR ) / ACS ) ) ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / Max( MUM,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9491869918699187, "obj2": 0.020860530646288514}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - AMS ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU - ARS ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( Max( ( CS * ( MLU + MUM ) ),CS ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08739837398373984, "obj2": 0.7465212981803773}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( PN ,BR ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( CRS - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( ( AMS + ARS ) + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * Max( Min( ( DS + RMSe ) ,RRSe ),MUR ) ) ) + ( MUR - MUC ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "( ( FirstVNF_RAM_Server + Max( CRS,( ( BR / ( Min( CRS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) ) ) / ( Min( ARS ,( ( PN / PN ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / ( ( RRSe + ( ( RCSe * RMSe ) - ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ) - RRSe ) ) + ( ( Min( MUR ,RCSe ) - ( MLU - MUC ) ) * Max( MUM,( ( MUC / Max( RRSe,RCSe ) ) * MLU ) ) ) )", "obj1": 0.08536585365853659, "obj2": 0.7505720038317084}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( ( ( ACS * DDR ) * Const ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * MLU ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08333333333333333, "obj2": 0.7544603960409401}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( ARS - CRS ) ,FirstVNF_CPU ) ,Min( ( AMS / FirstVNF_Mem ) ,FirstVNF_Mem ) ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( Max( RMSe,RCSe ) + RMSe ) / RRSe ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( ( MUR - ( ( DS / Max( DS,RMSe ) ) + CS ) ) + MUC ) ) ) * CS )", "obj1": 0.3130081300813008, "obj2": 0.5044245150747501}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * MUM ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2967479674796748, "obj2": 0.5101703451370706}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( Min( ( DDR - CRS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * ( DS * MLU ) ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8983739837398373, "obj2": 0.0414882273924159}, {"determining": "( Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( MRS ,MDR ) ) * ( FirstVNF_CPU_Server * ( ( RRS / ( FirstVNF_CPU_Server - AMS ) ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( Min( RMSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.766260162601626, "obj2": 0.07510903232372351}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),DDR ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( Min( MUC ,CS ) - ( ( RRSe * RRSe ) * ( RCSe / ( RMSe - DS ) ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( RCSe / RMSe ) / DS ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.7601626016260162, "obj2": 0.07758902635834393}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( ( FirstVNF_RAM_Server * ( MDR / Const ) ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,( Const - MDR ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Min( RMSe ,RRSe ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - Min( MUM ,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) ) * CS )", "obj1": 0.3150406504065041, "obj2": 0.5021606663780508}, {"determining": "( ( Min( PN ,PN ) + ( ( ( ( BR * ( PN * Min( ARS ,MRS ) ) ) * ( PN + MDR ) ) / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / ( DDR * RRS ) ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) - ( RRSe * RMSe ) ) * Min( RMSe ,MLU ) ) ) + ( MUR - MUC ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "( Min( ( DDR / FirstVNF_Mem ) ,( FirstVNF_CPU * PN ) ) / ( MDR * MDR ) )", "choosing": "( ( Min( ( ( RMSe * ( ( ( MUR * RRSe ) - ( MUM * MUM ) ) / ( RMSe - ( CS - DS ) ) ) ) + MUR ) ,( CS / CS ) ) / Max( MUM,MUR ) ) + ( MUM * MUR ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "Min( Max( ( Max( ARS,FirstVNF_CPU ) / ( RRS * RRS ) ),( ( CRS * RRS ) - ( ( ( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_Mem ) + FirstVNF_Mem_Server ) - ( DDR + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( MLU,MUC ) / RCSe ) - Min( ( RMSe * Min( Max( MUR,( RRSe / RRSe ) ) ,( RCSe * ( MUC + MUR ) ) ) ) ,RMSe ) )", "obj1": 0.758130081300813, "obj2": 0.07797510744348335}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server / ( Max( AMS,FirstVNF_CPU_Server ) * MDR ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( ( RRSe - MUR ) ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.991869918699187, "obj2": 0.0019334099970850095}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - ( CRS * ( Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( CRS ,( Const / ARS ) ) ) * ( ( FirstVNF_RAM * MRS ) + CRS ) ) ) ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RRSe - MUC ) + MLU ) * ( Max( ( DS - Min( CS ,CS ) ),Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) * RRSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008115669846613742}, {"determining": "Min( Max( ( Max( ARS,FirstVNF_CPU ) / ( RRS * RRS ) ),( ( CRS * RRS ) - ( ACS - ( DDR + ( CRS / PN ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( MLU,MUC ) / RCSe ) - ( CS - Max( Min( RMSe ,MUR ),( MUR * ( ( ( ( MUM * DS ) * Max( MUM,MUM ) ) / DS ) * RMSe ) ) ) ) )", "obj1": 0.758130081300813, "obj2": 0.07797510744348335}, {"determining": "Min( ( Min( Min( ( DDR * FirstVNF_RAM_Server ) ,Min( ACS ,( ARS - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( ( ARS / AMS ) * RRS ) * RRS ) - ( ACS - Max( FirstVNF_CPU_Server,( BR * MDR ) ) ) ) )", "choosing": "( ( DS + Min( ( ( RRSe + CS ) - MLU ) ,Max( MUC,( MUR - DS ) ) ) ) / ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - RMSe ) / RCSe ) + ( ( DS / Min( ( ( CS * MUC ) / ( DS - DS ) ) ,CS ) ) / ( CS + RMSe ) ) ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "( ( Min( RRS ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) + Max( MRS,( ( ( CRS + Const ) + FirstVNF_Mem ) / MDR ) ) )", "choosing": "( ( RMSe / ( ( MLU / CS ) / ( RCSe - ( RRSe + RMSe ) ) ) ) * Max( ( ( DS / MUC ) / RRSe ),Max( ( ( RCSe * MUM ) + Max( Min( MUC ,RMSe ),RMSe ) ),Min( ( ( ( RMSe + ( DS * CS ) ) - ( Max( MUC,MUM ) * MUM ) ) / RMSe ) ,MUM ) ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007511251552565648}, {"determining": "Min( Min( ( PN - ( Const / ACS ) ) ,Max( FirstVNF_Mem,CRS ) ) ,( ( Const - MDR ) - ( ( Min( ( Max( FirstVNF_Mem_Server,ARS ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) / Max( ( CRS / ( Max( ACS,FirstVNF_RAM_Server ) * PN ) ),( MDR - FirstVNF_CPU_Server ) ) ) + MRS ) ) )", "choosing": "Max( ( Min( RRSe ,( DS * DS ) ) * Max( MUR,MLU ) ),( Max( MUC,( ( MLU + RRSe ) / Max( MUM,MUR ) ) ) - RCSe ) )", "obj1": 0.9959349593495935, "obj2": 0.0011443333615791841}, {"determining": "( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_CPU ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) * ( RRS + PN ) ) ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( DS - Min( ( RRSe / RCSe ) ,MUC ) ) ) ) + MUR ) ) ,( DS / ( RMSe + ( ( RRSe + DS ) / MUM ) ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0013664756328364612}, {"determining": "( ( Min( ( CRS * DDR ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( MLU / CS ) - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( ( MUM * DS ) * Max( MUM,MUM ) ) / DS ) ) ) + ( ( RCSe - RRSe ) - ( ( Max( MLU,Max( RCSe,MUM ) ) - MUR ) * Max( MLU,RMSe ) ) ) ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}], "19": [{"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( ( Min( RRSe ,MUR ) * MLU ) / MLU ) ,RMSe ) ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN - ( ( ( Min( ( BR / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,BR ) * RRS ) + ( FirstVNF_Mem_Server / ( BR + CRS ) ) ) * ( FirstVNF_RAM * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( MUC,( MUR - ( Max( RMSe,MUR ) * CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( MLU / MUC ) / Max( RMSe,( CS / CS ) ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MUC ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( ( CS / MLU ),MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - Max( ACS,( FirstVNF_Mem_Server / AMS ) ) ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,( ( FirstVNF_Mem + RRS ) * FirstVNF_Mem ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / DS ) + Max( Max( RCSe,MUR ),MLU ) )", "obj1": 0.07926829268292683, "obj2": 0.756486022920312}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - Min( ( FirstVNF_CPU * PN ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( DDR + RRS ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),CRS ) ,PN ) / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - Max( ( ( RCSe + ( ( Max( RMSe,MUM ) + DS ) * ( ( CS + RRSe ) * ( MUM + RMSe ) ) ) ) + ( DS / RRSe ) ),Min( ( DS - RMSe ) ,RCSe ) ) ) )", "obj1": 0.6321138211382114, "obj2": 0.15791073943624762}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( ( Min( DDR ,Min( ( Const * FirstVNF_Mem ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,DDR ) ) ) ) )", "choosing": "( Min( ( MUC / Min( MUM ,CS ) ) ,MUC ) + ( MUR - ( ( ( ( ( DS * Max( MUM,RRSe ) ) * CS ) - RMSe ) - MUR ) + RCSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.4066799263624194}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "Min( ( MRS / Const ) ,( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_Mem_Server ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) - ( ACS - ( Const - ( FirstVNF_RAM + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Min( ( DS / CS ) ,( MUM / Min( Max( Max( MUM,MUR ),Max( MLU,CS ) ) ,CS ) ) ) / ( ( ( Max( Max( ( MUR / ( RCSe - RRSe ) ),CS ),( ( MUC - Min( CS ,CS ) ) / CS ) ) * ( MUC + MLU ) ) / ( ( MUC + MUC ) + ( MUM - DS ) ) ) / DS ) )", "obj1": 0.6056910569105691, "obj2": 0.21314489411551926}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.4349593495934959, "obj2": 0.3471318570666753}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,Min( PN ,PN ) ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MUR ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3475609756097561, "obj2": 0.4605860525128217}, {"determining": "( ( Min( PN ,PN ) + Max( ( FirstVNF_RAM_Server / ( BR - AMS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( ( ( RCSe - ( MUR - RMSe ) ) - ( ( RMSe * CS ) * MUM ) ) + MUC ) ,DS ) ) ) + ( MUR - MUC ) )", "obj1": 0.6910569105691057, "obj2": 0.1412910012858366}, {"determining": "( ( ( FirstVNF_Mem * ( Min( ARS ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( DS ,( Min( CS ,( DS + RRSe ) ) * Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.4796747967479675, "obj2": 0.3251743480194966}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "Min( Max( RRS,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Min( Min( ( RRS * FirstVNF_Mem ) ,FirstVNF_RAM ) ,MDR ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( ( RCSe * RRSe ) * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.16260162601626016, "obj2": 0.6693672618102888}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.056656275837327706}, {"determining": "( Max( ( ( Const - FirstVNF_RAM ) * FirstVNF_RAM_Server ),RRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) * Min( Min( ( RMSe / ( MUC / Max( Max( MLU,MUR ),Min( Min( MLU ,RRSe ) ,RCSe ) ) ) ) ,MLU ) ,( Max( ( MLU * MUR ),( Max( ( RMSe * Min( DS ,MUM ) ),MUC ) / Min( ( MUM * Min( MUM ,MLU ) ) ,( MUM * DS ) ) ) ) / ( MUR / ( ( ( CS * ( RCSe + MUC ) ) - RMSe ) / ( ( ( MUM - MUR ) - ( RMSe + DS ) ) - MUR ) ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.7036733638876238}, {"determining": "( ( Min( PN ,Min( Max( MDR,ACS ) ,Max( BR,PN ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( Max( FirstVNF_Mem_Server,Min( Max( FirstVNF_Mem,( PN + FirstVNF_CPU ) ) ,MRS ) ) / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( RCSe + MUC ) ,DS ) ) ) + ( MUR - ( ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS + RCSe ) * ( MUR + MUM ) ) ) ) ) + ( RMSe * RRSe ) ) ) )", "obj1": 0.5772357723577236, "obj2": 0.22947153103099036}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / DDR ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( ( DDR + RRS ) * ( MDR / ( ACS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( ( MUR + MUR ) - MUC ) ) * RRSe ) / ( ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / Max( RMSe,MUR ) ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.7215447154471545, "obj2": 0.10296090985621957}, {"determining": "Min( ( ( ( Const - MDR ) + RRS ) / Const ) ,( Const + FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( CS / RCSe ) ) ) / Max( RCSe,MLU ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.7886178861788617, "obj2": 0.06908440463076967}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8556910569105691, "obj2": 0.0433575530214167}, {"determining": "Min( ( FirstVNF_RAM_Server / ( Max( AMS,FirstVNF_CPU_Server ) * MDR ) ) ,( ( FirstVNF_CPU + PN ) * Max( ACS,ARS ) ) )", "choosing": "( Min( Max( MUM,RCSe ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( Max( PN,( RRS * FirstVNF_Mem_Server ) ) * DDR ) * Const ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RRSe,( Min( DS ,MUR ) / MUR ) ) ) + ( Max( MUC,( RCSe / MLU ) ) * CS ) ) )", "obj1": 0.21544715447154472, "obj2": 0.5823360114899261}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( Min( FirstVNF_CPU ,DDR ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( MUR * CS ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.08991137190971416}, {"determining": "Min( ( DDR / Min( ( FirstVNF_Mem * ( MDR - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ) - ( ( CS + MUC ) * ( Min( ( CS / MUC ) ,( RMSe * ( MUC - MUC ) ) ) + Max( ( MLU * Min( DS ,MUC ) ),CS ) ) ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2459349593495935, "obj2": 0.5637004437884627}, {"determining": "( ( Min( PN ,Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - CS ) * Max( MUR,MUC ) ) + ( MUR - MUC ) )", "obj1": 0.5386178861788617, "obj2": 0.25371638482413006}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8902439024390244, "obj2": 0.04176253353843697}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.550651003226846}, {"determining": "Min( ( Min( ARS ,( BR + Const ) ) + MDR ) ,( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( ( CS * Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) * ( RRSe - MUR ) ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( MUR - MUM ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / ( MLU / MLU ) ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5248641712176909}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9207317073170732, "obj2": 0.02866187901897091}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( ( BR * ARS ),( ( ACS - ACS ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,BR ) ) + Max( PN,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( ( MUR - CS ) + MUR ) )", "obj1": 0.23373983739837398, "obj2": 0.5784232908749067}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - FirstVNF_CPU ) * PN ) ),( RRS - FirstVNF_Mem ) ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( ( MLU / CS ) * Min( ( MUR * ( DS / MUC ) ) ,DS ) ) ) )", "obj1": 0.11585365853658537, "obj2": 0.708469510892546}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - Max( ACS,Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU_Server + MDR ) ,ARS ) ) ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( MUC * RMSe ) ) ) )", "obj1": 0.5020325203252033, "obj2": 0.2653003587665751}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.51651679792255}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( ( MRS - AMS ) * PN ) ),RRS ) ) + Min( FirstVNF_CPU_Server ,ARS ) ) ) + Min( ( MRS / MRS ) ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / ( MLU * ( MUM - Min( ( MUR * ( DS / MUC ) ) ,DS ) ) ) ) + ( MUR - Max( ( ( ( ( MUR / RCSe ) * RCSe ) - MUM ) * Max( RMSe,MUM ) ),( ( DS + RRSe ) * Min( RMSe ,Max( RMSe,( RCSe / MUM ) ) ) ) ) ) )", "obj1": 0.9004065040650406, "obj2": 0.03960595650078555}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( ( ( Max( PN,( FirstVNF_Mem - Min( ( ARS + DDR ) ,MDR ) ) ) - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_Mem / MRS ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe / ( Max( ( ( CS * CS ) + CS ),MUC ) / RRSe ) ) + ( MUR - ( ( RRSe - MUR ) + RCSe ) ) )", "obj1": 0.5467479674796748, "obj2": 0.2435320501709903}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,Min( BR ,MRS ) ) * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - MUM ) / RCSe ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.30284552845528456, "obj2": 0.4992531782193685}, {"determining": "( ( ( PN * FirstVNF_CPU ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - MUM ) + ( MUR - ( MUM + RCSe ) ) )", "obj1": 0.4735772357723577, "obj2": 0.32792669938954316}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( ( PN + Max( DDR,MRS ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ( FirstVNF_RAM + DDR ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + CS ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.5650406504065041, "obj2": 0.23261778802821553}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + ( MLU + Min( RRSe ,Max( MLU,RCSe ) ) ) )", "obj1": 0.5548780487804879, "obj2": 0.23786531304784386}, {"determining": "( ( Min( PN ,PN ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) / ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( CS / ( MUC * RMSe ) ) * ( ( MUM / ( MLU * ( MUC / MUC ) ) ) / ( RMSe - ( CS * ( MUR * RCSe ) ) ) ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.11382113821138211, "obj2": 0.723705035495608}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( PN,( ( ACS - ACS ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,BR ) ) + Max( Min( FirstVNF_Mem ,Max( CRS,FirstVNF_RAM_Server ) ),( ( ACS * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Max( DS,RCSe ) + ( Max( MUC,RMSe ) * CS ) ) )", "obj1": 0.23983739837398374, "obj2": 0.569423192947459}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( MUR - MUM ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / ( MLU / MLU ) ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3170731707317073, "obj2": 0.497794929940219}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * Const ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - MUC ) ) * RRSe ) / ( ( ( ( Min( ( MUC * DS ) ,( MUR + MUC ) ) / Max( RRSe,RCSe ) ) / RMSe ) / CS ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.6991869918699187, "obj2": 0.12814597153169074}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / MUC ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3313008130081301, "obj2": 0.48534395379367035}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.34146341463414637, "obj2": 0.46665683367535743}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN - ( ( MDR + CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MUC,( MUR - ( Max( RMSe,MUR ) * CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( MLU / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MLU ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( ( CS / MLU ),( CS / MUM ) ) ) )", "obj1": 0.7865853658536586, "obj2": 0.07052145933571784}, {"determining": "( ( ( FirstVNF_Mem * ( CRS - MRS ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( DS ,( Min( CS ,( DS + MUR ) ) * Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.5121951219512195, "obj2": 0.26175729928363295}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( BR * Const ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - MUC ) ) * RRSe ) / ( ( ( ( RMSe / Max( RRSe,RCSe ) ) / RMSe ) / CS ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.693089430894309, "obj2": 0.13473843921385018}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2967479674796748, "obj2": 0.5101703451370706}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) )", "choosing": "( Max( MLU,DS ) - ( MUR + ( Min( DS ,( RCSe - RCSe ) ) - RCSe ) ) )", "obj1": 0.266260162601626, "obj2": 0.5438743260786539}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7032520325203252, "obj2": 0.11867566495112286}, {"determining": "( ( Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe / CS ) + RMSe )", "obj1": 0.7479674796747967, "obj2": 0.08576370647120687}, {"determining": "Min( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - FirstVNF_CPU_Server ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * MUR ) ,Max( ( MUM / Min( ( MUC * ( CS + CS ) ) ,CS ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.32113821138211385, "obj2": 0.4896587639979515}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8394308943089431, "obj2": 0.049905995973038464}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( ( CRS * ( MRS / FirstVNF_RAM_Server ) ) ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,( RRSe - MUR ) ) - ( DS + ( MUM - MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.009192388663185861}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( ( ( DDR / BR ) / MDR ) ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ,( PN - ( FirstVNF_CPU_Server * MRS ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe - MLU ) ) + RRSe ) ) / Min( ( Min( MUM ,( MLU + ( Min( DS ,MLU ) * ( MUR * RCSe ) ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( Const * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( ( Max( RRSe,RCSe ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) * CS )", "obj1": 0.7682926829268293, "obj2": 0.07450484052087938}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ) ) + MRS ) ) + Min( Max( DDR,AMS ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( RRSe * RRSe ) * Min( Min( ( MUC + Max( CS,CS ) ) ,( Min( RRSe ,MUR ) * MLU ) ) ,CS ) ) * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9390243902439024, "obj2": 0.02129715060472555}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.9613821138211383, "obj2": 0.014684668301543526}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.7422024261236431}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( Min( ( MDR / CRS ) ,AMS ) ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Min( MUM ,( MLU + Min( RMSe ,RMSe ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ACS ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - ( ( RRSe * RRSe ) * ( CS / ( RMSe - DS ) ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Max( Min( Const ,FirstVNF_Mem_Server ),Min( ( ACS - Max( MRS,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MUC + MLU ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( RMSe / ( ( MUM * RMSe ) * ( MLU + MUR ) ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7520325203252033, "obj2": 0.08132398926508261}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / Max( MUC,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9349593495934959, "obj2": 0.024674951185628947}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - MUR ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8373983739837398, "obj2": 0.0530319101445605}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - ( ( RRSe * RRSe ) * ( RCSe / ( RMSe - DS ) ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),( ACS - ( ( FirstVNF_CPU + DDR ) / ACS ) ) ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ARS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( MUM * ( MUC / MUC ) ) * ( ( RRSe / Max( MUM,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9512195121951219, "obj2": 0.019130388766334383}, {"determining": "( ( Min( PN ,PN ) + ( ( ( ( BR * ( PN * Min( ARS ,MRS ) ) ) * ( PN + MDR ) ) / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / ( DDR * RRS ) ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) - ( RRSe * RMSe ) ) * Min( RMSe ,MLU ) ) ) + ( MUR - MUC ) )", "obj1": 0.9715447154471545, "obj2": 0.00676693498979753}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.959349593495935, "obj2": 0.016153645420753936}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ( Const * Max( Max( FirstVNF_CPU_Server,RRS ),ARS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * MUM ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3252032520325203, "obj2": 0.4879673339459019}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),( ACS - ( ( FirstVNF_CPU + DDR ) / ACS ) ) ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / Max( MUM,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9491869918699187, "obj2": 0.020860530646288514}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - AMS ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU - ARS ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( Max( ( CS * ( MLU + MUM ) ),CS ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08739837398373984, "obj2": 0.7465212981803773}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * MUM ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2967479674796748, "obj2": 0.5101703451370706}, {"determining": "( ( FirstVNF_RAM_Server + Max( CRS,( ( BR / ( Min( CRS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) ) ) / ( Min( ARS ,( ( PN / PN ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / ( ( RRSe + ( ( RCSe * RMSe ) - ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ) - RRSe ) ) + ( ( Min( MUR ,RCSe ) - ( MLU - MUC ) ) * Max( MUM,( ( MUC / Max( RRSe,RCSe ) ) * MLU ) ) ) )", "obj1": 0.08536585365853659, "obj2": 0.7505720038317084}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( ( ( ACS * DDR ) * Const ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * MLU ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08333333333333333, "obj2": 0.7544603960409401}, {"determining": "( ( Min( PN ,PN ) + ( ( ( ( BR * ( PN * Min( ARS ,MRS ) ) ) * ( PN + MDR ) ) / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / ( DDR * RRS ) ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) - ( RRSe * RMSe ) ) * Min( RMSe ,MLU ) ) ) + ( MUR - MUC ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( Min( ( DDR - CRS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * ( DS * MLU ) ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8983739837398373, "obj2": 0.0414882273924159}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( RCSe / RMSe ) / DS ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU ) + Min( ( ( Const / ( Min( ( DDR - CRS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( Min( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + MDR ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( ( MUR / RRSe ) * ( Min( MUM ,RMSe ) * MLU ) ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9288617886178862, "obj2": 0.026402029367166624}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) + ( MUR - ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ) )", "obj1": 0.926829268292683, "obj2": 0.027130722241959806}, {"determining": "Min( MDR ,( PN - ( RRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( ( MUC - DS ) / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * ( Max( RMSe,MUM ) - ( Max( Min( RRSe ,MUR ),RMSe ) * MUR ) ) ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8394308943089431, "obj2": 0.049905995973038464}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( PN ,BR ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( CRS - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( ( AMS + ARS ) + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * Max( Min( ( DS + RMSe ) ,RRSe ),MUR ) ) ) + ( MUR - MUC ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * Min( Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ,( PN - MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * ( MLU * ( MUR * CS ) ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) * CS )", "obj1": 0.75, "obj2": 0.08489340673602352}, {"determining": "( Min( ( ( ARS + ( CRS * MDR ) ) + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,DS ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( MLU - RRSe ) )", "obj1": 0.7642276422764228, "obj2": 0.0768590911056188}, {"determining": "( Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.7601626016260162, "obj2": 0.07758902635834393}, {"determining": "( Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,Min( MRS ,MDR ) ) * ( FirstVNF_CPU_Server * ( ( RRS / ( FirstVNF_CPU_Server - AMS ) ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( Min( RMSe ,MUC ) ,RMSe ) ) - ( MUR / MUM ) ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.766260162601626, "obj2": 0.07510903232372351}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) * CS )", "obj1": 0.7682926829268293, "obj2": 0.07450484052087938}, {"determining": "Min( Max( ( Max( ARS,FirstVNF_CPU ) / ( RRS * RRS ) ),( ( CRS * RRS ) - ( ( ( Max( MDR,FirstVNF_Mem_Server ) - FirstVNF_Mem ) + FirstVNF_Mem_Server ) - ( DDR + Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( MLU,MUC ) / RCSe ) - Min( ( RMSe * Min( Max( MUR,( RRSe / RRSe ) ) ,( RCSe * ( MUC + MUR ) ) ) ) ,RMSe ) )", "obj1": 0.758130081300813, "obj2": 0.07797510744348335}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server / ( Max( AMS,FirstVNF_CPU_Server ) * MDR ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( ( RRSe - MUR ) ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.991869918699187, "obj2": 0.0019334099970850095}, {"determining": "Min( Max( ( Max( ARS,FirstVNF_CPU ) / ( RRS * RRS ) ),( ( CRS * RRS ) - ( ACS - ( DDR + Min( Min( RRS ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( MLU,MUC ) / RCSe ) - ( CS - Max( Min( RMSe ,MUR ),( ( CS * ( MLU / ( MLU / MLU ) ) ) * ( ( ( ( MUM * DS ) * Max( MUM,MUM ) ) / DS ) * MUR ) ) ) ) )", "obj1": 0.758130081300813, "obj2": 0.07797510744348335}, {"determining": "Min( ( Min( Min( ( DDR * FirstVNF_RAM_Server ) ,Min( ACS ,( ARS - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ,( ( ( ( ARS / AMS ) * RRS ) * RRS ) - ( ACS - Max( FirstVNF_CPU_Server,( BR * MDR ) ) ) ) )", "choosing": "( ( DS + Min( ( ( RRSe + CS ) - MLU ) ,Max( MUC,( MUR - DS ) ) ) ) / ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - RMSe ) / RCSe ) + ( ( DS / Min( ( ( CS * MUC ) / ( DS - DS ) ) ,CS ) ) / ( CS + RMSe ) ) ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}], "20": [{"determining": "( ( Min( FirstVNF_RAM_Server ,MRS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RMSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( ( RRSe - MUR ) ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( ( Min( RRSe ,MUR ) * MLU ) / MLU ) ,RMSe ) ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - Max( ACS,( FirstVNF_Mem_Server / AMS ) ) ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,( ( FirstVNF_Mem + RRS ) * FirstVNF_Mem ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / DS ) + Max( Max( RCSe,MUR ),MLU ) )", "obj1": 0.07926829268292683, "obj2": 0.756486022920312}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - Min( ( FirstVNF_CPU * PN ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( DDR + RRS ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),CRS ) ,PN ) / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - Max( ( ( RCSe + ( ( Max( RMSe,MUM ) + DS ) * ( ( CS + RRSe ) * ( MUM + RMSe ) ) ) ) + ( DS / RRSe ) ),Min( ( DS - RMSe ) ,RCSe ) ) ) )", "obj1": 0.6321138211382114, "obj2": 0.15791073943624762}, {"determining": "( ( ( FirstVNF_Mem * ( Min( Min( Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_Mem - DDR ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( ( MLU / RCSe ) + ( RMSe - Min( DS ,( ( RMSe * ( MUC - RRSe ) ) * Max( ( MUM / DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.5691056910569106, "obj2": 0.21260863626300344}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( ( Min( DDR ,Min( ( Const * FirstVNF_Mem ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,DDR ) ) ) ) )", "choosing": "( Min( ( MUC / Min( MUM ,CS ) ) ,MUC ) + ( MUR - ( ( ( ( ( DS * Max( MUM,RRSe ) ) * CS ) - RMSe ) - MUR ) + RCSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.4066799263624194}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.4349593495934959, "obj2": 0.3471318570666753}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,Min( PN ,PN ) ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MUR ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3475609756097561, "obj2": 0.4605860525128217}, {"determining": "( ( ( PN * FirstVNF_CPU ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - MUM ) + ( MUR - ( MUM + RCSe ) ) )", "obj1": 0.4735772357723577, "obj2": 0.32792669938954316}, {"determining": "( ( ( FirstVNF_Mem * ( Min( ARS ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + ( DDR - RRS ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( ( ( RCSe * RMSe ) + ( MUR * CS ) ) ,( Min( CS ,( DS + RRSe ) ) * Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.4796747967479675, "obj2": 0.28164497820342105}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "Min( Max( RRS,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Min( Min( ( RRS * FirstVNF_Mem ) ,FirstVNF_RAM ) ,MDR ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( ( RCSe * RRSe ) * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.16260162601626016, "obj2": 0.6693672618102888}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.056656275837327706}, {"determining": "( Max( ( ( Const - FirstVNF_RAM ) * FirstVNF_RAM_Server ),RRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) * Min( Min( ( RMSe / ( MUC / Max( Max( MLU,MUR ),Min( Min( MLU ,RRSe ) ,RCSe ) ) ) ) ,MLU ) ,( Max( ( MLU * MUR ),( Max( ( RMSe * Min( DS ,MUM ) ),MUC ) / Min( ( MUM * Min( MUM ,MLU ) ) ,( MUM * DS ) ) ) ) / ( MUR / ( ( ( CS * ( RCSe + MUC ) ) - RMSe ) / ( ( ( MUM - MUR ) - ( RMSe + DS ) ) - MUR ) ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.7036733638876238}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / DDR ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( ( DDR + RRS ) * ( MDR / ( ACS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( ( MUR + MUR ) - MUC ) ) * RRSe ) / ( ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / Max( RMSe,MUR ) ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.7215447154471545, "obj2": 0.10296090985621957}, {"determining": "Min( ( ( ( Const - MDR ) + RRS ) / Const ) ,( Const + FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( CS / RCSe ) ) ) / Max( RCSe,MLU ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.7886178861788617, "obj2": 0.06908440463076967}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6585365853658537, "obj2": 0.1498074521521436}, {"determining": "Min( ( FirstVNF_RAM_Server / ( Max( AMS,FirstVNF_CPU_Server ) * MDR ) ) ,( ( FirstVNF_CPU + PN ) * Max( ACS,ARS ) ) )", "choosing": "( Min( Max( MUM,RCSe ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) )", "obj1": 0.4695121951219512, "obj2": 0.3456056835781496}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( Min( FirstVNF_CPU ,DDR ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( MUR * CS ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.08991137190971416}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( Max( PN,( RRS * FirstVNF_Mem_Server ) ) * DDR ) * Const ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RRSe,( Min( DS ,MUR ) / MUR ) ) ) + ( Max( MUC,( RCSe / MLU ) ) * CS ) ) )", "obj1": 0.21544715447154472, "obj2": 0.5823360114899261}, {"determining": "( ( Min( PN ,Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - CS ) * Max( MUR,MUC ) ) + ( MUR - MUC ) )", "obj1": 0.5386178861788617, "obj2": 0.25371638482413006}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( ( PN + Max( DDR,MRS ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ( FirstVNF_RAM + DDR ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + CS ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.5650406504065041, "obj2": 0.23261778802821553}, {"determining": "Min( ( Min( ARS ,( BR + Const ) ) + MDR ) ,( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( ( CS * Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) * ( RRSe - MUR ) ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Max( ( MLU / ( ( RCSe / MUC ) + MUC ) ),RRSe ) - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6727642276422764, "obj2": 0.1417909032795572}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( MUR - MUM ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / ( MLU / MLU ) ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5248641712176909}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,Min( BR ,MRS ) ) * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - MUM ) / RCSe ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.30284552845528456, "obj2": 0.4992531782193685}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( ( BR * ARS ),( ( ACS - ACS ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,BR ) ) + Max( PN,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( ( MUR - CS ) + MUR ) )", "obj1": 0.23373983739837398, "obj2": 0.5784232908749067}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - FirstVNF_CPU ) * PN ) ),( RRS - FirstVNF_Mem ) ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( ( MLU / CS ) * Min( ( MUR * ( DS / MUC ) ) ,DS ) ) ) )", "obj1": 0.11585365853658537, "obj2": 0.708469510892546}, {"determining": "Min( ( DDR / Min( ( FirstVNF_Mem * ( MDR - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ) - ( ( CS + MUC ) * ( Min( ( CS / MUC ) ,( RMSe * ( MUC - MUC ) ) ) + Max( ( MLU * Min( DS ,MUC ) ),CS ) ) ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2459349593495935, "obj2": 0.5637004437884627}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - Max( ACS,Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU_Server + MDR ) ,ARS ) ) ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( MUC * RMSe ) ) ) )", "obj1": 0.5020325203252033, "obj2": 0.2653003587665751}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,( AMS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,Min( FirstVNF_CPU ,( Const + ( FirstVNF_Mem / ( ( Const - FirstVNF_Mem ) - ( DDR + Max( Max( Const,DDR ),PN ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( RRSe / MLU ) - CS ) + MLU ) ,RRSe ) - ( ( RRSe * ( Min( Min( RRSe ,( DS - CS ) ) ,RMSe ) + MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.5064687000788365}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8902439024390244, "obj2": 0.04176253353843697}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ARS,PN ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),Min( MLU ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8617886178861789, "obj2": 0.04185189160903199}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( ( ( Max( PN,( FirstVNF_Mem - Min( ( ARS + DDR ) ,MDR ) ) ) - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_Mem / MRS ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe / ( Max( ( ( CS * CS ) + CS ),MUC ) / RRSe ) ) + ( MUR - ( ( RRSe - MUR ) + RCSe ) ) )", "obj1": 0.5467479674796748, "obj2": 0.2435320501709903}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( Const / FirstVNF_Mem ) + PN ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5561631165864102}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Min( RRS ,FirstVNF_RAM_Server ) / Max( ( CRS / ( ( MRS - DDR ) * ( CRS * FirstVNF_Mem_Server ) ) ),RRS ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( ( MUM * CS ) * MUC ) - DS ) ) ) + ( MUR - MUC ) )", "obj1": 0.9126016260162602, "obj2": 0.030989835835378166}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( PN / PN ) ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ,Max( ( MUM / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2804878048780488, "obj2": 0.511929995253608}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8556910569105691, "obj2": 0.0433575530214167}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + ( MLU + Min( RRSe ,Max( MLU,RCSe ) ) ) )", "obj1": 0.5548780487804879, "obj2": 0.23786531304784386}, {"determining": "( ( Min( PN ,PN ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) / ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( CS / ( MUC * RMSe ) ) * ( ( MUM / ( MLU * ( MUC / MUC ) ) ) / ( RMSe - ( CS * ( MUR * RCSe ) ) ) ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.11382113821138211, "obj2": 0.723705035495608}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( PN,( ( ACS - ACS ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,BR ) ) + Max( Min( FirstVNF_Mem ,Max( CRS,FirstVNF_RAM_Server ) ),( ( ACS * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Max( DS,RCSe ) + ( Max( MUC,RMSe ) * CS ) ) )", "obj1": 0.23983739837398374, "obj2": 0.569423192947459}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( MUR - MUM ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / ( MLU / MLU ) ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3170731707317073, "obj2": 0.497794929940219}, {"determining": "( ( Min( PN ,PN ) + Max( ( FirstVNF_RAM_Server / ( BR - AMS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUM,RMSe ) * ( CS / Min( ( ( ( RCSe - ( MUR - RMSe ) ) - ( ( RMSe * CS ) * MUM ) ) + MUC ) ,DS ) ) ) + ( MUR - MUC ) )", "obj1": 0.6910569105691057, "obj2": 0.1412910012858366}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / MUC ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3313008130081301, "obj2": 0.48534395379367035}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.34146341463414637, "obj2": 0.46665683367535743}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( ( MRS - AMS ) * PN ) ),RRS ) ) + Min( FirstVNF_CPU_Server ,ARS ) ) ) + Min( ( MRS / MRS ) ,( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / ( MLU * ( MUM - Min( ( MUR * ( DS / MUC ) ) ,DS ) ) ) ) + ( MUR - Max( ( ( ( ( MUR / RCSe ) * RCSe ) - MUM ) * Max( RMSe,MUM ) ),( ( DS + RRSe ) * Min( RMSe ,Max( RMSe,( RCSe / MUM ) ) ) ) ) ) )", "obj1": 0.9004065040650406, "obj2": 0.03960595650078555}, {"determining": "Min( ( ( FirstVNF_CPU + Min( ( RRS - BR ) ,Const ) ) * Max( FirstVNF_CPU_Server,RRS ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * ( ( ( RMSe - MUM ) / MUR ) - MLU ) ) / Min( ( ( ( RMSe + Max( ( MUR / MLU ),RRSe ) ) + ( MUC / ( ( MUM / MLU ) * ( MUR - MUR ) ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7479674796747967, "obj2": 0.08454442704909101}, {"determining": "( ( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - RRSe ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.9471544715447154, "obj2": 0.017065842445258113}, {"determining": "( ( ( FirstVNF_Mem * ( CRS - MRS ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( DS ,( Min( CS ,( DS + MUR ) ) * Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.5121951219512195, "obj2": 0.26175729928363295}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( BR * Const ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - MUC ) ) * RRSe ) / ( ( ( ( RMSe / Max( RRSe,RCSe ) ) / RMSe ) / CS ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.693089430894309, "obj2": 0.13473843921385018}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * Min( AMS ,FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( Min( MUC ,( MUR + RMSe ) ) * CS ) ) ) ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - MUM ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7764227642276422, "obj2": 0.07143169547595579}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) )", "choosing": "( Max( MLU,DS ) - ( MUR + ( Min( DS ,( RCSe - RCSe ) ) - RCSe ) ) )", "obj1": 0.266260162601626, "obj2": 0.5438743260786539}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ) ) + MRS ) ) + Min( Max( DDR,AMS ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( RRSe * RRSe ) * Min( Min( ( MUC + Max( CS,CS ) ) ,( Min( RRSe ,MUR ) * MLU ) ) ,CS ) ) * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9390243902439024, "obj2": 0.02129715060472555}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * Const ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - MUC ) ) * RRSe ) / ( ( ( ( Min( ( MUC * DS ) ,( MUR + MUC ) ) / Max( RRSe,RCSe ) ) / RMSe ) / CS ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.6991869918699187, "obj2": 0.12814597153169074}, {"determining": "Min( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - FirstVNF_CPU_Server ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * MUR ) ,Max( ( MUM / Min( ( MUC * ( CS + CS ) ) ,CS ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.32113821138211385, "obj2": 0.4896587639979515}, {"determining": "Min( MDR ,( PN - ( RRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( ( MUC - DS ) / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * ( Max( RMSe,MUM ) - ( Max( Min( RRSe ,MUR ),RMSe ) * MUR ) ) ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8394308943089431, "obj2": 0.049905995973038464}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( ( CRS * ( MRS / FirstVNF_RAM_Server ) ) ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,( RRSe - MUR ) ) - ( DS + ( MUM - MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.009192388663185861}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( Min( ( MDR / CRS ) ,AMS ) ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Min( MUM ,( MLU + Min( RMSe ,RMSe ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.550651003226846}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.9613821138211383, "obj2": 0.014684668301543526}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.7422024261236431}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( ( ( DDR / BR ) / MDR ) ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ,( PN - ( FirstVNF_CPU_Server * MRS ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe - MLU ) ) + RRSe ) ) / Min( ( Min( MUM ,( MLU + ( Min( DS ,MLU ) * ( MUR * RCSe ) ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.959349593495935, "obj2": 0.016153645420753936}, {"determining": "( Max( Max( Min( ( Const / FirstVNF_Mem ) ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( Min( PN ,FirstVNF_CPU ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ACS ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( Min( Min( Min( ( Min( MUC ,RMSe ) * Min( RRSe ,CS ) ) ,( CS - RMSe ) ) ,Max( ( ( DS + CS ) - RCSe ),MUR ) ) ,( MUR * ( ( MUC + DS ) * MUR ) ) ) * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - ( ( RRSe * RRSe ) * ( CS / MLU ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9207317073170732, "obj2": 0.02866187901897091}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / Max( MUC,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9349593495934959, "obj2": 0.024674951185628947}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - MUR ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8373983739837398, "obj2": 0.0530319101445605}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ACS ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - ( ( RRSe * RRSe ) * ( CS / ( RMSe - DS ) ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( Min( ( ( Const / ( Min( ( DDR - CRS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe - CS ) * Max( MUR,MUC ) ) + ( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * ( DS * MLU ) ) ) ) ) - MUC ) )", "obj1": 0.7012195121951219, "obj2": 0.12449353555498342}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ( Const * Max( Max( FirstVNF_CPU_Server,RRS ),ARS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * MUM ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3252032520325203, "obj2": 0.4879673339459019}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN - ( ( MDR + CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MUC,( MUR - ( Max( RMSe,MUR ) * CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( MLU / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MLU ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( ( CS / MLU ),( CS / MUM ) ) ) )", "obj1": 0.7865853658536586, "obj2": 0.07052145933571784}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7032520325203252, "obj2": 0.11867566495112286}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - AMS ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU - ARS ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( Max( ( CS * ( MLU + MUM ) ),CS ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08739837398373984, "obj2": 0.7465212981803773}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Max( Min( Const ,FirstVNF_Mem_Server ),Min( ( ACS - Max( MRS,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MUC + MLU ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( RMSe / ( ( MUM * RMSe ) * ( MLU + MUR ) ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7520325203252033, "obj2": 0.08132398926508261}, {"determining": "( ( FirstVNF_RAM_Server + Max( CRS,( ( BR / ( Min( CRS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) ) ) / ( Min( ARS ,( ( PN / PN ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / ( ( RRSe + ( ( RCSe * RMSe ) - ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ) - RRSe ) ) + ( ( Min( MUR ,RCSe ) - ( MLU - MUC ) ) * Max( MUM,( ( MUC / Max( RRSe,RCSe ) ) * MLU ) ) ) )", "obj1": 0.08536585365853659, "obj2": 0.7505720038317084}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( ( ( ACS * DDR ) * Const ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * MLU ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08333333333333333, "obj2": 0.7544603960409401}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( Min( ( DDR - CRS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * ( DS * MLU ) ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.8983739837398373, "obj2": 0.0414882273924159}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( CRS - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9857723577235772, "obj2": 0.003802130974724327}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU ) + Min( ( ( Const / ( Min( ( DDR - CRS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( Min( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + MDR ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( ( MUR / RRSe ) * ( Min( MUM ,RMSe ) * MLU ) ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9288617886178862, "obj2": 0.026402029367166624}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( ( CRS * RRS ) - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( Min( MUC ,( MUR + RMSe ) ) * MUM ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9715447154471545, "obj2": 0.00676693498979753}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / ( Const - ARS ) ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe - Min( DS ,( Min( CS ,( DS + RRSe ) ) * Max( MLU,RMSe ) ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0012328683413720739}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( MRS ,Max( ARS,( FirstVNF_CPU * PN ) ) ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / RRSe ) - ( ( MUR - MLU ) / Min( ( DS * ( ( ( RCSe / MUM ) - ( RMSe * MUM ) ) + CS ) ) ,Max( MLU,RMSe ) ) ) ) * CS )", "obj1": 0.7560975609756098, "obj2": 0.07985881202107603}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8394308943089431, "obj2": 0.049905995973038464}, {"determining": "( Min( ( ( ARS + ( CRS * MDR ) ) + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,DS ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( MLU - RRSe ) )", "obj1": 0.7642276422764228, "obj2": 0.0768590911056188}, {"determining": "( ( Min( PN ,PN ) + ( ( ( ( BR * ( PN * Min( ARS ,MRS ) ) ) * ( PN + MDR ) ) / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / ( DDR * RRS ) ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) - ( RRSe * RMSe ) ) * Min( RMSe ,MLU ) ) ) + ( MUR - MUC ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) * CS )", "obj1": 0.7682926829268293, "obj2": 0.07450484052087938}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( PN ,BR ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( CRS - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( ( AMS + ARS ) + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * Max( Min( ( DS + RMSe ) ,RRSe ),MUR ) ) ) + ( MUR - MUC ) )", "obj1": 0.9796747967479674, "obj2": 0.004554918776121536}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server / ( Max( AMS,FirstVNF_CPU_Server ) * MDR ) ) * PN ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RRSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( ( RRSe - MUR ) ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.991869918699187, "obj2": 0.0019334099970850095}, {"determining": "( ( Min( ( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( ( CRS / PN ) - ( BR * ACS ) ) ) ) ,AMS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( DS ,MUC ) - RRSe ) ) + ( ( RRSe * Min( RMSe ,( ( RCSe / RMSe ) / DS ) ) ) + MUR ) ) ,Min( RRSe ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 0.9898373983739838, "obj2": 0.0032314918272220955}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / Const ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) + ( DS * ( RMSe + ( ( ( MUC + RMSe ) - MUM ) / ( ( DS / RCSe ) + Min( MUC ,MUM ) ) ) ) ) )", "obj1": 0.9247967479674797, "obj2": 0.027197322760595343}], "21": [{"determining": "Min( MRS ,( ( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,BR ) ) - ( ACS - ( FirstVNF_Mem - ACS ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( CS,Max( ( MUC / RMSe ),MUM ) ) ) + MUR ) ,Min( MUC ,RRSe ) ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MRS ) * PN ) - Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC - ( Min( Max( ( MUC * MUR ),( Min( MUR ,DS ) - RMSe ) ) ,MUC ) - RRSe ) ) + Max( ( ( MLU - ( ( ( CS - MUC ) * ( MUR * MUM ) ) - CS ) ) + MUM ),DS ) ) ,Min( ( RRSe - MUR ) ,( ( ( RMSe / Max( CS,MUM ) ) / RCSe ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR - Max( ACS,( FirstVNF_Mem_Server / AMS ) ) ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,( ( FirstVNF_Mem + RRS ) * FirstVNF_Mem ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / DS ) + Max( Max( RCSe,MUR ),MLU ) )", "obj1": 0.07926829268292683, "obj2": 0.756486022920312}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( ( Min( DDR ,Min( ( Const * FirstVNF_Mem ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,DDR ) ) ) ) )", "choosing": "( Min( ( MUC / Min( MUM ,CS ) ) ,MUC ) + ( MUR - ( ( ( ( ( DS * Max( MUM,RRSe ) ) * CS ) - RMSe ) - MUR ) + RCSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.4066799263624194}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "( ( ( PN * FirstVNF_CPU ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( Max( RCSe,MUC ) - MUM ) + ( MUR - ( MUM + RCSe ) ) )", "obj1": 0.4735772357723577, "obj2": 0.32792669938954316}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - Min( ( FirstVNF_CPU * PN ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( DDR + RRS ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),CRS ) ,PN ) / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - Max( ( ( RCSe + ( ( Max( RMSe,MUM ) + DS ) * ( ( CS + RRSe ) * ( MUM + RMSe ) ) ) ) + ( DS / RRSe ) ),Min( ( DS - RMSe ) ,RCSe ) ) ) )", "obj1": 0.6321138211382114, "obj2": 0.15791073943624762}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( ( ( RRS - AMS ) * ( MDR - FirstVNF_RAM ) ) ,RRS ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - FirstVNF_CPU ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( ( Max( RMSe,MUR ) * ( RCSe / DS ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / ( Min( MUM ,( CS * RRSe ) ) / MLU ) ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / RRSe ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.35772357723577236, "obj2": 0.4517235368309968}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( Min( MUM ,RMSe ) ,Max( ( ( RRSe / Max( MUM,MUM ) ) / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.4796747967479675, "obj2": 0.2777247238123627}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.4349593495934959, "obj2": 0.3471318570666753}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "Min( Max( RRS,Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,Min( Min( ( RRS * FirstVNF_Mem ) ,FirstVNF_RAM ) ,MDR ) ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( ( RCSe * RRSe ) * MLU ) ,Max( MLU,RMSe ) ) + ( MUR + MUR ) ) )", "obj1": 0.16260162601626016, "obj2": 0.6693672618102888}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( ( Min( DDR ,Min( ( DDR - FirstVNF_RAM_Server ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( MUC / Min( MUM ,CS ) ) ,MUC ) + ( MUR - ( ( ( CS - RMSe ) - MUR ) + ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) ) )", "obj1": 0.6300813008130082, "obj2": 0.19871261764782525}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.056656275837327706}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - Min( ( DDR - CRS ) ,ARS ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8699186991869918, "obj2": 0.038610302528891714}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Min( RRS ,FirstVNF_RAM_Server ) / Max( ( CRS / ( ( MRS - DDR ) * ( CRS * FirstVNF_Mem_Server ) ) ),RRS ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( ( MUM * CS ) * MUC ) - DS ) ) ) + ( MUR - MUC ) )", "obj1": 0.9126016260162602, "obj2": 0.030989835835378166}, {"determining": "( ( ( FirstVNF_Mem * ( Min( Min( Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_Mem - DDR ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( ( MLU / RCSe ) + ( RMSe - Min( DS ,( ( RMSe * ( MUC - RRSe ) ) * Max( ( MUM / DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.4369918699186992, "obj2": 0.34152648383766654}, {"determining": "Min( ( ( ( Const - MDR ) + RRS ) / Const ) ,( Const + FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( CS / RCSe ) ) ) / Max( RCSe,MLU ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.7886178861788617, "obj2": 0.06908440463076967}, {"determining": "( Max( ( ( Const - FirstVNF_RAM ) * FirstVNF_RAM_Server ),RRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) * Min( Min( ( RMSe / ( MUC / Max( Max( MLU,MUR ),Min( Min( MLU ,RRSe ) ,RCSe ) ) ) ) ,MLU ) ,( Max( ( MLU * MUR ),( Max( ( RMSe * Min( DS ,MUM ) ),MUC ) / Min( ( MUM * Min( MUM ,MLU ) ) ,( MUM * DS ) ) ) ) / ( MUR / ( ( ( CS * ( RCSe + MUC ) ) - RMSe ) / ( ( ( MUM - MUR ) - ( RMSe + DS ) ) - MUR ) ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.7036733638876238}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6565040650406504, "obj2": 0.14960364698008935}, {"determining": "( ( ( FirstVNF_Mem * ( Min( Min( Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_Mem - DDR ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( ( MLU / RCSe ) + ( RMSe - Min( DS ,( ( RMSe * ( MUC - RRSe ) ) * Max( ( MUM / DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.5691056910569106, "obj2": 0.21260863626300344}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) + ( MUR - MUC ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5955284552845529, "obj2": 0.21178057563487762}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / DDR ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( ( DDR + RRS ) * ( MDR / ( ACS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( ( MUR + MUR ) - MUC ) ) * RRSe ) / ( ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / Max( RMSe,MUR ) ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.7215447154471545, "obj2": 0.10296090985621957}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - MUM ) / MUC ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6138211382113821, "obj2": 0.20454903778871164}, {"determining": "( ( ( Max( PN,( FirstVNF_Mem - Min( ( ARS + DDR ) ,MDR ) ) ) - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_Mem / MRS ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe / ( Max( ( ( CS * CS ) + CS ),MUC ) / RRSe ) ) + ( MUR - ( ( RRSe - MUR ) + RCSe ) ) )", "obj1": 0.5467479674796748, "obj2": 0.2435320501709903}, {"determining": "Min( ( ( ( ( FirstVNF_Mem / Max( CRS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,FirstVNF_Mem_Server ) / ( ( MRS / Const ) / FirstVNF_CPU_Server ) ) - Max( ( CRS / ( FirstVNF_Mem_Server - ACS ) ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) - MUC ) ) - ( Min( ( RCSe * MUR ) ,Max( ( ( RRSe / Max( MUM,MUM ) ) / Min( MLU ,Min( Max( RCSe,MUR ) ,( MUR / MUC ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.34146341463414637, "obj2": 0.4579905116060634}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( Max( PN,( RRS * FirstVNF_Mem_Server ) ) * DDR ) * Const ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RRSe,( Min( DS ,MUR ) / MUR ) ) ) + ( Max( MUC,( RCSe / MLU ) ) * CS ) ) )", "obj1": 0.21544715447154472, "obj2": 0.5823360114899261}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / AMS ) ) * PN ) ,( FirstVNF_CPU + FirstVNF_CPU ) ) ) - ( BR * Const ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - MUC ) ) * RRSe ) / ( ( ( ( RMSe / Max( RRSe,RCSe ) ) / RMSe ) / CS ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.693089430894309, "obj2": 0.13473843921385018}, {"determining": "( ( ( FirstVNF_Mem * ( CRS - MRS ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ( FirstVNF_RAM_Server / ( Max( AMS,FirstVNF_CPU_Server ) * MDR ) ) ,( ( FirstVNF_CPU + PN ) * Max( ACS,ARS ) ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( Min( Max( MUM,RCSe ) ,( RRSe - MUR ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 0.524390243902439, "obj2": 0.25292205064323237}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( ( PN + Max( DDR,MRS ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ( FirstVNF_RAM + DDR ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + CS ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.5650406504065041, "obj2": 0.23261778802821553}, {"determining": "Min( ( Min( ARS ,( BR + Const ) ) + MDR ) ,( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( ( CS * Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) * ( RRSe - MUR ) ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( MUR - MUM ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / ( MLU / MLU ) ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5248641712176909}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( ( BR * ARS ),( ( ACS - ACS ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,BR ) ) + Max( PN,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( ( MUR - CS ) + MUR ) )", "obj1": 0.23373983739837398, "obj2": 0.5784232908749067}, {"determining": "Min( ( DDR / Min( ( FirstVNF_Mem * ( MDR - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ) - ( ( CS + MUC ) * ( Min( ( CS / MUC ) ,( RMSe * ( MUC - MUC ) ) ) + Max( ( MLU * Min( DS ,MUC ) ),CS ) ) ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2459349593495935, "obj2": 0.5637004437884627}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - Max( ACS,Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU_Server + MDR ) ,ARS ) ) ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( MUC * RMSe ) ) ) )", "obj1": 0.5020325203252033, "obj2": 0.2653003587665751}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,( AMS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,Min( FirstVNF_CPU ,( Const + ( FirstVNF_Mem / ( ( Const - FirstVNF_Mem ) - ( DDR + Max( Max( Const,DDR ),PN ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( RRSe / MLU ) - CS ) + MLU ) ,RRSe ) - ( ( RRSe * ( Min( Min( RRSe ,( DS - CS ) ) ,RMSe ) + MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.5064687000788365}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,Min( BR ,MRS ) ) * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - MUM ) / RCSe ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.30284552845528456, "obj2": 0.4992531782193685}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( Const / FirstVNF_Mem ) + PN ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5561631165864102}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( PN / PN ) ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ,Max( ( MUM / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2804878048780488, "obj2": 0.511929995253608}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + ( MLU + Min( RRSe ,Max( MLU,RCSe ) ) ) )", "obj1": 0.5548780487804879, "obj2": 0.23786531304784386}, {"determining": "( ( Min( PN ,PN ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) / ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( CS / ( MUC * RMSe ) ) * ( ( MUM / ( MLU * ( MUC / MUC ) ) ) / ( RMSe - ( CS * ( MUR * RCSe ) ) ) ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.11382113821138211, "obj2": 0.723705035495608}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Max( ( MLU / ( ( RCSe / MUC ) + MUC ) ),RRSe ) - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6727642276422764, "obj2": 0.1417909032795572}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( PN,( ( ACS - ACS ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,BR ) ) + Max( Min( FirstVNF_Mem ,Max( CRS,FirstVNF_RAM_Server ) ),( ( ACS * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Max( DS,RCSe ) + ( Max( MUC,RMSe ) * CS ) ) )", "obj1": 0.23983739837398374, "obj2": 0.569423192947459}, {"determining": "( Max( Max( AMS,RRS ),FirstVNF_CPU ) + Min( ( ( Max( Const,PN ) - FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( ( ACS - FirstVNF_CPU_Server ) / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / ( RMSe + CS ) ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.733739837398374, "obj2": 0.09563998928838313}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_Mem ) - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / ( Min( ( ( CS * MUC ) / MUR ) ,( MUC + RMSe ) ) * MLU ) ) - DS )", "obj1": 0.6971544715447154, "obj2": 0.11922396596657542}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8556910569105691, "obj2": 0.0433575530214167}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / CS ) + ( MLU + RRSe ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.6747967479674797, "obj2": 0.13950257630333127}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / MUC ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3313008130081301, "obj2": 0.48534395379367035}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( Min( FirstVNF_CPU ,DDR ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( MUR * CS ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.08991137190971416}, {"determining": "Min( ( ( FirstVNF_CPU + Min( ( RRS - BR ) ,Const ) ) * Max( FirstVNF_CPU_Server,RRS ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * ( ( ( RMSe - MUM ) / MUR ) - MLU ) ) / Min( ( ( ( RMSe + Max( ( MUR / MLU ),RRSe ) ) + ( MUC / ( ( MUM / MLU ) * ( MUR - MUR ) ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7479674796747967, "obj2": 0.08454442704909101}, {"determining": "( ( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,RRSe ) - RRSe ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.9471544715447154, "obj2": 0.016950184933272248}, {"determining": "( Max( Max( Min( ( Const / FirstVNF_Mem ) ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( Min( PN ,FirstVNF_CPU ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ACS ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( Min( Min( Min( ( Min( MUC ,RMSe ) * Min( RRSe ,CS ) ) ,( CS - RMSe ) ) ,Max( ( ( DS + CS ) - RCSe ),MUR ) ) ,( MUR * ( ( MUC + DS ) * MUR ) ) ) * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - ( ( RRSe * RRSe ) * ( CS / MLU ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - FirstVNF_CPU ) * PN ) ),( RRS - FirstVNF_Mem ) ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( ( MLU / CS ) * Min( ( MUR * ( DS / MUC ) ) ,DS ) ) ) )", "obj1": 0.11585365853658537, "obj2": 0.708469510892546}, {"determining": "( ( ( FirstVNF_Mem * ( CRS - MRS ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( DS ,( Min( CS ,( DS + MUR ) ) * Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.5121951219512195, "obj2": 0.26175729928363295}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * Min( AMS ,FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( Min( MUC ,( MUR + RMSe ) ) * CS ) ) ) ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - MUM ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7764227642276422, "obj2": 0.07143169547595579}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) )", "choosing": "( Max( MLU,DS ) - ( MUR + ( Min( DS ,( RCSe - RCSe ) ) - RCSe ) ) )", "obj1": 0.266260162601626, "obj2": 0.5438743260786539}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ) ) + MRS ) ) + Min( Max( DDR,AMS ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( RRSe * RRSe ) * Min( Min( ( MUC + Max( CS,CS ) ) ,( Min( RRSe ,MUR ) * MLU ) ) ,CS ) ) * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9390243902439024, "obj2": 0.02129715060472555}, {"determining": "Min( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM ) - FirstVNF_CPU_Server ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * MUR ) ,Max( ( MUM / Min( ( MUC * ( CS + CS ) ) ,CS ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.32113821138211385, "obj2": 0.4896587639979515}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( ( CRS * ( MRS / FirstVNF_RAM_Server ) ) ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,( RRSe - MUR ) ) - ( DS + ( MUM - MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.009192388663185861}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( ( ( DDR / BR ) / MDR ) ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ,( PN - ( FirstVNF_CPU_Server * MRS ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe - MLU ) ) + RRSe ) ) / Min( ( Min( MUM ,( MLU + ( Min( DS ,MLU ) * ( MUR * RCSe ) ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.550651003226846}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) * CS )", "obj1": 0.7682926829268293, "obj2": 0.07450484052087938}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( Min( ( ( ARS + ( CRS * MDR ) ) + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,DS ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( MLU - RRSe ) )", "obj1": 0.7642276422764228, "obj2": 0.0768590911056188}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.9613821138211383, "obj2": 0.014684668301543526}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.7422024261236431}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( ARS - DDR ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( ( MUM - MUM ),MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8394308943089431, "obj2": 0.049905995973038464}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - ( ( DDR + FirstVNF_RAM ) * Const ) ) * PN ) ),RRS ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( Min( MUR ,RCSe ) * ( DS + ( MUM - MUM ) ) ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7072729796824204}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( Min( ( MDR / CRS ) ,AMS ) ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Min( MUM ,( MLU + Min( RMSe ,RMSe ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,Min( BR ,MRS ) ) * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( ( DDR - RRS ) ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - MUM ) / RCSe ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.3130081300813008, "obj2": 0.4944000731219273}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( MRS ,Max( ARS,( FirstVNF_CPU * PN ) ) ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / RRSe ) - ( ( MUR - MLU ) / Min( ( DS * ( ( ( RCSe / MUM ) - ( RMSe * MUM ) ) + CS ) ) ,Max( MLU,RMSe ) ) ) ) * CS )", "obj1": 0.7560975609756098, "obj2": 0.07985881202107603}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9207317073170732, "obj2": 0.02866187901897091}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.959349593495935, "obj2": 0.016153645420753936}, {"determining": "( Max( ACS,( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ACS ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - DS ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / Max( MUC,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9349593495934959, "obj2": 0.024674951185628947}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( Max( ACS,MDR ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( RRSe / MLU ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8373983739837398, "obj2": 0.05138636421934891}, {"determining": "( Min( Max( AMS,DDR ) ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( MUR - MUM ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / ( RRSe / MLU ) ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.31097560975609756, "obj2": 0.49583715976790294}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM,Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) * ( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) - ( ( Const * Max( Max( FirstVNF_CPU_Server,RRS ),ARS ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * MUM ) * Min( MLU ,CS ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.3252032520325203, "obj2": 0.4879673339459019}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN - ( ( MDR + CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MUC,( MUR - ( Max( RMSe,MUR ) * CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( MLU / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MLU ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( ( CS / MLU ),( CS / MUM ) ) ) )", "obj1": 0.7865853658536586, "obj2": 0.07052145933571784}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ARS,PN ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),Min( MLU ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8617886178861789, "obj2": 0.04185189160903199}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - AMS ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU - ARS ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( Max( ( CS * ( MLU + MUM ) ),CS ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08739837398373984, "obj2": 0.7465212981803773}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Max( Min( Const ,FirstVNF_Mem_Server ),Min( ( ACS - Max( MRS,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MUC + MLU ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( RMSe / ( ( MUM * RMSe ) * ( MLU + MUR ) ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7520325203252033, "obj2": 0.08132398926508261}, {"determining": "( ( FirstVNF_RAM_Server + Max( CRS,( ( BR / ( Min( CRS ,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) / FirstVNF_Mem_Server ) ) ) / ( Min( ARS ,( ( PN / PN ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / ( ( RRSe + ( ( RCSe * RMSe ) - ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ) - RRSe ) ) + ( ( Min( MUR ,RCSe ) - ( MLU - MUC ) ) * Max( MUM,( ( MUC / Max( RRSe,RCSe ) ) * MLU ) ) ) )", "obj1": 0.08536585365853659, "obj2": 0.7505720038317084}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( ( ( ACS * DDR ) * Const ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * MLU ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08333333333333333, "obj2": 0.7544603960409401}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU ) + Min( ( ( Const / ( Min( ( DDR - CRS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( Min( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + MDR ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( ( MUR / RRSe ) * ( Min( MUM ,RMSe ) * MLU ) ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9288617886178862, "obj2": 0.026402029367166624}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7032520325203252, "obj2": 0.11867566495112286}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( CRS - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9857723577235772, "obj2": 0.003802130974724327}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,FirstVNF_Mem_Server ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( Min( ( DDR - CRS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + MDR ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * ( ( CS * ( MLU / MUC ) ) * MLU ) ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9247967479674797, "obj2": 0.026834037588419152}, {"determining": "( ( Min( PN ,PN ) + ( ( ( ( BR * ( PN * Min( ARS ,MRS ) ) ) * ( PN + MDR ) ) / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / Min( AMS ,FirstVNF_Mem_Server ) ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) - ( RRSe * RMSe ) ) * CS ) ) + ( MUR - MUC ) )", "obj1": 0.9776422764227642, "obj2": 0.005154550989080137}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / ( Const - ARS ) ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe - Min( DS ,( Min( CS ,( DS + RRSe ) ) * Max( MLU,RMSe ) ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0012328683413720739}, {"determining": "Min( MDR ,( PN - ( RRS + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( ( MUC - DS ) / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * ( Max( RMSe,MUM ) - ( Max( Min( RRSe ,MUR ),RMSe ) * MUR ) ) ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8394308943089431, "obj2": 0.049905995973038464}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( ( CRS * RRS ) - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + MDR ) ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( Min( MUC ,( MUR + ( RRSe / CS ) ) ) * MUM ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9715447154471545, "obj2": 0.00676693498979753}], "22": [{"determining": "Min( MDR ,( PN - ( ( FirstVNF_Mem * Max( ( BR * ARS ),( ( ACS - ACS ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUR ) / Min( ( ( MUC - DS ) / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * ( Max( RMSe,MUM ) - ( Max( Min( RRSe ,MUR ),RMSe ) * MUR ) ) ) ) / Max( MUM,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,BR ) ) - ( ACS - ( FirstVNF_Mem - ACS ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( CS,Max( ( MUC / RMSe ),MUM ) ) ) + MUR ) ,Min( MUC ,RRSe ) ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Max( ARS,( ( RRS / FirstVNF_RAM ) + ( FirstVNF_RAM / AMS ) ) ) - Max( ACS,( FirstVNF_Mem_Server / AMS ) ) ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( MRS + FirstVNF_Mem ) )", "choosing": "( ( MLU / DS ) + ( ( CS / ( ( MUM / MUC ) - MLU ) ) / MLU ) )", "obj1": 0.07113821138211382, "obj2": 0.7663048490950101}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( ( Min( DDR ,Min( ( Const * FirstVNF_Mem ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,DDR ) ) ) ) )", "choosing": "( Min( ( MUC / Min( MUM ,CS ) ) ,MUC ) + ( MUR - ( ( ( ( ( DS * Max( MUM,RRSe ) ) * CS ) - RMSe ) - MUR ) + RCSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.4066799263624194}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,( ( Max( PN,ARS ) * DDR ) * Const ) ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) )", "obj1": 0.46747967479674796, "obj2": 0.2799271754013019}, {"determining": "( ( ( FirstVNF_Mem * ( Min( Min( Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_Mem - DDR ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( ( MLU / RCSe ) + ( RMSe - Min( DS ,( ( RMSe * ( MUC - RRSe ) ) * Max( ( MUM / DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.4369918699186992, "obj2": 0.34152648383766654}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( ( ( RRS - AMS ) * ( MDR - FirstVNF_RAM ) ) ,RRS ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - FirstVNF_CPU ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( ( Max( RMSe,MUR ) * ( RCSe / DS ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / ( Min( MUM ,( CS * RRSe ) ) / MLU ) ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / RRSe ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.35772357723577236, "obj2": 0.4517235368309968}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.4349593495934959, "obj2": 0.3471318570666753}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - ( ( DDR + FirstVNF_RAM ) * Const ) ) * PN ) ),RRS ) ,Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( Const / FirstVNF_Mem ) + PN ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( Min( MUR ,( MUR * CS ) ) * ( DS + ( MUM - MUM ) ) ) ) )", "obj1": 0.14227642276422764, "obj2": 0.6693012874927546}, {"determining": "( ( ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUM ) ) - ( MUR * CS ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.6219512195121951, "obj2": 0.17245925696042308}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - MUM ) / MUC ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6138211382113821, "obj2": 0.20454903778871164}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - DDR ) / FirstVNF_CPU_Server ),Max( AMS,Const ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUM ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8313008130081301, "obj2": 0.056656275837327706}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Min( RRS ,FirstVNF_RAM_Server ) / Max( ( CRS / ( ( MRS - DDR ) * ( CRS * FirstVNF_Mem_Server ) ) ),RRS ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( ( MUM * CS ) * MUC ) - DS ) ) ) + ( MUR - MUC ) )", "obj1": 0.9126016260162602, "obj2": 0.030989835835378166}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - Min( ( FirstVNF_CPU * PN ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( DDR + RRS ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),CRS ) ,PN ) / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - Max( ( ( RCSe + ( ( Max( RMSe,MUM ) + DS ) * ( ( CS + RRSe ) * ( MUM + RMSe ) ) ) ) + ( DS / RRSe ) ),Min( ( DS - RMSe ) ,RCSe ) ) ) )", "obj1": 0.6321138211382114, "obj2": 0.15791073943624762}, {"determining": "Min( ( ( ( Const - MDR ) + RRS ) / Const ) ,( Const + FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( CS / RCSe ) ) ) / Max( RCSe,MLU ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.7886178861788617, "obj2": 0.06908440463076967}, {"determining": "( Max( ( ( Const - FirstVNF_RAM ) * FirstVNF_RAM_Server ),RRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) * Min( Min( ( RMSe / ( MUC / Max( Max( MLU,MUR ),Min( Min( MLU ,RRSe ) ,RCSe ) ) ) ) ,MLU ) ,( Max( ( MLU * MUR ),( Max( ( RMSe * Min( DS ,MUM ) ),MUC ) / Min( ( MUM * Min( MUM ,MLU ) ) ,( MUM * DS ) ) ) ) / ( MUR / ( ( ( CS * ( RCSe + MUC ) ) - RMSe ) / ( ( ( MUM - MUR ) - ( RMSe + DS ) ) - MUR ) ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.7036733638876238}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - Min( ( DDR - CRS ) ,ARS ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8699186991869918, "obj2": 0.038610302528891714}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6565040650406504, "obj2": 0.14960364698008935}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "( ( ( FirstVNF_Mem * ( Min( Min( Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_Mem - DDR ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( ( MLU / RCSe ) + ( RMSe - Min( DS ,( ( RMSe * ( MUC - RRSe ) ) * Max( ( MUM / DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.5691056910569106, "obj2": 0.21260863626300344}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) + ( MUR - MUC ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5955284552845529, "obj2": 0.21178057563487762}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / DDR ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( ( DDR + RRS ) * ( MDR / ( ACS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( ( MUR + MUR ) - MUC ) ) * RRSe ) / ( ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / Max( RMSe,MUR ) ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.7215447154471545, "obj2": 0.10296090985621957}, {"determining": "( ( ( Max( PN,( FirstVNF_Mem - Min( ( ARS + DDR ) ,MDR ) ) ) - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_Mem / MRS ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe / ( Max( ( ( CS * CS ) + CS ),MUC ) / RRSe ) ) + ( MUR - ( ( RRSe - MUR ) + RCSe ) ) )", "obj1": 0.5467479674796748, "obj2": 0.2435320501709903}, {"determining": "Min( ( ( ( ( FirstVNF_Mem / Max( CRS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,FirstVNF_Mem_Server ) / ( ( MRS / Const ) / FirstVNF_CPU_Server ) ) - Max( ( CRS / ( FirstVNF_Mem_Server - ACS ) ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) - MUC ) ) - ( Min( ( RCSe * MUR ) ,Max( ( ( RRSe / Max( MUM,MUM ) ) / Min( MLU ,Min( Max( RCSe,MUR ) ,( MUR / MUC ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.34146341463414637, "obj2": 0.4579905116060634}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,( AMS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,Min( FirstVNF_CPU ,( Const + ( FirstVNF_Mem / ( ( Const - FirstVNF_Mem ) - ( DDR + Max( Max( Const,DDR ),PN ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( RRSe / MLU ) - CS ) + MLU ) ,RRSe ) - ( ( RRSe * ( Min( Min( RRSe ,( DS - CS ) ) ,RMSe ) + MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.31910569105691056, "obj2": 0.4846980788848291}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( ( ARS / Const ) ,( Const + FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( CS / RCSe ) ) ) / Min( ( MLU / ( ( ( RMSe * ( RMSe * MUM ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) )", "obj1": 0.5182926829268293, "obj2": 0.2511542852712979}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( ( PN + Max( DDR,MRS ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ( FirstVNF_RAM + DDR ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + CS ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.5650406504065041, "obj2": 0.23261778802821553}, {"determining": "Min( ( Min( ARS ,( BR + Const ) ) + MDR ) ,( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( ( CS * Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) * ( RRSe - MUR ) ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( MUR - MUM ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / ( MLU / MLU ) ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5248641712176909}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( Max( PN,( RRS * FirstVNF_Mem_Server ) ) * DDR ) * Const ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RRSe,( Min( DS ,MUR ) / MUR ) ) ) + ( Max( MUC,( RCSe / MLU ) ) * CS ) ) )", "obj1": 0.21544715447154472, "obj2": 0.5823360114899261}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( ( CRS / BR ) ,( PN - DDR ) ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( DS / CS ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MUR ) ,RMSe ) ) - ( MUR / MUM ) ) ),Max( CS,Max( DS,RMSe ) ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5759979813892474}, {"determining": "( Max( Max( Min( ( Const / FirstVNF_Mem ) ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( Min( PN ,FirstVNF_CPU ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ACS ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( Min( Min( Min( ( Min( MUC ,RMSe ) * Min( RRSe ,CS ) ) ,( CS - RMSe ) ) ,Max( ( ( DS + CS ) - RCSe ),MUR ) ) ,( MUR * ( ( MUC + DS ) * MUR ) ) ) * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - ( ( RRSe * RRSe ) * ( CS / MLU ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "Min( ( DDR / Min( ( FirstVNF_Mem * ( MDR - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( CS ,( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ) - ( ( CS + MUC ) * ( Min( ( CS / MUC ) ,( RMSe * ( MUC - MUC ) ) ) + Max( ( MLU * Min( DS ,MUC ) ),CS ) ) ) ) ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2459349593495935, "obj2": 0.5637004437884627}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,( AMS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,Min( FirstVNF_CPU ,( Const + ( FirstVNF_Mem / ( ( Const - FirstVNF_Mem ) - ( DDR + Max( Max( Const,DDR ),PN ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( RRSe / MLU ) - CS ) + MLU ) ,RRSe ) - ( ( RRSe * ( Min( Min( RRSe ,( DS - CS ) ) ,RMSe ) + MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.5064687000788365}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,Min( BR ,MRS ) ) * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - MUM ) / RCSe ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.30284552845528456, "obj2": 0.4992531782193685}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( PN,( ( ACS - ACS ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,BR ) ) + Max( Min( FirstVNF_Mem ,Max( CRS,FirstVNF_RAM_Server ) ),( ( ACS * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Max( DS,RCSe ) + ( Max( MUC,RMSe ) * CS ) ) )", "obj1": 0.23983739837398374, "obj2": 0.569423192947459}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( Const / FirstVNF_Mem ) + PN ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5561631165864102}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( ( ( RRSe / Max( MUM,MUM ) ) / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.6849593495934959, "obj2": 0.1301630710804424}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( PN / PN ) ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ,Max( ( MUM / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2804878048780488, "obj2": 0.511929995253608}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_Mem ) - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / ( Min( ( ( CS * MUC ) / MUR ) ,( MUC + RMSe ) ) * MLU ) ) - DS )", "obj1": 0.6971544715447154, "obj2": 0.11922396596657542}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + ( MLU + Min( RRSe ,Max( MLU,RCSe ) ) ) )", "obj1": 0.5548780487804879, "obj2": 0.23786531304784386}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Max( ( MLU / ( ( RCSe / MUC ) + MUC ) ),RRSe ) - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6727642276422764, "obj2": 0.1417909032795572}, {"determining": "( ( Min( PN ,PN ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) / ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( CS / ( MUC * RMSe ) ) * ( ( MUM / ( MLU * ( MUC / MUC ) ) ) / ( RMSe - ( CS * ( MUR * RCSe ) ) ) ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.11382113821138211, "obj2": 0.723705035495608}, {"determining": "( Max( Max( AMS,RRS ),FirstVNF_CPU ) + Min( ( ( Max( Const,PN ) - FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( ( ACS - FirstVNF_CPU_Server ) / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / ( RMSe + CS ) ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.733739837398374, "obj2": 0.09563998928838313}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - Max( ACS,Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU_Server + MDR ) ,ARS ) ) ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( MUC * RMSe ) ) ) )", "obj1": 0.5020325203252033, "obj2": 0.2653003587665751}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( Min( MUM ,RMSe ) ,Max( ( ( RRSe / Max( MUM,MUM ) ) / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.4796747967479675, "obj2": 0.2777247238123627}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( Min( FirstVNF_CPU ,DDR ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( MUR * CS ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.08991137190971416}, {"determining": "Min( ( ( FirstVNF_CPU + Min( ( RRS - BR ) ,Const ) ) * Max( FirstVNF_CPU_Server,RRS ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * ( ( ( RMSe - MUM ) / MUR ) - MLU ) ) / Min( ( ( ( RMSe + Max( ( MUR / MLU ),RRSe ) ) + ( MUC / ( ( MUM / MLU ) * ( MUR - MUR ) ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7479674796747967, "obj2": 0.08454442704909101}, {"determining": "( ( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,RRSe ) - RRSe ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.9471544715447154, "obj2": 0.016950184933272248}, {"determining": "( ( ( ( ( BR - Max( ACS,( FirstVNF_Mem_Server / AMS ) ) ) * MDR ) - ( FirstVNF_Mem_Server / Const ) ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) / ( Min( ARS ,( ( Min( Const ,ACS ) - Min( AMS ,( ( FirstVNF_Mem + RRS ) * FirstVNF_Mem ) ) ) - Max( Max( FirstVNF_Mem,FirstVNF_RAM_Server ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( Const * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / DS ) + Max( Max( RCSe,MUR ),MLU ) )", "obj1": 0.07926829268292683, "obj2": 0.756486022920312}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - FirstVNF_CPU ) * PN ) ),( RRS - FirstVNF_Mem ) ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( ( MLU / CS ) * Min( ( MUR * ( DS / MUC ) ) ,DS ) ) ) )", "obj1": 0.11585365853658537, "obj2": 0.708469510892546}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) )", "choosing": "( Max( MLU,DS ) - ( MUR + ( Min( DS ,( RCSe - RCSe ) ) - RCSe ) ) )", "obj1": 0.266260162601626, "obj2": 0.5438743260786539}, {"determining": "( Max( Max( Min( ACS ,MDR ),( Min( FirstVNF_Mem_Server ,Min( BR ,MRS ) ) * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( ( DDR - RRS ) ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - MUM ) / RCSe ) ) - Min( MUM ,( MLU + MUC ) ) ) * CS )", "obj1": 0.3130081300813008, "obj2": 0.4944000731219273}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ) ) + MRS ) ) + Min( Max( DDR,AMS ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( RRSe * RRSe ) * Min( Min( ( MUC + Max( CS,CS ) ) ,( Min( RRSe ,MUR ) * MLU ) ) ,CS ) ) * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9390243902439024, "obj2": 0.02129715060472555}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / CS ) + ( MLU + RRSe ) ) + ( Min( RRSe ,( ( Min( MUC ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.6829268292682927, "obj2": 0.13546627352006116}, {"determining": "( ( ( FirstVNF_Mem * ( CRS - MRS ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( DS ,( Min( CS ,( DS + MUR ) ) * Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.5121951219512195, "obj2": 0.26175729928363295}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( ( BR * ARS ),( FirstVNF_CPU_Server - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( FirstVNF_RAM,BR ) ) + Max( PN,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( DS + MUR ) )", "obj1": 0.08536585365853659, "obj2": 0.743635491796619}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( CRS - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9857723577235772, "obj2": 0.003802130974724327}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( ( CRS * ( MRS / FirstVNF_RAM_Server ) ) ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,( RRSe - MUR ) ) - ( DS + ( MUM - MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.009192388663185861}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( Min( ( MDR / CRS ) ,AMS ) ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Min( MUM ,( MLU + Min( RMSe ,RMSe ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.550651003226846}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( Min( ( ( ARS + ( CRS * MDR ) ) + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,DS ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( MLU - RRSe ) )", "obj1": 0.7642276422764228, "obj2": 0.0768590911056188}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.9613821138211383, "obj2": 0.014684668301543526}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - ( ( DDR + FirstVNF_RAM ) * Const ) ) * PN ) ),RRS ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( Min( MUR ,RCSe ) * ( DS + ( MUM - MUM ) ) ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7072729796824204}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( ( ( DDR / BR ) / MDR ) ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ,( PN - ( FirstVNF_CPU_Server * MRS ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe - MLU ) ) + RRSe ) ) / Min( ( Min( MUM ,( MLU + ( Min( DS ,MLU ) * ( MUR * RCSe ) ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / CS ) + ( MLU + RRSe ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.6747967479674797, "obj2": 0.13950257630333127}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( MRS ,Max( ARS,( FirstVNF_CPU * PN ) ) ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / RRSe ) - ( ( MUR - MLU ) / Min( ( DS * ( ( ( RCSe / MUM ) - ( RMSe * MUM ) ) + CS ) ) ,Max( MLU,RMSe ) ) ) ) * CS )", "obj1": 0.7560975609756098, "obj2": 0.07985881202107603}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,BR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( ( FirstVNF_CPU * DDR ) / FirstVNF_Mem ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( MUC * ( RMSe / RMSe ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9207317073170732, "obj2": 0.02866187901897091}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( ( ( ACS * DDR ) * Const ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * MLU ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08333333333333333, "obj2": 0.7544603960409401}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.959349593495935, "obj2": 0.016153645420753936}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.7422024261236431}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( Max( ACS,MDR ) * PN ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( DDR - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ( ( ( CRS + MDR ) + ACS ) - ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / Max( MUC,MUM ) ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9349593495934959, "obj2": 0.024674951185628947}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( Max( ACS,MDR ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( RRSe / MLU ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8373983739837398, "obj2": 0.05138636421934891}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * FirstVNF_CPU ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - Min( ( DDR - CRS ) ,ARS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8475609756097561, "obj2": 0.04681697258783384}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / ( Const - ARS ) ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe - Min( DS ,( Min( CS ,( DS + RRSe ) ) * Max( MLU,RMSe ) ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0012328683413720739}, {"determining": "( Max( ACS,( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ACS ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - DS ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( Min( Max( AMS,DDR ) ,( Const + FirstVNF_CPU ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( MUR - MUM ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / ( RRSe / MLU ) ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.31097560975609756, "obj2": 0.49583715976790294}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN - ( ( MDR + CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MUC,( MUR - ( Max( RMSe,MUR ) * CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( MLU / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MLU ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( ( CS / MLU ),( CS / MUM ) ) ) )", "obj1": 0.7865853658536586, "obj2": 0.07052145933571784}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( Min( MUC ,( MUR + RMSe ) ) * CS ) ) ) ) + ( MUR - ( ( ( Min( ( RRSe * RMSe ) ,Min( RMSe ,MUC ) ) - MUM ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.5060975609756098, "obj2": 0.2648580022274861}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Max( Min( Const ,FirstVNF_Mem_Server ),Min( ( ACS - Max( MRS,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MUC + MLU ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( RMSe / ( ( MUM * RMSe ) * ( MLU + MUR ) ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7520325203252033, "obj2": 0.08132398926508261}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8556910569105691, "obj2": 0.0433575530214167}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) * CS )", "obj1": 0.7682926829268293, "obj2": 0.07450484052087938}, {"determining": "( ( FirstVNF_RAM * FirstVNF_CPU ) + Min( ( ( Const / ( Min( ( DDR - CRS ) ,FirstVNF_CPU ) - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( Min( ( ( PN / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) + MDR ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( ( MUR / RRSe ) * ( Min( MUM ,RMSe ) * MLU ) ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9288617886178862, "obj2": 0.026402029367166624}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( CS / Min( ( MUC / MUR ) ,RMSe ) ) )", "obj1": 0.8516260162601627, "obj2": 0.04478007288289583}, {"determining": "Min( Max( AMS,( ( Const * Max( Max( FirstVNF_CPU_Server,RRS ),ARS ) ) - FirstVNF_CPU_Server ) ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ),Min( ( FirstVNF_RAM + RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * MUM ) * Min( MLU ,CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),Min( MUC ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8638211382113821, "obj2": 0.04071189163123989}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7032520325203252, "obj2": 0.11867566495112286}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( Max( ACS,MDR ) / FirstVNF_CPU_Server ),Max( AMS,( ( FirstVNF_CPU_Server * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( RRSe / MLU ) - ( MLU * ( RRSe * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8414634146341463, "obj2": 0.04984075639385741}, {"determining": "( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Max( ( MLU / ( ( RCSe / MUC ) + MUC ) ),RRSe ) - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,( MUR * RCSe ) ) ) ),( MUC + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.7723577235772358, "obj2": 0.07257714626938212}, {"determining": "( ( Min( Min( ( MRS / ( CRS + ARS ) ) ,Min( ACS ,( ( CRS * Min( PN ,FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( Min( MUC ,( MUR + RMSe ) ) * CS ) ) ) ) + ( MUR - ( ( ( Min( ( ( CS + RMSe ) / DS ) ,( RRSe / Max( MUC,MUM ) ) ) - MUM ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7764227642276422, "obj2": 0.07143169547595579}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ARS,PN ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),Min( MLU ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8617886178861789, "obj2": 0.04185189160903199}], "23": [{"determining": "Min( MRS ,( ( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,( BR / Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ) ) ) ) - ( ACS - ( FirstVNF_Mem - ACS ) ) ) )", "choosing": "( ( Min( RRSe ,MUR ) * MLU ) - ( Min( ( Min( RRSe ,Max( CS,Max( ( MUC / RMSe ),MUM ) ) ) + MUR ) ,Min( MUC ,RRSe ) ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MDR ,( PN - ( ( FirstVNF_Mem * Max( ( BR * ARS ),( ( ACS - ACS ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * MUR ) / Min( ( ( MUC - DS ) / ( ( Max( ( RRSe - RCSe ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * ( Max( RMSe,MUM ) - ( Max( Min( RRSe ,MUR ),RMSe ) * MUR ) ) ) ) / Max( MUM,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( ( BR * ARS ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,BR ) ) + Max( PN,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * MUC ) ) ) ) ,RRSe ) - ( DS + MUR ) )", "obj1": 0.06910569105691057, "obj2": 0.7518006000355263}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( ( Min( DDR ,Min( ( Const * FirstVNF_Mem ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,DDR ) ) ) ) )", "choosing": "( Min( ( MUC / Min( MUM ,CS ) ) ,MUC ) + ( MUR - ( ( ( ( ( DS * Max( MUM,RRSe ) ) * CS ) - RMSe ) - MUR ) + RCSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.4066799263624194}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,( ( Max( PN,ARS ) * DDR ) * Const ) ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) )", "obj1": 0.46747967479674796, "obj2": 0.2799271754013019}, {"determining": "( ( ( FirstVNF_Mem * ( Min( Min( Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_Mem - DDR ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( ( MLU / RCSe ) + ( RMSe - Min( DS ,( ( RMSe * ( MUC - RRSe ) ) * Max( ( MUM / DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.4369918699186992, "obj2": 0.34152648383766654}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RMSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.9126016260162602, "obj2": 0.022351461263891204}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( ( ( RRS - AMS ) * ( MDR - FirstVNF_RAM ) ) ,RRS ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - FirstVNF_CPU ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( ( Max( RMSe,MUR ) * ( RCSe / DS ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / ( Min( MUM ,( CS * RRSe ) ) / MLU ) ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / RRSe ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.35772357723577236, "obj2": 0.4517235368309968}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.4349593495934959, "obj2": 0.3471318570666753}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - ( ( DDR + FirstVNF_RAM ) * Const ) ) * PN ) ),RRS ) ,Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( Const / FirstVNF_Mem ) + PN ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( Min( MUR ,( MUR * CS ) ) * ( DS + ( MUM - MUM ) ) ) ) )", "obj1": 0.14227642276422764, "obj2": 0.6693012874927546}, {"determining": "( ( ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUM ) ) - ( MUR * CS ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.6219512195121951, "obj2": 0.17245925696042308}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - MUM ) / MUC ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6138211382113821, "obj2": 0.20454903778871164}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - Min( ( DDR - CRS ) ,ARS ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8699186991869918, "obj2": 0.038610302528891714}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( Max( PN,( RRS * FirstVNF_Mem_Server ) ) * DDR ) * Const ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RRSe,( Min( DS ,MUR ) / MUR ) ) ) + ( Max( MUC,( RCSe / MLU ) ) * CS ) ) )", "obj1": 0.23373983739837398, "obj2": 0.5566437080274105}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - Min( ( FirstVNF_CPU * PN ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( DDR + RRS ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),CRS ) ,PN ) / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - Max( ( ( RCSe + ( ( Max( RMSe,MUM ) + DS ) * ( ( CS + RRSe ) * ( MUM + RMSe ) ) ) ) + ( DS / RRSe ) ),Min( ( DS - RMSe ) ,RCSe ) ) ) )", "obj1": 0.6321138211382114, "obj2": 0.15791073943624762}, {"determining": "( Max( ( ( Const - FirstVNF_RAM ) * FirstVNF_RAM_Server ),RRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) * Min( Min( ( RMSe / ( MUC / Max( Max( MLU,MUR ),Min( Min( MLU ,RRSe ) ,RCSe ) ) ) ) ,MLU ) ,( Max( ( MLU * MUR ),( Max( ( RMSe * Min( DS ,MUM ) ),MUC ) / Min( ( MUM * Min( MUM ,MLU ) ) ,( MUM * DS ) ) ) ) / ( MUR / ( ( ( CS * ( RCSe + MUC ) ) - RMSe ) / ( ( ( MUM - MUR ) - ( RMSe + DS ) ) - MUR ) ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.7036733638876238}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6565040650406504, "obj2": 0.14960364698008935}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,( AMS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),( ( FirstVNF_Mem - PN ) * FirstVNF_RAM_Server ) ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( ( RRSe / CS ) ,RRSe ) - ( ( RMSe / RMSe ) + ( MUR * CS ) ) )", "obj1": 0.29878048780487804, "obj2": 0.4909361547693215}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,( AMS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,Min( FirstVNF_CPU ,( Const + ( FirstVNF_Mem / ( ( Const - FirstVNF_Mem ) - ( DDR + Max( Max( Const,DDR ),PN ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( RRSe / MLU ) - CS ) + MLU ) ,RRSe ) - ( ( RRSe * ( Min( Min( RRSe ,( DS - CS ) ) ,RMSe ) + MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.31910569105691056, "obj2": 0.4846980788848291}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,DS ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * Max( ( MLU / ( ( RCSe / MUC ) + MUC ) ),RRSe ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.8150406504065041, "obj2": 0.05875342310720895}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / DDR ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( ( DDR + RRS ) * ( MDR / ( ACS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( ( MUR + MUR ) - MUC ) ) * RRSe ) / ( ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / Max( RMSe,MUR ) ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.7215447154471545, "obj2": 0.10296090985621957}, {"determining": "( ( ( Max( PN,( FirstVNF_Mem - Min( ( ARS + DDR ) ,MDR ) ) ) - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_Mem / MRS ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe / ( Max( ( ( CS * CS ) + CS ),MUC ) / RRSe ) ) + ( MUR - ( ( RRSe - MUR ) + RCSe ) ) )", "obj1": 0.5467479674796748, "obj2": 0.2435320501709903}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( ( CRS / BR ) ,( PN - DDR ) ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( DS / CS ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MUR ) ,RMSe ) ) - ( MUR / MUM ) ) ),Max( CS,Max( DS,RMSe ) ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5759979813892474}, {"determining": "Min( ( ( ( ( FirstVNF_Mem / Max( CRS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,FirstVNF_Mem_Server ) / ( ( MRS / Const ) / FirstVNF_CPU_Server ) ) - Max( ( CRS / ( FirstVNF_Mem_Server - ACS ) ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) - MUC ) ) - ( Min( ( RCSe * MUR ) ,Max( ( ( RRSe / Max( MUM,MUM ) ) / Min( MLU ,Min( Max( RCSe,MUR ) ,( MUR / MUC ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.34146341463414637, "obj2": 0.4579905116060634}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( ( ARS / Const ) ,( Const + FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( CS / RCSe ) ) ) / Min( ( MLU / ( ( ( RMSe * ( RMSe * MUM ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) )", "obj1": 0.5182926829268293, "obj2": 0.2511542852712979}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( ( PN + Max( DDR,MRS ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ( FirstVNF_RAM + DDR ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + CS ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.5650406504065041, "obj2": 0.23261778802821553}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) + ( MUR - MUC ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5955284552845529, "obj2": 0.21178057563487762}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,( AMS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,Min( FirstVNF_CPU ,( Const + ( FirstVNF_Mem / ( ( Const - FirstVNF_Mem ) - ( DDR + Max( Max( Const,DDR ),PN ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( RRSe / MLU ) - CS ) + MLU ) ,RRSe ) - ( ( RRSe * ( Min( Min( RRSe ,( DS - CS ) ) ,RMSe ) + MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.5064687000788365}, {"determining": "Min( ( Min( ARS ,( BR + Const ) ) + MDR ) ,( Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( ( CS * Min( ( MUR / ( RRSe - ( RCSe - MUC ) ) ) ,DS ) ) * ( RRSe - MUR ) ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "Min( ( ( ( Const - MDR ) + RRS ) / Const ) ,( Const + FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( CS / RCSe ) ) ) / Max( RCSe,MLU ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.7886178861788617, "obj2": 0.06908440463076967}, {"determining": "Min( ( ( FirstVNF_CPU - MRS ) - ( PN + FirstVNF_RAM ) ) ,( Max( FirstVNF_Mem,MRS ) / ACS ) )", "choosing": "( Min( Max( RMSe,( RMSe * DS ) ) ,( Max( MUR,( RCSe / ( MUR + CS ) ) ) / Min( MUM ,DS ) ) ) - ( Min( ( DS * MLU ) ,( MLU + RRSe ) ) + ( ( ( ( RCSe - ( Min( RRSe ,MUR ) / CS ) ) * ( ( ( DS / RCSe ) - ( RCSe + RRSe ) ) * Min( Max( RCSe,MUC ) ,DS ) ) ) + MUM ) * CS ) ) )", "obj1": 0.20934959349593496, "obj2": 0.6054030864686598}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( MUR - MUM ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / ( MLU / MLU ) ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5248641712176909}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ) ) + MRS ) ) + Min( Max( DDR,AMS ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / ( ( ( RRSe * RRSe ) * Min( Min( ( MUC + Max( CS,CS ) ) ,( Min( RRSe ,MUR ) * MLU ) ) ,CS ) ) * ( ( RRSe / MLU ) * ( MUR * CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9390243902439024, "obj2": 0.02129715060472555}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( Max( PN,( RRS * FirstVNF_Mem_Server ) ) * DDR ) * Const ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RRSe,( Min( DS ,MUR ) / MUR ) ) ) + ( Max( MUC,( RCSe / MLU ) ) * CS ) ) )", "obj1": 0.21544715447154472, "obj2": 0.5823360114899261}, {"determining": "( ( ( FirstVNF_Mem * ( Min( Min( Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_Mem - DDR ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( ( MLU / RCSe ) + ( RMSe - Min( DS ,( ( RMSe * ( MUC - RRSe ) ) * Max( ( MUM / DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.5691056910569106, "obj2": 0.21260863626300344}, {"determining": "( Max( Max( Min( ( Const / FirstVNF_Mem ) ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( Min( PN ,FirstVNF_CPU ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ACS ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( Min( Min( Min( ( Min( MUC ,RMSe ) * Min( RRSe ,CS ) ) ,( CS - RMSe ) ) ,Max( ( ( DS + CS ) - RCSe ),MUR ) ) ,( MUR * ( ( MUC + DS ) * MUR ) ) ) * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - ( ( RRSe * RRSe ) * ( CS / MLU ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( Const / FirstVNF_Mem ) + PN ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5561631165864102}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( MRS ,RRS ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( Min( RRSe ,( DS * CS ) ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.21341463414634146, "obj2": 0.6009463244847989}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ARS,PN ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),Min( MLU ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8292682926829268, "obj2": 0.054596637157323685}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( PN / PN ) ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ,Max( ( MUM / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2804878048780488, "obj2": 0.511929995253608}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( ( BR * ARS ),( FirstVNF_CPU_Server - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_CPU + BR ),BR ) ) + Max( PN,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( RMSe * ( Max( RMSe,DS ) * CS ) ) ) ) ) ,RRSe ) - ( DS + MUR ) )", "obj1": 0.08130081300813008, "obj2": 0.7430341388450379}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + ( MLU + Min( RRSe ,Max( MLU,RCSe ) ) ) )", "obj1": 0.5548780487804879, "obj2": 0.23786531304784386}, {"determining": "( ( Min( PN ,PN ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) / ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( CS / ( MUC * RMSe ) ) * ( ( MUM / ( MLU * ( MUC / MUC ) ) ) / ( RMSe - ( CS * ( MUR * RCSe ) ) ) ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.11382113821138211, "obj2": 0.723705035495608}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Max( ( MLU / ( ( RCSe / MUC ) + MUC ) ),RRSe ) - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6727642276422764, "obj2": 0.1417909032795572}, {"determining": "( Max( Max( AMS,RRS ),FirstVNF_CPU ) + Min( ( ( Max( Const,PN ) - FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( ( ACS - FirstVNF_CPU_Server ) / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / ( RMSe + CS ) ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.733739837398374, "obj2": 0.09563998928838313}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - Max( ACS,Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU_Server + MDR ) ,ARS ) ) ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( MUC * RMSe ) ) ) )", "obj1": 0.5020325203252033, "obj2": 0.2653003587665751}, {"determining": "Min( ( Min( CRS ,MDR ) / ( FirstVNF_Mem_Server - ARS ) ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( ( CS / MUM ) ,RRSe ) - ( Min( Min( MUM ,RMSe ) ,Max( ( ( RRSe / Max( MUM,MUR ) ) / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.4796747967479675, "obj2": 0.2760752538721209}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( MUR * RCSe ) ) )", "obj1": 0.5792682926829268, "obj2": 0.21245614416389488}, {"determining": "( ( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,RRSe ) - RRSe ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.9471544715447154, "obj2": 0.016950184933272248}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - FirstVNF_CPU ) * PN ) ),( RRS - FirstVNF_Mem ) ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( ( MLU / CS ) * Min( ( MUR * ( DS / MUC ) ) ,DS ) ) ) )", "obj1": 0.11585365853658537, "obj2": 0.708469510892546}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( CRS - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9857723577235772, "obj2": 0.003802130974724327}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( Const / DDR ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( ( DDR + RRS ) * ( MDR / ( ACS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( ( MUR + MUR ) - MUC ) ) * RRSe ) / RMSe ) - MLU )", "obj1": 0.6951219512195121, "obj2": 0.1216451537201977}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( ( CRS * ( MRS / FirstVNF_RAM_Server ) ) ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,( RRSe - MUR ) ) - ( DS + ( MUM - MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.009192388663185861}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( CRS - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + Max( AMS,FirstVNF_CPU_Server ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + ( Max( ( Min( ( MUM - ( MUR - RMSe ) ) ,Max( RRSe,( CS * MLU ) ) ) + CS ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9776422764227642, "obj2": 0.007454379284297666}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) )", "choosing": "( Max( MLU,DS ) - ( MUR + ( Min( DS ,( RCSe - RCSe ) ) - RCSe ) ) )", "obj1": 0.266260162601626, "obj2": 0.5438743260786539}, {"determining": "( ( ( FirstVNF_Mem * ( CRS - MRS ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( DS ,( Min( CS ,( DS + MUR ) ) * Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.5121951219512195, "obj2": 0.26175729928363295}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.7422024261236431}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( ( ( DDR / BR ) / MDR ) ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ,( PN - ( FirstVNF_CPU_Server * MRS ) ) )", "choosing": "( ( ( RRSe * ( ( RMSe / ( RRSe - MLU ) ) + RRSe ) ) / Min( ( Min( MUM ,( MLU + ( Min( DS ,MLU ) * ( MUR * RCSe ) ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.550651003226846}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / ( FirstVNF_Mem - FirstVNF_RAM ) ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * ( ( DS - ( DS * MUM ) ) / Max( RCSe,DS ) ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.25401875092397846}, {"determining": "Min( Max( AMS,DDR ) ,( ( ARS + FirstVNF_RAM ) - ( ( CRS + MDR ) * Max( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - Min( ( DDR - CRS ) ,ARS ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( Min( CS ,( DS + MUR ) ) - MUM ) ) ) ,RMSe ) ) - ( CS / CS ) )", "obj1": 0.8373983739837398, "obj2": 0.05019382171469673}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / ( Const - ARS ) ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe - Min( DS ,( Min( CS ,( DS + RRSe ) ) * Max( MLU,RMSe ) ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0012328683413720739}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( Min( FirstVNF_Mem ,DDR ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - Max( CS,( MUR * RCSe ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.741869918699187, "obj2": 0.08788839330483242}, {"determining": "( Min( ( ( ARS + ( CRS * MDR ) ) + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,DS ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( MLU - RRSe ) )", "obj1": 0.7642276422764228, "obj2": 0.0768590911056188}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.9613821138211383, "obj2": 0.014684668301543526}, {"determining": "Min( ( ( FirstVNF_CPU + Min( ( RRS - BR ) ,Const ) ) * Max( FirstVNF_CPU_Server,RRS ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * ( ( ( RMSe - MUM ) / MUR ) - MLU ) ) / Min( ( ( ( RMSe + Max( ( MUR / MLU ),RRSe ) ) + ( MUC / ( ( MUM / MLU ) * ( MUR - MUR ) ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7479674796747967, "obj2": 0.08454442704909101}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( Min( ( MDR / CRS ) ,AMS ) ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Min( MUM ,( MLU + Min( RMSe ,RMSe ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - ( ( DDR + FirstVNF_RAM ) * Const ) ) * PN ) ),RRS ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( Min( MUR ,RCSe ) * ( DS + ( MUM - MUM ) ) ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7072729796824204}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / CS ) + ( MLU + RRSe ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.6747967479674797, "obj2": 0.13950257630333127}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( Min( FirstVNF_CPU ,DDR ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( MUR * CS ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.08991137190971416}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( MRS ,Max( ARS,( FirstVNF_CPU * PN ) ) ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / RRSe ) - ( ( MUR - MLU ) / Min( ( DS * ( ( ( RCSe / MUM ) - ( RMSe * MUM ) ) + CS ) ) ,Max( MLU,RMSe ) ) ) ) * CS )", "obj1": 0.7560975609756098, "obj2": 0.07985881202107603}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.959349593495935, "obj2": 0.016153645420753936}, {"determining": "( ( Min( Min( ( MRS / ( CRS + ARS ) ) ,Min( ACS ,( ( CRS * Min( PN ,FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( Min( MUC ,( MUR + RMSe ) ) * CS ) ) ) ) + ( MUR - ( ( ( Min( ( ( CS + RMSe ) / DS ) ,( RRSe / Max( MUC,MUM ) ) ) - MUM ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7764227642276422, "obj2": 0.07143169547595579}, {"determining": "Min( Max( AMS,( ( Min( AMS ,FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( ( ( RRSe / Max( RMSe,MUM ) ) / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.6849593495934959, "obj2": 0.1301630710804424}, {"determining": "( Max( ACS,( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ACS ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - DS ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * FirstVNF_CPU ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - Min( ( DDR - CRS ) ,ARS ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8475609756097561, "obj2": 0.04681697258783384}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN - ( ( MDR + CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MUC,( MUR - ( Max( RMSe,MUR ) * CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( MLU / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MLU ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( ( CS / MLU ),( CS / MUM ) ) ) )", "obj1": 0.7865853658536586, "obj2": 0.07052145933571784}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / CS ) + ( MLU + RRSe ) ) + ( Min( RRSe ,( ( Min( MUC ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.6829268292682927, "obj2": 0.13546627352006116}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( Min( MUC ,( MUR + RMSe ) ) * CS ) ) ) ) + ( MUR - ( ( ( Min( ( RRSe * RMSe ) ,Min( RMSe ,MUC ) ) - MUM ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.5060975609756098, "obj2": 0.2648580022274861}, {"determining": "Min( Max( AMS,DDR ) ,( ( Min( PN ,( Max( MDR,CRS ) * FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) * BR ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( MUR / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( RRSe / MLU ) - ( MLU * ( RRSe * CS ) ) ) ) ,RMSe ) ) - ( ( RCSe + MUM ) / CS ) )", "obj1": 0.8414634146341463, "obj2": 0.04910860755027563}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Max( Min( Const ,FirstVNF_Mem_Server ),Min( ( ACS - Max( MRS,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MUC + MLU ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( RMSe / ( ( MUM * RMSe ) * ( MLU + MUR ) ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7520325203252033, "obj2": 0.08132398926508261}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * Min( Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( PN - MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( ( Min( ( DS * MLU ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) * RRSe ) * Min( MLU ,CS ) ) ) - ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) * CS )", "obj1": 0.7682926829268293, "obj2": 0.07450484052087938}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( ( ( RRSe / Max( MUM,MUM ) ) / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.6849593495934959, "obj2": 0.1301630710804424}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( CS / Min( ( MUC / MUR ) ,RMSe ) ) )", "obj1": 0.8516260162601627, "obj2": 0.04478007288289583}, {"determining": "Min( Max( AMS,( ( Const * Max( Max( FirstVNF_CPU_Server,RRS ),ARS ) ) - FirstVNF_CPU_Server ) ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ),Min( ( FirstVNF_RAM + RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * MUM ) * Min( MLU ,CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),Min( MUC ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8638211382113821, "obj2": 0.04071189163123989}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7032520325203252, "obj2": 0.11867566495112286}, {"determining": "( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Max( ( MLU / ( ( RCSe / MUC ) + MUC ) ),RRSe ) - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,( MUR * RCSe ) ) ) ),( MUC + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.7723577235772358, "obj2": 0.07257714626938212}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_Mem ) - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / ( Min( ( ( CS * MUC ) / MUR ) ,( MUC + RMSe ) ) * MLU ) ) - DS )", "obj1": 0.6971544715447154, "obj2": 0.11922396596657542}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8556910569105691, "obj2": 0.0433575530214167}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ARS,PN ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),Min( MLU ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8617886178861789, "obj2": 0.04185189160903199}, {"determining": "Min( Min( ( DDR / FirstVNF_Mem ) ,Max( FirstVNF_RAM_Server,Const ) ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ),Min( ( FirstVNF_RAM + RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MUM ),Min( MUC ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8577235772357723, "obj2": 0.042321880670382686}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( Min( AMS ,( ACS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / CS ) + ( MLU + RRSe ) ) + ( Min( RRSe ,( ( Min( ( DS + ( MUM - MUM ) ) ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.6829268292682927, "obj2": 0.13546627352006116}], "24": [{"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN - ( ( MDR + ( ( Const / FirstVNF_Mem ) + PN ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MUC,( MUR - ( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( MLU / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MLU ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( ( CS / MLU ),( CS / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,( BR / Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ) ) ) ) - ( ACS - ( FirstVNF_Mem - ACS ) ) ) )", "choosing": "( ( Min( RRSe ,MUR ) * MLU ) - ( Min( ( Min( RRSe ,Max( CS,Max( ( MUC / RMSe ),MUM ) ) ) + MUR ) ,Min( MUC ,RRSe ) ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( ( BR * ARS ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,BR ) ) + Max( PN,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * MUC ) ) ) ) ,RRSe ) - ( DS + MUR ) )", "obj1": 0.06910569105691057, "obj2": 0.7518006000355263}, {"determining": "( ( ( FirstVNF_Mem * ( Min( Min( Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( DS ,( ( RMSe * Min( RCSe ,CS ) ) * Max( ( MUM / DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.42886178861788615, "obj2": 0.3396516954792995}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,( ( Max( PN,ARS ) * DDR ) * Const ) ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) )", "obj1": 0.46747967479674796, "obj2": 0.2799271754013019}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( ( Min( DDR ,Min( ( Const * FirstVNF_Mem ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,DDR ) ) ) ) )", "choosing": "( Min( ( MUC / Min( MUM ,CS ) ) ,MUC ) + ( MUR - ( ( ( ( ( DS * Max( MUM,RRSe ) ) * CS ) - RMSe ) - MUR ) + RCSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.4066799263624194}, {"determining": "( Max( Max( Min( ACS ,FirstVNF_RAM_Server ),( AMS * Max( FirstVNF_Mem,Min( ( CRS / BR ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( Const,FirstVNF_RAM_Server ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * RRSe ) ) - Max( MLU,( Min( ( RMSe / MUC ) ,RCSe ) + MLU ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( DS / CS ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MUR ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.1991869918699187, "obj2": 0.5899410888607015}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( ( ( RRS - AMS ) * ( MDR - FirstVNF_RAM ) ) ,RRS ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - FirstVNF_CPU ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( ( Max( RMSe,MUR ) * ( RCSe / DS ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / ( Min( MUM ,( CS * RRSe ) ) / MLU ) ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / RRSe ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.35772357723577236, "obj2": 0.4517235368309968}, {"determining": "( ( ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) + Min( ( ( ( FirstVNF_RAM_Server - Min( RRS ,FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUM ) ) - ( ( MUM / MLU ) * ( MUR - MUR ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.4105691056910569, "obj2": 0.3938136387771549}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - ( ( DDR + FirstVNF_RAM ) * Const ) ) * PN ) ),RRS ) ,Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( Const / FirstVNF_Mem ) + PN ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( Min( MUR ,( MUR * CS ) ) * ( DS + ( MUM - MUM ) ) ) ) )", "obj1": 0.14227642276422764, "obj2": 0.6693012874927546}, {"determining": "( ( ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUM ) ) - ( MUR * CS ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.6219512195121951, "obj2": 0.17245925696042308}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - MUM ) / MUC ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6138211382113821, "obj2": 0.20454903778871164}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( Max( PN,( RRS * FirstVNF_Mem_Server ) ) * DDR ) * Const ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RRSe,( Min( DS ,MUR ) / MUR ) ) ) + ( Max( MUC,( RCSe / MLU ) ) * CS ) ) )", "obj1": 0.23373983739837398, "obj2": 0.5566437080274105}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - Min( ( FirstVNF_CPU * PN ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( DDR + RRS ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),CRS ) ,PN ) / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - Max( ( ( RCSe + ( ( Max( RMSe,MUM ) + DS ) * ( ( CS + RRSe ) * ( MUM + RMSe ) ) ) ) + ( DS / RRSe ) ),Min( ( DS - RMSe ) ,RCSe ) ) ) )", "obj1": 0.6321138211382114, "obj2": 0.15791073943624762}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - DDR ) ) ,FirstVNF_Mem_Server ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,DS ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * Max( ( MLU / ( ( MLU / MUC ) + MUC ) ),RRSe ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.8841463414634146, "obj2": 0.03696364130132651}, {"determining": "( Max( ( ( Const - FirstVNF_RAM ) * FirstVNF_RAM_Server ),RRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) * Min( Min( ( RMSe / ( MUC / Max( Max( MLU,MUR ),Min( Min( MLU ,RRSe ) ,RCSe ) ) ) ) ,MLU ) ,( Max( ( MLU * MUR ),( Max( ( RMSe * Min( DS ,MUM ) ),MUC ) / Min( ( MUM * Min( MUM ,MLU ) ) ,( MUM * DS ) ) ) ) / ( MUR / ( ( ( CS * ( RCSe + MUC ) ) - RMSe ) / ( ( ( MUM - MUR ) - ( RMSe + DS ) ) - MUR ) ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.7036733638876238}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6565040650406504, "obj2": 0.14960364698008935}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,DS ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * Max( ( MLU / ( ( RCSe / MUC ) + MUC ) ),RRSe ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.8150406504065041, "obj2": 0.05875342310720895}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,( AMS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),( ( FirstVNF_Mem - PN ) * FirstVNF_RAM_Server ) ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( ( RRSe / CS ) ,RRSe ) - ( ( RMSe / RMSe ) + ( MUR * CS ) ) )", "obj1": 0.29878048780487804, "obj2": 0.4909361547693215}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RMSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.9126016260162602, "obj2": 0.022351461263891204}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,( AMS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,Min( FirstVNF_CPU ,( Const + ( FirstVNF_Mem / ( ( Const - FirstVNF_Mem ) - ( DDR + Max( Max( Const,DDR ),PN ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( RRSe / MLU ) - CS ) + MLU ) ,RRSe ) - ( ( RRSe * ( Min( Min( RRSe ,( DS - CS ) ) ,RMSe ) + MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.31910569105691056, "obj2": 0.4846980788848291}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,( ( Max( PN,ARS ) * DDR ) * Max( ARS,( FirstVNF_CPU * PN ) ) ) ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( ( RRSe / RRSe ) * CS ) ) ) ) ) )", "obj1": 0.5142276422764228, "obj2": 0.24869142416150072}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "( ( ( Max( PN,( FirstVNF_Mem - Min( ( ARS + DDR ) ,MDR ) ) ) - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_Mem / MRS ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe / ( Max( ( ( CS * CS ) + CS ),MUC ) / RRSe ) ) + ( MUR - ( ( RRSe - MUR ) + RCSe ) ) )", "obj1": 0.5467479674796748, "obj2": 0.2435320501709903}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( ( CRS / BR ) ,( PN - DDR ) ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( DS / CS ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MUR ) ,RMSe ) ) - ( MUR / MUM ) ) ),Max( CS,Max( DS,RMSe ) ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5759979813892474}, {"determining": "Min( ( ( ( ( FirstVNF_Mem / Max( CRS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,FirstVNF_Mem_Server ) / ( ( MRS / Const ) / FirstVNF_CPU_Server ) ) - Max( ( CRS / ( FirstVNF_Mem_Server - ACS ) ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) - MUC ) ) - ( Min( ( RCSe * MUR ) ,Max( ( ( RRSe / Max( MUM,MUM ) ) / Min( MLU ,Min( Max( RCSe,MUR ) ,( MUR / MUC ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.34146341463414637, "obj2": 0.4579905116060634}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( ( PN + Max( DDR,MRS ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ( FirstVNF_RAM + DDR ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + CS ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.5650406504065041, "obj2": 0.23261778802821553}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) + ( MUR - MUC ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5955284552845529, "obj2": 0.21178057563487762}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,( AMS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,Min( FirstVNF_CPU ,( Const + ( FirstVNF_Mem / ( ( Const - FirstVNF_Mem ) - ( DDR + Max( Max( Const,DDR ),PN ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( RRSe / MLU ) - CS ) + MLU ) ,RRSe ) - ( ( RRSe * ( Min( Min( RRSe ,( DS - CS ) ) ,RMSe ) + MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.5064687000788365}, {"determining": "Min( ( ( ( Const - MDR ) + RRS ) / Const ) ,( Const + FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( CS / RCSe ) ) ) / Max( RCSe,MLU ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.7886178861788617, "obj2": 0.06908440463076967}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( MUR - MUM ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / ( MLU / MLU ) ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5248641712176909}, {"determining": "( ( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / ( PN * FirstVNF_RAM_Server ) ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,( RMSe * ( MUR * CS ) ) ) - RRSe ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.9471544715447154, "obj2": 0.01693168746948721}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( Max( PN,( RRS * FirstVNF_Mem_Server ) ) * DDR ) * Const ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RRSe,( Min( DS ,MUR ) / MUR ) ) ) + ( Max( MUC,( RCSe / MLU ) ) * CS ) ) )", "obj1": 0.21544715447154472, "obj2": 0.5823360114899261}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( ( CS * RRSe ) - RRSe ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.9227642276422764, "obj2": 0.020310584595249648}, {"determining": "( ( ( FirstVNF_Mem * ( Min( Min( Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_Mem - DDR ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( ( MLU / RCSe ) + ( RMSe - Min( DS ,( ( RMSe * ( MUC - RRSe ) ) * Max( ( MUM / DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.5691056910569106, "obj2": 0.21260863626300344}, {"determining": "( Max( Max( Min( ( Const / FirstVNF_Mem ) ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( Min( PN ,FirstVNF_CPU ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ACS ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( Min( Min( Min( ( Min( MUC ,RMSe ) * Min( RRSe ,CS ) ) ,( CS - RMSe ) ) ,Max( ( ( DS + CS ) - RCSe ),MUR ) ) ,( MUR * ( ( MUC + DS ) * MUR ) ) ) * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - ( ( RRSe * RRSe ) * ( CS / MLU ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( Const / FirstVNF_Mem ) + PN ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( ( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) )", "obj1": 0.2621951219512195, "obj2": 0.5561631165864102}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / DDR ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( ( DDR + RRS ) * ( MDR / ( ACS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( ( MUR + MUR ) - MUC ) ) * RRSe ) / ( ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / Max( RMSe,MUR ) ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.7215447154471545, "obj2": 0.10296090985621957}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "Min( MRS ,Max( Max( ( ( ( ACS + ACS ) + ( Min( PN ,PN ) / ( FirstVNF_RAM_Server * ( FirstVNF_CPU / ARS ) ) ) ) / MRS ),( MDR + MDR ) ),Max( AMS,CRS ) ) )", "choosing": "( Min( CS ,( ( RCSe + Max( MUC,RCSe ) ) * RMSe ) ) - ( MUC * ( MUR / ( MUM * ( Min( MUR ,CS ) - MUM ) ) ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5394744736554883}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( Max( ACS,BR ) / FirstVNF_CPU_Server ),Max( AMS,( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( MUR / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( RRSe / MLU ) - ( MLU * ( RRSe * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8292682926829268, "obj2": 0.053681700389787645}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( PN / PN ) ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ,Max( ( MUM / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2804878048780488, "obj2": 0.511929995253608}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( ( BR * ARS ),( FirstVNF_CPU_Server - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_CPU + BR ),BR ) ) + Max( PN,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( RMSe * ( Max( RMSe,DS ) * CS ) ) ) ) ) ,RRSe ) - ( DS + MUR ) )", "obj1": 0.08130081300813008, "obj2": 0.7430341388450379}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + ( MLU + Min( RRSe ,Max( MLU,RCSe ) ) ) )", "obj1": 0.5548780487804879, "obj2": 0.23786531304784386}, {"determining": "( ( Min( PN ,PN ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) / ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( CS / ( MUC * RMSe ) ) * ( ( MUM / ( MLU * ( MUC / MUC ) ) ) / ( RMSe - ( CS * ( MUR * RCSe ) ) ) ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.11382113821138211, "obj2": 0.723705035495608}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Max( ( MLU / ( ( RCSe / MUC ) + MUC ) ),RRSe ) - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6727642276422764, "obj2": 0.1417909032795572}, {"determining": "( Max( Max( AMS,RRS ),FirstVNF_CPU ) + Min( ( ( Max( Const,PN ) - FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( ( ACS - FirstVNF_CPU_Server ) / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / ( RMSe + CS ) ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.733739837398374, "obj2": 0.09563998928838313}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - Max( ACS,Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU_Server + MDR ) ,ARS ) ) ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( MUC * RMSe ) ) ) )", "obj1": 0.5020325203252033, "obj2": 0.2653003587665751}, {"determining": "Min( ( Min( CRS ,MDR ) / ( FirstVNF_Mem_Server - ARS ) ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( ( CS / MUM ) ,RRSe ) - ( Min( Min( MUM ,RMSe ) ,Max( ( ( RRSe / Max( MUM,MUR ) ) / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.4796747967479675, "obj2": 0.2760752538721209}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "( ( ( FirstVNF_Mem * ( CRS - MRS ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( DS ,( Min( CS ,( DS + MUR ) ) * Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.5121951219512195, "obj2": 0.26175729928363295}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( MUR * RCSe ) ) )", "obj1": 0.5792682926829268, "obj2": 0.21245614416389488}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - FirstVNF_CPU ) * PN ) ),( RRS - FirstVNF_Mem ) ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( ( MLU / CS ) * Min( ( MUR * ( DS / MUC ) ) ,DS ) ) ) )", "obj1": 0.11585365853658537, "obj2": 0.708469510892546}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * MRS ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Max( CS,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7195121951219512, "obj2": 0.11342411084643245}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( Const / DDR ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( ( DDR + RRS ) * ( MDR / ( ACS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( ( MUR + MUR ) - MUC ) ) * RRSe ) / RMSe ) - MLU )", "obj1": 0.6951219512195121, "obj2": 0.1216451537201977}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( ( CRS * ( MRS / FirstVNF_RAM_Server ) ) ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,( RRSe - MUR ) ) - ( DS + ( MUM - MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.009192388663185861}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - Min( ( DDR - CRS ) ,ARS ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8699186991869918, "obj2": 0.038610302528891714}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( CRS - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9857723577235772, "obj2": 0.003802130974724327}, {"determining": "Min( MRS ,( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) )", "choosing": "( Max( MLU,DS ) - ( MUR + ( Min( DS ,( RCSe - RCSe ) ) - RCSe ) ) )", "obj1": 0.266260162601626, "obj2": 0.5438743260786539}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.7422024261236431}, {"determining": "( Min( ( ( ARS + ( CRS * MDR ) ) + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,DS ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( MLU - RRSe ) )", "obj1": 0.7642276422764228, "obj2": 0.0768590911056188}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) )", "obj1": 0.26422764227642276, "obj2": 0.550651003226846}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( Min( FirstVNF_Mem ,DDR ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - Max( CS,( MUR * RCSe ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.741869918699187, "obj2": 0.08788839330483242}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.9613821138211383, "obj2": 0.014684668301543526}, {"determining": "Min( ( ( FirstVNF_CPU + Min( ( RRS - BR ) ,Const ) ) * Max( FirstVNF_CPU_Server,RRS ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * ( ( ( RMSe - MUM ) / MUR ) - MLU ) ) / Min( ( ( ( RMSe + Max( ( MUR / MLU ),RRSe ) ) + ( MUC / ( ( MUM / MLU ) * ( MUR - MUR ) ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7479674796747967, "obj2": 0.08454442704909101}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - ( ( DDR + FirstVNF_RAM ) * Const ) ) * PN ) ),RRS ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( Min( MUR ,RCSe ) * ( DS + ( MUM - MUM ) ) ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7072729796824204}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / CS ) + ( MLU + RRSe ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.6747967479674797, "obj2": 0.13950257630333127}, {"determining": "Min( Max( AMS,DDR ) ,( ( ARS + FirstVNF_RAM ) - ( ( CRS + MDR ) * Max( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - Min( ( DDR - CRS ) ,ARS ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( Min( CS ,( DS + MUR ) ) - MUM ) ) ) ,RMSe ) ) - ( CS / CS ) )", "obj1": 0.8373983739837398, "obj2": 0.05019382171469673}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( Min( FirstVNF_CPU ,DDR ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( MUR * CS ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.08991137190971416}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( MRS ,Max( ARS,( FirstVNF_CPU * PN ) ) ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / RRSe ) - ( ( MUR - MLU ) / Min( ( DS * ( ( ( RCSe / MUM ) - ( RMSe * MUM ) ) + CS ) ) ,Max( MLU,RMSe ) ) ) ) * CS )", "obj1": 0.7560975609756098, "obj2": 0.07985881202107603}, {"determining": "Min( Min( ( DDR / FirstVNF_Mem ) ,Max( FirstVNF_RAM_Server,Const ) ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( CRS + MDR ) ) ) / FirstVNF_CPU_Server ),Min( ( FirstVNF_RAM + RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) / Min( ( MLU / ( ( Max( ( RRSe - MUM ),Min( MUC ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.7113821138211383, "obj2": 0.11592130402602728}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.959349593495935, "obj2": 0.016153645420753936}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( Min( FirstVNF_Mem ,DDR ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ( ARS / Const ) ,( Const + FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Min( ( DS / CS ) ,( RRSe - MUR ) ) - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - Max( CS,( MUR * RCSe ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7764227642276422, "obj2": 0.07110235038845125}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( ( ( RRSe / Max( MUM,MUM ) ) / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.6849593495934959, "obj2": 0.1301630710804424}, {"determining": "( Max( ACS,( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ACS ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - DS ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "Min( Max( AMS,DDR ) ,( ( Min( PN ,( Max( MDR,CRS ) * FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) * BR ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( MUR / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( RRSe / MLU ) - ( MLU * ( RRSe * CS ) ) ) ) ,RMSe ) ) - ( ( RCSe + MUM ) / CS ) )", "obj1": 0.8414634146341463, "obj2": 0.04910860755027563}, {"determining": "Min( Max( Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,Max( ACS,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ) ) ,FirstVNF_Mem_Server ),DDR ) ,( PN - ( ( CRS + MDR ) * Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( ( ( MUM / RRSe ) - RRSe ) / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( MUR,DS ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( CS / Min( ( MUC / MUR ) ,RMSe ) ) )", "obj1": 0.8475609756097561, "obj2": 0.04562749858789649}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / CS ) + ( MLU + RRSe ) ) + ( Min( RRSe ,( ( Min( MUC ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.6829268292682927, "obj2": 0.13546627352006116}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN - ( ( MDR + CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MUC,( MUR - ( Max( RMSe,MUR ) * CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( MLU / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MLU ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( ( CS / MLU ),( CS / MUM ) ) ) )", "obj1": 0.7865853658536586, "obj2": 0.07052145933571784}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( Min( MUC ,( MUR + RMSe ) ) * CS ) ) ) ) + ( MUR - ( ( ( Min( ( RRSe * RMSe ) ,Min( RMSe ,MUC ) ) - MUM ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.5060975609756098, "obj2": 0.2648580022274861}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( CRS - FirstVNF_RAM ) ) - ( ( MRS / Const ) - ( AMS + Max( AMS,FirstVNF_CPU_Server ) ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + ( Max( ( Min( ( MUM - ( MUR - RMSe ) ) ,Max( RRSe,( CS * MLU ) ) ) + CS ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9776422764227642, "obj2": 0.007454379284297666}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Max( Min( Const ,FirstVNF_Mem_Server ),Min( ( ACS - Max( MRS,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MUC + MLU ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( RMSe / ( ( MUM * RMSe ) * ( MLU + MUR ) ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7520325203252033, "obj2": 0.08132398926508261}, {"determining": "( ( Min( Min( ( MRS / ( CRS + Min( ( CRS / BR ) ,FirstVNF_CPU_Server ) ) ) ,Min( ACS ,( ( CRS * Min( PN ,FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_CPU ,DDR ) - ( MRS + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( Min( MUC ,( MUR + RMSe ) ) * CS ) ) ) ) + ( MUR - ( ( ( Min( ( ( CS + RMSe ) / DS ) ,( RRSe / Max( MUC,MUM ) ) ) - MUM ) / Max( MUR,MUC ) ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7682926829268293, "obj2": 0.07380895828877747}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( DDR - RRS ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( RCSe * RMSe ) + ( MUR * CS ) ) + Max( MUC,MUM ) ) ) )", "obj1": 0.9796747967479674, "obj2": 0.006043591918024339}, {"determining": "Min( Max( AMS,( ( Min( AMS ,FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( ( ( RRSe / Max( RMSe,MUM ) ) / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.6849593495934959, "obj2": 0.1301630710804424}, {"determining": "Min( Max( AMS,( ( Const * Max( Max( FirstVNF_CPU_Server,RRS ),ARS ) ) - FirstVNF_CPU_Server ) ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ),Min( ( FirstVNF_RAM + RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * MUM ) * Min( MLU ,CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),Min( MUC ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8638211382113821, "obj2": 0.04071189163123989}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7032520325203252, "obj2": 0.11867566495112286}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_Mem ) - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / ( Min( ( ( CS * MUC ) / MUR ) ,( MUC + RMSe ) ) * MLU ) ) - DS )", "obj1": 0.6971544715447154, "obj2": 0.11922396596657542}, {"determining": "( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Max( ( MLU / ( ( RCSe / MUC ) + MUC ) ),RRSe ) - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,( MUR * RCSe ) ) ) ),( MUC + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.7723577235772358, "obj2": 0.07257714626938212}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( CS / Min( ( MUC / MUR ) ,RMSe ) ) )", "obj1": 0.8516260162601627, "obj2": 0.04478007288289583}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / ( Const - ARS ) ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe - Min( DS ,( Min( CS ,( DS + RRSe ) ) * Max( MLU,RMSe ) ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0012328683413720739}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( Min( ( MDR / CRS ) ,AMS ) ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Min( MUM ,( MLU + Min( RMSe ,RMSe ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8556910569105691, "obj2": 0.0433575530214167}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ARS,PN ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),Min( MLU ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8617886178861789, "obj2": 0.04185189160903199}, {"determining": "Min( Min( ( DDR / FirstVNF_Mem ) ,Max( FirstVNF_RAM_Server,Const ) ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ),Min( ( FirstVNF_RAM + RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MUM ),Min( MUC ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8577235772357723, "obj2": 0.042321880670382686}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( Min( AMS ,( ACS - FirstVNF_CPU_Server ) ) - FirstVNF_CPU_Server ) ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / CS ) + ( MLU + RRSe ) ) + ( Min( RRSe ,( ( Min( ( DS + ( MUM - MUM ) ) ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.6829268292682927, "obj2": 0.13546627352006116}], "25": [{"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( ( FirstVNF_Mem * Max( ( BR * ARS ),( FirstVNF_CPU_Server - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_CPU + BR ),BR ) ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - Min( ( DDR - CRS ) ,ARS ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RMSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN - ( ( MDR + ( ( Const / FirstVNF_Mem ) + PN ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MUC,( MUR - ( Min( RMSe ,RRSe ) - ( ( RCSe * RMSe ) + ( MUR * CS ) ) ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( MLU / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MLU ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( ( CS / MLU ),( CS / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( ( BR * ARS ),FirstVNF_CPU ) ) / Max( FirstVNF_RAM,BR ) ) + Max( PN,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MLU ) * MUC ) ) ) ) ,RRSe ) - ( DS + MUR ) )", "obj1": 0.06910569105691057, "obj2": 0.7518006000355263}, {"determining": "( ( ( FirstVNF_Mem * ( Min( Min( Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( DS ,( ( RMSe * Min( RCSe ,CS ) ) * Max( ( MUM / DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.42886178861788615, "obj2": 0.3396516954792995}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( ( Min( DDR ,Min( ( Const * FirstVNF_Mem ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem ,DDR ) ) ) ) )", "choosing": "( Min( ( MUC / Min( MUM ,CS ) ) ,MUC ) + ( MUR - ( ( ( ( ( DS * Max( MUM,RRSe ) ) * CS ) - RMSe ) - MUR ) + RCSe ) ) )", "obj1": 0.3597560975609756, "obj2": 0.4066799263624194}, {"determining": "( ( ( FirstVNF_Mem * ( Min( Min( Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ACS ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( DS ,( ( RMSe * Min( RCSe ,CS ) ) * Max( ( MUM / DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.4613821138211382, "obj2": 0.310300062021268}, {"determining": "( Max( ( CRS / ( Max( ACS,MDR ) * ( ( Min( RRS ,Min( MDR ,PN ) ) + ( Min( ACS ,FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) ),RRS ) * Max( Max( ( ( CRS + FirstVNF_CPU_Server ) - ARS ),CRS ),DDR ) )", "choosing": "( ( Max( MUM,MLU ) / CS ) * ( Max( ( MLU / ( ( RCSe / Min( ( RMSe - DS ) ,MUM ) ) + Min( Min( ( CS * MUC ) ,RMSe ) ,( ( MUR * MLU ) * Min( RMSe ,MUR ) ) ) ) ),RRSe ) * RRSe ) )", "obj1": 0.17073170731707318, "obj2": 0.6366942827516081}, {"determining": "( Max( Max( Min( ACS ,FirstVNF_RAM_Server ),( AMS * Max( FirstVNF_Mem,Min( ( CRS / BR ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( Const,FirstVNF_RAM_Server ) ) ) ),Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * RRSe ) ) - Max( MLU,( Min( ( RMSe / MUC ) ,RCSe ) + MLU ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( DS / CS ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MUR ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.1991869918699187, "obj2": 0.5899410888607015}, {"determining": "( ( Min( PN ,PN ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( ( MDR / PN ) / ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( CS / ( Max( MLU,MUC ) / MLU ) ) * ( ( MUM / ( MLU * ( MUC / MUC ) ) ) / ( RMSe - ( CS * ( MUR * RCSe ) ) ) ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.19308943089430894, "obj2": 0.634632572148169}, {"determining": "Min( MRS ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - ( Max( FirstVNF_Mem_Server,MDR ) - Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,BR ) ) ) ) )", "choosing": "( Min( CS ,RRSe ) - ( Min( ( Min( RRSe ,Max( Min( RCSe ,RCSe ),( MUM - ( MUC * MUM ) ) ) ) + MUR ) ,Max( MLU,RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.42073170731707316, "obj2": 0.39097551091767085}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RMSe,Max( MUC,MUC ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RRSe,( Min( DS ,MUR ) / MUR ) ) ) + ( Max( MUC,( RCSe / MLU ) ) * CS ) ) )", "obj1": 0.25203252032520324, "obj2": 0.5382946411099877}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( ( ( RRS - AMS ) * ( MDR - FirstVNF_RAM ) ) ,RRS ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( ( FirstVNF_CPU - FirstVNF_CPU ) + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( ( Max( RMSe,MUR ) * ( RCSe / DS ) ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / RMSe ) ) / ( Min( MUM ,( CS * RRSe ) ) / MLU ) ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / RRSe ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.35772357723577236, "obj2": 0.4517235368309968}, {"determining": "( ( ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) + Min( ( ( ( FirstVNF_RAM_Server - Min( RRS ,FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUM ) ) - ( ( MUM / MLU ) * ( MUR - MUR ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.4105691056910569, "obj2": 0.3938136387771549}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - ( ( DDR + FirstVNF_RAM ) * Const ) ) * PN ) ),RRS ) ,Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( ( Const / FirstVNF_Mem ) + PN ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( Min( MUR ,( MUR * CS ) ) * ( DS + ( MUM - MUM ) ) ) ) )", "obj1": 0.14227642276422764, "obj2": 0.6693012874927546}, {"determining": "( ( ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUM ) ) - ( MUR * CS ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.6219512195121951, "obj2": 0.17245925696042308}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( Max( PN,( RRS * FirstVNF_Mem_Server ) ) * DDR ) * Const ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RRSe,( Min( DS ,MUR ) / MUR ) ) ) + ( Max( MUC,( RCSe / MLU ) ) * CS ) ) )", "obj1": 0.23373983739837398, "obj2": 0.5566437080274105}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) - MUM ) / MUC ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6138211382113821, "obj2": 0.20454903778871164}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( FirstVNF_Mem - Min( ( FirstVNF_CPU * PN ) ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( DDR + RRS ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( Min( Max( ( FirstVNF_Mem + FirstVNF_Mem_Server ),CRS ) ,PN ) / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - Max( ( ( RCSe + ( ( Max( RMSe,MUM ) + DS ) * ( ( CS + RRSe ) * ( MUM + RMSe ) ) ) ) + ( DS / RRSe ) ),Min( ( DS - RMSe ) ,RCSe ) ) ) )", "obj1": 0.6321138211382114, "obj2": 0.15791073943624762}, {"determining": "( Max( ( ( Const - FirstVNF_RAM ) * FirstVNF_RAM_Server ),RRS ) * ( PN * FirstVNF_CPU ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) * Min( Min( ( RMSe / ( MUC / Max( Max( MLU,MUR ),Min( Min( MLU ,RRSe ) ,RCSe ) ) ) ) ,MLU ) ,( Max( ( MLU * MUR ),( Max( ( RMSe * Min( DS ,MUM ) ),MUC ) / Min( ( MUM * Min( MUM ,MLU ) ) ,( MUM * DS ) ) ) ) / ( MUR / ( ( ( CS * ( RCSe + MUC ) ) - RMSe ) / ( ( ( MUM - MUR ) - ( RMSe + DS ) ) - MUR ) ) ) ) ) )", "obj1": 0.12804878048780488, "obj2": 0.7036733638876238}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( Min( ( DDR - CRS ) ,ARS ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( Min( RRS ,FirstVNF_CPU_Server ) * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( MUR - MUM ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( ( CS * ( MLU / ( MLU / MLU ) ) ) / MUM ) ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MLU ) ,RMSe ) ) - ( MUR / MUM ) ) ),CS ) ) )", "obj1": 0.2764227642276423, "obj2": 0.5248641712176909}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,( ( Max( PN,ARS ) * DDR ) * Const ) ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) )", "obj1": 0.46747967479674796, "obj2": 0.2799271754013019}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6565040650406504, "obj2": 0.14960364698008935}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,DS ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( ( MUR - MLU ) / ( RCSe / MUM ) ) ) + Max( ( RMSe * Max( ( MLU / ( ( RCSe / MUC ) + MUC ) ),RRSe ) ),( RRSe * RRSe ) ) ) )", "obj1": 0.8150406504065041, "obj2": 0.05875342310720895}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,( AMS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),( ( FirstVNF_Mem - PN ) * FirstVNF_RAM_Server ) ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( ( RRSe / CS ) ,RRSe ) - ( ( RMSe / RMSe ) + ( MUR * CS ) ) )", "obj1": 0.29878048780487804, "obj2": 0.4909361547693215}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,( AMS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,Min( FirstVNF_CPU ,( Const + ( FirstVNF_Mem / ( ( Const - FirstVNF_Mem ) - ( DDR + Max( Max( Const,DDR ),PN ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( RRSe / MLU ) - CS ) + MLU ) ,RRSe ) - ( ( RRSe * ( Min( Min( RRSe ,( DS - CS ) ) ,RMSe ) + MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.31910569105691056, "obj2": 0.4846980788848291}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,( ( Max( PN,ARS ) * DDR ) * Max( ARS,( FirstVNF_CPU * PN ) ) ) ) ) ) )", "choosing": "( ( ( RMSe / RMSe ) / CS ) + Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( ( RRSe / RRSe ) * CS ) ) ) ) ) )", "obj1": 0.5142276422764228, "obj2": 0.24869142416150072}, {"determining": "( ( RRS - MRS ) * ( PN * Max( ARS,PN ) ) )", "choosing": "( ( RMSe / Min( RRSe ,RCSe ) ) * ( Max( ( MUM - MUM ),RRSe ) * RRSe ) )", "obj1": 0.13821138211382114, "obj2": 0.6721928899443221}, {"determining": "( ( ( Max( PN,( FirstVNF_Mem - Min( ( ARS + DDR ) ,MDR ) ) ) - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( FirstVNF_Mem / MRS ) ,Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RRSe / ( Max( ( ( CS * CS ) + CS ),MUC ) / RRSe ) ) + ( MUR - ( ( RRSe - MUR ) + RCSe ) ) )", "obj1": 0.5467479674796748, "obj2": 0.2435320501709903}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( ( CRS / BR ) ,( PN - DDR ) ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * Min( MLU ,CS ) ) ) - Max( MLU,RMSe ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( DS / CS ) ) + Max( ( RMSe * ( ( CS / Min( ( MUC / MUR ) ,RMSe ) ) - ( MUR / MUM ) ) ),Max( CS,Max( DS,RMSe ) ) ) ) )", "obj1": 0.22357723577235772, "obj2": 0.5759979813892474}, {"determining": "Min( ( ( ( ( FirstVNF_Mem / Max( CRS,FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,FirstVNF_Mem_Server ) / ( ( MRS / Const ) / FirstVNF_CPU_Server ) ) - Max( ( CRS / ( FirstVNF_Mem_Server - ACS ) ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,( ( MUR + RMSe ) - MUC ) ) - ( Min( ( RCSe * MUR ) ,Max( ( ( RRSe / Max( MUM,MUM ) ) / Min( MLU ,Min( Max( RCSe,MUR ) ,( MUR / MUC ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.34146341463414637, "obj2": 0.4579905116060634}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,MRS ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RMSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) ,RMSe ) ) - ( MUC * Max( MUR,Max( CS,MUM ) ) ) )", "obj1": 0.8963414634146342, "obj2": 0.02848089796052599}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( ( PN + Max( DDR,MRS ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( FirstVNF_RAM - ( FirstVNF_RAM + DDR ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC + CS ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.5650406504065041, "obj2": 0.23261778802821553}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( ARS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( MUM / CS ) ) ) ) + ( MUR - MUC ) ) / CS ) + ( MUR - MUC ) )", "obj1": 0.5955284552845529, "obj2": 0.21178057563487762}, {"determining": "Min( ( ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( Min( AMS ,( AMS / FirstVNF_Mem_Server ) ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ) + FirstVNF_CPU ) ,Min( FirstVNF_CPU ,( Const + ( FirstVNF_Mem / ( ( Const - FirstVNF_Mem ) - ( DDR + Max( Max( Const,DDR ),PN ) ) ) ) ) ) )", "choosing": "( Min( ( ( ( RRSe / MLU ) - CS ) + MLU ) ,RRSe ) - ( ( RRSe * ( Min( Min( RRSe ,( DS - CS ) ) ,RMSe ) + MUR ) ) + ( MUR * CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.5064687000788365}, {"determining": "Min( ( ( ( Const - MDR ) + RRS ) / Const ) ,( Const + FirstVNF_CPU ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( CS / RCSe ) ) ) / Max( RCSe,MLU ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.7886178861788617, "obj2": 0.06908440463076967}, {"determining": "Min( MRS ,( ( FirstVNF_CPU + Max( PN,( ( Max( PN,( RRS * FirstVNF_Mem_Server ) ) * DDR ) * Const ) ) ) / Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( ( RRSe / MUR ) * ( MUR * CS ) ) ) ) ) ,RRSe ) - ( Min( ( DS * MLU ) ,Max( RRSe,( Min( DS ,MUR ) / MUR ) ) ) + ( Max( MUC,( RCSe / MLU ) ) * CS ) ) )", "obj1": 0.21544715447154472, "obj2": 0.5823360114899261}, {"determining": "( ( ( FirstVNF_Mem * ( Min( Min( Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( BR + Const ) ) + MDR ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( FirstVNF_Mem - DDR ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( ( MLU / RCSe ) + ( RMSe - Min( DS ,( ( RMSe * ( MUC - RRSe ) ) * Max( ( MUM / DS ),RMSe ) ) ) ) ) ) )", "obj1": 0.5691056910569106, "obj2": 0.21260863626300344}, {"determining": "( Max( Max( Min( ( Const / FirstVNF_Mem ) ,MDR ),( Min( FirstVNF_Mem_Server ,BR ) * RRS ) ),( Min( PN ,FirstVNF_CPU ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ACS ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( Min( Min( Min( ( Min( MUC ,RMSe ) * Min( RRSe ,CS ) ) ,( CS - RMSe ) ) ,Max( ( ( DS + CS ) - RCSe ),MUR ) ) ,( MUR * ( ( MUC + DS ) * MUR ) ) ) * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - ( ( RRSe * RRSe ) * ( CS / MLU ) ) ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - Min( FirstVNF_RAM ,BR ) ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Min( RCSe ,MUC ) + Max( ( ( RRSe - CS ) * Max( MUR,MUC ) ),( ( CS * RRSe ) + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.8739837398373984, "obj2": 0.035321011763922924}, {"determining": "( ( ( Const - MDR ) - ( ( FirstVNF_Mem - ACS ) * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / ( PN * FirstVNF_RAM_Server ) ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,( RMSe * ( MUR * CS ) ) ) - RRSe ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.9471544715447154, "obj2": 0.01693168746948721}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( ACS - PN ) ),RRS ) ) ) )", "choosing": "( Min( RRSe ,Min( DS ,RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2732794684345778}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( FirstVNF_Mem_Server / DDR ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( ( DDR + RRS ) * ( MDR / ( ACS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( ( MUR + MUR ) - MUC ) ) * RRSe ) / ( ( ( ( Max( MUC,MUC ) - MUM ) / MUC ) / Max( RMSe,MUR ) ) + ( MUR - MUC ) ) ) - MLU )", "obj1": 0.7215447154471545, "obj2": 0.10296090985621957}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( Max( ACS,BR ) / FirstVNF_CPU_Server ),Max( AMS,( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( MUR / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( RRSe / MLU ) - ( MLU * ( RRSe * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8292682926829268, "obj2": 0.053681700389787645}, {"determining": "Min( MRS ,( ( ( ( FirstVNF_Mem * Max( ( BR * ARS ),( FirstVNF_CPU_Server - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_CPU + BR ),BR ) ) + Max( PN,( ( Max( FirstVNF_Mem,FirstVNF_RAM ) * DDR ) * Const ) ) ) / ACS ) )", "choosing": "( Min( Max( RMSe,( MLU / ( MLU * ( RMSe * ( Max( RMSe,DS ) * CS ) ) ) ) ) ,RRSe ) - ( DS + MUR ) )", "obj1": 0.08130081300813008, "obj2": 0.7430341388450379}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe / CS ) + ( MLU + Min( RRSe ,Max( MLU,RCSe ) ) ) )", "obj1": 0.5548780487804879, "obj2": 0.23786531304784386}, {"determining": "( ( Min( PN ,PN ) + ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,FirstVNF_Mem_Server ) / ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( CS / ( MUC * RMSe ) ) * ( ( MUM / ( MLU * ( MUC / MUC ) ) ) / ( RMSe - ( CS * ( MUR * RCSe ) ) ) ) ) ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.11382113821138211, "obj2": 0.723705035495608}, {"determining": "( ( Min( ( FirstVNF_RAM - ( RRS - AMS ) ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Max( ( MLU / ( ( RCSe / MUC ) + MUC ) ),RRSe ) - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,MUM ) ) ),( MUC + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.6727642276422764, "obj2": 0.1417909032795572}, {"determining": "( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - Max( ACS,Min( FirstVNF_Mem ,Min( ( FirstVNF_CPU_Server + MDR ) ,ARS ) ) ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( MUC * RMSe ) ) ) )", "obj1": 0.5020325203252033, "obj2": 0.2653003587665751}, {"determining": "( Min( ( Max( MDR,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( Max( MUM,MUR ) + Max( MUC,MUM ) ) ) )", "obj1": 0.9247967479674797, "obj2": 0.01957818788783831}, {"determining": "Min( ( Min( CRS ,MDR ) / ( FirstVNF_Mem_Server - ARS ) ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( ( CS / MUM ) ,RRSe ) - ( Min( Min( MUM ,RMSe ) ,Max( ( ( RRSe / Max( MUM,MUR ) ) / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.4796747967479675, "obj2": 0.2760752538721209}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,( ( AMS + FirstVNF_RAM ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( MUR - ( DS - RCSe ) ) )", "obj1": 0.10975609756097561, "obj2": 0.7286204142126094}, {"determining": "( ( ( FirstVNF_Mem * ( CRS - MRS ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Const - ARS ) ) )", "choosing": "( ( RRSe / CS ) + ( MLU - ( MUM + ( RMSe - Min( DS ,( Min( CS ,( DS + MUR ) ) * Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.5121951219512195, "obj2": 0.26175729928363295}, {"determining": "( ( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) ) + ( ( FirstVNF_Mem - FirstVNF_CPU ) + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( MUR * RCSe ) ) )", "obj1": 0.5792682926829268, "obj2": 0.21245614416389488}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - FirstVNF_CPU ) * PN ) ),( RRS - FirstVNF_Mem ) ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( ( MLU / CS ) * Min( ( MUR * ( DS / MUC ) ) ,DS ) ) ) )", "obj1": 0.11585365853658537, "obj2": 0.708469510892546}, {"determining": "( ( Min( PN ,PN ) + ( FirstVNF_RAM + ( DDR - PN ) ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,( Max( ( ACS / FirstVNF_CPU ),( FirstVNF_CPU - BR ) ) - FirstVNF_Mem ) ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RCSe,DS ) / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RMSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( Max( ( RMSe + ( CS + DS ) ),CS ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.1016260162601626, "obj2": 0.7368200308019992}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( Min( Min( ( CRS * ( MRS / FirstVNF_RAM_Server ) ) ,FirstVNF_CPU ) ,( ( MRS - CRS ) * FirstVNF_Mem_Server ) ) * ACS ) )", "choosing": "( Min( RMSe ,( RRSe - MUR ) ) - ( DS + ( MUM - MUM ) ) )", "obj1": 0.9695121951219512, "obj2": 0.009192388663185861}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( Min( FirstVNF_Mem ,DDR ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( ( ARS / Const ) ,( Const + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - Max( CS,( MUR * CS ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.9065040650406504, "obj2": 0.023585767933697863}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * MRS ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Max( CS,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7195121951219512, "obj2": 0.11342411084643245}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( PN / ARS ) ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ,Max( ( MUM / ( RRSe / ( MUR - MUM ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2804878048780488, "obj2": 0.511929995253608}, {"determining": "( Max( Max( Min( ACS ,FirstVNF_RAM_Server ),( AMS * Max( FirstVNF_Mem,Min( ( CRS / BR ) ,FirstVNF_CPU_Server ) ) ) ),( Min( FirstVNF_RAM_Server ,( BR * Max( BR,BR ) ) ) - ( MDR - MDR ) ) ) * Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * RRSe ) * RRSe ) ) - Max( MLU,( Min( ( RMSe / MUC ) ,RCSe ) + MLU ) ) ) * ( ( Max( ( ( Min( MUC ,RRSe ) + ( Max( MUC,MUC ) - MUM ) ) + MUM ),CS ) * ( DS / CS ) ) + Max( ( RMSe * Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ),CS ) ) )", "obj1": 0.7317073170731707, "obj2": 0.09663585045330324}, {"determining": "Min( Max( ( ( CRS * RRS ) - ( Min( FirstVNF_CPU ,DDR ) - ( DDR + FirstVNF_CPU ) ) ),( ( Min( AMS ,FirstVNF_RAM_Server ) - Min( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( Max( ( ( RRSe / Max( RMSe,MUM ) ) / ( RRSe / ( ( RMSe * RMSe ) - ( MUM + RCSe ) ) ) ),RMSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.6869918699186992, "obj2": 0.12929196347613867}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Max( RRS,MRS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( MUR * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( Min( RRSe ,( ( ( CS - RMSe ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.08943089430894309, "obj2": 0.7422024261236431}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ( ( Const / ( Const - ARS ) ) + PN ) * Min( ( DDR - RRS ) ,CRS ) ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe - Min( DS ,( Min( CS ,( DS + RRSe ) ) * Max( MLU,RMSe ) ) ) ) )", "obj1": 0.9959349593495935, "obj2": 0.0012328683413720739}, {"determining": "( ( Min( PN ,PN ) + ( ( ( DDR + FirstVNF_CPU_Server ) * ACS ) - FirstVNF_Mem_Server ) ) + Min( MDR ,DDR ) )", "choosing": "( ( ( RMSe / ( ( RMSe * ( RCSe * ( MUC - ( MUC / MUC ) ) ) ) + ( MUM - MUM ) ) ) / ( RMSe + ( ( ( DS * ( ( RCSe - CS ) * Max( MUR,MUC ) ) ) * MUR ) * Min( MUR ,DS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.09552845528455285, "obj2": 0.7381723671353533}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( Min( FirstVNF_Mem ,DDR ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - Max( CS,( MUR * RCSe ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.741869918699187, "obj2": 0.08788839330483242}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.9613821138211383, "obj2": 0.014684668301543526}, {"determining": "Min( ( ( FirstVNF_CPU + Min( ( RRS - BR ) ,Const ) ) * Max( FirstVNF_CPU_Server,RRS ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * ( ( ( RMSe - MUM ) / MUR ) - MLU ) ) / Min( ( ( ( RMSe + Max( ( MUR / MLU ),RRSe ) ) + ( MUC / ( ( MUM / MLU ) * ( MUR - MUR ) ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7479674796747967, "obj2": 0.08454442704909101}, {"determining": "Min( Max( ( CRS / ( ( FirstVNF_CPU - ( ( DDR + FirstVNF_RAM ) * Const ) ) * PN ) ),RRS ) ,( ( ( Const / FirstVNF_Mem ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( RMSe + ( Min( MUR ,RCSe ) * ( DS + ( MUM - MUM ) ) ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7072729796824204}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( ACS - FirstVNF_CPU_Server ) ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / CS ) + ( MLU + RRSe ) ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.6747967479674797, "obj2": 0.13950257630333127}, {"determining": "Min( Max( AMS,DDR ) ,( ( ARS + FirstVNF_RAM ) - ( ( CRS + MDR ) * Max( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - Min( ( DDR - CRS ) ,ARS ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( Min( CS ,( DS + MUR ) ) - MUM ) ) ) ,RMSe ) ) - ( CS / CS ) )", "obj1": 0.8373983739837398, "obj2": 0.05019382171469673}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( Min( FirstVNF_CPU ,DDR ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( MUR * CS ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7357723577235772, "obj2": 0.08991137190971416}, {"determining": "( Max( Max( Min( ACS ,MDR ),( AMS * Max( FirstVNF_Mem,Min( MRS ,Max( ARS,( FirstVNF_CPU * PN ) ) ) ) ) ),Min( MRS ,( Min( FirstVNF_Mem ,DDR ) * Min( FirstVNF_Mem ,DDR ) ) ) ) * ( BR * FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / RRSe ) - ( ( MUR - MLU ) / Min( ( DS * ( ( ( RCSe / MUM ) - ( RMSe * MUM ) ) + CS ) ) ,Max( MLU,RMSe ) ) ) ) * CS )", "obj1": 0.7560975609756098, "obj2": 0.07985881202107603}, {"determining": "( Max( DDR,ARS ) + Min( ( ( Const / FirstVNF_Mem ) - ( ( MRS / Const ) - ( AMS + ARS ) ) ) ,Min( ( FirstVNF_RAM_Server + ARS ) ,RRS ) ) )", "choosing": "( ( ( CS * RCSe ) / ( MLU * ( Min( DS ,CS ) * ( Max( MUR,( RMSe + ( RRSe + MLU ) ) ) * ( MUM / ( RMSe * Min( CS ,DS ) ) ) ) ) ) ) + Min( ( ( RCSe + ( ( MLU + ( RMSe + MUM ) ) * RMSe ) ) / Max( CS,RMSe ) ) ,RMSe ) )", "obj1": 0.959349593495935, "obj2": 0.016153645420753936}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - Min( ( DDR - CRS ) ,ARS ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8699186991869918, "obj2": 0.038610302528891714}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( Min( FirstVNF_Mem ,DDR ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ( ARS / Const ) ,( Const + FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Min( ( DS / CS ) ,( RRSe - MUR ) ) - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - Max( CS,( MUR * RCSe ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7764227642276422, "obj2": 0.07110235038845125}, {"determining": "( Max( ACS,( ( FirstVNF_Mem_Server - Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( BR * ( Min( Max( AMS,DDR ) ,( PN - ( FirstVNF_CPU_Server * ACS ) ) ) - Max( ( PN - RRS ),( DDR / AMS ) ) ) ) ) ) * ( FirstVNF_CPU_Server * ( ( Const / AMS ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - Min( MUM ,( MLU + MUC ) ) ) * ( ( RMSe * ( CS - RCSe ) ) + Max( ( RMSe * ( ( MUC - RCSe ) - DS ) ),CS ) ) )", "obj1": 0.33739837398373984, "obj2": 0.4747474119966255}, {"determining": "( Min( ( ( ARS + ( CRS * MDR ) ) + ( FirstVNF_RAM_Server * ( DDR / FirstVNF_CPU ) ) ) ,( PN - MDR ) ) * ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server + Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * Max( MUR,DS ) ) ,( CS / ( MUM * Max( RRSe,( ( MUM / RCSe ) + DS ) ) ) ) ) - Min( MUM ,( MLU + MUC ) ) ) * ( MLU - RRSe ) )", "obj1": 0.7642276422764228, "obj2": 0.0768590911056188}, {"determining": "( ( Min( PN ,PN ) + ( Min( DDR ,Min( FirstVNF_RAM_Server ,( ACS - FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) ) + Min( Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( Min( RRS ,FirstVNF_CPU_Server ) - ( Min( AMS ,FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( RRSe / CS ) + ( MLU + RRSe ) ) + ( Min( RRSe ,( ( Min( MUC ,( Max( MLU,MUC ) / MLU ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.6829268292682927, "obj2": 0.13546627352006116}, {"determining": "Min( Max( FirstVNF_CPU_Server,DDR ) ,( PN - ( ( MDR + CRS ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MUC,( MUR - ( Max( RMSe,MUR ) * CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( MLU / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - MLU ),MUM ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( ( CS / MLU ),( CS / MUM ) ) ) )", "obj1": 0.7865853658536586, "obj2": 0.07052145933571784}, {"determining": "( ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MLU / ( MLU * ( ( RRSe / MLU ) * ( Min( MUC ,( MUR + RMSe ) ) * CS ) ) ) ) + ( MUR - ( ( ( Min( ( RRSe * RMSe ) ,Min( RMSe ,MUC ) ) - MUM ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.5060975609756098, "obj2": 0.2648580022274861}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Max( Min( Const ,FirstVNF_Mem_Server ),Min( ( ACS - Max( MRS,FirstVNF_RAM_Server ) ) ,DDR ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( MUC + MLU ) + ( MUR - ( ( ( Min( ( RMSe * RMSe ) ,Min( RMSe ,MUC ) ) - ( RMSe / ( ( MUM * RMSe ) * ( MLU + MUR ) ) ) ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.7520325203252033, "obj2": 0.08132398926508261}, {"determining": "( ( Min( PN ,PN ) + ( ( BR / Max( ( CRS / ( CRS - MRS ) ),RRS ) ) + MRS ) ) + Min( ( ( Const / ( CRS - FirstVNF_RAM ) ) - MRS ) ,( ( MRS / ( FirstVNF_CPU_Server * ( Min( AMS ,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS + ( Max( ( MLU - MLU ),MUC ) + Min( MLU ,( CS / CS ) ) ) ) + ( MUR - MUC ) )", "obj1": 0.9857723577235772, "obj2": 0.003802130974724327}, {"determining": "( Min( ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM ) ,( ( Const - MDR ) - ( ( ( FirstVNF_CPU - CRS ) - ACS ) * FirstVNF_RAM_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( ( CS * RRSe ) - RRSe ) / RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.9227642276422764, "obj2": 0.020310584595249648}, {"determining": "Min( Max( Max( ( CRS / Min( FirstVNF_Mem_Server ,CRS ) ),RRS ),DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RMSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) ,Min( RRSe ,MUR ) ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.9146341463414634, "obj2": 0.02179182503163881}, {"determining": "( ( Min( Min( ( MRS / AMS ) ,Min( ACS ,( ( CRS * RRS ) - ( DDR - RRS ) ) ) ) ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( MUR - ( ( ( RCSe * RMSe ) + ( MUR * CS ) ) + Max( MUC,MUM ) ) ) )", "obj1": 0.9796747967479674, "obj2": 0.006043591918024339}, {"determining": "( Max( Max( AMS,RRS ),FirstVNF_CPU ) + Min( ( ( Max( Const,PN ) - FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( ( ACS - FirstVNF_CPU_Server ) / FirstVNF_RAM ),RRS ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Min( RRSe ,( ( Min( RRSe ,( Max( MLU,MUC ) / ( RMSe + CS ) ) ) + MUR ) - DS ) ) - MUC ) )", "obj1": 0.733739837398374, "obj2": 0.09563998928838313}, {"determining": "Min( Max( AMS,( ( Const * Max( Max( FirstVNF_CPU_Server,RRS ),ARS ) ) - FirstVNF_CPU_Server ) ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) ) / FirstVNF_CPU_Server ),Min( ( FirstVNF_RAM + RRS ) ,ACS ) ) ) ) )", "choosing": "( ( ( Min( ( ( RRSe - CS ) * Max( MUR,MUC ) ) ,( ( RRSe * MUM ) * Min( MLU ,CS ) ) ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( Max( ( RRSe - RCSe ),Min( MUC ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.8638211382113821, "obj2": 0.04071189163123989}, {"determining": "Min( Max( AMS,DDR ) ,( ( Min( PN ,( Max( MDR,CRS ) * FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) * BR ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( MUR / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / ( ( RRSe / MLU ) - ( MLU * ( RRSe * CS ) ) ) ) ,RMSe ) ) - ( ( RCSe + MUM ) / CS ) )", "obj1": 0.8414634146341463, "obj2": 0.04910860755027563}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Max( MLU,MUC ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7032520325203252, "obj2": 0.11867566495112286}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_Mem ) - ( PN * FirstVNF_CPU ) ) ) ,FirstVNF_Mem_Server ) ) - ( DDR / RRS ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / ( Min( ( ( CS * MUC ) / MUR ) ,( MUC + RMSe ) ) * MLU ) ) - DS )", "obj1": 0.6971544715447154, "obj2": 0.11922396596657542}, {"determining": "Min( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( Min( ( MDR / CRS ) ,AMS ) ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ( ( CRS - ( PN / MDR ) ) - FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,BR ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( RRSe * RRSe ) / Min( ( Min( MUM ,( MLU + Min( RMSe ,RMSe ) ) ) / MLU ) ,RMSe ) ) - DS )", "obj1": 0.7052845528455285, "obj2": 0.11603600324494971}, {"determining": "Min( Max( ( Max( ( CRS / FirstVNF_RAM ),RRS ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( Const / DDR ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( ( DDR + RRS ) * ( MDR / ( ACS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( ( MUR + MUR ) - MUC ) ) * RRSe ) / RMSe ) - MLU )", "obj1": 0.6951219512195121, "obj2": 0.1216451537201977}, {"determining": "( Max( AMS,( ( FirstVNF_Mem_Server - Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem_Server ) ) - ( ( CRS / BR ) / FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Min( AMS ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( RRSe / CS ) + ( Max( ( MLU / ( ( RCSe / MUC ) + MUC ) ),RRSe ) - ( Min( RCSe ,MUC ) + Max( ( MUC * Max( MUR,Max( CS,( MUR * RCSe ) ) ) ),( MUC + ( RMSe - MLU ) ) ) ) ) )", "obj1": 0.7723577235772358, "obj2": 0.07257714626938212}, {"determining": "Min( Max( AMS,Min( MRS ,( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) ) ) ,( PN - MDR ) )", "choosing": "( RCSe - DS )", "obj1": 0.7154471544715447, "obj2": 0.11591244529432024}, {"determining": "Min( Max( ( ( Min( PN ,PN ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / FirstVNF_RAM ),RRS ) ) ) ),( ( FirstVNF_Mem_Server - Min( ( Max( ACS,( Const / DDR ) ) * PN ) ,FirstVNF_Mem_Server ) ) - ( ( DDR + RRS ) * ( MDR / ( ACS - ( MRS - FirstVNF_CPU_Server ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "( ( ( ( ( ( RMSe / ( DS + ( MUM - MUM ) ) ) / ( RMSe + ( RMSe * ( RMSe - RCSe ) ) ) ) + ( ( MUR + MUR ) - MUC ) ) * RRSe ) / RMSe ) - MLU )", "obj1": 0.6951219512195121, "obj2": 0.1216451537201977}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( CS / Min( ( MUC / MUR ) ,RMSe ) ) )", "obj1": 0.8516260162601627, "obj2": 0.04478007288289583}, {"determining": "Min( ( ( ( ( FirstVNF_Mem * ( PN * FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server + Max( AMS,FirstVNF_CPU_Server ) ) ) + Min( ( ( Const / FirstVNF_Mem ) - ( MDR / PN ) ) ,( ( MRS / FirstVNF_RAM_Server ) - Max( ( CRS / ( PN / PN ) ),RRS ) ) ) ) + FirstVNF_CPU ) ,( ( Max( FirstVNF_CPU,PN ) + PN ) * ACS ) )", "choosing": "( Min( RMSe ,RRSe ) - ( Min( ( RCSe * ( MUM * Max( MUC,Max( RRSe,RCSe ) ) ) ) ,Max( ( MUM / ( RRSe / ( MUR - ( MUM + RCSe ) ) ) ),RMSe ) ) + ( MUR * CS ) ) )", "obj1": 0.2804878048780488, "obj2": 0.511929995253608}, {"determining": "Min( Max( Min( Min( FirstVNF_RAM_Server ,( FirstVNF_RAM_Server - Min( AMS ,Max( ACS,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) ) ) ,FirstVNF_Mem_Server ),DDR ) ,( PN - ( ( CRS + MDR ) * Max( Const,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( ( ( MUM / RRSe ) - RRSe ) / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( MUR,DS ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) ) ,RMSe ) ) - ( CS / Min( ( MUC / MUR ) ,RMSe ) ) )", "obj1": 0.8455284552845529, "obj2": 0.0469983644856767}, {"determining": "Min( Max( AMS,DDR ) ,( PN - ( ( CRS + MDR ) * Max( ( ( ( FirstVNF_CPU + FirstVNF_CPU ) - ( ( FirstVNF_RAM * MRS ) + CRS ) ) / FirstVNF_CPU_Server ),Max( AMS,( ( CRS * RRS ) - ( ACS - FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( Max( MUC,MUM ) * ( Min( ( DS / CS ) ,( RRSe - MUR ) ) / ( ( RRSe / MUC ) / Max( RMSe,MUR ) ) ) ) / Min( ( MLU / Max( ( ( RRSe + RMSe ) / MLU ),( Max( RCSe,MUC ) - MUM ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.9126016260162602, "obj2": 0.022351461263891204}, {"determining": "Min( Min( ( DDR / FirstVNF_Mem ) ,Max( FirstVNF_RAM_Server,Const ) ) ,( PN - ( ( CRS + MDR ) * Max( ( ( FirstVNF_Mem_Server - ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( CRS + MDR ) ) ) / FirstVNF_CPU_Server ),Min( ( FirstVNF_RAM + RRS ) ,ACS ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe + RCSe ) / MLU ),( ( MLU / ( MLU / MLU ) ) - MUM ) ) / Min( ( MLU / ( ( Max( ( RRSe - MUM ),Min( MUC ,RMSe ) ) + CS ) - ( MLU * ( MUR * CS ) ) ) ) ,RMSe ) ) - ( ( MLU + ( CS * RRSe ) ) / Max( MUM,MUR ) ) )", "obj1": 0.7113821138211383, "obj2": 0.11592130402602728}]}