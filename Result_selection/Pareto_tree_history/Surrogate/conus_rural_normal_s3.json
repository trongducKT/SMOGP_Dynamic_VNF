{"1": [{"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) / Max( FirstVNF_Mem_Server,DDR ) )", "choosing": "Max( ( MUM * RCSe ),( MUR + DS ) )", "obj1": 0.5223577235772358, "obj2": 0.3881893529957169}, {"determining": "Max( Min( CRS ,MRS ),Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUR * MUC ) * Max( MUR,MUM ) )", "obj1": 0.3780487804878049, "obj2": 0.49765701519336325}, {"determining": "Min( ( ARS * FirstVNF_CPU ) ,( MDR / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - DS ) ,( DS / RCSe ) )", "obj1": 0.4613821138211382, "obj2": 0.4467956618968182}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,( RRS - FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR + RMSe ) ,( MLU - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Min( ARS ,( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ACS ) - FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_RAM * PN ) * FirstVNF_RAM_Server ),Min( ARS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / RMSe ) * ( Min( MUM ,( CS * DS ) ) * ( RMSe * CS ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6872964725574955}, {"determining": "( ( RRS - CRS ) / Max( ARS,ARS ) )", "choosing": "Max( Min( RRSe ,DS ),( MUR / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + ( FirstVNF_RAM + ( Min( ( CRS * Max( FirstVNF_CPU_Server,PN ) ) ,ARS ) + FirstVNF_CPU_Server ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( MUC * DS ) / ( ( RCSe - RRSe ) - MLU ) )", "obj1": 0.5975609756097561, "obj2": 0.29420805384415166}, {"determining": "( ( PN - FirstVNF_CPU ) - ( MDR * FirstVNF_RAM ) )", "choosing": "Min( ( RMSe - MUR ) ,Max( MUM,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) )", "choosing": "( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) )", "obj1": 0.2926829268292683, "obj2": 0.5288507587884705}, {"determining": "( Min( PN ,FirstVNF_CPU ) + ( ( FirstVNF_CPU_Server - ACS ) / AMS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( CS / Max( MUR,RMSe ) ) ) ,MUC ) ) ,( ( MUM + MUC ) * ( MUM - CS ) ) )", "obj1": 0.3353658536585366, "obj2": 0.5202846460209257}, {"determining": "( Max( ( Const * FirstVNF_RAM ),AMS ) + Max( Const,MDR ) )", "choosing": "( ( ( MLU - RMSe ) * ( DS + RCSe ) ) - Min( ( DS + MUC ) ,Max( RCSe,RCSe ) ) )", "obj1": 0.2682926829268293, "obj2": 0.609871641437085}, {"determining": "( Min( RRS ,FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) * Max( DDR,Const ) ) )", "choosing": "( Min( ( CS * RMSe ) ,( RCSe * RMSe ) ) * Min( ( CS + CS ) ,( DS / RRSe ) ) )", "obj1": 0.49796747967479676, "obj2": 0.42504837623392117}, {"determining": "Max( ( PN * MDR ),( Const - FirstVNF_Mem ) )", "choosing": "( Max( ( RMSe / DS ),Min( CS ,MUC ) ) + Max( ( RMSe - MUM ),( RMSe * MUM ) ) )", "obj1": 0.1565040650406504, "obj2": 0.7237725482439334}, {"determining": "Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ( DDR - FirstVNF_Mem_Server ) - ( MDR / MDR ) ) )", "choosing": "Max( ( ( DS / RMSe ) / Max( MLU,RMSe ) ),Max( ( MUM + RRSe ),( MUR - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( FirstVNF_Mem,BR ) * PN ) ,( MDR + FirstVNF_Mem ) ) - ( ( FirstVNF_CPU + ( Const * AMS ) ) * FirstVNF_Mem ) )", "choosing": "Max( Min( ( MUR + DS ) ,( Min( MLU ,MUM ) - Min( ( RCSe / Min( RRSe ,Min( ( DS + RCSe ) ,MLU ) ) ) ,DS ) ) ),( MLU + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( FirstVNF_CPU * ( PN * FirstVNF_CPU_Server ) ) ) * ( MDR - MRS ) )", "choosing": "Max( Max( ( RCSe + Max( Max( CS,RMSe ),DS ) ),MUM ),( ( RMSe * MUR ) / DS ) )", "obj1": 0.13617886178861788, "obj2": 0.7322415123465469}, {"determining": "( ( ( ( ARS / FirstVNF_CPU ) - AMS ) - DDR ) * ( ( MDR * MDR ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( Max( MLU,DS ) - Min( DS ,MLU ) ) - ( Min( MUC ,MUC ) - ( DS + MUC ) ) ),( ( ( MUM / RMSe ) - ( MUM + RMSe ) ) / ( ( MUC * MUR ) * Max( CS,RMSe ) ) ) )", "obj1": 0.7703252032520326, "obj2": 0.22446787928860717}, {"determining": "( ( ( ( FirstVNF_RAM * ARS ) + ( CRS - Const ) ) * Min( ( FirstVNF_Mem / ACS ) ,Min( Const ,PN ) ) ) * ( Max( ( MDR * RRS ),Max( ACS,AMS ) ) + ( ( DDR * FirstVNF_CPU ) + ( DDR + ACS ) ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,Min( CS ,CS ) ) * ( ( RMSe / CS ) + ( RRSe - MUC ) ) ) + Min( Min( Max( RCSe,MUM ) ,Min( MUR ,RRSe ) ) ,( Min( MUM ,MUR ) - ( CS - MUM ) ) ) )", "obj1": 0.5670731707317073, "obj2": 0.3303175249644268}, {"determining": "( ( Min( Min( FirstVNF_CPU ,PN ) ,( FirstVNF_RAM_Server - RRS ) ) - ( Min( PN ,ARS ) + ( ARS / RRS ) ) ) - Min( Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - RRS ) ) ,( ( DDR * BR ) - ( ARS / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( DS * MUM ) + Max( RMSe,CS ) ),( ( DS * RRSe ) - Max( DS,RMSe ) ) ) / ( ( ( RRSe * RRSe ) + ( MUR + MUM ) ) - Max( ( MUR - MUR ),( MUC * RMSe ) ) ) )", "obj1": 0.4166666666666667, "obj2": 0.47981514417173415}, {"determining": "( ( Max( ( RRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / AMS ) ) / Min( ( RRS / FirstVNF_RAM_Server ) ,( FirstVNF_RAM * MRS ) ) ) - ( Min( ( BR * FirstVNF_Mem_Server ) ,( Const + FirstVNF_RAM_Server ) ) + ( ( ACS * ARS ) * ( PN * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( MLU ,CS ) - ( MUM * RMSe ) ) - ( Max( MUM,MUR ) - Max( RMSe,RCSe ) ) ) / ( ( Max( RRSe,MUC ) + ( MLU + CS ) ) * Min( ( MUC - CS ) ,( MUC / RRSe ) ) ) )", "obj1": 0.27439024390243905, "obj2": 0.6049835262655616}, {"determining": "( ( Max( ( RRS + AMS ),Min( DDR ,MRS ) ) + ( ( FirstVNF_Mem_Server * ARS ) / ( ACS - FirstVNF_Mem_Server ) ) ) - Max( ( Min( MRS ,ARS ) * Max( CRS,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) )", "choosing": "( Max( ( ( MLU - RRSe ) + ( MUM * MLU ) ),( Max( MUR,MLU ) - Min( RRSe ,MUC ) ) ) - ( ( ( DS - MUR ) * ( CS + MUC ) ) * Max( ( DS - DS ),( MUC + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - ( RRS / ARS ) )", "choosing": "( ( RMSe / DS ) / Min( ( MUR - Max( MLU,RCSe ) ) ,MUC ) )", "obj1": 0.258130081300813, "obj2": 0.627733174901464}, {"determining": "( ( ( Const / MDR ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ACS ) ) - ( Max( MDR,DDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Min( RMSe ,RCSe ) ) + ( Min( DS ,CS ) * ( MUM - RCSe ) ) ) - ( ( Max( CS,RCSe ) / ( MUC * MUR ) ) + ( ( MUC * MUC ) - ( RRSe * DS ) ) ) )", "obj1": 0.38414634146341464, "obj2": 0.4901156133567484}, {"determining": "Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ( Max( AMS,BR ) * Max( ARS,DDR ) ) + BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + MUR ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( MUC / DS ) * ( ( RRSe / RRSe ) + Min( RRSe ,MUM ) ) ) )", "obj1": 0.16260162601626016, "obj2": 0.700588966085364}, {"determining": "Min( ( ( ( BR / ACS ) - ( CRS * BR ) ) - ( ( AMS * FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ,( ( ( Const + CRS ) + Max( FirstVNF_CPU_Server,ACS ) ) * ( Max( MDR,PN ) - ( PN * BR ) ) ) )", "choosing": "Max( ( ( MUM - MUM ) + MUC ),( DS - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.39441249161730896}, {"determining": "Min( Max( PN,DDR ) ,( CRS - ACS ) )", "choosing": "( ( ( ( DS * CS ) / ( MUC * MLU ) ) * ( ( MUR / RCSe ) * ( RMSe * RCSe ) ) ) - ( Max( ( MUR * MLU ),Max( CS,MUC ) ) + ( ( MUC - RRSe ) + ( MUM + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( ( ( ( Const - MRS ) + DDR ) / ( FirstVNF_RAM + Min( ( RRS + ARS ) ,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem_Server * ARS ) / ( ACS - FirstVNF_Mem_Server ) ) ) - Max( ( Min( MRS ,ARS ) * Max( CRS,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,Max( MUM,( MUR / ( Min( MLU ,( RMSe + CS ) ) + CS ) ) ) ) - ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,FirstVNF_RAM ) ,( RRS - FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUR + RMSe ) ,( MLU - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( MRS,( PN - FirstVNF_RAM_Server ) ),( ( ( FirstVNF_Mem - MDR ) + FirstVNF_Mem ) - ( RRS / ARS ) ) )", "choosing": "( Max( ( RMSe / DS ),( CS / MUR ) ) - ( ( MUM - MUC ) * ( DS / RCSe ) ) )", "obj1": 0.10569105691056911, "obj2": 0.7353197547728949}, {"determining": "( ( ( ( FirstVNF_RAM + CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) * ( ARS + ARS ) ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * RCSe ) ) * RRSe ) )", "obj1": 0.8394308943089431, "obj2": 0.13330332204784878}, {"determining": "( Min( ( MDR * ACS ) ,Max( MDR,MRS ) ) + ( Max( Const,ARS ) - ( FirstVNF_CPU + ( ( FirstVNF_CPU - ( ARS * FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,RRS ) - AMS ) ) ) ) )", "choosing": "Min( ( Min( ( CS - RRSe ) ,MUR ) - ( RCSe + MLU ) ) ,( RCSe * ( MLU - ( Max( RMSe,RCSe ) / MUM ) ) ) )", "obj1": 0.959349593495935, "obj2": 0.03705206790785452}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( Min( Min( MUR ,MLU ) ,RMSe ) * ( DS * RCSe ) )", "obj1": 0.7113821138211383, "obj2": 0.2056889713285845}, {"determining": "( ( FirstVNF_CPU - CRS ) / Max( ARS,ARS ) )", "choosing": "Max( Min( RRSe ,DS ),Min( ( Min( DS ,MUR ) - ( RCSe + MLU ) ) ,( Min( DS ,RRSe ) + Min( CS ,CS ) ) ) )", "obj1": 0.6158536585365854, "obj2": 0.28253625521860276}, {"determining": "( ( FirstVNF_RAM / ( ( CRS - FirstVNF_CPU ) * ( ARS + ARS ) ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( RRSe * RRSe ) )", "obj1": 0.6849593495934959, "obj2": 0.24639114003057908}, {"determining": "( Max( ( ( ACS + CRS ) / AMS ),CRS ) / ( PN + DDR ) )", "choosing": "( ( RMSe * Max( RRSe,RMSe ) ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.21951219512195122, "obj2": 0.6527355183157093}, {"determining": "Max( ( BR - FirstVNF_Mem_Server ),( Min( ( ARS - RRS ) ,ARS ) * AMS ) )", "choosing": "( ( CS + MLU ) / ( CS / RMSe ) )", "obj1": 0.44715447154471544, "obj2": 0.43307111761310657}, {"determining": "( Max( ( Const * FirstVNF_RAM ),AMS ) + Max( Const,MDR ) )", "choosing": "( ( ( MLU - RMSe ) * ( DS + RCSe ) ) - Min( ( DS + MUC ) ,Max( RCSe,RCSe ) ) )", "obj1": 0.2682926829268293, "obj2": 0.609871641437085}, {"determining": "( Min( PN ,FirstVNF_CPU ) + ( ( FirstVNF_CPU_Server - ACS ) / AMS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( CS / Max( MUR,RMSe ) ) ) ,MUC ) ) ,( ( MUM + MUC ) * ( MUM - CS ) ) )", "obj1": 0.39634146341463417, "obj2": 0.46314224531413845}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - ( RRS / ARS ) )", "choosing": "( ( RMSe / DS ) / Min( ( MUR - Max( MLU,RCSe ) ) ,MUC ) )", "obj1": 0.258130081300813, "obj2": 0.627733174901464}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( RCSe / MUC ) * ( DS * RCSe ) )", "obj1": 0.5670731707317073, "obj2": 0.3194723170913947}, {"determining": "( ( Max( ACS,MRS ) / Max( Const,MDR ) ) / Min( ( RRS * RRS ) ,Min( ACS ,ACS ) ) )", "choosing": "( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MLU - MUC ) ,( CS * MUR ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5505189893070355}, {"determining": "( ( FirstVNF_CPU + CRS ) + Min( ARS ,Const ) )", "choosing": "Min( ( Min( ( MUC / MLU ) ,MUM ) + Min( Min( RMSe ,RCSe ) ,Min( MUC ,RRSe ) ) ) ,( Min( CS ,( ( ( ( MLU / MUC ) * MUC ) - ( Max( Max( MUM,CS ),MUR ) / ( Max( MUC,RMSe ) + ( MUM / RCSe ) ) ) ) - MUM ) ) + Min( CS ,CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.009339589268900453}, {"determining": "( ( Min( Min( FirstVNF_CPU ,PN ) ,( FirstVNF_RAM_Server - ( MDR / MDR ) ) ) - ( Min( PN ,ARS ) + ( ARS / RRS ) ) ) - Min( Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - RRS ) ) ,( ( DDR * BR ) - ( ARS / FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( DS * MUM ) + Max( RMSe,CS ) ),( ( DS * RRSe ) - Max( DS,RMSe ) ) ) / ( ( ( RRSe * RRSe ) + ( MUR + MUM ) ) - Max( ( MUR - MUR ),( Min( MUM ,MLU ) - MLU ) ) ) )", "obj1": 0.5040650406504065, "obj2": 0.4186365641465615}, {"determining": "( ( ( Max( MDR,( ( CRS * ( ARS * DDR ) ) + FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) / ( MDR + FirstVNF_RAM_Server ) ) / Max( FirstVNF_Mem_Server,DDR ) )", "choosing": "Max( ( DS * ( RCSe + RCSe ) ),( MUC / ( DS - RRSe ) ) )", "obj1": 0.5426829268292683, "obj2": 0.36146889120739434}, {"determining": "( Min( CRS ,Min( ARS ,( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ACS ) - FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_RAM * PN ) * FirstVNF_RAM_Server ),Min( ARS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / RMSe ) * ( Min( MUM ,( CS * DS ) ) * ( RMSe * CS ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6872964725574955}, {"determining": "( ( MDR * ACS ) + ( FirstVNF_RAM / ACS ) )", "choosing": "Min( ( DS / RMSe ) ,( RRSe * MUC ) )", "obj1": 0.45528455284552843, "obj2": 0.41939847628514454}, {"determining": "Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ( Max( AMS,BR ) * Max( ARS,DDR ) ) + BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + MUR ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( MUC / DS ) * ( ( RRSe / RRSe ) + Min( RRSe ,MUM ) ) ) )", "obj1": 0.16260162601626016, "obj2": 0.700588966085364}, {"determining": "( Min( PN ,FirstVNF_CPU ) + ( ( FirstVNF_CPU_Server - ACS ) / AMS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( CS / Max( MUR,RMSe ) ) ) ,MUC ) ) ,( ( MUM + MUC ) * ( MUM - CS ) ) )", "obj1": 0.3353658536585366, "obj2": 0.5202846460209257}, {"determining": "( DDR * ( MDR - MRS ) )", "choosing": "Max( Max( ( RMSe * MUR ),MUM ),( ( RMSe * MUR ) / DS ) )", "obj1": 0.14634146341463414, "obj2": 0.719405933921368}, {"determining": "( ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) )", "choosing": "( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) )", "obj1": 0.2926829268292683, "obj2": 0.5288507587884705}, {"determining": "( Min( DDR ,( FirstVNF_CPU * ( PN * FirstVNF_CPU_Server ) ) ) * ( MDR - MRS ) )", "choosing": "Max( Max( ( RCSe + Max( Max( CS,RMSe ),DS ) ),MUM ),( ( RMSe * MUR ) / DS ) )", "obj1": 0.13617886178861788, "obj2": 0.7322415123465469}, {"determining": "( ( FirstVNF_RAM / ( ( CRS - FirstVNF_CPU ) * ( ARS + ACS ) ) ) + Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( MUR / MUR ) ,RCSe ) ,( RRSe * RRSe ) )", "obj1": 0.6971544715447154, "obj2": 0.24063189937456128}, {"determining": "( ( DDR - BR ) + ( FirstVNF_Mem / RRS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( RMSe ,MUC ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.34959349593495936, "obj2": 0.5169072893448514}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) + CRS ) / AMS ),CRS ) / ( PN + DDR ) )", "choosing": "( Min( ( MUR - DS ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.18495934959349594, "obj2": 0.6912673355861224}, {"determining": "Min( Max( CRS,MRS ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Min( RMSe ,RCSe ) ) + ( Min( DS ,CS ) * ( MUM - RCSe ) ) ) - ( ( Max( CS,RCSe ) / ( MUC * MUR ) ) + ( ( MUC * MUC ) - ( RRSe * DS ) ) ) )", "obj1": 0.37601626016260165, "obj2": 0.498202551215899}, {"determining": "Min( ( RRS + ( FirstVNF_RAM + ( Min( ( CRS * Max( FirstVNF_CPU_Server,PN ) ) ,ARS ) + FirstVNF_CPU_Server ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( MUC * DS ) / ( ( RCSe - RRSe ) - MLU ) )", "obj1": 0.5975609756097561, "obj2": 0.29420805384415166}, {"determining": "( ( FirstVNF_RAM + CRS ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "( ( RCSe / MUC ) * ( DS * Min( ( MUR - DS ) ,MUR ) ) )", "obj1": 0.5792682926829268, "obj2": 0.3158405464901776}, {"determining": "( Min( PN ,FirstVNF_CPU ) + ( ( FirstVNF_CPU_Server - ACS ) / AMS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( CS / Max( MUR,RMSe ) ) ) ,MUC ) ) ,( ( MUM + MUC ) * ( MUM - CS ) ) )", "obj1": 0.3861788617886179, "obj2": 0.47078797942513995}, {"determining": "Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( MUC * DS ) / Max( CS,RCSe ) )", "obj1": 0.5934959349593496, "obj2": 0.303401100233693}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) / Max( FirstVNF_Mem_Server,DDR ) )", "choosing": "Max( ( MUM * RCSe ),( MUR + DS ) )", "obj1": 0.5284552845528455, "obj2": 0.37431677250435474}, {"determining": "( ( ( Const / MDR ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ACS ) ) - ( Max( MDR,DDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Min( RMSe ,RCSe ) ) + ( Min( DS ,CS ) * ( MUM - RCSe ) ) ) - ( ( Max( CS,RCSe ) / ( MUC * MUR ) ) + ( ( MUC * MUC ) - ( RRSe * DS ) ) ) )", "obj1": 0.38414634146341464, "obj2": 0.4901156133567484}, {"determining": "Min( ( ( ( BR / ACS ) - ( CRS * BR ) ) - ( ( AMS * FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ,( ( ( Const + CRS ) + Max( FirstVNF_CPU_Server,ACS ) ) * ( Max( MDR,PN ) - ( PN * BR ) ) ) )", "choosing": "Max( ( ( MUM - MUM ) + MUC ),( DS - MUC ) )", "obj1": 0.5101626016260162, "obj2": 0.3947055487165062}, {"determining": "( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_CPU )", "choosing": "Max( ( MUR + DS ),Min( MUM ,MLU ) )", "obj1": 0.5182926829268293, "obj2": 0.3845317250207068}, {"determining": "( ( MRS * CRS ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( ( ( CS + MUR ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - RRSe ) ) ) + CS ) - Max( DS,RMSe ) )", "obj1": 0.2804878048780488, "obj2": 0.5474246822976632}, {"determining": "( ( Max( ACS,MRS ) / FirstVNF_CPU ) / Min( ( RRS * RRS ) ,Min( ACS ,ACS ) ) )", "choosing": "( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( ( MUR + RMSe ) ,( MLU - RMSe ) ) ,( CS * MUR ) ) )", "obj1": 0.2886178861788618, "obj2": 0.5339306300883936}, {"determining": "( Min( ( FirstVNF_CPU_Server / Min( ( MRS / ARS ) ,( ARS * BR ) ) ) ,BR ) + Min( FirstVNF_CPU_Server ,( ARS + ARS ) ) )", "choosing": "( ( RRSe * RRSe ) * Min( RRSe ,Min( ( ( RCSe + MUC ) / ( Max( MUM,( MUC / DS ) ) / MLU ) ) ,MUM ) ) )", "obj1": 0.5345528455284553, "obj2": 0.36240549972871083}, {"determining": "( ( FirstVNF_RAM / ( ( CRS - FirstVNF_CPU ) * ( ARS + ACS ) ) ) + Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( MUR / MUR ) ,RCSe ) ,( RRSe * RRSe ) )", "obj1": 0.6971544715447154, "obj2": 0.24063189937456128}, {"determining": "Min( ( ( ( BR / ACS ) - ( CRS * BR ) ) - ( ( AMS * FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ,( ( ( Const + CRS ) + Max( FirstVNF_CPU_Server,ACS ) ) * ( Max( MDR,PN ) - ( PN * BR ) ) ) )", "choosing": "Max( ( ( MUM - MUM ) + MUC ),( DS - MUC ) )", "obj1": 0.5142276422764228, "obj2": 0.39441249161730896}, {"determining": "( ( DDR - BR ) + ( ( RRS - CRS ) / Max( ARS,ARS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( RMSe ,MUC ) ) ,( RCSe * ( MUM - CS ) ) )", "obj1": 0.3475609756097561, "obj2": 0.5182252207882816}, {"determining": "Max( Min( CRS ,MRS ),Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MUR * MUC ) * Max( MUR,MUM ) )", "obj1": 0.3780487804878049, "obj2": 0.49765701519336325}, {"determining": "( ( RRS - CRS ) / Max( ARS,ARS ) )", "choosing": "Max( Min( RRSe ,DS ),( MUR / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU ) - ( MDR * FirstVNF_RAM ) )", "choosing": "Min( ( RMSe - MUR ) ,Max( MUM,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ( DDR - FirstVNF_Mem_Server ) - ( MDR / MDR ) ) )", "choosing": "Max( ( ( DS / RMSe ) / Max( MLU,RMSe ) ),Max( ( MUM + RRSe ),( MUR - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( FirstVNF_Mem,BR ) * PN ) ,( MDR + FirstVNF_Mem ) ) - ( ( FirstVNF_CPU + ( Const * AMS ) ) * FirstVNF_Mem ) )", "choosing": "Max( Min( ( MUR + DS ) ,( Min( MLU ,MUM ) - Min( ( RCSe / Min( RRSe ,Min( ( DS + RCSe ) ,MLU ) ) ) ,DS ) ) ),( MLU + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + AMS ),Min( DDR ,MRS ) ) + ( ( FirstVNF_Mem_Server * ARS ) / ( ACS - FirstVNF_Mem_Server ) ) ) - Max( ( Min( MRS ,ARS ) * Max( CRS,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) )", "choosing": "( Max( ( ( MLU - RRSe ) + ( MUM * MLU ) ),( Max( MUR,MLU ) - Min( RRSe ,MUC ) ) ) - ( ( ( DS - MUR ) * ( CS + MUC ) ) * Max( ( DS - DS ),( MUC + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( PN,DDR ) ,( CRS - ACS ) )", "choosing": "( ( ( ( DS * CS ) / ( MUC * MLU ) ) * ( ( MUR / RCSe ) * ( RMSe * RCSe ) ) ) - ( Max( ( MUR * MLU ),Max( CS,MUC ) ) + ( ( MUC - RRSe ) + ( MUM + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( ( Max( FirstVNF_Mem,BR ) * PN ) ,( MDR + FirstVNF_Mem ) ) - ( ( FirstVNF_CPU + ( Const * AMS ) ) * FirstVNF_Mem ) )", "choosing": "Max( Min( ( MUR + DS ) ,( Min( MLU ,MUM ) - Min( ( RCSe / Min( RRSe ,Min( ( DS + RCSe ) ,MLU ) ) ) ,DS ) ) ),( MLU + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Const - MRS ) + DDR ) / ( FirstVNF_RAM + Min( ( RRS + ARS ) ,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem_Server * ARS ) / ( ACS - FirstVNF_Mem_Server ) ) ) - Max( ( Min( MRS ,ARS ) * Max( CRS,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,FirstVNF_CPU ) ) ) )", "choosing": "( Max( DS,Max( MUM,( MUR / ( Min( MLU ,( RMSe + CS ) ) + CS ) ) ) ) - ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( MRS,( PN - FirstVNF_RAM_Server ) ),( ( ( FirstVNF_Mem - MDR ) + FirstVNF_Mem ) - ( RRS / ARS ) ) )", "choosing": "( Max( ( RMSe / DS ),( CS / MUR ) ) - ( ( MUM - MUC ) * ( DS / RCSe ) ) )", "obj1": 0.10569105691056911, "obj2": 0.7353197547728949}, {"determining": "( ( ( ( FirstVNF_RAM + ( MDR * BR ) ) + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) / ( ( CRS - FirstVNF_CPU ) - ( ARS - ARS ) ) ) + Max( ( Max( AMS,BR ) * Max( ARS,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ),CRS ) )", "choosing": "Min( Min( MUM ,( ( ( ( ( DS + MLU ) - RMSe ) / ( MUM - CS ) ) / DS ) * RCSe ) ) ,RCSe )", "obj1": 0.8739837398373984, "obj2": 0.09918150081270245}, {"determining": "( ( ( ( FirstVNF_RAM + CRS ) + ( RRS / ( FirstVNF_CPU_Server - ACS ) ) ) / ( ( CRS - FirstVNF_CPU ) * ( ARS + ARS ) ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),CS ) ) ,MUC ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) ) ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * RCSe ) ) * RRSe ) )", "obj1": 0.943089430894309, "obj2": 0.050737085754990564}, {"determining": "Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Max( ( ( DS / RMSe ) / Max( MLU,RMSe ) ),CS )", "obj1": 0.7764227642276422, "obj2": 0.1694185146393744}, {"determining": "( ( DDR - FirstVNF_Mem ) + Min( ( FirstVNF_RAM + ( CRS - ( FirstVNF_CPU / ( BR / RRS ) ) ) ) ,( ACS + ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( Max( ( MUM * RRSe ),( RRSe / RMSe ) ) - MLU ) ,MUC ) ) ,( ( ( MUR / RRSe ) + MUC ) * ( MUM - CS ) ) )", "obj1": 0.524390243902439, "obj2": 0.30560144636705155}, {"determining": "( ( ( ( FirstVNF_RAM + CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) * ( ARS + ARS ) ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * RCSe ) ) * RRSe ) )", "obj1": 0.8394308943089431, "obj2": 0.13330332204784878}, {"determining": "( ( ( ( BR / FirstVNF_CPU_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,Const ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - ( MUM / MUC ) ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - MLU ) ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - ( MUM + MLU ) )", "obj1": 0.22764227642276422, "obj2": 0.5830403492819383}, {"determining": "( ( Max( ACS,MRS ) / Max( Const,MDR ) ) / Min( ( RRS * RRS ) ,Min( ACS ,ACS ) ) )", "choosing": "( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MLU - MUC ) ,( CS * MUR ) ) )", "obj1": 0.27235772357723576, "obj2": 0.5505189893070355}, {"determining": "( ( DDR - BR ) + ( ( ( Min( FirstVNF_Mem_Server ,Min( Max( FirstVNF_Mem,AMS ) ,MRS ) ) + PN ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 0.4105691056910569, "obj2": 0.42365033253810047}, {"determining": "( Max( ( ( ACS + CRS ) / AMS ),CRS ) / ( PN + DDR ) )", "choosing": "( ( RMSe * Max( RRSe,RMSe ) ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.21951219512195122, "obj2": 0.6527355183157093}, {"determining": "Min( Min( FirstVNF_RAM_Server ,AMS ) ,( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) )", "choosing": "( ( DS * DS ) / Max( CS,RCSe ) )", "obj1": 0.6280487804878049, "obj2": 0.2767185506461246}, {"determining": "( ( FirstVNF_RAM / ( ( CRS - FirstVNF_CPU ) * ( ARS + ARS ) ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( RRSe * RRSe ) )", "obj1": 0.6849593495934959, "obj2": 0.24639114003057908}, {"determining": "( ( ( ( FirstVNF_RAM + CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) * ( ARS + ARS ) ) ) + Max( ARS,CRS ) )", "choosing": "Min( ( Min( DS ,MUR ) - ( RCSe + MLU ) ) ,( RCSe * ( MLU - ( MUM / Max( RMSe,RCSe ) ) ) ) )", "obj1": 0.766260162601626, "obj2": 0.19238308066017826}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) )", "choosing": "( ( ( ( DS - CS ) - RMSe ) * ( MUC * DS ) ) - Min( ( DS + MUC ) ,Max( RCSe,MLU ) ) )", "obj1": 0.22154471544715448, "obj2": 0.6099770395610984}, {"determining": "Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( MUC * DS ) / Max( CS,RCSe ) )", "obj1": 0.5934959349593496, "obj2": 0.303401100233693}, {"determining": "( Min( ( MDR * ACS ) ,Max( MDR,MRS ) ) + ( Max( Const,ARS ) - ( FirstVNF_CPU + ( ( FirstVNF_CPU - ( ARS * FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,RRS ) - AMS ) ) ) ) )", "choosing": "Min( ( Min( ( CS - RRSe ) ,MUR ) - ( RCSe + MLU ) ) ,( RCSe * ( MLU - ( Max( RMSe,RCSe ) / MUM ) ) ) )", "obj1": 0.959349593495935, "obj2": 0.03705206790785452}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_RAM_Server - ARS ) ) + ( Max( Const,ARS ) - ( FirstVNF_CPU + ( ( FirstVNF_CPU - ( ARS * FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * RCSe ) ) * RRSe ) )", "obj1": 0.5223577235772358, "obj2": 0.3627277849954074}, {"determining": "( Min( CRS ,Min( ARS ,( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ACS ) - FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_RAM * PN ) * FirstVNF_RAM_Server ),Min( ARS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / RMSe ) * ( Min( MUM ,( CS * DS ) ) * ( RMSe * CS ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6872964725574955}, {"determining": "( Min( ( MDR * ACS ) ,( FirstVNF_RAM_Server - ARS ) ) + ( Max( Const,ARS ) - ( FirstVNF_CPU + ( ( FirstVNF_CPU - ( ( DDR - BR ) + ( FirstVNF_Mem / RRS ) ) ) * ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - AMS ) ) ) ) )", "choosing": "Min( ( Min( DS ,MUR ) - ( Min( RMSe ,MUC ) + MLU ) ) ,( RCSe * ( MLU - ( MUM / Max( RMSe,RCSe ) ) ) ) )", "obj1": 0.483739837398374, "obj2": 0.3969890547642664}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * ACS ) ,( FirstVNF_RAM_Server - ( MDR / MDR ) ) ) * FirstVNF_CPU ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( DS * ( MLU - CS ) ) * RCSe ),( MUC + DS ) )", "obj1": 0.8434959349593496, "obj2": 0.11475206137615003}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,( ( ACS / MRS ) * DDR ) ) )", "choosing": "( Max( DS,( Min( DS ,( ( DS - ( ( MLU - MLU ) / Max( DS,CS ) ) ) - CS ) ) + MLU ) ) - ( ( ( MUM - ( MUC / Max( Min( Min( DS ,MLU ) ,MUM ),( RMSe + MUM ) ) ) ) - ( ( CS * CS ) * ( Min( RMSe ,MUR ) - MLU ) ) ) + MUC ) )", "obj1": 0.2804878048780488, "obj2": 0.5271008671684146}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( Min( MUR ,Max( ( MUR + DS ),Min( MUM ,MLU ) ) ) ,RMSe ) * ( DS * RCSe ) )", "obj1": 0.7215447154471545, "obj2": 0.20538505254706577}, {"determining": "( ( MDR + FirstVNF_Mem_Server ) / ( ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) ) )", "choosing": "Max( ( MUR + DS ),Min( ( MUM - MUM ) ,MLU ) )", "obj1": 0.5101626016260162, "obj2": 0.38281679367027455}, {"determining": "( ( ( Const / MDR ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ACS ) ) - ( Max( MDR,DDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Min( RMSe ,RCSe ) ) + ( Min( DS ,CS ) * ( MUM - RCSe ) ) ) - ( ( Max( CS,RCSe ) / ( MUC * MUR ) ) + ( ( MUC * MUC ) - ( RRSe * DS ) ) ) )", "obj1": 0.38414634146341464, "obj2": 0.4901156133567484}, {"determining": "( ( DDR - ( Min( Min( FirstVNF_CPU ,PN ) ,( FirstVNF_RAM_Server - ( MDR / MDR ) ) ) - ( Min( PN ,ARS ) + ( ARS / RRS ) ) ) ) + ( RRS / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - MUM ) ,MUC ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.3983739837398374, "obj2": 0.4544905936262037}, {"determining": "Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ( Max( AMS,BR ) * Max( ARS,DDR ) ) + BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + MUR ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( MUC / DS ) * ( ( RRSe / RRSe ) + Min( RRSe ,MUM ) ) ) )", "obj1": 0.16260162601626016, "obj2": 0.700588966085364}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "Max( ( MUR + DS ),Min( MUM ,MLU ) )", "obj1": 0.7032520325203252, "obj2": 0.21589566035272234}, {"determining": "( Min( CRS ,Min( ARS ,( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ACS ) - FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_RAM * PN ) * FirstVNF_RAM_Server ),Min( ARS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / RMSe ) * ( Min( MUM ,( CS * DS ) ) * ( RMSe * CS ) ) )", "obj1": 0.45528455284552843, "obj2": 0.40288369035079474}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) + CRS ) / AMS ),CRS ) / ( PN + DDR ) )", "choosing": "( Min( ( MUR - DS ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.18495934959349594, "obj2": 0.6912673355861224}, {"determining": "( Min( CRS ,Min( ARS ,( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ACS ) - FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_RAM * PN ) * FirstVNF_RAM_Server ),Min( ARS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / RMSe ) * ( Min( MUM ,( CS * DS ) ) * ( RMSe * CS ) ) )", "obj1": 0.45528455284552843, "obj2": 0.40288369035079474}, {"determining": "( ( FirstVNF_CPU - CRS ) / Max( ARS,ARS ) )", "choosing": "Max( Min( RRSe ,DS ),Min( ( Min( DS ,MUR ) - ( RCSe + MLU ) ) ,( Min( DS ,RRSe ) + Min( CS ,CS ) ) ) )", "obj1": 0.6158536585365854, "obj2": 0.28253625521860276}, {"determining": "( Min( ( FirstVNF_RAM + CRS ) ,FirstVNF_RAM ) - Min( ( ACS - BR ) ,( ( ( ARS * FirstVNF_RAM ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM + ( ( ( RRSe * Max( RMSe,MLU ) ) - ( RMSe - Max( RMSe,MUC ) ) ) / MUC ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.30284552845528456, "obj2": 0.513140785866852}, {"determining": "Max( Min( FirstVNF_Mem ,( ARS * MDR ) ),( MRS * CRS ) )", "choosing": "( ( ( ( CS + MUR ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - RRSe ) ) ) + CS ) - Max( DS,RMSe ) )", "obj1": 0.34959349593495936, "obj2": 0.49537395277969487}, {"determining": "Min( ( RRS + ( FirstVNF_RAM + ( Min( ( CRS * Max( FirstVNF_CPU_Server,PN ) ) ,ARS ) + FirstVNF_CPU_Server ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( MUC * DS ) / ( ( RCSe - RRSe ) - MLU ) )", "obj1": 0.5975609756097561, "obj2": 0.29420805384415166}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - Max( Const,( Min( FirstVNF_Mem_Server ,ACS ) / MDR ) ) ) )", "choosing": "Min( ( Min( Min( RMSe ,( RRSe / RMSe ) ) ,( Min( CS ,CS ) / RRSe ) ) - Min( DS ,MUR ) ) ,( ( DS * RRSe ) + Min( CS ,CS ) ) )", "obj1": 0.3394308943089431, "obj2": 0.502981608791704}, {"determining": "( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( ( BR + PN ) ,( CRS / RRS ) ) ) + ( Max( Const,ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( DS ,MUR ) - ( RCSe + MLU ) ) ,( RMSe + Min( ( Min( DS ,MUR ) - Min( Min( RMSe ,RCSe ) ,( MUC / RRSe ) ) ) ,( Min( DS ,RRSe ) + Min( CS ,CS ) ) ) ) )", "obj1": 0.9796747967479674, "obj2": 0.009339589268900453}, {"determining": "( Min( PN ,FirstVNF_CPU ) + ( ( FirstVNF_CPU_Server - ACS ) / AMS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( CS / Max( MUR,RMSe ) ) ) ,MUC ) ) ,( ( MUM + MUC ) * ( MUM - CS ) ) )", "obj1": 0.3861788617886179, "obj2": 0.47078797942513995}, {"determining": "( ( FirstVNF_RAM / ( ( CRS - FirstVNF_CPU ) * ( ARS + ACS ) ) ) + Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( MUR / MUR ) ,RCSe ) ,( RRSe * RRSe ) )", "obj1": 0.6971544715447154, "obj2": 0.24063189937456128}, {"determining": "Min( Min( FirstVNF_RAM_Server ,MRS ) ,( ( Max( AMS,BR ) * Max( ( FirstVNF_RAM + CRS ),DDR ) ) + BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + MUR ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( MUC / DS ) * ( ( RRSe / RRSe ) + ( ( RCSe / MUC ) * ( DS * RCSe ) ) ) ) )", "obj1": 0.1524390243902439, "obj2": 0.7123997036527644}, {"determining": "Max( ( BR - FirstVNF_Mem_Server ),( Min( Min( ( ( ( BR / ACS ) - ( CRS * BR ) ) - ( ( AMS * FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) ,( ( ( Const + CRS ) + Max( FirstVNF_CPU_Server,ACS ) ) * ( Max( MDR,PN ) - ( PN * BR ) ) ) ) ,ARS ) * AMS ) )", "choosing": "( Max( ( ( MUM - MUM ) + MUC ),( DS - MUC ) ) / ( CS / RMSe ) )", "obj1": 0.5182926829268293, "obj2": 0.3683881704108656}, {"determining": "( ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) )", "choosing": "( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) )", "obj1": 0.31097560975609756, "obj2": 0.5098621653130351}, {"determining": "( Min( PN ,FirstVNF_CPU ) + ( ( FirstVNF_CPU_Server - ACS ) / AMS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( CS / Max( MUR,RMSe ) ) ) ,MUC ) ) ,( ( MUM + MUC ) * ( MUM - CS ) ) )", "obj1": 0.39634146341463417, "obj2": 0.46314224531413845}, {"determining": "( ( PN - FirstVNF_CPU ) - BR )", "choosing": "Min( ( RMSe - MUR ) ,( DS - MUC ) )", "obj1": 0.991869918699187, "obj2": 0.002327646688087436}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( Min( Min( MUR ,MLU ) ,RMSe ) * ( DS * RCSe ) )", "obj1": 0.7113821138211383, "obj2": 0.2056889713285845}, {"determining": "( ( FirstVNF_CPU + CRS ) + Min( ARS ,Const ) )", "choosing": "Min( ( Min( ( MUC / MLU ) ,MUM ) + Min( Min( RMSe ,RCSe ) ,Min( MUC ,RRSe ) ) ) ,( Min( CS ,( ( ( ( MLU / MUC ) * MUC ) - ( Max( Max( MUM,CS ),MUR ) / ( Max( MUC,RMSe ) + ( MUM / RCSe ) ) ) ) - MUM ) ) + Min( CS ,CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.009339589268900453}, {"determining": "( ( ( Max( MDR,( ( CRS * ( ARS * DDR ) ) + FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) / ( MDR + FirstVNF_RAM_Server ) ) / Max( FirstVNF_Mem_Server,DDR ) )", "choosing": "Max( ( DS * ( RCSe + RCSe ) ),( MUC / ( DS - RRSe ) ) )", "obj1": 0.13008130081300814, "obj2": 0.7326157641345217}, {"determining": "( Min( DDR ,( FirstVNF_CPU * Const ) ) * ( MDR - MRS ) )", "choosing": "Max( Max( ( RMSe * MUR ),MUM ),( ( RMSe * MUR ) / DS ) )", "obj1": 0.14634146341463414, "obj2": 0.719405933921368}, {"determining": "( Min( DDR ,( FirstVNF_CPU * ( PN * FirstVNF_CPU_Server ) ) ) * ( MDR - MRS ) )", "choosing": "Max( Max( ( RCSe + Max( Max( CS,RMSe ),DS ) ),MUM ),( ( RMSe * MUR ) / DS ) )", "obj1": 0.13617886178861788, "obj2": 0.7322415123465469}], "4": [{"determining": "( ( PN - FirstVNF_CPU ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( ( RMSe - MUR ) * ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( FirstVNF_Mem,BR ) * PN ) ,( MDR + FirstVNF_Mem ) ) - ( ( FirstVNF_CPU + ( Const * AMS ) ) * FirstVNF_Mem ) )", "choosing": "Max( Min( ( MUR + DS ) ,( Min( MLU ,MUM ) - Min( ( RCSe / Min( RRSe ,Min( ( DS + RCSe ) ,MLU ) ) ) ,DS ) ) ),( MLU + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_CPU_Server ) + ( RRS * ( DDR + DDR ) ) ) ,DDR ) * ( MDR - ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS * ( RRSe + RCSe ) ),( Max( Max( Min( MUR ,MUM ),( RMSe * MUC ) ),MLU ) / RMSe ) )", "obj1": 0.09959349593495935, "obj2": 0.7519199298313098}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM + CRS ) + Min( FirstVNF_CPU_Server ,( ( Const / MDR ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ACS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MUC ) ) ,( ( ( Max( CS,RCSe ) / ( MUC * MUR ) ) + ( ( MUC * MUC ) - ( RRSe * DS ) ) ) * ( MUM - CS ) ) )", "obj1": 0.4695121951219512, "obj2": 0.35714949432482834}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM + CRS ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),DS ) ) ,MUC ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.524390243902439, "obj2": 0.30560144636705155}, {"determining": "( ( Min( Min( FirstVNF_CPU ,PN ) ,( FirstVNF_RAM_Server - ( MDR / MDR ) ) ) * FirstVNF_CPU ) / Max( FirstVNF_Mem_Server,DDR ) )", "choosing": "Max( ( ( DS * RRSe ) * RCSe ),( MUR + DS ) )", "obj1": 0.7987804878048781, "obj2": 0.16045344247320062}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - FirstVNF_CPU_Server ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MLU,MUR ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * RMSe ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( CS,Min( MUR ,DS ) ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.25609756097560976, "obj2": 0.5416903646742103}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Max( Const,ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( MLU - CS ) ) )", "obj1": 0.4349593495934959, "obj2": 0.4004868202864366}, {"determining": "( ( ( ( BR / FirstVNF_CPU_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,Const ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - ( MUM / MUC ) ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - MLU ) ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - ( MUM + MLU ) )", "obj1": 0.22764227642276422, "obj2": 0.5830403492819383}, {"determining": "Min( Max( ( ( ARS * RRS ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) + CRS ) - ( MDR / MDR ) ) )", "choosing": "Max( Max( ( MUC + MUC ),Max( RMSe,MUR ) ),CS )", "obj1": 0.9207317073170732, "obj2": 0.09191925910877546}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( FirstVNF_RAM + ( CRS - ( FirstVNF_CPU / ( BR / RRS ) ) ) ) ) ) )", "choosing": "( Min( ( Min( RCSe ,MLU ) - Min( ( Max( ( MUM * RRSe ),( RRSe / RMSe ) ) - MLU ) ,MUC ) ) ,( ( ( MUR / RRSe ) + MUC ) * ( MUM - CS ) ) ) * ( DS * RCSe ) )", "obj1": 0.6646341463414634, "obj2": 0.23234128825240297}, {"determining": "( ( ( ( FirstVNF_RAM + CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) * ( ARS + ARS ) ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * RCSe ) ) * RRSe ) )", "obj1": 0.8353658536585366, "obj2": 0.1325321061037111}, {"determining": "Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( MUC * DS ) / Max( CS,RCSe ) )", "obj1": 0.5934959349593496, "obj2": 0.303401100233693}, {"determining": "Min( Min( FirstVNF_RAM_Server ,AMS ) ,( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) )", "choosing": "Max( Min( RRSe ,DS ),Min( ( Min( DS ,MUR ) - ( RCSe + MLU ) ) ,( Min( DS ,RRSe ) + Min( CS ,CS ) ) ) )", "obj1": 0.6422764227642277, "obj2": 0.2717043603102882}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) )", "choosing": "( ( ( ( DS - CS ) - RMSe ) * ( MUC * DS ) ) - Min( ( DS + MUC ) ,Max( RCSe,MLU ) ) )", "obj1": 0.22154471544715448, "obj2": 0.6099770395610984}, {"determining": "( Max( ( ( ACS + CRS ) / AMS ),CRS ) / ( PN + DDR ) )", "choosing": "( ( RMSe * Max( RRSe,RMSe ) ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.21951219512195122, "obj2": 0.6527355183157093}, {"determining": "( Min( ( MDR * ACS ) ,Max( MDR,MRS ) ) + ( Max( Const,ARS ) - ( FirstVNF_CPU + ( ( FirstVNF_CPU - ( ARS * FirstVNF_Mem_Server ) ) * ( Min( FirstVNF_Mem ,RRS ) - AMS ) ) ) ) )", "choosing": "Min( ( Min( ( CS - RRSe ) ,MUR ) - ( RCSe + MLU ) ) ,( RCSe * ( MLU - ( Max( RMSe,RCSe ) / MUM ) ) ) )", "obj1": 0.959349593495935, "obj2": 0.03705206790785452}, {"determining": "( ( CRS + FirstVNF_RAM ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( Const + FirstVNF_RAM_Server ) - Max( Const,( Max( RRS,ACS ) / MDR ) ) ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( Min( Min( RMSe ,( RRSe / RMSe ) ) ,( Min( CS ,CS ) / RRSe ) ) - Min( DS ,MUR ) ),Min( MUM ,MLU ) ) ) ,RMSe ) * ( Max( MLU,MLU ) - RCSe ) )", "obj1": 0.7398373983739838, "obj2": 0.17600456436483575}, {"determining": "Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( MUR - DS ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.7479674796747967, "obj2": 0.16224063132597735}, {"determining": "( ( ( ( FirstVNF_RAM + ( MDR * BR ) ) + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) / ( ( CRS - FirstVNF_CPU ) - ( ARS - ARS ) ) ) + Max( ( Max( AMS,BR ) * Max( ARS,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ),CRS ) )", "choosing": "Min( Min( MUM ,( ( ( ( ( DS + MLU ) - RMSe ) / ( MUM - CS ) ) / DS ) * RCSe ) ) ,RCSe )", "obj1": 0.8739837398373984, "obj2": 0.09918150081270245}, {"determining": "( ( DDR - BR ) + ( FirstVNF_RAM / Min( CRS ,Min( ARS ,( ( ( ( FirstVNF_RAM - MDR ) - FirstVNF_Mem_Server ) * ACS ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,Min( MUM ,( CS * DS ) ) ) ) ,( ( ( MLU + ( MUM + MUC ) ) + MUC ) + ( MUM - CS ) ) )", "obj1": 0.9288617886178862, "obj2": 0.05652050163462755}, {"determining": "( ( ( Const / MDR ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ACS ) ) - ( Max( MDR,DDR ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( RCSe ,RRSe ) / Min( RMSe ,RCSe ) ) + ( Min( DS ,CS ) * ( MUM - RCSe ) ) ) - ( ( Max( CS,RCSe ) / ( MUC * MUR ) ) + ( ( MUC * MUC ) - ( RRSe * DS ) ) ) )", "obj1": 0.38414634146341464, "obj2": 0.4901156133567484}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( Min( Min( MUR ,Max( ( MUR + DS ),Min( MUM ,MLU ) ) ) ,RMSe ) * ( DS * RCSe ) )", "obj1": 0.7215447154471545, "obj2": 0.20538505254706577}, {"determining": "Max( Min( FirstVNF_Mem ,( ARS * MDR ) ),( MRS * CRS ) )", "choosing": "( ( ( ( CS + MUR ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - RRSe ) ) ) + CS ) - Max( DS,RMSe ) )", "obj1": 0.34959349593495936, "obj2": 0.49537395277969487}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * ACS ) ,( FirstVNF_RAM_Server - ( MDR / MDR ) ) ) * FirstVNF_CPU ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( DS * ( MLU - CS ) ) * RCSe ),( MUC + DS ) )", "obj1": 0.8434959349593496, "obj2": 0.11475206137615003}, {"determining": "( ( DDR - FirstVNF_Mem ) + Min( ( FirstVNF_RAM + ( CRS - ( FirstVNF_CPU / ( BR / RRS ) ) ) ) ,( ACS + ( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( Max( ( MUM * RRSe ),( MUR + DS ) ) - MLU ) ,MUC ) ) ,( ( ( MUR / RRSe ) + MUC ) * ( MUM - CS ) ) )", "obj1": 0.6910569105691057, "obj2": 0.22793144917736313}, {"determining": "( ( DDR - FirstVNF_Mem ) + Min( ( FirstVNF_RAM + ( CRS - ( FirstVNF_CPU / ( BR / RRS ) ) ) ) ,( ACS + ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( Max( ( MUM * RRSe ),( RRSe / RMSe ) ) - MLU ) ,MUC ) ) ,( ( ( MUR / RRSe ) + MUC ) * ( MUM - CS ) ) )", "obj1": 0.524390243902439, "obj2": 0.30560144636705155}, {"determining": "( ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) )", "choosing": "( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) )", "obj1": 0.3313008130081301, "obj2": 0.4986497829525393}, {"determining": "( Min( PN ,FirstVNF_CPU ) + ( ( FirstVNF_CPU_Server - ACS ) / AMS ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( CS / Max( MUR,RMSe ) ) ) ,MUC ) ) ,( ( MUM + MUC ) * ( MUM - CS ) ) )", "obj1": 0.3861788617886179, "obj2": 0.47078797942513995}, {"determining": "( ( DDR - BR ) + ( ( ( Min( FirstVNF_Mem_Server ,Min( Max( FirstVNF_Mem,AMS ) ,MRS ) ) + PN ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 0.4105691056910569, "obj2": 0.42365033253810047}, {"determining": "( ( ( ( FirstVNF_RAM + CRS ) + ( RRS / ( FirstVNF_CPU_Server - ACS ) ) ) / ( ( CRS - FirstVNF_CPU ) * ( ARS + ARS ) ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),CS ) ) ,MUC ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) ) ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * RCSe ) ) * RRSe ) )", "obj1": 0.943089430894309, "obj2": 0.050737085754990564}, {"determining": "Max( Max( MRS,( PN - FirstVNF_RAM_Server ) ),( ( ( FirstVNF_Mem - MDR ) + FirstVNF_Mem ) - ( RRS / ARS ) ) )", "choosing": "( Max( ( RMSe / DS ),( CS / MUR ) ) - ( ( MUM - MUC ) * ( DS / RCSe ) ) )", "obj1": 0.10569105691056911, "obj2": 0.7353197547728949}, {"determining": "Min( ( RRS + ( FirstVNF_RAM + ( Min( ( CRS * Max( FirstVNF_CPU_Server,PN ) ) ,ARS ) + FirstVNF_CPU_Server ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( ( MUC * DS ) / ( ( RCSe - RRSe ) - MLU ) )", "obj1": 0.21747967479674796, "obj2": 0.6809562886394732}, {"determining": "( Min( ( FirstVNF_RAM + CRS ) ,FirstVNF_RAM ) - Min( ( ACS - BR ) ,( ( ( ARS * FirstVNF_RAM ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM + ( ( ( RRSe * Max( RMSe,MLU ) ) - ( RMSe - Max( RMSe,MUC ) ) ) / MUC ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.30284552845528456, "obj2": 0.513140785866852}, {"determining": "( ( ( MDR * MRS ) / ( ( CRS - FirstVNF_CPU ) * ( ARS + ARS ) ) ) + ( ( Max( AMS,BR ) * Max( ARS,DDR ) ) + CRS ) )", "choosing": "Min( ( ( MUC * DS ) / Max( ( ( ( DS + MLU ) * MLU ) * Min( ( ( ( MLU * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU * RRSe ) - RRSe ) ) ,MUR ) ),RCSe ) ) ,RCSe )", "obj1": 0.5975609756097561, "obj2": 0.28673517112297664}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM + CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / DDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MUM - Max( ( MUM * RRSe ),MUC ) ) ,MUC ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.3983739837398374, "obj2": 0.447261334933339}, {"determining": "( Min( ( FirstVNF_RAM + CRS ) ,FirstVNF_RAM ) - ( ( ACS - BR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) / ( ( RCSe - RRSe ) - MLU ) )", "obj1": 0.16260162601626016, "obj2": 0.6970972981605487}, {"determining": "( ( ( ( FirstVNF_RAM + CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( ( CRS - FirstVNF_CPU ) * ( ARS + ARS ) ) ) + Max( ( Max( AMS,BR ) * Max( ARS,DDR ) ),CRS ) )", "choosing": "Min( Min( DS ,RCSe ) ,RCSe )", "obj1": 0.8678861788617886, "obj2": 0.10769778022673128}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) + CRS ) / AMS ),CRS ) / ( PN + DDR ) )", "choosing": "( Min( ( MUR - DS ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.18495934959349594, "obj2": 0.6912673355861224}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "Max( ( MUR + DS ),Min( MUM ,MLU ) )", "obj1": 0.7032520325203252, "obj2": 0.21589566035272234}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - CS ) - RMSe ) * ( MUC * DS ) ) ) ) * RRSe ) )", "obj1": 0.1483739837398374, "obj2": 0.7023854634547686}, {"determining": "( ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) )", "choosing": "( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) )", "obj1": 0.31097560975609756, "obj2": 0.5098621653130351}, {"determining": "( Min( CRS ,Min( ARS ,( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ACS ) - FirstVNF_CPU_Server ) ) ) * Max( ( ( FirstVNF_RAM * PN ) * FirstVNF_RAM_Server ),Min( ARS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / RMSe ) * ( Min( MUM ,( CS * DS ) ) * ( RMSe * CS ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6872964725574955}, {"determining": "( ( FirstVNF_CPU + CRS ) + Min( ARS ,Const ) )", "choosing": "Min( ( Min( ( MUC / MLU ) ,MUM ) + Min( Min( RMSe ,RCSe ) ,Min( MUC ,RRSe ) ) ) ,( Min( CS ,( ( ( ( MLU / MUC ) * MUC ) - ( Max( Max( MUM,CS ),MUR ) / ( Max( MUC,RMSe ) + ( MUM / RCSe ) ) ) ) - MUM ) ) + Min( CS ,CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.009339589268900453}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,( ( ACS / MRS ) * DDR ) ) )", "choosing": "( Max( DS,( Min( DS ,( ( DS - ( ( MLU - MLU ) / Max( DS,CS ) ) ) - CS ) ) + MLU ) ) - ( ( ( MUM - ( MUC / Max( Min( Min( DS ,MLU ) ,MUM ),( RMSe + MUM ) ) ) ) - ( ( CS * CS ) * ( Min( RMSe ,MUR ) - MLU ) ) ) + MUC ) )", "obj1": 0.2804878048780488, "obj2": 0.5271008671684146}, {"determining": "( ( FirstVNF_CPU_Server - PN ) + ( DDR - FirstVNF_RAM ) )", "choosing": "Min( ( Min( MLU ,MUM ) - Min( ( MLU - ( CS + ( Min( MUC ,RMSe ) / MUR ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.3943089430894309, "obj2": 0.45194398752604115}, {"determining": "( RRS + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.2804878048780488, "obj2": 0.5271008671684146}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( Max( ( MUM * RRSe ),( RRSe / RMSe ) ) - MLU ) ,MUC ) ) ,( ( ( MUR / RRSe ) + MUC ) * ( MUM - CS ) ) )", "obj1": 0.6077235772357723, "obj2": 0.2729924003270663}, {"determining": "( Max( ( Min( MRS ,ARS ) * Max( CRS,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) + ( ( ( FirstVNF_RAM + CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( MUM,MUC ) ) ,MUC ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.4186991869918699, "obj2": 0.4139282042101176}, {"determining": "Min( ( ( MDR + FirstVNF_RAM_Server ) / ( Max( MDR,Max( MDR,FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) ) ,( ( Max( ARS,DDR ) * Max( AMS,Max( FirstVNF_CPU,ACS ) ) ) * BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + MUR ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( MUC / DS ) * Max( ( DS * ( RCSe + RCSe ) ),Max( DS,( MUR * ( ( RMSe + RCSe ) + MLU ) ) ) ) ) )", "obj1": 0.14227642276422764, "obj2": 0.7193240382810188}], "5": [{"determining": "( ( DDR - BR ) + ( ( RRS / ( FirstVNF_CPU_Server - ACS ) ) / Min( CRS ,Min( Max( ( Max( ( MDR * FirstVNF_RAM ),ARS ) * ACS ),FirstVNF_CPU_Server ) ,ARS ) ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,Min( MUM ,( CS - DS ) ) ) ) ,( ( ( ( ( MUC * RRSe ) / RMSe ) * RCSe ) - MUR ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( ( RMSe - MUR ) * ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_CPU_Server ) + ( RRS * ( DDR + DDR ) ) ) ,DDR ) * ( MDR - ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS * ( RRSe + RCSe ) ),( Max( Max( Min( MUR ,MUM ),( RMSe * MUC ) ),MLU ) / RMSe ) )", "obj1": 0.09959349593495935, "obj2": 0.7519199298313098}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM + CRS ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.46747967479674796, "obj2": 0.29468066607485244}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - ARS ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.20528455284552846, "obj2": 0.6160544493775286}, {"determining": "Min( Max( FirstVNF_CPU_Server,PN ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( MUC / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.6402439024390244, "obj2": 0.2283921529816844}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Max( Const,( FirstVNF_RAM + FirstVNF_Mem ) ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( DS,( Min( ( ( DS - ( Min( MLU ,MLU ) / Max( DS,CS ) ) ) - CS ) ,DS ) + MLU ) ) * ( Min( MUM ,( CS * DS ) ) * ( MLU - CS ) ) )", "obj1": 0.5589430894308943, "obj2": 0.29232530289584785}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - FirstVNF_CPU_Server ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MLU,MUR ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * RMSe ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( CS,Min( MUR ,DS ) ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.25609756097560976, "obj2": 0.5416903646742103}, {"determining": "Min( Max( FirstVNF_CPU_Server,MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( Max( Min( RMSe ,DS ),Max( RMSe,( MUR * RMSe ) ) ) / MLU )", "obj1": 0.774390243902439, "obj2": 0.12895520131042623}, {"determining": "( ( ( ( ( FirstVNF_RAM + CRS ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,( ( ACS / MRS ) * DDR ) ) )", "choosing": "( Max( DS,( Min( DS ,( ( DS - ( ( MLU - MLU ) / Max( DS,CS ) ) ) - CS ) ) + MLU ) ) - MUC )", "obj1": 0.45528455284552843, "obj2": 0.34127770167671695}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( Max( ( MUM * RRSe ),( RRSe / RMSe ) ) - MLU ) ,MUC ) ) ,( ( ( MUR / RRSe ) + MUC ) * ( MUM - CS ) ) )", "obj1": 0.6077235772357723, "obj2": 0.2729924003270663}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.806910569105691, "obj2": 0.11474698332127155}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - ( ( Const / MDR ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( Min( Min( RMSe ,( RRSe / RMSe ) ) ,( Min( CS ,CS ) / RRSe ) ) - Min( DS ,MUR ) ),Min( ( MUM * RRSe ) ,MLU ) ) ) ,RMSe ) * ( DS * RCSe ) )", "obj1": 0.8516260162601627, "obj2": 0.07653132086827562}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) + ( ( FirstVNF_CPU_Server + RRS ) - MDR ) ) + Max( MRS,CRS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - CS ) - RMSe ) - ( MUR + RMSe ) ) ) ) * RRSe ) )", "obj1": 0.18089430894308944, "obj2": 0.680513043903779}, {"determining": "( ( DDR - BR ) + ( FirstVNF_RAM / Min( CRS ,Min( ARS ,( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ACS ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - MLU ) ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.06502505364698023}, {"determining": "( ( DDR - BR ) + ( FirstVNF_RAM / Min( CRS ,Min( ARS ,( ( ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,Min( MUM ,( RMSe * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.3638211382113821, "obj2": 0.47992816628279694}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - CS ) - RMSe ) * ( MUC * MUR ) ) ) ) * RRSe ) )", "obj1": 0.9349593495934959, "obj2": 0.0246292792426738}, {"determining": "( ( FirstVNF_CPU + CRS ) + Min( ARS ,Const ) )", "choosing": "Min( ( Min( ( MUC / MLU ) ,MUM ) + Min( Min( RMSe ,RCSe ) ,Min( MUC ,RRSe ) ) ) ,( Min( CS ,( ( ( ( MLU / MUC ) * MUC ) - ( Max( Max( MUM,CS ),MUR ) / ( Max( MUC,RMSe ) + ( MUM / RCSe ) ) ) ) - MUM ) ) + Min( CS ,CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.009339589268900453}, {"determining": "( ( DDR - BR ) + ( ( ( Min( FirstVNF_Mem_Server ,Min( Max( FirstVNF_Mem,AMS ) ,MRS ) ) + PN ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 0.45121951219512196, "obj2": 0.3757539356344686}, {"determining": "Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( MUR - DS ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.7479674796747967, "obj2": 0.16224063132597735}, {"determining": "( ( PN - FirstVNF_CPU ) + ( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) )", "choosing": "( ( ( ( DS - CS ) - RMSe ) - MUR ) * ( DS * RCSe ) )", "obj1": 0.8455284552845529, "obj2": 0.09617281036787058}, {"determining": "( ( ( ( BR / FirstVNF_CPU_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,Const ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - ( MUM / MUC ) ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - MLU ) ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - ( MUM + MLU ) )", "obj1": 0.22764227642276422, "obj2": 0.5830403492819383}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU_Server / ( CRS * ( FirstVNF_CPU_Server - Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( Max( RMSe,DS ) - ( ( CS * Min( MUR ,Max( ( MLU + Min( RCSe ,RCSe ) ),RMSe ) ) ) - CS ) )", "obj1": 0.3130081300813008, "obj2": 0.48697794081971696}, {"determining": "Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server / ( ( MRS + MRS ) * Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,( MLU / ( RCSe * Max( ( ( RRSe + MLU ) + MUM ),MUM ) ) ) ) / ( Max( MUM,DS ) + ( MLU / RRSe ) ) )", "obj1": 0.6747967479674797, "obj2": 0.2057728493906617}, {"determining": "Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( MUR - DS ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.6626016260162602, "obj2": 0.21315214860430282}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * ACS ) ,( FirstVNF_RAM_Server - ( MDR / MDR ) ) ) * FirstVNF_CPU ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( DS * ( MLU - CS ) ) * RCSe ),( MUC + DS ) )", "obj1": 0.717479674796748, "obj2": 0.20297733732370302}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * ACS ) ,( FirstVNF_RAM_Server - ( MDR / MDR ) ) ) * FirstVNF_CPU ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) )", "obj1": 0.3943089430894309, "obj2": 0.4421121527946691}, {"determining": "( ( DDR - BR ) + ( ( ( Min( FirstVNF_Mem_Server ,Min( Max( FirstVNF_Mem,AMS ) ,MRS ) ) + PN ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 0.4105691056910569, "obj2": 0.42365033253810047}, {"determining": "Min( ( Max( PN,( FirstVNF_CPU * CRS ) ) / ( Max( MDR,Max( MDR,( FirstVNF_CPU * RRS ) ) ) + MRS ) ) ,( ( Max( AMS,BR ) * Max( ARS,FirstVNF_Mem_Server ) ) + BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + CS ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( RRSe - ( MUR + ( RMSe + ( ( MUR - DS ) / ( ( MLU / DS ) / ( RRSe - MUR ) ) ) ) ) ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7226469070389889}, {"determining": "Max( Max( MRS,( PN - FirstVNF_RAM_Server ) ),( ( ( FirstVNF_Mem - MDR ) + FirstVNF_Mem ) - ( RRS / ARS ) ) )", "choosing": "( Max( ( RMSe / DS ),( CS / MUR ) ) - ( ( MUM - MUC ) * ( DS / RCSe ) ) )", "obj1": 0.10569105691056911, "obj2": 0.7353197547728949}, {"determining": "( Min( ACS ,ACS ) + ( Max( Const,ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) )", "obj1": 0.3780487804878049, "obj2": 0.4577498009131532}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - Max( Const,( Max( ( FirstVNF_Mem_Server - FirstVNF_CPU ),( ARS * FirstVNF_RAM ) ) / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Min( ( MUR + Max( ( Min( Min( RMSe ,( RRSe / RMSe ) ) ,( Min( CS ,CS ) / Max( MUR,DS ) ) ) - Min( DS ,MUR ) ),Min( MUM ,MLU ) ) ) ,RMSe ) * ( DS * RCSe ) )", "obj1": 0.7276422764227642, "obj2": 0.18849564847740832}, {"determining": "( Min( ( FirstVNF_RAM + CRS ) ,FirstVNF_RAM ) - ( ( ACS - BR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) / ( ( RCSe - RRSe ) - MLU ) )", "obj1": 0.16260162601626016, "obj2": 0.6970972981605487}, {"determining": "Min( ( ( MDR + FirstVNF_RAM_Server ) / ( Max( MDR,Max( MDR,FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) ) ,( ( Max( ARS,DDR ) * Max( AMS,Max( FirstVNF_CPU,ACS ) ) ) * BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + MUR ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( MUC / DS ) * Max( ( DS * ( RCSe + RCSe ) ),Max( DS,( MUR * ( ( RMSe + RCSe ) + MLU ) ) ) ) ) )", "obj1": 0.14227642276422764, "obj2": 0.7193240382810188}, {"determining": "( ( CRS + FirstVNF_RAM ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( Const + FirstVNF_RAM_Server ) - Max( Const,( Max( RRS,ACS ) / MDR ) ) ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( Min( Min( RMSe ,( RRSe / RMSe ) ) ,( Min( CS ,CS ) / RRSe ) ) - Min( DS ,MUR ) ),Min( MUM ,MLU ) ) ) ,RMSe ) * ( Max( MLU,MLU ) - RCSe ) )", "obj1": 0.7398373983739838, "obj2": 0.17600456436483575}, {"determining": "( Min( ( ( ( Min( Min( DDR ,FirstVNF_CPU ) ,Min( ACS ,ACS ) ) / ( PN - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( CRS / CRS ) )", "choosing": "( ( MUR * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / DS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.2073170731707317, "obj2": 0.5881326369482037}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Max( Const,ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( MLU - CS ) ) )", "obj1": 0.4349593495934959, "obj2": 0.4004868202864366}, {"determining": "( Max( ( Min( MRS ,ARS ) * Max( CRS,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) + ( ( ( FirstVNF_RAM + CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( MUM,MUC ) ) ,MUC ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.4186991869918699, "obj2": 0.4139282042101176}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - CS ) - RMSe ) * ( MUC * DS ) ) ) ) * RRSe ) )", "obj1": 0.1483739837398374, "obj2": 0.7023854634547686}, {"determining": "( ( ( MDR * MRS ) / ( ( CRS - FirstVNF_CPU ) * ( ARS + ARS ) ) ) + ( ( Max( AMS,BR ) * Max( ARS,DDR ) ) + CRS ) )", "choosing": "Min( ( ( MUC * DS ) / Max( ( ( ( DS + MLU ) * MLU ) * Min( ( ( ( MLU * MUM ) - Min( RCSe ,RCSe ) ) + ( ( MLU * RRSe ) - RRSe ) ) ,MUR ) ),RCSe ) ) ,RCSe )", "obj1": 0.5975609756097561, "obj2": 0.28673517112297664}, {"determining": "( ( ( ( DDR - BR ) + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) / ( ( CRS - FirstVNF_CPU ) * ( ARS - ARS ) ) ) + Max( ( Max( AMS,BR ) * Max( ARS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ),CRS ) )", "choosing": "Min( Min( DS ,( ( ( ( MLU / DS ) / ( ( RMSe - RCSe ) - MLU ) ) / DS ) * CS ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.5813008130081301, "obj2": 0.28904227798669785}, {"determining": "( ( DDR - BR ) + ( FirstVNF_RAM / Min( CRS ,Min( ARS ,( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ACS ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,Min( MUM ,( CS * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.9329268292682927, "obj2": 0.051757762938052544}, {"determining": "( ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) )", "choosing": "( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) )", "obj1": 0.31097560975609756, "obj2": 0.5098621653130351}, {"determining": "( RRS + Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,DS ) - ( ( ( MUM - ( MUC + MUC ) ) - ( ( CS * CS ) * ( Min( Min( MUR ,RMSe ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.2967479674796748, "obj2": 0.5230345986056733}, {"determining": "( Min( ( FirstVNF_RAM + CRS ) ,FirstVNF_RAM ) - ( ( ACS - BR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) / ( ( RCSe - RRSe ) - MLU ) )", "obj1": 0.17886178861788618, "obj2": 0.6825589012329558}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM + CRS ) + Min( FirstVNF_CPU_Server ,( ( Const / MDR ) + ( Max( FirstVNF_CPU_Server,( ARS - FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) / MDR ) ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUM + ( ( MLU + ( ( MUM * RMSe ) / ( MLU - MUR ) ) ) / ( RMSe - MUC ) ) ) ,( ( ( Min( CS ,CS ) / RRSe ) + ( ( MUC * CS ) - ( RRSe * DS ) ) ) * ( MUM - CS ) ) )", "obj1": 0.3902439024390244, "obj2": 0.4561814797433878}, {"determining": "( RRS + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.2804878048780488, "obj2": 0.5271008671684146}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Max( Const,ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( MLU - CS ) ) )", "obj1": 0.4329268292682927, "obj2": 0.4024784837716617}, {"determining": "( ( DDR - BR ) + ( FirstVNF_RAM / Min( CRS ,Min( ARS ,( ( ( ( FirstVNF_RAM - MDR ) - FirstVNF_Mem_Server ) * ACS ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,Min( MUM ,( CS * DS ) ) ) ) ,( ( ( MLU + ( MUM + MUC ) ) + MUC ) + ( MUM - CS ) ) )", "obj1": 0.9288617886178862, "obj2": 0.05652050163462755}, {"determining": "( Min( ( FirstVNF_RAM + CRS ) ,FirstVNF_RAM ) - Min( ( ACS - BR ) ,( ( ( ARS * FirstVNF_RAM ) - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM + ( ( ( RRSe * Max( RMSe,MLU ) ) - ( RMSe - Max( RMSe,MUC ) ) ) / MUC ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.30284552845528456, "obj2": 0.513140785866852}], "6": [{"determining": "( ( PN - FirstVNF_CPU ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - BR ) + ( ( RRS / ( FirstVNF_CPU_Server - ACS ) ) / Min( CRS ,Min( Max( ( Max( ( MDR * FirstVNF_RAM ),ARS ) * ACS ),FirstVNF_CPU_Server ) ,ARS ) ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,Min( MUM ,( CS - DS ) ) ) ) ,( ( ( ( ( MUC * RRSe ) / RMSe ) * RCSe ) - MUR ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_CPU_Server ) + ( RRS * ( DDR + DDR ) ) ) ,DDR ) * ( MDR - ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS * ( RRSe + RCSe ) ),( Max( Max( Min( MUR ,MUM ),( RMSe * MUC ) ),MLU ) / RMSe ) )", "obj1": 0.09959349593495935, "obj2": 0.7519199298313098}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.5, "obj2": 0.2674076496463011}, {"determining": "Min( Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 0.6056910569105691, "obj2": 0.21599645506452778}, {"determining": "( ( CRS + FirstVNF_RAM ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( Const + FirstVNF_RAM_Server ) - Max( Const,( Max( RRS,ACS ) / MDR ) ) ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( Min( Min( RMSe ,( RRSe / RMSe ) ) ,( Min( CS ,CS ) / RRSe ) ) - Min( DS ,MUR ) ),Min( MUM ,MLU ) ) ) ,RMSe ) * ( Max( MLU,MLU ) - RCSe ) )", "obj1": 0.7398373983739838, "obj2": 0.17600456436483575}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,RCSe ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MUC / CS ) ) )", "obj1": 0.6829268292682927, "obj2": 0.18545280023561733}, {"determining": "( ( Const + FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,( CRS * DDR ) ) )", "choosing": "( Max( DS,RMSe ) - ( ( ( MUM - Min( MUM ,( CS * DS ) ) ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - MLU ) ) ) + CS ) )", "obj1": 0.3516260162601626, "obj2": 0.4785716781211845}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - CS ) - RMSe ) * ( MUC * MUR ) ) ) ) * RRSe ) )", "obj1": 0.9349593495934959, "obj2": 0.0246292792426738}, {"determining": "Min( Max( ( ( Min( BR ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) / Max( Const,FirstVNF_Mem ) ),( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( ( ( Max( MUC,RMSe ) / MUC ) * ( DS * ( ( ( DS - CS ) - RMSe ) * ( MUC * MUR ) ) ) ) * RRSe ) ) / ( ( CS / ( DS - MUM ) ) * RRSe ) )", "obj1": 0.4349593495934959, "obj2": 0.3448505464258161}, {"determining": "( ( FirstVNF_CPU + CRS ) + Min( ARS ,Const ) )", "choosing": "Min( ( Min( ( MUC / MLU ) ,MUM ) + Min( Min( RMSe ,RCSe ) ,Min( MUC ,RRSe ) ) ) ,( Min( CS ,( ( ( ( MLU / MUC ) * MUC ) - ( Max( Max( MUM,CS ),MUR ) / ( Max( MUC,RMSe ) + ( MUM / RCSe ) ) ) ) - MUM ) ) + Min( CS ,CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.009339589268900453}, {"determining": "Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( MUR - DS ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.6626016260162602, "obj2": 0.21315214860430282}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU_Server / ( CRS * ( FirstVNF_CPU_Server - Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( Max( RMSe,DS ) - ( ( CS * Min( MUR ,Max( ( MLU + Min( RCSe ,RCSe ) ),RMSe ) ) ) - CS ) )", "obj1": 0.3130081300813008, "obj2": 0.48697794081971696}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - FirstVNF_CPU_Server ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MLU,MUR ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * RMSe ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( CS,Min( MUR ,DS ) ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.25609756097560976, "obj2": 0.5416903646742103}, {"determining": "( ( PN - FirstVNF_CPU ) + ( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.8699186991869918, "obj2": 0.06632530534692369}, {"determining": "( ( DDR - BR ) + Max( ( Max( AMS,BR ) * Max( ARS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ),CRS ) )", "choosing": "( Max( DS,RMSe ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( MUM ,DS ) - MLU ) ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) )", "obj1": 0.241869918699187, "obj2": 0.5783036334682197}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Max( Const,ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( MLU - CS ) ) )", "obj1": 0.4329268292682927, "obj2": 0.4024784837716617}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - ARS ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.20528455284552846, "obj2": 0.6160544493775286}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM + CRS ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.46747967479674796, "obj2": 0.29468066607485244}, {"determining": "( ( DDR - BR ) + ( FirstVNF_RAM / Min( CRS ,Min( ARS ,( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ACS ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - MLU ) ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.06502505364698023}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - ( ( Const / MDR ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( Min( Min( RMSe ,( RRSe / RMSe ) ) ,( Min( CS ,CS ) / RRSe ) ) - Min( DS ,MUR ) ),Min( ( MUM * RRSe ) ,MLU ) ) ) ,RMSe ) * ( DS * RCSe ) )", "obj1": 0.8516260162601627, "obj2": 0.07653132086827562}, {"determining": "( Min( ACS ,ACS ) + ( Max( Const,ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) )", "obj1": 0.3780487804878049, "obj2": 0.4577498009131532}, {"determining": "Min( Max( FirstVNF_CPU_Server,MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( Max( Min( RMSe ,DS ),Max( RMSe,( MUR * RMSe ) ) ) / MLU )", "obj1": 0.774390243902439, "obj2": 0.12895520131042623}, {"determining": "( Min( ( ( ( ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( ( ACS - BR ) * ( ( ARS - FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( ( ( Min( CS ,CS ) / RRSe ) + ( ( MUC * CS ) - ( RRSe * DS ) ) ) * ( MUM - CS ) ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.20121951219512196, "obj2": 0.6444570735081149}, {"determining": "( Min( ( ( ( Min( Min( DDR ,FirstVNF_CPU ) ,Min( ACS ,ACS ) ) / ( PN - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( CRS / CRS ) )", "choosing": "( ( MUR * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / DS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.2073170731707317, "obj2": 0.5881326369482037}, {"determining": "( Max( ( Min( MRS ,ARS ) * Max( CRS,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) + ( ( ( FirstVNF_RAM + CRS ) + ( AMS - AMS ) ) / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( ( MUC / MUC ) - MUM ) - ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,( DS - RRSe ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.4634146341463415, "obj2": 0.3182244124536764}, {"determining": "( ( ( ( ( FirstVNF_RAM + CRS ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + FirstVNF_Mem ) + Min( FirstVNF_CPU_Server ,( ( ACS / MRS ) * DDR ) ) )", "choosing": "( Max( DS,( Min( DS ,( ( DS - ( ( MLU - MLU ) / Max( DS,CS ) ) ) - CS ) ) + MLU ) ) - MUC )", "obj1": 0.45528455284552843, "obj2": 0.34127770167671695}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - ( ( Const / MDR ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,Min( MUM ,( CS * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.8252032520325203, "obj2": 0.08401391912601765}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * ACS ) ,( FirstVNF_RAM_Server - ( MDR / MDR ) ) ) * FirstVNF_CPU ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) )", "obj1": 0.3943089430894309, "obj2": 0.4421121527946691}, {"determining": "( ( DDR - BR ) + ( ( ( Min( FirstVNF_Mem_Server ,Min( Max( FirstVNF_Mem,AMS ) ,MRS ) ) + PN ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 0.4105691056910569, "obj2": 0.42365033253810047}, {"determining": "Min( FirstVNF_Mem_Server ,( FirstVNF_CPU_Server / ( ( MRS + MRS ) * Max( PN,FirstVNF_Mem ) ) ) )", "choosing": "( Min( RCSe ,( MLU / ( RCSe * Max( ( ( RRSe + MLU ) + MUM ),MUM ) ) ) ) / ( Max( MUM,DS ) + ( MLU / RRSe ) ) )", "obj1": 0.6747967479674797, "obj2": 0.2057728493906617}, {"determining": "Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( ARS - Const ) ) ,( ARS - ( MDR / Min( ( Const * FirstVNF_Mem ) ,( FirstVNF_CPU - ACS ) ) ) ) )", "choosing": "( Min( MUR ,( ( MUR + Max( ( DS - ( RMSe + CS ) ),( DS / CS ) ) ) / Max( ( MUR - MLU ),RCSe ) ) ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.7439024390243902, "obj2": 0.15087180466967823}, {"determining": "( ( ( ( BR / FirstVNF_CPU_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,Const ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - ( MUM / MUC ) ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - MLU ) ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - ( MUM + MLU ) )", "obj1": 0.22764227642276422, "obj2": 0.5830403492819383}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.806910569105691, "obj2": 0.11474698332127155}, {"determining": "( RRS + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( ( ( ( DS - CS ) - RMSe ) - MUR ) * ( DS * RCSe ) )", "obj1": 0.19308943089430894, "obj2": 0.6577824415496547}, {"determining": "( ( DDR * CRS ) + ( FirstVNF_RAM / ( Max( DDR,PN ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( Min( Max( ( ( ( MUM - RRSe ) / MUM ) - RMSe ),( ( RCSe + CS ) * ( ( CS / MUC ) - ( MUC * CS ) ) ) ) ,DS ) ,Min( MUM ,( CS * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.9329268292682927, "obj2": 0.05149560174340249}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,( ( BR / Max( CRS,FirstVNF_RAM ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( RMSe ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( Max( CS,DS ) - ( RRSe / RCSe ) ) - RMSe ) * ( MUC * DS ) ) ) ) * RRSe ) )", "obj1": 0.1483739837398374, "obj2": 0.6979992195951683}, {"determining": "Min( ( Max( PN,( FirstVNF_CPU * CRS ) ) / ( Max( MDR,Max( MDR,( FirstVNF_CPU * RRS ) ) ) + MRS ) ) ,( ( Max( AMS,BR ) * Max( ARS,FirstVNF_Mem_Server ) ) + BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + CS ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( RRSe - ( MUR + ( RMSe + ( ( MUR - DS ) / ( ( MLU / DS ) / ( RRSe - MUR ) ) ) ) ) ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7226469070389889}, {"determining": "( ( DDR - BR ) + ( FirstVNF_RAM / Min( CRS ,Min( ARS ,( ( ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.30691056910569103, "obj2": 0.5088978321665109}, {"determining": "( Max( ( Min( MRS ,ARS ) * Max( CRS,AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) + ( ( ( FirstVNF_RAM + CRS ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( MUM,MUC ) ) ,MUC ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.4186991869918699, "obj2": 0.4139282042101176}, {"determining": "( RRS + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.2804878048780488, "obj2": 0.5271008671684146}, {"determining": "( RRS + Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,DS ) - ( ( ( MUM - ( MUC + MUC ) ) - ( ( CS * CS ) * ( Min( Min( MUR ,RMSe ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.2967479674796748, "obj2": 0.5230345986056733}, {"determining": "Min( ( ( MDR + FirstVNF_RAM_Server ) / ( Max( MDR,Max( MDR,FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) ) ,( ( Max( ARS,DDR ) * Max( AMS,Max( FirstVNF_CPU,ACS ) ) ) * BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + MUR ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( MUC / DS ) * Max( ( DS * ( RCSe + RCSe ) ),Max( DS,( MUR * ( ( RMSe + RCSe ) + MLU ) ) ) ) ) )", "obj1": 0.14227642276422764, "obj2": 0.7193240382810188}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM + CRS ) + Min( FirstVNF_CPU_Server ,( ( Const / MDR ) + ( Max( FirstVNF_CPU_Server,( ARS - FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) / MDR ) ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( MUM + ( ( MLU + ( ( MUM * RMSe ) / ( MLU - MUR ) ) ) / ( RMSe - MUC ) ) ) ,( ( ( Min( CS ,CS ) / RRSe ) + ( ( MUC * CS ) - ( RRSe * DS ) ) ) * ( MUM - CS ) ) )", "obj1": 0.3902439024390244, "obj2": 0.4561814797433878}, {"determining": "( ( RRS + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + ( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) )", "choosing": "( ( ( ( ( MUM - ( MUC / MUC ) ) - CS ) - RMSe ) - MUR ) * ( DS * RCSe ) )", "obj1": 0.17479674796747968, "obj2": 0.6886639377650594}, {"determining": "( ( DDR - BR ) + ( ( FirstVNF_CPU_Server - ACS ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) / RRS ) + FirstVNF_Mem_Server ) * CRS ) + ( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) ) )", "choosing": "( Max( DS,MUM ) - ( MUC + ( ( MUM - ( MUC / MUC ) ) - ( Max( CS,CS ) * Min( Min( ( MLU * ( MUR - RRSe ) ) ,Min( ( RRSe * MLU ) ,MUR ) ) ,MLU ) ) ) ) )", "obj1": 0.4654471544715447, "obj2": 0.29849061484297723}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - FirstVNF_CPU_Server ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MLU,MUR ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * RMSe ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( CS,Min( MUR ,DS ) ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.27439024390243905, "obj2": 0.5382811303025714}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.806910569105691, "obj2": 0.11474698332127155}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( ( MUC * DS ) / Max( MUC,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.7601626016260162, "obj2": 0.14069528414624385}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( ( ( CRS - MRS ) * ARS ) + FirstVNF_RAM_Server ) - ( ( Const / MDR ) + ( ( Const + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "( Min( ( Max( Min( Max( DS,( DS / ( RCSe * CS ) ) ) ,MUC ),Max( RMSe,DS ) ) * MLU ) ,RMSe ) * ( DS * RCSe ) )", "obj1": 0.8211382113821138, "obj2": 0.10415835584381374}], "7": [{"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - FirstVNF_CPU_Server ) * ( RRS - ( ( ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MLU,MUR ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * MUC ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( CS,Min( MUR ,DS ) ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_CPU_Server ) + ( RRS * ( DDR + DDR ) ) ) ,DDR ) * ( MDR - ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS * ( RRSe + RCSe ) ),( Max( Max( Min( MUR ,MUM ),( RMSe * MUC ) ),MLU ) / RMSe ) )", "obj1": 0.09959349593495935, "obj2": 0.7519199298313098}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MLU,MUR ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * RMSe ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( CS,Min( MUR ,DS ) ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( MUM * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.7378048780487805, "obj2": 0.12647903935526786}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( Const,ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.4186991869918699, "obj2": 0.3133651159049902}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM * CRS ) + ( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( Max( CS,CS ) * ( Min( Min( RCSe ,DS ) ,Min( ( RRSe * MLU ) ,MUR ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.40447154471544716, "obj2": 0.39690190936894587}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,RCSe ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MUC / CS ) ) )", "obj1": 0.6829268292682927, "obj2": 0.18545280023561733}, {"determining": "Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),Max( MDR,FirstVNF_Mem_Server ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - CS ) - RMSe ) * ( MUC * MUR ) ) ) ) * RRSe ) ) / ( ( MUM + DS ) + ( ( MUC / DS ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) ) )", "obj1": 0.36585365853658536, "obj2": 0.4017534294381751}, {"determining": "Min( Max( ( Min( ( FirstVNF_RAM_Server / ( Const - MDR ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ACS * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( DS * MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( DS ,Min( RCSe ,Max( MLU,RCSe ) ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.516260162601626, "obj2": 0.25190523649244007}, {"determining": "( ( ( Max( Max( ( CRS - Min( AMS ,MDR ) ),ARS ),PN ) / FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - MUM ) - ( MLU / DS ) ) * ( Min( MUM ,( CS - DS ) ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.9349593495934959, "obj2": 0.023628520533854044}, {"determining": "( ( FirstVNF_CPU + CRS ) + Min( ARS ,Const ) )", "choosing": "Min( ( Min( ( MUC / MLU ) ,MUM ) + Min( Min( RMSe ,RCSe ) ,Min( MUC ,RRSe ) ) ) ,( Min( CS ,( ( ( ( MLU / MUC ) * MUC ) - ( Max( Max( MUM,CS ),MUR ) / ( Max( MUC,RMSe ) + ( MUM / RCSe ) ) ) ) - MUM ) ) + Min( CS ,CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.009339589268900453}, {"determining": "( ( DDR - BR ) + ( ( FirstVNF_CPU_Server - ACS ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) / RRS ) + FirstVNF_Mem_Server ) * CRS ) + ( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) ) )", "choosing": "( Max( DS,MUM ) - ( MUC + ( ( MUM - ( MUC / MUC ) ) - ( Max( CS,CS ) * Min( Min( ( MLU * ( MUR - RRSe ) ) ,Min( ( RRSe * MLU ) ,MUR ) ) ,MLU ) ) ) ) )", "obj1": 0.3617886178861789, "obj2": 0.46777447755030377}, {"determining": "Min( ( AMS - DDR ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( DS * MUC ) / Max( CS,( Min( ( ( MUC * DS ) / Max( MUM,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / MUM ) ) ) ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MUC / CS ) ) )", "obj1": 0.5752032520325203, "obj2": 0.2336934855698149}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + RCSe ) + ( MLU / RRSe ) ) )", "obj1": 0.6646341463414634, "obj2": 0.19165365181429267}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - Min( ( FirstVNF_CPU_Server * AMS ) ,Min( CRS ,FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUC / MLU ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.17886178861788618, "obj2": 0.6346100457906563}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - ARS ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.20528455284552846, "obj2": 0.6160544493775286}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU_Server / ( CRS * ( FirstVNF_CPU_Server - Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( Max( RMSe,DS ) - ( ( CS * Min( MUR ,Max( ( MLU + Min( RCSe ,RCSe ) ),RMSe ) ) ) - CS ) )", "obj1": 0.3130081300813008, "obj2": 0.48697794081971696}, {"determining": "Min( ( Max( PN,( FirstVNF_CPU * CRS ) ) / ( Max( MDR,Max( MDR,( FirstVNF_CPU * RRS ) ) ) + MRS ) ) ,( ( Max( AMS,BR ) * Max( ARS,FirstVNF_Mem_Server ) ) + BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + CS ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( RRSe - ( MUR + ( RMSe + ( ( MUR - DS ) / ( ( MLU / DS ) / ( RRSe - MUR ) ) ) ) ) ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7226469070389889}, {"determining": "( ( FirstVNF_Mem * ( BR + DDR ) ) + ( CRS * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / ( RRSe - MUR ) ) * ( DS * ( ( ( DS - CS ) - RMSe ) * DS ) ) ) * RRSe ) )", "obj1": 0.17276422764227642, "obj2": 0.6595378921141456}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - FirstVNF_CPU_Server ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MLU,MUR ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * RMSe ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( CS,Min( MUR ,DS ) ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.25609756097560976, "obj2": 0.5416903646742103}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / Min( Min( ACS ,( ACS - FirstVNF_CPU ) ) ,Max( ( Max( FirstVNF_CPU_Server,( ARS - FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) / MDR ) ),( Const / MDR ) ) ) ) ) )", "choosing": "( Min( Min( CS ,Max( ( ( RRSe - DS ) - RMSe ),Min( ( MUM * RRSe ) ,MLU ) ) ) ,RMSe ) * ( DS * RCSe ) )", "obj1": 0.7865853658536586, "obj2": 0.12487476107287672}, {"determining": "( ( DDR - BR ) + ( FirstVNF_RAM / Min( CRS ,Min( ARS ,( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ACS ) - FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - MLU ) ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.06502505364698023}, {"determining": "( ( ( ( PN + MRS ) + FirstVNF_RAM_Server ) - Max( Const,Max( MDR,FirstVNF_CPU_Server ) ) ) + ( ACS / ACS ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) - ( ( ( ( MUM - ( Max( DS,RMSe ) - ( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) * Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - ( MUR * MUC ) ) ) )", "obj1": 0.3475609756097561, "obj2": 0.47227192588902855}, {"determining": "Min( Max( ARS,( ACS - MDR ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( CS + RCSe ) ) ) * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.6239837398373984, "obj2": 0.21098587874588828}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS + FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / ( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN * FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_Mem_Server * Max( ACS,ARS ) ) * ( BR / CRS ) ),BR ) ) ) ) )", "choosing": "( ( ( RCSe + Min( MUR ,MLU ) ) / RMSe ) * ( MUR * RCSe ) )", "obj1": 0.8658536585365854, "obj2": 0.06599096529479097}, {"determining": "Min( Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.27099359198208695}, {"determining": "( ( RRS + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + CRS )", "choosing": "( ( ( ( ( MUM - ( MUC / MUC ) ) - ( Min( DS ,RMSe ) * ( DS * RCSe ) ) ) - RMSe ) - MUR ) * ( DS * RCSe ) )", "obj1": 0.16463414634146342, "obj2": 0.6891800583044679}, {"determining": "( ( DDR - BR ) + ( ( ( MRS + CRS ) + ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) / Max( MDR,CRS ) ) ) / ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ACS ) ) )", "choosing": "( Max( DS,MUM ) - ( Min( ( MUM - ( ( DS + ( RRSe / CS ) ) - DS ) ) ,( ( CS * CS ) * ( Min( ( RCSe - MUR ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.45934959349593496, "obj2": 0.3012691595237338}, {"determining": "Min( ( ( MDR + FirstVNF_RAM_Server ) / ( Max( MDR,Max( MDR,FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) ) ,( ( Max( ARS,DDR ) * Max( AMS,Max( FirstVNF_CPU,ACS ) ) ) * BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + MUR ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( MUC / DS ) * Max( ( DS * ( RCSe + RCSe ) ),Max( DS,( MUR * ( ( RMSe + RCSe ) + MLU ) ) ) ) ) )", "obj1": 0.14227642276422764, "obj2": 0.7193240382810188}, {"determining": "( Min( ( ( ( Min( Min( DDR ,FirstVNF_CPU ) ,Min( ACS ,ACS ) ) / ( PN - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( CRS / CRS ) )", "choosing": "( ( MUR * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / DS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.2073170731707317, "obj2": 0.5881326369482037}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Max( Const,ARS ) - Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( ( MLU - Max( ( MUM * RRSe ),MUC ) ) - CS ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5077654782267088}, {"determining": "( Min( ( Max( Min( ( ( ACS - BR ) * ( RRS - FirstVNF_Mem_Server ) ) ,AMS ),FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,ACS ) ) ,FirstVNF_RAM ) - ( ( ACS - BR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RMSe ,DS ) - MLU ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.24796747967479674, "obj2": 0.5771829943618438}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM + CRS ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.46747967479674796, "obj2": 0.29468066607485244}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) )", "obj1": 0.4959349593495935, "obj2": 0.2632257894632282}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,( ( BR / Max( CRS,FirstVNF_RAM ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( RMSe ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( Max( CS,DS ) - ( RRSe / RCSe ) ) - RMSe ) * ( MUC * DS ) ) ) ) * RRSe ) )", "obj1": 0.14634146341463414, "obj2": 0.6921834564491768}, {"determining": "( RRS + Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,DS ) - ( ( ( MUM - ( MUC + MUC ) ) - ( ( CS * CS ) * ( Min( Min( MUR ,RMSe ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.2967479674796748, "obj2": 0.5230345986056733}, {"determining": "( ( DDR * CRS ) + ( FirstVNF_RAM / ( Max( DDR,PN ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( Min( Max( ( ( ( MUM - RRSe ) / MUM ) - RMSe ),( ( RCSe + CS ) * ( ( CS / MUC ) - ( MUC * CS ) ) ) ) ,DS ) ,Min( MUM ,( CS * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.9329268292682927, "obj2": 0.05149560174340249}, {"determining": "( ( ( ( BR / FirstVNF_CPU_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,Const ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - ( MUM / MUC ) ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - MLU ) ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - ( MUM + MLU ) )", "obj1": 0.22764227642276422, "obj2": 0.5830403492819383}, {"determining": "Min( Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 0.6056910569105691, "obj2": 0.21599645506452778}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - FirstVNF_CPU_Server ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MLU,MUR ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * RMSe ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( CS,Min( MUR ,DS ) ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.27439024390243905, "obj2": 0.5382811303025714}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ),( DDR - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,Min( MUM ,( CS * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) ) / ( ( MUM + ( MUM - ( MUC / MUC ) ) ) + ( MLU / RRSe ) ) )", "obj1": 0.5914634146341463, "obj2": 0.22774864033739448}, {"determining": "( RRS + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.2804878048780488, "obj2": 0.5271008671684146}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( ( ( CRS - MRS ) * ARS ) + FirstVNF_RAM_Server ) - ( ( Const / MDR ) + ( ( Const + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "( Min( ( Max( Min( Max( DS,( DS / ( RCSe * CS ) ) ) ,MUC ),Max( RMSe,DS ) ) * MLU ) ,RMSe ) * ( DS * RCSe ) )", "obj1": 0.8211382113821138, "obj2": 0.10415835584381374}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * ACS ) ,( FirstVNF_RAM_Server - ( MDR / ( CRS * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) )", "obj1": 0.926829268292683, "obj2": 0.05609969018078443}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.7967479674796748, "obj2": 0.11485929472932054}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( DDR - PN ) )", "choosing": "Min( Max( ( ( MLU + RMSe ) * DS ),( RMSe - DS ) ) ,( ( CS + MUC ) / ( MUM - CS ) ) )", "obj1": 0.8313008130081301, "obj2": 0.07834046699485935}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - ( ( Const / MDR ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "( Min( Min( MUR ,Max( ( Min( Min( RMSe ,( RRSe / RMSe ) ) ,( Min( CS ,CS ) / RRSe ) ) - Min( DS ,MUR ) ),Min( ( MUM * RRSe ) ,MLU ) ) ) ,RMSe ) * ( DS * RCSe ) )", "obj1": 0.8516260162601627, "obj2": 0.07653132086827562}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - ( ( Const / MDR ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( Max( CS,CS ) * ( Min( Min( RCSe ,DS ) ,Min( ( RRSe * MLU ) ,MUR ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.823170731707317, "obj2": 0.08841356111121622}, {"determining": "( ( DDR - BR ) + Max( ( Max( AMS,BR ) * Max( ARS,Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) ),CRS ) )", "choosing": "( Max( DS,RMSe ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( MUM ,DS ) - MLU ) ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) )", "obj1": 0.241869918699187, "obj2": 0.5783036334682197}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / ( Min( FirstVNF_RAM ,( RRS * CRS ) ) + FirstVNF_RAM ) ) - ( ( Const / MDR ) + ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / ACS ) ) ) ) ) )", "choosing": "( Min( ( ( MUC * RCSe ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + ( MUM - ( MUC / Max( MLU,Min( ( RMSe / RCSe ) ,( MUR + MUC ) ) ) ) ) ) + ( MLU / RRSe ) ) )", "obj1": 0.8536585365853658, "obj2": 0.07073048744784732}], "8": [{"determining": "( Max( ACS,ARS ) - ( CRS + Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( DS * MUC ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( ( CS - RRSe ) * CS ) * ( Min( ( ( MLU + MUR ) / MUC ) ,( ( CS / CS ) * MUM ) ) - MLU ) ) ) - ( Min( MUR ,( DS * ( DS + ( CS + MUC ) ) ) ) * Min( RRSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - FirstVNF_CPU_Server ) * ( RRS - ( ( ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MLU,MUR ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * MUC ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( CS,Min( MUR ,DS ) ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_CPU_Server ) + ( RRS * ( DDR + DDR ) ) ) ,DDR ) * ( MDR - ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS * ( RRSe + RCSe ) ),( Max( Max( Min( MUR ,MUM ),( RMSe * MUC ) ),MLU ) / RMSe ) )", "obj1": 0.09959349593495935, "obj2": 0.7519199298313098}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( ( DS - CS ) - RMSe ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MUC / CS ) ) )", "obj1": 0.7195121951219512, "obj2": 0.1616587688462527}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( Const - MDR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( ( ( ( MUM - ( MUC / MUC ) ) - ( Min( DS ,RMSe ) * ( DS * RCSe ) ) ) - RMSe ) - MUR ) * ( DS * RCSe ) )", "obj1": 0.4146341463414634, "obj2": 0.3802099662715982}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MLU,MUR ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * RMSe ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( CS,Min( MUR ,DS ) ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( MUM * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.7378048780487805, "obj2": 0.12647903935526786}, {"determining": "( ( DDR - BR ) + ( ( FirstVNF_CPU_Server - ACS ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) / RRS ) + FirstVNF_Mem_Server ) * CRS ) + ( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) ) )", "choosing": "( Max( DS,MUM ) - ( MUC + ( ( MUM - ( MUC / MUC ) ) - ( Max( CS,CS ) * Min( Min( ( MLU * ( MUR - RRSe ) ) ,Min( ( RRSe * MLU ) ,MUR ) ) ,MLU ) ) ) ) )", "obj1": 0.3617886178861789, "obj2": 0.46777447755030377}, {"determining": "Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),Max( MDR,FirstVNF_Mem_Server ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - CS ) - RMSe ) * ( MUC * MUR ) ) ) ) * RRSe ) ) / ( ( MUM + DS ) + ( ( MUC / DS ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) ) )", "obj1": 0.36585365853658536, "obj2": 0.4017534294381751}, {"determining": "( ( ( Max( Max( ( CRS - Min( AMS ,MDR ) ),ARS ),PN ) / FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - MUM ) - ( MLU / DS ) ) * ( Min( MUM ,( CS - DS ) ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.9349593495934959, "obj2": 0.023628520533854044}, {"determining": "Min( Max( ( Min( ( FirstVNF_RAM_Server / ( Const - MDR ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ACS * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( DS * MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( DS ,Min( RCSe ,Max( MLU,RCSe ) ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.516260162601626, "obj2": 0.25190523649244007}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( Const,ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.4166666666666667, "obj2": 0.32880253367868967}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU_Server / ( CRS * ( FirstVNF_CPU_Server - Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( Max( RMSe,DS ) - ( ( CS * Min( MUR ,Max( ( MLU + Min( RCSe ,RCSe ) ),RMSe ) ) ) - CS ) )", "obj1": 0.3130081300813008, "obj2": 0.48697794081971696}, {"determining": "Min( ( Max( PN,( FirstVNF_CPU * CRS ) ) / ( Max( MDR,Max( MDR,( FirstVNF_CPU * RRS ) ) ) + MRS ) ) ,( ( Max( AMS,BR ) * Max( ARS,FirstVNF_Mem_Server ) ) + BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + CS ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( RRSe - ( MUR + ( RMSe + ( ( MUR - DS ) / ( ( MLU / DS ) / ( RRSe - MUR ) ) ) ) ) ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7226469070389889}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( MRS + ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,AMS ) * MRS ),( PN / MRS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RCSe * RMSe ) / Min( ( MUM / RRSe ) ,( ( MLU * ( MUM / ( ( ( MLU * MUR ) + MUR ) - ( RMSe - CS ) ) ) ) / ( DS + ( RMSe + RCSe ) ) ) ) )", "obj1": 0.5630081300813008, "obj2": 0.23748031797305916}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,RCSe ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MUC / CS ) ) )", "obj1": 0.6829268292682927, "obj2": 0.18545280023561733}, {"determining": "( ( FirstVNF_CPU + CRS ) + Min( ARS ,Const ) )", "choosing": "Min( ( Min( ( MUC / MLU ) ,MUM ) + Min( Min( RMSe ,RCSe ) ,Min( MUC ,RRSe ) ) ) ,( Min( CS ,( ( ( ( MLU / MUC ) * MUC ) - ( Max( Max( MUM,CS ),MUR ) / ( Max( MUC,RMSe ) + ( MUM / RCSe ) ) ) ) - MUM ) ) + Min( CS ,CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.009339589268900453}, {"determining": "Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),Max( MDR,FirstVNF_Mem_Server ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - CS ) - RMSe ) * ( MUC * MUR ) ) ) ) * RRSe ) ) / ( ( MUM + DS ) + ( ( MUC / DS ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) ) )", "obj1": 0.37398373983739835, "obj2": 0.3951459720515821}, {"determining": "( ( ( ( PN + MRS ) + FirstVNF_RAM_Server ) - Max( Const,Max( MDR,FirstVNF_CPU_Server ) ) ) + ( ACS / ACS ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) - ( ( ( ( MUM - ( Max( DS,RMSe ) - ( RCSe * RCSe ) ) ) - ( RMSe + CS ) ) * Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - ( MUR * MUC ) ) ) )", "obj1": 0.3475609756097561, "obj2": 0.47227192588902855}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,( ( BR / ( ARS - BR ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( Max( CS,DS ) - CS ) - RMSe ) * ( MUC * DS ) ) ) ) * RRSe ) )", "obj1": 0.16260162601626016, "obj2": 0.6747415847795035}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - FirstVNF_CPU_Server ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MLU,MUR ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * RMSe ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( CS,Min( MUR ,DS ) ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.25609756097560976, "obj2": 0.5416903646742103}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Max( Const,ARS ) - Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( ( MLU - Max( ( MUM * RRSe ),MUC ) ) - CS ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5077654782267088}, {"determining": "( Min( ( ( ( Min( Min( DDR ,FirstVNF_CPU ) ,Min( ACS ,ACS ) ) / ( PN - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( CRS / CRS ) )", "choosing": "( ( MUR * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / DS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.2073170731707317, "obj2": 0.5881326369482037}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / Min( Min( ACS ,( ACS - FirstVNF_CPU ) ) ,Max( ( Max( FirstVNF_CPU_Server,( ARS - FirstVNF_RAM ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) / MDR ) ),( Const / MDR ) ) ) ) ) )", "choosing": "( Min( Min( CS ,Max( ( ( RRSe - DS ) - RMSe ),Min( ( MUM * RRSe ) ,MLU ) ) ) ,RMSe ) * ( DS * RCSe ) )", "obj1": 0.7865853658536586, "obj2": 0.12487476107287672}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS + FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / ( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN * FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_Mem_Server * Max( ACS,ARS ) ) * ( BR / CRS ) ),BR ) ) ) ) )", "choosing": "( ( ( RCSe + Min( MUR ,MLU ) ) / RMSe ) * ( MUR * RCSe ) )", "obj1": 0.8658536585365854, "obj2": 0.06599096529479097}, {"determining": "( Min( ( Max( Min( ( ( ACS - BR ) * ( RRS - FirstVNF_Mem_Server ) ) ,AMS ),FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,ACS ) ) ,FirstVNF_RAM ) - ( ( ACS - BR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RMSe ,DS ) - MLU ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.24796747967479674, "obj2": 0.5771829943618438}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 0.6382113821138211, "obj2": 0.20109572553709545}, {"determining": "( ( DDR - BR ) + ( ( ( MRS + CRS ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.45121951219512196, "obj2": 0.30397297226609243}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * ACS ) ,( FirstVNF_RAM_Server - ( Max( FirstVNF_RAM_Server,MDR ) / ( CRS * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) - MUC ) ) )", "obj1": 0.9065040650406504, "obj2": 0.06568109998889007}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,( ( BR / Max( CRS,FirstVNF_RAM ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( RMSe ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( Max( CS,DS ) - ( RRSe / RCSe ) ) - RMSe ) * ( MUC * DS ) ) ) ) * RRSe ) )", "obj1": 0.14634146341463414, "obj2": 0.6921834564491768}, {"determining": "Min( Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 0.5914634146341463, "obj2": 0.2208310741399748}, {"determining": "Min( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM_Server,( Max( ( FirstVNF_CPU - PN ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const / ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( CS - ( Max( ( MUM - MUM ),( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( ( MLU / MUC ) + RRSe ) ) )", "obj1": 0.4186991869918699, "obj2": 0.3133651159049902}, {"determining": "( ( RRS + Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) + CRS )", "choosing": "( ( ( ( ( MUM - ( MUC / MUC ) ) - ( Min( DS ,RMSe ) * ( DS * RCSe ) ) ) - RMSe ) - MUR ) * ( DS * ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) ) )", "obj1": 0.2926829268292683, "obj2": 0.5228079838275692}, {"determining": "Min( Max( ARS,( ACS - MDR ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( CS + RCSe ) ) ) * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.6565040650406504, "obj2": 0.19062217610459775}, {"determining": "Min( ( AMS - DDR ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( DS * MUC ) / Max( CS,( Min( ( ( MUC * DS ) / Max( MUM,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / MUM ) ) ) ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MUC / CS ) ) )", "obj1": 0.5752032520325203, "obj2": 0.2336934855698149}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - ARS ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.20528455284552846, "obj2": 0.6160544493775286}, {"determining": "( ( DDR * CRS ) + ( FirstVNF_RAM / ( Max( DDR,PN ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( Min( Max( ( ( ( MUM - RRSe ) / MUM ) - RMSe ),( ( RCSe + CS ) * ( ( CS / MUC ) - ( MUC * CS ) ) ) ) ,DS ) ,Min( MUM ,( CS * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.9329268292682927, "obj2": 0.05149560174340249}, {"determining": "( ( ( ( BR / FirstVNF_CPU_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,Const ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - ( MUM / MUC ) ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - MLU ) ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - ( MUM + MLU ) )", "obj1": 0.22764227642276422, "obj2": 0.5830403492819383}, {"determining": "Min( ( ( MDR + FirstVNF_RAM_Server ) / ( Max( MDR,Max( MDR,FirstVNF_Mem_Server ) ) + FirstVNF_RAM_Server ) ) ,( ( Max( ARS,DDR ) * Max( AMS,Max( FirstVNF_CPU,ACS ) ) ) * BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + MUR ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( MUC / DS ) * Max( ( DS * ( RCSe + RCSe ) ),Max( DS,( MUR * ( ( RMSe + RCSe ) + MLU ) ) ) ) ) )", "obj1": 0.14227642276422764, "obj2": 0.7193240382810188}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( ( ( CRS - MRS ) * ARS ) + FirstVNF_RAM_Server ) - ( ( Const / MDR ) + ( ( Const + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "( Min( ( Max( Min( Max( DS,( DS / ( RCSe * CS ) ) ) ,MUC ),Max( RMSe,DS ) ) * MLU ) ,RMSe ) * ( DS * RCSe ) )", "obj1": 0.8211382113821138, "obj2": 0.10415835584381374}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - ( ( Const / MDR ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( Max( CS,CS ) * ( Min( Min( RCSe ,DS ) ,Min( ( RRSe * MLU ) ,MUR ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.823170731707317, "obj2": 0.08841356111121622}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - Min( ( FirstVNF_CPU_Server * AMS ) ,Min( CRS ,FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUC / MLU ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6211421523501633}, {"determining": "( ( FirstVNF_Mem * ( BR + DDR ) ) + ( CRS * ( FirstVNF_Mem - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / ( RRSe - MUR ) ) * ( DS * ( ( ( DS - CS ) - RMSe ) * DS ) ) ) * RRSe ) )", "obj1": 0.17276422764227642, "obj2": 0.6595378921141456}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - ( ( CRS * PN ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "( ( DS + RMSe ) * ( ( ( MUR + MUR ) + DS ) * RCSe ) )", "obj1": 0.8089430894308943, "obj2": 0.11303441868958208}, {"determining": "( ( RRS + Min( FirstVNF_CPU_Server ,Max( CRS,FirstVNF_Mem_Server ) ) ) + FirstVNF_Mem_Server )", "choosing": "( ( ( ( ( MUM - ( MUC / MUC ) ) - ( Min( DS ,RMSe ) * ( DS + RCSe ) ) ) - RMSe ) - MUR ) * ( MUR + Min( RMSe ,RRSe ) ) )", "obj1": 0.1443089430894309, "obj2": 0.7046356354433617}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( ( ( MUM + RCSe ) + ( MLU / RRSe ) ) - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.18089430894308944, "obj2": 0.628541834049714}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + ( CRS * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - CS ) - RMSe ) * DS ) ) ) * RRSe ) )", "obj1": 0.17682926829268292, "obj2": 0.6549050211884995}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - Min( ( FirstVNF_CPU_Server * AMS ) ,Min( CRS ,FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUC / MLU ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.17886178861788618, "obj2": 0.6346100457906563}, {"determining": "( RRS + Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - Min( ( BR * Max( MRS,( FirstVNF_RAM - MRS ) ) ) ,MRS ) ) ) ,( ARS - ( MDR / MDR ) ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( ( CS * MUR ) ,MLU ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.4715447154471545, "obj2": 0.2791332690175777}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( Const - MDR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( RCSe - MUR ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.5060975609756098, "obj2": 0.26215363547920206}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + RCSe ) + ( MLU / RRSe ) ) )", "obj1": 0.6707317073170732, "obj2": 0.1877598965859477}], "9": [{"determining": "( Min( ( ( ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ) - Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,RRS ) ) ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server / CRS ) )", "choosing": "Min( ( Min( Min( RMSe ,( ( Min( ( RMSe * MUM ) ,( MLU / DS ) ) - Min( MUC ,Max( RCSe,MUM ) ) ) + MUC ) ) ,MUM ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ACS,ARS ) - ( CRS + Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( DS * MUC ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( ( CS - RRSe ) * CS ) * ( Min( ( ( MLU + MUR ) / MUC ) ,( ( CS / CS ) * MUM ) ) - MLU ) ) ) - ( Min( MUR ,( DS * ( DS + ( CS + MUC ) ) ) ) * Min( RRSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_CPU_Server ) + ( RRS * ( DDR + DDR ) ) ) ,DDR ) * ( MDR - ( ACS / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS * ( RRSe + RCSe ) ),( Max( Max( Min( MUR ,MUM ),( RMSe * MUC ) ),MLU ) / RMSe ) )", "obj1": 0.09959349593495935, "obj2": 0.7519199298313098}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_RAM - ( ( DDR - PN ) * MRS ) ) ) )", "choosing": "( Max( DS,MUM ) - ( ( Max( CS,DS ) - ( ( CS + CS ) * ( Min( Min( RCSe ,DS ) ,Min( ( RRSe * MLU ) ,MUR ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.7723577235772358, "obj2": 0.07626065088855517}, {"determining": "( ( DDR - BR ) + ( ( FirstVNF_CPU_Server - ACS ) / ( ( ( ( ( PN / FirstVNF_Mem_Server ) / RRS ) + FirstVNF_Mem_Server ) * CRS ) + ( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) ) )", "choosing": "( Max( DS,MUM ) - ( MUC + ( ( MUM - ( MUC / MUC ) ) - ( Max( CS,CS ) * Min( Min( ( MLU * ( MUR - RRSe ) ) ,Min( ( RRSe * MLU ) ,MUR ) ) ,MLU ) ) ) ) )", "obj1": 0.3617886178861789, "obj2": 0.46777447755030377}, {"determining": "( ( DDR - BR ) + Max( ( ( CRS - FirstVNF_CPU ) - ( ARS - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( MUC ,MUR ) ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.16056910569105692, "obj2": 0.6508144597255006}, {"determining": "Min( Max( Min( ( Max( Min( ( ( ACS - BR ) / ( RRS - FirstVNF_Mem_Server ) ) ,AMS ),FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,ACS ) ) ,FirstVNF_RAM ),Max( MDR,FirstVNF_Mem_Server ) ) ,( MRS * ARS ) )", "choosing": "( Min( Min( MLU ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( MUR * RMSe ) * RMSe ) * ( MUC * MUR ) ) ) ) * RRSe ) ) / ( ( MUM + DS ) + ( ( MUC / DS ) * Max( ( MUR / DS ),( DS * ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.3638211382113821, "obj2": 0.3929082088726046}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.9349593495934959, "obj2": 0.023619611736993475}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( Const / MDR ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "( Min( DS ,( DS * RCSe ) ) * ( MUM + DS ) )", "obj1": 0.8556910569105691, "obj2": 0.07223849208060475}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / ( RRSe - MUR ) ) * ( DS * ( ( ( DS - CS ) - RMSe ) * DS ) ) ) * RRSe ) )", "obj1": 0.3902439024390244, "obj2": 0.38289312077419996}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,CRS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MUR,MUC ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * RMSe ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( Min( MUR ,DS ),CS ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( MUM * ( ( RCSe / DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.741869918699187, "obj2": 0.12548416331169351}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( Const,ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.4410569105691057, "obj2": 0.3005132855898479}, {"determining": "( ( FirstVNF_CPU + CRS ) + Min( ARS ,Const ) )", "choosing": "Min( ( Min( ( MUC / MLU ) ,MUM ) + Min( Min( RMSe ,RCSe ) ,Min( MUC ,RRSe ) ) ) ,( Min( CS ,( ( ( ( MLU / MUC ) * MUC ) - ( Max( Max( MUM,CS ),MUR ) / ( Max( MUC,RMSe ) + ( MUM / RCSe ) ) ) ) - MUM ) ) + Min( CS ,CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.009339589268900453}, {"determining": "Min( Max( ( Min( ( FirstVNF_RAM_Server / ( Const - MDR ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ACS * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( DS * MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( DS ,Min( RCSe ,Max( MLU,RCSe ) ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.516260162601626, "obj2": 0.25190523649244007}, {"determining": "( ( Min( ( FirstVNF_Mem_Server * ACS ) ,( FirstVNF_RAM_Server - ( Max( FirstVNF_RAM_Server,MDR ) / ( CRS * ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) ) ) * FirstVNF_CPU ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + ( ( CS * CS ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) - MUC ) ) )", "obj1": 0.9065040650406504, "obj2": 0.06568109998889007}, {"determining": "Min( ( ( ( FirstVNF_RAM * ( DDR - MRS ) ) - MRS ) * MRS ) ,( ARS - ( MDR / ACS ) ) )", "choosing": "( Min( ( Min( MUM ,Max( CS,DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( Min( MLU ,RRSe ) + CS ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.40040650406504064, "obj2": 0.33587577954076236}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,( ( BR / Max( CRS,FirstVNF_RAM ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( RMSe ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( Max( CS,DS ) - ( RRSe / RCSe ) ) - RMSe ) * ( MUC * DS ) ) ) ) * RRSe ) )", "obj1": 0.14634146341463414, "obj2": 0.6921834564491768}, {"determining": "( ( DDR * CRS ) + ( FirstVNF_RAM / ( Max( DDR,PN ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( Min( Max( ( ( ( MUM - RRSe ) / MUM ) - RMSe ),( ( RCSe + CS ) * ( ( CS / MUC ) - ( MUC * CS ) ) ) ) ,DS ) ,Min( MUM ,( CS * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.9329268292682927, "obj2": 0.05149560174340249}, {"determining": "Min( ( Max( PN,( FirstVNF_CPU * CRS ) ) / ( Max( MDR,Max( MDR,( FirstVNF_CPU * RRS ) ) ) + MRS ) ) ,( ( Max( AMS,BR ) * Max( ARS,FirstVNF_Mem_Server ) ) + BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + CS ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( RRSe - ( MUR + ( RMSe + ( ( MUR - DS ) / ( ( MLU / DS ) / ( RRSe - MUR ) ) ) ) ) ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7226469070389889}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( MRS + ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,AMS ) * MRS ),( PN / MRS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RCSe * RMSe ) / Min( ( MUM / RRSe ) ,( ( MLU * ( MUM / ( ( ( MLU * MUR ) + MUR ) - ( RMSe - CS ) ) ) ) / ( DS + ( RMSe + RCSe ) ) ) ) )", "obj1": 0.5630081300813008, "obj2": 0.23748031797305916}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,RCSe ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MUC / CS ) ) )", "obj1": 0.6829268292682927, "obj2": 0.18545280023561733}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) - ( ( Const / MDR ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "( Min( DS ,RMSe ) * ( ( ( ( ( MUM - ( MUC / MUC ) ) - ( Min( DS ,RMSe ) * ( DS * RCSe ) ) ) - RMSe ) - MUR ) * ( DS * ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) ) ) )", "obj1": 0.7113821138211383, "obj2": 0.15917959723125974}, {"determining": "( ( FirstVNF_Mem + FirstVNF_RAM ) + ( FirstVNF_CPU_Server / ( CRS * ( FirstVNF_CPU_Server - Min( FirstVNF_CPU ,AMS ) ) ) ) )", "choosing": "( Max( RMSe,DS ) - ( ( CS * Min( MUR ,Max( ( MLU + Min( RCSe ,RCSe ) ),RMSe ) ) ) - CS ) )", "obj1": 0.3130081300813008, "obj2": 0.48697794081971696}, {"determining": "Min( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM_Server,( Max( ( FirstVNF_CPU - PN ),FirstVNF_RAM_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const / ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( CS - ( Max( ( MUM - MUM ),( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( ( MLU / MUC ) + RRSe ) ) )", "obj1": 0.4186991869918699, "obj2": 0.3133651159049902}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( MUC * DS ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 0.7215447154471545, "obj2": 0.1583580836512049}, {"determining": "( Min( ( ( ( Min( Min( DDR ,FirstVNF_CPU ) ,Min( ACS ,ACS ) ) / ( PN - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( CRS / CRS ) )", "choosing": "( ( MUR * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / DS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.2073170731707317, "obj2": 0.5881326369482037}, {"determining": "( RRS + Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - Min( ( BR * Max( MRS,( FirstVNF_RAM - MRS ) ) ) ,MRS ) ) ) ,( ARS - ( MDR / MDR ) ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( ( CS * MUR ) ,MLU ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.4715447154471545, "obj2": 0.2791332690175777}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MLU,MUR ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * RMSe ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( CS,Min( MUR ,DS ) ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( MUM * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.7378048780487805, "obj2": 0.12647903935526786}, {"determining": "Min( Max( ( DDR - Max( RRS,FirstVNF_RAM ) ),( FirstVNF_Mem_Server / Min( Min( FirstVNF_RAM_Server ,( DDR / FirstVNF_CPU_Server ) ) ,PN ) ) ) ,( Const - Max( ( FirstVNF_Mem - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( RCSe + MLU ) / Min( RRSe ,MUC ) ) ,MUR ) / ( ( ( MUR - RMSe ) - ( RCSe / MUM ) ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MLU / CS ) ) )", "obj1": 0.6016260162601627, "obj2": 0.21675608712092245}, {"determining": "( ( ( ( BR / FirstVNF_CPU_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,Const ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - ( MUM / MUC ) ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - MLU ) ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - ( MUM + MLU ) )", "obj1": 0.22764227642276422, "obj2": 0.5830403492819383}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - FirstVNF_CPU_Server ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( ( ( MLU - Max( MLU,MUR ) ) - MUR ) ,( Max( RMSe,MUC ) * MUM ) ) - ( RMSe / ( ( ( ( MUR * RMSe ) - Max( DS,MLU ) ) - MUC ) + ( RRSe + Max( CS,Min( MUR ,DS ) ) ) ) ) ) - MUM ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.25609756097560976, "obj2": 0.5416903646742103}, {"determining": "( Min( DDR ,Const ) + ( Max( Min( FirstVNF_CPU ,Const ),ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe / ( DS - Min( RMSe ,MUR ) ) ) * ( Min( MUM ,( CS * DS ) ) * ( Max( Max( ( RRSe * MUM ),( Max( MUC,DS ) * MUM ) ),Min( MUR ,CS ) ) - CS ) ) )", "obj1": 0.3394308943089431, "obj2": 0.4784765207567307}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS + FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / ( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN * FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_Mem_Server * Max( ACS,ARS ) ) * ( BR / CRS ) ),BR ) ) ) ) )", "choosing": "( ( ( RCSe + Min( MUR ,MLU ) ) / RMSe ) * ( MUR * RCSe ) )", "obj1": 0.8658536585365854, "obj2": 0.06599096529479097}, {"determining": "Min( Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( Max( CS,CS ) * ( Min( Min( RCSe ,DS ) ,Min( ( RRSe * MLU ) ,MUR ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.5040650406504065, "obj2": 0.2740535382277911}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Max( Const,ARS ) - Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( ( MLU - Max( ( MUM * RRSe ),MUC ) ) - CS ) ) )", "obj1": 0.30691056910569103, "obj2": 0.5077654782267088}, {"determining": "( Min( ARS ,FirstVNF_RAM ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( RCSe / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.25203252032520324, "obj2": 0.5664278468516343}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - ARS ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.20528455284552846, "obj2": 0.6160544493775286}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ARS - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( ( ( ( DS + MUM ) + RCSe ) + ( MLU / RRSe ) ) - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6311916689391569}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.40447154471544716, "obj2": 0.3251611996705768}, {"determining": "( ( ( Max( Max( ( MDR * FirstVNF_RAM ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + ARS )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS * ( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( MUM ,( CS - DS ) ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.241869918699187, "obj2": 0.5702773435435005}, {"determining": "( Min( ( Max( Min( ( ( ACS - BR ) * ( RRS - FirstVNF_Mem_Server ) ) ,AMS ),FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,ACS ) ) ,FirstVNF_RAM ) - MDR )", "choosing": "( ( Min( RMSe ,( MUM - CS ) ) - MLU ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.27439024390243905, "obj2": 0.5413745214769174}, {"determining": "Min( Max( ARS,( ACS - MDR ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( CS + RCSe ) ) ) * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.6565040650406504, "obj2": 0.19062217610459775}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 0.6382113821138211, "obj2": 0.20109572553709545}, {"determining": "( Min( ( Max( Min( ( ( ACS - BR ) * ( RRS - FirstVNF_Mem_Server ) ) ,Min( FirstVNF_RAM_Server ,AMS ) ),FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,ACS ) ) ,FirstVNF_RAM ) - ( ( ACS - BR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( RMSe ,DS ) - MLU ) - ( ( ( Max( RCSe,RCSe ) * Max( CS,RMSe ) ) - ( ( CS * CS ) * ( Min( RCSe ,DS ) - MLU ) ) ) + CS ) )", "obj1": 0.2865853658536585, "obj2": 0.5312428198907972}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - Min( ( FirstVNF_CPU_Server * AMS ) ,Min( CRS ,FirstVNF_RAM ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUC / MLU ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.1991869918699187, "obj2": 0.6211421523501633}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( Const - MDR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( RCSe - MUR ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.5060975609756098, "obj2": 0.26215363547920206}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( Const - MDR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( ( MLU - Max( ( MUM * RRSe ),MUC ) ) - CS ) ) )", "obj1": 0.4735772357723577, "obj2": 0.2770165504198181}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem * ( BR - DDR ) ) ,( FirstVNF_Mem_Server + ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( DS * ( ( ( DS - CS ) - RMSe ) * DS ) ) / ( ( MUM + RCSe ) + ( ( MUM + MUM ) / RRSe ) ) )", "obj1": 0.36585365853658536, "obj2": 0.38705983271267563}, {"determining": "( Max( Const,FirstVNF_RAM_Server ) + ( CRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "Min( Min( DS ,( ( Min( CS ,MUR ) * DS ) + ( ( ( MUM / ( MLU - ( MUM + DS ) ) ) + Min( MLU ,RRSe ) ) - RCSe ) ) ) ,( ( ( ( MUC * DS ) / Max( CS,RCSe ) ) * ( DS * ( DS * ( ( DS - CS ) - RMSe ) ) ) ) * RRSe ) )", "obj1": 0.12804878048780488, "obj2": 0.710403546194656}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( ( ( MUM + RCSe ) + ( MLU / RRSe ) ) - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.18089430894308944, "obj2": 0.628541834049714}], "10": [{"determining": "( ( ( Max( Max( Max( Min( Const ,FirstVNF_RAM ),PN ),ARS ),PN ) - FirstVNF_Mem_Server ) + Min( Const ,MRS ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( MUM * ( CS / RMSe ) ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ) - Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,RRS ) ) ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server / CRS ) )", "choosing": "Min( ( Min( Min( RMSe ,( ( Min( ( RMSe * MUM ) ,( MLU / DS ) ) - Min( MUC ,Max( RCSe,MUM ) ) ) + MUC ) ) ,MUM ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( ( BR - MRS ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * ( RRSe * ( ( CS - ( Min( MUM ,MUC ) + DS ) ) + Min( MUR ,MLU ) ) ) ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( ( CS - RRSe ) * CS ) * ( Min( ( ( DS / CS ) * MUM ) ,( ( MLU + MUR ) / MUC ) ) - MLU ) ) ) - MLU ) )", "obj1": 0.7032520325203252, "obj2": 0.12467977715468577}, {"determining": "( ( Const - DDR ) + ( ( MRS + ( AMS + FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( ( DS - CS ) ,Min( RRSe ,( ( CS + CS ) + ( MLU * RRSe ) ) ) ) + MUM ) ,MUR ) / Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Max( MUC,MUR ) + CS ) ) + Min( Min( CS ,MLU ) ,( ( MUM + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) )", "obj1": 0.2459349593495935, "obj2": 0.5291370631982157}, {"determining": "( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - Min( ( ( CS / CS ) * MUM ) ,( ( MLU + MUR ) / MUC ) ) ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.3008130081300813, "obj2": 0.48241994683452427}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_RAM - ( ( DDR - PN ) * MRS ) ) ) )", "choosing": "( Max( DS,MUM ) - ( ( Max( CS,DS ) - ( ( CS + CS ) * ( Min( Min( RCSe ,DS ) ,Min( ( RRSe * MLU ) ,MUR ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.7723577235772358, "obj2": 0.07626065088855517}, {"determining": "( Min( DDR ,Const ) + ( Max( Min( FirstVNF_CPU ,Const ),ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe / ( DS - Min( RMSe ,MUR ) ) ) * ( Min( MUM ,( CS * DS ) ) * ( Max( Max( ( RRSe * MUM ),( Max( MUC,DS ) * MUM ) ),Min( MUR ,CS ) ) - CS ) ) )", "obj1": 0.3394308943089431, "obj2": 0.4784765207567307}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( BR + DDR ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - Max( CRS,FirstVNF_RAM ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( DS * ( ( MUR - MUM ) * ( ( RCSe - RMSe ) + ( Max( DS,CS ) / Min( Min( DS ,RRSe ) ,Min( DS ,( RRSe - RRSe ) ) ) ) ) ) ) / ( ( MUM + RCSe ) + ( MLU / RRSe ) ) )", "obj1": 0.3475609756097561, "obj2": 0.407086370666586}, {"determining": "( ( ( ( MDR - MRS ) * MDR ) * Min( RRS ,FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_Mem ,PN ) ,Max( DDR,MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( Min( CS ,( Max( ( MLU / ( DS - DS ) ),( ( ( CS * DS ) + RMSe ) * Min( CS ,RRSe ) ) ) + ( Min( ( ( RCSe * RMSe ) * Max( MUM,MUR ) ) ,( CS / ( MUC + MLU ) ) ) * RMSe ) ) ) * ( ( ( ( MLU + DS ) - RCSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.733739837398374, "obj2": 0.09169576533032314}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,RCSe ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MUC / CS ) ) )", "obj1": 0.6829268292682927, "obj2": 0.18545280023561733}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( MRS + ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,AMS ) * MRS ),( PN / MRS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RCSe * RMSe ) / Min( ( MUM / RRSe ) ,( ( MLU * ( MUM / ( ( ( MLU * MUR ) + MUR ) - ( RMSe - CS ) ) ) ) / ( DS + ( RMSe + RCSe ) ) ) ) )", "obj1": 0.5630081300813008, "obj2": 0.23748031797305916}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( Const / MDR ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "( Min( DS ,( DS * RCSe ) ) * ( MUM + DS ) )", "obj1": 0.8556910569105691, "obj2": 0.07223849208060475}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( ( ( Max( Max( ( MDR * FirstVNF_RAM ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,MUM ) - ( Min( MUM ,( CS - DS ) ) * MUR ) )", "obj1": 0.8902439024390244, "obj2": 0.054823949047868255}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM * CRS ) + ( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + RRSe ) ) )", "obj1": 0.3780487804878049, "obj2": 0.364263744939961}, {"determining": "Min( Max( ( Min( ( FirstVNF_RAM_Server / ( Const - MDR ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ACS * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( DS * MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( DS ,Min( RCSe ,Max( MLU,RCSe ) ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.516260162601626, "obj2": 0.25190523649244007}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_RAM_Server ,( Const - MDR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) ) ,PN ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / CS ) ) )", "obj1": 0.6321138211382114, "obj2": 0.19338863861944952}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ) - Min( ( Const - ARS ) ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUC ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.23577235772357724, "obj2": 0.5634730930598265}, {"determining": "( ( ( Max( Max( ( MDR * FirstVNF_RAM ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( ( DDR - BR ) - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( Min( RCSe ,DS ) ,( CS - DS ) ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.9329268292682927, "obj2": 0.04194099312488906}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,( ( BR / Max( CRS,FirstVNF_RAM ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( RMSe ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( Max( CS,DS ) - ( RRSe / RCSe ) ) - RMSe ) * ( MUC * DS ) ) ) ) * RRSe ) )", "obj1": 0.14634146341463414, "obj2": 0.6921834564491768}, {"determining": "Min( ( ( ( FirstVNF_RAM * ( DDR - MRS ) ) - MRS ) * MRS ) ,( ARS - ( MDR / ACS ) ) )", "choosing": "( Min( ( Min( MUM ,Max( CS,DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( Min( MLU ,RRSe ) + CS ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.40040650406504064, "obj2": 0.33587577954076236}, {"determining": "Min( Max( ( DDR - Max( RRS,FirstVNF_RAM ) ),( FirstVNF_Mem_Server / Min( Min( FirstVNF_RAM_Server ,( DDR / FirstVNF_CPU_Server ) ) ,PN ) ) ) ,( Const - Max( ( FirstVNF_Mem - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( RCSe + MLU ) / Min( RRSe ,MUC ) ) ,MUR ) / ( ( ( MUR - RMSe ) - ( RCSe / MUM ) ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MLU / CS ) ) )", "obj1": 0.6016260162601627, "obj2": 0.21675608712092245}, {"determining": "( Min( ( ( ( Min( Min( DDR ,FirstVNF_CPU ) ,Min( ACS ,ACS ) ) / ( PN - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( CRS / CRS ) )", "choosing": "( ( MUR * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / DS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.2073170731707317, "obj2": 0.5881326369482037}, {"determining": "( Max( Const,FirstVNF_RAM_Server ) + ( CRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "Min( Min( DS ,( ( Min( CS ,MUR ) * DS ) + ( ( ( MUM / ( MLU - ( MUM + DS ) ) ) + Min( MLU ,RRSe ) ) - RCSe ) ) ) ,( ( ( ( MUC * DS ) / Max( CS,RCSe ) ) * ( DS * ( DS * ( ( DS - CS ) - RMSe ) ) ) ) * RRSe ) )", "obj1": 0.12804878048780488, "obj2": 0.710403546194656}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.9349593495934959, "obj2": 0.023619611736993475}, {"determining": "( Min( DDR ,Const ) + ( Max( Min( FirstVNF_CPU ,Const ),ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe / ( DS - Min( RMSe ,MUR ) ) ) * ( Min( MUM ,( CS * DS ) ) * ( Max( Max( ( RRSe * MUM ),( Max( MUC,DS ) * MUM ) ),Min( MUR ,CS ) ) - CS ) ) )", "obj1": 0.9695121951219512, "obj2": 0.019635139911868316}, {"determining": "Min( Max( ARS,( ACS - MDR ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( CS + RCSe ) ) ) * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.6565040650406504, "obj2": 0.19062217610459775}, {"determining": "( ( ( ( BR / FirstVNF_CPU_Server ) / Max( Const,MDR ) ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,Const ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - ( MUM / MUC ) ) - ( ( CS * CS ) * ( Min( RMSe ,DS ) - MLU ) ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - ( MUM + MLU ) )", "obj1": 0.22764227642276422, "obj2": 0.5830403492819383}, {"determining": "( Min( ARS ,FirstVNF_RAM ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.1951219512195122, "obj2": 0.6152608002854639}, {"determining": "Min( Max( ( Min( Min( BR ,ARS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( CS * DS ) ) * Max( ( MLU - Max( ( MLU * RRSe ),MUC ) ),CS ) ) * ( ( MLU * DS ) / ( DS - RCSe ) ) )", "obj1": 0.4695121951219512, "obj2": 0.28437225380560865}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - FirstVNF_Mem_Server ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,( CS * DS ) ) * ( ( Max( ( MUM - MUM ),( RMSe + CS ) ) + Min( Min( DS ,MUR ) ,( ( ( CS + RMSe ) + MUC ) - MUC ) ) ) - CS ) ) )", "obj1": 0.1483739837398374, "obj2": 0.6628060771325673}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS + FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / ( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN * FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_Mem_Server * Max( ACS,ARS ) ) * ( BR / CRS ) ),BR ) ) ) ) )", "choosing": "( ( ( RCSe + Min( MUR ,MLU ) ) / RMSe ) * ( MUR * RCSe ) )", "obj1": 0.8658536585365854, "obj2": 0.06599096529479097}, {"determining": "( ( FirstVNF_CPU + CRS ) + Min( ARS ,Const ) )", "choosing": "Min( ( Min( ( MUC / MLU ) ,MUM ) + Min( Min( RMSe ,RCSe ) ,Min( MUC ,RRSe ) ) ) ,( Min( CS ,( ( ( ( MLU / MUC ) * MUC ) - ( Max( Max( MUM,CS ),MUR ) / ( Max( MUC,RMSe ) + ( MUM / RCSe ) ) ) ) - MUM ) ) + Min( CS ,CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.009339589268900453}, {"determining": "Min( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ),( DDR - Max( ( ARS / FirstVNF_Mem ),PN ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( MUC * MLU ) / Max( CS,RCSe ) ) ,MUR ) / ( ( CS + CS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUC / CS ) ,( RRSe + ( MUM - ( MUC / MUC ) ) ) ) )", "obj1": 0.5914634146341463, "obj2": 0.22345801369220478}, {"determining": "Min( ( Max( PN,( FirstVNF_CPU * CRS ) ) / ( Max( MDR,Max( MDR,( FirstVNF_CPU * RRS ) ) ) + MRS ) ) ,( ( Max( AMS,BR ) * Max( ARS,FirstVNF_Mem_Server ) ) + BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + CS ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( RRSe - ( MUR + ( RMSe + ( ( MUR - DS ) / ( ( MLU / DS ) / ( RRSe - MUR ) ) ) ) ) ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7226469070389889}, {"determining": "( ( DDR - BR ) + Max( ( ( CRS - FirstVNF_CPU ) - ( ARS - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( MUC ,MUR ) ,MUR ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.16056910569105692, "obj2": 0.6508144597255006}, {"determining": "Min( Max( Min( ( Max( Min( ( ( ACS - BR ) / ( RRS - FirstVNF_Mem_Server ) ) ,AMS ),FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,ACS ) ) ,FirstVNF_RAM ),Max( MDR,FirstVNF_Mem_Server ) ) ,( MRS * ARS ) )", "choosing": "( Min( Min( MLU ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( MUR * RMSe ) * RMSe ) * ( MUC * MUR ) ) ) ) * RRSe ) ) / ( ( MUM + DS ) + ( ( MUC / DS ) * Max( ( MUR / DS ),( DS * ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.3638211382113821, "obj2": 0.3929082088726046}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - CS ) - CS ) * ( MUC * MUR ) ) ) ) * RRSe ) ) / ( ( MUM + DS ) + ( ( MUC / DS ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) ) )", "obj1": 0.37601626016260165, "obj2": 0.3869656713803715}, {"determining": "( RRS + Min( Max( ( FirstVNF_RAM / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( Min( RCSe ,( CS * CS ) ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.4898373983739837, "obj2": 0.27359562055873143}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( Const - MDR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Max( DS,MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( RCSe - MUR ) ,DS ) - MLU ) ) ) + MUC ) )", "obj1": 0.5060975609756098, "obj2": 0.26215363547920206}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( RCSe / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.4410569105691057, "obj2": 0.3005132855898479}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,( RRS - FirstVNF_CPU_Server ) ) ),( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) / ( CS - ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) ) ) ,MUR ) / ( Max( RMSe,MLU ) / DS ) )", "obj1": 0.4247967479674797, "obj2": 0.3106555021469644}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ARS - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( ( ( ( DS + MUM ) + RCSe ) + ( MLU / RRSe ) ) - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.19308943089430894, "obj2": 0.6226195448437057}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - Max( ( Min( Min( FirstVNF_RAM_Server ,MDR ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ARS - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( ( ( ( DS + MUM ) + RCSe ) + Min( Min( RCSe ,DS ) ,Min( ( RRSe * MLU ) ,MUR ) ) ) - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6311916689391569}, {"determining": "Min( Max( ( ( PN + ( ( Const + FirstVNF_RAM ) * Const ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS + ( MDR / MDR ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( MUC * DS ) ) * ( ( MLU - Max( ( MUM * RRSe ),( Max( RMSe,( MLU / RRSe ) ) * ( RMSe - Max( MUR,RCSe ) ) ) ) ) - CS ) ) )", "obj1": 0.49390243902439024, "obj2": 0.2632276539472372}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( ARS - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( ( ( MUM + RCSe ) + ( MLU / RRSe ) ) - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.18089430894308944, "obj2": 0.628541834049714}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( Const,ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.43902439024390244, "obj2": 0.3039960658654117}, {"determining": "( Max( ( ( CRS - FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ),( FirstVNF_CPU_Server - PN ) ) + ( DDR - BR ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.1524390243902439, "obj2": 0.6517667161779895}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( Const - MDR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( ( MLU - Max( ( MUM * RRSe ),MUC ) ) - CS ) ) )", "obj1": 0.4735772357723577, "obj2": 0.2770165504198181}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( Const,ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.4410569105691057, "obj2": 0.3005132855898479}], "11": [{"determining": "Min( Max( ( DDR - Max( RRS,FirstVNF_RAM ) ),( FirstVNF_Mem_Server / Min( Min( FirstVNF_RAM_Server ,( DDR / FirstVNF_CPU_Server ) ) ,PN ) ) ) ,( Const - Max( ( FirstVNF_Mem - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( RCSe + MLU ) / Min( RRSe ,MUC ) ) ,MUR ) / ( ( ( MUR - RMSe ) - ( RCSe / MUM ) ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( Max( Min( Const ,FirstVNF_RAM ),PN ),ARS ),PN ) - FirstVNF_Mem_Server ) + Min( Const ,MRS ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "( ( MLU * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( MUM * ( CS / RMSe ) ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "Min( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( RRSe * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MUC / CS ) ) )", "obj1": 0.7723577235772358, "obj2": 0.07580043393899365}, {"determining": "( Min( DDR ,Const ) + ( Max( Min( FirstVNF_CPU ,Const ),ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe / ( DS - Min( RMSe ,MUR ) ) ) * ( Min( MUM ,( CS * DS ) ) * ( Max( Max( ( RRSe * MUM ),( Max( MUC,DS ) * MUM ) ),Min( MUR ,CS ) ) - CS ) ) )", "obj1": 0.3394308943089431, "obj2": 0.4784765207567307}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( ( BR - MRS ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * ( RRSe * ( ( CS - ( Min( MUM ,MUC ) + DS ) ) + Min( MUR ,MLU ) ) ) ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( ( CS - RRSe ) * CS ) * ( Min( ( ( DS / CS ) * MUM ) ,( ( MLU + MUR ) / MUC ) ) - MLU ) ) ) - MLU ) )", "obj1": 0.7032520325203252, "obj2": 0.12467977715468577}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / ( RRS * ACS ) ) ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - RRS ) ) ,( ( MDR / MDR ) - ARS ) )", "choosing": "( ( DS * ( ( ( ( Min( RCSe ,DS ) - MLU ) - CS ) - RMSe ) + DS ) ) / ( MLU * MUM ) )", "obj1": 0.34552845528455284, "obj2": 0.4063797727809003}, {"determining": "( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - Min( ( ( CS / CS ) * MUM ) ,( ( MLU + MUR ) / MUC ) ) ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.2926829268292683, "obj2": 0.5291089121326258}, {"determining": "( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - Min( ( ( CS / CS ) * MUM ) ,( ( MLU + MUR ) / MUC ) ) ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.3008130081300813, "obj2": 0.48241994683452427}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS - FirstVNF_CPU ) ,( ( MDR + FirstVNF_Mem_Server ) / ( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ( ( Const / MDR ) + ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) - ACS ) ) ) ) ) )", "choosing": "( Min( DS ,( DS * RCSe ) ) * ( MUM + DS ) )", "obj1": 0.8556910569105691, "obj2": 0.07223849208060475}, {"determining": "( ( Const - DDR ) + ( ( MRS + ( AMS + FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( ( DS - CS ) ,Min( RRSe ,( ( CS + CS ) + ( MLU * RRSe ) ) ) ) + MUM ) ,MUR ) / Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Max( MUC,MUR ) + CS ) ) + Min( Min( CS ,MLU ) ,( ( MUM + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) )", "obj1": 0.2459349593495935, "obj2": 0.5291370631982157}, {"determining": "Min( Max( ( PN / ( DDR + CRS ) ),( DDR - Max( RRS,PN ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( CS + CS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUM + ( MUM - ( Max( Max( MUM,CS ),MUR ) / ( Max( MUC,RMSe ) + ( MUM / MUC ) ) ) ) ) ,( MUC / CS ) ) )", "obj1": 0.6991869918699187, "obj2": 0.17633027521031314}, {"determining": "( Min( ( ( ( Min( Min( DDR ,FirstVNF_CPU ) ,Min( ACS ,ACS ) ) / ( PN - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( CRS / CRS ) )", "choosing": "( ( MUR * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / DS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.2073170731707317, "obj2": 0.5881326369482037}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,( ( BR / Max( CRS,FirstVNF_RAM ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( RMSe ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( Max( CS,DS ) - ( RRSe / RCSe ) ) - RMSe ) * ( MUC * DS ) ) ) ) * RRSe ) )", "obj1": 0.14634146341463414, "obj2": 0.6921834564491768}, {"determining": "( ( FirstVNF_CPU + CRS ) + Min( ARS ,Const ) )", "choosing": "Min( ( Min( ( MUC / MLU ) ,MUM ) + Min( Min( RMSe ,RCSe ) ,Min( MUC ,RRSe ) ) ) ,( Min( CS ,( ( ( ( MLU / MUC ) * MUC ) - ( Max( Max( MUM,CS ),MUR ) / ( Max( MUC,RMSe ) + ( MUM / RCSe ) ) ) ) - MUM ) ) + Min( CS ,CS ) ) )", "obj1": 0.9796747967479674, "obj2": 0.009339589268900453}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_RAM_Server ,( Const - MDR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) ) ,PN ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / CS ) ) )", "obj1": 0.6321138211382114, "obj2": 0.19338863861944952}, {"determining": "( ( ( Max( Max( ( MDR * FirstVNF_RAM ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( ( DDR - BR ) - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( Min( RCSe ,DS ) ,( CS - DS ) ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.9329268292682927, "obj2": 0.04194099312488906}, {"determining": "( ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_Mem ,PN ) ,( MDR + Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MLU ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.7296747967479674, "obj2": 0.09223208924707078}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ) - Min( ( Const - ARS ) ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUC ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.23577235772357724, "obj2": 0.5634730930598265}, {"determining": "( Min( ARS ,FirstVNF_RAM ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.1951219512195122, "obj2": 0.6152608002854639}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( BR + DDR ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 0.5487804878048781, "obj2": 0.25060195590337636}, {"determining": "( Max( Const,FirstVNF_RAM_Server ) + ( CRS * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) )", "choosing": "Min( Min( DS ,( ( Min( CS ,MUR ) * DS ) + ( ( ( MUM / ( MLU - ( MUM + DS ) ) ) + Min( MLU ,RRSe ) ) - RCSe ) ) ) ,( ( ( ( MUC * DS ) / Max( CS,RCSe ) ) * ( DS * ( DS * ( ( DS - CS ) - RMSe ) ) ) ) * RRSe ) )", "obj1": 0.12804878048780488, "obj2": 0.710403546194656}, {"determining": "( ( ( ( MDR - MRS ) * MDR ) * Min( RRS ,FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_Mem ,PN ) ,Max( DDR,MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( Min( CS ,( Max( ( MLU / ( DS - DS ) ),( ( ( CS * DS ) + RMSe ) * Min( CS ,RRSe ) ) ) + ( Min( ( ( RCSe * RMSe ) * Max( MUM,MUR ) ) ,( CS / ( MUC + MLU ) ) ) * RMSe ) ) ) * ( ( ( ( MLU + DS ) - RCSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.733739837398374, "obj2": 0.09169576533032314}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9410569105691057, "obj2": 0.018866334263645018}, {"determining": "Min( Max( ( Min( Min( BR ,ARS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( CS * DS ) ) * Max( ( MLU - Max( ( MLU * RRSe ),MUC ) ),CS ) ) * ( ( MLU * DS ) / ( DS - RCSe ) ) )", "obj1": 0.4695121951219512, "obj2": 0.28437225380560865}, {"determining": "Min( Max( ARS,( ACS - MDR ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( CS + RCSe ) ) ) * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.6565040650406504, "obj2": 0.19062217610459775}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( MRS + ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,AMS ) * MRS ),( PN / MRS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RCSe * RMSe ) / Min( ( MUM / RRSe ) ,( ( MLU * ( MUM / ( ( ( MLU * MUR ) + MUR ) - ( RMSe - CS ) ) ) ) / ( DS + ( RMSe + RCSe ) ) ) ) )", "obj1": 0.5630081300813008, "obj2": 0.23748031797305916}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,RCSe ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MUC / CS ) ) )", "obj1": 0.6829268292682927, "obj2": 0.18545280023561733}, {"determining": "( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.3719512195121951, "obj2": 0.3564658269228604}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( RCSe - CS ) ) )", "obj1": 0.6117886178861789, "obj2": 0.21552800789180612}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / ( ( ( BR - RRS ) / MRS ) * CRS ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( Max( ( MUC - MLU ),DS ) + ( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5708831152191715}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( ( ( Max( Max( ( MDR * FirstVNF_RAM ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.8963414634146342, "obj2": 0.05273940068264436}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - FirstVNF_Mem_Server ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,( CS * DS ) ) * ( ( Max( ( MUM - MUM ),( RMSe + CS ) ) + Min( Min( DS ,MUR ) ,( ( ( CS + RMSe ) + MUC ) - MUC ) ) ) - CS ) ) )", "obj1": 0.1483739837398374, "obj2": 0.6628060771325673}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS + FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / ( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN * FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_Mem_Server * Max( ACS,ARS ) ) * ( BR / CRS ) ),BR ) ) ) ) )", "choosing": "( ( ( RCSe + Min( MUR ,MLU ) ) / RMSe ) * ( MUR * RCSe ) )", "obj1": 0.8658536585365854, "obj2": 0.06599096529479097}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM * CRS ) + ( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( ARS - ( MDR / MDR ) ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.39634146341463417, "obj2": 0.34248740008576467}, {"determining": "Min( Max( Min( ( Max( Min( ( Max( Const,ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,AMS ),FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,ACS ) ) ,FirstVNF_RAM ),Max( MDR,FirstVNF_Mem_Server ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( MUR - CS ) - CS ) * ( MUC * MUR ) ) ) ) * RRSe ) ) / ( ( MUM + DS ) + ( ( MUC / DS ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) ) )", "obj1": 0.3678861788617886, "obj2": 0.3680541830684119}, {"determining": "Min( Max( ( Min( ( FirstVNF_RAM_Server / ( Const - MDR ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ACS * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( DS * MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( DS ,Min( RCSe ,Max( MLU,RCSe ) ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.516260162601626, "obj2": 0.25190523649244007}, {"determining": "Min( ( Max( PN,( FirstVNF_CPU * CRS ) ) / ( Max( MDR,Max( MDR,( FirstVNF_CPU * RRS ) ) ) + MRS ) ) ,( ( Max( AMS,BR ) * Max( ARS,FirstVNF_Mem_Server ) ) + BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + CS ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( RRSe - ( MUR + ( RMSe + ( ( MUR - DS ) / ( ( MLU / DS ) / ( RRSe - MUR ) ) ) ) ) ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) )", "obj1": 0.11991869918699187, "obj2": 0.7226469070389889}, {"determining": "Min( Max( Min( ( Max( Min( ( ( ACS - BR ) / ( RRS - FirstVNF_Mem_Server ) ) ,AMS ),FirstVNF_Mem ) * Max( FirstVNF_CPU_Server,ACS ) ) ,FirstVNF_RAM ),Max( MDR,FirstVNF_Mem_Server ) ) ,( MRS * ARS ) )", "choosing": "( Min( Min( MLU ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( MUR * RMSe ) * RMSe ) * ( MUC * MUR ) ) ) ) * RRSe ) ) / ( ( MUM + DS ) + ( ( MUC / DS ) * Max( ( MUR / DS ),( DS * ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.3638211382113821, "obj2": 0.3929082088726046}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( ( ( Max( Max( ( MDR * FirstVNF_RAM ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,MUM ) - ( Min( MUM ,( CS - DS ) ) * MUR ) )", "obj1": 0.8902439024390244, "obj2": 0.054823949047868255}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( Const - MDR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MUC / CS ) ) )", "obj1": 0.5813008130081301, "obj2": 0.2281414176776963}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.4105691056910569, "obj2": 0.3188164581817932}, {"determining": "( ( ( Max( ( FirstVNF_RAM - ( MDR - DDR ) ),MRS ) + ( FirstVNF_Mem - CRS ) ) + Min( Max( FirstVNF_CPU,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - Min( RMSe ,CS ) ) + Min( Min( ( MUM * MUM ) ,Min( MUC ,MUR ) ) ,( DS + Max( RRSe,RRSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( RRSe,RCSe ) ) ,MUR ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6269297775253446}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,( RRS - FirstVNF_CPU_Server ) ) ),( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) / ( CS - ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) ) ) ,MUR ) / ( Max( RMSe,MLU ) / DS ) )", "obj1": 0.4247967479674797, "obj2": 0.3106555021469644}, {"determining": "( ( DDR - BR ) + Max( ( ( CRS - FirstVNF_CPU ) - ( ARS - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,AMS ) / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( MUC ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,( MUM + ( MUM - ( MUC / MUC ) ) ) ) ) ,MUR ) ) )", "obj1": 0.17073170731707318, "obj2": 0.6446432153820328}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.9349593495934959, "obj2": 0.023619611736993475}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( ARS - Max( Max( DDR,PN ),ARS ) ) ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,( CS * DS ) ) * ( ( MUC / MUC ) - ( Max( ( MUM - MUM ),( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) ) ) )", "obj1": 0.18292682926829268, "obj2": 0.6215520072738205}, {"determining": "Min( ( Min( FirstVNF_RAM ,BR ) - ( ( FirstVNF_CPU / RRS ) + ARS ) ) ,Max( ( Min( Min( FirstVNF_Mem_Server ,( MRS + ACS ) ) ,DDR ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUM ) + CS ) ,DS ) * ( RRSe * ( Max( MUM,Min( ( ( MUM - RRSe ) - RCSe ) ,DS ) ) - ( ( MUC * RRSe ) - ( MUC - ( ( RCSe * DS ) + MUC ) ) ) ) ) ) / Min( ( ( ( Max( ( CS * ( CS / DS ) ),( Max( DS,DS ) - MLU ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.5873983739837398, "obj2": 0.22094823163787}, {"determining": "( Max( ( ( CRS - FirstVNF_CPU ) - ( FirstVNF_Mem / ARS ) ),( FirstVNF_CPU_Server - PN ) ) + ( DDR - BR ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.1524390243902439, "obj2": 0.6517667161779895}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( RCSe / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.4410569105691057, "obj2": 0.3005132855898479}], "12": [{"determining": "Min( ( ( ACS - BR ) / ( RRS - FirstVNF_Mem_Server ) ) ,( ( Max( AMS,BR ) * Max( ARS,FirstVNF_Mem_Server ) ) + BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + CS ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( ( MUC / DS ) * Max( ( MUR / DS ),( DS * ( RCSe + RCSe ) ) ) ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( DDR - Max( RRS,FirstVNF_RAM ) ),( FirstVNF_Mem_Server / Min( Min( FirstVNF_RAM_Server ,( DDR / FirstVNF_CPU_Server ) ) ,PN ) ) ) ,( Const - Max( ( FirstVNF_Mem - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( RCSe + MLU ) / Min( RRSe ,MUC ) ) ,MUR ) / ( ( ( MUR - RMSe ) - ( RCSe / MUM ) ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / ( RRS * ACS ) ) ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - RRS ) ) ,( ( MDR / MDR ) - ARS ) )", "choosing": "( ( DS * ( ( ( ( Min( RCSe ,DS ) - MLU ) - CS ) - RMSe ) + DS ) ) / ( MLU * MUM ) )", "obj1": 0.34552845528455284, "obj2": 0.4063797727809003}, {"determining": "( Min( DDR ,Const ) + ( Max( Min( FirstVNF_CPU ,Const ),ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe / ( DS - Min( RMSe ,MUR ) ) ) * ( Min( MUM ,( CS * DS ) ) * ( Max( Max( ( RRSe * MUM ),( Max( MUC,DS ) * MUM ) ),Min( MUR ,CS ) ) - CS ) ) )", "obj1": 0.3394308943089431, "obj2": 0.4784765207567307}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS + FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / ( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN * FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_Mem_Server * Max( ACS,ARS ) ) * ( BR / CRS ) ),BR ) ) ) ) )", "choosing": "( ( ( RCSe + Min( MUR ,MLU ) ) / RMSe ) * ( MUR * RCSe ) )", "obj1": 0.8658536585365854, "obj2": 0.06599096529479097}, {"determining": "( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - Min( ( ( CS / CS ) * MUM ) ,( ( MLU + MUR ) / MUC ) ) ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.3008130081300813, "obj2": 0.48241994683452427}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.2682926829268293, "obj2": 0.516965830508597}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( ( BR - MRS ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * ( RRSe * ( ( CS - ( Min( MUM ,MUC ) + DS ) ) + Min( MUR ,MLU ) ) ) ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( ( CS - RRSe ) * CS ) * ( Min( ( ( DS / CS ) * MUM ) ,( ( MLU + MUR ) / MUC ) ) - MLU ) ) ) - MLU ) )", "obj1": 0.7032520325203252, "obj2": 0.12467977715468577}, {"determining": "( Min( FirstVNF_RAM ,Min( FirstVNF_Mem ,PN ) ) - ( DDR + FirstVNF_CPU ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( RMSe ,CS ) / ( ( MUM + DS ) + ( MUC / DS ) ) ) ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / CS ) ) )", "obj1": 0.7886178861788617, "obj2": 0.07099703995596048}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( FirstVNF_Mem - MDR ) * Max( Max( BR,CRS ),CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUM - ( ( MLU - MUR ) / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( MUR / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.6646341463414634, "obj2": 0.138290557758293}, {"determining": "Min( Max( ARS,( ACS - MDR ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( CS + RCSe ) ) ) * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.6565040650406504, "obj2": 0.19062217610459775}, {"determining": "Min( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( RRSe * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUM + ( MUM - ( MUC / MUC ) ) ) ,( MUC / CS ) ) )", "obj1": 0.7723577235772358, "obj2": 0.07580043393899365}, {"determining": "( ( ( Max( ACS,FirstVNF_RAM_Server ) / MDR ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( Min( ( DS * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( MUC ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.11991869918699187, "obj2": 0.6980991279275803}, {"determining": "( Min( ( Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - FirstVNF_CPU_Server ) * ( ( Const - Min( DDR ,( Min( DDR ,FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe / DS ) ,( ( CS + MUC ) * ( ( Max( ( MLU + DS ),RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9735772357723578, "obj2": 0.007884556856572895}, {"determining": "( ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_Mem ,PN ) ,( MDR + Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MLU ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.7296747967479674, "obj2": 0.09223208924707078}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ) - Min( ( Const - ARS ) ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUC ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.23577235772357724, "obj2": 0.5634730930598265}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),BR ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( ( Max( FirstVNF_CPU,MRS ) * FirstVNF_RAM ) - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe / RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * ( MUR - Min( RMSe ,MUR ) ) ) )", "obj1": 0.35365853658536583, "obj2": 0.36795038545009157}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( BR + DDR ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) ,( ( RMSe / MUR ) * ( MUM - CS ) ) )", "obj1": 0.5487804878048781, "obj2": 0.25060195590337636}, {"determining": "( ( ( ( MDR - MRS ) * MDR ) * Min( RRS ,FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_Mem ,PN ) ,Max( DDR,MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( Min( CS ,( Max( ( MLU / ( DS - DS ) ),( ( ( CS * DS ) + RMSe ) * Min( CS ,RRSe ) ) ) + ( Min( ( ( RCSe * RMSe ) * Max( MUM,MUR ) ) ,( CS / ( MUC + MLU ) ) ) * RMSe ) ) ) * ( ( ( ( MLU + DS ) - RCSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.733739837398374, "obj2": 0.09169576533032314}, {"determining": "( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.3719512195121951, "obj2": 0.3564658269228604}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / RRS ) - ( ( MDR - BR ) * ( ( DDR + BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,Min( ( RRSe - MUC ) ,Min( RRSe ,CS ) ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( DS - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,Max( MUC,DS ) ) ) ) ) - CS ) ) )", "obj1": 0.9044715447154471, "obj2": 0.030798595812507792}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / ( ( ( BR - RRS ) / MRS ) * CRS ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( Max( ( MUC - MLU ),DS ) + ( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5708831152191715}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Min( BR ,Const ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( CS - ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( DS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.3882113821138211, "obj2": 0.33574971500172907}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - FirstVNF_Mem_Server ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( Min( MUM ,( CS * DS ) ) * ( ( Max( ( MUM - MUM ),( RMSe + CS ) ) + Min( Min( DS ,MUR ) ,( ( ( CS + RMSe ) + MUC ) - MUC ) ) ) - CS ) ) )", "obj1": 0.1483739837398374, "obj2": 0.6628060771325673}, {"determining": "( Min( ( ( ( Min( Min( DDR ,FirstVNF_CPU ) ,Min( ACS ,ACS ) ) / ( PN - FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( CRS / CRS ) )", "choosing": "( ( MUR * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / DS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.2073170731707317, "obj2": 0.5881326369482037}, {"determining": "( ( DDR - BR ) + Max( ( ( FirstVNF_RAM - CRS ) - ( Max( RRS,PN ) * Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,AMS ) / FirstVNF_Mem_Server ),( ( RRS / DDR ) * FirstVNF_CPU_Server ) ) ) ),Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),RRS ) ) )", "choosing": "( Min( ( ( CS * RMSe ) * ( ( ( ( MUM - CS ) - ( Min( DS ,MUR ) + CS ) ) + ( MUC / MUC ) ) - CS ) ) ,MUR ) / ( ( MUM - DS ) + Min( ( ( MUC * DS ) / Max( CS,( MUM + ( ( MUC / MUC ) - MUM ) ) ) ) ,MUR ) ) )", "obj1": 0.1910569105691057, "obj2": 0.6100509701109607}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( ( PN - AMS ) / FirstVNF_Mem_Server ) * ( MDR / ACS ) ) )", "choosing": "( ( DS * ( ( ( DS - CS ) / RMSe ) * DS ) ) / ( ( MUM + ( Min( RRSe ,MUC ) - Min( Max( MUR,MLU ) ,Min( MUR ,CS ) ) ) ) + ( MLU / RRSe ) ) )", "obj1": 0.676829268292683, "obj2": 0.13616059371903907}, {"determining": "( ( Const - DDR ) + ( ( MRS + ( AMS + FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( ( DS - CS ) ,Min( RRSe ,( ( CS + CS ) + ( MLU * RRSe ) ) ) ) + MUM ) ,MUR ) / Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Max( MUC,MUR ) + CS ) ) + Min( Min( CS ,MLU ) ,( ( MUM + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) )", "obj1": 0.2459349593495935, "obj2": 0.5291370631982157}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.4105691056910569, "obj2": 0.3188164581817932}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,( ( BR / Max( CRS,FirstVNF_RAM ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( RMSe ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( Max( CS,DS ) - ( RRSe / RCSe ) ) - RMSe ) * ( MUC * DS ) ) ) ) * RRSe ) )", "obj1": 0.14634146341463414, "obj2": 0.6921834564491768}, {"determining": "( ( DDR - BR ) + Max( ( ( CRS - FirstVNF_CPU ) - ( ARS - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,AMS ) / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( MUC ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,( MUM + ( MUM - ( MUC / MUC ) ) ) ) ) ,MUR ) ) )", "obj1": 0.17073170731707318, "obj2": 0.6446432153820328}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_RAM * CRS ) + ( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( ARS - ( MDR / MDR ) ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.46747967479674796, "obj2": 0.29980238498350154}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( ( ( Max( Max( ( MDR * FirstVNF_RAM ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,MUM ) - ( Min( MUM ,( CS - DS ) ) * MUR ) )", "obj1": 0.8902439024390244, "obj2": 0.054823949047868255}, {"determining": "Min( Max( ( Min( ( FirstVNF_RAM_Server / ( Const - MDR ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ACS * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( DS * MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( DS ,Min( RCSe ,Max( MLU,RCSe ) ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.516260162601626, "obj2": 0.25190523649244007}, {"determining": "Min( Max( ( Min( Min( BR ,ARS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( CS * DS ) ) * Max( ( MLU - Max( ( MLU * RRSe ),MUC ) ),CS ) ) * ( ( MLU * DS ) / ( DS - RCSe ) ) )", "obj1": 0.4695121951219512, "obj2": 0.28437225380560865}, {"determining": "Min( ( Min( FirstVNF_RAM ,BR ) - ( ( FirstVNF_CPU / RRS ) + ARS ) ) ,Max( ( Min( Min( FirstVNF_Mem_Server ,( MRS + ACS ) ) ,DDR ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUM ) + CS ) ,DS ) * ( RRSe * ( Max( MUM,Min( ( ( MUM - RRSe ) - RCSe ) ,DS ) ) - ( ( MUC * RRSe ) - ( MUC - ( ( RCSe * DS ) + MUC ) ) ) ) ) ) / Min( ( ( ( Max( ( CS * ( CS / DS ) ),( Max( DS,DS ) - MLU ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.5873983739837398, "obj2": 0.22094823163787}, {"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9451219512195121, "obj2": 0.017624444859958163}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( ( ( Max( Max( ( MDR * FirstVNF_RAM ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,MUM ) - ( Min( MUM ,( CS - DS ) ) * MUR ) )", "obj1": 0.8943089430894309, "obj2": 0.0498821558073967}, {"determining": "( Min( ARS ,ARS ) - ( CRS / Max( RRS,BR ) ) )", "choosing": "( ( RRSe / RCSe ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( Max( CS,DS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.2032520325203252, "obj2": 0.5960399802353331}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.39634146341463417, "obj2": 0.3299765433199099}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( RCSe - CS ) ) )", "obj1": 0.6117886178861789, "obj2": 0.21552800789180612}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem,( RRS - FirstVNF_CPU_Server ) ) ),( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) / ( CS - ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) ) ) ,MUR ) / ( Max( RMSe,MLU ) / DS ) )", "obj1": 0.4247967479674797, "obj2": 0.3106555021469644}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( MRS + ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,AMS ) * MRS ),( PN / MRS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RCSe * RMSe ) / Min( ( MUM / RRSe ) ,( ( MLU * ( MUM / ( ( ( MLU * MUR ) + MUR ) - ( RMSe - CS ) ) ) ) / ( DS + ( RMSe + RCSe ) ) ) ) )", "obj1": 0.5630081300813008, "obj2": 0.23748031797305916}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( Min( RCSe ,DS ) ,( CS - DS ) ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.9247967479674797, "obj2": 0.02624797629062638}, {"determining": "Min( Max( ( Min( ( FirstVNF_RAM_Server / ( Const - MDR ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ACS * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( DS * MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( DS ,Min( RCSe ,Max( MLU,RCSe ) ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.4878048780487805, "obj2": 0.2789975579806996}, {"determining": "( ( ( Max( ( FirstVNF_RAM - ( MDR - DDR ) ),MRS ) + ( FirstVNF_Mem - CRS ) ) + Min( Max( FirstVNF_CPU,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - Min( RMSe ,CS ) ) + Min( Min( ( MUM * MUM ) ,Min( MUC ,MUR ) ) ,( DS + Max( RRSe,RRSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( RRSe,RCSe ) ) ,MUR ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6269297775253446}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM * CRS ) + ( ( ( Min( Min( DDR ,FirstVNF_RAM_Server ) ,MRS ) * ( FirstVNF_RAM * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( ARS - ( FirstVNF_RAM_Server / MDR ) ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( Min( ( ( RCSe / CS ) * MUM ) ,DS ) + Min( Min( CS ,MUR ) ,( ( CS * CS ) - MUC ) ) ) / CS ) ) ,MUR ) / ( ( MLU + MUC ) + ( RCSe / ( MUR / ( MUR - RMSe ) ) ) ) )", "obj1": 0.5142276422764228, "obj2": 0.2607637752710372}, {"determining": "( ( DDR - Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.24796747967479674, "obj2": 0.5290496257343347}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - FirstVNF_Mem_Server ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.17886178861788618, "obj2": 0.6210191052610732}], "13": [{"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM * CRS ) + ( ( Min( Min( Min( Const ,FirstVNF_RAM_Server ) ,MRS ) ,( FirstVNF_RAM * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( ( FirstVNF_RAM_Server / MDR ) - ARS ) ) )", "choosing": "( Min( ( Max( ( Max( RCSe,( ( RMSe * MUM ) / ( MUR / MUC ) ) ) * RRSe ),MUC ) * ( ( Min( ( ( RCSe / CS ) * RCSe ) ,DS ) + Min( ( ( CS * CS ) - MUC ) ,Min( CS ,MUR ) ) ) / CS ) ) ,MUR ) / ( ( MLU + MUC ) + ( RCSe / ( MUR / ( MUR - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ACS - BR ) / ( RRS - FirstVNF_Mem_Server ) ) ,( ( Max( AMS,BR ) * Max( ARS,FirstVNF_Mem_Server ) ) + BR ) )", "choosing": "Max( ( ( Min( RCSe ,MLU ) + CS ) + ( Min( RCSe ,RCSe ) - RMSe ) ),( ( ( MUC / DS ) * Max( ( MUR / DS ),( DS * ( RCSe + RCSe ) ) ) ) * Max( ( DS * ( RCSe + RCSe ) ),( MUR / DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / ( RRS * ACS ) ) ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - RRS ) ) ,( ( MDR / MDR ) - ARS ) )", "choosing": "( ( DS * ( ( ( ( Min( RCSe ,DS ) - MLU ) - CS ) - RMSe ) + DS ) ) / ( MLU * MUM ) )", "obj1": 0.34552845528455284, "obj2": 0.4063797727809003}, {"determining": "Min( Max( ARS,( ACS - MDR ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( CS + RCSe ) ) ) * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.6565040650406504, "obj2": 0.19062217610459775}, {"determining": "( Min( DDR ,Const ) + ( Max( Min( FirstVNF_CPU ,Const ),ARS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe / ( DS - Min( RMSe ,MUR ) ) ) * ( Min( MUM ,( CS * DS ) ) * ( Max( Max( ( RRSe * MUM ),( Max( MUC,DS ) * MUM ) ),Min( MUR ,CS ) ) - CS ) ) )", "obj1": 0.3394308943089431, "obj2": 0.4784765207567307}, {"determining": "( ( FirstVNF_RAM + CRS ) + Min( ( RRS + FirstVNF_CPU ) ,( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / ( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN * FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) - Max( ( ( FirstVNF_Mem_Server * Max( ACS,ARS ) ) * ( BR / CRS ) ),BR ) ) ) ) )", "choosing": "( ( ( RCSe + Min( MUR ,MLU ) ) / RMSe ) * ( MUR * RCSe ) )", "obj1": 0.8658536585365854, "obj2": 0.06599096529479097}, {"determining": "( ( ( Max( ACS,FirstVNF_RAM_Server ) / MDR ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( Min( ( DS * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( MUC ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.11991869918699187, "obj2": 0.6980991279275803}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),BR ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( ( Max( FirstVNF_CPU,MRS ) * FirstVNF_RAM ) - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe / RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * ( MUR - Min( RMSe ,MUR ) ) ) )", "obj1": 0.35365853658536583, "obj2": 0.36795038545009157}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( FirstVNF_Mem - MDR ) * Max( Max( BR,CRS ),CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUM - ( ( MLU - MUR ) / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( MUR / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.6646341463414634, "obj2": 0.138290557758293}, {"determining": "( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - Min( ( ( CS / CS ) * MUM ) ,( ( MLU + MUR ) / MUC ) ) ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.3008130081300813, "obj2": 0.48241994683452427}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( ( BR - MRS ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * ( RRSe * ( ( CS - ( Min( MUM ,MUC ) + DS ) ) + Min( MUR ,MLU ) ) ) ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( ( CS - RRSe ) * CS ) * ( Min( ( ( DS / CS ) * MUM ) ,( ( MLU + MUR ) / MUC ) ) - MLU ) ) ) - MLU ) )", "obj1": 0.7032520325203252, "obj2": 0.12467977715468577}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( Min( BR ,MDR ) * ( Max( Min( PN ,MDR ),FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUR ,( Max( CS,( Min( ( ( MUC * DS ) * ( RRSe - MUC ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) / ( MUC * DS ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / CS ) ) )", "obj1": 0.790650406504065, "obj2": 0.07018192380715453}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,Max( FirstVNF_RAM,( ( BR / Max( CRS,FirstVNF_RAM ) ) * AMS ) ) ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Max( ARS,CRS ) )", "choosing": "Min( Min( RMSe ,RCSe ) ,( ( ( RCSe / MUC ) * ( DS * ( ( ( Max( CS,DS ) - ( RRSe / RCSe ) ) - RMSe ) * ( MUC * DS ) ) ) ) * RRSe ) )", "obj1": 0.14634146341463414, "obj2": 0.6921834564491768}, {"determining": "Min( ( Min( FirstVNF_RAM ,BR ) - ( ( FirstVNF_CPU / RRS ) + ARS ) ) ,Max( ( Min( Min( FirstVNF_Mem_Server ,( MRS + ACS ) ) ,DDR ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUM ) + CS ) ,DS ) * ( RRSe * ( Max( MUM,Min( ( ( MUM - RRSe ) - RCSe ) ,DS ) ) - ( ( MUC * RRSe ) - ( MUC - ( ( RCSe * DS ) + MUC ) ) ) ) ) ) / Min( ( ( ( Max( ( CS * ( CS / DS ) ),( Max( DS,DS ) - MLU ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.5873983739837398, "obj2": 0.22094823163787}, {"determining": "( ( FirstVNF_Mem - BR ) + ( FirstVNF_RAM_Server * Const ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUR ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - Min( ( ( CS / CS ) * MUM ) ,( ( MLU + MUM ) / MUC ) ) ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.5042739685215872}, {"determining": "( ( DDR - Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.1483739837398374, "obj2": 0.6564767225894318}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( MRS + ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,AMS ) * MRS ),( PN / MRS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RCSe * RMSe ) / Min( ( MUM / RRSe ) ,( ( MLU * ( MUM / ( ( ( MLU * MUR ) + MUR ) - ( RMSe - CS ) ) ) ) / ( DS + ( RMSe + RCSe ) ) ) ) )", "obj1": 0.5630081300813008, "obj2": 0.23748031797305916}, {"determining": "( ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_Mem ,PN ) ,( MDR + Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MLU ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.7296747967479674, "obj2": 0.09223208924707078}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ) - Min( ( Const - ARS ) ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUC ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.23577235772357724, "obj2": 0.5634730930598265}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.2682926829268293, "obj2": 0.516965830508597}, {"determining": "( Min( ( ACS - BR ) ,( ARS - ( MDR / MDR ) ) ) + Min( Min( ( DDR - FirstVNF_Mem ) ,PN ) ,FirstVNF_RAM ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( MLU + CS ) - MUC ) ,Min( CS ,MUR ) ) ) - CS ) ) ,MUR ) / ( DS / ( RCSe + RCSe ) ) )", "obj1": 0.5386178861788617, "obj2": 0.240619763989484}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - Min( Min( DDR ,FirstVNF_RAM_Server ) ,MRS ) ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.15040650406504066, "obj2": 0.6359971186619605}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / RRS ) - ( ( MDR - BR ) * ( ( DDR + BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,Min( ( RRSe - MUC ) ,Min( RRSe ,CS ) ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( DS - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,Max( MUC,DS ) ) ) ) ) - CS ) ) )", "obj1": 0.9044715447154471, "obj2": 0.030798595812507792}, {"determining": "( ( ( ( MDR - MRS ) * MDR ) * Min( RRS ,FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_Mem ,PN ) ,Max( DDR,MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( Min( CS ,( Max( ( MLU / ( DS - DS ) ),( ( ( CS * DS ) + RMSe ) * Min( CS ,RRSe ) ) ) + ( Min( ( ( RCSe * RMSe ) * Max( MUM,MUR ) ) ,( CS / ( MUC + MLU ) ) ) * RMSe ) ) ) * ( ( ( ( MLU + DS ) - RCSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.733739837398374, "obj2": 0.09169576533032314}, {"determining": "Min( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server - ACS ) )", "choosing": "( Min( MUR ,( ( DS * MUC ) / Max( Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ),( Min( ( ( CS * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUR * ( Min( MUC ,DS ) - MUC ) ) ,( MUC / CS ) ) )", "obj1": 0.7703252032520326, "obj2": 0.07627025128245604}, {"determining": "Min( Max( ( Min( Min( BR ,ARS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( CS * DS ) ) * Max( ( MLU - Max( ( MLU * RRSe ),MUC ) ),CS ) ) * ( ( MLU * DS ) / ( DS - RCSe ) ) )", "obj1": 0.4695121951219512, "obj2": 0.28437225380560865}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( RCSe - CS ) ) )", "obj1": 0.6117886178861789, "obj2": 0.21552800789180612}, {"determining": "( ( Const - DDR ) + ( ( MRS + ( AMS + FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( ( DS - CS ) ,Min( RRSe ,( ( CS + CS ) + ( MLU * RRSe ) ) ) ) + MUM ) ,MUR ) / Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Max( MUC,MUR ) + CS ) ) + Min( Min( CS ,MLU ) ,( ( MUM + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) )", "obj1": 0.2459349593495935, "obj2": 0.5291370631982157}, {"determining": "Min( Max( ( Min( ( FirstVNF_RAM_Server / ( Const - MDR ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ( DDR + FirstVNF_CPU ) * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( MUM - ( MUC / MUC ) ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( DS ,Min( RCSe ,Max( MLU,RCSe ) ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.48577235772357724, "obj2": 0.2686381586685615}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( PN,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUR ,( CS * DS ) ) * ( RCSe - CS ) ) )", "obj1": 0.6117886178861789, "obj2": 0.21552800789180612}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / AMS ) ) ,Max( FirstVNF_RAM_Server,CRS ) ) - ( ( BR - PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( MDR + FirstVNF_CPU_Server ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( CS ,( ( Max( ( MUM - DS ),MUM ) - MUC ) * DS ) ) * Min( CS ,MUM ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( Max( MUC,Max( CS,MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.9247967479674797, "obj2": 0.025350160175976775}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) + ( ( ( FirstVNF_RAM * CRS ) + ( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( ARS - ( MDR / MDR ) ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.46747967479674796, "obj2": 0.29980238498350154}, {"determining": "Min( Max( ( Min( ( FirstVNF_RAM_Server / ( Const - MDR ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ACS * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( DS * MUM ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( DS ,Min( RCSe ,Max( MLU,RCSe ) ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.516260162601626, "obj2": 0.25190523649244007}, {"determining": "( ( ( Max( ( FirstVNF_RAM - ( MDR - DDR ) ),MRS ) + ( FirstVNF_Mem - CRS ) ) + Min( Max( FirstVNF_CPU,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - Min( RMSe ,CS ) ) + Min( Min( ( MUM * MUM ) ,Min( MUC ,MUR ) ) ,( DS + Max( RRSe,RRSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( RRSe,RCSe ) ) ,MUR ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6269297775253446}, {"determining": "( ( DDR - BR ) + Max( ( ( FirstVNF_RAM - CRS ) - ( Max( RRS,PN ) * Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,AMS ) / FirstVNF_Mem_Server ),( ( RRS / DDR ) * FirstVNF_CPU_Server ) ) ) ),Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),RRS ) ) )", "choosing": "( Min( ( ( CS * RMSe ) * ( ( ( ( MUM - CS ) - ( Min( DS ,MUR ) + CS ) ) + ( MUC / MUC ) ) - CS ) ) ,MUR ) / ( ( MUM - DS ) + Min( ( ( MUC * DS ) / Max( CS,( MUM + ( ( MUC / MUC ) - MUM ) ) ) ) ,MUR ) ) )", "obj1": 0.1910569105691057, "obj2": 0.6100509701109607}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Min( BR ,Const ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( CS - ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( DS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.3882113821138211, "obj2": 0.33574971500172907}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / ( ( ( BR - RRS ) / MRS ) * CRS ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( Max( ( MUC - MLU ),DS ) + ( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5708831152191715}, {"determining": "( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.3719512195121951, "obj2": 0.3564658269228604}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( ( ( Max( Max( ( MDR * FirstVNF_RAM ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,MUM ) - ( Min( MUM ,( CS - DS ) ) * MUR ) )", "obj1": 0.8943089430894309, "obj2": 0.0498821558073967}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM ) - Min( ACS ,CRS ) )", "choosing": "( ( RRSe * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( Max( RRSe,( RMSe + ( RMSe * MUR ) ) ) * CS ) * ( Min( ( MUM * RRSe ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.19308943089430894, "obj2": 0.5949368382844618}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.39634146341463417, "obj2": 0.3299765433199099}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.4105691056910569, "obj2": 0.3188164581817932}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),( ( Max( ACS,FirstVNF_RAM_Server ) / MDR ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) ) ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,DS ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.3800813008130081, "obj2": 0.3535737774895067}, {"determining": "Min( Max( ( Min( Max( ARS,PN ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.4410569105691057, "obj2": 0.3005132855898479}, {"determining": "( ( DDR - Max( ( ( DDR - BR ) + ( Min( ( ARS * FirstVNF_RAM ) ,AMS ) / ( FirstVNF_CPU_Server - ACS ) ) ),FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Min( MUM ,RCSe ) + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC / MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( MUR / MUM ) )", "obj1": 0.21951219512195122, "obj2": 0.5865380513253367}, {"determining": "( Min( ( Min( ARS ,( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - Min( FirstVNF_CPU ,CRS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( RMSe - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + RRSe ) + ( MLU / RRSe ) ) )", "obj1": 0.9715447154471545, "obj2": 0.009272342999020316}, {"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9451219512195121, "obj2": 0.017624444859958163}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM * CRS ) + ( ( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,Const ) ,Min( FirstVNF_Mem ,PN ) ) ) + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( ARS - ( MDR / MDR ) ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( Min( ( ( RCSe / CS ) * MUM ) ,DS ) + Min( Min( CS ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.5, "obj2": 0.2670578224065165}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( Min( FirstVNF_Mem ,( BR * Const ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ),( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) / ( CS - ( ( ( MUM - MUM ) / ( CS + RMSe ) ) + Min( ( MUM - ( MUC / MUM ) ) ,( ( MLU + DS ) - RMSe ) ) ) ) ) ,MUR ) / ( Max( RMSe,MLU ) / DS ) )", "obj1": 0.8699186991869918, "obj2": 0.057585128394048855}], "14": [{"determining": "( ( Const - DDR ) + ( ( MRS + ( AMS + FirstVNF_CPU_Server ) ) / ( MDR - ACS ) ) )", "choosing": "( Min( ( Min( ( DS - CS ) ,Min( RRSe ,( ( CS + CS ) + ( MLU * RRSe ) ) ) ) + MUM ) ,MUR ) / Min( ( Min( MUM ,( CS * DS ) ) * ( CS / ( CS + RCSe ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - BR ) + ( ( ( FirstVNF_RAM * CRS ) + ( ( Min( Min( Min( Const ,FirstVNF_RAM_Server ) ,MRS ) ,( FirstVNF_RAM * FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) / Max( MDR,CRS ) ) ) / ( ( FirstVNF_RAM_Server / MDR ) - ARS ) ) )", "choosing": "( Min( ( Max( ( Max( RCSe,( ( RMSe * MUM ) / ( MUR / MUC ) ) ) * RRSe ),MUC ) * ( ( Min( ( ( RCSe / CS ) * RCSe ) ,DS ) + Min( ( ( CS * CS ) - MUC ) ,Min( CS ,MUR ) ) ) / CS ) ) ,MUR ) / ( ( MLU + MUC ) + ( RCSe / ( MUR / ( MUR - RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "( ( Max( FirstVNF_Mem_Server,AMS ) - DDR ) + ( FirstVNF_RAM_Server / Const ) )", "choosing": "( Min( ( Max( MUM,( CS * CS ) ) * ( ( ( ( MUM - MUM ) - Min( MUR ,Max( CS,DS ) ) ) + Min( Min( MUR ,( MUM / RMSe ) ) ,( ( MLU + CS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.3008130081300813, "obj2": 0.4508410173777198}, {"determining": "( ( FirstVNF_Mem - BR ) + ( FirstVNF_RAM_Server * Const ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUR ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - Min( ( ( CS / CS ) * MUM ) ,( ( MLU + MUM ) / MUC ) ) ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.5042739685215872}, {"determining": "( ( DDR - Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.13617886178861788, "obj2": 0.6504648843052717}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( ( BR - MRS ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * ( RRSe * ( ( CS - ( Min( MUM ,MUC ) + DS ) ) + Min( MUR ,MLU ) ) ) ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( ( CS - RRSe ) * CS ) * ( Min( ( ( DS / CS ) * MUM ) ,( ( MLU + MUR ) / MUC ) ) - MLU ) ) ) - MLU ) )", "obj1": 0.7032520325203252, "obj2": 0.12467977715468577}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / ( RRS * ACS ) ) ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - RRS ) ) ,( ( MDR / MDR ) - ARS ) )", "choosing": "( ( DS * ( ( ( ( Min( RCSe ,DS ) - MLU ) - CS ) - RMSe ) + DS ) ) / ( MLU * MUM ) )", "obj1": 0.34552845528455284, "obj2": 0.4063797727809003}, {"determining": "( ( ( Max( ACS,FirstVNF_RAM_Server ) / MDR ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( Min( ( DS * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( MUC ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.11991869918699187, "obj2": 0.6980991279275803}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( CRS ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) )", "obj1": 0.5934959349593496, "obj2": 0.2150860359337305}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( FirstVNF_Mem - MDR ) * Max( Max( BR,CRS ),CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUM - ( ( MLU - MUR ) / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( MUR / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.6646341463414634, "obj2": 0.138290557758293}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( Min( BR ,MDR ) * ( Max( Min( PN ,MDR ),FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUR ,( Max( CS,( Min( ( ( MUC * DS ) * ( RRSe - MUC ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) / ( MUC * DS ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / CS ) ) )", "obj1": 0.790650406504065, "obj2": 0.07018192380715453}, {"determining": "Min( Max( ARS,( ACS - MDR ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( CS + RCSe ) ) ) * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.6565040650406504, "obj2": 0.19062217610459775}, {"determining": "Min( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server - ACS ) )", "choosing": "( Min( MUR ,( ( DS * MUC ) / Max( Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ),( Min( ( ( CS * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUR * ( Min( MUC ,DS ) - MUC ) ) ,( MUC / CS ) ) )", "obj1": 0.7703252032520326, "obj2": 0.07627025128245604}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( RCSe - CS ) ) )", "obj1": 0.6422764227642277, "obj2": 0.1931628687627338}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( MRS + ( FirstVNF_Mem - FirstVNF_RAM ) ) ) ,AMS ) * MRS ),( PN / MRS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RCSe * RMSe ) / Min( ( MUM / RRSe ) ,( ( MLU * ( MUM / ( ( ( MLU * MUR ) + MUR ) - ( RMSe - CS ) ) ) ) / ( DS + ( RMSe + RCSe ) ) ) ) )", "obj1": 0.5630081300813008, "obj2": 0.23748031797305916}, {"determining": "( ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_Mem ,PN ) ,( MDR + Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUC * RRSe ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MLU ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.7296747967479674, "obj2": 0.09223208924707078}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.2682926829268293, "obj2": 0.516965830508597}, {"determining": "Min( Max( ( Min( Max( ARS,PN ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.4410569105691057, "obj2": 0.3005132855898479}, {"determining": "( ( Const - DDR ) + ( ( MRS + ( AMS + FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( ( DS - CS ) ,Min( RRSe ,( ( CS + CS ) + ( MLU * RRSe ) ) ) ) + MUM ) ,MUR ) / Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Max( MUC,MUR ) + CS ) ) + Min( Min( CS ,MLU ) ,( ( MUM + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) )", "obj1": 0.2459349593495935, "obj2": 0.5291370631982157}, {"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9451219512195121, "obj2": 0.017624444859958163}, {"determining": "( ( ( Max( ( FirstVNF_RAM - ( MDR - DDR ) ),MRS ) + ( FirstVNF_Mem - CRS ) ) + Min( Max( FirstVNF_CPU,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - Min( RMSe ,CS ) ) + Min( Min( ( MUM * MUM ) ,Min( MUC ,MUR ) ) ,( DS + Max( RRSe,RRSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( RRSe,RCSe ) ) ,MUR ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6269297775253446}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) ) / FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( Min( Max( ( DS * RCSe ),RCSe ) ,MUC ) ,CS ) / Max( RMSe,RCSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008959392092081873}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( ( ( ( Min( MUC ,RMSe ) * DS ) * DS ) * DS ) / ( ( ( MUM - ( MUC / MUC ) ) * Min( ( ( MUC * ( ( MUM - DS ) / MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) - ( ( RMSe / MUC ) + RCSe ) ) )", "obj1": 0.8455284552845529, "obj2": 0.06633906379238867}, {"determining": "( ( DDR - Max( ( ( DDR - BR ) + ( Min( ( ARS * FirstVNF_RAM ) ,AMS ) / ( FirstVNF_CPU_Server - ACS ) ) ),FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Min( MUM ,RCSe ) + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC / MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( MUR / MUM ) )", "obj1": 0.21951219512195122, "obj2": 0.5865380513253367}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / RRS ) - ( ( MDR - BR ) * ( ( DDR + BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,Min( ( RRSe - MUC ) ,Min( RRSe ,CS ) ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( DS - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,Max( MUC,DS ) ) ) ) ) - CS ) ) )", "obj1": 0.9044715447154471, "obj2": 0.030798595812507792}, {"determining": "( ( ( ( MDR - MRS ) * MDR ) * Min( RRS ,FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_Mem ,PN ) ,Max( DDR,MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( Min( CS ,( Max( ( MLU / ( DS - DS ) ),( ( ( CS * DS ) + RMSe ) * Min( CS ,RRSe ) ) ) + ( Min( ( ( RCSe * RMSe ) * Max( MUM,MUR ) ) ,( CS / ( MUC + MLU ) ) ) * RMSe ) ) ) * ( ( ( ( MLU + DS ) - RCSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.733739837398374, "obj2": 0.09169576533032314}, {"determining": "Min( ( Min( FirstVNF_RAM ,BR ) - ( ( FirstVNF_CPU / RRS ) + ARS ) ) ,Max( ( Min( Min( FirstVNF_Mem_Server ,( MRS + ACS ) ) ,DDR ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUM ) + CS ) ,DS ) * ( RRSe * ( Max( MUM,Min( ( ( MUM - RRSe ) - RCSe ) ,DS ) ) - ( ( MUC * RRSe ) - ( MUC - ( ( RCSe * DS ) + MUC ) ) ) ) ) ) / Min( ( ( ( Max( ( CS * ( CS / DS ) ),( Max( DS,DS ) - MLU ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.5873983739837398, "obj2": 0.22094823163787}, {"determining": "( ( DDR - BR ) + Max( ( ( FirstVNF_RAM - CRS ) - ( Max( RRS,PN ) * Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,AMS ) / FirstVNF_Mem_Server ),( ( RRS / DDR ) * FirstVNF_CPU_Server ) ) ) ),Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),RRS ) ) )", "choosing": "( Min( ( ( CS * RMSe ) * ( ( ( ( MUM - CS ) - ( Min( DS ,MUR ) + CS ) ) + ( MUC / MUC ) ) - CS ) ) ,MUR ) / ( ( MUM - DS ) + Min( ( ( MUC * DS ) / Max( CS,( MUM + ( ( MUC / MUC ) - MUM ) ) ) ) ,MUR ) ) )", "obj1": 0.1910569105691057, "obj2": 0.6100509701109607}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM ) - Min( ACS ,CRS ) )", "choosing": "( ( RRSe * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( Max( RRSe,( RMSe + ( RMSe * MUR ) ) ) * CS ) * ( Min( ( MUM * RRSe ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.19308943089430894, "obj2": 0.5949368382844618}, {"determining": "( ( ( Max( ACS,FirstVNF_RAM_Server ) / MDR ) / ( Max( AMS,BR ) * Max( ARS,FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( Min( ( DS * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( MUC ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( Max( ( MUR / DS ),( DS * ( RCSe + RCSe ) ) ) * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.10569105691056911, "obj2": 0.7107962040611755}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / AMS ) ) ,Max( FirstVNF_RAM_Server,CRS ) ) - ( ( BR - PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( MDR + FirstVNF_CPU_Server ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( CS ,( ( Max( ( MUM - DS ),MUM ) - MUC ) * DS ) ) * Min( CS ,MUM ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( Max( MUC,Max( CS,MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.9247967479674797, "obj2": 0.025350160175976775}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( Min( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ,Min( ACS ,ACS ) ) / ACS ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( CRS / MDR ) ) )", "choosing": "( ( DS + ( ( ( ( MLU - Min( RCSe ,DS ) ) - CS ) - RMSe ) * DS ) ) / ( ( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( RMSe + MUM ),MUC ) ) ,MLU ) ) + RCSe ) + ( MLU / RRSe ) ) )", "obj1": 0.34959349593495936, "obj2": 0.4047265210080526}, {"determining": "( Min( Min( Min( ( DDR - PN ) ,FirstVNF_CPU ) ,FirstVNF_Mem ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( Min( ( ( Const + FirstVNF_Mem_Server ) - MDR ) ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - AMS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,( RRSe / ( RRSe * ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( ( ( MUC / MUC ) - MUM ) - Max( MUR,MUM ) ) - MLU ) )", "obj1": 0.6727642276422764, "obj2": 0.1327663879028987}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),BR ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( ( Max( FirstVNF_CPU,MRS ) * FirstVNF_RAM ) - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe / RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * ( MUR - Min( RMSe ,MUR ) ) ) )", "obj1": 0.35365853658536583, "obj2": 0.36795038545009157}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( DDR ,FirstVNF_Mem ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,( RRS - DDR ) ) ) / Min( FirstVNF_RAM ,Max( BR,MRS ) ) ),( Const - ARS ) ) ,( AMS - ( MDR / MDR ) ) )", "choosing": "( Min( ( ( ( ( ( MUC - MUM ) - ( RMSe + CS ) ) + ( Min( DS ,CS ) * MUM ) ) - CS ) * Min( ( ( ( RRSe - ( RCSe + MUC ) ) + RCSe ) * MUR ) ,Min( CS ,DS ) ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.42276422764227645, "obj2": 0.31404219543236134}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.24390243902439024, "obj2": 0.5528214111144808}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( Min( FirstVNF_Mem ,( BR * Const ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ),( Const - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) / ( CS - ( ( ( MUM - MUM ) / ( CS + RMSe ) ) + Min( ( MUM - ( MUC / MUM ) ) ,( ( MLU + DS ) - RMSe ) ) ) ) ) ,MUR ) / ( Max( RMSe,MLU ) / DS ) )", "obj1": 0.8699186991869918, "obj2": 0.057585128394048855}, {"determining": "Min( Max( ( Min( Min( BR ,ARS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( CS * DS ) ) * Max( ( MLU - Max( ( MLU * RRSe ),MUC ) ),CS ) ) * ( ( MLU * DS ) / ( DS - RCSe ) ) )", "obj1": 0.4695121951219512, "obj2": 0.28437225380560865}, {"determining": "( Min( ( ACS - BR ) ,( ARS - ( MDR / MDR ) ) ) + Min( Min( ( DDR - FirstVNF_Mem ) ,PN ) ,FirstVNF_RAM ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( MLU + CS ) - MUC ) ,Min( CS ,MUR ) ) ) - CS ) ) ,MUR ) / ( DS / ( RCSe + RCSe ) ) )", "obj1": 0.5386178861788617, "obj2": 0.240619763989484}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( ARS - ( MDR / MDR ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( RCSe - ( DS + ( RMSe + RCSe ) ) ) ) )", "obj1": 0.4613821138211382, "obj2": 0.28924392230397433}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( ( ( Max( Max( ( MDR * FirstVNF_RAM ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,MUM ) - ( Min( MUM ,( CS - DS ) ) * MUR ) )", "obj1": 0.8943089430894309, "obj2": 0.0498821558073967}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / ( ( ( BR - RRS ) / MRS ) * CRS ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( Max( ( MUC - MLU ),DS ) + ( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5708831152191715}, {"determining": "Min( Max( ( Min( ( FirstVNF_RAM_Server / ( Const - MDR ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ( DDR + FirstVNF_CPU ) * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( MUM - ( MUC / MUC ) ) - ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( DS ,Min( RCSe ,Max( MLU,RCSe ) ) ) - MLU ) ) ) + MUC ) )", "obj1": 0.48577235772357724, "obj2": 0.2686381586685615}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,DS ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.37601626016260165, "obj2": 0.3387979421178888}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( Min( ( FirstVNF_RAM_Server / ( Const - MDR ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ACS * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) - ( ( BR - ( ARS + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + DS ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - Min( DS ,Min( RCSe ,Max( MLU,RCSe ) ) ) ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9939024390243902, "obj2": 0.0044105331444530774}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ) - Min( ( Const - ARS ) ,FirstVNF_RAM ) ) + CRS ) ,FirstVNF_RAM ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUC ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.23577235772357724, "obj2": 0.5634730930598265}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - Min( Min( DDR ,FirstVNF_RAM_Server ) ,MRS ) ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.15040650406504066, "obj2": 0.6359971186619605}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( Const ,MRS ) ,PN ) ) ) ,( ( PN - BR ) + ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ),( Const - ARS ) ) ,Min( FirstVNF_RAM ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( Const - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Min( ( ( MUC - CS ) * MUM ) ,MUM ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( RMSe + MUM ) - RMSe ) ,( MUM - ( MUC / MUC ) ) ) ) - CS ) ) ,MUR ) / ( Min( CS ,MUR ) - ( ( Max( ( ( ( DS / RMSe ) - RRSe ) * ( Min( RCSe ,MLU ) - DS ) ),RMSe ) + DS ) - MUC ) ) )", "obj1": 0.508130081300813, "obj2": 0.2519099280807564}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) + ( ( Max( Const,FirstVNF_Mem_Server ) - BR ) / ( ARS + ( MDR / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( Min( RMSe ,Min( CS ,( ( ( DS / ( MUM / MUR ) ) / MLU ) + ( MUM - MLU ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.524390243902439, "obj2": 0.24641548978798122}], "15": [{"determining": "( Min( ( Min( Min( FirstVNF_CPU ,PN ) ,FirstVNF_RAM ) - ( Min( ( FirstVNF_RAM_Server / ( MDR - Const ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ACS * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) - Max( DDR,Const ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( ( ( ( ( MLU + CS ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,MUC ) ) ,( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - DDR ) + ( ( MRS + ( AMS + FirstVNF_CPU_Server ) ) / ( MDR - ACS ) ) )", "choosing": "( Min( ( Min( ( DS - CS ) ,Min( RRSe ,( ( CS + CS ) + ( MLU * RRSe ) ) ) ) + MUM ) ,MUR ) / Min( ( Min( MUM ,( CS * DS ) ) * ( CS / ( CS + RCSe ) ) ) ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "( ( Max( FirstVNF_Mem_Server,AMS ) - DDR ) + ( FirstVNF_RAM_Server / Const ) )", "choosing": "( Min( ( Max( MUM,( CS * CS ) ) * ( ( ( ( MUM - MUM ) - Min( MUR ,Max( CS,DS ) ) ) + Min( Min( MUR ,( MUM / RMSe ) ) ,( ( MLU + CS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.3008130081300813, "obj2": 0.4508410173777198}, {"determining": "( ( FirstVNF_Mem - BR ) + ( FirstVNF_RAM_Server * Const ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUR ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - Min( ( ( CS / CS ) * MUM ) ,( ( MLU + MUM ) / MUC ) ) ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.5042739685215872}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( Const ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ACS * RRS ) ),( MDR / CRS ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( DS * ( ( ( ( Min( RCSe ,DS ) - MLU ) - CS ) - RMSe ) * DS ) ) / ( ( ( Min( RCSe ,MLU ) - Min( ( MUR - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) + RCSe ) + Min( CS ,( ( RRSe * ( MUM / Min( MUM ,MLU ) ) ) * DS ) ) ) )", "obj1": 0.3434959349593496, "obj2": 0.4090612860135798}, {"determining": "( ( ( Max( ACS,FirstVNF_RAM_Server ) / MDR ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( Min( ( DS * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( MUC ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.11991869918699187, "obj2": 0.6980991279275803}, {"determining": "( ( DDR - Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.13617886178861788, "obj2": 0.6504648843052717}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( RCSe - CS ) ) )", "obj1": 0.6422764227642277, "obj2": 0.1931628687627338}, {"determining": "Min( Max( ARS,( ACS - MDR ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( CS + RCSe ) ) ) * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.6565040650406504, "obj2": 0.19062217610459775}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( CRS ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) )", "obj1": 0.5934959349593496, "obj2": 0.2150860359337305}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( FirstVNF_Mem - MDR ) * Max( Max( BR,CRS ),CRS ) ) )", "choosing": "( ( MUC + DS ) / ( ( ( MUM - ( ( MLU - MUR ) / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( MUR / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.6646341463414634, "obj2": 0.138290557758293}, {"determining": "Min( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server - ACS ) )", "choosing": "( Min( MUR ,( ( DS * MUC ) / Max( Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ),( Min( ( ( CS * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUR * ( Min( MUC ,DS ) - MUC ) ) ,( MUC / CS ) ) )", "obj1": 0.7703252032520326, "obj2": 0.07627025128245604}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),BR ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( ( Max( FirstVNF_CPU,MRS ) * FirstVNF_RAM ) - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe / RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * ( MUR - Min( RMSe ,MUR ) ) ) )", "obj1": 0.35365853658536583, "obj2": 0.36795038545009157}, {"determining": "( ( DDR - MDR ) + ( ( ARS / ( Const - Max( PN,FirstVNF_CPU_Server ) ) ) / Min( RRS ,PN ) ) )", "choosing": "( Min( ( ( Max( RMSe,RCSe ) * ( ( MUC - MLU ) * ( RCSe + MUR ) ) ) - RRSe ) ,( MUM - MUR ) ) / ( DS * ( RCSe + RCSe ) ) )", "obj1": 0.5589430894308943, "obj2": 0.2273544465376172}, {"determining": "( ( ( Max( ( FirstVNF_RAM - ( MDR - DDR ) ),MRS ) + ( FirstVNF_Mem - CRS ) ) + Min( Max( FirstVNF_CPU,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - Min( RMSe ,CS ) ) + Min( Min( ( MUM * MUM ) ,Min( MUC ,MUR ) ) ,( DS + Max( RRSe,RRSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( RRSe,RCSe ) ) ,MUR ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6269297775253446}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + MLU ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.24796747967479674, "obj2": 0.5044435880101781}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( ( ( ( Min( MUC ,RMSe ) * DS ) * DS ) * DS ) / ( ( ( MUM - ( MUC / MUC ) ) * Min( ( ( MUC * ( ( MUM - DS ) / MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) - ( ( RMSe / MUC ) + RCSe ) ) )", "obj1": 0.8455284552845529, "obj2": 0.06633906379238867}, {"determining": "( Min( Min( Min( ( ( ACS - ( ACS + ACS ) ) * ( RRS - FirstVNF_Mem_Server ) ) ,Min( FirstVNF_RAM_Server ,AMS ) ) ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( Min( RMSe ,( Min( MUM ,MLU ) / MLU ) ) / RCSe ) ) - ( ( CS * CS ) * ( Min( ( ( CS / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.725609756097561, "obj2": 0.09721864397525114}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( ( BR - MRS ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * ( RRSe * ( ( CS - ( Min( MUM ,MUC ) + DS ) ) + Min( MUR ,MLU ) ) ) ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( ( CS - RRSe ) * CS ) * ( Min( ( ( DS / CS ) * MUM ) ,( ( MLU + MUR ) / MUC ) ) - MLU ) ) ) - MLU ) )", "obj1": 0.7032520325203252, "obj2": 0.12467977715468577}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( Const ,MRS ) ,PN ) ) ) ,( ( PN - BR ) + ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ),( Const - ARS ) ) ,Min( FirstVNF_RAM ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( Const - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Min( ( ( MUC - CS ) * MUM ) ,MUM ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( RMSe + MUM ) - RMSe ) ,( MUM - ( MUC / MUC ) ) ) ) - CS ) ) ,MUR ) / ( Min( CS ,MUR ) - ( ( Max( ( ( ( DS / RMSe ) - RRSe ) * ( Min( RCSe ,MLU ) - DS ) ),RMSe ) + DS ) - MUC ) ) )", "obj1": 0.508130081300813, "obj2": 0.2519099280807564}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( MLU + CS ) - MUC ) ,Min( CS ,MUR ) ) ) - CS ) ) ,MUR ) / ( DS / ( RCSe + RCSe ) ) )", "obj1": 0.48577235772357724, "obj2": 0.2680446390154771}, {"determining": "( ( Const - DDR ) + ( ( MRS + ( AMS + FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( ( DS - CS ) ,Min( RRSe ,( ( CS + CS ) + ( MLU * RRSe ) ) ) ) + MUM ) ,MUR ) / Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Max( MUC,MUR ) + CS ) ) + Min( Min( CS ,MLU ) ,( ( MUM + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) )", "obj1": 0.2459349593495935, "obj2": 0.5291370631982157}, {"determining": "( ( DDR - Max( ( ( DDR - BR ) + ( Min( ( ARS * FirstVNF_RAM ) ,AMS ) / ( FirstVNF_CPU_Server - ACS ) ) ),FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Min( MUM ,RCSe ) + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC / MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( MUR / MUM ) )", "obj1": 0.21951219512195122, "obj2": 0.5865380513253367}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( Min( BR ,MDR ) * ( Max( Min( PN ,MDR ),FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUR ,( Max( CS,( Min( ( ( MUC * DS ) * ( RRSe - MUC ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) / ( MUC * DS ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / CS ) ) )", "obj1": 0.790650406504065, "obj2": 0.07018192380715453}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) )", "choosing": "( ( MUR * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( MUM * RRSe ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.4146341463414634, "obj2": 0.33013714221749235}, {"determining": "( ( ( ( MDR - MRS ) * MDR ) * Min( RRS ,FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_Mem ,PN ) ,Max( DDR,MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( Min( CS ,( Max( ( MLU / ( DS - DS ) ),( ( ( CS * DS ) + RMSe ) * Min( CS ,RRSe ) ) ) + ( Min( ( ( RCSe * RMSe ) * Max( MUM,MUR ) ) ,( CS / ( MUC + MLU ) ) ) * RMSe ) ) ) * ( ( ( ( MLU + DS ) - RCSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.733739837398374, "obj2": 0.09169576533032314}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.37398373983739835, "obj2": 0.3635844044531393}, {"determining": "( ( DDR - BR ) + Max( ( ( FirstVNF_RAM - CRS ) - ( Max( RRS,PN ) * Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,AMS ) / FirstVNF_Mem_Server ),( ( RRS / DDR ) * FirstVNF_CPU_Server ) ) ) ),Max( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ),RRS ) ) )", "choosing": "( Min( ( ( CS * RMSe ) * ( ( ( ( MUM - CS ) - ( Min( DS ,MUR ) + CS ) ) + ( MUC / MUC ) ) - CS ) ) ,MUR ) / ( ( MUM - DS ) + Min( ( ( MUC * DS ) / Max( CS,( MUM + ( ( MUC / MUC ) - MUM ) ) ) ) ,MUR ) ) )", "obj1": 0.1910569105691057, "obj2": 0.6100509701109607}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM ) - Min( ACS ,CRS ) )", "choosing": "( ( RRSe * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( Max( RRSe,( RMSe + ( RMSe * MUR ) ) ) * CS ) * ( Min( ( MUM * RRSe ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.19308943089430894, "obj2": 0.5949368382844618}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( Min( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ,Min( ACS ,ACS ) ) / ACS ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( CRS / MDR ) ) )", "choosing": "( ( DS + ( ( ( ( MLU - Min( RCSe ,DS ) ) - CS ) - RMSe ) * DS ) ) / ( ( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( RMSe + MUM ),MUC ) ) ,MLU ) ) + RCSe ) + ( MLU / RRSe ) ) )", "obj1": 0.34959349593495936, "obj2": 0.4047265210080526}, {"determining": "Min( ( ( Min( Max( CRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,( MDR + Min( DDR ,PN ) ) ) ) / BR ) + Min( Const ,ARS ) ) ,( ARS + ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( ( ( ( RMSe + CS ) - ( MUM - ( RRSe - MLU ) ) ) + Min( ( MLU - ( MUC / MUC ) ) ,( Max( DS,RMSe ) - RMSe ) ) ) - CS ) ) * ( ( MLU - Min( Max( ( RMSe / ( RCSe / MUR ) ),( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.43902439024390244, "obj2": 0.2955935327217584}, {"determining": "( ( DDR - BR ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.24390243902439024, "obj2": 0.5528214111144808}, {"determining": "Min( ( Min( FirstVNF_RAM ,BR ) - ( ( FirstVNF_CPU / RRS ) + ARS ) ) ,Max( ( Min( Min( FirstVNF_Mem_Server ,( MRS + ACS ) ) ,DDR ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUM ) + CS ) ,DS ) * ( RRSe * ( Max( MUM,Min( ( ( MUM - RRSe ) - RCSe ) ,DS ) ) - ( ( MUC * RRSe ) - ( MUC - ( ( RCSe * DS ) + MUC ) ) ) ) ) ) / Min( ( ( ( Max( ( CS * ( CS / DS ) ),( Max( DS,DS ) - MLU ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.5873983739837398, "obj2": 0.22094823163787}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( ARS - ( MDR / MDR ) ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,DS ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.3861788617886179, "obj2": 0.3375118789468854}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / AMS ) ) ,Max( FirstVNF_RAM_Server,CRS ) ) - ( ( BR - PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( MDR + FirstVNF_CPU_Server ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( CS ,( ( Max( ( MUM - DS ),MUM ) - MUC ) * DS ) ) * Min( CS ,MUM ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( Max( MUC,Max( CS,MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.9247967479674797, "obj2": 0.025350160175976775}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( ( ( Max( Max( ( MDR * FirstVNF_RAM ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( Const - MDR ) ) + Min( ( RRS - FirstVNF_CPU ) ,FirstVNF_Mem ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,MUM ) - ( Min( MUM ,( CS - DS ) ) * MUR ) )", "obj1": 0.8943089430894309, "obj2": 0.0498821558073967}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - Min( Min( DDR ,FirstVNF_RAM_Server ) ,MRS ) ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.15040650406504066, "obj2": 0.6359971186619605}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / RRS ) - ( ( MDR - BR ) * ( ( DDR + BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,Min( ( RRSe - MUC ) ,Min( RRSe ,CS ) ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( DS - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,Max( MUC,DS ) ) ) ) ) - CS ) ) )", "obj1": 0.9044715447154471, "obj2": 0.030798595812507792}, {"determining": "( Min( Min( Min( ( DDR - PN ) ,FirstVNF_CPU ) ,FirstVNF_Mem ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( Min( ( ( Const + FirstVNF_Mem_Server ) - MDR ) ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - AMS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,( RRSe / ( RRSe * ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( ( ( MUC / MUC ) - MUM ) - Max( MUR,MUM ) ) - MLU ) )", "obj1": 0.6727642276422764, "obj2": 0.1327663879028987}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) ) / FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( Min( Max( ( DS * RCSe ),RCSe ) ,MUC ) ,CS ) / Max( RMSe,RCSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008959392092081873}, {"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9451219512195121, "obj2": 0.017624444859958163}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / ( ( ( BR - RRS ) / MRS ) * CRS ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( Max( ( MUC - MLU ),DS ) + ( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5708831152191715}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,DS ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.37601626016260165, "obj2": 0.3387979421178888}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( BR ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MLU ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.4186991869918699, "obj2": 0.31330844091583376}, {"determining": "Min( Max( ARS,( ACS - MDR ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.42886178861788615, "obj2": 0.3073426488461163}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) + ( ( Max( Const,FirstVNF_Mem_Server ) - BR ) / ( ARS + ( MDR / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( Min( RMSe ,Min( CS ,( ( ( DS / ( MUM / MUR ) ) / MLU ) + ( MUM - MLU ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.524390243902439, "obj2": 0.24641548978798122}, {"determining": "Min( Max( ( Min( ( FirstVNF_RAM_Server / ( Const - MDR ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ( DDR + FirstVNF_CPU ) * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ),( ( Max( ( FirstVNF_RAM - ( MDR - DDR ) ),MRS ) + ( RRS - CRS ) ) - ARS ) ) ,( ( MDR / ( ACS + ( ( FirstVNF_Mem_Server * BR ) + FirstVNF_CPU ) ) ) - ARS ) )", "choosing": "( ( MUM - ( MUC / MUC ) ) - ( ( ( ( CS * ( CS * MUM ) ) * ( Min( DS ,Min( RCSe ,Max( MLU,RCSe ) ) ) - MLU ) ) - ( MUM - ( MUC / Min( ( MUM * MUM ) ,Min( MUC ,MUR ) ) ) ) ) + ( MUR - ( MLU / ( MLU * ( MLU / DS ) ) ) ) ) )", "obj1": 0.45934959349593496, "obj2": 0.2874662469409454}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( CRS ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( RCSe + CS ) ) ) * Min( RRSe ,RMSe ) ) ) ) ) ,( ( CS + MUC ) * ( MUR / CS ) ) )", "obj1": 0.6971544715447154, "obj2": 0.12703320633116685}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( RCSe - ( DS + ( RMSe + RCSe ) ) ) ) )", "obj1": 0.47764227642276424, "obj2": 0.2794906085641878}], "16": [{"determining": "( Max( ( Min( Min( Min( Min( BR ,FirstVNF_Mem ) ,FirstVNF_RAM ) ,PN ) ,Min( Max( ( Max( Const,RRS ) + FirstVNF_CPU ),Max( MRS,FirstVNF_Mem ) ) ,( ( MDR * MDR ) + DDR ) ) ) - ( ( MDR - BR ) * ( ( DDR - BR ) - RRS ) ) ),( FirstVNF_CPU + ARS ) ) - Max( MDR,( Max( Max( BR,( AMS * MRS ) ),PN ) / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,( RCSe - Min( ( RRSe - Max( CS,MLU ) ) ,MUM ) ) ) ) - Min( ( MUC - ( CS - ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,MUM ) ) ) ) - ( ( DS * MUC ) * ( ( MUR * ( MLU + RCSe ) ) * ( ( ( RRSe * RCSe ) / CS ) - MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Min( FirstVNF_CPU ,PN ) ,FirstVNF_RAM ) - ( Min( ( FirstVNF_RAM_Server / ( MDR - Const ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ACS * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ) ) ,FirstVNF_RAM ) - Max( DDR,Const ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( ( ( ( ( MLU + CS ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,MUC ) ) ,( DS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "( ( Max( FirstVNF_Mem_Server,AMS ) - DDR ) + ( FirstVNF_RAM_Server / Const ) )", "choosing": "( Min( ( Max( MUM,( CS * CS ) ) * ( ( ( ( MUM - MUM ) - Min( MUR ,Max( CS,DS ) ) ) + Min( Min( MUR ,( MUM / RMSe ) ) ,( ( MLU + CS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.3008130081300813, "obj2": 0.4508410173777198}, {"determining": "( ( FirstVNF_Mem - BR ) + ( FirstVNF_RAM_Server * Const ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUR ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - Min( ( ( CS / CS ) * MUM ) ,( ( MLU + MUM ) / MUC ) ) ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.5042739685215872}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( RMSe / DS ) * ( Min( MUM ,( CS * DS ) ) * ( RCSe - CS ) ) )", "obj1": 0.6422764227642277, "obj2": 0.1931628687627338}, {"determining": "( ( Const * FirstVNF_Mem ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( CRS * BR ) ) / FirstVNF_Mem_Server ),AMS ) ) ) / ( ACS - AMS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( Max( ( MUM * ( MUM * RMSe ) ),Min( ( MUC / CS ) ,( RMSe * MLU ) ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( DS * ( RCSe + RCSe ) ) ) ) ,MUR ) / ( ( MUC - ( MUR + ( CS + ( MUC * ( ( RMSe * MLU ) * CS ) ) ) ) ) - MUC ) )", "obj1": 0.241869918699187, "obj2": 0.5180843420802282}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( Min( Min( FirstVNF_CPU ,DDR ) ,Min( Const ,ACS ) ) / ( Max( ACS,FirstVNF_RAM_Server ) / Max( Const,MDR ) ) ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ACS * RRS ) ),( MDR / CRS ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( DS * ( ( ( ( Min( RCSe ,DS ) - MLU ) - CS ) - RMSe ) * DS ) ) / ( ( ( Min( RCSe ,MLU ) - Min( ( MUR - Max( ( MUM * RRSe ),MUC ) ) ,MLU ) ) + RCSe ) + Min( CS ,( ( RRSe * ( MUM / Min( MUM ,MLU ) ) ) * DS ) ) ) )", "obj1": 0.3434959349593496, "obj2": 0.4090612860135798}, {"determining": "( ( ( Max( ACS,FirstVNF_RAM_Server ) / MDR ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) )", "choosing": "( Min( ( DS * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( MUC ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.11991869918699187, "obj2": 0.6980991279275803}, {"determining": "( ( DDR - MDR ) + ( ( ARS / ( Const - Max( PN,FirstVNF_CPU_Server ) ) ) / Min( RRS ,PN ) ) )", "choosing": "( Min( ( ( Max( RMSe,RCSe ) * ( ( MUC - MLU ) * ( RCSe + MUR ) ) ) - RRSe ) ,( MUM - MUR ) ) / ( DS * ( RCSe + RCSe ) ) )", "obj1": 0.5589430894308943, "obj2": 0.2273544465376172}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( ( ( MDR / AMS ) / ( RRS - CRS ) ) / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + ( ( MUM - ( MUC / MUC ) ) + ( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( Min( MUM ,( CS / MUC ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) )", "obj1": 0.8902439024390244, "obj2": 0.04053960185397626}, {"determining": "( Min( ( DDR / DDR ) ,AMS ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( DDR ,( Const - MDR ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * Max( Max( RMSe,( RRSe * MLU ) ),MUM ) ) / ( ( ( ( MUC / MUC ) - MUM ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUR ) ,DS ) - ( MLU + DS ) ) ) ) - MLU ) )", "obj1": 0.6544715447154471, "obj2": 0.14363237556052863}, {"determining": "( ( DDR - Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.13617886178861788, "obj2": 0.6504648843052717}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / ( ( ( BR - RRS ) / MRS ) * CRS ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( Max( ( MUC - MLU ),DS ) + ( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5708831152191715}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),BR ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( ( Max( FirstVNF_CPU,MRS ) * FirstVNF_RAM ) - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe / RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * ( MUR - Min( RMSe ,MUR ) ) ) )", "obj1": 0.35365853658536583, "obj2": 0.36795038545009157}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) + ( ( Max( Const,FirstVNF_Mem_Server ) - BR ) / ( ARS + ( MDR / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( Min( RMSe ,Min( CS ,( ( ( DS / ( MUM / MUR ) ) / MLU ) + ( MUM - MLU ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.524390243902439, "obj2": 0.24641548978798122}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( Min( BR ,MDR ) * ( Max( Min( PN ,MDR ),FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUR ,( Max( CS,( Min( ( ( MUC * DS ) * ( RRSe - MUC ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) / ( MUC * DS ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / CS ) ) )", "obj1": 0.790650406504065, "obj2": 0.07018192380715453}, {"determining": "( ( ( ( MDR - MRS ) * MDR ) * Min( RRS ,FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_Mem ,PN ) ,Max( DDR,MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( Min( CS ,( Max( ( MLU / ( DS - DS ) ),( ( ( CS * DS ) + RMSe ) * Min( CS ,RRSe ) ) ) + ( Min( ( ( RCSe * RMSe ) * Max( MUM,MUR ) ) ,( CS / ( MUC + MLU ) ) ) * RMSe ) ) ) * ( ( ( ( MLU + DS ) - RCSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.733739837398374, "obj2": 0.09169576533032314}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( CRS ,CRS ) ) ) ) ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( MUM / ( ( ( MUM - ( MUC / MUC ) ) - Min( ( ( MUC * ( ( MUM - DS ) / DS ) ) / Max( CS,RCSe ) ) ,MUR ) ) - MLU ) )", "obj1": 0.8536585365853658, "obj2": 0.06356053319069493}, {"determining": "Min( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server - ACS ) )", "choosing": "( Min( MUR ,( ( DS * MUC ) / Max( Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ),( Min( ( ( CS * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUR * ( Min( MUC ,DS ) - MUC ) ) ,( MUC / CS ) ) )", "obj1": 0.7703252032520326, "obj2": 0.07627025128245604}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) ) / FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( Min( Max( ( DS * RCSe ),RCSe ) ,MUC ) ,CS ) / Max( RMSe,RCSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008959392092081873}, {"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9451219512195121, "obj2": 0.017624444859958163}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( ( ( ( Min( MUC ,RMSe ) * DS ) * DS ) * DS ) / ( ( ( MUM - ( MUC / MUC ) ) * Min( ( ( MUC * ( ( MUM - DS ) / MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) - ( ( RMSe / MUC ) + RCSe ) ) )", "obj1": 0.8455284552845529, "obj2": 0.06633906379238867}, {"determining": "Min( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server - ACS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.6991869918699187, "obj2": 0.10597669504275103}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( Const ,MRS ) ,PN ) ) ) ,( ( PN - BR ) + ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ),( Const - ARS ) ) ,Min( FirstVNF_RAM ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( Const - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Min( ( ( MUC - CS ) * MUM ) ,MUM ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( RMSe + MUM ) - RMSe ) ,( MUM - ( MUC / MUC ) ) ) ) - CS ) ) ,MUR ) / ( Min( CS ,MUR ) - ( ( Max( ( ( ( DS / RMSe ) - RRSe ) * ( Min( RCSe ,MLU ) - DS ) ),RMSe ) + DS ) - MUC ) ) )", "obj1": 0.508130081300813, "obj2": 0.2519099280807564}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( MLU + CS ) - MUC ) ,Min( CS ,MUR ) ) ) - CS ) ) ,MUR ) / ( DS / ( RCSe + RCSe ) ) )", "obj1": 0.48577235772357724, "obj2": 0.2680446390154771}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( Min( DS ,CS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6199186991869918, "obj2": 0.19880775670050876}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + MLU ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.24796747967479674, "obj2": 0.5044435880101781}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( CRS ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( RCSe + CS ) ) ) * Min( RRSe ,RMSe ) ) ) ) ) ,( ( CS + MUC ) * ( MUR / CS ) ) )", "obj1": 0.6971544715447154, "obj2": 0.12703320633116685}, {"determining": "( ( ( ( Max( ARS,MDR ) * PN ) - FirstVNF_Mem_Server ) + Min( ARS ,RRS ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.3699186991869919, "obj2": 0.35111169013622934}, {"determining": "( ( ( Max( ( FirstVNF_RAM - ( MDR - DDR ) ),MRS ) + ( FirstVNF_Mem - CRS ) ) + Min( Max( FirstVNF_CPU,DDR ) ,Min( ACS ,ACS ) ) ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - Min( RMSe ,CS ) ) + Min( Min( ( MUM * MUM ) ,Min( MUC ,MUR ) ) ,( DS + Max( RRSe,RRSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( RRSe,RCSe ) ) ,MUR ) ) )", "obj1": 0.17479674796747968, "obj2": 0.6269297775253446}, {"determining": "( ( ( Max( ACS,FirstVNF_RAM_Server ) / MDR ) / Min( Min( FirstVNF_CPU ,DDR ) ,Min( ACS ,ACS ) ) ) - ( CRS / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( DS * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( MLU ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.11178861788617886, "obj2": 0.7101164668435946}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / AMS ) ) ,Max( FirstVNF_RAM_Server,CRS ) ) - ( ( BR - PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( MDR + FirstVNF_CPU_Server ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( CS ,( ( Max( ( MUM - DS ),MUM ) - MUC ) * DS ) ) * Min( CS ,MUM ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( Max( MUC,Max( CS,MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.9247967479674797, "obj2": 0.025350160175976775}, {"determining": "( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( MUM ,( CS * DS ) ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.18699186991869918, "obj2": 0.6189305242680442}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( Min( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ,Min( ACS ,ACS ) ) / ACS ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( CRS / MDR ) ) )", "choosing": "( ( DS + ( ( ( ( MLU - Min( RCSe ,DS ) ) - CS ) - RMSe ) * DS ) ) / ( ( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( RMSe + MUM ),MUC ) ) ,MLU ) ) + RCSe ) + ( MLU / RRSe ) ) )", "obj1": 0.34959349593495936, "obj2": 0.4047265210080526}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / RRS ) - ( ( MDR - BR ) * ( ( DDR + BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,Min( ( RRSe - MUC ) ,Min( RRSe ,CS ) ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( DS - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,Max( MUC,DS ) ) ) ) ) - CS ) ) )", "obj1": 0.9044715447154471, "obj2": 0.030798595812507792}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - Min( Min( DDR ,FirstVNF_RAM_Server ) ,MRS ) ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.15040650406504066, "obj2": 0.6359971186619605}, {"determining": "( ( DDR - Max( ( ( DDR - BR ) + ( Min( ( ARS * FirstVNF_RAM ) ,AMS ) / ( FirstVNF_CPU_Server - ACS ) ) ),FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Min( MUM ,RCSe ) + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC / MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( MUR / MUM ) )", "obj1": 0.21951219512195122, "obj2": 0.5865380513253367}, {"determining": "( Min( Min( Min( ( ( ACS - ( ACS + ACS ) ) * ( RRS - FirstVNF_Mem_Server ) ) ,Min( FirstVNF_RAM_Server ,AMS ) ) ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( Min( RMSe ,( Min( MUM ,MLU ) / MLU ) ) / RCSe ) ) - ( ( CS * CS ) * ( Min( ( ( CS / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.725609756097561, "obj2": 0.09721864397525114}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( ( ( BR + DDR ) + FirstVNF_RAM_Server ) - Min( FirstVNF_CPU_Server ,MDR ) ) ) ) / FirstVNF_Mem_Server ),( ARS - ( MDR / MDR ) ) ) ,( ARS / ( MDR / MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) - ( ( ( ( MLU + DS ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUM ) * ( ( ( ( MLU + DS ) - Min( DS ,( RMSe + ( DS + MUR ) ) ) ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.4735772357723577, "obj2": 0.2761729652781441}, {"determining": "Min( ( ( Min( Max( CRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,( MDR + Min( DDR ,PN ) ) ) ) / BR ) + Min( Const ,ARS ) ) ,( ARS + ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( ( ( ( RMSe + CS ) - ( MUM - ( RRSe - MLU ) ) ) + Min( ( MLU - ( MUC / MUC ) ) ,( Max( DS,RMSe ) - RMSe ) ) ) - CS ) ) * ( ( MLU - Min( Max( ( RMSe / ( RCSe / MUR ) ),( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.43902439024390244, "obj2": 0.2955935327217584}, {"determining": "Min( ( Min( FirstVNF_RAM ,BR ) - ( ( FirstVNF_CPU / RRS ) + ARS ) ) ,Max( ( Min( Min( FirstVNF_Mem_Server ,( MRS + ACS ) ) ,DDR ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUM ) + CS ) ,DS ) * ( RRSe * ( Max( MUM,Min( ( ( MUM - RRSe ) - RCSe ) ,DS ) ) - ( ( MUC * RRSe ) - ( MUC - ( ( RCSe * DS ) + MUC ) ) ) ) ) ) / Min( ( ( ( Max( ( CS * ( CS / DS ) ),( Max( DS,DS ) - MLU ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.5873983739837398, "obj2": 0.22094823163787}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ACS / CRS ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem * MRS ) ) ) / FirstVNF_Mem_Server ),( Const / ARS ) ) )", "choosing": "( Min( MUR ,Min( ( MLU / MUC ) ,MUR ) ) / Min( ( ( ( ( MLU / ( ( DS / CS ) - ( RCSe - RMSe ) ) ) - ( MUR + RRSe ) ) - ( ( CS * ( MLU * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MUM ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6016260162601627, "obj2": 0.2114313537026848}, {"determining": "( Min( Min( Min( ( DDR - PN ) ,FirstVNF_CPU ) ,FirstVNF_Mem ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( Min( ( ( Const + FirstVNF_Mem_Server ) - MDR ) ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - AMS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,( RRSe / ( RRSe * ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( ( ( MUC / MUC ) - MUM ) - Max( MUR,MUM ) ) - MLU ) )", "obj1": 0.6727642276422764, "obj2": 0.1327663879028987}, {"determining": "Min( Max( ARS,( ACS - MDR ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.42886178861788615, "obj2": 0.3073426488461163}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( BR ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MLU ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.4186991869918699, "obj2": 0.31330844091583376}, {"determining": "( ( DDR - Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( ACS ,DDR ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),AMS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.1910569105691057, "obj2": 0.5946686663265097}, {"determining": "( ( DDR - Min( ( ( DDR - ( ARS - ( MDR / MDR ) ) ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + RMSe ) )", "obj1": 0.1951219512195122, "obj2": 0.5942088963489797}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( Min( Min( FirstVNF_Mem ,Min( PN ,FirstVNF_CPU ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_RAM_Server ,( Const - MDR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) ) / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR * DS ) / ( ( ( ( ( MUC / MUC ) - MUM ) - ( ( MLU + DS ) / CS ) ) - ( ( CS * CS ) * ( Min( ( MUM * RRSe ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.9939024390243902, "obj2": 0.0023761949707927733}, {"determining": "Min( Max( ( Min( ( FirstVNF_RAM_Server / ( Const - MDR ) ) ,Max( Max( ( FirstVNF_RAM_Server + DDR ),( ( DDR + FirstVNF_CPU ) * RRS ) ),MDR ) ) / FirstVNF_Mem_Server ),( ( Max( ( FirstVNF_RAM - ( MDR - DDR ) ),MRS ) + ( RRS - CRS ) ) - ARS ) ) ,( ( MDR / ( ACS + ( ( FirstVNF_Mem_Server * BR ) + FirstVNF_CPU ) ) ) - ARS ) )", "choosing": "( ( MUM - ( MUC / MUC ) ) - ( ( ( ( CS * ( CS * MUM ) ) * ( Min( DS ,Min( RCSe ,Max( MLU,RCSe ) ) ) - MLU ) ) - ( MUM - ( MUC / Min( ( MUM * MUM ) ,Min( MUC ,MUR ) ) ) ) ) + ( MUR - ( MLU / ( MLU * ( MLU / DS ) ) ) ) ) )", "obj1": 0.45934959349593496, "obj2": 0.2874662469409454}], "17": [{"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( ( ( MDR / AMS ) / ( RRS - CRS ) ) / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - Min( RMSe ,CS ) ) + Min( Min( ( MUM * MUM ) ,Min( MUC ,MUR ) ) ,( DS + Max( RRSe,RRSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( RRSe,RCSe ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( Min( Min( BR ,FirstVNF_Mem ) ,FirstVNF_RAM ) ,PN ) ,Min( Max( ( Max( Const,RRS ) + FirstVNF_CPU ),Max( MRS,FirstVNF_Mem ) ) ,( ( MDR * MDR ) + DDR ) ) ) - ( ( MDR - BR ) * ( ( DDR - BR ) - RRS ) ) ),( FirstVNF_CPU + ARS ) ) - Max( MDR,( Max( Max( BR,( AMS * MRS ) ),PN ) / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,( RCSe - Min( ( RRSe - Max( CS,MLU ) ) ,MUM ) ) ) ) - Min( ( MUC - ( CS - ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,MUM ) ) ) ) - ( ( DS * MUC ) * ( ( MUR * ( MLU + RCSe ) ) * ( ( ( RRSe * RCSe ) / CS ) - MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "( ( DDR - Min( ( ( ( BR + DDR ) + FirstVNF_RAM_Server ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / CS )", "obj1": 0.11178861788617886, "obj2": 0.6949459705601257}, {"determining": "( ( DDR - Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.13617886178861788, "obj2": 0.6504648843052717}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( BR ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MLU ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.4186991869918699, "obj2": 0.31330844091583376}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ( ( MRS + FirstVNF_Mem ) + FirstVNF_CPU_Server ) * ( Min( MDR ,Min( ACS ,ACS ) ) / ACS ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) )", "choosing": "( ( DS * ( ( ( ( Min( ( RMSe - DS ) ,DS ) - ( ( MLU + DS ) / CS ) ) - CS ) - RMSe ) * DS ) ) / ( ( ( Min( RCSe ,MLU ) - Min( ( MLU * Max( ( DS + MUM ),MUC ) ) ,MLU ) ) + RCSe ) + ( MLU / RRSe ) ) )", "obj1": 0.3394308943089431, "obj2": 0.4240258038551698}, {"determining": "( ( DDR - MDR ) + ( ( ARS / ( Const - Max( PN,FirstVNF_CPU_Server ) ) ) / Min( RRS ,PN ) ) )", "choosing": "( Min( ( ( Max( RMSe,RCSe ) * ( ( MUC - MLU ) * ( RCSe + MUR ) ) ) - RRSe ) ,( MUM - MUR ) ) / ( DS * ( RCSe + RCSe ) ) )", "obj1": 0.5589430894308943, "obj2": 0.2273544465376172}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / ( ( ( BR - RRS ) / MRS ) * CRS ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( Max( ( MUC - MLU ),DS ) + ( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5708831152191715}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),BR ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( ( Max( FirstVNF_CPU,MRS ) * FirstVNF_RAM ) - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe / RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * ( MUR - Min( RMSe ,MUR ) ) ) )", "obj1": 0.35365853658536583, "obj2": 0.36795038545009157}, {"determining": "( ( FirstVNF_Mem - BR ) + ( FirstVNF_RAM_Server * Const ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUR ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - Min( ( ( CS / CS ) * MUM ) ,( ( MLU + MUM ) / MUC ) ) ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.5042739685215872}, {"determining": "( Min( ( DDR / DDR ) ,AMS ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( DDR ,( Const - MDR ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * Max( Max( RMSe,( RRSe * MLU ) ),MUM ) ) / ( ( ( ( MUC / MUC ) - MUM ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUR ) ,DS ) - ( MLU + DS ) ) ) ) - MLU ) )", "obj1": 0.6544715447154471, "obj2": 0.14363237556052863}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) + ( ( Max( Const,FirstVNF_Mem_Server ) - BR ) / ( ARS + ( MDR / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( Min( RMSe ,Min( CS ,( ( ( DS / ( MUM / MUR ) ) / MLU ) + ( MUM - MLU ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.524390243902439, "obj2": 0.24641548978798122}, {"determining": "( ( DDR - Min( ( ( DDR - ( ARS - ( MDR / MDR ) ) ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.2886178861788618, "obj2": 0.4671678581283321}, {"determining": "( ( DDR - Min( ( ( DDR - BR ) + ( CRS / ( BR - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),AMS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( RMSe ,MUR ) / Max( CS,MUM ) ) ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.23373983739837398, "obj2": 0.5257332076175772}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( ( ( ( Min( MUC ,RMSe ) * DS ) * DS ) * DS ) / ( ( ( MUM - ( MUC / MUC ) ) * Min( ( ( MUC * ( ( MUM - DS ) / MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) - ( ( RMSe / MUC ) + RCSe ) ) )", "obj1": 0.8455284552845529, "obj2": 0.06633906379238867}, {"determining": "( ( ( FirstVNF_CPU / BR ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MLU + DS ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.14634146341463414, "obj2": 0.6310500585708144}, {"determining": "( ( ( ( MDR - MRS ) * MDR ) * Min( RRS ,FirstVNF_Mem_Server ) ) - Min( Min( FirstVNF_Mem ,PN ) ,Max( DDR,MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUC ) ) ,( Min( CS ,( Max( ( MLU / ( DS - DS ) ),( ( ( CS * DS ) + RMSe ) * Min( CS ,RRSe ) ) ) + ( Min( ( ( RCSe * RMSe ) * Max( MUM,MUR ) ) ,( CS / ( MUC + MLU ) ) ) * RMSe ) ) ) * ( ( ( ( MLU + DS ) - RCSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.733739837398374, "obj2": 0.09169576533032314}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( Min( BR ,MDR ) * ( Max( Min( PN ,MDR ),FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUR ,( Max( CS,( Min( ( ( MUC * DS ) * ( RRSe - MUC ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) / ( MUC * DS ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / CS ) ) )", "obj1": 0.790650406504065, "obj2": 0.07018192380715453}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ACS / CRS ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem * MRS ) ) ) / FirstVNF_Mem_Server ),( Const / ARS ) ) )", "choosing": "( Min( MUR ,Min( ( MLU / MUC ) ,MUR ) ) / Min( ( ( ( ( MLU / ( ( DS / CS ) - ( RCSe - RMSe ) ) ) - ( MUR + RRSe ) ) - ( ( CS * ( MLU * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MUM ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6524390243902439, "obj2": 0.1842048761746905}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) ) / FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( Min( Max( ( DS * RCSe ),RCSe ) ,MUC ) ,CS ) / Max( RMSe,RCSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008959392092081873}, {"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9451219512195121, "obj2": 0.017624444859958163}, {"determining": "Min( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server - ACS ) )", "choosing": "( Min( MUR ,( ( DS * MUC ) / Max( Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ),( Min( ( ( CS * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUR * ( Min( MUC ,DS ) - MUC ) ) ,( MUC / CS ) ) )", "obj1": 0.7703252032520326, "obj2": 0.07627025128245604}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - Min( Min( DDR ,FirstVNF_RAM_Server ) ,MRS ) ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.16666666666666666, "obj2": 0.6180001617932992}, {"determining": "( Min( Min( Min( ( DDR - PN ) ,FirstVNF_CPU ) ,FirstVNF_Mem ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( Min( ( ( Const + FirstVNF_Mem_Server ) - MDR ) ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - AMS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,( RRSe / ( RRSe * ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( ( ( MUC / MUC ) - MUM ) - Max( MUR,MUM ) ) - MLU ) )", "obj1": 0.6727642276422764, "obj2": 0.1327663879028987}, {"determining": "Min( ( Min( FirstVNF_RAM ,BR ) - ( ( FirstVNF_CPU / RRS ) + ARS ) ) ,Max( ( Min( Min( FirstVNF_Mem_Server ,( MRS + ACS ) ) ,DDR ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUM ) + CS ) ,DS ) * ( RRSe * ( Max( MUM,Min( ( ( MUM - RRSe ) - RCSe ) ,DS ) ) - ( ( MUC * RRSe ) - ( MUC - ( ( RCSe * DS ) + MUC ) ) ) ) ) ) / Min( ( ( ( Max( ( CS * ( CS / DS ) ),( Max( DS,DS ) - MLU ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.5873983739837398, "obj2": 0.22094823163787}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + MLU ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.24796747967479674, "obj2": 0.5044435880101781}, {"determining": "( ( DDR - Max( ( ( DDR - BR ) + ( Min( ( ARS * FirstVNF_RAM ) ,AMS ) / ( FirstVNF_CPU_Server - ACS ) ) ),FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Min( MUM ,RCSe ) + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC / MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( MUR / MUM ) )", "obj1": 0.21951219512195122, "obj2": 0.5865380513253367}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( CRS ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( RCSe + CS ) ) ) * Min( RRSe ,RMSe ) ) ) ) ) ,( ( CS + MUC ) * ( MUR / CS ) ) )", "obj1": 0.6971544715447154, "obj2": 0.12703320633116685}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( ( RRS + MRS ) / ( Const - ACS ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( ( MLU * MUM ) ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.3008130081300813, "obj2": 0.4508410173777198}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / AMS ) ) ,Max( FirstVNF_RAM_Server,CRS ) ) - ( ( BR - PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( MDR + FirstVNF_CPU_Server ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( CS ,( ( Max( ( MUM - DS ),MUM ) - MUC ) * DS ) ) * Min( CS ,MUM ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( Max( MUC,Max( CS,MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.9247967479674797, "obj2": 0.025350160175976775}, {"determining": "Min( ( ( Min( Max( CRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,( MDR + Min( DDR ,PN ) ) ) ) / BR ) + Min( Const ,ARS ) ) ,( ARS + ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( ( ( ( RMSe + CS ) - ( MUM - ( RRSe - MLU ) ) ) + Min( ( MLU - ( MUC / MUC ) ) ,( Max( DS,RMSe ) - RMSe ) ) ) - CS ) ) * ( ( MLU - Min( Max( ( RMSe / ( RCSe / MUR ) ),( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.43902439024390244, "obj2": 0.2955935327217584}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( Const ,MRS ) ,PN ) ) ) ,( ( PN - BR ) + ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) / FirstVNF_RAM ),( Const - ARS ) ) ,Min( FirstVNF_RAM ,Max( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ),( Const - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( ( Min( ( ( MUC - CS ) * MUM ) ,MUM ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( RMSe + MUM ) - RMSe ) ,( MUM - ( MUC / MUC ) ) ) ) - CS ) ) ,MUR ) / ( Min( CS ,MUR ) - ( ( Max( ( ( ( DS / RMSe ) - RRSe ) * ( Min( RCSe ,MLU ) - DS ) ),RMSe ) + DS ) - MUC ) ) )", "obj1": 0.508130081300813, "obj2": 0.2519099280807564}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / RRS ) - ( ( MDR - BR ) * ( ( DDR + BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,Min( ( RRSe - MUC ) ,Min( RRSe ,CS ) ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( DS - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,Max( MUC,DS ) ) ) ) ) - CS ) ) )", "obj1": 0.9044715447154471, "obj2": 0.030798595812507792}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN + RRS ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,Min( ARS ,( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( Min( MLU ,CS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( DS + MUM ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MLU / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6341463414634146, "obj2": 0.1907699451320705}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ACS / CRS ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem * MRS ) ) ) / FirstVNF_Mem_Server ),( Const / ARS ) ) )", "choosing": "( Min( MUR ,Min( ( MLU / MUC ) ,MUR ) ) / Min( ( ( ( ( MLU / ( ( DS / CS ) - ( RCSe - RMSe ) ) ) - ( MUR + RRSe ) ) - ( ( CS * ( MLU * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MUM ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6016260162601627, "obj2": 0.2114313537026848}, {"determining": "( ( ( ( Max( ARS,MDR ) * PN ) - FirstVNF_Mem_Server ) + Min( ARS ,RRS ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.37601626016260165, "obj2": 0.3467298635693161}, {"determining": "Min( Max( ( Min( ( FirstVNF_Mem_Server * ( Min( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ,Min( ACS ,ACS ) ) / ACS ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( CRS / MDR ) ) )", "choosing": "( ( DS + ( ( ( ( MLU - Min( RCSe ,DS ) ) - CS ) - RMSe ) * DS ) ) / ( ( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( RMSe + MUM ),MUC ) ) ,MLU ) ) + RCSe ) + ( MLU / RRSe ) ) )", "obj1": 0.34959349593495936, "obj2": 0.4047265210080526}, {"determining": "( ( ( ( Max( ARS,MDR ) * PN ) - FirstVNF_Mem_Server ) + Min( ARS ,RRS ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.37601626016260165, "obj2": 0.3467298635693161}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( ( ( MDR / AMS ) / ( RRS - CRS ) ) / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + ( ( MUM - ( MUC / MUC ) ) + ( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( Min( MUM ,( CS / MUC ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) )", "obj1": 0.8902439024390244, "obj2": 0.04053960185397626}, {"determining": "( ( Max( FirstVNF_Mem_Server,AMS ) - DDR ) + ( FirstVNF_RAM_Server / Const ) )", "choosing": "( Min( ( Max( MUM,( CS * CS ) ) * ( ( ( ( MUM - MUM ) - Min( MUR ,Max( CS,DS ) ) ) + Min( Min( MUR ,( MUM / RMSe ) ) ,( ( MLU + CS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.3008130081300813, "obj2": 0.4508410173777198}, {"determining": "Min( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server - ACS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.6991869918699187, "obj2": 0.10597669504275103}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU * Const ) ) ) ,( FirstVNF_RAM_Server * ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( ( ( Min( RCSe ,MUM ) + ( DS / ( DS + MLU ) ) ) - ( MUM - MUM ) ) * ( ( MLU - Min( ( MLU * ( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( MUC / ( DS - RCSe ) ) )", "obj1": 0.4959349593495935, "obj2": 0.2672216561758173}, {"determining": "Min( Max( ARS,( ACS - MDR ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.42886178861788615, "obj2": 0.3073426488461163}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + MLU ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.18699186991869918, "obj2": 0.611822634356064}, {"determining": "( ( Const * FirstVNF_Mem ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( CRS * BR ) ) / FirstVNF_Mem_Server ),AMS ) ) ) / ( ACS - AMS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( Max( ( MUM * ( MUM * RMSe ) ),Min( ( MUC / CS ) ,( RMSe * MLU ) ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( DS * ( RCSe + RCSe ) ) ) ) ,MUR ) / ( ( MUC - ( MUR + ( CS + ( MUC * ( ( RMSe * MLU ) * CS ) ) ) ) ) - MUC ) )", "obj1": 0.241869918699187, "obj2": 0.5180843420802282}, {"determining": "( ( DDR - Min( ( ( DDR - ( ARS - ( MDR / MDR ) ) ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + RMSe ) )", "obj1": 0.1951219512195122, "obj2": 0.5942088963489797}, {"determining": "( Min( Min( Min( ( ( ACS - ( ACS + ACS ) ) * ( RRS - FirstVNF_Mem_Server ) ) ,Min( FirstVNF_RAM_Server ,AMS ) ) ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( Min( RMSe ,( Min( MUM ,MLU ) / MLU ) ) / RCSe ) ) - ( ( CS * CS ) * ( Min( ( ( CS / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.725609756097561, "obj2": 0.09721864397525114}, {"determining": "( Min( Min( Min( ( ( ACS - ( ACS + ACS ) ) * ( RRS - FirstVNF_Mem_Server ) ) ,Min( FirstVNF_RAM_Server ,AMS ) ) ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) / ( ( ( MUM - ( Min( RMSe ,( Min( MUM ,MLU ) / MLU ) ) / RCSe ) ) - ( ( CS * CS ) * ( Min( ( ( CS / CS ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.7134146341463414, "obj2": 0.10536745493258362}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( Min( DS ,CS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6199186991869918, "obj2": 0.19880775670050876}], "18": [{"determining": "( ( Min( FirstVNF_Mem ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) - FirstVNF_RAM )", "choosing": "( Min( MUR ,( ( MUC * MLU ) / Max( CS,( Min( ( MUM + ( RCSe * RMSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( MUC + CS ) + MUC ) ,( MUC / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( ( ( MDR / AMS ) / ( RRS - CRS ) ) / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - Min( RMSe ,CS ) ) + Min( Min( ( MUM * MUM ) ,Min( MUC ,MUR ) ) ,( DS + Max( RRSe,RRSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( ( MUC * DS ) / Max( RRSe,RCSe ) ) ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( ( ( ( Min( MUC ,RMSe ) * DS ) * DS ) * DS ) / ( ( ( MUM - ( MUC / MUC ) ) * Min( ( ( MUC * ( ( MUM - DS ) / MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) - ( ( RMSe / MUC ) + RCSe ) ) )", "obj1": 0.8455284552845529, "obj2": 0.06633906379238867}, {"determining": "( ( DDR - Min( ( ( ( BR + DDR ) + FirstVNF_RAM_Server ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / CS )", "obj1": 0.11178861788617886, "obj2": 0.6949459705601257}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),BR ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( ( Max( FirstVNF_CPU,MRS ) * FirstVNF_RAM ) - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe / RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * ( MUR - Min( RMSe ,MUR ) ) ) )", "obj1": 0.35365853658536583, "obj2": 0.36795038545009157}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( ( ( MDR / AMS ) / ( RRS - CRS ) ) / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + ( ( MUM - ( MUC / MUC ) ) + ( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( Min( MUM ,( CS / MUC ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) )", "obj1": 0.8902439024390244, "obj2": 0.04053960185397626}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ( ( MRS + FirstVNF_Mem ) + FirstVNF_CPU_Server ) * ( Min( MDR ,Min( ACS ,ACS ) ) / ACS ) ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) )", "choosing": "( ( DS * ( ( ( ( Min( ( RMSe - DS ) ,DS ) - ( ( MLU + DS ) / CS ) ) - CS ) - RMSe ) * DS ) ) / ( ( ( Min( RCSe ,MLU ) - Min( ( MLU * Max( ( DS + MUM ),MUC ) ) ,MLU ) ) + RCSe ) + ( MLU / RRSe ) ) )", "obj1": 0.3394308943089431, "obj2": 0.4240258038551698}, {"determining": "( ( DDR - MDR ) + ( ( ARS / ( Const - Max( PN,FirstVNF_CPU_Server ) ) ) / Min( RRS ,PN ) ) )", "choosing": "( Min( ( ( Max( RMSe,RCSe ) * ( ( MUC - MLU ) * ( RCSe + MUR ) ) ) - RRSe ) ,( MUM - MUR ) ) / ( DS * ( RCSe + RCSe ) ) )", "obj1": 0.5589430894308943, "obj2": 0.2273544465376172}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / ( ( ( BR - RRS ) / MRS ) * CRS ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( Max( ( MUC - MLU ),DS ) + ( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5708831152191715}, {"determining": "( ( FirstVNF_Mem - BR ) + ( FirstVNF_RAM_Server * Const ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,MUR ) ) ,( ( CS + MUC ) * ( ( ( ( MLU + DS ) - Min( ( ( CS / CS ) * MUM ) ,( ( MLU + MUM ) / MUC ) ) ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.2865853658536585, "obj2": 0.5042739685215872}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.3983739837398374, "obj2": 0.3278189297623899}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( ARS ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.3434959349593496, "obj2": 0.40449633634791893}, {"determining": "( ( DDR - Min( ( ( DDR - BR ) + ( CRS / ( BR - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),AMS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( RMSe ,MUR ) / Max( CS,MUM ) ) ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.23373983739837398, "obj2": 0.5257332076175772}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( Min( DS ,CS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6463414634146342, "obj2": 0.18354723297269843}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) + ( ( Max( Const,FirstVNF_Mem_Server ) - BR ) / ( ARS + ( MDR / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( Min( RMSe ,Min( CS ,( ( ( DS / ( MUM / MUR ) ) / MLU ) + ( MUM - MLU ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.524390243902439, "obj2": 0.24641548978798122}, {"determining": "( Min( ( DDR / DDR ) ,AMS ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( DDR ,( Const - MDR ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * Max( Max( RMSe,( RRSe * MLU ) ),MUM ) ) / ( ( ( ( MUC / MUC ) - MUM ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUR ) ,DS ) - ( MLU + DS ) ) ) ) - MLU ) )", "obj1": 0.6544715447154471, "obj2": 0.14363237556052863}, {"determining": "( ( ( ( ACS / CRS ) - Min( Min( DDR ,FirstVNF_RAM_Server ) ,MRS ) ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + Min( ( Min( RRSe ,CS ) / Max( CS,RCSe ) ) ,MUR ) ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.13211382113821138, "obj2": 0.6681976074596155}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) ) / FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( Min( Max( ( DS * RCSe ),RCSe ) ,MUC ) ,CS ) / Max( RMSe,RCSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008959392092081873}, {"determining": "( ( ( FirstVNF_CPU / BR ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MLU + DS ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.14634146341463414, "obj2": 0.6310500585708144}, {"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9451219512195121, "obj2": 0.017624444859958163}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - Min( Min( DDR ,FirstVNF_RAM_Server ) ,MRS ) ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.16666666666666666, "obj2": 0.6180001617932992}, {"determining": "( ( DDR - Min( ( ( DDR - ( ARS - ( MDR / MDR ) ) ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + RMSe ) )", "obj1": 0.1951219512195122, "obj2": 0.5942088963489797}, {"determining": "Min( ( Min( FirstVNF_RAM ,BR ) - ( ( FirstVNF_CPU / RRS ) + ARS ) ) ,Max( ( Min( Min( FirstVNF_Mem_Server ,( MRS + ACS ) ) ,DDR ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUM ) + CS ) ,DS ) * ( RRSe * ( Max( MUM,Min( ( ( MUM - RRSe ) - RCSe ) ,DS ) ) - ( ( MUC * RRSe ) - ( MUC - ( ( RCSe * DS ) + MUC ) ) ) ) ) ) / Min( ( ( ( Max( ( CS * ( CS / DS ) ),( Max( DS,DS ) - MLU ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.5873983739837398, "obj2": 0.22094823163787}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + MLU ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.24796747967479674, "obj2": 0.5044435880101781}, {"determining": "( ( DDR - Max( ( ( DDR - BR ) + ( Min( ( ARS * FirstVNF_RAM ) ,AMS ) / ( FirstVNF_CPU_Server - ACS ) ) ),FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Min( MUM ,RCSe ) + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC / MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( MUR / MUM ) )", "obj1": 0.21951219512195122, "obj2": 0.5865380513253367}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - Min( Min( DDR ,FirstVNF_RAM_Server ) ,MRS ) ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.13414634146341464, "obj2": 0.650160150273464}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( CRS ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( RCSe + CS ) ) ) * Min( RRSe ,RMSe ) ) ) ) ) ,( ( CS + MUC ) * ( MUR / CS ) ) )", "obj1": 0.6971544715447154, "obj2": 0.12703320633116685}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / CS ) ) )", "obj1": 0.7967479674796748, "obj2": 0.06815975499172207}, {"determining": "( ( Max( FirstVNF_Mem_Server,AMS ) - DDR ) + ( FirstVNF_RAM_Server / Const ) )", "choosing": "( Min( ( Max( MUM,( CS * CS ) ) * ( ( ( ( MUM - MUM ) - Min( MUR ,Max( CS,DS ) ) ) + Min( Min( MUR ,( MUM / RMSe ) ) ,( ( MLU + CS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.3008130081300813, "obj2": 0.4508410173777198}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + MLU ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.18699186991869918, "obj2": 0.611822634356064}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Max( MRS,DDR ) ) ) / FirstVNF_Mem_Server ),Min( Const ,RRS ) ) ,( ARS - ( PN / MDR ) ) )", "choosing": "( ( ( ( MUM - MUM ) - ( Min( RCSe ,MUM ) + CS ) ) * ( ( CS - Min( ( ( CS / RRSe ) * MLU ) ,MUC ) ) - CS ) ) * ( ( ( RMSe / DS ) * CS ) / ( ( ( ( RCSe * ( RCSe - Min( MUC ,RCSe ) ) ) / MUR ) / ( RMSe * ( Min( ( MUC + DS ) ,( MLU * CS ) ) * Min( ( RMSe * MUC ) ,Max( MUC,DS ) ) ) ) ) + CS ) ) )", "obj1": 0.46747967479674796, "obj2": 0.2949872033116638}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / AMS ) ) ,Max( FirstVNF_RAM_Server,CRS ) ) - ( ( BR - PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( MDR + FirstVNF_CPU_Server ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( CS ,( ( Max( ( MUM - DS ),MUM ) - MUC ) * DS ) ) * Min( CS ,MUM ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( Max( MUC,Max( CS,MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.9247967479674797, "obj2": 0.025350160175976775}, {"determining": "Min( ( ( Min( Max( CRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,( MDR + Min( DDR ,PN ) ) ) ) / BR ) + Min( Const ,ARS ) ) ,( ARS + ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( ( ( ( RMSe + CS ) - ( MUM - ( RRSe - MLU ) ) ) + Min( ( MLU - ( MUC / MUC ) ) ,( Max( DS,RMSe ) - RMSe ) ) ) - CS ) ) * ( ( MLU - Min( Max( ( RMSe / ( RCSe / MUR ) ),( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.43902439024390244, "obj2": 0.2955935327217584}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / RRS ) - ( ( MDR - BR ) * ( ( DDR + BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,Min( ( RRSe - MUC ) ,Min( RRSe ,CS ) ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( DS - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,Max( MUC,DS ) ) ) ) ) - CS ) ) )", "obj1": 0.9044715447154471, "obj2": 0.030798595812507792}, {"determining": "( ( DDR - Min( ( ( DDR - ( ARS - ( MDR / MDR ) ) ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.2886178861788618, "obj2": 0.4671678581283321}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( BR ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MLU ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.4186991869918699, "obj2": 0.31330844091583376}, {"determining": "Min( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) ) ) ,( FirstVNF_CPU_Server - ACS ) )", "choosing": "( Min( MUR ,( ( DS * MUC ) / Max( Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ),( Min( ( ( CS * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( MUR * ( Min( MUC ,DS ) - MUC ) ) ,( MUC / CS ) ) )", "obj1": 0.7703252032520326, "obj2": 0.07627025128245604}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU * Const ) ) ) ,( FirstVNF_RAM_Server * ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( ( ( Min( RCSe ,MUM ) + ( DS / ( DS + MLU ) ) ) - ( MUM - MUM ) ) * ( ( MLU - Min( ( MLU * ( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( MUC / ( DS - RCSe ) ) )", "obj1": 0.4959349593495935, "obj2": 0.2672216561758173}, {"determining": "( ( ( ( Max( ARS,MDR ) * PN ) - FirstVNF_Mem_Server ) + Min( ARS ,RRS ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.37601626016260165, "obj2": 0.3467298635693161}, {"determining": "( ( ( ( Max( ARS,MDR ) * PN ) - FirstVNF_Mem_Server ) + Min( ARS ,RRS ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.37601626016260165, "obj2": 0.3467298635693161}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN + RRS ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,Min( ARS ,( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( Min( MLU ,CS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( DS + MUM ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MLU / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6341463414634146, "obj2": 0.1907699451320705}, {"determining": "Min( Max( ARS,( Min( ( ( ACS - ( ACS + ACS ) ) * ( RRS - FirstVNF_Mem_Server ) ) ,Min( FirstVNF_RAM_Server ,AMS ) ) - MDR ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( ( MUM - ( Min( RMSe ,( Min( MUM ,MLU ) / MLU ) ) / RCSe ) ) - ( ( CS * CS ) * ( Min( ( ( CS / CS ) * MUM ) ,DS ) - MLU ) ) ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUM ) ,DS ) - MLU ) ) ) - MLU ) )", "obj1": 0.47764227642276424, "obj2": 0.2803793342918508}, {"determining": "( Min( Min( Min( ( DDR - PN ) ,FirstVNF_CPU ) ,FirstVNF_Mem ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( Min( ( ( Const + FirstVNF_Mem_Server ) - MDR ) ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - AMS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,( RRSe / ( RRSe * ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( ( ( MUC / MUC ) - MUM ) - Max( MUR,MUM ) ) - MLU ) )", "obj1": 0.6727642276422764, "obj2": 0.1327663879028987}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( ( RRS + MRS ) / ( Const - ACS ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( ( MLU * MUM ) ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.3008130081300813, "obj2": 0.4508410173777198}, {"determining": "( Min( Min( FirstVNF_Mem ,Min( Max( BR,FirstVNF_Mem ) ,FirstVNF_Mem ) ) ,FirstVNF_RAM ) - MDR )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( RCSe * ( MUR / RRSe ) ),( DS / RMSe ) ) ) ,( ( ( MUC / ( ( RMSe / MUR ) / ( CS + RCSe ) ) ) * DS ) + MUM ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.7560975609756098, "obj2": 0.08286210003877342}, {"determining": "( ( Const * FirstVNF_Mem ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( CRS * BR ) ) / FirstVNF_Mem_Server ),AMS ) ) ) / ( ACS - AMS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( Max( ( MUM * ( MUM * RMSe ) ),Min( ( MUC / CS ) ,( RMSe * MLU ) ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( DS * ( RCSe + RCSe ) ) ) ) ,MUR ) / ( ( MUC - ( MUR + ( CS + ( MUC * ( ( RMSe * MLU ) * CS ) ) ) ) ) - MUC ) )", "obj1": 0.241869918699187, "obj2": 0.5180843420802282}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ACS / CRS ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem * MRS ) ) ) / FirstVNF_Mem_Server ),( Const / ARS ) ) )", "choosing": "( Min( MUR ,Min( ( MLU / MUC ) ,MUR ) ) / Min( ( ( ( ( MLU / ( ( DS / CS ) - ( RCSe - RMSe ) ) ) - ( MUR + RRSe ) ) - ( ( CS * ( MLU * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MUM ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6016260162601627, "obj2": 0.2114313537026848}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( Min( BR ,MDR ) * ( Max( Min( PN ,MDR ),FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUR ,( Max( CS,( Min( ( ( MUC * DS ) * ( RRSe - MUC ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) / ( MUC * DS ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / CS ) ) )", "obj1": 0.790650406504065, "obj2": 0.07018192380715453}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_RAM - ACS ) ) ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( ( ( MUM - MUM ) - ( Min( RCSe ,MUM ) + CS ) ) * ( ( ( ( DS + MLU ) - RMSe ) - Min( ( MLU * ( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.48577235772357724, "obj2": 0.27384993675130015}], "19": [{"determining": "( Min( ( Min( Min( Min( Min( BR ,FirstVNF_Mem ) ,FirstVNF_RAM ) ,PN ) ,BR ) - ( ( MDR - BR ) * ( ( DDR - BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,( RCSe - DS ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,MUM ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) * FirstVNF_RAM ) - FirstVNF_RAM )", "choosing": "( Min( MUR ,( ( MUC * MLU ) / Max( CS,( Min( ( MUM + ( RCSe * RMSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( MUC + CS ) + MUC ) ,( MUC / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - MDR )", "choosing": "( Min( MUC ,( RRSe / ( RRSe * ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( ( ( MUC / MUC ) - MUM ) - Max( MUR,MUM ) ) - MLU ) )", "obj1": 0.7398373983739838, "obj2": 0.113122975075757}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) + ( ( Max( Const,FirstVNF_Mem_Server ) - BR ) / ( ARS + ( MDR / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( Min( RMSe ,Min( CS ,( ( ( DS / ( MUM / MUR ) ) / MLU ) + ( MUM - MLU ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.524390243902439, "obj2": 0.24641548978798122}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU ) ,( ( Min( ( ( FirstVNF_CPU / BR ) + ( Const - MRS ) ) ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( ( AMS / MRS ) - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( DS * Min( RCSe ,Min( MUM ,( MLU - RCSe ) ) ) ) ) * ( ( ( ( MUM - ( MUC * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.3313008130081301, "obj2": 0.408260152183195}, {"determining": "( ( DDR - MDR ) + ( ( ARS / ( Const - Max( PN,FirstVNF_CPU_Server ) ) ) / Min( RRS ,PN ) ) )", "choosing": "( Min( ( ( Max( RMSe,RCSe ) * ( ( MUC - MLU ) * ( RCSe + MUR ) ) ) - RRSe ) ,( MUM - MUR ) ) / ( DS * ( RCSe + RCSe ) ) )", "obj1": 0.5589430894308943, "obj2": 0.2273544465376172}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( CRS ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( RCSe + CS ) ) ) * Min( RRSe ,RMSe ) ) ) ) ) ,( ( CS + MUC ) * ( MUR / CS ) ) )", "obj1": 0.6971544715447154, "obj2": 0.12703320633116685}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / ( ( ( BR - RRS ) / MRS ) * CRS ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( Max( ( MUC - MLU ),DS ) + ( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5708831152191715}, {"determining": "( Min( ( DDR / DDR ) ,AMS ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( DDR ,( Const - MDR ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * Max( Max( RMSe,( RRSe * MLU ) ),MUM ) ) / ( ( ( ( MUC / MUC ) - MUM ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUR ) ,DS ) - ( MLU + DS ) ) ) ) - MLU ) )", "obj1": 0.6544715447154471, "obj2": 0.14363237556052863}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( ( ( MDR / AMS ) / ( RRS - CRS ) ) / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + ( ( MUM - ( MUC / MUC ) ) + ( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( Min( MUM ,( CS / MUC ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) )", "obj1": 0.8902439024390244, "obj2": 0.04053960185397626}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - Min( Min( DDR ,FirstVNF_RAM_Server ) ,MRS ) ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.16666666666666666, "obj2": 0.6180001617932992}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN + RRS ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,Min( ARS ,( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( Min( MLU ,CS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( DS + MUM ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MLU / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6341463414634146, "obj2": 0.1907699451320705}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( Min( DS ,CS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6463414634146342, "obj2": 0.18354723297269843}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( CRS ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,( RRSe / ( RRSe * ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( ( ( MUC / MUC ) - MUM ) - Max( MUR,MUM ) ) - MLU ) )", "obj1": 0.8617886178861789, "obj2": 0.0661608172907669}, {"determining": "( ( DDR - Min( ( ( DDR - ( ARS - ( MDR / MDR ) ) ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.2886178861788618, "obj2": 0.4671678581283321}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),BR ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( ( Max( FirstVNF_CPU,MRS ) * FirstVNF_RAM ) - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe / RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * ( MUR - Min( RMSe ,MUR ) ) ) )", "obj1": 0.35365853658536583, "obj2": 0.36795038545009157}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) ) / FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( Min( Max( ( DS * RCSe ),RCSe ) ,MUC ) ,CS ) / Max( RMSe,RCSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008959392092081873}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU * Const ) ) ) ,( FirstVNF_RAM_Server * ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( ( ( Min( RCSe ,MUM ) + ( DS / ( DS + MLU ) ) ) - ( MUM - MUM ) ) * ( ( MLU - Min( ( MLU * ( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( MUC / ( DS - RCSe ) ) )", "obj1": 0.4959349593495935, "obj2": 0.2672216561758173}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( ARS ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.3434959349593496, "obj2": 0.40449633634791893}, {"determining": "( ( ( FirstVNF_CPU / BR ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MLU + DS ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.14634146341463414, "obj2": 0.6310500585708144}, {"determining": "( ( ( FirstVNF_CPU / BR ) + ( Const - MRS ) ) + Max( CRS,( ( ( Max( Max( Max( DDR,PN ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MLU + DS ) ) ) - CS ) ) ,MUR ) / CS )", "obj1": 0.10772357723577236, "obj2": 0.6889201496323}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ACS / CRS ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem * MRS ) ) ) / FirstVNF_Mem_Server ),( Const / ARS ) ) )", "choosing": "( Min( MUR ,Min( ( MLU / MUC ) ,MUR ) ) / Min( ( ( ( ( MLU / ( ( DS / CS ) - ( RCSe - RMSe ) ) ) - ( MUR + RRSe ) ) - ( ( CS * ( MLU * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MUM ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6016260162601627, "obj2": 0.2114313537026848}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( ( ( ( Min( MUC ,RMSe ) * DS ) * DS ) * DS ) / ( ( ( MUM - ( MUC / MUC ) ) * Min( ( ( MUC * ( ( MUM - DS ) / MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) - ( ( RMSe / MUC ) + RCSe ) ) )", "obj1": 0.8455284552845529, "obj2": 0.06633906379238867}, {"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9451219512195121, "obj2": 0.017624444859958163}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.3983739837398374, "obj2": 0.3278189297623899}, {"determining": "( ( Max( FirstVNF_Mem_Server,AMS ) - DDR ) + ( FirstVNF_RAM_Server / Const ) )", "choosing": "( Min( ( Max( MUM,( CS * CS ) ) * ( ( ( ( MUM - MUM ) - Min( MUR ,Max( CS,DS ) ) ) + Min( Min( MUR ,( MUM / RMSe ) ) ,( ( MLU + CS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.3008130081300813, "obj2": 0.4508410173777198}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / MDR ) ),AMS ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS + ( ( MUM - MUR ) * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( Min( MUC ,RMSe ) - ( Min( ( MUM - RMSe ) ,RRSe ) / CS ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.23373983739837398, "obj2": 0.5257332076175772}, {"determining": "( Min( Min( Min( ( DDR - PN ) ,FirstVNF_CPU ) ,FirstVNF_Mem ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( Min( ( ( Const + FirstVNF_Mem_Server ) - MDR ) ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - AMS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,( RRSe / ( RRSe * ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( ( ( MUC / MUC ) - MUM ) - Max( MUR,MUM ) ) - MLU ) )", "obj1": 0.6727642276422764, "obj2": 0.1327663879028987}, {"determining": "( ( DDR - Min( ( DDR - ( ARS - ( MDR / MDR ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),AMS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - DS ) ,( ( DS + MUM ) - RMSe ) ) ) - ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( RMSe ,MUR ) / Max( CS,MUM ) ) ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.2764227642276423, "obj2": 0.4914121865939936}, {"determining": "( Min( Min( FirstVNF_Mem ,Min( Max( BR,FirstVNF_Mem ) ,FirstVNF_Mem ) ) ,FirstVNF_RAM ) - MDR )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( RCSe * ( MUR / RRSe ) ),( DS / RMSe ) ) ) ,( ( ( MUC / ( ( RMSe / MUR ) / ( CS + RCSe ) ) ) * DS ) + MUM ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.7560975609756098, "obj2": 0.08286210003877342}, {"determining": "( ( DDR - Max( ( ( DDR - BR ) + ( Min( ( ARS * FirstVNF_RAM ) ,AMS ) / ( FirstVNF_CPU_Server - ACS ) ) ),FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Min( MUM ,RCSe ) + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC / MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( MUR / MUM ) )", "obj1": 0.21951219512195122, "obj2": 0.5865380513253367}, {"determining": "( ( ( FirstVNF_CPU / BR ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * RRSe ) )", "obj1": 0.13008130081300814, "obj2": 0.6586058048163914}, {"determining": "( Min( AMS ,FirstVNF_RAM ) + ( Min( RRS ,PN ) / ( ARS - ( MDR * MDR ) ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( ( DS + DS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + Min( ( Min( RRSe ,CS ) / Max( CS,RCSe ) ) ,MUR ) ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.11178861788617886, "obj2": 0.6806916224207019}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / CS ) ) )", "obj1": 0.7967479674796748, "obj2": 0.06815975499172207}, {"determining": "( ( ( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Max( FirstVNF_CPU_Server,( AMS - Min( ( MRS + AMS ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( ( MLU * DS ) - MUM ) - ( RMSe + MUR ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( ( CS - ( ( MLU + Max( MUM,MUR ) ) - RRSe ) ) + ( Max( ( ( MUM * Max( MLU,DS ) ) - Max( MUC,( CS - RRSe ) ) ),( Min( ( RRSe * MUR ) ,MUR ) / Max( MLU,RRSe ) ) ) * MUM ) ) * MUR ) )", "obj1": 0.18699186991869918, "obj2": 0.5964514278530805}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / AMS ) ) ,Max( FirstVNF_RAM_Server,CRS ) ) - ( ( BR - PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( MDR + FirstVNF_CPU_Server ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( CS ,( ( Max( ( MUM - DS ),MUM ) - MUC ) * DS ) ) * Min( CS ,MUM ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( Max( MUC,Max( CS,MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.9247967479674797, "obj2": 0.025350160175976775}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Max( MRS,DDR ) ) ) / FirstVNF_Mem_Server ),Min( Const ,RRS ) ) ,( ARS - ( PN / MDR ) ) )", "choosing": "( ( ( ( MUM - MUM ) - ( Min( RCSe ,MUM ) + CS ) ) * ( ( CS - Min( ( ( CS / RRSe ) * MLU ) ,MUC ) ) - CS ) ) * ( ( ( RMSe / DS ) * CS ) / ( ( ( ( RCSe * ( RCSe - Min( MUC ,RCSe ) ) ) / MUR ) / ( RMSe * ( Min( ( MUC + DS ) ,( MLU * CS ) ) * Min( ( RMSe * MUC ) ,Max( MUC,DS ) ) ) ) ) + CS ) ) )", "obj1": 0.46747967479674796, "obj2": 0.2949872033116638}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / RRS ) - ( ( MDR - BR ) * ( ( DDR + BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,Min( ( RRSe - MUC ) ,Min( RRSe ,CS ) ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( DS - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,Max( MUC,DS ) ) ) ) ) - CS ) ) )", "obj1": 0.9044715447154471, "obj2": 0.030798595812507792}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( ( RRS + MRS ) / ( Const - ACS ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( ( MLU * MUM ) ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.3008130081300813, "obj2": 0.4508410173777198}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - Min( Min( DDR ,FirstVNF_RAM_Server ) ,MRS ) ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.13414634146341464, "obj2": 0.650160150273464}, {"determining": "Min( ( Min( FirstVNF_RAM ,BR ) - ( ( FirstVNF_CPU / RRS ) + ARS ) ) ,Max( ( Min( Min( FirstVNF_Mem_Server ,( MRS + ACS ) ) ,DDR ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUM ) + CS ) ,DS ) * ( RRSe * ( Max( MUM,Min( ( ( MUM - RRSe ) - RCSe ) ,DS ) ) - ( ( MUC * RRSe ) - ( MUC - ( ( RCSe * DS ) + MUC ) ) ) ) ) ) / Min( ( ( ( Max( ( CS * ( CS / DS ) ),( Max( DS,DS ) - MLU ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.5873983739837398, "obj2": 0.22094823163787}, {"determining": "( ( ( Const * FirstVNF_RAM ) * PN ) + ( ( FirstVNF_CPU - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MLU + DS ) ) ) - CS ) ) ,MUR ) / ( ( RCSe + MLU ) + Min( ( Max( Min( ( ( MUR + RCSe ) - MLU ) ,( DS + RMSe ) ),( DS * DS ) ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.3597560975609756, "obj2": 0.35820274617960074}, {"determining": "Min( ( ( Min( Max( CRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,( MDR + Min( DDR ,PN ) ) ) ) / BR ) + Min( Const ,ARS ) ) ,( ARS + ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( ( ( ( RMSe + CS ) - ( MUM - ( RRSe - MLU ) ) ) + Min( ( MLU - ( MUC / MUC ) ) ,( Max( DS,RMSe ) - RMSe ) ) ) - CS ) ) * ( ( MLU - Min( Max( ( RMSe / ( RCSe / MUR ) ),( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.43902439024390244, "obj2": 0.2955935327217584}, {"determining": "( ( DDR - Min( ( ( DDR - ( ARS - ( MDR / MDR ) ) ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + RMSe ) )", "obj1": 0.1951219512195122, "obj2": 0.5942088963489797}, {"determining": "Min( ( ( Min( Max( ( ( FirstVNF_RAM * FirstVNF_Mem ) * Min( MRS ,Min( DDR ,ARS ) ) ),PN ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + ( MDR / MRS ) ) ) ) ) / FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( ( ( ( MUM - ( RRSe - MLU ) ) - ( RMSe + CS ) ) + Min( ( MLU - ( MUC / MUC ) ) ,( ( DS + MUR ) - RMSe ) ) ) - CS ) ) * ( ( MLU - Min( ( MLU * ( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.4735772357723577, "obj2": 0.2789043654683426}, {"determining": "Min( Max( ( Min( Max( FirstVNF_RAM_Server,MDR ) ,Min( FirstVNF_RAM_Server ,( ( FirstVNF_Mem + CRS ) * Min( Min( BR ,MRS ) ,MRS ) ) ) ) / RRS ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( ( Min( ( DS - RMSe ) ,Min( DS ,RCSe ) ) + DS ) + ( MLU / RRSe ) ) / Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MLU ) - MUC ) ) ) - CS ) ) ,MUR ) )", "obj1": 0.4349593495934959, "obj2": 0.3079142122167601}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + MLU ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.24796747967479674, "obj2": 0.5044435880101781}, {"determining": "( ( Const * FirstVNF_Mem ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( ( Min( FirstVNF_RAM_Server ,DDR ) - ( CRS * BR ) ) / FirstVNF_Mem_Server ),AMS ) ) ) / ( ACS - AMS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( Max( ( MUM * ( MUM * RMSe ) ),Min( ( MUC / CS ) ,( RMSe * MLU ) ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( DS * ( RCSe + RCSe ) ) ) ) ,MUR ) / ( ( MUC - ( MUR + ( CS + ( MUC * ( ( RMSe * MLU ) * CS ) ) ) ) ) - MUC ) )", "obj1": 0.241869918699187, "obj2": 0.5180843420802282}, {"determining": "( ( ( ( Max( ARS,MDR ) * PN ) - FirstVNF_Mem_Server ) + Min( ARS ,RRS ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.37601626016260165, "obj2": 0.3467298635693161}], "20": [{"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( ( ( MDR / FirstVNF_RAM_Server ) / ( RRS - CRS ) ) / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + ( ( MUM - ( MUC * DS ) ) + ( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( Min( MUM ,( CS / MUC ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Min( Min( Min( BR ,FirstVNF_Mem ) ,FirstVNF_RAM ) ,PN ) ,BR ) - ( ( MDR - BR ) * ( ( DDR - BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,( RCSe - DS ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,MUM ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) + ( ( Max( Const,FirstVNF_Mem_Server ) - BR ) / ( ARS + ( MDR / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( Min( RMSe ,Min( CS ,( ( ( DS / ( MUM / MUR ) ) / MLU ) + ( MUM - MLU ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.524390243902439, "obj2": 0.24641548978798122}, {"determining": "( ( DDR - MDR ) + ( ( ARS / ( Const - Max( PN,FirstVNF_CPU_Server ) ) ) / Min( RRS ,PN ) ) )", "choosing": "( Min( ( ( Max( RMSe,RCSe ) * ( ( MUC - MLU ) * ( RCSe + MUR ) ) ) - RRSe ) ,( MUM - MUR ) ) / ( DS * ( RCSe + RCSe ) ) )", "obj1": 0.5589430894308943, "obj2": 0.2273544465376172}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU * Const ) ) ) ,( FirstVNF_RAM_Server * ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( ( ( Min( RCSe ,MUM ) + ( DS / ( DS + MLU ) ) ) - ( MUM - MUM ) ) * ( ( MLU - Min( ( MLU * ( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( MUC / ( DS - RCSe ) ) )", "obj1": 0.4959349593495935, "obj2": 0.2672216561758173}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / ( ( ( BR - RRS ) / MRS ) * CRS ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( Max( ( MUC - MLU ),DS ) + ( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5708831152191715}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN + RRS ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,Min( ARS ,( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( Min( MLU ,CS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( DS + MUM ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MLU / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6341463414634146, "obj2": 0.1907699451320705}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( ARS ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.3252032520325203, "obj2": 0.41225033187151144}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( DDR ,( Const - MDR ) ) ,Min( DDR ,( Const - MDR ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( CS / MUR ) * MUM ) ,DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUM ) ,DS ) - ( MLU + DS ) ) ) ) - MLU ) )", "obj1": 0.6422764227642277, "obj2": 0.1483834688479425}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / MDR ) ),AMS ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS + ( ( MUM - MUR ) * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( Min( MUC ,RMSe ) - ( Min( ( MUM - RMSe ) ,RRSe ) / CS ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.23373983739837398, "obj2": 0.5257332076175772}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( ( ( MDR / AMS ) / ( RRS - CRS ) ) / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + ( ( MUM - ( MUC / MUC ) ) + ( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( Min( MUM ,( CS / MUC ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) )", "obj1": 0.8902439024390244, "obj2": 0.04053960185397626}, {"determining": "( ( ( ( Max( ARS,MDR ) * PN ) - FirstVNF_Mem_Server ) + Min( ARS ,RRS ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.37601626016260165, "obj2": 0.3467298635693161}, {"determining": "( ( DDR - Min( ( ( DDR - ( ARS - ( MDR / MDR ) ) ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.2886178861788618, "obj2": 0.4671678581283321}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),BR ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( ( Max( FirstVNF_CPU,MRS ) * FirstVNF_RAM ) - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe / RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * ( MUR - Min( RMSe ,MUR ) ) ) )", "obj1": 0.35365853658536583, "obj2": 0.36795038545009157}, {"determining": "( ( ( FirstVNF_CPU / BR ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MLU + DS ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.14634146341463414, "obj2": 0.6310500585708144}, {"determining": "( ( FirstVNF_CPU / Min( Const ,ARS ) ) + Min( AMS ,FirstVNF_RAM ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MUC - ( DS + RMSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + Min( ( Min( RRSe ,CS ) / Max( ( MLU + DS ),RCSe ) ) ,MUR ) ) + Min( ( ( MUC * DS ) / ( CS * RCSe ) ) ,MUR ) ) )", "obj1": 0.10772357723577236, "obj2": 0.6812926879148191}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / CS ) ) )", "obj1": 0.7967479674796748, "obj2": 0.06815975499172207}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.3983739837398374, "obj2": 0.3278189297623899}, {"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9451219512195121, "obj2": 0.017624444859958163}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) ) / FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( Min( Max( ( DS * RCSe ),RCSe ) ,MUC ) ,CS ) / Max( RMSe,RCSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008959392092081873}, {"determining": "( Min( Min( Min( ( DDR - PN ) ,FirstVNF_CPU ) ,FirstVNF_Mem ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( Min( ( ( Const + FirstVNF_Mem_Server ) - MDR ) ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - AMS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,( RRSe / ( RRSe * ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( ( ( MUC / MUC ) - MUM ) - Max( MUR,MUM ) ) - MLU ) )", "obj1": 0.6727642276422764, "obj2": 0.1327663879028987}, {"determining": "Min( ( Min( FirstVNF_RAM ,BR ) - ( ( FirstVNF_CPU / RRS ) + ARS ) ) ,Max( ( Min( Min( FirstVNF_Mem_Server ,( MRS + ACS ) ) ,DDR ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUM ) + CS ) ,DS ) * ( RRSe * ( Max( MUM,Min( ( ( MUM - RRSe ) - RCSe ) ,DS ) ) - ( ( MUC * RRSe ) - ( MUC - ( ( RCSe * DS ) + MUC ) ) ) ) ) ) / Min( ( ( ( Max( ( CS * ( CS / DS ) ),( Max( DS,DS ) - MLU ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.5873983739837398, "obj2": 0.22094823163787}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ACS / CRS ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem * MRS ) ) ) / FirstVNF_Mem_Server ),( Const / ARS ) ) )", "choosing": "( Min( MUR ,Min( ( MLU / MUC ) ,MUR ) ) / Min( ( ( ( ( MLU / ( ( DS / CS ) - ( RCSe - RMSe ) ) ) - ( MUR + RRSe ) ) - ( ( CS * ( MLU * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MUM ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6016260162601627, "obj2": 0.2114313537026848}, {"determining": "( ( DDR - Max( ( ( DDR - BR ) + ( Min( ( ARS * FirstVNF_RAM ) ,AMS ) / ( FirstVNF_CPU_Server - ACS ) ) ),FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Min( MUM ,RCSe ) + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC / MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( MUR / MUM ) )", "obj1": 0.21951219512195122, "obj2": 0.5865380513253367}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( ( ( ( Min( MUC ,RMSe ) * DS ) * DS ) * DS ) / ( ( ( MUM - ( MUC / MUC ) ) * Min( ( ( MUC * ( ( MUM - DS ) / MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) - ( ( RMSe / MUC ) + RCSe ) ) )", "obj1": 0.8455284552845529, "obj2": 0.06633906379238867}, {"determining": "( ( Max( FirstVNF_Mem_Server,AMS ) - DDR ) + ( FirstVNF_RAM_Server / Const ) )", "choosing": "( Min( ( Max( MUM,( CS * CS ) ) * ( ( ( ( MUM - MUM ) - Min( MUR ,Max( CS,DS ) ) ) + Min( Min( MUR ,( MUM / RMSe ) ) ,( ( MLU + CS ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.3008130081300813, "obj2": 0.4508410173777198}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( ARS ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.3434959349593496, "obj2": 0.40449633634791893}, {"determining": "( Min( Min( Const ,( ( Max( ( FirstVNF_RAM_Server / MRS ),Const ) + MRS ) * MDR ) ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( CRS ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( DS ,RMSe ) ,( ( MLU + MUC ) - MUC ) ) ) + CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.8577235772357723, "obj2": 0.0559178945107167}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + MLU ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.24796747967479674, "obj2": 0.5044435880101781}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / Max( ARS,MDR ) ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( Min( DS ,CS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6239837398373984, "obj2": 0.20070329241705906}, {"determining": "Min( ( ( Min( Max( CRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,( MDR + Min( DDR ,PN ) ) ) ) / BR ) + Min( Const ,ARS ) ) ,( ARS + ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( ( ( ( RMSe + CS ) - ( MUM - ( RRSe - MLU ) ) ) + Min( ( MLU - ( MUC / MUC ) ) ,( Max( DS,RMSe ) - RMSe ) ) ) - CS ) ) * ( ( MLU - Min( Max( ( RMSe / ( RCSe / MUR ) ),( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.43902439024390244, "obj2": 0.2955935327217584}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ACS / CRS ) ,Max( FirstVNF_RAM_Server,( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.42276422764227645, "obj2": 0.3057224992809079}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / AMS ) ) ,Max( FirstVNF_RAM_Server,CRS ) ) - ( ( BR - PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( MDR + FirstVNF_CPU_Server ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( CS ,( ( Max( ( MUM - DS ),MUM ) - MUC ) * DS ) ) * Min( CS ,MUM ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( Max( MUC,Max( CS,MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.9247967479674797, "obj2": 0.025350160175976775}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,( RRSe / ( RRSe * ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( Min( Min( Max( ( DS * RCSe ),RCSe ) ,MUC ) ,CS ) / Max( RMSe,RCSe ) ) - MLU ) )", "obj1": 0.7317073170731707, "obj2": 0.11257441009983303}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / RRS ) - ( ( MDR - BR ) * ( ( DDR + BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,Min( ( RRSe - MUC ) ,Min( RRSe ,CS ) ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( DS - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,Max( MUC,DS ) ) ) ) ) - CS ) ) )", "obj1": 0.9044715447154471, "obj2": 0.030798595812507792}, {"determining": "( ( DDR - Min( ( DDR - ( ARS - ( MDR / MDR ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),AMS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - DS ) ,( ( DS + MUM ) - RMSe ) ) ) - ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( RMSe ,MUR ) / Max( CS,MUM ) ) ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.2764227642276423, "obj2": 0.4914121865939936}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( FirstVNF_RAM_Server ,( Const - MDR ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( CS + RCSe ) ) ) * DS ) ) ) ) ,( ( CS + MUC ) * ( MUM - CS ) ) )", "obj1": 0.7052845528455285, "obj2": 0.12262529377080982}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( BR ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MLU ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.4105691056910569, "obj2": 0.3187303175802639}, {"determining": "( ( ( Max( FirstVNF_RAM_Server,( PN + AMS ) ) - Min( Min( DDR ,FirstVNF_RAM_Server ) ,MRS ) ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.13414634146341464, "obj2": 0.650160150273464}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Max( MRS,DDR ) ) ) / FirstVNF_Mem_Server ),Min( Const ,RRS ) ) ,( ARS - ( PN / MDR ) ) )", "choosing": "( ( ( ( MUM - MUM ) - ( Min( RCSe ,MUM ) + CS ) ) * ( ( CS - Min( ( ( CS / RRSe ) * MLU ) ,MUC ) ) - CS ) ) * ( ( ( RMSe / DS ) * CS ) / ( ( ( ( RCSe * ( RCSe - Min( MUC ,RCSe ) ) ) / MUR ) / ( RMSe * ( Min( ( MUC + DS ) ,( MLU * CS ) ) * Min( ( RMSe * MUC ) ,Max( MUC,DS ) ) ) ) ) + CS ) ) )", "obj1": 0.46747967479674796, "obj2": 0.2949872033116638}, {"determining": "( Min( ( DDR / DDR ) ,AMS ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( DDR ,( Const - MDR ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * Max( Max( RMSe,( RRSe * MLU ) ),MUM ) ) / ( ( ( ( MUC / MUC ) - MUM ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUR ) ,DS ) - ( MLU + DS ) ) ) ) - MLU ) )", "obj1": 0.6544715447154471, "obj2": 0.14363237556052863}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,FirstVNF_RAM ) - ( ( ( RRS + Max( ACS,ACS ) ) - MDR ) * ( Min( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( BR ,MRS ) ,MRS ) ) ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( CS + DS ) ) ) * DS ) ) ) ) ,( ( CS + MUC ) * ( RCSe + ( DS - DS ) ) ) )", "obj1": 0.7540650406504065, "obj2": 0.08168114375577112}, {"determining": "( Min( AMS ,FirstVNF_RAM ) + ( Min( RRS ,PN ) / ( ARS - ( MDR * MDR ) ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MLU + DS ) ) ) - CS ) ) ,MUR ) / ( ( RCSe + MLU ) + Min( ( Max( Min( ( ( MUR + RCSe ) - MLU ) ,( DS + RMSe ) ),( DS * DS ) ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.12601626016260162, "obj2": 0.660218612187586}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - MDR )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( Min( RMSe ,Min( CS ,( ( ( DS / ( MUM / MUR ) ) / MLU ) + ( MUM - MLU ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.7865853658536586, "obj2": 0.0756875265983684}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( FirstVNF_CPU_Server - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( CRS ,( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( RCSe + CS ) ) ) * Min( RRSe ,RMSe ) ) ) ) ) ,( ( CS + MUC ) * ( MUR / CS ) ) )", "obj1": 0.6971544715447154, "obj2": 0.12703320633116685}, {"determining": "( ( DDR - Min( ( ( DDR - ( ARS - ( MDR / MDR ) ) ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + RMSe ) )", "obj1": 0.1951219512195122, "obj2": 0.5942088963489797}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( CRS ,MDR ) ,Max( FirstVNF_RAM_Server,MDR ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( CS + RCSe ) ) ) * ( ( MUM + Min( DS ,RRSe ) ) * CS ) ) ) ) ) ,( ( CS + MUC ) * ( MUM / CS ) ) )", "obj1": 0.7520325203252033, "obj2": 0.10643876469960852}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( ( RRS + MRS ) / ( Const - ACS ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( ( MLU * MUM ) ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.3008130081300813, "obj2": 0.4508410173777198}, {"determining": "( ( DDR - Min( ( ( DDR - BR ) + ( CRS / ( Min( FirstVNF_RAM_Server ,AMS ) - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,Const ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),AMS ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - ( MLU + MUC ) ) ) ) - ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / CS ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.2703252032520325, "obj2": 0.4952193119641905}], "21": [{"determining": "( Min( ( ( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) ) / FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server * ( ( ( MDR / FirstVNF_RAM_Server ) / ( RRS - CRS ) ) / ARS ) ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( Min( Max( ( DS * RCSe ),RCSe ) ,MUC ) ,CS ) / ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( ( ( MDR / FirstVNF_RAM_Server ) / ( RRS - CRS ) ) / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + ( ( MUM - ( MUC * DS ) ) + ( ( DS + MUM ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( Min( MUM ,( CS / MUC ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),BR ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( ( Max( FirstVNF_CPU,MRS ) * FirstVNF_RAM ) - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe / RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * ( MUR - Min( RMSe ,MUR ) ) ) )", "obj1": 0.35365853658536583, "obj2": 0.36795038545009157}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / MDR ) ),AMS ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS + ( ( MUM - MUR ) * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( Min( MUC ,RMSe ) - ( Min( ( MUM - RMSe ) ,RRSe ) / CS ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.23373983739837398, "obj2": 0.5257332076175772}, {"determining": "( ( ( ( Max( ARS,MDR ) * PN ) - FirstVNF_Mem_Server ) + Min( ARS ,RRS ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.37601626016260165, "obj2": 0.3467298635693161}, {"determining": "( ( DDR - MDR ) + ( ( ARS / ( Const - Max( PN,FirstVNF_CPU_Server ) ) ) / Min( RRS ,PN ) ) )", "choosing": "( Min( ( ( Max( RMSe,RCSe ) * ( ( MUC - MLU ) * ( RCSe + MUR ) ) ) - RRSe ) ,( MUM - MUR ) ) / ( DS * ( RCSe + RCSe ) ) )", "obj1": 0.5589430894308943, "obj2": 0.2273544465376172}, {"determining": "( ( FirstVNF_CPU / Min( Const ,ARS ) ) + Min( AMS ,FirstVNF_RAM ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MUC - ( DS + RMSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + Min( ( Min( RRSe ,CS ) / Max( ( MLU + DS ),RCSe ) ) ,MUR ) ) + Min( ( ( MUC * DS ) / ( CS * RCSe ) ) ,MUR ) ) )", "obj1": 0.10772357723577236, "obj2": 0.6812926879148191}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) + ( ( Max( Const,FirstVNF_Mem_Server ) - BR ) / ( ARS + ( MDR / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( Min( RMSe ,Min( CS ,( ( ( DS / ( MUM / MUR ) ) / MLU ) + ( MUM - MLU ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.524390243902439, "obj2": 0.24641548978798122}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / ( ( ( BR - RRS ) / MRS ) * CRS ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( Max( ( MUC - MLU ),DS ) + ( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5708831152191715}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( ARS ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.3434959349593496, "obj2": 0.40449633634791893}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / Min( ARS ,Min( ( BR * RRS ) ,CRS ) ) ) ) - Min( ( ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) / Min( CRS ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem ) ) ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Max( MUM,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MLU + DS ) ) ) - CS ) ) ,MUR ) / ( RRSe / Max( ( RCSe - MUR ),MLU ) ) )", "obj1": 0.6971544715447154, "obj2": 0.10636334361997386}, {"determining": "( ( ( FirstVNF_CPU / BR ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MLU + DS ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.14634146341463414, "obj2": 0.6310500585708144}, {"determining": "( ( DDR - Min( ( ( DDR - ( ARS - ( MDR / MDR ) ) ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + RMSe ) )", "obj1": 0.1951219512195122, "obj2": 0.5942088963489797}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) / Min( CRS ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.7113821138211383, "obj2": 0.09876091547052616}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) ) / FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( Min( Max( ( DS * RCSe ),RCSe ) ,MUC ) ,CS ) / Max( RMSe,RCSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008959392092081873}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - ( ( DS + MUM ) - RMSe ) ) )", "obj1": 0.32113821138211385, "obj2": 0.42857310495175416}, {"determining": "( Min( Min( Min( ( DDR - PN ) ,FirstVNF_CPU ) ,FirstVNF_Mem ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( Min( ( ( Const + FirstVNF_Mem_Server ) - MDR ) ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - AMS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,( RRSe / ( RRSe * ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( ( ( MUC / MUC ) - MUM ) - Max( MUR,MUM ) ) - MLU ) )", "obj1": 0.6727642276422764, "obj2": 0.1327663879028987}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.3983739837398374, "obj2": 0.3278189297623899}, {"determining": "( Min( Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ,PN ) ,FirstVNF_RAM ) - MDR )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( ( Min( MUC ,RMSe ) * DS ) * DS ) * ( RCSe + RCSe ) ) )", "obj1": 0.823170731707317, "obj2": 0.06574831399310821}, {"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9451219512195121, "obj2": 0.017624444859958163}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + MLU ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.24796747967479674, "obj2": 0.5044435880101781}, {"determining": "( ( DDR - Max( ( ( DDR - BR ) + ( Min( ( ARS * FirstVNF_RAM ) ,AMS ) / ( FirstVNF_CPU_Server - ACS ) ) ),FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Min( MUM ,RCSe ) + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC / MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( MUR / MUM ) )", "obj1": 0.21951219512195122, "obj2": 0.5865380513253367}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,ARS ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,( ( Const / ( ( MDR / ARS ) * RRS ) ) / DDR ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + Max( MUC,RMSe ) ) ) + Min( Min( ( MLU * MUM ) ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.6382113821138211, "obj2": 0.15504254249763275}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( MUM + DS ) * ( ( ( CS / Min( ( MLU / RMSe ) ,MUC ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS / MLU ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.4796747967479675, "obj2": 0.28112385525863054}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - MDR )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( Min( RMSe ,Min( CS ,( ( ( DS / ( MUM / MUR ) ) / MLU ) + ( MUM - MLU ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.7865853658536586, "obj2": 0.0756875265983684}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,( Min( ARS ,FirstVNF_CPU_Server ) * Max( MRS,DDR ) ) ) / FirstVNF_Mem_Server ),Min( Const ,RRS ) ) ,( ARS - ( PN / MDR ) ) )", "choosing": "( ( ( ( MUM - MUM ) - ( Min( RCSe ,MUM ) + CS ) ) * ( ( CS - Min( ( ( CS / RRSe ) * MLU ) ,MUC ) ) - CS ) ) * ( ( ( RMSe / DS ) * CS ) / ( ( ( ( RCSe * ( RCSe - Min( MUC ,RCSe ) ) ) / MUR ) / ( RMSe * ( Min( ( MUC + DS ) ,( MLU * CS ) ) * Min( ( RMSe * MUC ) ,Max( MUC,DS ) ) ) ) ) + CS ) ) )", "obj1": 0.46747967479674796, "obj2": 0.2949872033116638}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / Max( ARS,MDR ) ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( Min( DS ,CS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6239837398373984, "obj2": 0.20070329241705906}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( BR ,FirstVNF_Mem_Server ) ,MRS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( ( ( MUM - MUM ) - ( RMSe + CS ) ) + ( ( MUC / ( CS / ( CS + RCSe ) ) ) * DS ) ) ) ) ,( ( CS + MUC ) * ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MLU ) - RMSe ) ) ) ) )", "obj1": 0.7459349593495935, "obj2": 0.0847983237916464}, {"determining": "Min( ( ( Min( Max( CRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,( MDR + Min( DDR ,PN ) ) ) ) / BR ) + Min( Const ,ARS ) ) ,( ARS + ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( ( ( ( RMSe + CS ) - ( MUM - ( RRSe - MLU ) ) ) + Min( ( MLU - ( MUC / MUC ) ) ,( Max( DS,RMSe ) - RMSe ) ) ) - CS ) ) * ( ( MLU - Min( Max( ( RMSe / ( RCSe / MUR ) ),( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.43902439024390244, "obj2": 0.2955935327217584}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( Min( DS ,( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.5121951219512195, "obj2": 0.26237542778159006}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ACS / CRS ) ,Max( FirstVNF_RAM_Server,( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.42276422764227645, "obj2": 0.3057224992809079}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / AMS ) ) ,Max( FirstVNF_RAM_Server,CRS ) ) - ( ( BR - PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( MDR + FirstVNF_CPU_Server ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( CS ,( ( Max( ( MUM - DS ),MUM ) - MUC ) * DS ) ) * Min( CS ,MUM ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( Max( MUC,Max( CS,MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.9247967479674797, "obj2": 0.025350160175976775}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,( ( Min( Max( ( Const - MDR ),PN ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + ( MDR / ACS ) ) ) ) ) / FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) )", "choosing": "( ( MUM + MUM ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.4898373983739837, "obj2": 0.2649159715629739}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN + RRS ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,Min( ARS ,( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( Min( MLU ,CS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( DS + MUM ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MLU / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6341463414634146, "obj2": 0.1907699451320705}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / RRS ) - ( ( MDR - BR ) * ( ( DDR + BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,Min( ( RRSe - MUC ) ,Min( RRSe ,CS ) ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( DS - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,Max( MUC,DS ) ) ) ) ) - CS ) ) )", "obj1": 0.9044715447154471, "obj2": 0.030798595812507792}, {"determining": "Min( ( Min( FirstVNF_RAM ,BR ) - ( ( FirstVNF_CPU / RRS ) + ARS ) ) ,Max( ( Min( Min( FirstVNF_Mem_Server ,( MRS + ACS ) ) ,DDR ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUM ) + CS ) ,DS ) * ( RRSe * ( Max( MUM,Min( ( ( MUM - RRSe ) - RCSe ) ,DS ) ) - ( ( MUC * RRSe ) - ( MUC - ( ( RCSe * DS ) + MUC ) ) ) ) ) ) / Min( ( ( ( Max( ( CS * ( CS / DS ) ),( Max( DS,DS ) - MLU ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.5873983739837398, "obj2": 0.22094823163787}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( ARS ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.3252032520325203, "obj2": 0.41225033187151144}, {"determining": "( Min( Min( Const ,( ( Max( ( FirstVNF_RAM_Server / MRS ),Const ) + MRS ) * MDR ) ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( CRS ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( DS ,RMSe ) ,( ( MLU + MUC ) - MUC ) ) ) + CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.8577235772357723, "obj2": 0.0559178945107167}, {"determining": "( ( ( ( Max( ARS,MDR ) * PN ) - FirstVNF_Mem_Server ) + Min( ARS ,RRS ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.18495934959349594, "obj2": 0.6264367775422933}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( BR ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MLU ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.4105691056910569, "obj2": 0.3187303175802639}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( DDR ,( MRS + FirstVNF_CPU_Server ) ) ,Min( DDR ,( Const - ( FirstVNF_Mem_Server - RRS ) ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe + DS ) / ( ( ( MUM + ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUM ) ,DS ) - ( MLU + DS ) ) ) ) - MLU ) )", "obj1": 0.8841463414634146, "obj2": 0.041715324940081434}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( ( RRS + MRS ) / ( Const - ACS ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( ( MLU * MUM ) ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.18699186991869918, "obj2": 0.6218184425643706}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( MUM + DS ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / CS ) ) )", "obj1": 0.7967479674796748, "obj2": 0.06815975499172207}, {"determining": "( ( DDR - Min( ( ( DDR - ( ARS - ( MDR / MDR ) ) ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.2886178861788618, "obj2": 0.4671678581283321}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( CRS ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( CS / MUR ) * MUM ) ,DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUM ) ,DS ) - ( MLU + DS ) ) ) ) - MLU ) )", "obj1": 0.8536585365853658, "obj2": 0.059058595727072484}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,FirstVNF_RAM ) - ( ( ( RRS + Max( ACS,ACS ) ) - MDR ) * ( Min( ( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( BR ,MRS ) ,MRS ) ) ,FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - Max( ( MUM * RRSe ),( DS / RMSe ) ) ) ,( MUM + ( ( MUC / ( CS / ( CS + DS ) ) ) * DS ) ) ) ) ,( ( CS + MUC ) * ( RCSe + ( DS - DS ) ) ) )", "obj1": 0.7540650406504065, "obj2": 0.08168114375577112}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ACS / CRS ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem * MRS ) ) ) / FirstVNF_Mem_Server ),( Const / ARS ) ) )", "choosing": "( Min( MUR ,Min( ( MLU / MUC ) ,MUR ) ) / Min( ( ( ( ( MLU / ( ( DS / CS ) - ( RCSe - RMSe ) ) ) - ( MUR + RRSe ) ) - ( ( CS * ( MLU * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MUM ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6016260162601627, "obj2": 0.2114313537026848}, {"determining": "( ( FirstVNF_CPU / Min( Const ,ARS ) ) + Min( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) ,FirstVNF_RAM ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MUC - ( DS + RMSe ) ) ) ) - CS ) ) ,MUR ) / ( Max( ( DS - CS ),RMSe ) + Min( ( ( MUC * DS ) / ( CS * RCSe ) ) ,MUR ) ) )", "obj1": 0.12195121951219512, "obj2": 0.6704960249231324}, {"determining": "( ( ( DDR * PN ) - ( FirstVNF_RAM_Server * ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const / Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * Max( RMSe,RMSe ) ) ,MUR ) / ( CS / ( MUM + DS ) ) )", "obj1": 0.28252032520325204, "obj2": 0.47369139919280473}], "22": [{"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) ) / FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server * ( ( ( MDR / FirstVNF_RAM_Server ) / ( RRS - CRS ) ) / ARS ) ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( Min( Max( ( DS * RCSe ),RCSe ) ,MUC ) ,CS ) / ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "( ( FirstVNF_CPU / Min( Const ,ARS ) ) + Min( AMS ,FirstVNF_RAM ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MUC - ( DS + RMSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + Min( ( Min( RRSe ,CS ) / Max( ( MLU + DS ),RCSe ) ) ,MUR ) ) + Min( ( ( MUC * DS ) / ( CS * RCSe ) ) ,MUR ) ) )", "obj1": 0.10772357723577236, "obj2": 0.6812926879148191}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + MLU ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.24796747967479674, "obj2": 0.5044435880101781}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / MDR ) ),AMS ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS + ( ( MUM - MUR ) * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( Min( MUC ,RMSe ) - ( Min( ( MUM - RMSe ) ,RRSe ) / CS ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.23373983739837398, "obj2": 0.5257332076175772}, {"determining": "( Min( Min( Min( ( DDR - PN ) ,FirstVNF_CPU ) ,FirstVNF_Mem ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( Min( ( ( Const + FirstVNF_Mem_Server ) - MDR ) ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - AMS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,( RRSe / ( RRSe * ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( ( ( MUC / MUC ) - MUM ) - Max( MUR,MUM ) ) - MLU ) )", "obj1": 0.6727642276422764, "obj2": 0.1327663879028987}, {"determining": "( ( DDR - MDR ) + ( ( ARS / ( Const - Max( PN,FirstVNF_CPU_Server ) ) ) / Min( RRS ,PN ) ) )", "choosing": "( Min( ( ( Max( RMSe,RCSe ) * ( ( MUC - MLU ) * ( RCSe + MUR ) ) ) - RRSe ) ,( MUM - MUR ) ) / ( DS * ( RCSe + RCSe ) ) )", "obj1": 0.5589430894308943, "obj2": 0.2273544465376172}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) + ( ( Max( Const,FirstVNF_Mem_Server ) - BR ) / ( ARS + ( MDR / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( Min( RMSe ,Min( CS ,( ( ( DS / ( MUM / MUR ) ) / MLU ) + ( MUM - MLU ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.524390243902439, "obj2": 0.24641548978798122}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / ( ( ( BR - RRS ) / MRS ) * CRS ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( Max( ( MUC - MLU ),DS ) + ( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5708831152191715}, {"determining": "( ( ( DDR * PN ) - ( FirstVNF_RAM_Server * ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const / Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * Max( RMSe,RMSe ) ) ,MUR ) / ( CS / ( MUM + DS ) ) )", "obj1": 0.28252032520325204, "obj2": 0.47369139919280473}, {"determining": "( ( FirstVNF_CPU / Min( Const ,ARS ) ) + Min( AMS ,FirstVNF_RAM ) )", "choosing": "( Min( ( Min( DS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( Min( MUC ,RMSe ) - ( Min( ( MUM - RMSe ) ,RRSe ) / CS ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.12195121951219512, "obj2": 0.654321567491538}, {"determining": "( ( DDR - ( FirstVNF_RAM_Server * ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) + FirstVNF_RAM_Server ) ) ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - CS ) - ( RMSe + CS ) ) + Min( MUM ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.31097560975609756, "obj2": 0.4384107777062839}, {"determining": "( ( DDR - ( FirstVNF_RAM_Server * ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( CRS ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( MUM ,( ( MUC + MUR ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.1951219512195122, "obj2": 0.5930414629397892}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( DDR ,( MRS + FirstVNF_CPU_Server ) ) ,Min( DDR ,( Const - ( FirstVNF_Mem_Server - RRS ) ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe + DS ) / ( ( ( MUM + ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUM ) ,DS ) - ( MLU + DS ) ) ) ) - MLU ) )", "obj1": 0.8841463414634146, "obj2": 0.041715324940081434}, {"determining": "( ( ( ( Max( ARS,MDR ) * PN ) - FirstVNF_Mem_Server ) + Min( ARS ,RRS ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.37601626016260165, "obj2": 0.3467298635693161}, {"determining": "Min( ( ( Min( Max( CRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,( MDR + Min( DDR ,PN ) ) ) ) / BR ) + Min( Const ,ARS ) ) ,( ARS + ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( ( ( ( RMSe + CS ) - ( MUM - ( RRSe - MLU ) ) ) + Min( ( MLU - ( MUC / MUC ) ) ,( Max( DS,RMSe ) - RMSe ) ) ) - CS ) ) * ( ( MLU - Min( Max( ( RMSe / ( RCSe / MUR ) ),( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.43902439024390244, "obj2": 0.2955935327217584}, {"determining": "( ( DDR - Min( ( ( DDR - ( ARS - ( MDR / MDR ) ) ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.2886178861788618, "obj2": 0.4671678581283321}, {"determining": "( Min( Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ,PN ) ,FirstVNF_RAM ) - MDR )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( ( Min( MUC ,RMSe ) * DS ) * DS ) * ( RCSe + RCSe ) ) )", "obj1": 0.823170731707317, "obj2": 0.06574831399310821}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,ARS ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,( ( Const / ( ( MDR / ARS ) * RRS ) ) / DDR ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + Max( MUC,RMSe ) ) ) + Min( Min( ( MLU * MUM ) ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.6382113821138211, "obj2": 0.15504254249763275}, {"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9451219512195121, "obj2": 0.017624444859958163}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN + RRS ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,Min( ARS ,( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( Min( MLU ,CS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( DS + MUM ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MLU / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6341463414634146, "obj2": 0.1907699451320705}, {"determining": "Min( ( Min( FirstVNF_RAM ,BR ) - ( ( FirstVNF_CPU / RRS ) + ARS ) ) ,Max( ( Min( Min( FirstVNF_Mem_Server ,( MRS + ACS ) ) ,DDR ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUM ) + CS ) ,DS ) * ( RRSe * ( Max( MUM,Min( ( ( MUM - RRSe ) - RCSe ) ,DS ) ) - ( ( MUC * RRSe ) - ( MUC - ( ( RCSe * DS ) + MUC ) ) ) ) ) ) / Min( ( ( ( Max( ( CS * ( CS / DS ) ),( Max( DS,DS ) - MLU ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.5873983739837398, "obj2": 0.22094823163787}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( DDR ,( Const - MDR ) ) ,Min( DDR ,( Const - MDR ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( ( MLU * MUM ) ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.6504065040650406, "obj2": 0.14956524796739773}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / RRS ) - ( ( MDR - BR ) * ( ( DDR + BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,Min( ( RRSe - MUC ) ,Min( RRSe ,CS ) ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( DS - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,Max( MUC,DS ) ) ) ) ) - CS ) ) )", "obj1": 0.9044715447154471, "obj2": 0.030798595812507792}, {"determining": "( ( ( FirstVNF_CPU / BR ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MLU + DS ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.14634146341463414, "obj2": 0.6310500585708144}, {"determining": "( ( DDR - Max( ( ( DDR - BR ) + ( Min( ( ARS * FirstVNF_RAM ) ,AMS ) / ( FirstVNF_CPU_Server - ACS ) ) ),FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Min( MUM ,RCSe ) + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC / MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( MUR / MUM ) )", "obj1": 0.21951219512195122, "obj2": 0.5865380513253367}, {"determining": "Min( ( ( Min( Max( ( Const - MDR ),PN ) ,DDR ) / FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( ( Min( ( ( CS / MUR ) * ( DS * RCSe ) ) ,DS ) - ( MLU + DS ) ) - CS ) ) * ( ( MLU - Min( ( MLU * ( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.4654471544715447, "obj2": 0.28173858541374525}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + ( FirstVNF_RAM / ARS ) ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( Min( DS ,( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.5121951219512195, "obj2": 0.26237542778159006}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( BR ,FirstVNF_Mem_Server ) ,MRS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MLU + DS ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.6951219512195121, "obj2": 0.10841151009937505}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / AMS ) ) ,Max( FirstVNF_RAM_Server,CRS ) ) - ( ( BR - PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( MDR + FirstVNF_CPU_Server ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( CS ,( ( Max( ( MUM - DS ),MUM ) - MUC ) * DS ) ) * Min( CS ,MUM ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( Max( MUC,Max( CS,MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.9247967479674797, "obj2": 0.025350160175976775}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) ) / FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( Min( Max( ( DS * RCSe ),RCSe ) ,MUC ) ,CS ) / Max( RMSe,RCSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008959392092081873}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,( ( Min( Max( ( Const - MDR ),PN ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + ( MDR / ACS ) ) ) ) ) / FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) )", "choosing": "( ( MUM + MUM ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.4898373983739837, "obj2": 0.2649159715629739}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + MLU ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.18292682926829268, "obj2": 0.6204424029146222}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),BR ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( ( Max( FirstVNF_CPU,MRS ) * FirstVNF_RAM ) - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( ( MUC / MUR ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe / RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * ( MUR - Min( RMSe ,MUR ) ) ) )", "obj1": 0.35365853658536583, "obj2": 0.36795038545009157}, {"determining": "( ( ( FirstVNF_CPU / BR ) + ( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) * ( ARS / FirstVNF_CPU_Server ) ) ) - MRS ) ) + ( CRS - ARS ) )", "choosing": "( ( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Max( MLU,MLU ) ,MUR ) ,MUM ) ) - CS ) ) / MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.13617886178861788, "obj2": 0.638532360732407}, {"determining": "( Min( Min( Const ,( ( Max( ( FirstVNF_RAM_Server / MRS ),Const ) + MRS ) * MDR ) ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( CRS ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( DS ,RMSe ) ,( ( MLU + MUC ) - MUC ) ) ) + CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.8577235772357723, "obj2": 0.0559178945107167}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),Max( FirstVNF_RAM,AMS ) ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) )", "choosing": "( Min( ( RRSe - MUR ) ,( Min( ( RCSe * Min( MUR ,MLU ) ) ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.34959349593495936, "obj2": 0.3808784988017472}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( ARS ,RRS ) / BR ) - Min( Min( ( DDR - PN ) ,FirstVNF_CPU ) ,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.17682926829268292, "obj2": 0.6225880067686667}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( ARS ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.3434959349593496, "obj2": 0.40449633634791893}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - ( ( DS + MUM ) - RMSe ) ) )", "obj1": 0.32113821138211385, "obj2": 0.42857310495175416}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( CRS ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( CS / MUR ) * MUM ) ,DS ) / ( ( ( MUM - ( MUC / MUC ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUM ) ,DS ) - ( MLU + DS ) ) ) ) - MLU ) )", "obj1": 0.8536585365853658, "obj2": 0.059058595727072484}, {"determining": "Min( Max( ( Min( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( Max( ( MUC - MLU ),DS ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MLU ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.3882113821138211, "obj2": 0.33468384849425986}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( MUM + DS ) * ( ( ( CS / Min( ( MLU / RMSe ) ,MUC ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS / MLU ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.4796747967479675, "obj2": 0.28112385525863054}, {"determining": "Min( Max( ( Min( ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.3983739837398374, "obj2": 0.3278189297623899}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ACS / CRS ) ,Max( FirstVNF_RAM_Server,( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.42276422764227645, "obj2": 0.3057224992809079}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( ARS ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.3252032520325203, "obj2": 0.41225033187151144}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ACS / CRS ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem * MRS ) ) ) / FirstVNF_Mem_Server ),( Const / ARS ) ) )", "choosing": "( Min( MUR ,Min( ( MLU / MUC ) ,MUR ) ) / Min( ( ( ( ( MLU / ( ( DS / CS ) - ( RCSe - RMSe ) ) ) - ( MUR + RRSe ) ) - ( ( CS * ( MLU * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MUM ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6016260162601627, "obj2": 0.2114313537026848}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( BR ,MRS ) ,MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( MUC / MUC ) ) ,( ( DS + MLU ) - RMSe ) ) ) - CS ) ) ,MUR ) / ( ( MUM + DS ) + ( MLU / RRSe ) ) )", "obj1": 0.4105691056910569, "obj2": 0.3187303175802639}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( ( RRS + ACS ) / ( Const - ACS ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( ( MLU * MUM ) ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.9898373983739838, "obj2": 0.007773841526945562}], "23": [{"determining": "( ( ( Max( ( ACS - FirstVNF_Mem_Server ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( ( Max( FirstVNF_CPU,MRS ) * FirstVNF_RAM ) - ACS ) ) ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - MUC ) ) ) - CS ) ) ) ,( Max( Min( MUR ,Max( MUR,Max( DS,Min( ( MUM - RRSe ) ,( RMSe / RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) * ( MUR - Min( RMSe ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / Const ) - FirstVNF_RAM_Server ) * Max( FirstVNF_CPU_Server,ACS ) ) ,( AMS + FirstVNF_CPU_Server ) ) - ( ( Max( ( ARS - Const ),MRS ) - RRS ) * ( ACS - BR ) ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( Max( MUM,MLU ) / MLU ) ) / RCSe ) ,RCSe ) + MUR ) - ( Max( ( DS - CS ),RMSe ) * DS ) ) / ( ( MUM + RCSe ) + Max( ( CS - ( Min( ( Max( RCSe,RMSe ) * MLU ) ,RCSe ) / RMSe ) ),CS ) ) )", "obj1": 0.09349593495934959, "obj2": 0.7228604431271288}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( BR ,FirstVNF_Mem_Server ) ,MRS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe + DS ) / ( ( ( MUM + ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUM ) ,DS ) - ( MLU + DS ) ) ) ) - MLU ) )", "obj1": 0.774390243902439, "obj2": 0.08178849926976513}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) * Min( Min( BR ,FirstVNF_Mem_Server ) ,MRS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,Min( MUM ,( RCSe / RRSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.7012195121951219, "obj2": 0.10504811457299255}, {"determining": "( Min( Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) + DDR ) ,PN ) ,FirstVNF_RAM ) - MDR )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( ( Min( MUC ,RMSe ) * DS ) * DS ) * ( RCSe + RCSe ) ) )", "obj1": 0.823170731707317, "obj2": 0.06574831399310821}, {"determining": "Min( Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,Max( FirstVNF_RAM_Server,( PN + RRS ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) ,Min( ARS ,( MDR / MDR ) ) )", "choosing": "( Min( MUR ,( ( MUC * DS ) / Max( CS,( Min( ( Min( MLU ,CS ) / Max( CS,RCSe ) ) ,MUR ) / ( ( DS + MUM ) + ( MUC / RRSe ) ) ) ) ) ) / Min( ( ( ( MUM - ( MLU / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6341463414634146, "obj2": 0.1907699451320705}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,DDR ) ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server / MDR ) ),AMS ) ) ) - ( ACS - FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( DS + ( ( MUM - MUR ) * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( Min( MUC ,RMSe ) - ( Min( ( MUM - RMSe ) ,RRSe ) / CS ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.23373983739837398, "obj2": 0.5257332076175772}, {"determining": "( ( DDR - MDR ) + ( ( ARS / ( Const - Max( PN,FirstVNF_CPU_Server ) ) ) / Min( RRS ,PN ) ) )", "choosing": "( Min( ( ( Max( RMSe,RCSe ) * ( ( MUC - MLU ) * ( RCSe + MUR ) ) ) - RRSe ) ,( MUM - MUR ) ) / ( DS * ( RCSe + RCSe ) ) )", "obj1": 0.5589430894308943, "obj2": 0.2273544465376172}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / ( ( ( BR - RRS ) / MRS ) * CRS ) ) ) )", "choosing": "( Max( DS,RMSe ) - ( Max( ( MUC - MLU ),DS ) + ( Min( ( ( MUC * ( ( MUM - DS ) / RMSe ) ) / Max( CS,RCSe ) ) ,MUR ) + ( MUM + DS ) ) ) )", "obj1": 0.22764227642276422, "obj2": 0.5708831152191715}, {"determining": "( Min( Min( Min( ( DDR - PN ) ,FirstVNF_CPU ) ,FirstVNF_Mem ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,Min( Min( ( ( Const + FirstVNF_Mem_Server ) - MDR ) ,FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - AMS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUC ,( RRSe / ( RRSe * ( RMSe - ( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) ) ) ) / ( ( ( ( MUC / MUC ) - MUM ) - Max( MUR,MUM ) ) - MLU ) )", "obj1": 0.6727642276422764, "obj2": 0.1327663879028987}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ACS / CRS ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem * MRS ) ) ) / FirstVNF_Mem_Server ),( Const / ARS ) ) )", "choosing": "( Min( MUR ,Min( ( MLU / MUC ) ,MUR ) ) / Min( ( ( ( ( MLU / ( ( DS / CS ) - ( RCSe - RMSe ) ) ) - ( MUR + RRSe ) ) - ( ( CS * ( MLU * CS ) ) * ( Min( Min( RCSe ,DS ) ,DS ) - MUM ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.6016260162601627, "obj2": 0.2114313537026848}, {"determining": "( ( DDR - ( FirstVNF_RAM_Server * ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) + FirstVNF_RAM_Server ) ) ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - CS ) - ( RMSe + CS ) ) + Min( MUM ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.31097560975609756, "obj2": 0.4384107777062839}, {"determining": "( ( FirstVNF_RAM * FirstVNF_Mem ) + ( ( Max( Const,FirstVNF_Mem_Server ) - BR ) / ( ARS + ( MDR / Const ) ) ) )", "choosing": "( Min( ( Min( MUM ,( RCSe / RRSe ) ) * ( ( ( ( MUM - MUM ) - ( CS + MUC ) ) + Min( Min( MUC ,MUR ) ,( ( DS + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( Min( RMSe ,Min( CS ,( ( ( DS / ( MUM / MUR ) ) / MLU ) + ( MUM - MLU ) ) ) ) * ( RCSe + RCSe ) ) )", "obj1": 0.524390243902439, "obj2": 0.24641548978798122}, {"determining": "( Min( Min( FirstVNF_Mem ,FirstVNF_CPU ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( DDR ,( MRS + FirstVNF_CPU_Server ) ) ,Min( DDR ,( Const - ( FirstVNF_Mem_Server - RRS ) ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe + DS ) / ( ( ( MUM + ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) ) - ( ( CS * CS ) * ( Min( ( ( CS / MUR ) * MUM ) ,DS ) - ( MLU + DS ) ) ) ) - MLU ) )", "obj1": 0.8841463414634146, "obj2": 0.041715324940081434}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + MLU ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.24796747967479674, "obj2": 0.5044435880101781}, {"determining": "( ( FirstVNF_CPU / Min( Const ,ARS ) ) + Min( AMS ,FirstVNF_RAM ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MUC - ( DS + RMSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + Min( ( Min( RRSe ,CS ) / Max( ( MLU + DS ),RCSe ) ) ,MUR ) ) + Min( ( ( MUC * DS ) / ( CS * RCSe ) ) ,MUR ) ) )", "obj1": 0.10772357723577236, "obj2": 0.6812926879148191}, {"determining": "( ( DDR - ( Min( Max( ( Const - MDR ),PN ) ,DDR ) / FirstVNF_Mem_Server ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( MUM ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( CS + DS ) / CS ) )", "obj1": 0.266260162601626, "obj2": 0.4907576149892741}, {"determining": "( ( DDR - Min( ( ( DDR - ( ARS - ( MDR / MDR ) ) ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) ,FirstVNF_RAM ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.2886178861788618, "obj2": 0.4671678581283321}, {"determining": "( ( FirstVNF_CPU / Min( Const ,ARS ) ) + Min( AMS ,FirstVNF_RAM ) )", "choosing": "( Min( ( Min( DS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( Min( MUC ,RMSe ) - ( Min( ( MUM - RMSe ) ,RRSe ) / CS ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.12195121951219512, "obj2": 0.654321567491538}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,ARS ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,( ( Const / ( ( MDR / ARS ) * RRS ) ) / DDR ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + Max( MUC,RMSe ) ) ) + Min( Min( ( MLU * MUM ) ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.6382113821138211, "obj2": 0.15504254249763275}, {"determining": "( Min( ( Min( ( FirstVNF_Mem + PN ) ,FirstVNF_RAM ) - ( ( BR / MDR ) * ( FirstVNF_Mem_Server - RRS ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( ( ACS + ACS ) + ( Min( ARS ,RRS ) / BR ) ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,MLU ) - Min( ( MLU - ( ( ( ( MLU + MLU ) - RMSe ) / ( MLU - ( MUR - RCSe ) ) ) - CS ) ) ,MUC ) ) ,( ( CS + MUR ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) )", "obj1": 0.9451219512195121, "obj2": 0.017624444859958163}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( ARS ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.3434959349593496, "obj2": 0.40449633634791893}, {"determining": "Min( ( ( Min( Max( ( Const - MDR ),PN ) ,DDR ) / FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( ( Min( ( ( CS / MUR ) * ( DS * RCSe ) ) ,DS ) - ( MLU + DS ) ) - CS ) ) * ( ( MLU - Min( ( MLU * ( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.4654471544715447, "obj2": 0.28173858541374525}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM * FirstVNF_RAM ) * Min( Min( BR ,FirstVNF_Mem_Server ) ,MRS ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MLU + DS ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.6951219512195121, "obj2": 0.10841151009937505}, {"determining": "Min( ( Min( FirstVNF_RAM ,BR ) - ( ( FirstVNF_CPU / RRS ) + ARS ) ) ,Max( ( Min( Min( FirstVNF_Mem_Server ,( MRS + ACS ) ) ,DDR ) / FirstVNF_Mem_Server ),( DDR - Max( RRS,PN ) ) ) )", "choosing": "( ( Min( ( Min( MLU ,MUM ) + CS ) ,DS ) * ( RRSe * ( Max( MUM,Min( ( ( MUM - RRSe ) - RCSe ) ,DS ) ) - ( ( MUC * RRSe ) - ( MUC - ( ( RCSe * DS ) + MUC ) ) ) ) ) ) / Min( ( ( ( Max( ( CS * ( CS / DS ) ),( Max( DS,DS ) - MLU ) ) - ( MUC / MUC ) ) - ( ( CS * ( CS * CS ) ) * ( Min( Min( RCSe ,MLU ) ,DS ) - MLU ) ) ) + MUC ) ,( MUC / RRSe ) ) )", "obj1": 0.5873983739837398, "obj2": 0.22094823163787}, {"determining": "Min( ( ( Min( Max( CRS,FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,( MDR + Min( DDR ,PN ) ) ) ) / BR ) + Min( Const ,ARS ) ) ,( ARS + ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( ( ( ( RMSe + CS ) - ( MUM - ( RRSe - MLU ) ) ) + Min( ( MLU - ( MUC / MUC ) ) ,( Max( DS,RMSe ) - RMSe ) ) ) - CS ) ) * ( ( MLU - Min( Max( ( RMSe / ( RCSe / MUR ) ),( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.43902439024390244, "obj2": 0.2955935327217584}, {"determining": "( ( DDR - Max( ( ( DDR - BR ) + ( Min( ( ARS * FirstVNF_RAM ) ,AMS ) / ( FirstVNF_CPU_Server - ACS ) ) ),FirstVNF_RAM ) ) + ( FirstVNF_RAM / CRS ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( Min( MUM ,RCSe ) + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC / MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( MUR / MUM ) )", "obj1": 0.21951219512195122, "obj2": 0.5865380513253367}, {"determining": "( ( ( FirstVNF_CPU / BR ) + ( Const - MRS ) ) + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MLU + DS ) ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.14634146341463414, "obj2": 0.6310500585708144}, {"determining": "( Min( ( ( ( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( RRS - FirstVNF_Mem_Server ) * Min( DDR ,Max( ACS,PN ) ) ) ) / FirstVNF_RAM ) - ( ( BR - MDR ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( FirstVNF_Mem_Server - RRS ) ) )", "choosing": "( Min( Min( Max( ( DS * RCSe ),RCSe ) ,MUC ) ,CS ) / Max( RMSe,RCSe ) )", "obj1": 0.9715447154471545, "obj2": 0.008959392092081873}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),Max( FirstVNF_RAM,AMS ) ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) )", "choosing": "( Min( ( RRSe - MUR ) ,( Min( ( RCSe * Min( MUR ,MLU ) ) ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.34959349593495936, "obj2": 0.3808784988017472}, {"determining": "( Const + Max( CRS,ARS ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( MUC + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,MUM ) ) - CS ) ) ,MUR ) / ( ( MUM + MLU ) + Min( ( ( MUC * DS ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.13617886178861788, "obj2": 0.6382142984108501}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( ARS ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.3252032520325203, "obj2": 0.41225033187151144}, {"determining": "( ( ( ( Max( ARS,MDR ) * PN ) - FirstVNF_Mem_Server ) + Min( ARS ,RRS ) ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( DS ,( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( ( CS + CS ) + ( MUR * MLU ) ) ,( ( DS + MUM ) - MUR ) ) ) - CS ) ) ) ,Min( Max( Min( MUR ,Max( ( RCSe - Min( ( CS - RCSe ) ,RMSe ) ),Max( DS,Min( ( MUM - RRSe ) ,( RMSe - RRSe ) ) ) ) ),( DS * ( ( ( DS - CS ) - RMSe ) * ( Min( ( CS - DS ) ,MUM ) * MUR ) ) ) ) ,RRSe ) )", "obj1": 0.37601626016260165, "obj2": 0.3467298635693161}, {"determining": "( Min( Min( Const ,( ( Max( ( FirstVNF_RAM_Server / MRS ),Const ) + MRS ) * MDR ) ) ,( ( FirstVNF_RAM_Server * ( FirstVNF_RAM / ARS ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server / Min( CRS ,FirstVNF_Mem ) ) ) ) ) - ( ( BR - MDR ) * ( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( DS ,RMSe ) ,( ( MLU + MUC ) - MUC ) ) ) + CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.8577235772357723, "obj2": 0.0559178945107167}, {"determining": "( ( ( DDR * PN ) - ( FirstVNF_RAM_Server * ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const / Max( ( Min( Min( FirstVNF_RAM_Server ,AMS ) ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * Max( RMSe,RMSe ) ) ,MUR ) / ( CS / ( MUM + DS ) ) )", "obj1": 0.28252032520325204, "obj2": 0.47369139919280473}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,( ( Min( Max( ( Const - MDR ),PN ) ,Max( FirstVNF_RAM_Server,( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + ( MDR / ACS ) ) ) ) ) / FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) )", "choosing": "( ( MUM + MUM ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.4898373983739837, "obj2": 0.2649159715629739}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( ARS ,RRS ) / BR ) - Min( Min( ( DDR - PN ) ,FirstVNF_CPU ) ,FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.17682926829268292, "obj2": 0.6225880067686667}, {"determining": "( ( ( Max( Max( Max( DDR,PN ),ARS ),PN ) - FirstVNF_Mem_Server ) + ( MRS - Const ) ) + ( ( DDR - BR ) + ( CRS / ( FirstVNF_CPU_Server - ACS ) ) ) )", "choosing": "( Min( ( Min( DS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - ( Min( MUC ,RMSe ) - ( Min( ( MUM - RMSe ) ,RRSe ) / CS ) ) ) ) ,MUR ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.3617886178861789, "obj2": 0.3617480170571622}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / RRS ) - ( ( MDR - BR ) * ( ( DDR + BR ) - RRS ) ) ) ,( FirstVNF_CPU + ARS ) ) - Max( MDR,( FirstVNF_CPU / BR ) ) )", "choosing": "Min( ( ( MUR * Min( Min( RCSe ,DS ) ,Min( ( RRSe - MUC ) ,Min( RRSe ,CS ) ) ) ) - Min( ( MUC - ( ( ( ( MLU + DS ) - RMSe ) / ( ( RMSe - RCSe ) - MLU ) ) - CS ) ) ,MUC ) ) ,( ( CS + ( Max( ( RCSe / RCSe ),( RRSe + ( RCSe * ( MUM + RMSe ) ) ) ) + Max( RMSe,RCSe ) ) ) * ( ( ( ( MLU + DS ) - RMSe ) / ( ( DS - RCSe ) - ( ( RRSe - MUC ) - Min( RCSe ,Max( MUC,DS ) ) ) ) ) - CS ) ) )", "obj1": 0.9044715447154471, "obj2": 0.030798595812507792}, {"determining": "( ( FirstVNF_CPU / Min( Const ,ARS ) ) + Min( AMS ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( Min( DS ,MUR ) ,MUR ) ,( MUC - ( DS + RMSe ) ) ) ) - CS ) ) ,MUR ) / ( ( MUM + Min( ( Min( RRSe ,CS ) / Max( ( MLU + DS ),RCSe ) ) ,MUR ) ) + Min( ( ( MUC * DS ) / ( CS * RCSe ) ) ,MUR ) ) )", "obj1": 0.11585365853658537, "obj2": 0.6798476126732496}, {"determining": "( ( DDR - ( FirstVNF_RAM_Server * ( Max( ACS,FirstVNF_RAM_Server ) - ( Min( AMS ,ACS ) + FirstVNF_RAM_Server ) ) ) ) + ( ( ( CRS - FirstVNF_CPU ) - ( Const - Max( ( Min( CRS ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ),( ( BR - MDR ) - ARS ) ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( MUM ,( ( MUC + MUR ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.1951219512195122, "obj2": 0.5930414629397892}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( ( Min( Min( FirstVNF_RAM ,FirstVNF_Mem ) ,RRS ) / BR ) - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - ( ( DS + MUM ) - RMSe ) ) )", "obj1": 0.32113821138211385, "obj2": 0.42857310495175416}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + RCSe ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( Min( ( MUM - RMSe ) ,RRSe ) / ( Min( MUR ,RMSe ) / Max( CS,MUM ) ) ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.1910569105691057, "obj2": 0.6019668394172885}, {"determining": "Min( ( ( Min( Max( ( Const - MDR ),PN ) ,DDR ) / FirstVNF_Mem_Server ) + Min( Const ,ARS ) ) ,( ARS - ( MDR / MDR ) ) )", "choosing": "( ( Min( MUM ,( ( Min( ( ( CS / MUR ) * ( DS * RCSe ) ) ,DS ) - ( MLU + DS ) ) - CS ) ) * ( ( MLU - Min( ( MLU * ( CS / RRSe ) ) ,MUC ) ) - CS ) ) * ( RMSe / ( DS - RCSe ) ) )", "obj1": 0.47560975609756095, "obj2": 0.2743481664157781}, {"determining": "( Min( Min( FirstVNF_Mem ,PN ) ,FirstVNF_RAM ) - ( ( BR - MDR ) * ( Min( FirstVNF_RAM_Server ,Min( Min( DDR ,( Const - MDR ) ) ,Min( DDR ,( Const - MDR ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( ( MLU * MUM ) ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.6565040650406504, "obj2": 0.14690015970226872}, {"determining": "( Min( ( Min( Min( FirstVNF_Mem ,( FirstVNF_Mem_Server / AMS ) ) ,Max( FirstVNF_RAM_Server,CRS ) ) - ( ( BR - PN ) * ( RRS - FirstVNF_Mem_Server ) ) ) ,FirstVNF_RAM ) - ( ( BR - ( MDR + FirstVNF_CPU_Server ) ) * ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( Min( CS ,( ( Max( ( MUM - DS ),MUM ) - MUC ) * DS ) ) * Min( CS ,MUM ) ) ,MUR ) / ( ( MUM + DS ) + Min( ( Max( MUC,Max( CS,MUR ) ) / Max( CS,RCSe ) ) ,MUR ) ) )", "obj1": 0.9247967479674797, "obj2": 0.025350160175976775}, {"determining": "( ( ( ( CRS - FirstVNF_CPU ) - ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) ) / ( FirstVNF_CPU_Server - ACS ) ) + Min( AMS ,PN ) )", "choosing": "( Min( ( Min( MUM ,( CS * DS ) ) * ( ( ( ( MUM - ( MLU * DS ) ) - ( RMSe + MLU ) ) + Min( ( MUM - ( CS / MUC ) ) ,( ( DS + MUM ) - RMSe ) ) ) - MLU ) ) ,( RRSe - MUR ) ) / ( ( MLU + MUC ) - MUC ) )", "obj1": 0.18292682926829268, "obj2": 0.6204424029146222}, {"determining": "( ( MDR / FirstVNF_CPU ) + ( ( RRS + ACS ) / ( Const - ACS ) ) )", "choosing": "( Min( ( Min( MUR ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( ( MLU * MUM ) ,MUR ) ,( ( MLU + MUC ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( RCSe / ( MUR / ( MUR - RMSe ) ) ) + ( MLU + MUC ) ) )", "obj1": 0.9898373983739838, "obj2": 0.007773841526945562}, {"determining": "Min( ( ARS - ( MDR / MDR ) ) ,Max( ( Min( ( ACS / CRS ) ,Max( FirstVNF_RAM_Server,( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM_Server ) - ( ( BR + DDR ) + FirstVNF_RAM_Server ) ) ) ) / FirstVNF_Mem_Server ),( Const - ARS ) ) )", "choosing": "( Min( ( Min( CS ,( CS * DS ) ) * ( ( ( ( MUM - MUM ) - ( RMSe + CS ) ) + Min( Min( CS ,MUR ) ,( ( MUC + MUM ) - MUC ) ) ) - CS ) ) ,MUR ) / ( ( MLU + DS ) / CS ) )", "obj1": 0.42276422764227645, "obj2": 0.3057224992809079}]}