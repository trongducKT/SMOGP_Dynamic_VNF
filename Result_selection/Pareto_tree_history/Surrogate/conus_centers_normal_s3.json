{"1": [{"determining": "( ( FirstVNF_RAM - MDR ) * ( MRS / PN ) )", "choosing": "( ( DS / MLU ) + ( RMSe + DS ) )", "obj1": 0.46041666666666664, "obj2": 0.49905152499213845}, {"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( RRS - CRS ) )", "choosing": "Min( ( MLU * MUR ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "( ( BR / FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( ( MUR + RMSe ) / Min( RMSe ,MUR ) )", "obj1": 0.32708333333333334, "obj2": 0.6131075630837798}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( RMSe * RMSe ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.30416666666666664, "obj2": 0.6326448314605979}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - ( CRS / ACS ) )", "choosing": "( ( RCSe - RMSe ) - ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem / ACS ) ,FirstVNF_Mem ) + ( ( DDR * FirstVNF_RAM ) - FirstVNF_Mem ) )", "choosing": "( ( RRSe * RCSe ) / ( RRSe * MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5966931197980082}, {"determining": "( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( DS + DS ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.48541666666666666, "obj2": 0.4479664051459192}, {"determining": "( ( ( MRS - ACS ) + Min( PN ,MRS ) ) - Min( Min( MRS ,MDR ) ,Min( ARS ,MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + Const ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,MUR ) + Min( MUC ,RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0966559768032317}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.47291666666666665, "obj2": 0.48027292190427606}, {"determining": "Min( ( Const * FirstVNF_CPU ) ,( Max( MRS,ACS ) + ARS ) )", "choosing": "( Min( Max( ( MLU - RMSe ),( RRSe / MUM ) ) ,MLU ) / ( MUM * ( ( MLU + MLU ) - ( DS * MUR ) ) ) )", "obj1": 0.37916666666666665, "obj2": 0.5503250293100734}, {"determining": "( ( FirstVNF_CPU * PN ) + Min( PN ,MRS ) )", "choosing": "( ( MLU - ( ( MUC * RMSe ) * RCSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.32916666666666666, "obj2": 0.6042172953342906}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / MUR ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - ( FirstVNF_Mem_Server - Const ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - ( RRSe + ( MLU / RMSe ) ) ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.7479166666666667, "obj2": 0.22766062310629334}, {"determining": "( ( AMS * BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) * Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( ( FirstVNF_CPU / AMS ) * ( PN + FirstVNF_CPU ) )", "choosing": "Max( Min( DS ,( MLU - CS ) ),Max( MLU,( ( RRSe + RMSe ) / CS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.5138374900122431}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_RAM / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( ( PN * CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RRSe ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( FirstVNF_RAM / CRS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( Min( MUR ,MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) - ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( MUC,MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) )", "obj1": 0.525, "obj2": 0.41314859807024856}, {"determining": "Max( ( MRS / ( FirstVNF_CPU + ( DDR / ACS ) ) ),( MRS * FirstVNF_Mem ) )", "choosing": "Max( Max( Max( ( CS * RCSe ),Max( MUM,MUM ) ),Max( ( CS - MUC ),( RCSe / MUM ) ) ),Max( Min( ( MUR * RCSe ) ,( RCSe + MUR ) ),( Max( DS,DS ) + ( RMSe + CS ) ) ) )", "obj1": 0.46875, "obj2": 0.49259052609960013}, {"determining": "( ( ( ( FirstVNF_Mem * Const ) * ( FirstVNF_Mem + BR ) ) - ( ( AMS - CRS ) * ( RRS / CRS ) ) ) * Min( Max( ( FirstVNF_Mem * MDR ),Min( Const ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( RRS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Max( ( MUC + RCSe ),MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.4041666666666667, "obj2": 0.529512587500365}], "2": [{"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( CRS / ACS ) ) / Max( FirstVNF_CPU,AMS ) )", "choosing": "( Min( ( RCSe - RMSe ) ,MUM ) + Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( FirstVNF_Mem + PN ) / ( MDR / MDR ) ),FirstVNF_Mem_Server ) + PN ) * Min( ( DDR + CRS ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( Min( DS ,RMSe ) - CS ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.6446873741763447}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( ( MLU * MUC ) ,( RMSe + RMSe ) )", "obj1": 0.7333333333333333, "obj2": 0.149367001150987}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) - Max( PN,CRS ) ) / ( Max( FirstVNF_RAM_Server,ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) / ( ( Max( ACS,FirstVNF_Mem ) + Min( ACS ,FirstVNF_CPU_Server ) ) + Max( Min( BR ,MDR ),Min( FirstVNF_CPU_Server ,Const ) ) ) )", "choosing": "( ( ( RMSe - MUM ) - MUR ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.8541666666666666, "obj2": 0.1303045161217199}, {"determining": "( ( ( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) ) * PN ) + Min( PN ,MRS ) )", "choosing": "( ( ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) - ( ( MUC * RMSe ) * RCSe ) ) / Min( RCSe ,MUC ) )", "obj1": 0.69375, "obj2": 0.31431535688646334}, {"determining": "( ( FirstVNF_RAM + CRS ) * ( FirstVNF_Mem + ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( MUR + DS ) * ( DS * DS ) )", "obj1": 0.7208333333333333, "obj2": 0.24013992062807624}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( ( BR - FirstVNF_RAM ) + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.98125, "obj2": 0.021832221302530153}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + Const ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,MUR ) + Min( MUC ,RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0966559768032317}, {"determining": "Max( ( FirstVNF_CPU / ACS ),AMS )", "choosing": "( ( MUR * MUC ) / Min( MUM ,RMSe ) )", "obj1": 0.325, "obj2": 0.5822630321808118}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + Const ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,MUR ) + Min( MUC ,RCSe ) ) )", "obj1": 0.9125, "obj2": 0.09821702496638575}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_RAM / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( ( PN * CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RRSe ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) ) )", "choosing": "( ( ( MUM / CS ) + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.3625, "obj2": 0.557651563397879}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.47291666666666665, "obj2": 0.48027292190427606}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) )", "obj1": 0.44583333333333336, "obj2": 0.48735585388075275}, {"determining": "( ( MDR / Const ) + ( ( ( Const * PN ) / ARS ) + Const ) )", "choosing": "( MLU / Max( ( ( CS / RMSe ) + ( RMSe * DS ) ),( ( MUM * MUC ) * ( RMSe * RMSe ) ) ) )", "obj1": 0.3875, "obj2": 0.5301675564593795}, {"determining": "Min( ( Const * FirstVNF_CPU ) ,MDR )", "choosing": "( Min( Max( CS,( RRSe / MUM ) ) ,MLU ) / ( MUM * ( ( MLU + MLU ) - ( DS * MUR ) ) ) )", "obj1": 0.3145833333333333, "obj2": 0.6060840393733717}, {"determining": "( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe * ( DS + DS ) ) * ( ( MLU + RRSe ) * ( RCSe * MUC ) ) )", "obj1": 0.48541666666666666, "obj2": 0.4479664051459192}, {"determining": "Min( ( ( DDR + RRS ) / BR ) ,( PN - BR ) )", "choosing": "( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) )", "obj1": 0.41875, "obj2": 0.5052229181597955}, {"determining": "Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) )", "choosing": "( ( MUR * MUC ) / Min( MUM ,MLU ) )", "obj1": 0.30416666666666664, "obj2": 0.6326448314605979}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5064038195355532}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) - ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( MUC,MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) )", "obj1": 0.525, "obj2": 0.41314859807024856}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( Const * FirstVNF_CPU ) ,( Max( MRS,ACS ) + ARS ) ) )", "choosing": "Min( ( Min( Max( ( MLU - RMSe ),( RRSe / MUM ) ) ,MLU ) / ( MUM * ( ( MLU + MLU ) - ( DS * MUR ) ) ) ) ,( RRSe * MUC ) )", "obj1": 0.5208333333333334, "obj2": 0.41472804015984915}, {"determining": "( ( ( ( RRS + MDR ) / ( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) / Max( ( PN + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( ( CS + RMSe ) ,( MLU / MUC ) ) ),( Max( ( MUM / MLU ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.49166666666666664, "obj2": 0.43431250895830303}, {"determining": "Max( ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + CRS ),( FirstVNF_Mem + PN ) ) ),( MRS + ARS ) )", "choosing": "( ( ( RMSe / MUM ) - ( MUC + MUM ) ) / Min( MUM ,MLU ) )", "obj1": 0.3729166666666667, "obj2": 0.5500661691076372}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Min( FirstVNF_CPU ,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( MUR + DS ) * ( DS * MUR ) )", "obj1": 0.5645833333333333, "obj2": 0.36400516759710644}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - Min( ( ( Const / ARS ) * ( ACS + FirstVNF_RAM_Server ) ) ,( ( ACS + DDR ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( RRSe ,( MLU + RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.3588102619863559}, {"determining": "( ( BR / Const ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2875, "obj2": 0.6356144251052069}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU / PN ) - FirstVNF_RAM ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUR ) - ( MUC / CS ) ) ) * ( DS * DS ) )", "obj1": 0.5729166666666666, "obj2": 0.3632004112266866}, {"determining": "( ( AMS * BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) * Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.4895833333333333, "obj2": 0.4367859662907196}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( RRS - CRS ) )", "choosing": "Min( ( MLU * MUR ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( RMSe * RMSe ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - ( CRS / ACS ) )", "choosing": "( ( RCSe - RMSe ) - ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - ACS ) + Min( PN ,MRS ) ) - Min( Min( MRS ,MDR ) ,Min( ARS ,MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / MUR ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / CRS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( Min( MUR ,MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem * ( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "( ( MUM + ( ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) - RRSe ) ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + ( RCSe - RRSe ) ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( MUC * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Max( ( Max( Min( Const ,PN ),( AMS - DDR ) ) + Min( Max( PN,ARS ) ,( DDR + FirstVNF_CPU ) ) ),( Min( ( RRS + MRS ) ,( MDR - ACS ) ) / ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) * ( RRS * FirstVNF_Mem_Server ) ) ) ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) / ( FirstVNF_CPU + PN ) ) / ( ( MRS * FirstVNF_RAM ) + Min( Const ,BR ) ) ) / Min( ( ( Const * BR ) - ( MDR * CRS ) ) ,Max( ( DDR * FirstVNF_CPU ),( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ) / Max( ( Max( ( ( FirstVNF_RAM / FirstVNF_CPU ) - ( ACS * PN ) ),Max( ( Const - MRS ),( FirstVNF_CPU_Server + MDR ) ) ) * ( ( Max( ARS,Const ) - ( FirstVNF_CPU - MRS ) ) / Min( Min( DDR ,PN ) ,Min( CRS ,CRS ) ) ) ),( Max( ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - ( MRS - RRS ) ),Max( Max( FirstVNF_CPU,PN ),( BR / FirstVNF_CPU ) ) ) - Min( ( ( FirstVNF_Mem * PN ) - Min( FirstVNF_CPU_Server ,MRS ) ) ,Min( ( ARS / ARS ) ,( FirstVNF_Mem_Server - DDR ) ) ) ) ) ),( ( ( ( Min( ( FirstVNF_CPU_Server - FirstVNF_RAM ) ,( MDR + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server * AMS ) - ( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( ( Min( FirstVNF_RAM ,DDR ) + Max( Const,Const ) ) / ( ( BR * FirstVNF_Mem ) - Min( DDR ,Const ) ) ) ) / ( Max( ( ( ACS + FirstVNF_RAM_Server ) / Max( FirstVNF_RAM,Const ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ),Max( FirstVNF_CPU,AMS ) ) ) - Max( ( Min( FirstVNF_Mem_Server ,CRS ) + ( FirstVNF_CPU * MDR ) ),( Min( FirstVNF_CPU_Server ,AMS ) - Max( DDR,BR ) ) ) ) ) / ( ( ( ( Max( DDR,ACS ) / ( RRS / PN ) ) * ( ( ACS * ACS ) + ( ARS * FirstVNF_RAM ) ) ) / ( Max( Max( Const,RRS ),( FirstVNF_Mem * ACS ) ) * Max( ( FirstVNF_Mem_Server / FirstVNF_CPU ),( CRS / PN ) ) ) ) / ( Max( ( ( FirstVNF_CPU - ARS ) - Min( ACS ,AMS ) ),( ( RRS - BR ) + Min( RRS ,CRS ) ) ) - ( ( ( PN + AMS ) + ( ACS / FirstVNF_CPU_Server ) ) + ( ( MDR + ACS ) / Max( ACS,DDR ) ) ) ) ) ) ) * ( ( ( Min( ( ( ( FirstVNF_RAM * FirstVNF_CPU ) - ( CRS + Const ) ) - Max( ( FirstVNF_RAM + FirstVNF_RAM_Server ),( RRS / BR ) ) ) ,( ( ( FirstVNF_CPU * FirstVNF_CPU ) * ( FirstVNF_CPU_Server - AMS ) ) + Min( ( PN / DDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) + ( ( ( ( FirstVNF_Mem_Server * ARS ) - ( Const / MRS ) ) - Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),Max( BR,MDR ) ) ) - ( ( ( FirstVNF_Mem_Server / Const ) * ( FirstVNF_Mem + ACS ) ) * ( ( PN * BR ) - ( Const * FirstVNF_RAM_Server ) ) ) ) ) / Max( Max( ( Min( ( BR - MDR ) ,( MDR - FirstVNF_RAM_Server ) ) * Max( ( Const - ARS ),( FirstVNF_RAM / AMS ) ) ),Max( Max( ( PN / Const ),( Const - FirstVNF_RAM ) ),( Max( FirstVNF_Mem_Server,ARS ) + Min( Const ,MDR ) ) ) ),Max( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ,( ( Const + FirstVNF_RAM_Server ) - ( CRS / BR ) ) ),Max( ( Min( RRS ,PN ) + Min( FirstVNF_RAM_Server ,PN ) ),( ( MRS + RRS ) * ( FirstVNF_CPU + FirstVNF_CPU ) ) ) ) ) ) / ( Min( Max( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / Min( DDR ,RRS ) ) - Max( ( CRS - FirstVNF_CPU ),( FirstVNF_RAM * BR ) ) ),( ( ( PN / FirstVNF_Mem_Server ) - ( AMS + FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_Mem,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * CRS ) ) ) ) ,( ( ( Min( FirstVNF_CPU ,ARS ) + Min( ACS ,ACS ) ) + Max( ( FirstVNF_CPU + FirstVNF_Mem_Server ),( AMS - CRS ) ) ) / Max( ( Max( Const,ACS ) - ( FirstVNF_CPU * Const ) ),( ( BR / FirstVNF_RAM ) - Max( FirstVNF_CPU_Server,ACS ) ) ) ) ) - ( Min( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) - Max( ( FirstVNF_Mem_Server - MRS ),( FirstVNF_Mem * FirstVNF_CPU ) ) ) ,Min( Min( ( FirstVNF_CPU + MDR ) ,Max( FirstVNF_CPU,BR ) ) ,( ( ARS - FirstVNF_Mem ) * ( PN / FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( ARS ,CRS ) * ( BR / DDR ) ) / Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( FirstVNF_RAM - BR ) ) ) / Max( ( ( RRS - FirstVNF_CPU_Server ) * ( ACS / RRS ) ),( ( DDR + DDR ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "Min( Min( Max( ( ( Min( ( ( MUC * MUM ) + ( DS * MUM ) ) ,( ( RRSe / RCSe ) / ( MUM - MLU ) ) ) * Max( ( ( MLU - MLU ) * Min( MUC ,MUR ) ),( Min( DS ,MUC ) + ( MUM + CS ) ) ) ) - ( ( Min( ( RMSe + MUC ) ,Max( RCSe,RRSe ) ) * Min( Min( MUC ,RRSe ) ,( RMSe * RCSe ) ) ) + ( ( ( MUC + DS ) / ( RCSe - MUM ) ) / ( Min( RRSe ,MUR ) + ( MUR + RRSe ) ) ) ) ),Max( ( ( ( ( MUR + MUC ) + ( MLU / RMSe ) ) - Max( ( MLU + CS ),( DS + RCSe ) ) ) - ( ( ( MUM - MLU ) * ( RMSe * MUM ) ) - Min( ( RRSe + RRSe ) ,( MUC - MUM ) ) ) ),( ( ( ( DS / RMSe ) / ( MLU + MUC ) ) + ( ( RRSe / MLU ) - ( MLU - MUC ) ) ) + Max( ( Min( CS ,MLU ) / ( RRSe + MUC ) ),Min( ( MUC / RRSe ) ,Max( RRSe,MUM ) ) ) ) ) ) ,Min( Min( Max( Max( ( ( CS / MUM ) + ( MUC + RCSe ) ),Max( Max( MLU,RRSe ),( CS * RRSe ) ) ),( ( Min( RCSe ,RMSe ) * ( MUM / RMSe ) ) / ( ( MUC * CS ) - ( RCSe - MUM ) ) ) ) ,( ( Max( Max( MUR,MUR ),Max( MUM,RRSe ) ) * ( Max( MUR,MUR ) + ( CS + MUC ) ) ) + Min( ( Max( RMSe,DS ) + Max( MUC,MUR ) ) ,( ( RMSe + CS ) / Max( MUM,MLU ) ) ) ) ) ,( ( ( Max( Max( RRSe,MLU ),( CS * MUC ) ) / ( Min( RRSe ,DS ) + ( RMSe * MUR ) ) ) * Max( ( Max( MUM,DS ) * ( RCSe + RRSe ) ),Max( ( RRSe + MLU ),( CS * RCSe ) ) ) ) * Max( Max( Max( ( DS / CS ),( CS / DS ) ),Min( ( MUC * RCSe ) ,( RMSe - MUM ) ) ),Min( Max( ( RCSe * CS ),Max( MUR,MLU ) ) ,( ( MUR + CS ) - ( RRSe - CS ) ) ) ) ) ) ) ,( ( ( ( ( ( ( DS - DS ) * Min( RMSe ,MUM ) ) / ( ( RMSe * RMSe ) + ( CS + MUM ) ) ) * ( ( Min( RRSe ,RMSe ) * ( MUM - MUM ) ) + ( ( RMSe * RCSe ) + ( MUM - DS ) ) ) ) + ( Min( Max( Min( MUM ,RRSe ),( RMSe / MUM ) ) ,Max( ( MLU / MUR ),( RRSe / MUM ) ) ) / ( ( ( RCSe - MUC ) / ( RMSe / MUM ) ) * ( ( CS / MUC ) - ( MUM * DS ) ) ) ) ) + ( ( ( Min( Max( MUR,MUM ) ,Max( RRSe,MLU ) ) * ( ( MUR / MUR ) / ( MUC - RCSe ) ) ) * ( ( Max( DS,MUR ) + Max( MUR,RRSe ) ) * ( ( DS / MLU ) / Max( MLU,MUR ) ) ) ) / Max( Min( ( ( MLU / RCSe ) + Min( MUC ,DS ) ) ,Min( ( RMSe / DS ) ,Max( MLU,MUC ) ) ),Min( Max( ( MUM / DS ),( DS - RRSe ) ) ,Min( ( RMSe * MUR ) ,( MUM / DS ) ) ) ) ) ) / ( ( Max( Min( Min( Max( DS,MUR ) ,Min( RMSe ,MUM ) ) ,( Max( CS,MUC ) * ( DS - RCSe ) ) ),Min( ( Max( DS,DS ) / ( RMSe + MLU ) ) ,( ( MUC + MUC ) - Min( DS ,MUC ) ) ) ) - ( ( Min( ( CS - MUR ) ,Max( RCSe,RCSe ) ) * ( ( MUC - CS ) * ( DS + DS ) ) ) + ( ( ( MUR * MUR ) - ( MLU * RRSe ) ) / ( ( MUR + RRSe ) - ( MUC - MUR ) ) ) ) ) * ( ( ( Max( Min( CS ,CS ),Max( MLU,CS ) ) / ( ( MLU * MUM ) + ( MUC + MLU ) ) ) + Min( ( ( MUR * MUC ) + ( RMSe * RCSe ) ) ,( ( CS / DS ) / Max( MLU,RMSe ) ) ) ) + ( Max( Min( ( RMSe * DS ) ,( CS - MUC ) ),Min( ( DS - MUM ) ,Min( CS ,MUR ) ) ) - Min( ( ( RMSe / MUC ) + Min( MUR ,RMSe ) ) ,( ( RRSe / MUM ) * ( MLU * MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Max( ( FirstVNF_CPU / ACS ),( MRS + ARS ) ) ) - ( ( FirstVNF_Mem + PN ) / ( MDR / MDR ) ) )", "choosing": "Min( ( MLU * ( CS + CS ) ) ,( RMSe + ( MUR * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) - AMS )", "choosing": "( ( DS + ( ( ( CS + RRSe ) + ( MUR - MUC ) ) + CS ) ) - ( ( ( MUM / CS ) / MUR ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) - ( ( Max( FirstVNF_Mem_Server,RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + DS ) ) - ( ( ( MUM / CS ) / MUR ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUC + RCSe ),MUM ) - RMSe ) - ( MUM / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Min( FirstVNF_RAM ,MDR ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe - RMSe ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_Mem_Server ) + PN ) * ( ( ( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) ) + CRS ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe * MLU ) - ( DS - MUM ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( DS - MUM ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ARS ) / ( MDR / MDR ) ) )", "choosing": "Min( ( MLU * ( CS + CS ) ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ARS ) / ( MDR / MDR ) ) )", "choosing": "( ( ( CS - CS ) + ( MUM / RRSe ) ) / ( Max( MUM,MUR ) / Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * ( MRS - AMS ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) - ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - ( ( CS + RRSe ) + ( MUR - MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( CRS / ACS ) ) / Max( FirstVNF_CPU,AMS ) )", "choosing": "( Min( ( RCSe - RMSe ) ,MUM ) + Max( MUM,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( PN - FirstVNF_CPU ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6619130366105379}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUR + DS ) * ( MUC * CS ) )", "obj1": 0.7791666666666667, "obj2": 0.118619325430688}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( MUC,MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) )", "obj1": 0.71875, "obj2": 0.23731433014541137}, {"determining": "( ( Max( ACS,FirstVNF_Mem_Server ) + PN ) * Min( ( ( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) + CRS ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MUR * MLU ) - Max( Max( ( ( CS / MUM ) + ( MUC + RCSe ) ),Max( Max( MLU,RRSe ),( CS * RRSe ) ) ),( ( Min( RCSe ,RMSe ) * ( MUM / RMSe ) ) / ( ( MUC * CS ) - ( RCSe - MUM ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.90625, "obj2": 0.08664977836005412}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),FirstVNF_Mem_Server ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( ( MUM * RCSe ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * Min( DS ,MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.6645833333333333, "obj2": 0.2744999520992538}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),( CRS + ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS - RRSe ) / ( MLU - MUR ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5559129945628626}, {"determining": "( Max( Max( FirstVNF_CPU,ACS ),MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUR - ( ( CS * MUC ) / Min( MUM ,CS ) ) ) )", "obj1": 0.28541666666666665, "obj2": 0.5935439968840108}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( DS ,( RMSe + RMSe ) )", "obj1": 0.9229166666666667, "obj2": 0.03106227511683278}, {"determining": "( Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( Max( ( MUC + RCSe ),( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) - RMSe ) - ( MUM / MUC ) )", "obj1": 0.6416666666666667, "obj2": 0.3203934807216027}, {"determining": "Max( ( FirstVNF_CPU / ACS ),Const )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2625, "obj2": 0.6252308719026631}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( DS ,MUR ) + Min( MUC ,RCSe ) ) )", "obj1": 0.725, "obj2": 0.16375815003302135}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_RAM / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( ( PN * CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RRSe ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "Min( ( ( DDR + RRS ) / BR ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - BR ) )", "choosing": "( ( MUC * MLU ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) )", "obj1": 0.37083333333333335, "obj2": 0.5403438766719177}, {"determining": "Min( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( MLU + DS ) / ( ( CS + RRSe ) + ( MUM - MUC ) ) )", "obj1": 0.47291666666666665, "obj2": 0.4498205885856068}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( Const + Const ) + Min( ACS ,CRS ) ) ) ) ) / MDR ) ) )", "choosing": "Min( ( MLU * MUC ) ,( RMSe + ( MUM + ( ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) - RRSe ) ) ) )", "obj1": 0.7395833333333334, "obj2": 0.1480187325235232}, {"determining": "( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),RMSe )", "obj1": 0.91875, "obj2": 0.08324310265079728}, {"determining": "( ( FirstVNF_RAM + CRS ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MUR + DS ) * RRSe )", "obj1": 0.45, "obj2": 0.4821186032650367}, {"determining": "( ( Min( ( ( ( Min( Max( DDR,FirstVNF_CPU ) ,( BR + DDR ) ) - ( ( FirstVNF_RAM_Server - DDR ) + Max( RRS,CRS ) ) ) + Min( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ,( ( RRS + CRS ) / Min( FirstVNF_RAM ,MDR ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,RRS ) / Min( FirstVNF_CPU_Server ,MDR ) ),( ( FirstVNF_Mem_Server - AMS ) - ( PN - FirstVNF_RAM_Server ) ) ) + Max( ( ( PN * FirstVNF_Mem_Server ) - ( MDR + Const ) ),( Min( AMS ,Const ) - Max( FirstVNF_Mem,RRS ) ) ) ) ) ,( ( ( Min( ( FirstVNF_CPU / ACS ) ,( DDR + CRS ) ) / Min( ( FirstVNF_RAM_Server + AMS ) ,( MDR * AMS ) ) ) - ( Max( ( RRS * DDR ),Max( MRS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / MDR ) + ( AMS * PN ) ) ) ) + ( Max( ( ( FirstVNF_Mem / AMS ) * ( ARS - ACS ) ),( Min( Const ,FirstVNF_Mem ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * MDR ) * ( MRS / MRS ) ) / ( Min( BR ,DDR ) / ( Const / FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_CPU_Server ) ) - Min( Max( MRS,FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ,( Min( Max( AMS,FirstVNF_CPU ) ,( MRS - ARS ) ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),( PN * ACS ) ) ) ) ,Min( ( Min( ( MRS + RRS ) ,( AMS * RRS ) ) + ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ,Max( Min( ( ARS - ARS ) ,( FirstVNF_RAM_Server - CRS ) ),Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_CPU ) ) ) ) ) * ( ( Max( ( ( ARS * BR ) * ( DDR + ARS ) ),Max( ( Const + MDR ),( ARS / FirstVNF_Mem_Server ) ) ) / ( ( Max( RRS,BR ) + ( RRS - FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),Max( CRS,PN ) ) ) ) + ( ( ( Max( Const,FirstVNF_RAM_Server ) - ( DDR / FirstVNF_RAM ) ) / ( Max( MDR,PN ) / ( MDR * AMS ) ) ) * ( ( Max( ARS,FirstVNF_CPU_Server ) / ( AMS / PN ) ) * ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * Min( AMS ,Const ) ) ) ) ) ) ) + Min( ( ( Min( Min( ( ( PN + CRS ) - ( FirstVNF_CPU * ACS ) ) ,( ( FirstVNF_RAM / DDR ) * ( BR / FirstVNF_RAM_Server ) ) ) ,( ( ( BR + MRS ) * ( MRS + FirstVNF_RAM_Server ) ) / Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - ( ( Max( ( AMS + MDR ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + ( Max( RRS,FirstVNF_CPU_Server ) + ( MDR - RRS ) ) ) - Max( Min( ( MDR * ACS ) ,( FirstVNF_Mem_Server / MDR ) ),( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * Min( RRS ,FirstVNF_CPU ) ) ) ) ) * Max( ( ( Min( ( FirstVNF_RAM_Server / AMS ) ,Max( BR,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM + DDR ) ) ) * ( ( Min( Const ,CRS ) * Max( ACS,ARS ) ) * Min( ( CRS * ARS ) ,( DDR + FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / BR ) * Min( Const ,MRS ) ) - ( Max( BR,FirstVNF_RAM ) / Max( CRS,ACS ) ) ) * ( ( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_Mem_Server,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) ) ) ,( Max( Max( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,MDR ) ),Min( ( CRS + ACS ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ),( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Max( MRS,FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) / ( PN - BR ) ) ) ),Min( Min( ( Min( ARS ,ARS ) * ( FirstVNF_Mem_Server + BR ) ) ,Min( ( MRS + ARS ) ,( MRS / DDR ) ) ) ,( ( ( MRS * FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,BR ) ) * ( Max( AMS,PN ) - Max( AMS,FirstVNF_Mem ) ) ) ) ) + ( Min( ( Max( Max( CRS,FirstVNF_Mem_Server ),Max( BR,FirstVNF_Mem ) ) - ( ( ARS - FirstVNF_RAM_Server ) + ( DDR * FirstVNF_Mem_Server ) ) ) ,( ( Max( ACS,DDR ) * ( CRS * ACS ) ) + Min( ( FirstVNF_RAM_Server - MRS ) ,( RRS * FirstVNF_Mem ) ) ) ) - ( ( Min( ( BR / ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - Max( Max( MRS,FirstVNF_RAM_Server ),( PN * PN ) ) ) / ( Min( ( FirstVNF_CPU_Server - ACS ) ,( CRS * MDR ) ) - ( Max( DDR,BR ) + ( BR * RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Min( Min( ( ( Max( ( MUR / RRSe ),( MLU - CS ) ) + Min( ( RCSe + MUR ) ,( RMSe / DS ) ) ) / Min( ( Max( MUR,MLU ) - Min( RRSe ,CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUM ,CS ) ) ) ) ,Min( ( Min( Min( MUR ,MUM ) ,( DS + DS ) ) + Min( Max( MUM,RMSe ) ,( RCSe + RCSe ) ) ) ,( ( ( CS + RCSe ) + Min( RCSe ,MUM ) ) / ( ( RCSe / MUM ) + ( RMSe + RCSe ) ) ) ) ) ,( Max( Max( ( ( DS + RMSe ) + ( MUR + MUC ) ),( ( RMSe + DS ) * ( DS + MUR ) ) ),Max( ( ( MLU + MUC ) / ( MLU - RCSe ) ),Min( ( MLU * DS ) ,Min( MUM ,CS ) ) ) ) / ( ( Min( Min( MUR ,CS ) ,( MLU - CS ) ) / ( Max( RRSe,MLU ) - ( RCSe + CS ) ) ) * ( Min( Min( MLU ,RMSe ) ,Min( MUM ,CS ) ) + ( ( RCSe * MUR ) - ( RCSe - MUM ) ) ) ) ) ) + ( ( ( ( Max( ( CS / CS ),( RCSe - DS ) ) / ( Min( MLU ,MUM ) * ( DS + RRSe ) ) ) + Max( Max( Min( RRSe ,MUM ),( MUC - MLU ) ),Max( Min( MUM ,MUC ),( CS * MUC ) ) ) ) + Min( ( Max( Max( MUM,MUC ),( MUC - DS ) ) * ( ( DS * DS ) + ( MLU - MLU ) ) ) ,Max( ( ( RRSe * MUM ) * ( MUC - RRSe ) ),( ( MUM + RCSe ) * ( MLU - MUM ) ) ) ) ) * ( ( ( ( Min( RMSe ,RCSe ) / ( MUR - MLU ) ) + Min( Min( MUM ,MUC ) ,( DS - DS ) ) ) / ( ( ( CS + MUR ) + Max( CS,RMSe ) ) - ( Max( RCSe,RCSe ) - Max( RMSe,MLU ) ) ) ) * Min( ( Min( Min( MUR ,DS ) ,( CS - RMSe ) ) / ( Min( CS ,RCSe ) / ( MUC - DS ) ) ) ,Max( Min( Max( MLU,RCSe ) ,( DS / RCSe ) ),( Max( RCSe,CS ) / ( MUR + RCSe ) ) ) ) ) ) ),( Max( ( ( ( Max( Min( RCSe ,RCSe ),Min( RRSe ,CS ) ) * ( ( MUM / MUR ) / ( MUM - RCSe ) ) ) + ( ( ( RRSe + RMSe ) + Min( DS ,MLU ) ) / ( Max( MUC,MUC ) - ( CS * MLU ) ) ) ) / ( ( ( ( RCSe - RMSe ) * ( RMSe * MLU ) ) / ( Max( MUM,RMSe ) * ( MUC / MUR ) ) ) + ( ( ( MUR * RRSe ) + ( RRSe / RCSe ) ) / ( ( RRSe / DS ) * ( MLU * RCSe ) ) ) ) ),( ( Min( ( ( MUM * MLU ) / Min( RCSe ,CS ) ) ,( ( RMSe - MUM ) * Min( MLU ,RCSe ) ) ) + ( ( ( MLU / DS ) - ( MLU - RMSe ) ) / ( ( MUR - CS ) * ( MLU + MLU ) ) ) ) / ( ( ( ( CS / RRSe ) + Min( MUM ,DS ) ) - ( ( DS + RRSe ) / ( MLU + MUM ) ) ) + ( Max( ( MUC + MLU ),Max( MUC,DS ) ) / ( ( RCSe / RRSe ) - Max( MLU,MUR ) ) ) ) ) ) * ( ( ( ( Max( ( DS + MUC ),( RCSe / MUC ) ) + Min( Min( MUR ,MUM ) ,( MUM - MUR ) ) ) + Max( ( ( MUR + DS ) - Max( MUM,MLU ) ),Max( Max( DS,MUC ),( MUR / RCSe ) ) ) ) * Min( ( ( ( CS + RMSe ) + Min( RCSe ,MLU ) ) - ( ( MUM - RRSe ) / ( MUM * MUM ) ) ) ,Max( ( ( MLU + RRSe ) - Max( CS,RCSe ) ),( Max( RCSe,DS ) / ( MUM / RMSe ) ) ) ) ) / ( ( ( Min( Min( RCSe ,RCSe ) ,( MLU * MLU ) ) / ( ( CS + RRSe ) + ( CS * RRSe ) ) ) / ( ( ( MUC * RRSe ) / Max( DS,RMSe ) ) - ( ( CS - MUR ) / ( CS * MUM ) ) ) ) * Min( ( ( Max( MUC,RMSe ) * ( RCSe / DS ) ) * ( ( RMSe + RMSe ) - ( RCSe * DS ) ) ) ,Max( ( ( MUM * RCSe ) + ( RMSe - MUM ) ),Min( Min( DS ,CS ) ,Max( MUM,DS ) ) ) ) ) ) ) )", "obj1": 0.9729166666666667, "obj2": 0.024085628523488875}, {"determining": "( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) - ( CRS / ACS ) ) / ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) )", "choosing": "( Min( ( RCSe - RMSe ) ,MUM ) + ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) )", "obj1": 0.6125, "obj2": 0.3346608436957831}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) - ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( MUC,MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) )", "obj1": 0.525, "obj2": 0.41314859807024856}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Min( FirstVNF_CPU ,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( MUR + DS ) * ( DS * MUR ) )", "obj1": 0.5645833333333333, "obj2": 0.36400516759710644}, {"determining": "( ( AMS * BR ) * ( FirstVNF_RAM - DDR ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) * ( DS - RCSe ) ) ,Min( ( MUC / RCSe ) ,( CS - CS ) ) ),( ( ( MUR * RMSe ) + Max( MUC,RMSe ) ) * Max( ( RMSe - MUC ),Min( MLU ,RCSe ) ) ) )", "obj1": 0.5125, "obj2": 0.42380181994764726}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( DDR + RRS ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.58125, "obj2": 0.3484516354100434}, {"determining": "( ( MDR / Const ) + ( ( ( Const * CRS ) / ARS ) + Const ) )", "choosing": "( ( ( RMSe - MUM ) - MUR ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.425, "obj2": 0.49694058752205006}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( MDR / Const ) + ( ( ( Const * PN ) / ARS ) + Const ) )", "choosing": "( MLU / Max( ( ( CS / RMSe ) + ( RMSe * DS ) ),( ( MUM * MUC ) * ( RMSe * RMSe ) ) ) )", "obj1": 0.3875, "obj2": 0.5301675564593795}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5064038195355532}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) )", "obj1": 0.44583333333333336, "obj2": 0.48735585388075275}, {"determining": "Max( ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + DDR ),( FirstVNF_Mem + PN ) ) ),( MRS * ARS ) )", "choosing": "( RMSe / Max( ( ( CS / RMSe ) + ( RMSe * RRSe ) ),( ( MUM * MUC ) * ( RMSe / RMSe ) ) ) )", "obj1": 0.39791666666666664, "obj2": 0.5246409981427399}, {"determining": "( ( ( ( RRS + MDR ) / ( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) / Max( ( PN + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( ( CS + RMSe ) ,( MLU / MUC ) ) ),( Max( ( MUM / MLU ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.49166666666666664, "obj2": 0.43431250895830303}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) - ( MRS + BR ) ),( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.43459896715705115}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU / PN ) - FirstVNF_RAM ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUR ) - ( MUC / CS ) ) ) * ( DS * DS ) )", "obj1": 0.5729166666666666, "obj2": 0.3632004112266866}, {"determining": "Min( ( ( DDR + RRS ) / BR ) ,( PN - BR ) )", "choosing": "( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) )", "obj1": 0.41875, "obj2": 0.5052229181597955}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( ( BR - FirstVNF_RAM ) + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) )", "obj1": 0.9895833333333334, "obj2": 0.012113223571251391}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( ( MLU * MUC ) ,( RMSe + RMSe ) )", "obj1": 0.7333333333333333, "obj2": 0.149367001150987}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( Const * FirstVNF_CPU ) ,( Max( MRS,ACS ) + ARS ) ) )", "choosing": "Min( ( Min( Max( ( MLU - RMSe ),( RRSe / MUM ) ) ,MLU ) / ( MUM * ( ( MLU + MLU ) - ( DS * MUR ) ) ) ) ,( RRSe * MUC ) )", "obj1": 0.5208333333333334, "obj2": 0.41472804015984915}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * ( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( Const / PN ) ) ) ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( RCSe / MUC ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.9958333333333333, "obj2": 0.003110904899564363}, {"determining": "Min( ( Max( AMS,( ( Const * CRS ) / ARS ) ) + ( MRS - AMS ) ) ,Min( ( ( BR - FirstVNF_RAM ) + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / RMSe )", "obj1": 0.9833333333333333, "obj2": 0.02113632796705367}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( ( BR - FirstVNF_RAM ) + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.98125, "obj2": 0.021832221302530153}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( ( BR - FirstVNF_RAM ) + MDR ) ,Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + MDR ) ) ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + MUM ) + ( MUR - MUR ) ) )", "obj1": 0.98125, "obj2": 0.021832221302530153}, {"determining": "( ( PN - FirstVNF_CPU ) + ( CRS - FirstVNF_Mem ) )", "choosing": "( ( MUC / MUC ) + Max( MUC,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( RRS - CRS ) )", "choosing": "Min( ( MLU * MUR ) ,Max( MUM,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / FirstVNF_CPU_Server ) / ( MRS - FirstVNF_Mem ) )", "choosing": "( ( RMSe * RMSe ) + ( MUM * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) - ( CRS / ACS ) )", "choosing": "( ( RCSe - RMSe ) - ( RRSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - ACS ) + Min( PN ,MRS ) ) - Min( Min( MRS ,MDR ) ,Min( ARS ,MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( Max( MUM,RCSe ),( MUR * MUC ) ) * Min( Max( MUR,MUM ) ,( MUR * MUM ) ) ) * ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_RAM_Server ) - ( ( ( FirstVNF_Mem_Server - RRS ) * MDR ) + MRS ) )", "choosing": "( ( DS + ( MUR + CS ) ) - ( ( ( MUM / CS ) / MUR ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM / CRS ) - ( FirstVNF_RAM / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( Min( MUR ,MUC ) * ( RCSe / MUC ) ) ) * ( ( Max( MUM,MUC ) - ( RMSe / DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem * ( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) * ( Max( MDR,FirstVNF_Mem ) * Max( FirstVNF_RAM_Server,MRS ) ) ) - ( ( ( ARS / MRS ) - ( Const - FirstVNF_RAM ) ) / ( ( ARS + DDR ) / ( PN + FirstVNF_CPU_Server ) ) ) ) ),( ( RRS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "( ( MUM + ( ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) - RRSe ) ) - Max( Max( MLU,RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( MRS - ACS ) + Min( PN ,MRS ) ) - Min( Min( MRS ,MDR ) ,Min( ARS ,MDR ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( MUC,MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * ( MRS - AMS ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) - ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - ( ( CS + RRSe ) + ( MUR - MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU / PN ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6819500536396796}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUR + DS ) * ( MUC * CS ) )", "obj1": 0.7791666666666667, "obj2": 0.118619325430688}, {"determining": "( Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( DS ,( RMSe + RMSe ) )", "obj1": 0.8625, "obj2": 0.0738628836921053}, {"determining": "( ( ( AMS / AMS ) - Max( AMS,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( MDR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( RCSe - RMSe ) - ( RCSe + MUM ) )", "obj1": 0.6375, "obj2": 0.25983389775807675}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( DS ,MUR ) + Min( MUC ,RCSe ) ) )", "obj1": 0.6916666666666667, "obj2": 0.2155087333499674}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_RAM / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( ( PN * CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RRSe ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "Max( ( FirstVNF_CPU / ACS ),Const )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2625, "obj2": 0.6252308719026631}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( DDR + RRS ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( ( MUM * RCSe ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * Min( DS ,MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.31949485604005023}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),FirstVNF_Mem_Server ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( MUM * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( CS,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.4979166666666667, "obj2": 0.4121144970520454}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * ( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( Const / PN ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9125, "obj2": 0.06390933824522342}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),( CRS + ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS - RRSe ) / ( MLU - MUR ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5559129945628626}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( RCSe - RMSe ) - ( RRSe - MUC ) )", "obj1": 0.6958333333333333, "obj2": 0.1682580058905673}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( DS ,( RMSe + RMSe ) )", "obj1": 0.9229166666666667, "obj2": 0.03106227511683278}, {"determining": "Min( ( ( DDR + RRS ) / BR ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - BR ) )", "choosing": "( ( MUC * MLU ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) )", "obj1": 0.37083333333333335, "obj2": 0.5403438766719177}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( PN - FirstVNF_CPU ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6619130366105379}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( Const + Const ) + Min( ACS ,CRS ) ) ) ) ) / MDR ) ) )", "choosing": "Min( ( MLU * MUC ) ,( RMSe + ( MUM + ( ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) - RRSe ) ) ) )", "obj1": 0.7395833333333334, "obj2": 0.1480187325235232}, {"determining": "( Max( Max( FirstVNF_CPU,ACS ),MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUR - ( ( CS * MUC ) / Min( MUM ,CS ) ) ) )", "obj1": 0.28541666666666665, "obj2": 0.5935439968840108}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) - Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.32083333333333336, "obj2": 0.586260408083678}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * ( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( FirstVNF_RAM / ACS ) - ( PN - FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + Max( ( RRSe + DS ),( MLU - MUC ) ) ) )", "obj1": 0.6, "obj2": 0.32924407227315466}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.7166666666666667, "obj2": 0.15114088928226285}, {"determining": "( ( Min( ( ( ( Min( Max( DDR,FirstVNF_CPU ) ,( BR + DDR ) ) - ( ( FirstVNF_RAM_Server - DDR ) + Max( RRS,CRS ) ) ) + Max( ( PN + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,RRS ) / Min( FirstVNF_CPU_Server ,MDR ) ),( ( FirstVNF_Mem_Server - AMS ) - ( PN - FirstVNF_RAM_Server ) ) ) + Max( ( ( PN * FirstVNF_Mem_Server ) - ( MDR + Const ) ),( Min( AMS ,Const ) - Max( FirstVNF_Mem,RRS ) ) ) ) ) ,( ( ( Min( ( FirstVNF_CPU / ACS ) ,( DDR + CRS ) ) / Min( ( FirstVNF_RAM_Server + AMS ) ,( MDR * AMS ) ) ) - ( Max( ( RRS * DDR ),Max( MRS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / MDR ) + ( AMS * PN ) ) ) ) + ( Max( ( ( FirstVNF_Mem / AMS ) * ( ARS - ACS ) ),( Min( Const ,FirstVNF_Mem ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * MDR ) * ( MRS / MRS ) ) / ( Min( BR ,DDR ) / ( Const / FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_CPU_Server ) ) - Min( Max( MRS,FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ,( Min( Max( AMS,FirstVNF_CPU ) ,( MRS - ARS ) ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),( PN * ACS ) ) ) ) ,Min( ( Min( ( MRS + RRS ) ,( AMS * RRS ) ) + ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ,Max( Min( ( ARS - ARS ) ,( FirstVNF_RAM_Server - CRS ) ),Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_CPU ) ) ) ) ) * ( ( Max( ( ( ARS * BR ) * ( DDR + ARS ) ),Max( ( Const + MDR ),( ARS / FirstVNF_Mem_Server ) ) ) / ( ( Max( RRS,BR ) + ( RRS - FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),Max( CRS,PN ) ) ) ) + ( ( ( Max( Const,FirstVNF_RAM_Server ) - ( DDR / FirstVNF_RAM ) ) / ( Max( MDR,PN ) / ( MDR * AMS ) ) ) * ( ( Max( ARS,FirstVNF_CPU_Server ) / ( AMS / PN ) ) * ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * Min( AMS ,Const ) ) ) ) ) ) ) + Min( ( ( Min( Min( ( ( PN + CRS ) - ( FirstVNF_CPU * ACS ) ) ,( ( FirstVNF_RAM / DDR ) * ( BR / FirstVNF_RAM_Server ) ) ) ,( ( ( BR + MRS ) * ( MRS + FirstVNF_RAM_Server ) ) / Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - ( ( Max( ( AMS + MDR ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + ( Max( RRS,FirstVNF_CPU_Server ) + ( MDR - RRS ) ) ) - Max( Min( ( MDR * ACS ) ,( FirstVNF_Mem_Server / MDR ) ),( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * Min( RRS ,FirstVNF_CPU ) ) ) ) ) * Max( ( ( Min( ( FirstVNF_RAM_Server / AMS ) ,Max( BR,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM + DDR ) ) ) * ( ( Min( Const ,CRS ) * Max( ACS,ARS ) ) * Min( ( CRS * ARS ) ,( DDR + FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / BR ) * Min( Const ,MRS ) ) - ( Max( BR,FirstVNF_RAM ) / Max( CRS,ACS ) ) ) * ( ( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_Mem_Server,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) ) ) ,( Max( Max( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,MDR ) ),Min( ( CRS + ACS ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ),( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Max( MRS,FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) / ( PN - BR ) ) ) ),Min( Min( ( Min( ARS ,ARS ) * ( FirstVNF_Mem_Server + BR ) ) ,Min( ( MRS + ARS ) ,( MRS / DDR ) ) ) ,( ( ( MRS * FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,BR ) ) * ( Max( AMS,PN ) - Max( AMS,FirstVNF_Mem ) ) ) ) ) + ( Min( ( Max( Max( CRS,FirstVNF_Mem_Server ),Max( BR,FirstVNF_Mem ) ) - ( ( ARS - FirstVNF_RAM_Server ) + ( DDR * FirstVNF_Mem_Server ) ) ) ,( ( Max( ACS,DDR ) * ( CRS * ACS ) ) + Min( ( FirstVNF_RAM_Server - MRS ) ,( RRS * FirstVNF_Mem ) ) ) ) - ( ( Min( ( BR / ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - Max( Max( MRS,FirstVNF_RAM_Server ),( PN * PN ) ) ) / ( Min( ( FirstVNF_CPU_Server - ACS ) ,Max( CRS,MDR ) ) - ( Max( DDR,BR ) + ( BR * RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUC + ( ( ( ( Max( ( CS / CS ),( RCSe - DS ) ) / ( Min( MLU ,MUM ) * ( DS + RRSe ) ) ) + Max( Max( Min( RRSe ,MUM ),( MUC - MLU ) ),Max( Min( MUM ,MUC ),( CS * MUC ) ) ) ) + Min( ( Max( Max( MUM,MUC ),( MUC - DS ) ) * ( ( DS * DS ) + ( MLU - MLU ) ) ) ,Max( ( ( RRSe * MUM ) * ( MUC - RRSe ) ),( ( MUM + RCSe ) * ( MLU - MUM ) ) ) ) ) * ( ( ( ( Min( RMSe ,RCSe ) / ( MUR - MLU ) ) + Min( Min( MUM ,MUC ) ,( DS - DS ) ) ) / ( ( ( CS + MUR ) + Max( CS,RMSe ) ) - ( Max( RCSe,RCSe ) - Max( RMSe,MLU ) ) ) ) * Min( ( Min( Min( MUR ,DS ) ,( CS - RMSe ) ) / ( Min( CS ,RCSe ) / ( MUC - DS ) ) ) ,Max( Min( Max( MLU,RCSe ) ,( DS / RCSe ) ),( Max( RCSe,CS ) / ( MUR + RCSe ) ) ) ) ) ) ),( Max( ( ( ( Max( Min( RCSe ,RCSe ),Min( RRSe ,CS ) ) * ( ( MUM / MUR ) / ( MUM - RCSe ) ) ) + ( ( ( RRSe + RMSe ) + Min( DS ,MLU ) ) / ( Max( MUC,MUC ) - ( CS * MLU ) ) ) ) / ( ( ( ( RCSe - RMSe ) * ( RMSe * MLU ) ) / ( Max( MUM,RMSe ) * ( MUC / MUR ) ) ) + ( ( ( MUR * RRSe ) + ( RRSe / RCSe ) ) + ( ( RRSe / DS ) * ( MLU * RCSe ) ) ) ) ),( ( Min( ( ( MUM * MLU ) / Min( RCSe ,CS ) ) ,( ( RMSe - MUM ) * Min( MLU ,RCSe ) ) ) + ( ( ( MLU / DS ) - ( MLU - RMSe ) ) / ( ( MUR - CS ) * ( MLU + MLU ) ) ) ) / ( ( ( ( CS / RRSe ) + Min( MUM ,DS ) ) - ( ( DS + RRSe ) / ( MLU + MUM ) ) ) + ( Max( ( MUC + MLU ),Max( MUC,DS ) ) / ( ( RCSe / RRSe ) - Max( MLU,MUR ) ) ) ) ) ) * ( ( ( ( Max( ( DS + MUC ),( RCSe / MUC ) ) + Min( Min( MUR ,MUM ) ,( MUM - MUR ) ) ) + Max( ( ( MUR + DS ) - Max( MUM,MLU ) ),Max( Max( DS,MUC ),( MUR / RCSe ) ) ) ) * Min( ( ( ( CS + RMSe ) + Min( RCSe ,MLU ) ) - ( ( MUM - RRSe ) / ( MUM * MUM ) ) ) ,Max( ( ( MLU + RRSe ) - Max( CS,RCSe ) ),( Max( RCSe,DS ) / ( MUM / RMSe ) ) ) ) ) / ( ( ( Min( Min( RCSe ,RCSe ) ,( MLU * MLU ) ) / ( ( CS + RRSe ) + ( CS * RRSe ) ) ) / ( ( ( MUC * RRSe ) / Max( DS,RMSe ) ) - ( ( CS - MUR ) / ( CS * MUM ) ) ) ) * Min( ( ( Max( MUC,RMSe ) * ( RCSe / DS ) ) * ( ( RMSe + RMSe ) - ( RCSe * DS ) ) ) ,Max( ( ( MUM * RCSe ) + ( RMSe - MUM ) ),Min( Min( DS ,CS ) ,Max( MUM,DS ) ) ) ) ) ) ) )", "obj1": 0.96875, "obj2": 0.030185571137717648}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Min( FirstVNF_CPU ,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( MUR + DS ) * ( DS * MUR ) )", "obj1": 0.5645833333333333, "obj2": 0.36400516759710644}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,Min( MRS ,FirstVNF_RAM_Server ) ) / Min( ( Const * FirstVNF_CPU ) ,( Max( MRS,ACS ) + ARS ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) )", "obj1": 0.4708333333333333, "obj2": 0.4694211983220435}, {"determining": "( ( MDR / Const ) + ( ( ( Const * CRS ) / ARS ) + Const ) )", "choosing": "( ( ( RMSe - MUM ) - MUR ) * ( Max( Max( MUM,MUC ),DS ) - MUC ) )", "obj1": 0.425, "obj2": 0.49694058752205006}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + Max( MRS,AMS ) ) ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS - RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5922986409001643}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5064038195355532}, {"determining": "( ( ( ( RRS + MDR ) / ( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) / Max( ( PN + ( MRS + BR ) ),( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( ( CS + RMSe ) ,( MLU / MUC ) ) ),( Max( ( MUM / MLU ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( MUC / CS ) ) ) )", "obj1": 0.49166666666666664, "obj2": 0.43431250895830303}, {"determining": "Max( ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + DDR ),( FirstVNF_Mem + PN ) ) ),( MRS * ARS ) )", "choosing": "( RMSe / Max( ( ( CS / RMSe ) + ( RMSe * RRSe ) ),( ( MUM * MUC ) * ( RMSe / RMSe ) ) ) )", "obj1": 0.39791666666666664, "obj2": 0.5246409981427399}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Min( FirstVNF_CPU ,DDR ) ) ) * ( ( Max( DDR,FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + MUR ) + ( MUR - MUC ) ) ) )", "obj1": 0.44166666666666665, "obj2": 0.4842470435226695}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( RRS - ( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) ) ) )", "choosing": "Min( ( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ) * MUR ) ,Max( MUM,MLU ) )", "obj1": 0.45208333333333334, "obj2": 0.4769570026501827}, {"determining": "Min( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( MLU + DS ) / ( ( CS + RRSe ) + ( MUM - MUC ) ) )", "obj1": 0.47291666666666665, "obj2": 0.4498205885856068}, {"determining": "Min( ( ( DDR + RRS ) / BR ) ,( PN - BR ) )", "choosing": "( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) )", "obj1": 0.41875, "obj2": 0.5052229181597955}, {"determining": "( ( MDR / Const ) + ( ( ( Const * PN ) / ARS ) + Const ) )", "choosing": "( MLU / Max( ( ( CS / RMSe ) + ( RMSe * DS ) ),( ( MUM * MUC ) * ( RMSe * RMSe ) ) ) )", "obj1": 0.3875, "obj2": 0.5301675564593795}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),FirstVNF_Mem_Server ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( ( MUM * RCSe ) ,( RMSe - CS ) ) ),( ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.48125, "obj2": 0.44801938752418613}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( ( MLU * MUC ) ,( RMSe + RMSe ) )", "obj1": 0.7333333333333333, "obj2": 0.149367001150987}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) - ( MRS + BR ) ),( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.43459896715705115}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),( FirstVNF_Mem + ( ( AMS / PN ) - FirstVNF_RAM ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUR ) - RMSe ) ) * ( MLU * DS ) )", "obj1": 0.5791666666666667, "obj2": 0.35980230390200196}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5875, "obj2": 0.34636445413239825}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( DDR + RRS ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.58125, "obj2": 0.3484516354100434}, {"determining": "( ( Min( ( ( ( Min( Max( DDR,FirstVNF_CPU ) ,( BR + DDR ) ) - ( ( FirstVNF_RAM_Server - DDR ) + Max( RRS,CRS ) ) ) + Min( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ,( ( RRS + CRS ) / Min( FirstVNF_RAM ,MDR ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,RRS ) / Min( FirstVNF_CPU_Server ,MDR ) ),( ( FirstVNF_Mem_Server - AMS ) - ( PN - FirstVNF_RAM_Server ) ) ) + Max( ( ( PN * FirstVNF_Mem_Server ) - ( MDR + Const ) ),( Min( AMS ,Const ) - Max( FirstVNF_Mem,RRS ) ) ) ) ) ,( ( ( Min( ( FirstVNF_CPU / ACS ) ,( DDR + CRS ) ) / Min( ( FirstVNF_RAM_Server + AMS ) ,( MDR * AMS ) ) ) - ( Max( ( RRS * DDR ),Max( MRS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / MDR ) + ( AMS * PN ) ) ) ) + ( Max( ( ( FirstVNF_Mem / AMS ) * ( ARS - ACS ) ),( Min( Const ,FirstVNF_Mem ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * MDR ) * ( MRS / MRS ) ) / ( Min( BR ,DDR ) / ( Const / FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_CPU_Server ) ) - Min( Max( MRS,FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ,( Min( Max( AMS,FirstVNF_CPU ) ,( MRS - ARS ) ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),( PN * ACS ) ) ) ) ,Min( ( Min( ( MRS + RRS ) ,( AMS * RRS ) ) + ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ,Max( Min( ( ARS - ARS ) ,( FirstVNF_RAM_Server - CRS ) ),Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_CPU ) ) ) ) ) * ( ( Max( ( ( ARS * BR ) * ( DDR + ARS ) ),Max( ( Const + MDR ),( ARS / FirstVNF_Mem_Server ) ) ) / ( ( Max( RRS,BR ) + ( RRS - FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),Max( CRS,PN ) ) ) ) + ( ( ( Max( Const,FirstVNF_RAM_Server ) - ( DDR / FirstVNF_RAM ) ) / ( Max( MDR,PN ) / ( MDR * AMS ) ) ) * ( ( Max( ARS,FirstVNF_CPU_Server ) / ( AMS / PN ) ) * ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * Min( AMS ,Const ) ) ) ) ) ) ) + Min( ( ( Min( Min( ( ( PN + CRS ) - ( FirstVNF_CPU * ACS ) ) ,( ( FirstVNF_RAM / DDR ) * ( BR / FirstVNF_RAM_Server ) ) ) ,( ( ( BR + MRS ) * ( MRS + FirstVNF_RAM_Server ) ) / Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - ( ( Max( ( AMS + MDR ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + ( Max( RRS,FirstVNF_CPU_Server ) + ( MDR - RRS ) ) ) - Max( Min( ( MDR * ACS ) ,( FirstVNF_Mem_Server / MDR ) ),( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * Min( RRS ,FirstVNF_CPU ) ) ) ) ) * Max( ( ( Min( ( FirstVNF_RAM_Server / AMS ) ,Max( BR,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM + DDR ) ) ) * ( ( Min( Const ,CRS ) * Max( ACS,ARS ) ) * Min( ( CRS * ARS ) ,( DDR + FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / BR ) * Min( Const ,MRS ) ) - ( Max( BR,FirstVNF_RAM ) / Max( CRS,ACS ) ) ) * ( ( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_Mem_Server,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) ) ) ,( Max( Max( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,MDR ) ),Min( ( CRS + ACS ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ),( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Max( MRS,FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) / ( PN - BR ) ) ) ),Min( Min( ( Min( ARS ,ARS ) * ( FirstVNF_Mem_Server + BR ) ) ,Min( ( MRS + ARS ) ,( MRS / DDR ) ) ) ,( ( ( MRS * FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,BR ) ) * ( Max( AMS,PN ) - Max( AMS,FirstVNF_Mem ) ) ) ) ) + ( Min( ( Max( Max( CRS,FirstVNF_Mem_Server ),Max( BR,FirstVNF_Mem ) ) - ( ( ARS - FirstVNF_RAM_Server ) + ( DDR * FirstVNF_Mem_Server ) ) ) ,( ( Max( ACS,DDR ) * ( CRS * ACS ) ) + Min( ( FirstVNF_RAM_Server - MRS ) ,( RRS * FirstVNF_Mem ) ) ) ) - ( ( Min( ( BR / ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - Max( Max( MRS,FirstVNF_RAM_Server ),( PN * PN ) ) ) / ( Min( ( FirstVNF_CPU_Server - ACS ) ,( CRS * MDR ) ) - ( Max( DDR,BR ) + ( BR * RRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Min( Min( ( ( Max( ( MUR / RRSe ),( MLU - CS ) ) + Min( ( RCSe + MUR ) ,( RMSe / DS ) ) ) / Min( ( Max( MUR,MLU ) - Min( RRSe ,CS ) ) ,Min( ( RMSe / RCSe ) ,Min( MUM ,CS ) ) ) ) ,Min( ( Min( Min( MUR ,MUM ) ,( DS + DS ) ) + Min( Max( MUM,RMSe ) ,( RCSe + RCSe ) ) ) ,( ( ( CS + RCSe ) + Min( RCSe ,MUM ) ) / ( ( RCSe / MUM ) + ( RMSe + RCSe ) ) ) ) ) ,( Max( Max( ( ( DS + RMSe ) + ( MUR + MUC ) ),( ( RMSe + DS ) * ( DS + MUR ) ) ),Max( ( ( MLU + MUC ) / ( MLU - RCSe ) ),Min( ( MLU * DS ) ,Min( MUM ,CS ) ) ) ) / ( ( Min( Min( MUR ,CS ) ,( MLU - CS ) ) / ( Max( RRSe,MLU ) - ( RCSe + CS ) ) ) * ( Min( Min( MLU ,RMSe ) ,Min( MUM ,CS ) ) + ( ( RCSe * MUR ) - ( RCSe - MUM ) ) ) ) ) ) + ( ( ( ( Max( ( CS / CS ),( RCSe - DS ) ) / ( Min( MLU ,MUM ) * ( DS + RRSe ) ) ) + Max( Max( Min( RRSe ,MUM ),( MUC - MLU ) ),Max( Min( MUM ,MUC ),( CS * MUC ) ) ) ) + Min( ( Max( Max( MUM,MUC ),( MUC - DS ) ) * ( ( DS * DS ) + ( MLU - MLU ) ) ) ,Max( ( ( RRSe * MUM ) * ( MUC - RRSe ) ),( ( MUM + RCSe ) * ( MLU - MUM ) ) ) ) ) * ( ( ( ( Min( RMSe ,RCSe ) / ( MUR - MLU ) ) + Min( Min( MUM ,MUC ) ,( DS - DS ) ) ) / ( ( ( CS + MUR ) + Max( CS,RMSe ) ) - ( Max( RCSe,RCSe ) - Max( RMSe,MLU ) ) ) ) * Min( ( Min( Min( MUR ,DS ) ,( CS - RMSe ) ) / ( Min( CS ,RCSe ) / ( MUC - DS ) ) ) ,Max( Min( Max( MLU,RCSe ) ,( DS / RCSe ) ),( Max( RCSe,CS ) / ( MUR + RCSe ) ) ) ) ) ) ),( Max( ( ( ( Max( Min( RCSe ,RCSe ),Min( RRSe ,CS ) ) * ( ( MUM / MUR ) / ( MUM - RCSe ) ) ) + ( ( ( RRSe + RMSe ) + Min( DS ,MLU ) ) / ( Max( MUC,MUC ) - ( CS * MLU ) ) ) ) / ( ( ( ( RCSe - RMSe ) * ( RMSe * MLU ) ) / ( Max( MUM,RMSe ) * ( MUC / MUR ) ) ) + ( ( ( MUR * RRSe ) + ( RRSe / RCSe ) ) / ( ( RRSe / DS ) * ( MLU * RCSe ) ) ) ) ),( ( Min( ( ( MUM * MLU ) / Min( RCSe ,CS ) ) ,( ( RMSe - MUM ) * Min( MLU ,RCSe ) ) ) + ( ( ( MLU / DS ) - ( MLU - RMSe ) ) / ( ( MUR - CS ) * ( MLU + MLU ) ) ) ) / ( ( ( ( CS / RRSe ) + Min( MUM ,DS ) ) - ( ( DS + RRSe ) / ( MLU + MUM ) ) ) + ( Max( ( MUC + MLU ),Max( MUC,DS ) ) / ( ( RCSe / RRSe ) - Max( MLU,MUR ) ) ) ) ) ) * ( ( ( ( Max( ( DS + MUC ),( RCSe / MUC ) ) + Min( Min( MUR ,MUM ) ,( MUM - MUR ) ) ) + Max( ( ( MUR + DS ) - Max( MUM,MLU ) ),Max( Max( DS,MUC ),( MUR / RCSe ) ) ) ) * Min( ( ( ( CS + RMSe ) + Min( RCSe ,MLU ) ) - ( ( MUM - RRSe ) / ( MUM * MUM ) ) ) ,Max( ( ( MLU + RRSe ) - Max( CS,RCSe ) ),( Max( RCSe,DS ) / ( MUM / RMSe ) ) ) ) ) / ( ( ( Min( Min( RCSe ,RCSe ) ,( MLU * MLU ) ) / ( ( CS + RRSe ) + ( CS * RRSe ) ) ) / ( ( ( MUC * RRSe ) / Max( DS,RMSe ) ) - ( ( CS - MUR ) / ( CS * MUM ) ) ) ) * Min( ( ( Max( MUC,RMSe ) * ( RCSe / DS ) ) * ( ( RMSe + RMSe ) - ( RCSe * DS ) ) ) ,Max( ( ( MUM * RCSe ) + ( RMSe - MUM ) ),Min( Min( DS ,CS ) ,Max( MUM,DS ) ) ) ) ) ) ) )", "obj1": 0.9729166666666667, "obj2": 0.024085628523488875}, {"determining": "( ( Min( ( ( ( Min( Max( DDR,FirstVNF_CPU ) ,( BR + DDR ) ) - ( ( FirstVNF_RAM_Server - DDR ) + Max( RRS,CRS ) ) ) + Min( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ,( ( RRS + CRS ) / Min( FirstVNF_RAM ,MDR ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,RRS ) / Min( FirstVNF_CPU_Server ,MDR ) ),( ( FirstVNF_Mem_Server - AMS ) - ( PN - FirstVNF_RAM_Server ) ) ) + Max( ( ( PN * FirstVNF_Mem_Server ) - ( MDR + Const ) ),( Min( AMS ,Const ) - Max( FirstVNF_Mem,RRS ) ) ) ) ) ,( ( ( Min( ( FirstVNF_CPU / ACS ) ,( DDR + CRS ) ) / Min( ( FirstVNF_RAM_Server + AMS ) ,( MDR * AMS ) ) ) - ( Max( ( RRS * DDR ),Max( MRS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / MDR ) + ( AMS * PN ) ) ) ) + ( Max( ( ( FirstVNF_Mem / AMS ) * ( ARS - ACS ) ),( Min( Const ,FirstVNF_Mem ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * MDR ) * ( MRS / MRS ) ) / ( Min( BR ,DDR ) / ( Const / FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_CPU_Server ) ) - Min( Max( MRS,FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ,( Min( Max( AMS,FirstVNF_CPU ) ,( MRS - ARS ) ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),( PN * ACS ) ) ) ) ,Min( ( Min( ( MRS + RRS ) ,( AMS * RRS ) ) + ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ,Max( Min( ( ARS - ARS ) ,( FirstVNF_RAM_Server - CRS ) ),Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_CPU ) ) ) ) ) * ( ( Max( ( ( ARS * BR ) * ( DDR + ARS ) ),Max( ( Const + MDR ),( ARS / FirstVNF_Mem_Server ) ) ) / ( ( Max( RRS,BR ) + ( RRS - FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),Max( CRS,PN ) ) ) ) + ( ( ( Max( Const,FirstVNF_RAM_Server ) - ( DDR / FirstVNF_RAM ) ) / ( Max( MDR,PN ) / ( MDR * AMS ) ) ) * ( ( Max( ARS,FirstVNF_CPU_Server ) / ( AMS / PN ) ) * ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * Min( AMS ,Const ) ) ) ) ) ) ) + Min( ( ( Min( Min( ( ( PN + CRS ) - ( FirstVNF_CPU * ACS ) ) ,( ( FirstVNF_RAM / DDR ) * ( BR / FirstVNF_RAM_Server ) ) ) ,( ( ( BR + MRS ) * ( MRS + FirstVNF_RAM_Server ) ) / Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - ( ( Max( ( AMS + MDR ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + ( Max( RRS,FirstVNF_CPU_Server ) + ( MDR - RRS ) ) ) - Max( Min( ( MDR * ACS ) ,( FirstVNF_Mem_Server / MDR ) ),( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * Min( RRS ,FirstVNF_CPU ) ) ) ) ) * Max( ( ( Min( ( FirstVNF_RAM_Server / AMS ) ,Max( BR,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM + DDR ) ) ) * ( ( Min( Const ,CRS ) * Max( ACS,ARS ) ) * Min( ( CRS * ARS ) ,( DDR + FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / BR ) * Min( Const ,MRS ) ) - ( Max( BR,FirstVNF_RAM ) / Max( CRS,ACS ) ) ) * ( ( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_Mem_Server,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) ) ) ,( Max( Max( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,MDR ) ),Min( ( CRS + ACS ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ),( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Max( MRS,FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) / ( PN - BR ) ) ) ),Min( Min( ( Min( ARS ,ARS ) * ( FirstVNF_Mem_Server + BR ) ) ,Min( ( MRS + ARS ) ,( MRS / DDR ) ) ) ,( ( ( MRS * FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,BR ) ) * ( Max( AMS,PN ) - Max( AMS,FirstVNF_Mem ) ) ) ) ) + ( Min( ( Max( Max( CRS,FirstVNF_Mem_Server ),Max( BR,FirstVNF_Mem ) ) - ( ( ARS - FirstVNF_RAM_Server ) + ( DDR * FirstVNF_Mem_Server ) ) ) ,( ( Max( ACS,DDR ) * ( CRS * ACS ) ) + Min( ( FirstVNF_RAM_Server - MRS ) ,( RRS * FirstVNF_Mem ) ) ) ) - ( ( Min( ( BR / ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - Max( Max( MRS,FirstVNF_RAM_Server ),( PN * PN ) ) ) / ( Min( ( FirstVNF_CPU_Server - ACS ) ,Max( CRS,MDR ) ) - ( Max( DDR,BR ) + ( BR * RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.9770833333333333, "obj2": 0.017469874686005225}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU / PN ) - FirstVNF_RAM ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUR ) - ( MUC / CS ) ) ) * ( DS * DS ) )", "obj1": 0.5729166666666666, "obj2": 0.3632004112266866}, {"determining": "( ( MDR / Const ) + ( ( ( Const * CRS ) / ARS ) + BR ) )", "choosing": "( RMSe / Max( ( ( CS / RMSe ) + ( RMSe * DS ) ),( ( MUM * MUC ) * ( RMSe * RMSe ) ) ) )", "obj1": 0.39166666666666666, "obj2": 0.5300643241213079}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * FirstVNF_CPU ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MLU / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.9833333333333333, "obj2": 0.0151292367547272}, {"determining": "( ( FirstVNF_RAM + CRS ) * ( FirstVNF_Mem + ( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MUR + DS ) * RRSe )", "obj1": 0.45, "obj2": 0.4821186032650367}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( ( BR - FirstVNF_RAM ) + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) )", "obj1": 0.9895833333333334, "obj2": 0.012113223571251391}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU / PN ) - FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + ( ( MUR + ( ( RMSe / MUR ) - ( MUC / CS ) ) ) * ( DS * DS ) ) ) + ( MUR - MUC ) ) ) )", "obj1": 0.44583333333333336, "obj2": 0.4828896279806715}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,Min( ( ( BR - FirstVNF_RAM ) + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( ( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.9875, "obj2": 0.015038548737982795}], "5": [{"determining": "( ( ( AMS / AMS ) - Max( AMS,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( MDR - CRS ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( DS / MUM ) - ( RCSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - ACS ) + Min( PN ,MRS ) ) - Min( Min( MRS ,MDR ) ,Min( ARS ,MDR ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( MUC,MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU / PN ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.225, "obj2": 0.650513517967526}, {"determining": "( ( Max( ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + CRS ),( FirstVNF_Mem + PN ) ) ),( MRS + ARS ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR + FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( RMSe / Max( ( ( CS / RMSe ) + ( RMSe * DS ) ),( ( MUM - MUC ) * ( RMSe * RMSe ) ) ) ) - ( RRSe + MUC ) )", "obj1": 0.61875, "obj2": 0.24898506373611728}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6666666666666666, "obj2": 0.17869461946529777}, {"determining": "( Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( DS ,( RMSe + RMSe ) )", "obj1": 0.8625, "obj2": 0.0738628836921053}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( RCSe - RMSe ) - ( RRSe + MUC ) )", "obj1": 0.6041666666666666, "obj2": 0.2771620801671499}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUR + DS ) * ( MUC * CS ) )", "obj1": 0.7958333333333333, "obj2": 0.10453941236464272}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( FirstVNF_RAM / ( Const * ( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_CPU,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( Const / PN ) ) ) ) ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.9125, "obj2": 0.06330498020522955}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),( FirstVNF_Mem + ( ( AMS / PN ) - FirstVNF_RAM ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUR ) - RMSe ) ) * ( MLU * DS ) )", "obj1": 0.5979166666666667, "obj2": 0.3284333569327374}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "Min( ( ( MUC * MLU ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ,( RMSe + RMSe ) )", "obj1": 0.725, "obj2": 0.13903276103041326}, {"determining": "( Min( MRS ,MRS ) * ( Max( DDR,MRS ) * BR ) )", "choosing": "Max( Min( DS ,RRSe ),( ( MUC * MLU ) - Min( MUM ,RCSe ) ) )", "obj1": 0.5291666666666667, "obj2": 0.4006069674458179}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),( CRS + ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS - RRSe ) / ( MLU - MUR ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5559129945628626}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_RAM / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( ( PN * CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RRSe ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( Const + Const ) + Min( ACS ,CRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUR + DS ) * ( DS * MUR ) )", "obj1": 0.7770833333333333, "obj2": 0.1206101527736512}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),FirstVNF_Mem_Server ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( MUM * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( CS,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.4979166666666667, "obj2": 0.4121144970520454}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.25, "obj2": 0.6273725355176107}, {"determining": "( ( Min( AMS ,MRS ) + FirstVNF_CPU_Server ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe - RMSe ) - ( RRSe + MUC ) ) - RMSe ) - Max( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ),( Min( CS ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.3625, "obj2": 0.5468343808925317}, {"determining": "Max( ( MDR + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( ( MLU + Max( RMSe,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.2708333333333333, "obj2": 0.6000382820214935}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( RCSe - RMSe ) - ( RRSe - MUC ) )", "obj1": 0.6958333333333333, "obj2": 0.1682580058905673}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( DS ,( RMSe + RMSe ) )", "obj1": 0.9229166666666667, "obj2": 0.03106227511683278}, {"determining": "( ( Min( ( ( ( Min( Max( DDR,FirstVNF_CPU ) ,( BR + DDR ) ) - ( ( FirstVNF_RAM_Server - DDR ) + Max( RRS,CRS ) ) ) + Min( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ,( ( RRS + CRS ) / Min( FirstVNF_RAM ,MDR ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,RRS ) / Min( FirstVNF_CPU_Server ,MDR ) ),( ( FirstVNF_Mem_Server - AMS ) - ( PN - FirstVNF_RAM_Server ) ) ) + Max( ( ( PN * FirstVNF_Mem_Server ) - ( MDR + Const ) ),( Min( AMS ,Const ) - Max( FirstVNF_Mem,RRS ) ) ) ) ) ,( ( ( Min( ( FirstVNF_CPU / ACS ) ,( DDR + CRS ) ) / Min( ( FirstVNF_RAM_Server + AMS ) ,( MDR * AMS ) ) ) - ( Max( ( FirstVNF_Mem * DDR ),Max( MRS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / MDR ) + ( AMS * PN ) ) ) ) + ( Max( ( ( FirstVNF_Mem / AMS ) * ( ARS - ACS ) ),( Min( Const ,FirstVNF_Mem ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * MDR ) * ( MRS / MRS ) ) / ( Min( BR ,DDR ) / ( Const / FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_CPU_Server ) ) - Min( Max( MRS,FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ,( Min( Max( AMS,FirstVNF_CPU ) ,( MRS - ARS ) ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),( PN * ACS ) ) ) ) ,Min( ( Min( ( MRS + RRS ) ,( AMS * RRS ) ) + ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ,Max( Min( ( ARS - ARS ) ,( FirstVNF_RAM_Server - CRS ) ),Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_CPU ) ) ) ) ) * ( ( Max( ( ( ARS * BR ) * ( DDR + ARS ) ),Max( ( Const + MDR ),( ARS / FirstVNF_Mem_Server ) ) ) / ( ( Max( RRS,BR ) + ( RRS - FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),Max( CRS,PN ) ) ) ) + ( ( ( Max( Const,FirstVNF_RAM_Server ) - ( DDR / FirstVNF_RAM ) ) / ( Max( MDR,PN ) / ( MDR * AMS ) ) ) * ( ( Max( ARS,FirstVNF_CPU_Server ) / ( AMS / PN ) ) * ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * Min( AMS ,Const ) ) ) ) ) ) ) + Min( ( ( Min( Min( ( ( PN + CRS ) - ( FirstVNF_CPU * ACS ) ) ,( ( FirstVNF_RAM / DDR ) * ( BR / FirstVNF_RAM_Server ) ) ) ,( ( ( BR + MRS ) * ( MRS + FirstVNF_RAM_Server ) ) / Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - ( ( Max( ( AMS + MDR ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + ( Max( RRS,FirstVNF_CPU_Server ) + ( MDR - RRS ) ) ) - Max( Min( ( MDR * ACS ) ,( FirstVNF_Mem_Server / MDR ) ),( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * Min( RRS ,FirstVNF_CPU ) ) ) ) ) * Max( ( ( Min( ( FirstVNF_RAM_Server / AMS ) ,Max( BR,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM + DDR ) ) ) * ( ( Min( Const ,CRS ) * Max( ACS,ARS ) ) * Min( ( CRS * ARS ) ,( DDR + FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / BR ) * Min( Const ,MRS ) ) - ( Max( BR,FirstVNF_RAM ) / Max( CRS,ACS ) ) ) * ( ( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_Mem_Server,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) ) ) ,( Max( Max( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,MDR ) ),Min( ( CRS + ACS ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ),( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Max( MRS,FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) / ( PN - BR ) ) ) ),Min( Min( ( Min( ARS ,ARS ) * ( FirstVNF_Mem_Server + BR ) ) ,Min( ( MRS + ARS ) ,( MRS / DDR ) ) ) ,( ( ( MRS * FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,BR ) ) * ( Max( AMS,PN ) - Max( AMS,FirstVNF_Mem ) ) ) ) ) + ( Min( ( Max( Max( CRS,FirstVNF_Mem_Server ),Max( BR,FirstVNF_Mem ) ) - ( ( ARS - FirstVNF_RAM_Server ) + ( DDR * FirstVNF_Mem_Server ) ) ) ,( ( Max( ACS,DDR ) * ( CRS * ACS ) ) + Min( ( FirstVNF_RAM_Server - MRS ) ,( RRS * FirstVNF_Mem ) ) ) ) - ( ( Min( ( BR / ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - Max( Max( MRS,FirstVNF_RAM_Server ),( PN * PN ) ) ) / ( Min( ( FirstVNF_CPU_Server - ACS ) ,Max( CRS,MDR ) ) - ( Max( DDR,BR ) + ( BR * RRS ) ) ) ) ) ) ) )", "choosing": "Min( ( MLU * MUC ) ,( RMSe + ( MUM + ( ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + ( CS + RMSe ) ) ) - RRSe ) ) ) )", "obj1": 0.96875, "obj2": 0.025332470802317136}, {"determining": "Max( ( FirstVNF_CPU / ACS ),Const )", "choosing": "( Min( RMSe ,MUM ) / ( DS - MUR ) )", "obj1": 0.2625, "obj2": 0.6252308719026631}, {"determining": "Min( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + DS ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.45416666666666666, "obj2": 0.46745437860620603}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Min( FirstVNF_CPU ,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( MUR + DS ) * ( DS * MUR ) )", "obj1": 0.5645833333333333, "obj2": 0.36400516759710644}, {"determining": "Min( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( MLU + DS ) / ( ( CS + RRSe ) + ( MUM - MUC ) ) )", "obj1": 0.47291666666666665, "obj2": 0.4498205885856068}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + RMSe ) )", "obj1": 0.31875, "obj2": 0.5769672898539946}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,CRS ) ) ) / MDR ) ) )", "choosing": "Min( DS ,( RMSe + RMSe ) )", "obj1": 0.91875, "obj2": 0.03243850700488227}, {"determining": "Min( ( ( DDR + RRS ) / BR ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - BR ) )", "choosing": "( ( MUC * MLU ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) )", "obj1": 0.37083333333333335, "obj2": 0.5403438766719177}, {"determining": "Min( ( ( DDR + RRS ) / BR ) ,( PN - BR ) )", "choosing": "( ( MUR + DS ) * ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) )", "obj1": 0.49166666666666664, "obj2": 0.42646982880994655}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Max( ( FirstVNF_RAM * FirstVNF_RAM ),Max( CRS,PN ) ) ) ) / MDR ) ) )", "choosing": "Min( ( MLU * MUC ) ,( RMSe + ( MUM + ( ( Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) - RRSe ) ) ) )", "obj1": 0.7125, "obj2": 0.16727145369394347}, {"determining": "( Max( Max( FirstVNF_CPU,ACS ),MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUR - ( ( CS * MUC ) / Min( MUM ,CS ) ) ) )", "obj1": 0.28541666666666665, "obj2": 0.5935439968840108}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) )", "choosing": "( ( ( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - CS ) ) )", "obj1": 0.42083333333333334, "obj2": 0.49119836286598645}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.7166666666666667, "obj2": 0.15114088928226285}, {"determining": "Max( ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + DDR ),( FirstVNF_Mem + PN ) ) ),( MRS * ARS ) )", "choosing": "( RMSe / Max( ( ( CS / RMSe ) + ( RMSe * RRSe ) ),( ( MUM * MUC ) * ( RMSe / RMSe ) ) ) )", "obj1": 0.39791666666666664, "obj2": 0.5246409981427399}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) - ( MRS + BR ) ),( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.43459896715705115}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + ( Min( DS ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5857577396123566}, {"determining": "( ( MDR / Const ) + ( ( ( Const * PN ) / ARS ) + Const ) )", "choosing": "( MLU / Max( ( ( CS / RMSe ) + ( RMSe * DS ) ),( ( MUM * MUC ) * ( RMSe * RMSe ) ) ) )", "obj1": 0.3875, "obj2": 0.5301675564593795}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5064038195355532}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + Max( MRS,AMS ) ) ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS - RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5922986409001643}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "Min( ( ( DDR + RRS ) / BR ) ,( PN - BR ) )", "choosing": "( ( MLU + DS ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.4125, "obj2": 0.49305092806477163}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),FirstVNF_Mem_Server ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( ( MUM * RCSe ) ,( RMSe - CS ) ) ),( ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.48125, "obj2": 0.44801938752418613}, {"determining": "Max( ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + DDR ),( FirstVNF_Mem + PN ) ) ),( MRS * ARS ) )", "choosing": "( RMSe / Max( ( ( CS / RMSe ) + ( RMSe * RRSe ) ),( ( MUM * MUC ) * ( RMSe / RMSe ) ) ) )", "obj1": 0.4083333333333333, "obj2": 0.5058313689310486}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( FirstVNF_CPU / PN ) ) )", "choosing": "Min( DS ,( MUC / CS ) )", "obj1": 0.5729166666666666, "obj2": 0.362700225996425}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5875, "obj2": 0.34636445413239825}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( DDR + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( Min( MUC ,( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.575, "obj2": 0.350943841121095}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( Const + Const ) + Min( ACS ,CRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.7208333333333333, "obj2": 0.14151295405888553}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Min( FirstVNF_CPU ,DDR ) ) ) * ( ( Max( DDR,FirstVNF_RAM ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( MUR + DS ) * ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + MUR ) + ( MUR - MUC ) ) ) )", "obj1": 0.44166666666666665, "obj2": 0.4842470435226695}, {"determining": "( Min( FirstVNF_RAM ,MRS ) / ( RRS - ( ( FirstVNF_Mem / FirstVNF_RAM ) - ( ARS + ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) ) ) )", "choosing": "Min( ( Min( ( RCSe * RMSe ) ,Max( MLU,MUM ) ) * MUR ) ,Max( MUM,MLU ) )", "obj1": 0.45208333333333334, "obj2": 0.4769570026501827}, {"determining": "( ( Min( ( ( ( Min( Max( DDR,FirstVNF_CPU ) ,( BR + DDR ) ) - ( ( FirstVNF_RAM_Server - DDR ) + Max( RRS,CRS ) ) ) + Min( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ,( ( RRS + CRS ) / Min( FirstVNF_RAM ,MDR ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,RRS ) / Min( FirstVNF_CPU_Server ,MDR ) ),( ( FirstVNF_Mem_Server - AMS ) - ( PN - FirstVNF_RAM_Server ) ) ) + Max( ( ( PN * FirstVNF_Mem_Server ) - ( MDR + Const ) ),( Min( AMS ,Const ) - Max( FirstVNF_Mem,RRS ) ) ) ) ) ,( ( ( Min( ( FirstVNF_CPU / ACS ) ,( DDR + CRS ) ) / Min( ( FirstVNF_RAM_Server + AMS ) ,( MDR * AMS ) ) ) - ( Max( ( RRS * DDR ),Max( MRS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / MDR ) + ( AMS * PN ) ) ) ) + ( Max( ( ( FirstVNF_Mem / AMS ) * ( ARS - ACS ) ),( Min( Const ,FirstVNF_Mem ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * MDR ) * ( MRS / MRS ) ) / ( Min( BR ,DDR ) / ( Const / FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_CPU_Server ) ) - Min( Max( MRS,FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ,( Min( Max( AMS,FirstVNF_CPU ) ,( MRS - ARS ) ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),( PN * ACS ) ) ) ) ,Min( ( Min( ( MRS + RRS ) ,( AMS * RRS ) ) + ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ,Max( Min( ( ARS - ARS ) ,( FirstVNF_RAM_Server - CRS ) ),Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_CPU ) ) ) ) ) * ( ( Max( ( ( ARS * BR ) * ( DDR + ARS ) ),Max( ( Const + MDR ),( ARS / FirstVNF_Mem_Server ) ) ) / ( ( Max( RRS,BR ) + ( RRS - FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),Max( CRS,PN ) ) ) ) + ( ( ( Max( Const,FirstVNF_RAM_Server ) - ( DDR / FirstVNF_RAM ) ) / ( Max( MDR,PN ) / ( MDR * AMS ) ) ) * ( ( Max( ARS,FirstVNF_CPU_Server ) / ( AMS / PN ) ) * ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * Min( AMS ,Const ) ) ) ) ) ) ) + Min( ( ( Min( Min( ( ( PN + CRS ) - ( FirstVNF_CPU * ACS ) ) ,( ( FirstVNF_RAM / DDR ) * ( BR / FirstVNF_RAM_Server ) ) ) ,( ( ( BR + MRS ) * ( MRS + FirstVNF_RAM_Server ) ) / Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - ( ( Max( ( AMS + MDR ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + ( Max( RRS,FirstVNF_CPU_Server ) + ( MDR - RRS ) ) ) - Max( Min( ( MDR * ACS ) ,( FirstVNF_Mem_Server / MDR ) ),( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * Min( RRS ,FirstVNF_CPU ) ) ) ) ) * Max( ( ( Min( ( FirstVNF_RAM_Server / AMS ) ,Max( BR,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM + DDR ) ) ) * ( ( Min( Const ,CRS ) * Max( ACS,ARS ) ) * Min( ( CRS * ARS ) ,( DDR + FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / BR ) * Min( Const ,MRS ) ) - ( Max( BR,FirstVNF_RAM ) / Max( CRS,ACS ) ) ) * ( ( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_Mem_Server,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) ) ) ,( Max( Max( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,MDR ) ),Min( ( CRS + ACS ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ),( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Max( MRS,FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) / ( PN - BR ) ) ) ),Min( Min( ( Min( ARS ,ARS ) * ( FirstVNF_Mem_Server + BR ) ) ,Min( ( MRS + ARS ) ,( MRS / DDR ) ) ) ,( ( ( MRS * FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,BR ) ) * ( Max( AMS,PN ) - Max( AMS,FirstVNF_Mem ) ) ) ) ) + ( Min( ( Max( Max( CRS,FirstVNF_Mem_Server ),Max( BR,FirstVNF_Mem ) ) - ( ( ARS - FirstVNF_RAM_Server ) + ( DDR * FirstVNF_Mem_Server ) ) ) ,( ( Max( ACS,DDR ) * ( CRS * ACS ) ) + Min( ( FirstVNF_RAM_Server - MRS ) ,( RRS * FirstVNF_Mem ) ) ) ) - ( ( Min( ( BR / ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - Max( Max( MRS,FirstVNF_RAM_Server ),( PN * PN ) ) ) / ( Min( ( FirstVNF_CPU_Server - ACS ) ,Max( CRS,MDR ) ) - ( Max( DDR,BR ) + ( BR * RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.9770833333333333, "obj2": 0.017469874686005225}], "6": [{"determining": "Min( ( RRS + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( RRSe + ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Max( AMS,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( MDR - CRS ) ) + ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( DS / MUM ) - ( RCSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22083333333333333, "obj2": 0.678032067096463}, {"determining": "( Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( DS ,( RMSe + RMSe ) )", "obj1": 0.8625, "obj2": 0.0738628836921053}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUR + DS ) * ( MUC * CS ) )", "obj1": 0.7958333333333333, "obj2": 0.10453941236464272}, {"determining": "( ( Max( ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + CRS ),( FirstVNF_Mem + PN ) ) ),( MRS + ARS ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR + FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( RMSe / Max( ( ( CS / RMSe ) + ( RMSe * DS ) ),( ( MUM - MUC ) * ( RMSe * RMSe ) ) ) ) - ( RRSe + MUC ) )", "obj1": 0.61875, "obj2": 0.24898506373611728}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6604166666666667, "obj2": 0.18183068415166703}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Min( RMSe ,DS ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( RMSe * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.6041666666666666, "obj2": 0.2524693078583561}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),( FirstVNF_Mem + ( ( AMS / PN ) - FirstVNF_RAM ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUR ) - RMSe ) ) * ( MLU * DS ) )", "obj1": 0.5979166666666667, "obj2": 0.3284333569327374}, {"determining": "Max( Min( FirstVNF_RAM ,CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.621023339373946}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.88125, "obj2": 0.04492114002286284}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU / PN ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.225, "obj2": 0.650513517967526}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.4041666666666667, "obj2": 0.4851693959581816}, {"determining": "( ( Min( ( ( ( Min( Max( DDR,FirstVNF_CPU ) ,( BR + DDR ) ) - ( ( FirstVNF_RAM_Server - DDR ) + Max( RRS,CRS ) ) ) + Min( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ,( ( RRS + CRS ) / Min( FirstVNF_RAM ,MDR ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,RRS ) / Min( FirstVNF_CPU_Server ,MDR ) ),( ( FirstVNF_Mem_Server - AMS ) - ( PN - FirstVNF_RAM_Server ) ) ) + Max( ( ( PN * FirstVNF_Mem_Server ) - ( MDR + Const ) ),( Min( AMS ,Const ) - Max( FirstVNF_Mem,RRS ) ) ) ) ) ,( ( ( Min( ( FirstVNF_CPU / ACS ) ,( DDR + CRS ) ) / Min( ( FirstVNF_RAM_Server + AMS ) ,( MDR * AMS ) ) ) - ( Max( ( FirstVNF_Mem * DDR ),Max( MRS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / MDR ) + ( AMS * PN ) ) ) ) + ( Max( ( ( FirstVNF_Mem / AMS ) * ( ARS - ACS ) ),( Min( Const ,FirstVNF_Mem ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * MDR ) * ( MRS / MRS ) ) / ( Min( BR ,DDR ) / ( Const / FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_CPU_Server ) ) - Min( Max( MRS,FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ,( Min( Max( AMS,FirstVNF_CPU ) ,( MRS - ARS ) ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),( PN * ACS ) ) ) ) ,Min( ( Min( ( MRS + RRS ) ,( AMS * RRS ) ) + ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ,Max( Min( ( ARS - ARS ) ,( FirstVNF_RAM_Server - CRS ) ),Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_CPU ) ) ) ) ) * ( ( Max( ( ( ARS * BR ) * ( DDR + ARS ) ),Max( ( Const + MDR ),( ARS / FirstVNF_Mem_Server ) ) ) / ( ( Max( RRS,BR ) + ( RRS - FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),Max( CRS,PN ) ) ) ) + ( ( ( Max( Const,FirstVNF_RAM_Server ) - ( DDR / FirstVNF_RAM ) ) / ( Max( MDR,PN ) / ( MDR * AMS ) ) ) * ( ( Max( ARS,FirstVNF_CPU_Server ) / ( AMS / PN ) ) * ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * Min( AMS ,Const ) ) ) ) ) ) ) + Min( ( ( Min( Min( ( ( PN + CRS ) - ( FirstVNF_CPU * ACS ) ) ,( ( FirstVNF_RAM / DDR ) * ( BR / FirstVNF_RAM_Server ) ) ) ,( ( ( BR + MRS ) * ( MRS + FirstVNF_RAM_Server ) ) / Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - ( ( Max( ( AMS + MDR ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + ( Max( RRS,FirstVNF_CPU_Server ) + ( MDR - RRS ) ) ) - Max( Min( ( MDR * ACS ) ,( FirstVNF_Mem_Server / MDR ) ),( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * Min( RRS ,FirstVNF_CPU ) ) ) ) ) * Max( ( ( Min( ( FirstVNF_RAM_Server / AMS ) ,Max( BR,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM + DDR ) ) ) * ( ( Min( Const ,CRS ) * Max( ACS,ARS ) ) * Min( ( CRS * ARS ) ,( DDR + FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / BR ) * Min( Const ,MRS ) ) - ( Max( BR,FirstVNF_RAM ) / Max( CRS,ACS ) ) ) * ( ( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_Mem_Server,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) ) ) ,( Max( Max( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,MDR ) ),Min( ( CRS + ACS ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ),( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Max( MRS,FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) / ( PN - BR ) ) ) ),Min( Min( ( Min( ARS ,ARS ) * ( FirstVNF_Mem_Server + BR ) ) ,Min( ( MRS + ARS ) ,( MRS / DDR ) ) ) ,( ( ( MRS * FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,BR ) ) * ( Max( AMS,PN ) - Max( AMS,FirstVNF_Mem ) ) ) ) ) + ( Min( ( Max( Max( CRS,FirstVNF_Mem_Server ),Max( BR,FirstVNF_Mem ) ) - ( ( ARS - FirstVNF_RAM_Server ) + ( DDR * FirstVNF_Mem_Server ) ) ) ,( ( Max( ACS,DDR ) * ( CRS * ACS ) ) + Min( ( FirstVNF_RAM_Server - MRS ) ,( RRS * FirstVNF_Mem ) ) ) ) - ( ( Min( ( BR / ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - Max( Max( MRS,FirstVNF_RAM_Server ),( PN * PN ) ) ) / ( Min( ( FirstVNF_CPU_Server - ACS ) ,Max( CRS,MDR ) ) - ( Max( DDR,BR ) + ( BR * RRS ) ) ) ) ) ) ) )", "choosing": "Min( ( MLU * MUC ) ,( RMSe + ( MUM + ( ( ( Max( MLU,RMSe ) + ( RMSe + RCSe ) ) * ( ( RRSe / RRSe ) + ( CS + RMSe ) ) ) - RRSe ) ) ) )", "obj1": 0.96875, "obj2": 0.025332470802317136}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.40208333333333335, "obj2": 0.5064038195355532}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),( CRS + ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS - RRSe ) / ( MLU - MUR ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5559129945628626}, {"determining": "Max( ( MDR + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( ( MLU + Max( RMSe,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.2708333333333333, "obj2": 0.6000382820214935}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + DS ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.4354166666666667, "obj2": 0.4684292853215737}, {"determining": "( Max( ( FirstVNF_CPU / ACS ),AMS ) * ( Const - ARS ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( Min( RMSe ,MUM ) / ( DS - MUC ) ) - ( ( MUR * MUC ) / Min( MUM ,RMSe ) ) ) )", "obj1": 0.375, "obj2": 0.5239253274002963}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "Min( ( ( MUC * MLU ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ,( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) )", "obj1": 0.7708333333333334, "obj2": 0.1162835984190697}, {"determining": "Max( ( FirstVNF_CPU / ACS ),AMS )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.3541666666666667, "obj2": 0.544124206187813}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( MLU + Min( MUM ,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.7416666666666667, "obj2": 0.11788213798970684}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( RCSe - RMSe ) - ( RRSe - MUC ) )", "obj1": 0.6958333333333333, "obj2": 0.1682580058905673}, {"determining": "Min( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + DS ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) )", "obj1": 0.45416666666666666, "obj2": 0.46745437860620603}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( DS ,( RMSe + RMSe ) )", "obj1": 0.9229166666666667, "obj2": 0.03106227511683278}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) - Min( ( RMSe / MUC ) ,( RCSe * RRSe ) ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * CS ) )", "obj1": 0.975, "obj2": 0.010919204403710579}, {"determining": "( Min( MRS ,MRS ) * ( Max( DDR,MRS ) * BR ) )", "choosing": "Max( Min( DS ,RRSe ),( ( MUC * MLU ) - Min( MUM ,RCSe ) ) )", "obj1": 0.5291666666666667, "obj2": 0.4006069674458179}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_RAM / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( ( PN * CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RRSe ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.9083333333333333, "obj2": 0.03454351310424331}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6666666666666666, "obj2": 0.17869461946529777}, {"determining": "Min( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( MLU + DS ) / ( ( CS + RRSe ) + ( MUM - MUC ) ) )", "obj1": 0.47291666666666665, "obj2": 0.4498205885856068}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + RMSe ) )", "obj1": 0.31875, "obj2": 0.5769672898539946}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),FirstVNF_Mem_Server ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( MUM * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( CS,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.4979166666666667, "obj2": 0.4121144970520454}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUR + DS ) * ( MUC * Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ),MUC ) ) )", "obj1": 0.5125, "obj2": 0.4028723298668955}, {"determining": "Min( ( ( DDR + RRS ) / BR ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - BR ) )", "choosing": "( ( MUC * MLU ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) )", "obj1": 0.37083333333333335, "obj2": 0.5403438766719177}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ( ( DDR + RRS ) / BR ) / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5541666666666667, "obj2": 0.3753932550063888}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RCSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( CS * DS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7270833333333333, "obj2": 0.13303517914425494}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Max( ( FirstVNF_RAM * FirstVNF_RAM ),Max( CRS,PN ) ) ) ) / MDR ) ) )", "choosing": "Min( ( MLU * MUC ) ,( RMSe + ( MUM + ( ( Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) * ( ( RRSe / RRSe ) + Max( CS,RMSe ) ) ) - RRSe ) ) ) )", "obj1": 0.7125, "obj2": 0.16727145369394347}, {"determining": "Min( ( ( DDR + RRS ) / BR ) ,( PN - BR ) )", "choosing": "( ( MUR + DS ) * ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) )", "obj1": 0.49166666666666664, "obj2": 0.42646982880994655}, {"determining": "( Max( Max( FirstVNF_CPU,ACS ),MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUR - ( ( CS * MUC ) / Min( MUM ,CS ) ) ) )", "obj1": 0.28541666666666665, "obj2": 0.5935439968840108}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.7166666666666667, "obj2": 0.15114088928226285}, {"determining": "( ( ( AMS / Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + CRS ) ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( RRSe ,CS )", "obj1": 0.9958333333333333, "obj2": 0.001232089921233888}, {"determining": "( ( Max( ( RRS + MDR ),( FirstVNF_CPU + MRS ) ) * Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / Max( ( ( AMS * FirstVNF_Mem_Server ) - ( MRS + BR ) ),( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ),( Max( ( MUM / RCSe ),( MLU - MUM ) ) * ( ( DS + RMSe ) * ( DS / MUM ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.43459896715705115}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + ( Min( DS ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5857577396123566}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5875, "obj2": 0.34636445413239825}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( DDR + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( Min( MUC ,( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.575, "obj2": 0.350943841121095}, {"determining": "( Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * Min( DDR ,CRS ) ),( Max( MRS,FirstVNF_Mem ) / Min( FirstVNF_CPU ,DDR ) ) ) * ( ( Max( DDR,ARS ) * Min( MRS ,FirstVNF_Mem ) ) / ( ( CRS + MDR ) / ( FirstVNF_CPU / PN ) ) ) )", "choosing": "( ( MUR + DS ) * ( DS * MUR ) )", "obj1": 0.5645833333333333, "obj2": 0.36400516759710644}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + Max( MRS,AMS ) ) ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS - RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5922986409001643}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),FirstVNF_Mem_Server ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( ( ( MUM / CS ) - Min( MUM ,MUM ) ) ,Min( ( MUM * RCSe ) ,( RMSe - CS ) ) ),( ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.48125, "obj2": 0.44801938752418613}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),( FirstVNF_Mem + ( ( AMS / PN ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + Min( ( RMSe / MUR ) ,RMSe ) ) * ( MLU * DS ) )", "obj1": 0.5729166666666666, "obj2": 0.3626980478413821}], "7": [{"determining": "( ( RRS + ( MRS - AMS ) ) - ( ( FirstVNF_Mem + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( DS ,( ( MLU + Max( MUM,RCSe ) ) / ( RRSe + ( MUR - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS + ( MRS - AMS ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( RRSe + ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22083333333333333, "obj2": 0.678032067096463}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) * FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU + MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.625, "obj2": 0.22120595042683228}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Min( RMSe ,DS ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( RMSe * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.6041666666666666, "obj2": 0.2524693078583561}, {"determining": "Min( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.43125, "obj2": 0.4526515795837107}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.4041666666666667, "obj2": 0.4851693959581816}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),( FirstVNF_Mem + ( ( AMS / PN ) - FirstVNF_RAM ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUR ) - RMSe ) ) * ( MLU * DS ) )", "obj1": 0.5979166666666667, "obj2": 0.3284333569327374}, {"determining": "Max( Min( FirstVNF_RAM ,CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.621023339373946}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU / PN ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.225, "obj2": 0.650513517967526}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MLU / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5269509241964644}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6604166666666667, "obj2": 0.18183068415166703}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUR + DS ) * ( MUC * CS ) )", "obj1": 0.7958333333333333, "obj2": 0.10453941236464272}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),( CRS + ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS - RRSe ) / ( MLU - MUR ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5559129945628626}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUR + DS ) * ( MUC * DS ) )", "obj1": 0.81875, "obj2": 0.09014391687167574}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5060852332997574}, {"determining": "Max( ( MDR + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( ( MLU + Max( RMSe,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.2708333333333333, "obj2": 0.6000382820214935}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_RAM / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( ( PN * CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RRSe ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RCSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( CS * DS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7583333333333333, "obj2": 0.1087660445294562}, {"determining": "( ( ( ( RRS + FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + BR ) / ( ( ( DDR + RRS ) / BR ) / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5541666666666667, "obj2": 0.3607929582070141}, {"determining": "( Max( ( FirstVNF_CPU / ACS ),AMS ) * ( Const - ARS ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( Min( RMSe ,MUM ) / ( DS - MUC ) ) - ( ( MUR * MUC ) / Min( MUM ,RMSe ) ) ) )", "obj1": 0.375, "obj2": 0.5239253274002963}, {"determining": "Min( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( MLU + DS ) / ( ( CS + RRSe ) + ( MUM - MUC ) ) )", "obj1": 0.47291666666666665, "obj2": 0.4498205885856068}, {"determining": "( Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( DS ,( RMSe + RMSe ) )", "obj1": 0.8625, "obj2": 0.0738628836921053}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( MLU + Min( MUM ,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.7416666666666667, "obj2": 0.11788213798970684}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.88125, "obj2": 0.04492114002286284}, {"determining": "( ( Max( ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + CRS ),( FirstVNF_Mem + PN ) ) ),( MRS + ARS ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR + FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( RMSe / Max( ( ( CS / RMSe ) + ( RMSe * DS ) ),( ( MUM - MUC ) * ( RMSe * RMSe ) ) ) ) - ( RRSe + MUC ) )", "obj1": 0.61875, "obj2": 0.24898506373611728}, {"determining": "( Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.84375, "obj2": 0.07953922837039354}, {"determining": "( Min( MRS ,MRS ) * ( Max( DDR,MRS ) * BR ) )", "choosing": "Max( Min( DS ,RRSe ),( ( MUC * MLU ) - Min( MUM ,RCSe ) ) )", "obj1": 0.5291666666666667, "obj2": 0.4006069674458179}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + RMSe ) )", "obj1": 0.31875, "obj2": 0.5769672898539946}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) - Min( ( RMSe / MUC ) ,( RCSe * RRSe ) ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * CS ) )", "obj1": 0.94375, "obj2": 0.02446325417080676}, {"determining": "( ( Min( ( ( ( Min( Max( DDR,FirstVNF_CPU ) ,( BR + DDR ) ) - ( ( FirstVNF_RAM_Server - DDR ) + Max( RRS,CRS ) ) ) + Min( ( ( FirstVNF_RAM - FirstVNF_Mem_Server ) - ( MDR + FirstVNF_RAM_Server ) ) ,( ( RRS + CRS ) / Min( FirstVNF_RAM ,MDR ) ) ) ) + ( Max( ( Max( FirstVNF_Mem,RRS ) / Min( FirstVNF_CPU_Server ,MDR ) ),( ( FirstVNF_Mem_Server - AMS ) - ( PN - FirstVNF_RAM_Server ) ) ) + Max( ( ( PN * FirstVNF_Mem_Server ) - ( MDR + Const ) ),( Min( AMS ,Const ) - Max( FirstVNF_Mem,RRS ) ) ) ) ) ,( ( ( Min( ( FirstVNF_CPU / ACS ) ,( DDR + CRS ) ) / Min( ( FirstVNF_RAM_Server + AMS ) ,( MDR * AMS ) ) ) - ( Max( ( RRS * DDR ),Max( MRS,FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / MDR ) + ( AMS * PN ) ) ) ) + ( Max( ( ( FirstVNF_Mem / AMS ) * ( ARS - ACS ) ),( Min( Const ,FirstVNF_Mem ) / Min( DDR ,FirstVNF_Mem_Server ) ) ) - ( ( ( AMS * MDR ) * ( MRS / MRS ) ) / ( Min( BR ,DDR ) / ( Const / FirstVNF_RAM_Server ) ) ) ) ) ) / ( Min( Min( ( Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_CPU_Server ) ) - Min( Max( MRS,FirstVNF_CPU_Server ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) ,( Min( Max( AMS,FirstVNF_CPU ) ,( MRS - ARS ) ) + Max( ( FirstVNF_RAM_Server * FirstVNF_RAM ),( PN * ACS ) ) ) ) ,Min( ( Min( ( MRS + RRS ) ,( AMS * RRS ) ) + ( Max( FirstVNF_RAM_Server,DDR ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) ) ,Max( Min( ( ARS - ARS ) ,( FirstVNF_RAM_Server - CRS ) ),Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_CPU ) ) ) ) ) * ( ( Max( ( ( ARS * BR ) * ( DDR + ARS ) ),Max( ( Const + MDR ),( ARS / FirstVNF_Mem_Server ) ) ) / ( ( Max( RRS,BR ) + ( RRS - FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),Max( CRS,PN ) ) ) ) + ( ( ( Max( Const,FirstVNF_RAM_Server ) - ( DDR / FirstVNF_RAM ) ) / ( Max( MDR,PN ) / ( MDR * AMS ) ) ) * ( ( Max( ARS,FirstVNF_CPU_Server ) / ( AMS / PN ) ) * ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) * Min( AMS ,Const ) ) ) ) ) ) ) + Min( ( ( Min( Min( ( ( PN + CRS ) - ( FirstVNF_CPU * ACS ) ) ,( ( FirstVNF_RAM / DDR ) * ( BR / FirstVNF_RAM_Server ) ) ) ,( ( ( BR + MRS ) * ( MRS + FirstVNF_RAM_Server ) ) / Max( ( Const * FirstVNF_CPU_Server ),( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) - ( ( Max( ( AMS + MDR ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) + ( Max( RRS,FirstVNF_CPU_Server ) + ( MDR - RRS ) ) ) - Max( Min( ( MDR * ACS ) ,( FirstVNF_Mem_Server / MDR ) ),( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) * Min( RRS ,FirstVNF_CPU ) ) ) ) ) * Max( ( ( Min( ( FirstVNF_RAM_Server / AMS ) ,Max( BR,FirstVNF_Mem_Server ) ) + ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM + DDR ) ) ) * ( ( Min( Const ,CRS ) * Max( ACS,ARS ) ) * Min( ( CRS * ARS ) ,( DDR + FirstVNF_CPU_Server ) ) ) ),( ( ( ( FirstVNF_RAM / BR ) * Min( Const ,MRS ) ) - ( Max( BR,FirstVNF_RAM ) / Max( CRS,ACS ) ) ) * ( ( ( FirstVNF_CPU_Server - ACS ) + ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_Mem_Server,Const ) / Min( FirstVNF_RAM_Server ,PN ) ) ) ) ) ) ,( Max( Max( Max( Min( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM,MDR ) ),Min( ( CRS + ACS ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ),( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Max( MRS,FirstVNF_Mem ) ) + ( ( Const * FirstVNF_CPU_Server ) / ( PN - BR ) ) ) ),Min( Min( ( Min( ARS ,ARS ) * ( FirstVNF_Mem_Server + BR ) ) ,Min( ( MRS + ARS ) ,( MRS / DDR ) ) ) ,( ( ( MRS * FirstVNF_CPU_Server ) * Min( FirstVNF_RAM_Server ,BR ) ) * ( Max( AMS,PN ) - Max( AMS,FirstVNF_Mem ) ) ) ) ) + ( Min( ( Max( Max( CRS,FirstVNF_Mem_Server ),Max( BR,FirstVNF_Mem ) ) - ( ( ARS - FirstVNF_RAM_Server ) + ( DDR * FirstVNF_Mem_Server ) ) ) ,( ( Max( ACS,DDR ) * ( CRS * ACS ) ) + Min( ( FirstVNF_RAM_Server - MRS ) ,( RRS * FirstVNF_Mem ) ) ) ) - ( ( Min( ( BR / ACS ) ,( MRS / FirstVNF_CPU_Server ) ) - Max( Max( MRS,FirstVNF_RAM_Server ),( PN * PN ) ) ) / ( Min( ( FirstVNF_CPU_Server - ACS ) ,Max( CRS,MDR ) ) - ( Max( DDR,BR ) + ( BR * RRS ) ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9729166666666667, "obj2": 0.020774422530534405}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( DDR + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( Min( MUC ,( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.575, "obj2": 0.350943841121095}, {"determining": "Min( ( ( DDR + RRS ) / BR ) ,( PN - BR ) )", "choosing": "( ( MUR + DS ) * ( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) )", "obj1": 0.49166666666666664, "obj2": 0.42646982880994655}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RCSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( CS * DS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7270833333333333, "obj2": 0.13303517914425494}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) - Min( ( RMSe / MUC ) ,( RCSe * RRSe ) ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * CS ) )", "obj1": 0.975, "obj2": 0.010919204403710579}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( RCSe - RMSe ) - ( RRSe - MUC ) )", "obj1": 0.6916666666666667, "obj2": 0.16884911875849476}, {"determining": "( Max( Max( FirstVNF_CPU,ACS ),MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUR - ( ( CS * MUC ) / Min( MUM ,CS ) ) ) )", "obj1": 0.28541666666666665, "obj2": 0.5935439968840108}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),FirstVNF_Mem_Server ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( MUM * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( CS,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.4979166666666667, "obj2": 0.4121144970520454}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.1390585210132766}, {"determining": "( ( ( AMS / FirstVNF_CPU_Server ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04316502665687711}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.66875, "obj2": 0.16973327055001378}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + ( Min( DS ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5857577396123566}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( RMSe - RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.90625, "obj2": 0.03488488105988481}, {"determining": "( ( ( AMS / Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + MDR ) ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_Mem - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUC ) ) ) ) ) + Max( Max( MUR,MUR ),( RCSe * CS ) ) ) )", "obj1": 0.99375, "obj2": 0.0018559284813807484}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( AMS,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7208333333333333, "obj2": 0.1371589286586442}, {"determining": "Min( ( Max( AMS,FirstVNF_CPU ) + Max( MRS,AMS ) ) ,Min( ( FirstVNF_CPU_Server + FirstVNF_CPU ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS - RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5922986409001643}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( DS ,( RMSe + RMSe ) )", "obj1": 0.9229166666666667, "obj2": 0.03106227511683278}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + BR ) / ( ACS / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5958333333333333, "obj2": 0.3394228510877243}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUR + DS ) * ( MUC * Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ),MUC ) ) )", "obj1": 0.4791666666666667, "obj2": 0.43369464449349515}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.69375, "obj2": 0.15642210975361073}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( MUR + DS ) * ( MUC * Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ),MUC ) ) )", "obj1": 0.5125, "obj2": 0.4028723298668955}], "8": [{"determining": "( Max( ( FirstVNF_CPU / Const ),AMS ) * ( Const - ARS ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( Min( RMSe ,MUM ) / ( RRSe - MUC ) ) - ( ( MUR * MUC ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ( MRS - AMS ) ) - ( ( FirstVNF_Mem + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "Min( DS ,( ( MLU + Max( MUM,RCSe ) ) / ( RRSe + ( MUR - MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21875, "obj2": 0.6645352515681943}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / MLU ) ,( RCSe * DS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4791666666666667, "obj2": 0.39036036140714}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) * FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU + MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.625, "obj2": 0.22120595042683228}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( ACS,PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,CS ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( Min( DS ,RMSe ) * ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.07080503593499154}, {"determining": "Min( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.43125, "obj2": 0.4526515795837107}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_RAM / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( ( PN * CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - RRSe ) ) ) )", "obj1": 0.5354166666666667, "obj2": 0.37564948103611656}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( ACS / CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.65625, "obj2": 0.1738435156576077}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Min( RMSe ,DS ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( RMSe * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.6041666666666666, "obj2": 0.2524693078583561}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / ( MUC - MUC ) ) ) )", "obj1": 0.8145833333333333, "obj2": 0.08541483551543744}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( Const / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),FirstVNF_Mem_Server ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + ( ( FirstVNF_RAM + MRS ) * ( ARS - DDR ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( MUM * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( CS,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.6020833333333333, "obj2": 0.32125775221019354}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.88125, "obj2": 0.04492114002286284}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.76875, "obj2": 0.09946721173188558}, {"determining": "( ( ( Const / ARS ) - Min( AMS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( RCSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.4041666666666667, "obj2": 0.4851134515994509}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MLU / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5269509241964644}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * DDR ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) - MLU ) + ( CS + DS ) ) )", "obj1": 0.475, "obj2": 0.4430965564115682}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + ( Min( DS ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5857577396123566}, {"determining": "( ( Max( ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + CRS ),( FirstVNF_Mem + PN ) ) ),( MRS + ARS ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR + FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( RMSe / Max( ( ( CS / RMSe ) + ( RMSe * DS ) ),( ( MUM - MUC ) * ( RMSe * RMSe ) ) ) ) - ( RRSe + MUC ) )", "obj1": 0.61875, "obj2": 0.24898506373611728}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( MLU + Min( MUM ,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.7416666666666667, "obj2": 0.11788213798970684}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 0.24166666666666667, "obj2": 0.6398735830602302}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),( CRS + ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS - RRSe ) / ( MLU - MUR ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5559129945628626}, {"determining": "Min( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Min( FirstVNF_RAM_Server ,ACS ) ) )", "choosing": "( ( MLU + DS ) / ( ( CS + RRSe ) + ( MUM - MUC ) ) )", "obj1": 0.47291666666666665, "obj2": 0.4498205885856068}, {"determining": "( ( ( ( RRS + FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + BR ) / ( ( ( DDR + RRS ) / BR ) / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5541666666666667, "obj2": 0.3607929582070141}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) - Min( ( RMSe / MUC ) ,( RCSe * RRSe ) ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * CS ) )", "obj1": 0.975, "obj2": 0.010919204403710579}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU / PN ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.225, "obj2": 0.650513517967526}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.1390585210132766}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.31875, "obj2": 0.5562143139940195}, {"determining": "Min( ( Const + Const ) ,( ( ( Const + MDR ) + Min( ACS ,CRS ) ) - Const ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( Min( ( RMSe / RMSe ) ,( RCSe - RRSe ) ),RCSe ) - Min( CS ,RMSe ) ) ) ) ) )", "obj1": 0.35625, "obj2": 0.5178135057557676}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.66875, "obj2": 0.16973327055001378}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5060852332997574}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( RMSe - RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.90625, "obj2": 0.03488488105988481}, {"determining": "Max( ( MDR + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( ( MLU + Max( RMSe,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.2708333333333333, "obj2": 0.6000382820214935}, {"determining": "Min( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( AMS,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - Max( Max( RRS,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,Min( ( MUC * ( RRSe / CS ) ) ,( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4906294857129243}, {"determining": "Max( Min( FirstVNF_RAM ,CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.621023339373946}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + BR ) / ( ( ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) / BR ) / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( DS ,( RCSe * RRSe ) ) ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5791666666666667, "obj2": 0.34552986674363056}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( FirstVNF_Mem + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( RRS / FirstVNF_RAM ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Max( RMSe,RCSe ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.9541666666666667, "obj2": 0.0192125055140878}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + BR ) / ( ( ( DDR - RRS ) / BR ) / BR ) )", "choosing": "( ( ( Min( RMSe ,DS ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5583333333333333, "obj2": 0.3496035886265173}, {"determining": "Min( ( ( DDR + ( BR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.36875, "obj2": 0.5095907210168377}, {"determining": "( Max( Max( FirstVNF_CPU,ACS ),MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUR - ( ( CS * MUC ) / Min( MUM ,CS ) ) ) )", "obj1": 0.28541666666666665, "obj2": 0.5935439968840108}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6895833333333333, "obj2": 0.16014071899911056}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_RAM / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / Max( ( ( Min( RCSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ) ) )", "obj1": 0.58125, "obj2": 0.33205080673430926}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RCSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( CS * DS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7270833333333333, "obj2": 0.13303517914425494}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) - Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) ,( MLU / MUC ) ) + DS ) * ( DS * RRSe ) )", "obj1": 0.6916666666666667, "obj2": 0.1551401587974694}, {"determining": "( ( ( AMS / FirstVNF_CPU_Server ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04316502665687711}, {"determining": "Max( Max( FirstVNF_RAM,CRS ),( FirstVNF_Mem + ( ( AMS / PN ) - FirstVNF_RAM ) ) )", "choosing": "( ( MUR + ( ( RMSe / MUR ) - RMSe ) ) * ( MLU * DS ) )", "obj1": 0.5979166666666667, "obj2": 0.3284333569327374}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.25833333333333336, "obj2": 0.6094025332114873}, {"determining": "( Max( ( ( PN * FirstVNF_Mem ) / ACS ),AMS ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUR * MUC ) / Min( MUM ,MUR ) ) ) )", "obj1": 0.3, "obj2": 0.5904082631208163}, {"determining": "( ( ( Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( AMS,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR / CS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.9895833333333334, "obj2": 0.004655612728473557}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) - Min( ( RMSe / MUC ) ,( RCSe * RRSe ) ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * CS ) )", "obj1": 0.94375, "obj2": 0.02446325417080676}, {"determining": "( ( Max( AMS,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( FirstVNF_Mem + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) - MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MUC / RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.925, "obj2": 0.03000269016711217}], "9": [{"determining": "( Max( FirstVNF_RAM,CRS ) - ( CRS + ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS - RRSe ) / ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / Const ),AMS ) * ( Const - ARS ) )", "choosing": "( Min( RMSe ,MUM ) / ( ( Min( RMSe ,MUM ) / ( RRSe - MUC ) ) - ( ( MUR * MUC ) / Min( MUM ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21875, "obj2": 0.6645352515681943}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( BR / FirstVNF_RAM ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( RMSe + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5583333333333333, "obj2": 0.29734007583484984}, {"determining": "Min( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,( FirstVNF_RAM_Server - ACS ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.43125, "obj2": 0.4526515795837107}, {"determining": "( ( ( ( RRS + FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + BR ) / ( ( ( DDR + RRS ) / BR ) / BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) + Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.5541666666666667, "obj2": 0.3607929582070141}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Min( RMSe ,DS ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( RMSe * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.6041666666666666, "obj2": 0.2524693078583561}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem * ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( MLU ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5538021981261074}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( ACS / CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.65625, "obj2": 0.1738435156576077}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MLU / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5269509241964644}, {"determining": "( ( ( Max( RRS,FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) + BR ) / ( ( ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) / BR ) / BR ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4625, "obj2": 0.42834203993382675}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * ACS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6291666666666667, "obj2": 0.21707860259048256}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.76875, "obj2": 0.09946721173188558}, {"determining": "( ( ( Const / ARS ) - Min( AMS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( RCSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.4041666666666667, "obj2": 0.4851134515994509}, {"determining": "( ( ( Const / ARS ) - Min( AMS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( RCSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.5229166666666667, "obj2": 0.3676910259796144}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( DS ,( RCSe * RRSe ) ) ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.8083333333333333, "obj2": 0.08020671000696046}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.3853789879189618}, {"determining": "( Max( ( ( PN * FirstVNF_Mem ) / ACS ),AMS ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( DS - ( ( MUR * MUC ) / Min( MUM ,MUR ) ) ) )", "obj1": 0.3, "obj2": 0.5904082631208163}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / MLU ) ,( RCSe * DS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4791666666666667, "obj2": 0.39036036140714}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RCSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( CS * DS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7270833333333333, "obj2": 0.13303517914425494}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) )", "obj1": 0.85625, "obj2": 0.06313888203101792}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_RAM / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) * Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4708333333333333, "obj2": 0.4100357027496163}, {"determining": "( ( Max( ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + CRS ),( FirstVNF_Mem + PN ) ) ),( MRS + ARS ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR + FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( RMSe / Max( ( ( CS / RMSe ) + ( RMSe * DS ) ),( ( MUM - MUC ) * ( RMSe * RMSe ) ) ) ) - ( RRSe + MUC ) )", "obj1": 0.61875, "obj2": 0.24898506373611728}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23958333333333334, "obj2": 0.6384790884637116}, {"determining": "Max( Min( FirstVNF_RAM ,CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.621023339373946}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU / PN ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.225, "obj2": 0.650513517967526}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.25833333333333336, "obj2": 0.6094025332114873}, {"determining": "Min( ( Const + Const ) ,( ( ( Const + MDR ) + Min( ACS ,CRS ) ) - Const ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( Min( ( RMSe / RMSe ) ,( RCSe - RRSe ) ),RCSe ) - Min( CS ,RMSe ) ) ) ) ) )", "obj1": 0.35625, "obj2": 0.5178135057557676}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) * FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU + MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.625, "obj2": 0.22120595042683228}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.66875, "obj2": 0.16973327055001378}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( PN / ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUR,MUR ) ) ) * ( ( DS - MLU ) + Min( CS ,DS ) ) )", "obj1": 0.8729166666666667, "obj2": 0.04928576146147702}, {"determining": "Max( ( MDR + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( ( MLU + Max( RMSe,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.2708333333333333, "obj2": 0.6000382820214935}, {"determining": "Min( ( ( DDR + ( BR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.36875, "obj2": 0.5095907210168377}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) - Min( ( RMSe / MUC ) ,( RCSe * RRSe ) ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * CS ) )", "obj1": 0.975, "obj2": 0.010919204403710579}, {"determining": "( Max( Max( FirstVNF_CPU,ACS ),MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUR - ( ( CS * MUC ) / Min( MUM ,CS ) ) ) )", "obj1": 0.28541666666666665, "obj2": 0.5935439968840108}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),BR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - ( MLU / MUC ) ) + DS ) * ( DS * ( ( CS + RRSe ) + ( MUM - MUC ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.15725436718628785}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) - Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) ,( MLU / MUC ) ) + DS ) * ( DS * RRSe ) )", "obj1": 0.6916666666666667, "obj2": 0.1551401587974694}, {"determining": "( ( Max( AMS,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( FirstVNF_Mem + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) - MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MUC / RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.925, "obj2": 0.03000269016711217}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( MLU + Min( MUM ,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.7416666666666667, "obj2": 0.11788213798970684}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( FirstVNF_Mem + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "Max( Min( ( ( MUM / RCSe ) - Min( MUM ,MUM ) ) ,Min( Min( MUR ,MUM ) ,( RMSe - CS ) ) ),( ( Max( MUR,RMSe ) * ( DS - MUR ) ) - ( Min( RMSe ,CS ) / Max( ( ( Min( RCSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ) ) )", "obj1": 0.94375, "obj2": 0.02348649888029893}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( FirstVNF_Mem + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( RRS / FirstVNF_RAM ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Max( RMSe,RCSe ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.9541666666666667, "obj2": 0.0192125055140878}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.1390585210132766}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( ACS,PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,CS ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( Min( DS ,RMSe ) * ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.07080503593499154}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * RRS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( MLU * DS ) )", "obj1": 0.8125, "obj2": 0.07618530792382514}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Max( MDR,( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( MLU ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + ( Min( DS ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.39375, "obj2": 0.5048605289762914}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( ( RRSe - MUM ) * ( MUM * RCSe ) ) ) / Min( ( MLU / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.9041666666666667, "obj2": 0.038566936956497544}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5060852332997574}, {"determining": "( ( ( AMS / FirstVNF_CPU_Server ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04316502665687711}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( ( RMSe / RMSe ) + DS ) ) )", "obj1": 0.7541666666666667, "obj2": 0.11062504551922171}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( DS - MLU ) + ( CS + DS ) ) ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7, "obj2": 0.13909102376335675}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.07266002460532606}], "10": [{"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( ACS * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Min( RMSe ,DS ) ,( MUC * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( RMSe * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,CRS ) - ( CRS + ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS - RRSe ) / ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,MUR ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.21458333333333332, "obj2": 0.6878773476320497}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( DDR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / ( MUC * ( RRSe / CS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * Max( DS,DS ) )", "obj1": 0.42291666666666666, "obj2": 0.4213489546596227}, {"determining": "( ( ( Const / ARS ) - Min( AMS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( RCSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.4041666666666667, "obj2": 0.4851134515994509}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) - Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) ,( MLU / MUC ) ) + DS ) * ( DS * RRSe ) )", "obj1": 0.625, "obj2": 0.19944976336387124}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,CRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( MLU + Min( MUM ,RCSe ) ) / Min( MLU ,DS ) )", "obj1": 0.5479166666666667, "obj2": 0.3206294564505795}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( BR / FirstVNF_RAM ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( RMSe + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5583333333333333, "obj2": 0.29734007583484984}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem * ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( MLU ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5538021981261074}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_RAM / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) + Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.51875, "obj2": 0.3667840049622097}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5791666666666667, "obj2": 0.2526136069129585}, {"determining": "( ( ( ( DDR / FirstVNF_Mem ) * ( FirstVNF_RAM / DDR ) ) / Max( ( MDR + FirstVNF_CPU ),( CRS / FirstVNF_RAM ) ) ) - ( ( Max( PN,CRS ) / ( MDR * RRS ) ) * Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4708333333333333, "obj2": 0.4100357027496163}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MLU / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5269509241964644}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( ACS / CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.65625, "obj2": 0.1738435156576077}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( DS - MLU ) + ( CS + DS ) ) ,RMSe ) - ( Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Max( RMSe,RCSe ) ) - MUC ) ,( MLU / MUC ) ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4791666666666667, "obj2": 0.38733347031404364}, {"determining": "( ( Max( ( FirstVNF_CPU / Max( ( FirstVNF_RAM_Server + CRS ),( FirstVNF_Mem + PN ) ) ),( MRS + ARS ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR + FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( RMSe / Max( ( ( CS / RMSe ) + ( RMSe * DS ) ),( ( MUM - MUC ) * ( RMSe * RMSe ) ) ) ) - ( RRSe + MUC ) )", "obj1": 0.61875, "obj2": 0.24898506373611728}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RCSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( CS * DS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7270833333333333, "obj2": 0.13303517914425494}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * ( ( ( Const + Const ) + Min( ACS ,CRS ) ) - BR ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RMSe ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.49375, "obj2": 0.36683865979263625}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) )", "obj1": 0.85625, "obj2": 0.06313888203101792}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6300136273444964}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU / PN ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.225, "obj2": 0.650513517967526}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21875, "obj2": 0.6645352515681943}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.76875, "obj2": 0.09946721173188558}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RRSe ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.3020833333333333, "obj2": 0.5892393155918325}, {"determining": "( ( ( AMS / AMS ) - Min( PN ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( MUM * RCSe ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.7958333333333333, "obj2": 0.0846498526118976}, {"determining": "Min( ( Const + Const ) ,( ( ( Const + MDR ) + Min( ACS ,CRS ) ) - Const ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( Min( ( RMSe / RMSe ) ,( RCSe - RRSe ) ),RCSe ) - Min( CS ,RMSe ) ) ) ) ) )", "obj1": 0.35625, "obj2": 0.5178135057557676}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( PN / ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUR,MUR ) ) ) * ( ( DS - MLU ) + Min( CS ,DS ) ) )", "obj1": 0.8729166666666667, "obj2": 0.04928576146147702}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( MLU + Min( MUM ,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.7416666666666667, "obj2": 0.11788213798970684}, {"determining": "Max( ( MDR + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( ( MLU + Max( RMSe,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.2708333333333333, "obj2": 0.6000382820214935}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Max( MDR,( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( MLU ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + ( Min( DS ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.39375, "obj2": 0.5048605289762914}, {"determining": "Min( ( ( DDR + ( BR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.36875, "obj2": 0.5095907210168377}, {"determining": "( Max( Max( FirstVNF_CPU,ACS ),MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUR - ( ( CS * MUC ) / Min( MUM ,CS ) ) ) )", "obj1": 0.28541666666666665, "obj2": 0.5935439968840108}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Min( RMSe ,DS ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( RMSe * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.6041666666666666, "obj2": 0.2524693078583561}, {"determining": "Max( Min( FirstVNF_RAM ,CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.621023339373946}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.25833333333333336, "obj2": 0.6094025332114873}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM / ACS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( DS - MLU ) + ( CS + MUR ) ) ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9791666666666666, "obj2": 0.007069127961370234}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.1390585210132766}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( ACS,PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,CS ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( Min( DS ,RMSe ) * ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.07080503593499154}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR * MRS ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MLU ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8125, "obj2": 0.07599741927862397}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) * FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU + MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6770833333333334, "obj2": 0.166090532187935}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ) + ( ( BR / ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( ( RRSe - MUM ) * ( MUM * RCSe ) ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( RRSe - MUM ) ) )", "obj1": 0.90625, "obj2": 0.036748640319038246}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5060852332997574}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.66875, "obj2": 0.16973327055001378}, {"determining": "( ( Max( AMS,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( FirstVNF_Mem + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) - MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MUC / RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.925, "obj2": 0.03000269016711217}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.07266002460532606}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( ( RRSe - MUM ) * ( MUM * RCSe ) ) ) / Min( ( MLU / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.9041666666666667, "obj2": 0.038566936956497544}, {"determining": "( ( ( AMS / FirstVNF_CPU_Server ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04316502665687711}, {"determining": "( ( ( AMS / AMS ) - Min( BR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),BR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - ( MUR / MUC ) ) + DS ) * ( DS * ( ( CS + RRSe ) + ( MUM - MUC ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.155451257387745}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / DS ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.69375, "obj2": 0.14761426599846156}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MLU / MUC ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24791666666666667, "obj2": 0.6104948216602106}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) - Min( ( RMSe / MUC ) ,( RCSe * RRSe ) ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * CS ) )", "obj1": 0.975, "obj2": 0.010919204403710579}], "11": [{"determining": "( Min( ( ACS / AMS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + MRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,DDR ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( MUC,MUR ) ) ) * ( ( DS - MLU ) / ( MLU + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( ACS * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Min( RMSe ,DS ) ,( MUC * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( RMSe * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,MUR ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.21458333333333332, "obj2": 0.6878773476320497}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( BR - CRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * MLU ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4375, "obj2": 0.36393038319502774}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( Max( RCSe,MUR ) ,RMSe ) - ( ( MUC / MUC ) + ( MLU / MUC ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5229166666666667, "obj2": 0.3370420454586708}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( BR / FirstVNF_RAM ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( RMSe + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5583333333333333, "obj2": 0.29734007583484984}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5979166666666667, "obj2": 0.23510539124212396}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( BR / FirstVNF_RAM ) * Max( MDR,FirstVNF_CPU_Server ) ) ) / PN ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,CS ) / CS )", "obj1": 0.4125, "obj2": 0.47266058165177066}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( DDR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / ( MUC * ( RRSe / CS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * Max( DS,DS ) )", "obj1": 0.42291666666666666, "obj2": 0.4213489546596227}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MLU / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5269509241964644}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) - Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) ,( MLU / MUC ) ) + DS ) * ( DS * RRSe ) )", "obj1": 0.625, "obj2": 0.19944976336387124}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5791666666666667, "obj2": 0.2526136069129585}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem * ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( MLU ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5538021981261074}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RMSe ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.54375, "obj2": 0.30438363815364367}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.425, "obj2": 0.4042392239895282}, {"determining": "( ( ( AMS / AMS ) - Min( PN ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( MUM * RCSe ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.7958333333333333, "obj2": 0.0846498526118976}, {"determining": "( ( ( Const / ARS ) - Min( AMS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / RRS ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MLU,MUC ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.29791666666666666, "obj2": 0.5642869270059045}, {"determining": "( Max( Max( FirstVNF_CPU,ACS ),MDR ) * ( Const - MDR ) )", "choosing": "( Min( RMSe ,MUM ) / ( MUR - ( ( CS * MUC ) / Min( MUM ,CS ) ) ) )", "obj1": 0.28541666666666665, "obj2": 0.5935439968840108}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RCSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( CS * DS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7270833333333333, "obj2": 0.13303517914425494}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( MRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.63125, "obj2": 0.18786585727166538}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( ACS / CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.65625, "obj2": 0.1738435156576077}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6300136273444964}, {"determining": "( ( ( Const / ARS ) - Min( AMS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( RCSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.4041666666666667, "obj2": 0.4851134515994509}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) )", "obj1": 0.85625, "obj2": 0.06313888203101792}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( ( FirstVNF_CPU / PN ) - FirstVNF_RAM ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.225, "obj2": 0.650513517967526}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - ( FirstVNF_CPU_Server + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( MLU,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21875, "obj2": 0.6645352515681943}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.76875, "obj2": 0.09946721173188558}, {"determining": "( ( Max( AMS,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( FirstVNF_Mem + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) - MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MUC / RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.925, "obj2": 0.03000269016711217}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6958333333333333, "obj2": 0.13463464386974566}, {"determining": "Min( ( Const + Const ) ,( ( ( Const + MDR ) + Min( ACS ,CRS ) ) - Const ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( Min( ( RMSe / RMSe ) ,( RCSe - RRSe ) ),RCSe ) - Min( CS ,RMSe ) ) ) ) ) )", "obj1": 0.35625, "obj2": 0.5178135057557676}, {"determining": "Max( ( MDR + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( ( MLU + Max( RMSe,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.2708333333333333, "obj2": 0.6000382820214935}, {"determining": "( ( FirstVNF_RAM / ACS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Max( MDR,( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( MLU ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + ( Min( DS ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.39375, "obj2": 0.5048605289762914}, {"determining": "( ( ( AMS / AMS ) - ( Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ACS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( DS - MLU ) + ( CS + MUR ) ) ,( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7666666666666667, "obj2": 0.1031140404794799}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.74375, "obj2": 0.11672550095218905}, {"determining": "Min( ( ( DDR + ( BR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.36875, "obj2": 0.5095907210168377}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( MRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( DS / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5895833333333333, "obj2": 0.24918301563857084}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ACS + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.95625, "obj2": 0.020042110391609847}, {"determining": "( ( ( AMS / AMS ) - Min( BR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),BR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - ( MUR / MUC ) ) + DS ) * ( DS * ( ( CS + RRSe ) + ( MUM - MUC ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.155451257387745}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) - Min( ( RMSe / MUC ) ,( RCSe * RRSe ) ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * CS ) )", "obj1": 0.975, "obj2": 0.010919204403710579}, {"determining": "Max( Min( FirstVNF_RAM ,CRS ),Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24166666666666667, "obj2": 0.6152319315208641}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / DS ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.69375, "obj2": 0.14761426599846156}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR * MRS ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MLU ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8125, "obj2": 0.07599741927862397}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( MLU + Min( MUM ,RCSe ) ) / ( ( CS + RRSe ) + ( MUR - MUR ) ) )", "obj1": 0.7416666666666667, "obj2": 0.11788213798970684}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.25833333333333336, "obj2": 0.6094025332114873}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( ACS,PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,CS ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( Min( DS ,RMSe ) * ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.07080503593499154}, {"determining": "( ( ( AMS / FirstVNF_CPU_Server ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04316502665687711}, {"determining": "( ( ( AMS / FirstVNF_CPU_Server ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( BR / FirstVNF_RAM ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( RMSe * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) - MLU ) + ( CS + DS ) ) )", "obj1": 0.9458333333333333, "obj2": 0.027444919280151085}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ) + ( ( BR / ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( ( RRSe - MUM ) * ( MUM * RCSe ) ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( RRSe - MUM ) ) )", "obj1": 0.90625, "obj2": 0.036748640319038246}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) * FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU + MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6770833333333334, "obj2": 0.166090532187935}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5060852332997574}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.66875, "obj2": 0.1694815698983078}], "12": [{"determining": "Min( ( ( ( ( ( ( ( MRS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * MRS ) ) - Min( ( BR + PN ) ,( MDR * FirstVNF_Mem ) ) ) - Min( Min( Min( MDR ,RRS ) ,( PN / MDR ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),( Const * FirstVNF_RAM_Server ) ) ) ) - Min( Min( ( ( MDR + ARS ) * ( FirstVNF_RAM * BR ) ) ,( Min( FirstVNF_CPU ,ACS ) * ( DDR + MRS ) ) ) ,( ( ( PN * BR ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Min( ( PN * AMS ) ,( FirstVNF_Mem_Server + RRS ) ) ) ) ) / ( Max( Min( ( Max( FirstVNF_Mem_Server,ACS ) * ( FirstVNF_RAM / RRS ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server - ACS ) ) ),Min( Min( ( Const * FirstVNF_RAM ) ,( PN + MDR ) ) ,( ( BR * FirstVNF_CPU_Server ) + ( ARS - DDR ) ) ) ) + ( Max( ( Min( CRS ,MDR ) * ( FirstVNF_RAM / RRS ) ),( ( ARS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server * AMS ) ) ) + Min( ( Min( FirstVNF_Mem ,CRS ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,( Min( Const ,AMS ) + ( FirstVNF_CPU - PN ) ) ) ) ) ) * ( ( ( Min( Max( ( MRS / Const ),( FirstVNF_Mem * CRS ) ) ,( Min( ACS ,AMS ) / ( FirstVNF_RAM_Server / MDR ) ) ) + ( Min( ( MDR * Const ) ,( FirstVNF_RAM + MRS ) ) - Max( Max( FirstVNF_Mem_Server,RRS ),( MDR / FirstVNF_RAM_Server ) ) ) ) + Min( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * RRS ) ) * ( Min( AMS ,DDR ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,( ( ( PN * FirstVNF_Mem ) * Min( BR ,MDR ) ) * Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( MRS + ARS ) ) ) ) ) + Min( Min( Min( Min( Min( ACS ,MDR ) ,( CRS / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_CPU + RRS ) / ( FirstVNF_CPU - BR ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) * Min( AMS ,Const ) ) * ( ( RRS / FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( Const + Const ) ) / Max( Max( DDR,PN ),( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Max( Max( RRS,CRS ),( ACS / RRS ) ) - ( ( CRS / FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) ) ) ) ,( ( ( ( ( ( ( RRS + BR ) + ( ACS - FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,( FirstVNF_CPU_Server * BR ) ) ) * ( ( Min( MRS ,RRS ) * ( FirstVNF_RAM * MRS ) ) + Max( ( MDR + FirstVNF_RAM ),Max( FirstVNF_RAM,ACS ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server - ACS ) - ( ARS + FirstVNF_CPU_Server ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( CRS + ARS ) ) ) / ( ( ( DDR * AMS ) * ( PN / RRS ) ) * ( ( BR + FirstVNF_RAM_Server ) - Min( BR ,CRS ) ) ) ) ) / ( ( Min( ( ( FirstVNF_Mem_Server - PN ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_RAM_Server + PN ) ) ) + ( ( ( FirstVNF_RAM * MDR ) - Min( FirstVNF_CPU_Server ,PN ) ) / ( Max( ACS,FirstVNF_RAM ) - Max( Const,MDR ) ) ) ) + ( ( ( ( BR * RRS ) / ( DDR + ARS ) ) * ( ( MRS / CRS ) - ( DDR / FirstVNF_CPU_Server ) ) ) - ( Max( Min( FirstVNF_CPU_Server ,MRS ),( AMS * MRS ) ) + ( Min( DDR ,AMS ) * ( MDR - FirstVNF_Mem ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_RAM * RRS ) * Min( MRS ,DDR ) ) + ( ( FirstVNF_Mem + PN ) + ( FirstVNF_CPU + DDR ) ) ) * ( ( Min( AMS ,RRS ) - ( ACS / Const ) ) - ( ( BR + MRS ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) ) + ( ( ( Min( RRS ,FirstVNF_Mem_Server ) * Min( AMS ,DDR ) ) - ( ( PN * FirstVNF_Mem_Server ) * ( MRS / Const ) ) ) / ( Min( ( MRS * FirstVNF_RAM ) ,( RRS / FirstVNF_Mem_Server ) ) - ( Max( ARS,ACS ) + ( Const * FirstVNF_RAM_Server ) ) ) ) ) / Min( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * CRS ) ) / Min( Min( MDR ,MDR ) ,( RRS / FirstVNF_CPU ) ) ) / Min( ( ( FirstVNF_RAM / PN ) / Min( FirstVNF_RAM_Server ,MDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_CPU_Server * ARS ) ) ) ) ,( Max( Min( ( MDR - FirstVNF_CPU ) ,Min( ARS ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / Min( MDR ,DDR ) ) ) / Max( ( Max( Const,FirstVNF_Mem ) + ( FirstVNF_RAM - FirstVNF_Mem ) ),( ( AMS - ARS ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( ( ( ( ( ( MUR + RCSe ) / Max( RCSe,MUR ) ) - ( Min( MUC ,DS ) + ( MUR + RRSe ) ) ) - ( ( Max( MUC,MUM ) - Max( RMSe,RMSe ) ) + ( ( MUC + MLU ) * Max( RMSe,RMSe ) ) ) ) + Min( ( ( Max( MLU,RRSe ) - ( RRSe * CS ) ) * Min( ( RCSe / MUR ) ,( RRSe / MUR ) ) ) ,( ( ( CS * MUC ) + ( MUC * DS ) ) * Min( ( RCSe - MUR ) ,Max( CS,RRSe ) ) ) ) ) * Max( ( ( Min( ( MUR + DS ) ,( MLU + MUC ) ) + ( ( CS - DS ) / ( DS / MUM ) ) ) + ( ( ( MUM + DS ) / Max( RCSe,RRSe ) ) / Min( Min( MUM ,MLU ) ,( DS - RCSe ) ) ) ),( ( Min( Max( MUC,MUM ) ,Max( MUR,MUR ) ) + ( ( MUR * MUM ) / Min( RRSe ,CS ) ) ) - Max( Max( Min( RMSe ,RRSe ),Min( MUM ,RRSe ) ),( Min( RMSe ,MUM ) / ( MUR - CS ) ) ) ) ) ),Max( Min( ( ( ( ( MLU / MLU ) * Max( MUM,CS ) ) * ( Min( RCSe ,CS ) / ( MUM / RRSe ) ) ) * ( ( Max( MUR,RMSe ) - ( MUC / RRSe ) ) * Min( Min( RRSe ,RRSe ) ,Max( MLU,MUM ) ) ) ) ,Max( Max( ( ( CS * MUC ) * ( DS / RRSe ) ),( ( CS - MUM ) / ( MUR / CS ) ) ),Max( ( ( MUM / MUR ) + ( MUR * RRSe ) ),( Max( MUR,RCSe ) - ( MUM / DS ) ) ) ) ),( ( Max( ( ( CS * MUR ) / ( CS / MUM ) ),( Min( CS ,MUM ) - ( MUC + CS ) ) ) / ( Min( ( RMSe / RRSe ) ,Min( MLU ,RMSe ) ) / Max( ( RCSe - MUM ),( MUC - RRSe ) ) ) ) * ( Max( ( ( RMSe - RCSe ) / Max( MLU,MUM ) ),Max( ( CS - CS ),Min( MUC ,DS ) ) ) / ( ( Max( RRSe,MUC ) + ( RRSe * MUR ) ) - ( ( MUR / MUC ) + Min( MLU ,RRSe ) ) ) ) ) ) ) ,( ( ( Max( ( Max( Min( DS ,MUR ),( MLU + CS ) ) * ( ( MUR / MUC ) / ( CS + CS ) ) ),Max( ( ( RCSe / MLU ) / Max( RMSe,RMSe ) ),Min( ( RCSe / MUM ) ,( MUM * MUM ) ) ) ) - ( ( ( ( RCSe * MUC ) - ( MUR - MLU ) ) - ( ( RCSe - MLU ) - ( DS / DS ) ) ) - Max( Max( ( MUM * RCSe ),( DS * RMSe ) ),( Max( CS,MUC ) + ( RRSe * MUR ) ) ) ) ) * ( Min( ( ( ( MLU * RMSe ) / ( MUC + RMSe ) ) + Max( ( CS - MUM ),( MUR - MLU ) ) ) ,Min( ( ( MLU * MUR ) - ( MUM * RMSe ) ) ,Min( ( DS + MUM ) ,( CS * RMSe ) ) ) ) - ( ( ( Min( MUR ,MLU ) / ( MUM + DS ) ) - ( Max( RMSe,MUR ) * ( CS * MUC ) ) ) * Max( ( Min( MUM ,DS ) / Min( RMSe ,MLU ) ),( Min( MUM ,RRSe ) / ( MLU + CS ) ) ) ) ) ) * ( ( ( ( ( Min( MUR ,MLU ) / ( MUR + DS ) ) - ( ( RMSe - DS ) / ( DS / MUM ) ) ) * ( ( Max( CS,RRSe ) - ( CS / MUR ) ) - Min( ( MLU / MLU ) ,( MLU / MLU ) ) ) ) - ( ( Min( ( MUC / CS ) ,Max( MLU,RCSe ) ) + ( ( MLU + DS ) * ( MUC * MUC ) ) ) + ( ( ( MUM + DS ) + Max( MUM,CS ) ) - ( ( MUM / CS ) / Min( MUR ,MUR ) ) ) ) ) + Max( ( Max( ( Max( CS,RRSe ) * Max( MUC,CS ) ),Min( Min( MUC ,CS ) ,( MUC - MLU ) ) ) / Max( ( ( RRSe - DS ) / ( MUC - RMSe ) ),( ( MUM / MUM ) - ( MUM * RCSe ) ) ) ),Min( ( ( Max( RMSe,MUR ) - ( MUR + MUM ) ) - ( ( DS + DS ) * ( RRSe - RRSe ) ) ) ,( ( ( CS + MUM ) + ( RRSe - MLU ) ) - ( ( CS * DS ) - ( MUC * RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS / AMS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + MRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,DDR ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( MUC,MUR ) ) ) * ( ( DS - MLU ) / ( MLU + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.45625, "obj2": 0.3435133853908485}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( Const / ARS ) - Min( AMS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( RCSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.4041666666666667, "obj2": 0.4851134515994509}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.4125, "obj2": 0.42210692362140945}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MLU / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5269509241964644}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) - Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) ,( MLU / MUC ) ) + DS ) * ( DS * RRSe ) )", "obj1": 0.625, "obj2": 0.19944976336387124}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem * ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( MLU ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5538021981261074}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( Max( RCSe,MUR ) ,RMSe ) - ( ( MUC / MUC ) + ( MLU / MUC ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5229166666666667, "obj2": 0.3370420454586708}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5979166666666667, "obj2": 0.23510539124212396}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.425, "obj2": 0.4042392239895282}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( MLU ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + ( Min( DS ,MUR ) + Min( MLU ,RCSe ) ) ) )", "obj1": 0.5520833333333334, "obj2": 0.28040670887645447}, {"determining": "( ( ( Const / ARS ) - Min( AMS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.28125, "obj2": 0.5874332219347549}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( BR - CRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * MLU ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4375, "obj2": 0.36393038319502774}, {"determining": "( ( ( Const / ARS ) - Min( AMS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / RRS ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MLU,MUC ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.29791666666666666, "obj2": 0.5642869270059045}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RCSe ,MUM ) / ( RMSe / RCSe ) ) / Min( ( RMSe / RMSe ) ,( CS * DS ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7270833333333333, "obj2": 0.13303517914425494}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( MRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.63125, "obj2": 0.18786585727166538}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM_Server ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),ACS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( Min( DS ,CS ) ,( RRSe * RRSe ) ) ),MUC ) ,( RRSe / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.56875, "obj2": 0.26131090999859446}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( ACS / CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.65625, "obj2": 0.1738435156576077}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( ACS,PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,CS ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( Min( DS ,RMSe ) * ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.07080503593499154}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6300136273444964}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RMSe ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.54375, "obj2": 0.30438363815364367}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR * MRS ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MLU ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8125, "obj2": 0.07599741927862397}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5060852332997574}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ) + ( ( BR / ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( ( RRSe - MUM ) * ( MUM * RCSe ) ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( RRSe - MUM ) ) )", "obj1": 0.90625, "obj2": 0.036748640319038246}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) - Min( ( RMSe / MUC ) ,( RCSe * RRSe ) ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * CS ) )", "obj1": 0.975, "obj2": 0.010919204403710579}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.5416666666666666, "obj2": 0.32000660841537654}, {"determining": "Min( ( Const + Const ) ,( ( ( Const + MDR ) + Min( ACS ,CRS ) ) - Const ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( Min( ( RMSe / RMSe ) ,( RCSe - RRSe ) ),RCSe ) - Min( CS ,RMSe ) ) ) ) ) )", "obj1": 0.35625, "obj2": 0.5178135057557676}, {"determining": "Max( Min( FirstVNF_RAM ,CRS ),Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24166666666666667, "obj2": 0.6152319315208641}, {"determining": "Max( ( MDR + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( ( MLU + Max( RMSe,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.2708333333333333, "obj2": 0.6000382820214935}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.25833333333333336, "obj2": 0.6094025332114873}, {"determining": "( ( ( AMS / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.39375, "obj2": 0.4865739894696774}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5791666666666667, "obj2": 0.2526136069129585}, {"determining": "( ( ( AMS / FirstVNF_CPU_Server ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8770833333333333, "obj2": 0.049076510970357076}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.7895833333333333, "obj2": 0.08922586327330438}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6958333333333333, "obj2": 0.13463464386974566}, {"determining": "( ( ( AMS / FirstVNF_CPU_Server ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04316502665687711}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.44583333333333336, "obj2": 0.36319669721623815}, {"determining": "Min( ( ( DDR + ( BR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.36875, "obj2": 0.5095907210168377}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - CRS ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7604166666666666, "obj2": 0.10250273462674767}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( BR - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / Const ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) + ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * ( ( DS - MLU ) + ( CS + DS ) ) ) )", "obj1": 0.5875, "obj2": 0.2387207045697853}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( RMSe + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5291666666666667, "obj2": 0.3352366625318122}, {"determining": "( ( ( AMS / AMS ) - Min( PN ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( MUM * RCSe ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.7958333333333333, "obj2": 0.0846498526118976}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.76875, "obj2": 0.09946721173188558}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ACS + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.95625, "obj2": 0.020042110391609847}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) )", "obj1": 0.85625, "obj2": 0.06313888203101792}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( RMSe * ( RRSe / CS ) ) + ( Max( MUC,RRSe ) - Min( DS ,RMSe ) ) ) ) ) - MLU ) + ( CS + DS ) ) )", "obj1": 0.8604166666666667, "obj2": 0.059835599735084975}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.74375, "obj2": 0.11672550095218905}], "13": [{"determining": "( ( ( AMS / AMS ) - ( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( ( ( ( MRS * FirstVNF_Mem_Server ) / ( FirstVNF_RAM * MRS ) ) - Min( ( BR + PN ) ,( MDR * FirstVNF_Mem ) ) ) - Min( Min( Min( MDR ,RRS ) ,( PN / MDR ) ) ,Max( ( FirstVNF_RAM_Server * MDR ),( Const * FirstVNF_RAM_Server ) ) ) ) - Min( Min( ( ( MDR + ARS ) * ( FirstVNF_RAM * BR ) ) ,( Min( FirstVNF_CPU ,ACS ) * ( DDR + MRS ) ) ) ,( ( ( PN * BR ) - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) - Min( ( PN * AMS ) ,( FirstVNF_Mem_Server + RRS ) ) ) ) ) / ( Max( Min( ( Max( FirstVNF_Mem_Server,ACS ) * ( FirstVNF_RAM / RRS ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server - ACS ) ) ),Min( Min( ( Const * FirstVNF_RAM ) ,( PN + MDR ) ) ,( ( BR * FirstVNF_CPU_Server ) + ( ARS - DDR ) ) ) ) + ( Max( ( Min( CRS ,MDR ) * ( FirstVNF_RAM / RRS ) ),( ( ARS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server * AMS ) ) ) + Min( ( Min( FirstVNF_Mem ,CRS ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ,( Min( Const ,AMS ) + ( FirstVNF_CPU - PN ) ) ) ) ) ) * ( ( ( Min( Max( ( MRS / Const ),( FirstVNF_Mem * CRS ) ) ,( Min( ACS ,AMS ) / ( FirstVNF_RAM_Server / MDR ) ) ) + ( Min( ( MDR * Const ) ,( FirstVNF_RAM + MRS ) ) - Max( Max( FirstVNF_Mem_Server,RRS ),( MDR / FirstVNF_RAM_Server ) ) ) ) + Min( ( ( ( FirstVNF_Mem_Server * RRS ) / ( DDR * RRS ) ) * ( Min( AMS ,DDR ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,( ( ( PN * FirstVNF_Mem ) * Min( BR ,MDR ) ) * Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,( MRS + ARS ) ) ) ) ) + Min( Min( Min( Min( Min( ACS ,MDR ) ,( CRS / FirstVNF_RAM_Server ) ) ,( ( FirstVNF_CPU + RRS ) / ( FirstVNF_CPU - BR ) ) ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) * Min( AMS ,Const ) ) * ( ( RRS / FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( Const + Const ) ) / Max( Max( DDR,PN ),( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Max( Max( RRS,CRS ),( ACS / RRS ) ) - ( ( CRS / FirstVNF_RAM_Server ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) ) ) ) ,( ( ( ( ( ( ( RRS + BR ) + ( ACS - FirstVNF_RAM_Server ) ) - Min( Min( FirstVNF_CPU_Server ,ACS ) ,( FirstVNF_CPU_Server * BR ) ) ) * ( ( Min( MRS ,RRS ) * ( FirstVNF_RAM * MRS ) ) + Max( ( MDR + FirstVNF_RAM ),Max( FirstVNF_RAM,ACS ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server - ACS ) - ( ARS + FirstVNF_CPU_Server ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / ( CRS + ARS ) ) ) / ( ( ( DDR * AMS ) * ( PN / RRS ) ) * ( ( BR + FirstVNF_RAM_Server ) - Min( BR ,CRS ) ) ) ) ) / ( ( Min( ( ( FirstVNF_Mem_Server - PN ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ,( ( FirstVNF_CPU_Server + BR ) / ( FirstVNF_RAM_Server + PN ) ) ) + ( ( ( FirstVNF_RAM * MDR ) - Min( FirstVNF_CPU_Server ,PN ) ) / ( Max( ACS,FirstVNF_RAM ) - Max( Const,MDR ) ) ) ) + ( ( ( ( BR * RRS ) / ( DDR + ARS ) ) * ( ( MRS / CRS ) - ( DDR / FirstVNF_CPU_Server ) ) ) - ( Max( Min( FirstVNF_CPU_Server ,MRS ),( AMS * MRS ) ) + ( Min( DDR ,AMS ) * ( MDR - FirstVNF_Mem ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_RAM * RRS ) * Min( MRS ,DDR ) ) + ( ( FirstVNF_Mem + PN ) + ( FirstVNF_CPU + DDR ) ) ) * ( ( Min( AMS ,RRS ) - ( ACS / Const ) ) - ( ( BR + MRS ) + Min( ACS ,FirstVNF_Mem_Server ) ) ) ) + ( ( ( Min( RRS ,FirstVNF_Mem_Server ) * Min( AMS ,DDR ) ) - ( ( PN * FirstVNF_Mem_Server ) * ( MRS / Const ) ) ) / ( Min( ( MRS * FirstVNF_RAM ) ,( RRS / FirstVNF_Mem_Server ) ) - ( Max( ARS,ACS ) + ( Const * FirstVNF_RAM_Server ) ) ) ) ) / Min( ( ( ( ( PN / FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * CRS ) ) / Min( Min( MDR ,MDR ) ,( RRS / FirstVNF_CPU ) ) ) / Min( ( ( FirstVNF_RAM / PN ) / Min( FirstVNF_RAM_Server ,MDR ) ) ,( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_CPU_Server * ARS ) ) ) ) ,( Max( Min( ( MDR - FirstVNF_CPU ) ,Min( ARS ,AMS ) ),( ( FirstVNF_RAM / FirstVNF_RAM_Server ) / Min( MDR ,DDR ) ) ) / Max( ( Max( Const,FirstVNF_Mem ) + ( FirstVNF_RAM - FirstVNF_Mem ) ),( ( AMS - ARS ) - ( DDR + FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( Max( ( ( ( ( ( ( MUR + RCSe ) / Max( RCSe,MUR ) ) - ( Min( MUC ,DS ) + ( MUR + RRSe ) ) ) - ( ( Max( MUC,MUM ) - Max( RMSe,RMSe ) ) + ( ( MUC + MLU ) * Max( RMSe,RMSe ) ) ) ) + Min( ( ( Max( MLU,RRSe ) - ( RRSe * CS ) ) * Min( ( RCSe / MUR ) ,( RRSe / MUR ) ) ) ,( ( ( CS * MUC ) + ( MUC * DS ) ) * Min( ( RCSe - MUR ) ,Max( CS,RRSe ) ) ) ) ) * Max( ( ( Min( ( MUR + DS ) ,( MLU + MUC ) ) + ( ( CS - DS ) / ( DS / MUM ) ) ) + ( ( ( MUM + DS ) / Max( RCSe,RRSe ) ) / Min( Min( MUM ,MLU ) ,( DS - RCSe ) ) ) ),( ( Min( Max( MUC,MUM ) ,Max( MUR,MUR ) ) + ( ( MUR * MUM ) / Min( RRSe ,CS ) ) ) - Max( Max( Min( RMSe ,RRSe ),Min( MUM ,RRSe ) ),( Min( RMSe ,MUM ) / ( MUR - CS ) ) ) ) ) ),Max( Min( ( ( ( ( MLU / MLU ) * Max( MUM,CS ) ) * ( Min( RCSe ,CS ) / ( MUM / RRSe ) ) ) * ( ( Max( MUR,RMSe ) - ( MUC / RRSe ) ) * Min( Min( RRSe ,RRSe ) ,Max( MLU,MUM ) ) ) ) ,Max( Max( ( ( CS * MUC ) * ( DS / RRSe ) ),( ( CS - MUM ) / ( MUR / CS ) ) ),Max( ( ( MUM / MUR ) + ( MUR * RRSe ) ),( Max( MUR,RCSe ) - ( MUM / DS ) ) ) ) ),( ( Max( ( ( CS * MUR ) / ( CS / MUM ) ),( Min( CS ,MUM ) - ( MUC + CS ) ) ) / ( Min( ( RMSe / RRSe ) ,Min( MLU ,RMSe ) ) / Max( ( RCSe - MUM ),( MUC - RRSe ) ) ) ) * ( Max( ( ( RMSe - RCSe ) / Max( MLU,MUM ) ),Max( ( CS - CS ),Min( MUC ,DS ) ) ) / ( ( Max( RRSe,MUC ) + ( RRSe * MUR ) ) - ( ( MUR / MUC ) + Min( MLU ,RRSe ) ) ) ) ) ) ) ,( ( ( Max( ( Max( Min( DS ,MUR ),( MLU + CS ) ) * ( ( MUR / MUC ) / ( CS + CS ) ) ),Max( ( ( RCSe / MLU ) / Max( RMSe,RMSe ) ),Min( ( RCSe / MUM ) ,( MUM * MUM ) ) ) ) - ( ( ( ( RCSe * MUC ) - ( MUR - MLU ) ) - ( ( RCSe - MLU ) - ( DS / DS ) ) ) - Max( Max( ( MUM * RCSe ),( DS * RMSe ) ),( Max( CS,MUC ) + ( RRSe * MUR ) ) ) ) ) * ( Min( ( ( ( MLU * RMSe ) / ( MUC + RMSe ) ) + Max( ( CS - MUM ),( MUR - MLU ) ) ) ,Min( ( ( MLU * MUR ) - ( MUM * RMSe ) ) ,Min( ( DS + MUM ) ,( CS * RMSe ) ) ) ) - ( ( ( Min( MUR ,MLU ) / ( MUM + DS ) ) - ( Max( RMSe,MUR ) * ( CS * MUC ) ) ) * Max( ( Min( MUM ,DS ) / Min( RMSe ,MLU ) ),( Min( MUM ,RRSe ) / ( MLU + CS ) ) ) ) ) ) * ( ( ( ( ( Min( MUR ,MLU ) / ( MUR + DS ) ) - ( ( RMSe - DS ) / ( DS / MUM ) ) ) * ( ( Max( CS,RRSe ) - ( CS / MUR ) ) - Min( ( MLU / MLU ) ,( MLU / MLU ) ) ) ) - ( ( Min( ( MUC / CS ) ,Max( MLU,RCSe ) ) + ( ( MLU + DS ) * ( MUC * MUC ) ) ) + ( ( ( MUM + DS ) + Max( MUM,CS ) ) - ( ( MUM / CS ) / Min( MUR ,MUR ) ) ) ) ) + Max( ( Max( ( Max( CS,RRSe ) * Max( MUC,CS ) ),Min( Min( MUC ,CS ) ,( MUC - MLU ) ) ) / Max( ( ( RRSe - DS ) / ( MUC - RMSe ) ),( ( MUM / MUM ) - ( MUM * RCSe ) ) ) ),Min( ( ( Max( RMSe,MUR ) - ( MUR + MUM ) ) - ( ( DS + DS ) * ( RRSe - RRSe ) ) ) ,( ( ( CS + MUM ) + ( RRSe - MLU ) ) - ( ( CS * DS ) - ( MUC * RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6958333333333333, "obj2": 0.13463464386974566}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( PN + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( MUR + RRSe ) + ( ( ( DS - MLU ) + Max( CS,CS ) ) - MUR ) ) )", "obj1": 0.49375, "obj2": 0.3199582613307445}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ACS + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.95625, "obj2": 0.020042110391609847}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - ( MLU / MUC ) ) * DS ) * ( DS * RRSe ) )", "obj1": 0.625, "obj2": 0.19771928591105337}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6708333333333333, "obj2": 0.17004062374625314}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem * ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( MLU ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5538021981261074}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( Min( DS ,RMSe ) - ( MUR / DS ) ) )", "obj1": 0.4125, "obj2": 0.4214103267220966}, {"determining": "( ( ( AMS / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.40625, "obj2": 0.47751295482132516}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MLU / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5269509241964644}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.59375, "obj2": 0.2321912611969969}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.425, "obj2": 0.4042392239895282}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( BR - CRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * MLU ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4375, "obj2": 0.36393038319502774}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( MLU ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + ( Min( DS ,MUR ) + Min( MLU ,RCSe ) ) ) )", "obj1": 0.5520833333333334, "obj2": 0.28040670887645447}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) - Min( ( RMSe / MUC ) ,( RCSe * RRSe ) ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * CS ) )", "obj1": 0.9166666666666666, "obj2": 0.036237525977420526}, {"determining": "( ( ( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.725, "obj2": 0.13206954915252833}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.53125, "obj2": 0.31598495237267415}, {"determining": "( ( ( AMS / AMS ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( MUM * RCSe ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.975, "obj2": 0.009952140370530837}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.74375, "obj2": 0.11672550095218905}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46458333333333335, "obj2": 0.34042803190343696}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RMSe ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.54375, "obj2": 0.30438363815364367}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( ACS / CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.65625, "obj2": 0.1738435156576077}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM_Server ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),ACS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( Min( DS ,CS ) ,( RRSe * RRSe ) ) ),MUC ) ,( RRSe / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.56875, "obj2": 0.26131090999859446}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( MRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.63125, "obj2": 0.18786585727166538}, {"determining": "Max( ( MDR + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( ( MLU + Max( RMSe,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.2708333333333333, "obj2": 0.6000382820214935}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5060852332997574}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.0653485440295118}, {"determining": "( ( ( Const / ARS ) - Min( AMS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / RRS ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MLU,MUC ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.29791666666666666, "obj2": 0.5642869270059045}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.25833333333333336, "obj2": 0.6094025332114873}, {"determining": "( ( ( AMS / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.39375, "obj2": 0.4865739894696774}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5791666666666667, "obj2": 0.2526136069129585}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( ( MUC / Max( RMSe,RCSe ) ) ,Max( MUC,RRSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.27708333333333335, "obj2": 0.580177158064469}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( MLU / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4395833333333333, "obj2": 0.35096331125204555}, {"determining": "Min( ( ( DDR + ( BR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.36875, "obj2": 0.5095907210168377}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6300136273444964}, {"determining": "( ( ( Const / ARS ) - Min( MRS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MLU / MUC ) ) ) * ( ( DS - MLU ) + ( MLU + DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.574542672445065}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.45625, "obj2": 0.3435133853908485}, {"determining": "( ( ( AMS / AMS ) - Min( PN ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( MUM * RCSe ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.7958333333333333, "obj2": 0.0846498526118976}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.07418970638863552}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - CRS ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7583333333333333, "obj2": 0.10465310225503946}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR * MRS ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MLU ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8125, "obj2": 0.07599741927862397}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( AMS * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / ( ( RRSe - MUM ) + ( MUM * RCSe ) ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( RRSe - MUM ) ) )", "obj1": 0.775, "obj2": 0.09836358211537287}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_Mem - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( RRS * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,CS ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( RCSe * DS ) )", "obj1": 0.41875, "obj2": 0.41609744029121387}, {"determining": "Max( Min( FirstVNF_RAM ,CRS ),Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24166666666666667, "obj2": 0.6152319315208641}, {"determining": "Min( ( Const + Const ) ,( ( ( Const + MDR ) + Min( ACS ,CRS ) ) - Const ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( Min( ( RMSe / RMSe ) ,( RCSe - RRSe ) ),RCSe ) - Min( CS ,RMSe ) ) ) ) ) )", "obj1": 0.35625, "obj2": 0.5178135057557676}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.7895833333333333, "obj2": 0.08922586327330438}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( BR - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / Const ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) + ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * ( ( DS - MLU ) + ( CS + DS ) ) ) )", "obj1": 0.5875, "obj2": 0.2387207045697853}], "14": [{"determining": "( Min( ( ACS / AMS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) - Min( ( RMSe / MUC ) ,( RCSe * RRSe ) ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * CS ) )", "obj1": 0.9166666666666666, "obj2": 0.036237525977420526}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MLU / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5269509241964644}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem * ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( MLU ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5538021981261074}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6, "obj2": 0.23163050049512454}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.425, "obj2": 0.4042392239895282}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( BR - CRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * MLU ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4375, "obj2": 0.36393038319502774}, {"determining": "( ( ( AMS / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.40625, "obj2": 0.47751295482132516}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.625, "obj2": 0.19086395636622025}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( CS,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4083333333333333, "obj2": 0.43418399393753077}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.53125, "obj2": 0.31598495237267415}, {"determining": "( ( ( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6916666666666667, "obj2": 0.15247421384122017}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RMSe ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.54375, "obj2": 0.30438363815364367}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( PN + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( MUR + RRSe ) + ( ( ( DS - MLU ) + Max( CS,CS ) ) - MUR ) ) )", "obj1": 0.49375, "obj2": 0.3199582613307445}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6300136273444964}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( MLU ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + ( Min( DS ,MUR ) + Min( MLU ,RCSe ) ) ) )", "obj1": 0.5520833333333334, "obj2": 0.28040670887645447}, {"determining": "Max( ( MDR + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( ( MLU + Max( RMSe,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.2708333333333333, "obj2": 0.6000382820214935}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.66875, "obj2": 0.16610713987342235}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( ACS / CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.65625, "obj2": 0.1738435156576077}, {"determining": "Min( ( Const + Const ) ,( ( ( Const + MDR ) + Min( ACS ,CRS ) ) - Const ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( Min( ( RMSe / RMSe ) ,( RCSe - RRSe ) ),RCSe ) - Min( CS ,RMSe ) ) ) ) ) )", "obj1": 0.35625, "obj2": 0.5178135057557676}, {"determining": "( ( ( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.725, "obj2": 0.13206954915252833}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( MRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.63125, "obj2": 0.18786585727166538}, {"determining": "( ( ( Const / ARS ) - Min( AMS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / RRS ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MLU,MUC ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.29791666666666666, "obj2": 0.5642869270059045}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5791666666666667, "obj2": 0.2526136069129585}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( DS * RRSe ) * DS ) )", "obj1": 0.7270833333333333, "obj2": 0.11398364639384978}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( ( MUC / Max( RMSe,RCSe ) ) ,Max( MUC,RRSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.27708333333333335, "obj2": 0.580177158064469}, {"determining": "( ( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) - Const ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / ( MUR / CS ) ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.48125, "obj2": 0.3247776516314376}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( MLU / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4395833333333333, "obj2": 0.35096331125204555}, {"determining": "Min( ( ( DDR + ( BR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.36875, "obj2": 0.5095907210168377}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - CRS ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7583333333333333, "obj2": 0.10465310225503946}, {"determining": "( ( ( Const / ARS ) - Min( MRS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MLU / MUC ) ) ) * ( ( DS - MLU ) + ( MLU + DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.574542672445065}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.25833333333333336, "obj2": 0.6094025332114873}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( ( MDR + CRS ) ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),( ( DS - MLU ) + Max( CS,DS ) ) ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5625, "obj2": 0.2711723518057113}, {"determining": "( ( ( AMS / AMS ) - Min( PN ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( MUM * RCSe ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.7958333333333333, "obj2": 0.0846498526118976}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM_Server ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),ACS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( Min( DS ,CS ) ,( RRSe * RRSe ) ) ),MUC ) ,( RRSe / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.56875, "obj2": 0.26131090999859446}, {"determining": "Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( ACS ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5060852332997574}, {"determining": "( ( ( AMS / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.39375, "obj2": 0.4865739894696774}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) ) - ( ( MUC / MUC ) + Max( ( MLU / Min( ( MLU / RMSe ) ,( RRSe * RRSe ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.99375, "obj2": 0.004543679981498225}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4666666666666667, "obj2": 0.33390570837751454}, {"determining": "Max( Min( FirstVNF_RAM ,CRS ),Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24166666666666667, "obj2": 0.6152319315208641}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR * MRS ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MLU ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8125, "obj2": 0.07599741927862397}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( MLU ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + ( Min( DS ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.49513978469010367}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_Mem - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( RRS * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,CS ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( RCSe * DS ) )", "obj1": 0.41875, "obj2": 0.41609744029121387}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - ( MLU / MUC ) ) * DS ) * ( DS * RRSe ) )", "obj1": 0.7, "obj2": 0.13309770566991067}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.45625, "obj2": 0.3435133853908485}], "15": [{"determining": "( Min( ( ACS / AMS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) + ( CS + DS ) ) ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS / AMS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( MLU / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8729166666666667, "obj2": 0.05079481085708758}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MLU / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5269509241964644}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem * ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( MLU ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5538021981261074}, {"determining": "( ( ( AMS / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) - Min( FirstVNF_RAM_Server ,MRS ) ) - ( ( ( FirstVNF_RAM_Server / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC + MUC ) + Min( MUC ,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.39375, "obj2": 0.4686969345825648}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( BR - CRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * MLU ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4375, "obj2": 0.36393038319502774}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR - FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( DS + DS ) ) )", "obj1": 0.6041666666666666, "obj2": 0.220079398175386}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.53125, "obj2": 0.31598495237267415}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( DS * RRSe ) * DS ) )", "obj1": 0.7270833333333333, "obj2": 0.11398364639384978}, {"determining": "( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9229166666666667, "obj2": 0.034551687100003184}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - ( MLU / MUC ) ) * DS ) * ( DS * RRSe ) )", "obj1": 0.7, "obj2": 0.13309770566991067}, {"determining": "( ( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7645833333333333, "obj2": 0.09683776072295143}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( PN + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( MUR + RRSe ) + ( ( ( DS - MLU ) + Max( CS,CS ) ) - MUR ) ) )", "obj1": 0.49375, "obj2": 0.3199582613307445}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( ACS / CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.65625, "obj2": 0.1738435156576077}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.625, "obj2": 0.19086395636622025}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.4021747523209139}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6300136273444964}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - CRS ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7583333333333333, "obj2": 0.10465310225503946}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( DDR,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4, "obj2": 0.4404400762022201}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( MLU ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + ( Min( DS ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.49513978469010367}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( Min( AMS ,MRS ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) - Min( ( MLU / RMSe ) ,( RRSe * RRSe ) ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * CS ) )", "obj1": 0.9083333333333333, "obj2": 0.04003615374163565}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_Mem - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( RRS * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,CS ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( RCSe * DS ) )", "obj1": 0.41875, "obj2": 0.41609744029121387}, {"determining": "Min( ( Const + Const ) ,( ( ( Const + MDR ) + Min( ACS ,CRS ) ) - Const ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( MUC * ( RRSe / CS ) ) + ( Max( Min( ( RMSe / RMSe ) ,( RCSe - RRSe ) ),RCSe ) - Min( CS ,RMSe ) ) ) ) ) )", "obj1": 0.35625, "obj2": 0.5178135057557676}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUC + MUC ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( DS * RRSe ) * DS ) )", "obj1": 0.7125, "obj2": 0.12079387894828258}, {"determining": "( ( ( AMS / AMS ) - Min( PN ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( MUM * RCSe ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.7958333333333333, "obj2": 0.0846498526118976}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR * MRS ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MLU ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8125, "obj2": 0.07599741927862397}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( DS / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6854166666666667, "obj2": 0.1507740921874787}, {"determining": "( ( ( Const / ARS ) - Min( AMS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / RRS ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MLU,MUC ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.29791666666666666, "obj2": 0.5642869270059045}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( CS,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4083333333333333, "obj2": 0.43418399393753077}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4625, "obj2": 0.32490056912756177}, {"determining": "Max( ( MDR + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( ( MLU + Max( RMSe,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.2708333333333333, "obj2": 0.6000382820214935}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RMSe ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.54375, "obj2": 0.30438363815364367}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.5916666666666667, "obj2": 0.24462198142697275}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( ( MUC / Max( RMSe,RCSe ) ) ,Max( MUC,RRSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.27708333333333335, "obj2": 0.580177158064469}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.18658745125553503}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) - ( ACS * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 0.59375, "obj2": 0.2238211956971403}, {"determining": "( ( ( Const / ARS ) - Min( MRS ,MRS ) ) - ( ( RRS + PN ) / ( ( ( ( PN * MDR ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) / Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MLU / MUC ) ) ) * ( ( DS - MLU ) + ( MLU + DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.574542672445065}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.45625, "obj2": 0.3435133853908485}, {"determining": "( ( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) - Const ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / ( MUR / CS ) ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.48125, "obj2": 0.3247776516314376}, {"determining": "( ( ( AMS / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUM ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9875, "obj2": 0.01393531318039342}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.29201770267930344}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.66875, "obj2": 0.16610713987342235}, {"determining": "Min( ( ( DDR + ( BR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.36875, "obj2": 0.5095907210168377}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM_Server ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),ACS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( Min( DS ,CS ) ,( RRSe * RRSe ) ) ),MUC ) ,( RRSe / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.56875, "obj2": 0.26131090999859446}, {"determining": "Max( Min( FirstVNF_RAM ,CRS ),Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24166666666666667, "obj2": 0.6152319315208641}], "16": [{"determining": "( ( RRS - DDR ) - ( ( FirstVNF_Mem + PN ) - ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( RMSe * ( MUM / RCSe ) ) - ( Min( DS ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ACS / AMS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) + ( CS + DS ) ) ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MLU / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5269509241964644}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem * ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( MLU ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5538021981261074}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( AMS / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) - Min( FirstVNF_RAM_Server ,MRS ) ) - ( ( ( FirstVNF_RAM_Server / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC + MUC ) + Min( MUC ,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.39375, "obj2": 0.4686969345825648}, {"determining": "Max( ( MDR + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ACS ) ) )", "choosing": "( ( MLU + Max( RMSe,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( DS - MLU ) + Max( CS,DS ) ) - MUR ) ) )", "obj1": 0.2708333333333333, "obj2": 0.6000382820214935}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( BR - CRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * MLU ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4375, "obj2": 0.36393038319502774}, {"determining": "( ( ( AMS / AMS ) - Min( PN ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( MLU + Max( MUM,RCSe ) ) / ( MUM * RCSe ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.7958333333333333, "obj2": 0.0846498526118976}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Max( ( MUR / CS ),( MUR * MLU ) ) + ( ( MUR * MUC ) * ( Min( MLU ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,MUR ) ) ) ) ) * ( ( DS - Min( RMSe ,DS ) ) + ( Min( DS ,MUR ) + Min( MUC ,RCSe ) ) ) )", "obj1": 0.38958333333333334, "obj2": 0.49513978469010367}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.29201770267930344}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_CPU_Server ) * Min( MDR ,Max( ( RRS - DDR ),( ACS * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUM + ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5833333333333334, "obj2": 0.23255721436459337}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( Max( MUR,CS ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.53125, "obj2": 0.31598495237267415}, {"determining": "( ( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7645833333333333, "obj2": 0.09683776072295143}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.625, "obj2": 0.19086395636622025}, {"determining": "( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9229166666666667, "obj2": 0.034551687100003184}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR * FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.2, "obj2": 0.6743782196235166}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( PN + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( MUR + RRSe ) + ( ( ( DS - MLU ) + Max( CS,CS ) ) - MUR ) ) )", "obj1": 0.49375, "obj2": 0.3199582613307445}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "Max( Min( FirstVNF_RAM ,CRS ),Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24166666666666667, "obj2": 0.6152319315208641}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( DS * RRSe ) * Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ) )", "obj1": 0.5666666666666667, "obj2": 0.26173654358777504}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( Min( AMS ,MRS ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( ( ( MUM * MUC ) * ( RMSe * RMSe ) ),Min( ( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) - Min( ( MLU / RMSe ) ,( RRSe * RRSe ) ) ) - MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * CS ) )", "obj1": 0.9083333333333333, "obj2": 0.04003615374163565}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( ( ( ( RRSe - CS ) * ( MUM * RCSe ) ) - ( MLU / MUC ) ) ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7520833333333333, "obj2": 0.10417495372558198}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + Max( DS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4, "obj2": 0.43508265694422404}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUC + MUC ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( DS * RRSe ) * DS ) )", "obj1": 0.7125, "obj2": 0.12079387894828258}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.43125, "obj2": 0.395459065104158}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_RAM_Server ,MRS ) ) - ( ( DDR + ( ( AMS / BR ) - Min( AMS ,MRS ) ) ) - ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( DDR,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( ( MUR * DS ) ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ,RCSe ) ) - Min( Max( ( MLU / ( ( DS / RMSe ) + ( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8625, "obj2": 0.06232144214040775}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM_Server ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),ACS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( Min( DS ,CS ) ,( RRSe * RRSe ) ) ),MUC ) ,( RRSe / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.56875, "obj2": 0.26131090999859446}, {"determining": "( ( ( AMS / AMS ) - FirstVNF_RAM ) - ( ( ( Const / AMS ) - CRS ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( ACS - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( MLU + DS ) ) )", "obj1": 0.98125, "obj2": 0.006834299686484261}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6300136273444964}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.875, "obj2": 0.04810504492814852}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4625, "obj2": 0.32490056912756177}, {"determining": "Min( ( ( DDR + ( BR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.36875, "obj2": 0.5095907210168377}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RMSe ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.54375, "obj2": 0.30438363815364367}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( ( MUC / Max( RMSe,RCSe ) ) ,Max( MUC,RRSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.27708333333333335, "obj2": 0.580177158064469}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.45, "obj2": 0.34879988527202427}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + Min( MDR ,( ( RRS - DDR ) - ( ACS * FirstVNF_RAM_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,DS ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.35625, "obj2": 0.5157166844395472}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_Mem - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( RRS * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,CS ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( RCSe * DS ) )", "obj1": 0.41875, "obj2": 0.41609744029121387}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( ( DS / MUC ) + Max( MUC,MUR ) ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6854166666666667, "obj2": 0.1507740921874787}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.45625, "obj2": 0.3435133853908485}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUM ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6958333333333333, "obj2": 0.1324384157928133}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( ( ( Const + Const ) + Min( ACS ,CRS ) ) - Const ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / ( MUR / CS ) ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.48125, "obj2": 0.3247776516314376}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( ACS - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * MLU ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( DS * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7291666666666666, "obj2": 0.11373188866610937}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_CPU_Server ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.8145833333333333, "obj2": 0.0738029320789822}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.42916666666666664, "obj2": 0.4021747523209139}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6791666666666667, "obj2": 0.16415631394800131}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( PN * FirstVNF_RAM_Server ) ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.18207562107408995}], "17": [{"determining": "( ( ( AMS / AMS ) - Max( PN,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) ) )", "choosing": "( ( ( Min( RMSe ,RCSe ) / Max( RMSe,CS ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) + Max( MUM,RCSe ) ) / ( MUM * RCSe ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - DDR ) - ( ( FirstVNF_Mem + PN ) - ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( RMSe * ( MUM / RCSe ) ) - ( Min( DS ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Min( MUC ,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.38333333333333336, "obj2": 0.43097796028729707}, {"determining": "Min( ( ( DDR + ( BR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.36875, "obj2": 0.5095907210168377}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem * ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( MLU ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5538021981261074}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.625, "obj2": 0.19086395636622025}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4, "obj2": 0.39647818095592224}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MLU / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5269509241964644}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUC + MUC ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * CS )", "obj1": 0.7958333333333333, "obj2": 0.08109831151508722}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( DS ,RMSe ) - Min( ( MUC / Max( RMSe,RCSe ) ) ,Max( MUC,RRSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.27708333333333335, "obj2": 0.580177158064469}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.43125, "obj2": 0.395459065104158}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( BR - CRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * MLU ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4375, "obj2": 0.36393038319502774}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.29201770267930344}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "Max( Min( FirstVNF_RAM ,CRS ),Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24166666666666667, "obj2": 0.6152319315208641}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR * FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.2, "obj2": 0.6743782196235166}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_CPU_Server ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.8145833333333333, "obj2": 0.0738029320789822}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6300136273444964}, {"determining": "( ( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7645833333333333, "obj2": 0.09683776072295143}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_CPU_Server ) * Min( MDR ,Max( ( RRS - DDR ),( ACS * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUM + ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5833333333333334, "obj2": 0.23255721436459337}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( DS * RRSe ) * Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ) )", "obj1": 0.5666666666666667, "obj2": 0.26173654358777504}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( PN * FirstVNF_Mem ) ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.18169651066777537}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM_Server ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),ACS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( Min( DS ,CS ) ,( RRSe * RRSe ) ) ),MUC ) ,( RRSe / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.56875, "obj2": 0.26131090999859446}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5458333333333333, "obj2": 0.29731824313082833}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( PN + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( MUR + RRSe ) + ( ( ( DS - MLU ) + Max( CS,CS ) ) - MUR ) ) )", "obj1": 0.49375, "obj2": 0.3199582613307445}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + Max( DS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5083333333333333, "obj2": 0.3006979509593119}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.2625, "obj2": 0.6028364549855136}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_RAM_Server ,MRS ) ) - ( ( DDR + ( ( AMS / BR ) - Min( AMS ,MRS ) ) ) - ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( DDR,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( ( MUR * DS ) ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ,RCSe ) ) - Min( Max( ( MLU / ( ( DS / RMSe ) + ( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8625, "obj2": 0.06232144214040775}, {"determining": "( ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Const ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM * ( RMSe / RMSe ) ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RMSe ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.6770833333333334, "obj2": 0.15681218482949458}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8791666666666667, "obj2": 0.046301089064988823}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46875, "obj2": 0.32141357822099137}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( Min( AMS ,MRS ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.03763036632445879}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( ACS * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5875, "obj2": 0.2281230828063581}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( PN * FirstVNF_RAM_Server ) ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.66875, "obj2": 0.17020994555105567}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.45625, "obj2": 0.3435133853908485}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( ( ( ( RRSe - CS ) * ( MUM * RCSe ) ) - ( MLU / MUC ) ) ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7520833333333333, "obj2": 0.10417495372558198}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,PN ) ) ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( ( ( ( DS - MLU ) + ( CS + DS ) ) - ( MLU / MUC ) ) ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7375, "obj2": 0.11073106183125336}, {"determining": "( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( AMS ,MRS ) ) ) / MDR ) ) )", "choosing": "( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.94375, "obj2": 0.028677569833397164}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( Min( MLU ,( MUR / DS ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4979166666666667, "obj2": 0.30374559338144885}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + Min( MDR ,( ( RRS - DDR ) - ( ACS * FirstVNF_RAM_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,DS ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.35625, "obj2": 0.5157166844395472}, {"determining": "( ( ( AMS / AMS ) - FirstVNF_RAM ) - ( ( ( Const / AMS ) - CRS ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( ACS - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( MLU + DS ) ) )", "obj1": 0.98125, "obj2": 0.006834299686484261}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( Max( FirstVNF_Mem,PN ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC + MUC ) + Max( ( Min( DS ,RMSe ) - ( DS - MLU ) ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6604166666666667, "obj2": 0.17339535396715458}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ,AMS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( Max( MUR,( MUM - RCSe ) ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.4479166666666667, "obj2": 0.3506719377123797}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.35208333333333336, "obj2": 0.5218701564997091}, {"determining": "( ( ( AMS / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / Max( ( MDR + CRS ),( FirstVNF_Mem + ( FirstVNF_CPU_Server + ACS ) ) ) ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( ( ( DS - MLU ) + Max( CS,DS ) ) - MLU ) + ( CS + DS ) ) )", "obj1": 0.27291666666666664, "obj2": 0.5895181619723595}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - DDR ),( PN * FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUC + MUC ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + ( DS - MLU ) ) * ( ( DS * RRSe ) * DS ) )", "obj1": 0.725, "obj2": 0.11541310562045824}], "18": [{"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const + FirstVNF_Mem ) + Min( ACS ,ACS ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) + DS ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Max( PN,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) ) )", "choosing": "( ( ( Min( RMSe ,RCSe ) / Max( RMSe,CS ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) + Max( MUM,RCSe ) ) / ( MUM * RCSe ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( FirstVNF_Mem * ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) ) )", "choosing": "( ( Min( MLU ,RMSe ) - ( ( MUC + MUC ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5538021981261074}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Min( MUC ,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.38333333333333336, "obj2": 0.43097796028729707}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.38125, "obj2": 0.5009171840989772}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MLU / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5269509241964644}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.29201770267930344}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.43125, "obj2": 0.395459065104158}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( Min( AMS ,MRS ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.03763036632445879}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4, "obj2": 0.39647818095592224}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( AMS / AMS ) - FirstVNF_RAM ) - ( ( ( Const / AMS ) - CRS ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( ACS - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( MLU + DS ) ) )", "obj1": 0.98125, "obj2": 0.006834299686484261}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( PN + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( MUR + RRSe ) + ( ( ( DS - MLU ) + Max( CS,CS ) ) - MUR ) ) )", "obj1": 0.28125, "obj2": 0.5747296784672123}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR * FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.2, "obj2": 0.6743782196235166}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8791666666666667, "obj2": 0.046301089064988823}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) - Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23125, "obj2": 0.6259343550872128}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( BR - CRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * MLU ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4375, "obj2": 0.36393038319502774}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - DDR ),( PN * FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUC + MUC ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + ( DS - MLU ) ) * ( ( DS * RRSe ) * DS ) )", "obj1": 0.725, "obj2": 0.11541310562045824}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( Min( DS ,CS ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.69375, "obj2": 0.13543373129040695}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4200208795047962}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.625, "obj2": 0.19086395636622025}, {"determining": "( ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Const ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM * ( RMSe / RMSe ) ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RMSe ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.6770833333333334, "obj2": 0.15681218482949458}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * ( MUM * RCSe ) ) ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7, "obj2": 0.12747938786732346}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,Min( ACS ,CRS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( ( Min( RMSe ,MUM ) / ( MUC + MUC ) ) / MUC ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( DS * RRSe ) * Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ) )", "obj1": 0.5604166666666667, "obj2": 0.26819169901344236}, {"determining": "( ( ( AMS / AMS ) - Max( ( AMS / AMS ),MDR ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( MLU - ( MUR / DS ) ) - RMSe ) - ( Max( MUR,CS ) + Max( DS,MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.294596025703058}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( PN + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( MUR + RRSe ) + ( ( ( DS - MLU ) + Max( CS,CS ) ) - MUR ) ) )", "obj1": 0.49375, "obj2": 0.3199582613307445}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_CPU_Server ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.8145833333333333, "obj2": 0.0738029320789822}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( ( MUC / MUC ) + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.93125, "obj2": 0.03405056215238749}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5791666666666667, "obj2": 0.2556618149111627}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7479166666666667, "obj2": 0.10215290056182255}, {"determining": "Min( ( ( DDR + ( BR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.36875, "obj2": 0.5095907210168377}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + Min( AMS ,MRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_RAM_Server ) * Min( BR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe + MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( RRSe + MUC ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * CS )", "obj1": 0.7875, "obj2": 0.0838663948046297}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_CPU_Server ) * Min( MDR ,Max( ( RRS - DDR ),( ACS * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUM + ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5833333333333334, "obj2": 0.23255721436459337}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,PN ) ) ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( ( ( ( DS - MLU ) + ( CS + DS ) ) - ( MLU / MUC ) ) ,RMSe ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7375, "obj2": 0.11073106183125336}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46875, "obj2": 0.32141357822099137}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( Min( MLU ,( MUR / DS ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4979166666666667, "obj2": 0.30374559338144885}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_RAM_Server ,MRS ) ) - ( ( DDR + ( ( AMS / BR ) - Min( AMS ,MRS ) ) ) - ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( DDR,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( ( MUR * DS ) ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ,RCSe ) ) - Min( Max( ( MLU / ( ( DS / RMSe ) + ( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8625, "obj2": 0.06232144214040775}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,( DDR * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Min( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ,MUC ) ,( MLU / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.8666666666666667, "obj2": 0.06023801188891708}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( PN * FirstVNF_Mem ) ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.64375, "obj2": 0.1868134120846091}, {"determining": "( ( FirstVNF_RAM - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( AMS ,MRS ) ) ) / MDR ) ) )", "choosing": "( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.94375, "obj2": 0.028677569833397164}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( Max( ( RRS / DDR ),Min( MDR ,Max( ( RRS - BR ),Min( AMS ,MRS ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * Min( CS ,RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUC + MUC ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7708333333333334, "obj2": 0.09446278308636412}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + Min( MDR ,( ( RRS - DDR ) - ( ACS * FirstVNF_RAM_Server ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,DS ) - ( ( MUC / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.35625, "obj2": 0.5157166844395472}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.35208333333333336, "obj2": 0.5218701564997091}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ACS - FirstVNF_Mem ) ) + ( MDR * Min( MDR ,Max( ( RRS - DDR ),ACS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUC * RCSe ) ) - Max( Min( ( RCSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) + DS ) * ( DS * DS ) )", "obj1": 0.25625, "obj2": 0.6125255532573773}, {"determining": "( ( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7645833333333333, "obj2": 0.09683776072295143}, {"determining": "Max( Min( FirstVNF_RAM ,CRS ),Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24166666666666667, "obj2": 0.6152319315208641}], "19": [{"determining": "( ( ( AMS / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( BR ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( ( Const + FirstVNF_Mem ) + Min( ACS ,ACS ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) + DS ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( BR - CRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * MLU ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4375, "obj2": 0.36393038319502774}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Min( MUC ,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.38333333333333336, "obj2": 0.43097796028729707}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_Mem ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.38125, "obj2": 0.5009171840989772}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( PN + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( MUR + RRSe ) + ( ( ( DS - MLU ) + Max( CS,CS ) ) - MUR ) ) )", "obj1": 0.28125, "obj2": 0.5747296784672123}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( AMS ,MRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4666666666666667, "obj2": 0.32341522719703025}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.43125, "obj2": 0.395459065104158}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.625, "obj2": 0.19086395636622025}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_CPU_Server ) * Min( MDR ,Max( ( RRS - DDR ),( ACS * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUM + ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5833333333333334, "obj2": 0.23255721436459337}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4, "obj2": 0.39647818095592224}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR * FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.2, "obj2": 0.6743782196235166}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5420388856644841}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) - Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23125, "obj2": 0.6259343550872128}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / ( PN * FirstVNF_Mem ) ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( RRSe - MUM ) * ( MUM * ( RMSe / RMSe ) ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.55, "obj2": 0.2855436359593732}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( Min( DS ,CS ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.69375, "obj2": 0.13543373129040695}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4200208795047962}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MLU / MUC ) / Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.33958333333333335, "obj2": 0.5269509241964644}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( PN * ( FirstVNF_Mem + PN ) ) ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( ( MUR + RRSe ) / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6541666666666667, "obj2": 0.18092006766634858}, {"determining": "( ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6729166666666667, "obj2": 0.16036943381296787}, {"determining": "Min( ( ( DDR + ( BR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.36875, "obj2": 0.5095907210168377}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - DDR ),( PN * FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUC + MUC ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + ( DS - MLU ) ) * ( ( DS * RRSe ) * DS ) )", "obj1": 0.725, "obj2": 0.11541310562045824}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.31114170736473}, {"determining": "( ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Const ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM * ( RMSe / RMSe ) ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RMSe ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.6770833333333334, "obj2": 0.15681218482949458}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( PN + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( MUR + RRSe ) + ( ( ( DS - MLU ) + Max( CS,CS ) ) - MUR ) ) )", "obj1": 0.3458333333333333, "obj2": 0.5140271590656794}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5791666666666667, "obj2": 0.2556618149111627}, {"determining": "( ( ( AMS / AMS ) - FirstVNF_RAM ) - ( ( ( Const / AMS ) - CRS ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( ACS - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,( ( RRS - DDR ) * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( MLU + DS ) ) )", "obj1": 0.98125, "obj2": 0.006834299686484261}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,Min( ACS ,CRS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( ( Min( RMSe ,MUM ) / ( MUC + MUC ) ) / MUC ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( DS * RRSe ) * Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ) )", "obj1": 0.5604166666666667, "obj2": 0.26819169901344236}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( Min( MLU ,( MUR / DS ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4979166666666667, "obj2": 0.30374559338144885}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUR ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5472369171928663}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( Min( AMS ,MRS ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.03763036632445879}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.24791666666666667, "obj2": 0.6140500159173073}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),Min( AMS ,MRS ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7041666666666667, "obj2": 0.12578075015904575}, {"determining": "( Min( ( AMS / AMS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / MUM ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.525, "obj2": 0.2883025111754553}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * Min( MDR ,Max( Min( AMS ,MRS ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * ( MUM * RCSe ) ) ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7354166666666667, "obj2": 0.10942414787650467}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( DDR,( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RRSe * RRSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.94375, "obj2": 0.025583343482484974}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8791666666666667, "obj2": 0.046211790003487976}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + ( BR - CRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.29375, "obj2": 0.5567687838464559}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_CPU_Server ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.8145833333333333, "obj2": 0.0738029320789822}, {"determining": "( ( ( AMS / AMS ) - Max( ( AMS / AMS ),MDR ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( MLU - ( MUR / DS ) ) - RMSe ) - ( Max( MUR,CS ) + Max( DS,MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.294596025703058}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),Min( AMS ,MRS ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) + Max( MUM,RCSe ) ) / ( MUM * RCSe ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.7916666666666666, "obj2": 0.08260432645499659}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,( DDR * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( ( MUR / DS ) ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ,RCSe ) ) - Min( Max( ( MLU / ( ( DS / RMSe ) + ( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8625, "obj2": 0.06208513875702818}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5645833333333333, "obj2": 0.2587092626699315}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * MLU ) ) - Min( Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8125, "obj2": 0.0764405059231213}], "20": [{"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * ACS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,MUM ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( BR ,CRS ) ) - ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( MLU * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUR * RCSe ) ) ) )", "obj1": 0.38125, "obj2": 0.48859700447917576}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,AMS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.32916666666666666, "obj2": 0.4932570849626489}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Min( MUC ,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.38333333333333336, "obj2": 0.43097796028729707}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),Min( AMS ,MRS ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7708333333333334, "obj2": 0.09446278308636412}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_CPU_Server ) * Min( MDR ,Max( ( RRS - DDR ),( ACS * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUM + ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5833333333333334, "obj2": 0.23255721436459337}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( Min( AMS ,MRS ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.9, "obj2": 0.03763036632445879}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.625, "obj2": 0.19086395636622025}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) - Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23125, "obj2": 0.6259343550872128}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.5420388856644841}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( PN + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MLU + Max( MUM,RCSe ) ) / ( ( MUR + RRSe ) + ( ( ( DS - MLU ) + Max( CS,CS ) ) - MUR ) ) )", "obj1": 0.28125, "obj2": 0.5747296784672123}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4, "obj2": 0.39647818095592224}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,Min( ACS ,CRS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5625, "obj2": 0.2534687006891899}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) / ( ( ( ( PN - FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,( DDR * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( ( MUR / DS ) ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ,RCSe ) ) - Min( Max( ( MLU / ( ( DS / RMSe ) + ( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8625, "obj2": 0.06208513875702818}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR * FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.2, "obj2": 0.6743782196235166}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),Min( AMS ,MRS ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,RCSe ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) + Max( MUM,RCSe ) ) / ( MUM * RCSe ) ) ) ) + Min( Max( MUR,MUR ) ,( RCSe * CS ) ) ) )", "obj1": 0.7916666666666666, "obj2": 0.08260432645499659}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / ( PN * FirstVNF_Mem ) ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( RRSe - MUM ) * ( MUM * ( RMSe / RMSe ) ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.55, "obj2": 0.2855436359593732}, {"determining": "( ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - DDR ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Const ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.026154975595403102}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4200208795047962}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.43125, "obj2": 0.395459065104158}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),Min( AMS ,MRS ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.7375, "obj2": 0.10724088852383684}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( ( ( RRSe - CS ) * ( MUM * RCSe ) ) ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.2916666666666667, "obj2": 0.5552038572992343}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.31114170736473}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( PN * ( FirstVNF_Mem + PN ) ) ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( ( MUR + RRSe ) / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6541666666666667, "obj2": 0.18092006766634858}, {"determining": "( Min( ( AMS / AMS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / MUM ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.525, "obj2": 0.2883025111754553}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,Min( ACS ,CRS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( ( Min( RMSe ,MUM ) / ( MUC + MUC ) ) / MUC ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( DS * RRSe ) * Max( ( MLU / Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ) )", "obj1": 0.5604166666666667, "obj2": 0.26819169901344236}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - DDR ),( PN * FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUC + MUC ) ) / MUC ),MUC ) ,( MUR + DS ) ) ) + ( DS - MLU ) ) * ( ( DS * RRSe ) * DS ) )", "obj1": 0.725, "obj2": 0.11541310562045824}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,DS ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.26666666666666666, "obj2": 0.5905295260640779}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * CRS ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.43333333333333335, "obj2": 0.37733293054262784}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / MRS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) / Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6645833333333333, "obj2": 0.16298042520873385}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( PN * ( FirstVNF_Mem + PN ) ) ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.6895833333333333, "obj2": 0.15643699526773513}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MLU - ( MUR / DS ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.1826865129467387}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( AMS ,MRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4666666666666667, "obj2": 0.32341522719703025}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUR ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5472369171928663}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.45625, "obj2": 0.3298916683001598}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_CPU_Server ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.8145833333333333, "obj2": 0.0738029320789822}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( CS - RCSe ) ) - ( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) + ( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7041666666666667, "obj2": 0.12491796023240434}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( Min( AMS ,MRS ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.04723783186001309}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8791666666666667, "obj2": 0.046211790003487976}], "21": [{"determining": "( MRS - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) / PN ) ) )", "choosing": "( Max( ( DS - RMSe ),( ( MUC / MUC ) + Min( ( MUC / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS / MRS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * ACS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,MUM ) ) / Min( ( RMSe / RMSe ) ,( RCSe + RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( Min( ( AMS / AMS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / MUM ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.525, "obj2": 0.2883025111754553}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.31114170736473}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3229166666666667, "obj2": 0.5161808648295173}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( CS - RCSe ) ) - ( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) + ( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7041666666666667, "obj2": 0.12491796023240434}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,AMS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.32916666666666666, "obj2": 0.4932570849626489}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_CPU_Server ) * Min( MDR ,Max( ( RRS - DDR ),( ACS * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUM + ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5833333333333334, "obj2": 0.23255721436459337}, {"determining": "( ( ( Const / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( RMSe / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.36041666666666666, "obj2": 0.47624467665864867}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.2543234203378037}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( PN * ( FirstVNF_Mem + PN ) ) ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.6895833333333333, "obj2": 0.15643699526773513}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUR ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5472369171928663}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.27708333333333335, "obj2": 0.5728782600008469}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4, "obj2": 0.39647818095592224}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,Min( ACS ,CRS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5625, "obj2": 0.2534687006891899}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR * FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.2, "obj2": 0.6743782196235166}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.5473665287090264}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4200208795047962}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.43125, "obj2": 0.395459065104158}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Min( MUC ,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.38333333333333336, "obj2": 0.43097796028729707}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),Min( AMS ,MRS ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7708333333333334, "obj2": 0.09408035341426511}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - DDR ),( PN * FirstVNF_Mem ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.725, "obj2": 0.11279015775112512}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( PN * FirstVNF_Mem ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.9791666666666666, "obj2": 0.008751112030899143}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8604166666666667, "obj2": 0.05596841007566499}, {"determining": "( ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - DDR ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Const ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.026154975595403102}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( Max( MUR,( MUM * RCSe ) ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.6145833333333334, "obj2": 0.20134902117507633}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( AMS ,MRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4666666666666667, "obj2": 0.32341522719703025}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem + PN ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( Min( AMS ,MRS ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.9229166666666667, "obj2": 0.032902994523261175}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,Min( AMS ,MRS ) ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),Min( AMS ,MRS ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,( ( DS - MLU ) + ( CS + DS ) ) ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.7520833333333333, "obj2": 0.10069586935134563}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.45625, "obj2": 0.3298916683001598}, {"determining": "( ( ( AMS / AMS ) - Min( DDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( Min( AMS ,MRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( MUC * Min( ( RMSe / RMSe ) ,RMSe ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.37916666666666665, "obj2": 0.45400905589082524}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MLU - ( MUR / DS ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6395833333333333, "obj2": 0.17798051394203687}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - CRS ) ) + ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,DS ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.26666666666666666, "obj2": 0.5905295260640779}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * CRS ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.43333333333333335, "obj2": 0.37733293054262784}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.37083333333333335, "obj2": 0.4605464726500844}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS + DDR ),Max( BR,FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( DS / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6604166666666667, "obj2": 0.16470752731033997}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) - Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23125, "obj2": 0.6259343550872128}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RRSe ) - ( ( MUC + MUC ) + Max( CS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.625, "obj2": 0.19086395636622025}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),Min( AMS ,MRS ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.7375, "obj2": 0.10724088852383684}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( AMS - ( AMS + MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS * AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( BR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( Min( MUC ,CS ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6311567831028093}], "22": [{"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS - ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( DS,MUR ) ) ) / ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MRS - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) ) / PN ) ) )", "choosing": "( Max( ( DS - RMSe ),( ( MUC / MUC ) + Min( ( MUC / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( Min( ( AMS / AMS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / MUM ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.525, "obj2": 0.2883025111754553}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem + PN ) ) / ( ( ( PN + ( BR - CRS ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( Min( AMS ,MRS ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - ( ( DS - RCSe ) + ( CS + DS ) ) ) ) ) ) )", "obj1": 0.8166666666666667, "obj2": 0.08481719339473008}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.31114170736473}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( RRSe * RRSe ) ) ) * Min( ( MUC / MUC ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9125, "obj2": 0.03316279004240301}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( PN * ( FirstVNF_Mem + PN ) ) ) / ( ( ( CRS + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.6895833333333333, "obj2": 0.1555195085906864}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8604166666666667, "obj2": 0.05596841007566499}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),Min( AMS ,MRS ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7708333333333334, "obj2": 0.09408035341426511}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3229166666666667, "obj2": 0.5161808648295173}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,AMS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.32916666666666666, "obj2": 0.4932570849626489}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR * FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.2, "obj2": 0.6743782196235166}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( CS - RCSe ) ) - ( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) + ( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7041666666666667, "obj2": 0.12491796023240434}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5395833333333333, "obj2": 0.25901368809675845}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Min( MUC ,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.38333333333333336, "obj2": 0.43097796028729707}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4200208795047962}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MLU - ( MUR / DS ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6395833333333333, "obj2": 0.17798051394203687}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( Max( MUR,( MUM * RCSe ) ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.6125, "obj2": 0.20123350811516771}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( ( DS / ( RMSe + ( MUM + MUR ) ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RMSe ) ) )", "obj1": 0.5666666666666667, "obj2": 0.2445718417417499}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4, "obj2": 0.39647818095592224}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( Min( AMS ,MRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,RMSe ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.37083333333333335, "obj2": 0.44907906015287435}, {"determining": "( ( ( AMS / Const ) - Min( RRS ,MRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,CS ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3625, "obj2": 0.4573916641930642}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.5473665287090264}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS + DDR ),Max( BR,FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( DS / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6604166666666667, "obj2": 0.16470752731033997}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * MUC ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3458333333333333, "obj2": 0.47139603106244077}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) / Min( MDR ,Max( ( RRS - DDR ),Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUR ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30416666666666664, "obj2": 0.5472369171928663}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( BR / FirstVNF_CPU_Server ) * Min( MDR ,Max( ( RRS - DDR ),( ACS * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( MUM + ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5833333333333334, "obj2": 0.23255721436459337}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) - Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23125, "obj2": 0.6259343550872128}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.34375, "obj2": 0.48176316555487825}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_CPU_Server ) * Min( MDR ,Max( ( RRS - DDR ),( ACS * FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( DS,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5723192884059304}, {"determining": "( ( ( AMS / AMS ) - ( AMS * MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * ( ( AMS / AMS ) * Min( AMS ,MRS ) ) ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.59375, "obj2": 0.2300758759470298}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( PN - ( ( BR / FirstVNF_RAM ) / Min( ACS ,CRS ) ) ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) + ( MUC / ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6541666666666667, "obj2": 0.16495076930197164}, {"determining": "( ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - DDR ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Const ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.026154975595403102}, {"determining": "( ( AMS - ( AMS + MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS * AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( BR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( Min( MUC ,CS ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6311567831028093}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR * PN ) ) ) / ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) ,( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,DS ) ) + Max( MUC,( ( Min( MUC ,RMSe ) - ( ( MUC / RRSe ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8583333333333333, "obj2": 0.05662866399114734}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * CRS ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.43333333333333335, "obj2": 0.37733293054262784}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUR ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46875, "obj2": 0.32329075306330374}], "23": [{"determining": "( ( ( AMS / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( BR ,CRS ) ) + ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS - ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( DS,MUR ) ) ) / ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.31114170736473}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( CS - RCSe ) ) - ( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) + ( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7041666666666667, "obj2": 0.12491796023240434}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5395833333333333, "obj2": 0.25901368809675845}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUR ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46875, "obj2": 0.32329075306330374}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,RRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * RRS ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( Max( MUR,( MUM * RCSe ) ) / ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUR,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) )", "obj1": 0.88125, "obj2": 0.053430417960658914}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.27708333333333335, "obj2": 0.5728782600008469}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( Min( ( AMS / AMS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / MUM ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.525, "obj2": 0.2883025111754553}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( ( RMSe / RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7375, "obj2": 0.1080219402165308}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3229166666666667, "obj2": 0.5161808648295173}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( RRS + DDR ) - ( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RMSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( ( MUR - MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / ( RMSe / RMSe ) ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.79375, "obj2": 0.08147952486842995}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( ( DS / ( RMSe + ( MUM + MUR ) ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RMSe ) ) )", "obj1": 0.5666666666666667, "obj2": 0.2445718417417499}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8145833333333333, "obj2": 0.07533923830217003}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - DDR ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Const ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.026154975595403102}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( RRSe * RRSe ) ) ) * Min( ( MUC / MUC ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9125, "obj2": 0.03316279004240301}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( AMS / Const ) - Min( RRS ,MRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,CS ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3625, "obj2": 0.4573916641930642}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4200208795047962}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4, "obj2": 0.39647818095592224}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS + DDR ),( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.69375, "obj2": 0.14634285335941868}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( MDR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5291666666666667, "obj2": 0.2877226005267682}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_CPU + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + MUM ) ) )", "obj1": 0.6166666666666667, "obj2": 0.1929915585436038}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( MDR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / DS ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3, "obj2": 0.538530985537633}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * MUC ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3458333333333333, "obj2": 0.47139603106244077}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( Max( MUR,( MUM * RCSe ) ) / ( MLU - ( MUR / DS ) ) )", "obj1": 0.6125, "obj2": 0.20123350811516771}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( FirstVNF_Mem + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MLU - ( MUR / DS ) ) * ( ( DS - MLU ) + ( CS + ( MUR + DS ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6375, "obj2": 0.1821820520589421}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR / CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / Const ) ) )", "choosing": "( ( ( MUC / MUC ) + ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4777551005460596}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RMSe / RMSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5522134658574482}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),Min( FirstVNF_CPU_Server ,MRS ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( ( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ) + MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7729166666666667, "obj2": 0.09292550094373246}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "( ( AMS - ( AMS + MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS * AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( BR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( Min( MUC ,CS ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6311567831028093}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR * PN ) ) ) / ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) ,( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,DS ) ) + Max( MUC,( ( Min( MUC ,RMSe ) - ( ( MUC / RRSe ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8583333333333333, "obj2": 0.05662866399114734}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( PN * FirstVNF_Mem ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * MUC ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.75625, "obj2": 0.09949785800525454}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( Min( AMS ,MRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,RMSe ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.37083333333333335, "obj2": 0.4429022689664472}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * CRS ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.43333333333333335, "obj2": 0.37733293054262784}], "24": [{"determining": "( Min( ( AMS / AMS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Min( ( ( DDR + RRS ) / ACS ) ,( ( ( Const + Const ) + Min( BR ,CRS ) ) + ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( FirstVNF_Mem + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MLU - ( MUR / DS ) ) * ( ( DS - MLU ) + ( CS + ( MUR + DS ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6375, "obj2": 0.1821820520589421}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS + DDR ),( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / MUM ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.6875, "obj2": 0.1521795477197677}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.31114170736473}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( ( DS / ( RMSe + ( MUM + MUR ) ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RMSe ) ) )", "obj1": 0.5666666666666667, "obj2": 0.2445718417417499}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUR ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46875, "obj2": 0.32329075306330374}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / AMS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( ( ( FirstVNF_RAM + CRS ) + ( MDR - CRS ) ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS + ( RMSe + Max( MUM,MUR ) ) ) + Max( ( MUC / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + RMSe ) ) )", "obj1": 0.5958333333333333, "obj2": 0.22740529192970804}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5229166666666667, "obj2": 0.2902980019649895}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,RRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * RRS ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( Max( MUR,( MUM * RCSe ) ) / ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUR,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) )", "obj1": 0.88125, "obj2": 0.053430417960658914}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26875, "obj2": 0.5701458125904468}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.31875, "obj2": 0.5084059387648343}, {"determining": "( Min( ( AMS / AMS ) ,Min( AMS ,( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( ( MUC + MUC ) + ( MUC - MUR ) ) + Max( Min( ( RMSe / MUM ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.9916666666666667, "obj2": 0.003512799420937897}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( ( RMSe / RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7375, "obj2": 0.1080219402165308}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR * PN ) ) ) / ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) ,( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,DS ) ) + Max( MUC,( ( Min( MUC ,RMSe ) - ( ( MUC / RRSe ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8583333333333333, "obj2": 0.05662866399114734}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),Min( MDR ,Max( ( RRS - BR ),Min( FirstVNF_CPU_Server ,MRS ) ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( ( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ) + MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7729166666666667, "obj2": 0.09292550094373246}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( BR / FirstVNF_Mem ) * Min( FirstVNF_Mem_Server ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( MLU,CS ) / ( MLU * ( ( ( MLU + Min( MUM ,RCSe ) ) + ( ( CS + RRSe ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.90625, "obj2": 0.04211349800114704}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3958333333333333, "obj2": 0.4200208795047962}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( ( ( FirstVNF_CPU_Server * ( ( BR / FirstVNF_RAM ) * CRS ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - DS ) + DS ) * ( DS * DS ) )", "obj1": 0.7104166666666667, "obj2": 0.12122986105627637}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4, "obj2": 0.39647818095592224}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5395833333333333, "obj2": 0.25901368809675845}, {"determining": "( ( AMS - ( AMS + MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS * AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( BR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( Min( MUC ,CS ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6311567831028093}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( MDR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5291666666666667, "obj2": 0.2877226005267682}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS + DDR ),( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.69375, "obj2": 0.14634285335941868}, {"determining": "( ( ( AMS / Const ) - Min( RRS ,MRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,CS ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3625, "obj2": 0.4573916641930642}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( CS - RCSe ) ) - ( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) + ( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7041666666666667, "obj2": 0.12491796023240434}, {"determining": "( ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - DDR ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Const ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.026154975595403102}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) * MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.5458333333333333, "obj2": 0.2573664258436816}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6125, "obj2": 0.194851379660868}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_CPU + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + MUM ) ) )", "obj1": 0.6166666666666667, "obj2": 0.1929915585436038}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR / CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / Const ) ) )", "choosing": "( ( ( MUC / MUC ) + ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4777551005460596}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( RRS + DDR ) - ( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RMSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( ( MUR - MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / ( RMSe / RMSe ) ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.79375, "obj2": 0.08147952486842995}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( ACS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( RRSe * RRSe ) ) ) * Min( ( MUC / MUC ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9125, "obj2": 0.03316279004240301}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( MDR - CRS ) ) ,MRS ) ) + ( PN / ACS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + Min( MUC ,MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.27708333333333335, "obj2": 0.5558157169929617}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}], "25": [{"determining": "( ( ( AMS / AMS ) - ( AMS / MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,Min( FirstVNF_Mem_Server ,CRS ) ) ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( ( RMSe / RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS / AMS ) ,Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( FirstVNF_Mem + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MLU - ( MUR / DS ) ) * ( ( DS - MLU ) + ( CS + ( MUR + DS ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6375, "obj2": 0.1821820520589421}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.31114170736473}, {"determining": "( ( ( AMS / Const ) - Min( RRS ,MRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,CS ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3625, "obj2": 0.4573916641930642}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6729166666666667, "obj2": 0.15339688720411904}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( RRS + DDR ) - ( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RMSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( ( MUR - MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / ( RMSe / RMSe ) ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.79375, "obj2": 0.08147952486842995}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5229166666666667, "obj2": 0.2902980019649895}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5421750008724322}, {"determining": "( ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - DDR ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Const ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.026154975595403102}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / AMS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( ( ( FirstVNF_RAM + CRS ) + ( MDR - CRS ) ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS + ( RMSe + Max( MUM,MUR ) ) ) + Max( ( MUC / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + RMSe ) ) )", "obj1": 0.5958333333333333, "obj2": 0.22740529192970804}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "( ( AMS - ( AMS + MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS * AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( BR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( Min( MUC ,CS ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6311567831028093}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5395833333333333, "obj2": 0.25901368809675845}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.5729166666666666, "obj2": 0.24089669499959207}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( CS - RCSe ) ) - ( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) + ( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7041666666666667, "obj2": 0.12491796023240434}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( MDR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5291666666666667, "obj2": 0.2877226005267682}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,RRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * RRS ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( Max( MUR,( MUM * RCSe ) ) / ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUR,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) )", "obj1": 0.88125, "obj2": 0.053430417960658914}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( ( ( FirstVNF_CPU_Server * ( ( BR / FirstVNF_RAM ) * CRS ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - DS ) + DS ) * ( DS * DS ) )", "obj1": 0.7104166666666667, "obj2": 0.12122986105627637}, {"determining": "( ( ( AMS / AMS ) - ( AMS + MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.34791666666666665, "obj2": 0.4734847340091776}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( DS + DS ) ) - ( ( MUM / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.73125, "obj2": 0.11018404876885178}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( Max( PN,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.24166666666666667, "obj2": 0.6219763372136775}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_CPU_Server ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) * ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - RCSe ) + ( CS + DS ) ) )", "obj1": 0.4625, "obj2": 0.3353195680149274}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6125, "obj2": 0.194851379660868}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_CPU + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + MUM ) ) )", "obj1": 0.6166666666666667, "obj2": 0.1929915585436038}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Max( ( RRS - BR ),Min( AMS ,MRS ) ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7541666666666667, "obj2": 0.10317193870713492}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( ( DS / ( RMSe + ( MUM + MUR ) ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + RMSe ) ) )", "obj1": 0.5666666666666667, "obj2": 0.2445718417417499}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR / CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / Const ) ) )", "choosing": "( ( ( MUC / MUC ) + ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4777551005460596}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.2520648632474995}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUR ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46875, "obj2": 0.32329075306330374}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR * PN ) ) ) / ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) ,( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,DS ) ) + Max( MUC,( ( Min( MUC ,RMSe ) - ( ( MUC / RRSe ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8583333333333333, "obj2": 0.05662866399114734}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( RRS + DDR ) - ( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RMSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( ( MUR - MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / ( RMSe / RMSe ) ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.9895833333333334, "obj2": 0.004157691920613557}, {"determining": "( AMS - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( ARS / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( MLU,RRSe ) / ( MLU * ( ( ( MLU + Min( MUM ,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( MUC + MUC ) + Min( MUC ,MUR ) ) - MUR ) ) ) / DS ) ) )", "obj1": 0.9, "obj2": 0.044199420889861216}, {"determining": "( ( ( AMS / AMS ) - ( ( Max( ( RRS + DDR ),( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( RMSe + Max( MUM,MUR ) ) ) )", "obj1": 0.7854166666666667, "obj2": 0.08538401263311834}], "26": [{"determining": "( ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ARS * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + ( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ) / RMSe ) ) + Min( ( MUR - MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / ( RMSe / RMSe ) ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - ( AMS / MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,Min( FirstVNF_Mem_Server ,CRS ) ) ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( ( RMSe / RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5421750008724322}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR + FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR / FirstVNF_RAM ) ) ) + ( PN * FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.27291666666666664, "obj2": 0.582311319780306}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6729166666666667, "obj2": 0.15339688720411904}, {"determining": "( ( ( AMS / Const ) - Min( RRS ,MRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,CS ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3625, "obj2": 0.4573916641930642}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( CS - RCSe ) ) - ( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) + ( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7041666666666667, "obj2": 0.12491796023240434}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.31114170736473}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5229166666666667, "obj2": 0.28822979747141597}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( ( DS / ( RMSe + ( MUM + MUR ) ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) + ( CS + RMSe ) ) )", "obj1": 0.6625, "obj2": 0.16313732968339148}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( DS + DS ) ) - ( ( MUM / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.73125, "obj2": 0.11018404876885178}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( FirstVNF_Mem + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MLU - ( MUR / DS ) ) * ( ( DS - MLU ) + ( CS + ( MUR + DS ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6375, "obj2": 0.1821820520589421}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * BR ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + MUR ) ) )", "obj1": 0.8083333333333333, "obj2": 0.07764926751304901}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - DDR ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + Const ) / ( ( ( ( PN * FirstVNF_Mem ) + ( FirstVNF_RAM_Server - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( Min( ( RMSe * RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.026154975595403102}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / AMS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( ( ( FirstVNF_RAM + CRS ) + ( MDR - CRS ) ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS + ( RMSe + Max( MUM,MUR ) ) ) + Max( ( MUC / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + RMSe ) ) )", "obj1": 0.5958333333333333, "obj2": 0.22740529192970804}, {"determining": "( ( ( AMS / AMS ) - ( ( Max( ( RRS + DDR ),( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + ( RMSe + Max( MUM,MUR ) ) ) )", "obj1": 0.7854166666666667, "obj2": 0.08538401263311834}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( AMS - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( ARS / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( MLU,RRSe ) / ( MLU * ( ( ( MLU + Min( MUM ,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( MUC + MUC ) + Min( MUC ,MUR ) ) - MUR ) ) ) / DS ) ) )", "obj1": 0.9, "obj2": 0.044199420889861216}, {"determining": "( ( AMS - ( AMS + MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS * AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( BR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( Min( MUC ,CS ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6311567831028093}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( MDR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5291666666666667, "obj2": 0.2877226005267682}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.5729166666666666, "obj2": 0.24089669499959207}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46041666666666664, "obj2": 0.3280433314230946}, {"determining": "( ( ( FirstVNF_RAM / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * ( PN * FirstVNF_Mem ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( DS - RCSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - RRSe ) ) )", "obj1": 0.7583333333333333, "obj2": 0.09766911898787387}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5395833333333333, "obj2": 0.25901368809675845}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.8770833333333333, "obj2": 0.04771097975029837}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( ( ( FirstVNF_CPU_Server * ( ( BR / FirstVNF_RAM ) * CRS ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - DS ) + DS ) * ( DS * DS ) )", "obj1": 0.7104166666666667, "obj2": 0.12122986105627637}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "( ( ( AMS / AMS ) - ( AMS + MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.34791666666666665, "obj2": 0.4734847340091776}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR * PN ) ) ) / ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) ,( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,DS ) ) + Max( MUC,( ( Min( MUC ,RMSe ) - ( ( MUC / RRSe ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8583333333333333, "obj2": 0.05662866399114734}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR / CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / Const ) ) )", "choosing": "( ( ( MUC / MUC ) + ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4777551005460596}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUR ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46875, "obj2": 0.32329075306330374}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( FirstVNF_Mem + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6104166666666667, "obj2": 0.2013528807881185}, {"determining": "( ( ( AMS / AMS ) - ( ( Max( ( RRS + DDR ),( BR * FirstVNF_RAM_Server ) ) - MRS ) * Min( MDR ,( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7520833333333333, "obj2": 0.10127706347781122}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) / MRS ) ),( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( MUC - MLU ) + ( CS + MLU ) ) )", "obj1": 0.6270833333333333, "obj2": 0.18799081978941606}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( RRS + DDR ) - ( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RMSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( ( MUR - MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / ( RMSe / RMSe ) ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.79375, "obj2": 0.08147952486842995}], "27": [{"determining": "( ( ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( FirstVNF_Mem + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MLU - ( MUR / DS ) ) * ( ( DS - MLU ) + ( CS + ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ARS * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + ( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ) / RMSe ) ) + Min( ( MUR - MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / ( RMSe / RMSe ) ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5395833333333333, "obj2": 0.25901368809675845}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5421750008724322}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.31114170736473}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR + FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR / FirstVNF_RAM ) ) ) + ( PN * FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.27291666666666664, "obj2": 0.582311319780306}, {"determining": "( ( ( AMS / Const ) - Min( RRS ,MRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,CS ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3625, "obj2": 0.4573916641930642}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.5729166666666666, "obj2": 0.24089669499959207}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5229166666666667, "obj2": 0.28822979747141597}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * BR ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + MUR ) ) )", "obj1": 0.8083333333333333, "obj2": 0.07764926751304901}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.6833333333333333, "obj2": 0.14243123492504145}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( DS + DS ) ) - ( ( MUM / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.73125, "obj2": 0.11018404876885178}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( AMS - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( ARS / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( MLU,RRSe ) / ( MLU * ( ( ( MLU + Min( MUM ,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( MUC + MUC ) + Min( MUC ,MUR ) ) - MUR ) ) ) / DS ) ) )", "obj1": 0.9, "obj2": 0.044199420889861216}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR * PN ) ) ) / ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) ,( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,DS ) ) + Max( MUC,( ( Min( MUC ,RMSe ) - ( ( MUC / RRSe ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8583333333333333, "obj2": 0.05662866399114734}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( MDR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5291666666666667, "obj2": 0.2877226005267682}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( Max( MUR,MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / CS ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.8354166666666667, "obj2": 0.06436538823357943}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,RCSe ) ) + Max( MUC,( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46041666666666664, "obj2": 0.3280433314230946}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( CS - RCSe ) ) - ( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) + ( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7041666666666667, "obj2": 0.12491796023240434}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1499325972409441}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUC / MUR ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46875, "obj2": 0.32329075306330374}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "( ( ( AMS / AMS ) - ( AMS + MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.34791666666666665, "obj2": 0.4734847340091776}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( FirstVNF_Mem + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_RAM ) ) / MDR ) ) )", "choosing": "( ( ( RMSe - ( MUR / DS ) ) * ( ( DS - MLU ) + ( CS + ( MUR + DS ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6458333333333334, "obj2": 0.1783500736736889}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( FirstVNF_Mem + ( BR - CRS ) ) ,MRS ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7791666666666667, "obj2": 0.09322598497879223}, {"determining": "( ( AMS - ( AMS + MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS * AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( BR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( Min( MUC ,CS ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6311567831028093}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR / CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / Const ) ) )", "choosing": "( ( ( MUC / MUC ) + ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4777551005460596}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( AMS / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * RRSe )", "obj1": 0.91875, "obj2": 0.03835267242187915}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - DS ) + DS ) * ( DS * DS ) )", "obj1": 0.6604166666666667, "obj2": 0.16575373976106605}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( ( ( FirstVNF_CPU_Server * ( ( BR / FirstVNF_RAM ) * CRS ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( ( DS / ( RMSe + ( MUM + MUR ) ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) + ( CS + RMSe ) ) )", "obj1": 0.7145833333333333, "obj2": 0.11914939910139173}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.9416666666666667, "obj2": 0.023734742275440444}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.5875, "obj2": 0.23797193713140502}, {"determining": "( ( ( AMS / AMS ) - ( ( Max( ( RRS + DDR ),( BR * FirstVNF_RAM_Server ) ) - MRS ) * Min( MDR ,( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8416666666666667, "obj2": 0.06414978342638009}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( RRS + DDR ) - ( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RMSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( ( MUR - MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / ( RMSe / RMSe ) ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.79375, "obj2": 0.08147952486842995}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) / MRS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( ( MUR - MLU ) + ( CS + CS ) ) )", "obj1": 0.9770833333333333, "obj2": 0.009290005608654558}], "28": [{"determining": "( ( ( BR - CRS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( FirstVNF_Mem + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MLU - ( MUR / DS ) ) * ( ( DS - MLU ) + ( CS + ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5421750008724322}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( FirstVNF_Mem + ( BR - CRS ) ) ,MRS ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7791666666666667, "obj2": 0.09322598497879223}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( DS + DS ) ) - ( ( MUM / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.73125, "obj2": 0.11018404876885178}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR + FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR / FirstVNF_RAM ) ) ) + ( PN * FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.27291666666666664, "obj2": 0.582311319780306}, {"determining": "( ( ( AMS / Const ) - Min( RRS ,MRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,CS ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3625, "obj2": 0.4573916641930642}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( Const + RRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( Min( RMSe ,RMSe ) - ( ( MUC / MUC ) + Max( Min( Max( RMSe,RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * RRSe )", "obj1": 0.6354166666666666, "obj2": 0.2133762515019758}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.64375, "obj2": 0.171202664056194}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.31114170736473}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5229166666666667, "obj2": 0.28822979747141597}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( CS - RCSe ) ) - ( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) + ( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7041666666666667, "obj2": 0.12491796023240434}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.5875, "obj2": 0.23797193713140502}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.6833333333333333, "obj2": 0.14243123492504145}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - DS ) + DS ) * ( DS * DS ) )", "obj1": 0.6604166666666667, "obj2": 0.16575373976106605}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( ( ( FirstVNF_CPU_Server * ( ( BR / FirstVNF_RAM ) * CRS ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( ( DS / ( RMSe + ( MUM + MUR ) ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) + ( CS + RMSe ) ) )", "obj1": 0.7145833333333333, "obj2": 0.11914939910139173}, {"determining": "( ( ( AMS / AMS ) - ( AMS + MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.34791666666666665, "obj2": 0.4734847340091776}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.5729166666666666, "obj2": 0.24089669499959207}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5354166666666667, "obj2": 0.26335680003630096}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * BR ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( Max( MLU,RRSe ) / ( MLU * ( ( ( MLU + Min( MUM ,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( MUC + MUC ) + Min( MUC ,MUR ) ) - MUR ) ) ) / DS ) ) )", "obj1": 0.83125, "obj2": 0.07494176520021506}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( MDR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5291666666666667, "obj2": 0.2877226005267682}, {"determining": "( ( AMS - ( AMS + MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS * AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( BR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( Min( MUC ,CS ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6311567831028093}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * BR ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + MUR ) ) )", "obj1": 0.8083333333333333, "obj2": 0.07764926751304901}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR / CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / Const ) ) )", "choosing": "( ( ( MUC / MUC ) + ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3416666666666667, "obj2": 0.4777551005460596}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,CS ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + ( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ) / RMSe ) ) + Min( ( MUR - MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / ( RMSe / RMSe ) ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.6145833333333334, "obj2": 0.21619734635173662}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5583333333333333, "obj2": 0.25012434597777894}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR * PN ) ) ) / ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) ,( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,DS ) ) + Max( MUC,( ( Min( MUC ,RMSe ) - ( ( MUC / RRSe ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8583333333333333, "obj2": 0.05662866399114734}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( FirstVNF_RAM + CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - DS ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.3295932699476417}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1499325972409441}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( RRS + DDR ) - ( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RMSe * RRSe ) ) ) * ( ( ( MUR / CS ) + Min( MLU ,DS ) ) + Min( ( MUR - MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / ( RMSe / RMSe ) ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.79375, "obj2": 0.08147952486842995}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46875, "obj2": 0.32291666879184594}, {"determining": "( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR / FirstVNF_RAM ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) + ( CS + RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) + ( CS + DS ) ) )", "obj1": 0.8895833333333333, "obj2": 0.04860850531855756}, {"determining": "( AMS - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR + PN ) ) ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( ARS / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( Max( MLU,RRSe ) / ( MLU * ( ( ( MLU + Min( MUM ,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( MUC + MUC ) + Min( MUC ,MUR ) ) - MUR ) ) ) / DS ) ) )", "obj1": 0.9, "obj2": 0.044199420889861216}], "29": [{"determining": "( ( ( BR - CRS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - MRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - CRS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( Const + RRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( Min( RMSe ,RMSe ) - ( ( MUC / MUC ) + Max( Min( Max( RMSe,RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * RRSe )", "obj1": 0.6354166666666666, "obj2": 0.2133762515019758}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR * PN ) ) ) / ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) ,( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,DS ) ) + Max( MUC,( ( Min( MUC ,RMSe ) - ( ( MUC / RRSe ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8583333333333333, "obj2": 0.05662866399114734}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR + FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR / FirstVNF_RAM ) ) ) + ( PN * FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.27291666666666664, "obj2": 0.582311319780306}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5421750008724322}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5354166666666667, "obj2": 0.26335680003630096}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5145833333333333, "obj2": 0.29486424386963883}, {"determining": "( ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR / FirstVNF_RAM ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) + ( CS + RMSe ) ) ) - Min( DS ,RMSe ) ) * ( ( DS - Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) + ( CS + DS ) ) )", "obj1": 0.9104166666666667, "obj2": 0.04086553692068575}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.5875, "obj2": 0.23797193713140502}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6416666666666667, "obj2": 0.17199091285654722}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - DS ) + DS ) * ( DS * DS ) )", "obj1": 0.6604166666666667, "obj2": 0.16575373976106605}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.6833333333333333, "obj2": 0.14243123492504145}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_CPU_Server ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.6041666666666666, "obj2": 0.21871718914181668}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( CS - RCSe ) ) - ( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) + ( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7041666666666667, "obj2": 0.12491796023240434}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( AMS / Const ) - Min( RRS ,MRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,CS ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3625, "obj2": 0.4573916641930642}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( FirstVNF_RAM + CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - DS ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.3295932699476417}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46875, "obj2": 0.32291666879184594}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MDR ) ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( FirstVNF_Mem + ( BR - CRS ) ) ,MRS ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) ) ,MDR ) ) )", "choosing": "( ( ( Min( DS ,RMSe ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RCSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8416666666666667, "obj2": 0.06992278634211826}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.49166666666666664, "obj2": 0.31088280507889154}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC + MUC ) + ( MUC - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9375, "obj2": 0.02760336337956686}, {"determining": "( ( ( AMS / AMS ) - ( AMS + MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.34791666666666665, "obj2": 0.4734847340091776}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.5729166666666666, "obj2": 0.24089669499959207}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * BR ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( Max( MLU,RRSe ) / ( MLU * ( ( ( MLU + Min( MUM ,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( MUC + MUC ) + Min( MUC ,MUR ) ) - MUR ) ) ) / DS ) ) )", "obj1": 0.83125, "obj2": 0.07494176520021506}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( RRS + DDR ) - ( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.7520833333333333, "obj2": 0.10319741858673036}, {"determining": "( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR / FirstVNF_RAM ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8875, "obj2": 0.050152397267423}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( MDR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5291666666666667, "obj2": 0.2877226005267682}, {"determining": "( ( AMS - ( AMS + MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS * AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( BR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( Min( MUC ,CS ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6311567831028093}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.5520833333333334, "obj2": 0.254151648993913}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( DS + DS ) ) - ( ( MUM / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.73125, "obj2": 0.11018404876885178}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,CS ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + ( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ) / RMSe ) ) + Min( ( MUR - MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / ( RMSe / RMSe ) ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.6145833333333334, "obj2": 0.21619734635173662}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6729166666666667, "obj2": 0.1499325972409441}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.31114170736473}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}], "30": [{"determining": "Min( ( ( Min( ( ( ( Max( FirstVNF_RAM,MRS ) / ( CRS + FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU_Server,PN ) / ( CRS * FirstVNF_RAM_Server ) ) ) * Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( RRS - CRS ) ) ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) ) ) ,( Max( Max( Max( DDR,ARS ),( FirstVNF_RAM_Server + ACS ) ),Min( ( FirstVNF_RAM - MRS ) ,( Const + MRS ) ) ) - ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,ARS ) ) - ( ( CRS / BR ) * ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) ) + Min( ( ( Min( Max( Const,RRS ) ,Max( RRS,MDR ) ) / Max( ( FirstVNF_RAM_Server / Const ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_RAM * DDR ) * Min( RRS ,FirstVNF_CPU ) ) * ( ( DDR + RRS ) * ( AMS / CRS ) ) ) ) ,Min( ( ( Max( Const,BR ) - ( FirstVNF_Mem_Server - MDR ) ) + ( ( FirstVNF_Mem / FirstVNF_Mem ) / ( RRS - AMS ) ) ) ,( Min( ( FirstVNF_RAM + BR ) ,( FirstVNF_Mem_Server + MDR ) ) * ( ( DDR + BR ) + Max( FirstVNF_CPU_Server,Const ) ) ) ) ) ) + ( ( ( Min( ( ( RRS / FirstVNF_Mem_Server ) / ( PN / FirstVNF_Mem_Server ) ) ,( ( ARS - FirstVNF_RAM ) / ( MRS - BR ) ) ) - Min( ( ( CRS + FirstVNF_RAM_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_CPU / ARS ) * Min( MRS ,BR ) ) ) ) * ( Max( ( ( RRS + AMS ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ),Max( Max( DDR,MRS ),( Const * PN ) ) ) * ( ( ( MDR - RRS ) / Max( FirstVNF_RAM_Server,AMS ) ) + ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) + ( Max( ( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / CRS ) ) / ( Max( AMS,DDR ) + Min( FirstVNF_Mem ,PN ) ) ),Max( ( Max( PN,FirstVNF_Mem_Server ) - ( ARS - FirstVNF_RAM_Server ) ),Max( Min( AMS ,CRS ),( MRS - MDR ) ) ) ) / ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( ACS / FirstVNF_CPU_Server ) ) * ( ( RRS / FirstVNF_RAM ) * Max( CRS,RRS ) ) ) + ( Max( ( BR * FirstVNF_CPU_Server ),Min( ACS ,MDR ) ) / ( ( FirstVNF_Mem * ARS ) - Max( PN,MDR ) ) ) ) ) ) ) ,( ( ( ( ( ( ( FirstVNF_Mem + DDR ) * ( BR + FirstVNF_CPU_Server ) ) / Max( ( CRS * FirstVNF_RAM_Server ),( AMS * CRS ) ) ) + Max( Max( ( FirstVNF_CPU_Server * MDR ),Max( FirstVNF_Mem,ARS ) ),Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),Max( MDR,Const ) ) ) ) - ( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Min( ACS ,FirstVNF_RAM_Server ) ),Max( Min( BR ,DDR ),( DDR + Const ) ) ) / Max( ( Min( DDR ,MDR ) + Min( Const ,AMS ) ),( ( CRS * FirstVNF_CPU ) / ( FirstVNF_RAM - ARS ) ) ) ) ) * Max( ( Min( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,Max( BR,MDR ) ) ,Min( ( BR - AMS ) ,Min( DDR ,BR ) ) ) + Min( ( Max( ARS,FirstVNF_CPU_Server ) + ( CRS / CRS ) ) ,Min( ( DDR - CRS ) ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ),Min( ( ( Max( AMS,CRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Max( Max( FirstVNF_CPU,CRS ),( RRS + FirstVNF_CPU_Server ) ) ) ,Min( Min( Min( MDR ,BR ) ,( DDR * MRS ) ) ,( Min( PN ,BR ) + ( DDR * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( ( ( ( ARS * AMS ) / Max( Const,AMS ) ) / ( ( FirstVNF_RAM_Server * RRS ) + ( FirstVNF_CPU_Server * Const ) ) ) - Min( ( Max( PN,RRS ) - ( RRS * FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_RAM_Server,RRS ) / ( MDR / MDR ) ) ) ) + Min( ( ( Max( MDR,Const ) / ( AMS - PN ) ) / ( ( Const + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) ) ) ,( ( Max( FirstVNF_CPU_Server,RRS ) + ( FirstVNF_CPU * ARS ) ) / Max( Max( CRS,FirstVNF_Mem ),( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) + ( Min( ( ( ( FirstVNF_CPU_Server * MDR ) - ( BR * FirstVNF_CPU ) ) * ( Min( MRS ,ARS ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ,( ( ( BR + BR ) + Max( FirstVNF_Mem_Server,ACS ) ) * ( ( ACS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) / ( ( ( ( ARS + PN ) + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) + Min( ( PN + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) - Max( ( ( FirstVNF_Mem + MDR ) - ( CRS - BR ) ),( ( MRS / ACS ) - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( RMSe + MUM ) ) + ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - CRS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - MRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / Const ) - Min( RRS ,MRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,CS ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3625, "obj2": 0.4573916641930642}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - ( AMS + MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.34791666666666665, "obj2": 0.4734847340091776}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * BR ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( Max( MLU,RRSe ) / ( MLU * ( ( ( MLU + Min( MUM ,RCSe ) ) / ( ( CS + RRSe ) + ( ( ( MUC + MUC ) + Min( MUC ,MUR ) ) - MUR ) ) ) / DS ) ) )", "obj1": 0.83125, "obj2": 0.07494176520021506}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5145833333333333, "obj2": 0.29486424386963883}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5421750008724322}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5354166666666667, "obj2": 0.26335680003630096}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( MDR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5291666666666667, "obj2": 0.2877226005267682}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * BR ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.7625, "obj2": 0.09844604444404274}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ) * RRSe )", "obj1": 0.6375, "obj2": 0.20800279777484393}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.79375, "obj2": 0.08250237084295543}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR + FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR / FirstVNF_RAM ) ) ) + ( PN * FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.27291666666666664, "obj2": 0.582311319780306}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6416666666666667, "obj2": 0.17199091285654722}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( CS - RCSe ) ) - ( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) + ( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7041666666666667, "obj2": 0.12491796023240434}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.49166666666666664, "obj2": 0.31088280507889154}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.2540553700787211}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR / FirstVNF_RAM ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8875, "obj2": 0.049920831441588036}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + Max( ( FirstVNF_CPU + CRS ),( BR * PN ) ) ) / ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) ,( ( BR / FirstVNF_Mem ) * Min( MDR ,Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / Max( RMSe,DS ) ) + Max( MUC,( ( Min( MUC ,RMSe ) - ( ( MUC / RRSe ) + ( RRSe * RRSe ) ) ) * Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8583333333333333, "obj2": 0.05662866399114734}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( RRS + DDR ) - ( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_Mem + PN ) / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * ( CS + DS ) ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.7229166666666667, "obj2": 0.11743702115872386}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - DS ) + DS ) * ( DS * DS ) )", "obj1": 0.7895833333333333, "obj2": 0.08660714622063877}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( DS + DS ) ) - ( ( MUM / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.73125, "obj2": 0.11018404876885178}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS * RCSe ) ) - Min( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) ,( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.5625, "obj2": 0.24767042140872245}, {"determining": "( ( AMS - ( AMS + MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS * AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( BR ,Max( ( RRS - DDR ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( Min( MUC ,CS ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22916666666666666, "obj2": 0.6311567831028093}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5958333333333333, "obj2": 0.2250325259661205}, {"determining": "( ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RCSe * RRSe ) + ( CS + DS ) ) )", "obj1": 0.58125, "obj2": 0.23743788468931934}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,CS ) / Max( RMSe,RCSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( MUR / CS ) + ( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ) / RMSe ) ) + Min( ( MUR - MUR ) ,( ( Min( DS ,( RMSe + MUR ) ) * ( DS / ( RMSe / RMSe ) ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) )", "obj1": 0.6145833333333334, "obj2": 0.21619734635173662}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.65625, "obj2": 0.16561011838408}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * ( ( FirstVNF_CPU / FirstVNF_RAM ) * CRS ) ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) / Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MUC + RMSe ) ) ) * ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( CS + DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6708333333333333, "obj2": 0.1546767656316119}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.6833333333333333, "obj2": 0.14243123492504145}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( Const + RRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( Min( RMSe ,RMSe ) - ( ( MUC / MUC ) + Max( Min( Max( RMSe,RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * RRSe )", "obj1": 0.6354166666666666, "obj2": 0.2133762515019758}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( RMSe + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.94375, "obj2": 0.02394159363219526}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MUM - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.31114170736473}], "31": [{"determining": "( ( ( AMS / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Max( ( ( DDR + RRS ) / ACS ),( ( ( MDR + Const ) + Min( BR ,CRS ) ) + ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) + ( PN * FirstVNF_Mem ) ) + MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * DS ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ( ( ( Max( FirstVNF_RAM,MRS ) / ( CRS + FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU_Server,PN ) / ( CRS * FirstVNF_RAM_Server ) ) ) * Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( RRS - CRS ) ) ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) ) ) ,( Max( Max( Max( DDR,ARS ),( FirstVNF_RAM_Server + ACS ) ),Min( ( FirstVNF_RAM - MRS ) ,( Const + MRS ) ) ) - ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,ARS ) ) - ( ( CRS / BR ) * ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) ) + Min( ( ( Min( Max( Const,RRS ) ,Max( RRS,MDR ) ) / Max( ( FirstVNF_RAM_Server / Const ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_RAM * DDR ) * Min( RRS ,FirstVNF_CPU ) ) * ( ( DDR + RRS ) * ( AMS / CRS ) ) ) ) ,Min( ( ( Max( Const,BR ) - ( FirstVNF_Mem_Server - MDR ) ) + ( ( FirstVNF_Mem / FirstVNF_Mem ) / ( RRS - AMS ) ) ) ,( Min( ( FirstVNF_RAM + BR ) ,( FirstVNF_Mem_Server + MDR ) ) * ( ( DDR + BR ) + Max( FirstVNF_CPU_Server,Const ) ) ) ) ) ) + ( ( ( Min( ( ( RRS / FirstVNF_Mem_Server ) / ( PN / FirstVNF_Mem_Server ) ) ,( ( ARS - FirstVNF_RAM ) / ( MRS - BR ) ) ) - Min( ( ( CRS + FirstVNF_RAM_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_CPU / ARS ) * Min( MRS ,BR ) ) ) ) * ( Max( ( ( RRS + AMS ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ),Max( Max( DDR,MRS ),( Const * PN ) ) ) * ( ( ( MDR - RRS ) / Max( FirstVNF_RAM_Server,AMS ) ) + ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) + ( Max( ( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / CRS ) ) / ( Max( AMS,DDR ) + Min( FirstVNF_Mem ,PN ) ) ),Max( ( Max( PN,FirstVNF_Mem_Server ) - ( ARS - FirstVNF_RAM_Server ) ),Max( Min( AMS ,CRS ),( MRS - MDR ) ) ) ) / ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( ACS / FirstVNF_CPU_Server ) ) * ( ( RRS / FirstVNF_RAM ) * Max( CRS,RRS ) ) ) + ( Max( ( BR * FirstVNF_CPU_Server ),Min( ACS ,MDR ) ) / ( ( FirstVNF_Mem * ARS ) - Max( PN,MDR ) ) ) ) ) ) ) ,( ( ( ( ( ( ( FirstVNF_Mem + DDR ) * ( BR + FirstVNF_CPU_Server ) ) / Max( ( CRS * FirstVNF_RAM_Server ),( AMS * CRS ) ) ) + Max( Max( ( FirstVNF_CPU_Server * MDR ),Max( FirstVNF_Mem,ARS ) ),Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),Max( MDR,Const ) ) ) ) - ( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Min( ACS ,FirstVNF_RAM_Server ) ),Max( Min( BR ,DDR ),( DDR + Const ) ) ) / Max( ( Min( DDR ,MDR ) + Min( Const ,AMS ) ),( ( CRS * FirstVNF_CPU ) / ( FirstVNF_RAM - ARS ) ) ) ) ) * Max( ( Min( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,Max( BR,MDR ) ) ,Min( ( BR - AMS ) ,Min( DDR ,BR ) ) ) + Min( ( Max( ARS,FirstVNF_CPU_Server ) + ( CRS / CRS ) ) ,Min( ( DDR - CRS ) ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ),Min( ( ( Max( AMS,CRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Max( Max( FirstVNF_CPU,CRS ),( RRS + FirstVNF_CPU_Server ) ) ) ,Min( Min( Min( MDR ,BR ) ,( DDR * MRS ) ) ,( Min( PN ,BR ) + ( DDR * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( ( ( ( ARS * AMS ) / Max( Const,AMS ) ) / ( ( FirstVNF_RAM_Server * RRS ) + ( FirstVNF_CPU_Server * Const ) ) ) - Min( ( Max( PN,RRS ) - ( RRS * FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_RAM_Server,RRS ) / ( MDR / MDR ) ) ) ) + Min( ( ( Max( MDR,Const ) / ( AMS - PN ) ) / ( ( Const + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) ) ) ,( ( Max( FirstVNF_CPU_Server,RRS ) + ( FirstVNF_CPU * ARS ) ) / Max( Max( CRS,FirstVNF_Mem ),( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) + ( Min( ( ( ( FirstVNF_CPU_Server * MDR ) - ( BR * FirstVNF_CPU ) ) * ( Min( MRS ,ARS ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ,( ( ( BR + BR ) + Max( FirstVNF_Mem_Server,ACS ) ) * ( ( ACS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) / ( ( ( ( ARS + PN ) + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) + Min( ( PN + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) - Max( ( ( FirstVNF_Mem + MDR ) - ( CRS - BR ) ),( ( MRS / ACS ) - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( RMSe + MUM ) ) + ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( DDR - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) / Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.93125, "obj2": 0.028887993101888505}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47708333333333336, "obj2": 0.3175768246251588}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ) * RRSe )", "obj1": 0.6375, "obj2": 0.20800279777484393}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.6833333333333333, "obj2": 0.14243123492504145}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR + FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR / FirstVNF_RAM ) ) ) + ( PN * FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.27291666666666664, "obj2": 0.582311319780306}, {"determining": "( ( ( AMS / Const ) - Min( RRS ,MRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,CS ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3625, "obj2": 0.4573916641930642}, {"determining": "( ( ( AMS / AMS ) - ( AMS + MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.34791666666666665, "obj2": 0.4734847340091776}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "( ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RCSe * RRSe ) + ( CS + DS ) ) )", "obj1": 0.58125, "obj2": 0.23743788468931934}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem / PN ) / ( ( ( ( PN * DDR ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - Max( Min( MUR ,CS ),( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9916666666666667, "obj2": 0.0033993908329266595}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( RRS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - DS ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) + ( RRSe * RRSe ) ) ) ),RMSe ) ) * ( DS * DS ) )", "obj1": 0.8166666666666667, "obj2": 0.0748427445951604}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5354166666666667, "obj2": 0.26335680003630096}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( MDR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5291666666666667, "obj2": 0.2877226005267682}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6416666666666667, "obj2": 0.17199091285654722}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5145833333333333, "obj2": 0.29486424386963883}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * ( ( FirstVNF_CPU / FirstVNF_RAM ) * CRS ) ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) / Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MUC + RMSe ) ) ) * ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( CS + DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6708333333333333, "obj2": 0.1546767656316119}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.5604166666666667, "obj2": 0.24588552163187147}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( Min( ( PN * FirstVNF_Mem ) ,( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - DS ) + DS ) * ( DS * DS ) )", "obj1": 0.7895833333333333, "obj2": 0.08659049402532239}, {"determining": "( ( ( AMS - AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.49166666666666664, "obj2": 0.3030353101542254}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( Min( ( RRSe - CS ) ,( CS - RCSe ) ) - ( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) + ( Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.7041666666666667, "obj2": 0.12491796023240434}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( DS + DS ) ) - ( ( MUM / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.73125, "obj2": 0.11018404876885178}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.2540553700787211}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * BR ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.7625, "obj2": 0.09820054337517893}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR + FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( BR * CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - DS ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.75, "obj2": 0.1017036852473762}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - ( AMS / MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) / ( ( MUC / MUC ) * ( RMSe * MUR ) ) ) * ( ( DS - MLU ) + ( CS * DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.540874868438774}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.79375, "obj2": 0.08250237084295543}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( ACS ,ACS ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.94375, "obj2": 0.022201867001959218}, {"determining": "( ( ( ( PN * ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS - RCSe ) ) - ( Max( ( ( Min( RMSe ,MUM ) / ( MUR - MUR ) ) / MUC ),MUC ) + ( ( ( DS - MLU ) + ( CS + DS ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) ) ) + DS ) * CS )", "obj1": 0.8729166666666667, "obj2": 0.05046355609903205}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.65625, "obj2": 0.16561011838408}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * Min( AMS ,MRS ) ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( Max( MLU,RRSe ) / ( MLU * ( ( ( MLU + Min( MUM ,RCSe ) ) / ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) / DS ) ) )", "obj1": 0.8375, "obj2": 0.07082866659071849}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( RRS + DDR ) - ( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_Mem + PN ) / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * ( CS + DS ) ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.7229166666666667, "obj2": 0.11743702115872386}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}], "32": [{"determining": "Min( ( ( Min( ( ( ( Max( FirstVNF_RAM,MRS ) / ( CRS + FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU_Server,PN ) / ( CRS * FirstVNF_RAM_Server ) ) ) * Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( RRS - CRS ) ) ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) ) ) ,( Max( Max( Max( DDR,ARS ),( FirstVNF_RAM_Server + ACS ) ),Min( ( FirstVNF_RAM - MRS ) ,( Const + MRS ) ) ) - ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,ARS ) ) - ( ( CRS / BR ) * ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) ) + Min( ( ( Min( Max( Const,RRS ) ,Max( RRS,MDR ) ) / Max( ( FirstVNF_RAM_Server / Const ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_RAM * DDR ) * Min( RRS ,FirstVNF_CPU ) ) * ( ( DDR + RRS ) * ( AMS / CRS ) ) ) ) ,Min( ( ( Max( Const,BR ) - ( FirstVNF_Mem_Server - MDR ) ) + ( ( FirstVNF_Mem / FirstVNF_Mem ) / ( RRS - AMS ) ) ) ,( Min( ( FirstVNF_RAM + BR ) ,( FirstVNF_Mem_Server + MDR ) ) * ( ( DDR + BR ) + Max( FirstVNF_CPU_Server,Const ) ) ) ) ) ) + ( ( ( Min( ( ( RRS / FirstVNF_Mem_Server ) / ( PN / FirstVNF_Mem_Server ) ) ,( ( ARS - FirstVNF_RAM ) / ( MRS - BR ) ) ) - Min( ( ( CRS + FirstVNF_RAM_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_CPU / ARS ) * Min( MRS ,BR ) ) ) ) * ( Max( ( ( RRS + AMS ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ),Max( Max( DDR,MRS ),( Const * PN ) ) ) * ( ( ( MDR - RRS ) / Max( FirstVNF_RAM_Server,AMS ) ) + ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) + ( Max( ( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / CRS ) ) / ( Max( AMS,DDR ) + Min( FirstVNF_Mem ,PN ) ) ),Max( ( Max( PN,FirstVNF_Mem_Server ) - ( ARS - FirstVNF_RAM_Server ) ),Max( Min( AMS ,CRS ),( MRS - MDR ) ) ) ) / ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( ACS / FirstVNF_CPU_Server ) ) * ( ( RRS / FirstVNF_RAM ) * Max( CRS,RRS ) ) ) + ( Max( ( BR * FirstVNF_CPU_Server ),Min( ACS ,MDR ) ) / ( ( FirstVNF_Mem * ARS ) - Max( PN,MDR ) ) ) ) ) ) ) ,( ( ( ( ( ( ( FirstVNF_Mem + DDR ) * ( BR + FirstVNF_CPU_Server ) ) / Max( ( CRS * FirstVNF_RAM_Server ),( AMS * CRS ) ) ) + Max( Max( ( FirstVNF_CPU_Server * MDR ),Max( FirstVNF_Mem,ARS ) ),Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),Max( MDR,Const ) ) ) ) - ( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Min( ACS ,FirstVNF_RAM_Server ) ),Max( Min( BR ,DDR ),( DDR + Const ) ) ) / Max( ( Min( DDR ,MDR ) + Min( Const ,AMS ) ),( ( CRS * FirstVNF_CPU ) / ( FirstVNF_RAM - ARS ) ) ) ) ) * Max( ( Min( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,Max( BR,MDR ) ) ,Min( ( BR - AMS ) ,Min( DDR ,BR ) ) ) + Min( ( Max( ARS,FirstVNF_CPU_Server ) + ( CRS / CRS ) ) ,Min( ( DDR - CRS ) ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ),Min( ( ( Max( AMS,CRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Max( Max( FirstVNF_CPU,CRS ),( RRS + FirstVNF_CPU_Server ) ) ) ,Min( Min( Min( MDR ,BR ) ,( DDR * MRS ) ) ,( Min( PN ,BR ) + ( DDR * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( ( ( ( ARS * AMS ) / Max( Const,AMS ) ) / ( ( FirstVNF_RAM_Server * RRS ) + ( FirstVNF_CPU_Server * Const ) ) ) - Min( ( Max( PN,RRS ) - ( RRS * FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_RAM_Server,RRS ) / ( MDR / MDR ) ) ) ) + Min( ( ( Max( MDR,Const ) / ( AMS - PN ) ) / ( ( Const + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) ) ) ,( ( Max( FirstVNF_CPU_Server,RRS ) + ( FirstVNF_CPU * ARS ) ) / Max( Max( CRS,FirstVNF_Mem ),( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) + ( Min( ( ( ( FirstVNF_CPU_Server * MDR ) - ( BR * FirstVNF_CPU ) ) * ( Min( MRS ,ARS ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ,( ( ( BR + BR ) + Max( FirstVNF_Mem_Server,ACS ) ) * ( ( ACS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) / ( ( ( ( ARS + PN ) + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) + Min( ( PN + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) - Max( ( ( FirstVNF_Mem + MDR ) - ( CRS - BR ) ),( ( MRS / ACS ) - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( RMSe + MUM ) ) * ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( Max( ( ( DDR + RRS ) / ACS ),( ( ( MDR + Const ) + Min( BR ,CRS ) ) + ( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) + ( PN * FirstVNF_Mem ) ) + MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * DS ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47708333333333336, "obj2": 0.3175768246251588}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( DDR - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) / Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( DS - RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.93125, "obj2": 0.028887993101888505}, {"determining": "( ( ( AMS / Const ) - Min( RRS ,MRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,CS ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3625, "obj2": 0.4573916641930642}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5979166666666667, "obj2": 0.22238152243594242}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - ( AMS + MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.34791666666666665, "obj2": 0.4734847340091776}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * ( ( FirstVNF_CPU / FirstVNF_RAM ) * CRS ) ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) / Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MUC + RMSe ) ) ) * ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( CS + DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7041666666666667, "obj2": 0.12463506830309046}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.6833333333333333, "obj2": 0.14243123492504145}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6416666666666667, "obj2": 0.17199091285654722}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR + FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR / FirstVNF_RAM ) ) ) + ( PN * FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.27291666666666664, "obj2": 0.582311319780306}, {"determining": "( ( ( AMS - AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.49166666666666664, "obj2": 0.3030353101542254}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - ( AMS / MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) / ( ( MUC / MUC ) * ( RMSe * MUR ) ) ) * ( ( DS - MLU ) + ( CS * DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.540874868438774}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ) * RRSe )", "obj1": 0.6333333333333333, "obj2": 0.21207735525847887}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * ( ( FirstVNF_CPU / FirstVNF_RAM ) * CRS ) ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) / Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MUC + RMSe ) ) ) * ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( CS + DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6708333333333333, "obj2": 0.1546767656316119}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ) * RRSe )", "obj1": 0.6375, "obj2": 0.20800279777484393}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.65625, "obj2": 0.16561011838408}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( MDR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5291666666666667, "obj2": 0.2877226005267682}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( DS + DS ) ) - ( ( MUM / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.73125, "obj2": 0.11018404876885178}, {"determining": "( ( ( AMS / AMS ) - ( ( ( ( RRS + DDR ) - ( BR * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_Mem + PN ) / FirstVNF_RAM ) * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * ( CS + DS ) ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.7229166666666667, "obj2": 0.11743702115872386}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.5604166666666667, "obj2": 0.24588552163187147}, {"determining": "( ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RCSe * RRSe ) + ( CS + DS ) ) )", "obj1": 0.58125, "obj2": 0.23743788468931934}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5354166666666667, "obj2": 0.26335680003630096}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5145833333333333, "obj2": 0.29486424386963883}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * Min( AMS ,MRS ) ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.7708333333333334, "obj2": 0.09506806551738828}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( ACS ,ACS ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.94375, "obj2": 0.022201867001959218}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( Min( ( PN * FirstVNF_Mem ) ,( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - DS ) + DS ) * ( DS * DS ) )", "obj1": 0.7895833333333333, "obj2": 0.08659049402532239}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.2540553700787211}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.79375, "obj2": 0.08250237084295543}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( RMSe - ( RMSe + MUM ) ) + ( DS + RCSe ) )", "obj1": 0.8145833333333333, "obj2": 0.08009466939901809}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR + FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( BR * CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - DS ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.75, "obj2": 0.1017036852473762}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.054118919339492755}], "33": [{"determining": "( ( ( AMS - AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Min( PN ,FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( PN ,FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( MUM / MUC ) ,( RRSe + RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ( ( ( Max( FirstVNF_RAM,MRS ) / ( CRS + FirstVNF_Mem ) ) - ( Max( FirstVNF_CPU_Server,PN ) / ( CRS * FirstVNF_RAM_Server ) ) ) * Min( Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( RRS - CRS ) ) ,( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,AMS ) ) ) ) ,( Max( Max( Max( DDR,ARS ),( FirstVNF_RAM_Server + ACS ) ),Min( ( FirstVNF_RAM - MRS ) ,( Const + MRS ) ) ) - ( ( ( MDR + FirstVNF_RAM_Server ) + Max( FirstVNF_CPU_Server,ARS ) ) - ( ( CRS / BR ) * ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ) ) + Min( ( ( Min( Max( Const,RRS ) ,Max( RRS,MDR ) ) / Max( ( FirstVNF_RAM_Server / Const ),Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) * ( ( ( FirstVNF_RAM * DDR ) * Min( RRS ,FirstVNF_CPU ) ) * ( ( DDR + RRS ) * ( AMS / CRS ) ) ) ) ,Min( ( ( Max( Const,BR ) - ( FirstVNF_Mem_Server - MDR ) ) + ( ( FirstVNF_Mem / FirstVNF_Mem ) / ( RRS - AMS ) ) ) ,( Min( ( FirstVNF_RAM + BR ) ,( FirstVNF_Mem_Server + MDR ) ) * ( ( DDR + BR ) + Max( FirstVNF_CPU_Server,Const ) ) ) ) ) ) + ( ( ( Min( ( ( RRS / FirstVNF_Mem_Server ) / ( PN / FirstVNF_Mem_Server ) ) ,( ( ARS - FirstVNF_RAM ) / ( MRS - BR ) ) ) - Min( ( ( CRS + FirstVNF_RAM_Server ) / ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ,( ( FirstVNF_CPU / ARS ) * Min( MRS ,BR ) ) ) ) * ( Max( ( ( RRS + AMS ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ),Max( Max( DDR,MRS ),( Const * PN ) ) ) * ( ( ( MDR - RRS ) / Max( FirstVNF_RAM_Server,AMS ) ) + ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) + ( Max( ( Max( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ),( FirstVNF_Mem_Server / CRS ) ) / ( Max( AMS,DDR ) + Min( FirstVNF_Mem ,PN ) ) ),Max( ( Max( PN,FirstVNF_Mem_Server ) - ( ARS - FirstVNF_RAM_Server ) ),Max( Min( AMS ,CRS ),( MRS - MDR ) ) ) ) / ( ( Min( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ,( ACS / FirstVNF_CPU_Server ) ) * ( ( RRS / FirstVNF_RAM ) * Max( CRS,RRS ) ) ) + ( Max( ( BR * FirstVNF_CPU_Server ),Min( ACS ,MDR ) ) / ( ( FirstVNF_Mem * ARS ) - Max( PN,MDR ) ) ) ) ) ) ) ,( ( ( ( ( ( ( FirstVNF_Mem + DDR ) * ( BR + FirstVNF_CPU_Server ) ) / Max( ( CRS * FirstVNF_RAM_Server ),( AMS * CRS ) ) ) + Max( Max( ( FirstVNF_CPU_Server * MDR ),Max( FirstVNF_Mem,ARS ) ),Max( ( FirstVNF_RAM + FirstVNF_CPU_Server ),Max( MDR,Const ) ) ) ) - ( Max( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + Min( ACS ,FirstVNF_RAM_Server ) ),Max( Min( BR ,DDR ),( DDR + Const ) ) ) / Max( ( Min( DDR ,MDR ) + Min( Const ,AMS ) ),( ( CRS * FirstVNF_CPU ) / ( FirstVNF_RAM - ARS ) ) ) ) ) * Max( ( Min( Min( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ,Max( BR,MDR ) ) ,Min( ( BR - AMS ) ,Min( DDR ,BR ) ) ) + Min( ( Max( ARS,FirstVNF_CPU_Server ) + ( CRS / CRS ) ) ,Min( ( DDR - CRS ) ,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) ),Min( ( ( Max( AMS,CRS ) - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) - Max( Max( FirstVNF_CPU,CRS ),( RRS + FirstVNF_CPU_Server ) ) ) ,Min( Min( Min( MDR ,BR ) ,( DDR * MRS ) ) ,( Min( PN ,BR ) + ( DDR * FirstVNF_Mem ) ) ) ) ) ) - ( ( ( ( ( ( ARS * AMS ) / Max( Const,AMS ) ) / ( ( FirstVNF_RAM_Server * RRS ) + ( FirstVNF_CPU_Server * Const ) ) ) - Min( ( Max( PN,RRS ) - ( RRS * FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_RAM_Server,RRS ) / ( MDR / MDR ) ) ) ) + Min( ( ( Max( MDR,Const ) / ( AMS - PN ) ) / ( ( Const + FirstVNF_RAM_Server ) + Min( ARS ,RRS ) ) ) ,( ( Max( FirstVNF_CPU_Server,RRS ) + ( FirstVNF_CPU * ARS ) ) / Max( Max( CRS,FirstVNF_Mem ),( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ) ) + ( Min( ( ( ( FirstVNF_CPU_Server * MDR ) - ( BR * FirstVNF_CPU ) ) * ( Min( MRS ,ARS ) + ( FirstVNF_Mem / FirstVNF_Mem ) ) ) ,( ( ( BR + BR ) + Max( FirstVNF_Mem_Server,ACS ) ) * ( ( ACS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem_Server ,Const ) ) ) ) / ( ( ( ( ARS + PN ) + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) + Min( ( PN + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) - Max( ( ( FirstVNF_Mem + MDR ) - ( CRS - BR ) ),( ( MRS / ACS ) - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( RMSe + MUM ) ) * ( DS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( ACS ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RRSe,DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.18005049159091782}, {"determining": "( ( DDR - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) * Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RRSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.93125, "obj2": 0.028869299282632217}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + AMS ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.6083333333333333, "obj2": 0.22097095997733449}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - ( AMS + MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.34791666666666665, "obj2": 0.4734847340091776}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47708333333333336, "obj2": 0.3175768246251588}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.6833333333333333, "obj2": 0.14243123492504145}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR + FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR / FirstVNF_RAM ) ) ) + ( PN * FirstVNF_RAM_Server ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.27291666666666664, "obj2": 0.582311319780306}, {"determining": "( ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RCSe * RRSe ) + ( CS + DS ) ) )", "obj1": 0.58125, "obj2": 0.23743788468931934}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( PN ,FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.45625, "obj2": 0.33151037012565693}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - ( AMS / MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) / ( ( MUC / MUC ) * ( RMSe * MUR ) ) ) * ( ( DS - MLU ) + ( CS * DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.540874868438774}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5354166666666667, "obj2": 0.26335680003630096}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( MDR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5291666666666667, "obj2": 0.2877226005267682}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.054118919339492755}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * ( ( FirstVNF_CPU / FirstVNF_RAM ) * CRS ) ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) / Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MUC + RMSe ) ) ) * ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( CS + DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6708333333333333, "obj2": 0.1546767656316119}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + MDR ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + ( Max( MUR,CS ) + ( DS - MUR ) ) ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( RRSe + DS ) ) )", "obj1": 0.36875, "obj2": 0.44957264342264747}, {"determining": "( ( ( AMS - AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.49166666666666664, "obj2": 0.3030353101542254}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * ( RRS - DDR ) ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( MUC ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.975, "obj2": 0.010583929254363649}, {"determining": "( ( ( AMS / Const ) - Min( RRS ,MRS ) ) - Max( Max( FirstVNF_Mem,FirstVNF_CPU_Server ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) * ( ( MUC / MUC ) + Max( MUC,CS ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3625, "obj2": 0.4573916641930642}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.5604166666666667, "obj2": 0.24588552163187147}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5979166666666667, "obj2": 0.22238152243594242}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,( AMS / AMS ) ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( RMSe - ( RMSe + ( MUM * RCSe ) ) ) + ( DS + RCSe ) )", "obj1": 0.8229166666666666, "obj2": 0.07038628298177141}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * ( ( FirstVNF_CPU / FirstVNF_RAM ) * CRS ) ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) / Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MUC + RMSe ) ) ) * ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( CS + DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7041666666666667, "obj2": 0.12463506830309046}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * Min( AMS ,MRS ) ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.7708333333333334, "obj2": 0.09506806551738828}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( ACS ,ACS ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.94375, "obj2": 0.022201867001959218}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( FirstVNF_RAM ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( MUC - ( MUR / DS ) ) * Min( ( DS * MLU ) ,( CS + DS ) ) )", "obj1": 0.84375, "obj2": 0.06358343894711227}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5145833333333333, "obj2": 0.29486424386963883}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6416666666666667, "obj2": 0.17199091285654722}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( DS + DS ) ) - ( ( MUM / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.73125, "obj2": 0.11018404876885178}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( Max( ( Max( PN,FirstVNF_Mem_Server ) - ( ARS - FirstVNF_RAM_Server ) ),Max( Min( AMS ,CRS ),( MRS - MDR ) ) ) + FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( BR * CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RMSe ) ) - DS ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8479166666666667, "obj2": 0.060590288542228546}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.50625, "obj2": 0.29758958191219403}], "34": [{"determining": "( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) * RMSe ) ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Min( PN ,FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( PN ,FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( MUM / MUC ) ,( RRSe + RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( DS + DS ) ) - ( ( MUM / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.73125, "obj2": 0.11018404876885178}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( DDR - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) * Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RRSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.93125, "obj2": 0.028869299282632217}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * ( ( BR / FirstVNF_RAM ) * CRS ) ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7041666666666667, "obj2": 0.12270847147352089}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - ( AMS + MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.34791666666666665, "obj2": 0.4734847340091776}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.2708333333333333, "obj2": 0.5815057847042377}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( PN ,FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.45625, "obj2": 0.33151037012565693}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - ( AMS / MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) / ( ( MUC / MUC ) * ( RMSe * MUR ) ) ) * ( ( DS - MLU ) + ( CS * DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.540874868438774}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( Min( ( PN * FirstVNF_Mem ) ,( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / CS ) + Max( RMSe,( Max( RMSe,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6270833333333333, "obj2": 0.18847548486892302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * Min( AMS ,MRS ) ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MLU,RMSe ) ) ) * ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.76875, "obj2": 0.09620265747181003}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.6833333333333333, "obj2": 0.14243123492504145}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( ( ( ( PN * FirstVNF_Mem ) * Min( AMS ,MRS ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.5291666666666667, "obj2": 0.2769174896912397}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) - ( FirstVNF_CPU_Server - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( DS / RRSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),MLU ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.6166666666666667, "obj2": 0.21697084020967064}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.17090590009677373}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RCSe * RRSe ) + ( CS + DS ) ) )", "obj1": 0.58125, "obj2": 0.23743788468931934}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + MDR ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + ( Max( MUR,CS ) + ( DS - MUR ) ) ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( RRSe + DS ) ) )", "obj1": 0.36875, "obj2": 0.44957264342264747}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( DS + DS ) ) )", "obj1": 0.5354166666666667, "obj2": 0.261539717522967}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( FirstVNF_RAM * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ) / MUC ) * Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3625, "obj2": 0.4539727842634831}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( MUC,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47708333333333336, "obj2": 0.3175768246251588}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( FirstVNF_Mem_Server ,( AMS / AMS ) ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RMSe,DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7895833333333333, "obj2": 0.0846516650314531}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( ACS ,ACS ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.94375, "obj2": 0.022201867001959218}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RRSe,DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.55, "obj2": 0.252807873421654}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * ( RRS - DDR ) ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( MUC ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.975, "obj2": 0.010583929254363649}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5166666666666667, "obj2": 0.2945492369274415}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.054118919339492755}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * Min( AMS ,MRS ) ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.7708333333333334, "obj2": 0.09409773520840573}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.59375, "obj2": 0.2249302874784288}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( ACS ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( RRSe,DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6333333333333333, "obj2": 0.18005049159091782}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.48125, "obj2": 0.3115247058456174}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( MUC / RMSe ) ) ) * ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.40625, "obj2": 0.3977125927789524}], "35": [{"determining": "( ( ( AMS - AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Min( PN ,FirstVNF_Mem ) + Min( MDR ,MRS ) ) + Min( PN ,FirstVNF_Mem ) ) / ACS ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( ( ( MUM / MUC ) - ( RRSe + RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + ( Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) * RMSe ) ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8229166666666666, "obj2": 0.07120092938521737}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( DDR - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) * Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RRSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.93125, "obj2": 0.028869299282632217}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) + ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC - ( MUR / DS ) ) * ( ( DS * MLU ) + ( CS + DS ) ) )", "obj1": 0.8645833333333334, "obj2": 0.05532732043475185}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - ( AMS / MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) / ( ( MUC / MUC ) * ( RMSe * MUR ) ) ) * ( ( DS - MLU ) + ( CS * DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.540874868438774}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( PN ,FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.45625, "obj2": 0.33151037012565693}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( DS + DS ) ) - ( ( MUM / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.73125, "obj2": 0.11018404876885178}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.6833333333333333, "obj2": 0.14243123492504145}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) - ( FirstVNF_CPU_Server - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( DS / RRSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),MLU ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.6166666666666667, "obj2": 0.21697084020967064}, {"determining": "( ( ( AMS / AMS ) - ( AMS + MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.34791666666666665, "obj2": 0.4734847340091776}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + Min( ( ( FirstVNF_RAM + CRS ) + ( FirstVNF_CPU_Server - CRS ) ) ,MRS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / ( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ) + Max( RRSe,DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7583333333333333, "obj2": 0.10115474844537259}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.17090590009677373}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * Min( AMS ,MRS ) ) + Min( ( ( FirstVNF_RAM / CRS ) + Max( BR,CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.7979166666666667, "obj2": 0.08027827890079085}, {"determining": "( ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RCSe * RRSe ) + ( CS + DS ) ) )", "obj1": 0.58125, "obj2": 0.23743788468931934}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * ( ( BR / FirstVNF_RAM ) * CRS ) ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( RMSe,( ( DS - MUR ) + ( CS + DS ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12440697272730367}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( PN * CRS ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) / ( ( MUC / MUC ) + Max( RMSe,( Max( RMSe,MUC ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6208333333333333, "obj2": 0.19189106202223663}, {"determining": "( ( ( AMS / BR ) - ( AMS / MRS ) ) - ( ( AMS + PN ) / ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),CRS ) ) / MDR ) ) )", "choosing": "( ( ( Min( RMSe ,MUM ) / Max( RMSe,RMSe ) ) / Min( ( RMSe / RMSe ) ,( RCSe * RRSe ) ) ) * ( ( ( RMSe / CS ) + ( MLU * RCSe ) ) + ( Min( Min( DS ,RMSe ) ,( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ) )", "obj1": 0.95625, "obj2": 0.015917383156052598}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( MRS + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ,Max( MLU,MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7208333333333333, "obj2": 0.1174583419059852}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( ACS ,ACS ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( Const / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( CRS ,DDR ) ) ) ) / DDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( DS / ( ( MUC / MUC ) + Max( MUM,MUR ) ) ) + ( MLU + MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.94375, "obj2": 0.022201867001959218}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( RRSe + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.31841121158847546}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( FirstVNF_RAM * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ) / MUC ) * Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3625, "obj2": 0.4539727842634831}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * MRS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.50625, "obj2": 0.30246126799210804}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( MUC / MUC ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.375, "obj2": 0.44788621847134474}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( RRS * ( AMS / AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( MUC + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( DS + DS ) ) )", "obj1": 0.3541666666666667, "obj2": 0.47045013982846806}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5166666666666667, "obj2": 0.2945492369274415}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,Min( RRSe ,Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.4875, "obj2": 0.3099213694542496}, {"determining": "( ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RRSe ) + ( CS + DS ) ) )", "obj1": 0.56875, "obj2": 0.24111869626948387}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( DS + DS ) ) )", "obj1": 0.5354166666666667, "obj2": 0.261539717522967}], "36": [{"determining": "( ( Min( AMS ,AMS ) - ( AMS - MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( CRS * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( Min( PN ,FirstVNF_Mem ) + Min( MDR ,MRS ) ) + Min( PN ,FirstVNF_Mem ) ) / ACS ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( ( ( MUM / MUC ) - ( RRSe + RRSe ) ) / MUC ) / Max( MUC,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( DDR - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) * Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RRSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.93125, "obj2": 0.028869299282632217}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) - ( FirstVNF_CPU_Server - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( DS / RRSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),MLU ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.6166666666666667, "obj2": 0.21697084020967064}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.17090590009677373}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * ( ( BR / FirstVNF_RAM ) * CRS ) ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( RMSe,( ( DS - MUR ) + ( CS + DS ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12440697272730367}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8229166666666666, "obj2": 0.07120092938521737}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - ( AMS / MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) / ( ( MUC / MUC ) * ( RMSe * MUR ) ) ) * ( ( DS - MLU ) + ( CS * DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.540874868438774}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.6833333333333333, "obj2": 0.14243123492504145}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( FirstVNF_Mem - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( MUR / DS ) ) * ( ( DS * MLU ) + ( ( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( DS + DS ) ) ) + DS ) ) )", "obj1": 0.85, "obj2": 0.06367013443316535}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU_Server ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( RRSe * RRSe ) + ( CS + MLU ) ) )", "obj1": 0.59375, "obj2": 0.23244467455276707}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( PN ,FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.45625, "obj2": 0.33151037012565693}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( PN * CRS ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) / ( ( MUC / MUC ) + Max( RMSe,( Max( RMSe,MUC ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6208333333333333, "obj2": 0.19189106202223663}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) - ( FirstVNF_CPU_Server - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6395833333333333, "obj2": 0.18619797394348012}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( ( ( RRS - DDR ) / ( Const * FirstVNF_RAM_Server ) ) + FirstVNF_RAM_Server ) * ( MDR + FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * DS ) ) - ( Min( DS ,RMSe ) - ( ( Min( CS ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS - DS ) )", "obj1": 0.9645833333333333, "obj2": 0.011702789361281775}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( MUC / MUC ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.375, "obj2": 0.44788621847134474}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( DS + DS ) ) )", "obj1": 0.78125, "obj2": 0.09759572211889965}, {"determining": "( ( ( AMS / AMS ) - ( AMS + MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.34791666666666665, "obj2": 0.4734847340091776}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5166666666666667, "obj2": 0.2945492369274415}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( FirstVNF_RAM * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ) / MUC ) * Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3625, "obj2": 0.4539727842634831}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem / PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM - CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - RCSe ) + ( CS + DS ) ) )", "obj1": 0.9916666666666667, "obj2": 0.0033993908329266595}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( MRS + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ,Max( MLU,MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7208333333333333, "obj2": 0.1174583419059852}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( RRSe + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.31841121158847546}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( RRS * ( AMS / AMS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( MUC + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( DS + DS ) ) )", "obj1": 0.3541666666666667, "obj2": 0.47045013982846806}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( DS + DS ) ) - ( ( MUM / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.73125, "obj2": 0.11018404876885178}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.7916666666666666, "obj2": 0.08263797151978453}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5666666666666667, "obj2": 0.2435344171167346}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,Min( RRSe ,Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.8020833333333334, "obj2": 0.07860389311925008}], "37": [{"determining": "( ( ( Min( PN ,( ( RRS - DDR ) * ( FirstVNF_Mem + PN ) ) ) / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( PN - CRS ) ) ,BR ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MLU - RCSe ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( CRS * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( DDR - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) * Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RRSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.93125, "obj2": 0.028869299282632217}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( RRSe + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.31841121158847546}, {"determining": "( ( Min( AMS ,AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.5166666666666667, "obj2": 0.2945492369274415}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( ( ( RRS - DDR ) / ( Const * FirstVNF_RAM_Server ) ) + FirstVNF_RAM_Server ) * ( MDR + FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * DS ) ) - ( Min( DS ,RMSe ) - ( ( Min( CS ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS - DS ) )", "obj1": 0.9645833333333333, "obj2": 0.011702789361281775}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem / ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( ( RCSe / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6020833333333333, "obj2": 0.21010151494975887}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( BR - CRS ) ) + ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( DS + DS ) ) - ( ( MUM / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.73125, "obj2": 0.11018404876885178}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.17090590009677373}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * ( ( BR / FirstVNF_RAM ) * CRS ) ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( RMSe,( ( DS - MUR ) + ( CS + DS ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12440697272730367}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( Max( ( PN * FirstVNF_Mem ),( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( MLU + MUC ) ) ) ) * ( ( RRSe - MLU ) + ( DS + DS ) ) )", "obj1": 0.7729166666666667, "obj2": 0.10054934558820945}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - ( AMS / MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) / ( ( MUC / MUC ) * ( RMSe * MUR ) ) ) * ( ( DS - MLU ) + ( CS * DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.540874868438774}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 0.6833333333333333, "obj2": 0.14243123492504145}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( PN ,FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.45625, "obj2": 0.33151037012565693}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( PN * CRS ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) / ( ( MUC / MUC ) + Max( RMSe,( Max( RMSe,MUC ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6208333333333333, "obj2": 0.19189106202223663}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ACS / ( Max( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * ( DS + Max( MUC,RMSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.8583333333333333, "obj2": 0.05829240484803406}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU_Server ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( RRSe * RRSe ) + ( CS + MLU ) ) )", "obj1": 0.59375, "obj2": 0.23244467455276707}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( MUC / MUC ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.375, "obj2": 0.44788621847134474}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8229166666666666, "obj2": 0.07120092938521737}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem / PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM - CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( Min( ( MUR / RMSe ) ,( RRSe * ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.9916666666666667, "obj2": 0.0031385806238214535}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( MRS + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) ,Max( MLU,MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7208333333333333, "obj2": 0.1174583419059852}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( PN * AMS ) * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( Max( RMSe,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( DS,CS ) ) )", "obj1": 0.6375, "obj2": 0.1824309538042941}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( CRS - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( MUR / DS ) ) * ( Min( DS ,MLU ) + ( CS + DS ) ) )", "obj1": 0.85, "obj2": 0.06213544779163502}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5666666666666667, "obj2": 0.2435344171167346}, {"determining": "( ( ( AMS / AMS ) - Max( AMS,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( ( Max( MUR,CS ) + ( DS - MUR ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS - RMSe ) ) ) * ( ( DS - MUC ) + ( CS + DS ) ) )", "obj1": 0.35833333333333334, "obj2": 0.45729758395056325}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( Min( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) ,MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.23420178571243455}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - RCSe ) + ( CS + DS ) ) )", "obj1": 0.6291666666666667, "obj2": 0.18777659502882021}], "38": [{"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,( ( RRS - DDR ) * ( FirstVNF_Mem + PN ) ) ) / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( PN - CRS ) ) ,BR ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( MLU - RCSe ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( DDR - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) * Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RRSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * RRSe ) ) ),DS ) ,( RRSe / MUC ) ) ) + MUC ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.93125, "obj2": 0.028869299282632217}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem / ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( ( RCSe / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6020833333333333, "obj2": 0.21010151494975887}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( MUR,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5, "obj2": 0.3025339928082328}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( RRSe + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.31841121158847546}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.17090590009677373}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( AMS / AMS ) - Max( AMS,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( ( Max( MUR,CS ) + ( DS - MUR ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS - RMSe ) ) ) * ( ( DS - MUC ) + ( CS + DS ) ) )", "obj1": 0.35833333333333334, "obj2": 0.45729758395056325}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.375, "obj2": 0.44645104911614725}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5666666666666667, "obj2": 0.2435344171167346}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( ( AMS - MRS ) + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( MLU / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.7416666666666667, "obj2": 0.10737828500912978}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN / FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( CS ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( MUC * DS ) )", "obj1": 0.9354166666666667, "obj2": 0.025901696516976606}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( PN * CRS ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) / ( ( MUC / MUC ) + Max( RMSe,( Max( RMSe,MUC ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6208333333333333, "obj2": 0.19189106202223663}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU_Server ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( RRSe * RRSe ) + ( CS + MLU ) ) )", "obj1": 0.59375, "obj2": 0.23244467455276707}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( Max( ( PN * FirstVNF_Mem ),( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( MLU + MUC ) ) ) ) * ( ( RRSe - MLU ) + ( DS + DS ) ) )", "obj1": 0.7729166666666667, "obj2": 0.10054934558820945}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( DS ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.9645833333333333, "obj2": 0.011702789361281775}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( Max( ( PN * FirstVNF_Mem ),( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,( ( DS - MLU ) * Min( CS ,RMSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( MLU + MUC ) ) ) ) * ( ( RRSe - MLU ) + ( DS + DS ) ) )", "obj1": 0.7208333333333333, "obj2": 0.1167379513219231}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) * ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( MUR / DS ) ) * ( ( DS * MLU ) + Max( CS,RMSe ) ) )", "obj1": 0.8104166666666667, "obj2": 0.07585610897384293}, {"determining": "( Min( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) ,MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.23420178571243455}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( MUC + DS ) ) )", "obj1": 0.6916666666666667, "obj2": 0.1390028398686321}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( ( ( RRS - DDR ) / ( Const * FirstVNF_RAM_Server ) ) + FirstVNF_RAM_Server ) * ( MDR + FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * DS ) ) - ( Min( DS ,RMSe ) - ( ( Min( CS ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS - DS ) )", "obj1": 0.9645833333333333, "obj2": 0.011702789361281775}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Max( ( BR / FirstVNF_RAM ),Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS - DDR ),( MDR - Max( ( RRS - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( MUR / DS ) ) * ( ( DS * Min( DS ,RMSe ) ) + ( CS + DS ) ) )", "obj1": 0.7895833333333333, "obj2": 0.08443311421655811}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - DS ) + ( CS + RRSe ) ) )", "obj1": 0.8375, "obj2": 0.06436272626738898}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,Min( AMS ,MRS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,MRS ) ) - ( PN * FirstVNF_CPU_Server ) ) - MDR ) ) )", "choosing": "( ( ( CS * RMSe ) - ( ( MUC / MUC ) * Max( MLU,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + DS ) ) )", "obj1": 0.29375, "obj2": 0.5375084227476838}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - ( AMS / MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) / ( ( MUC / MUC ) * ( RMSe * MUR ) ) ) * ( ( DS - MLU ) + ( CS * DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.540874868438774}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( PN ,FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.45625, "obj2": 0.33151037012565693}], "39": [{"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC - MUM ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) * Max( ( CRS - DDR ),( FirstVNF_CPU * FirstVNF_CPU_Server ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) ) - Min( ( MUR + DS ) ,( MLU / MUC ) ) ) + MUR ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( MUC + DS ) ) )", "obj1": 0.6916666666666667, "obj2": 0.1390028398686321}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.17090590009677373}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( ( ( RRS - DDR ) / ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( DS - ( MLU / DS ) ) * ( ( CS * MLU ) + ( CS + DS ) ) )", "obj1": 0.9229166666666667, "obj2": 0.036662069531491884}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( DDR + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6641477944464533}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( PN ,FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.45625, "obj2": 0.33151037012565693}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( RRSe + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.31841121158847546}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / DS ) + Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.7145833333333333, "obj2": 0.12219834183521604}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem / ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( ( RCSe / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6020833333333333, "obj2": 0.21010151494975887}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU_Server ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( RRSe * RRSe ) + ( CS + MLU ) ) )", "obj1": 0.59375, "obj2": 0.23244467455276707}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.5375, "obj2": 0.26806034377321747}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( FirstVNF_CPU - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( DS ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + MLU ) * ( MUC * DS ) )", "obj1": 0.9479166666666666, "obj2": 0.01898659662702008}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( ( AMS / AMS ) - Max( AMS,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( ( Max( MUR,CS ) + ( DS - MUR ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS - RMSe ) ) ) * ( ( DS - MUC ) + ( CS + DS ) ) )", "obj1": 0.35833333333333334, "obj2": 0.45729758395056325}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.8791666666666667, "obj2": 0.05202235794502441}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.375, "obj2": 0.44645104911614725}, {"determining": "( Min( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) ,MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.23420178571243455}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( DS - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9645833333333333, "obj2": 0.01168999125519161}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Min( BR ,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / RMSe ) + Max( RMSe,( RMSe - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6125, "obj2": 0.20434500664176716}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( Max( RMSe,MUC ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.178782422112204}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,Min( AMS ,MRS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,MRS ) ) - ( PN * FirstVNF_CPU_Server ) ) - MDR ) ) )", "choosing": "( ( ( CS * RMSe ) - ( ( MUC / MUC ) * Max( MLU,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + DS ) ) )", "obj1": 0.29375, "obj2": 0.5375084227476838}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU ) ) * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( RMSe / MUC ),( Min( ( MUC / ( RRSe + DS ) ) ,( RRSe * Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ) / RMSe ) ) ) * ( ( RRSe - DS ) + ( CS + RRSe ) ) )", "obj1": 0.49166666666666664, "obj2": 0.312559765334487}, {"determining": "( ( ( FirstVNF_Mem_Server / AMS ) - ( AMS / MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,MRS ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) / ( ( MUC / MUC ) * ( RMSe * MUR ) ) ) * ( ( DS - MLU ) + ( CS * DS ) ) )", "obj1": 0.28541666666666665, "obj2": 0.540874868438774}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( MRS * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.7645833333333333, "obj2": 0.0972707580090053}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( MUR,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5, "obj2": 0.3025339928082328}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.2604166666666667, "obj2": 0.5924494772624759}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.2873411088638506}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( AMS - Min( AMS ,MRS ) ) - ( ( PN + RRS ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS / DDR ),( FirstVNF_CPU * DDR ) ) ) ) ) + MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.25625, "obj2": 0.5939889643735966}], "40": [{"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_RAM ,MRS ) ) - Max( Max( PN,( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( AMS - MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - Const ) ) + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * RCSe ) - ( ( MLU + ( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RRSe ) + ( CS + DS ) ) ) ) + ( MUC * MUR ) ) ) * ( ( MUC - MLU ) + ( CS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( PN * FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC - MUM ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( ( ( RRS - DDR ) / ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( DS - ( MLU / DS ) ) * ( ( CS * MLU ) + ( CS + DS ) ) )", "obj1": 0.9229166666666667, "obj2": 0.036662069531491884}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( FirstVNF_RAM_Server * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( Max( RMSe,MUC ) - ( DS + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.81875, "obj2": 0.07192482232596198}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem * PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) * Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.76875, "obj2": 0.09257483276705392}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( Max( RMSe,MUC ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.178782422112204}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( Min( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) ,MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.23420178571243455}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Min( BR ,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / RMSe ) + Max( RMSe,( RMSe - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6125, "obj2": 0.20434500664176716}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.17090590009677373}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( MUC + DS ) ) )", "obj1": 0.6916666666666667, "obj2": 0.1390028398686321}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "Min( ( ( DDR + ( MDR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20625, "obj2": 0.6547396147502379}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( DS - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9645833333333333, "obj2": 0.01168999125519161}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( PN ,FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.45625, "obj2": 0.33151037012565693}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( RRSe + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.31841121158847546}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( AMS / AMS ) - Max( AMS,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( ( Max( MUR,CS ) + ( DS - MUR ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS - RMSe ) ) ) * ( ( DS - MUC ) + ( CS + DS ) ) )", "obj1": 0.35833333333333334, "obj2": 0.45729758395056325}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.375, "obj2": 0.44645104911614725}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( FirstVNF_CPU - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.9479166666666666, "obj2": 0.018961000414839755}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / DS ) + Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.7145833333333333, "obj2": 0.12219834183521604}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( MUC / ( RRSe + DS ) ) ,( RRSe * Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - DS ) + ( CS + RRSe ) ) )", "obj1": 0.8333333333333334, "obj2": 0.07158926342659985}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.2873411088638506}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem / ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( ( RCSe / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6020833333333333, "obj2": 0.21010151494975887}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU_Server ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( RRSe * RRSe ) + ( CS + MLU ) ) )", "obj1": 0.59375, "obj2": 0.23244467455276707}, {"determining": "( ( FirstVNF_Mem - Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC - MUC ) + Max( RMSe,( DS - ( ( MUC / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) ) )", "obj1": 0.9958333333333333, "obj2": 0.0013307848912923028}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( MUR,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5, "obj2": 0.3025339928082328}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU ) ) * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( RMSe / MUC ),( Min( ( MUC / ( RRSe + DS ) ) ,( RRSe * Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ) / RMSe ) ) ) * ( ( RRSe - DS ) + ( CS + RRSe ) ) )", "obj1": 0.49166666666666664, "obj2": 0.312559765334487}, {"determining": "( ( ( AMS / AMS ) - Min( ACS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_CPU_Server ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ),( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( RMSe / RMSe ) ,( RRSe / RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.3104166666666667, "obj2": 0.5299646768984437}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / DS ) + Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,( RRSe * RRSe ) ) ) ),RMSe ) ) ) * ( ( DS - MUR ) + ( CS + DS ) ) )", "obj1": 0.7229166666666667, "obj2": 0.11830306486635815}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUR / CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RRSe ) * ( CS + DS ) ) )", "obj1": 0.7375, "obj2": 0.10895570016015774}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,Min( AMS ,MRS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,MRS ) ) - ( PN * FirstVNF_CPU_Server ) ) - MDR ) ) )", "choosing": "( ( ( CS * RMSe ) - ( ( MUC / MUC ) * Max( MLU,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + DS ) ) )", "obj1": 0.29375, "obj2": 0.5375084227476838}], "41": [{"determining": "( ( PN * FirstVNF_Mem ) - Min( Max( FirstVNF_Mem,PN ) ,( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( CS + MLU ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_RAM ,MRS ) ) - Max( Max( PN,( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( AMS - MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ),( ( ( ( PN * FirstVNF_Mem ) + ( BR - Const ) ) + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * RCSe ) - ( ( MLU + ( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RRSe ) + ( CS + DS ) ) ) ) + ( MUC * MUR ) ) ) * ( ( MUC - MLU ) + ( CS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + PN ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( DS - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC - MUC ) + Max( RMSe,( DS - ( ( MUC / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) + ( CS + DS ) ) )", "obj1": 0.9208333333333333, "obj2": 0.031922092915559475}, {"determining": "( Min( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) ,MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.23420178571243455}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.17090590009677373}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,Min( AMS ,MRS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,MRS ) ) - ( PN * FirstVNF_CPU_Server ) ) - MDR ) ) )", "choosing": "( ( ( CS * RMSe ) - ( ( MUC / MUC ) * Max( MLU,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + DS ) ) )", "obj1": 0.29375, "obj2": 0.5375084227476838}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "Min( ( ( DDR + ( MDR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20625, "obj2": 0.6547396147502379}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( RRSe + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.31841121158847546}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( AMS / AMS ) - Max( AMS,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( ( Max( MUR,CS ) + ( DS - MUR ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS - RMSe ) ) ) * ( ( DS - MUC ) + ( CS + DS ) ) )", "obj1": 0.35833333333333334, "obj2": 0.45729758395056325}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem * PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) * Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.76875, "obj2": 0.09257483276705392}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.375, "obj2": 0.44645104911614725}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( Max( RMSe,MUC ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.178782422112204}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS - DS ) ) + Max( MUR,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9645833333333333, "obj2": 0.011678923912056693}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUR / CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RRSe ) * ( CS + DS ) ) )", "obj1": 0.7375, "obj2": 0.10895570016015774}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.2873411088638506}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( RRSe + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.6291666666666667, "obj2": 0.19873899015070806}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU_Server ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( MUR,CS ) + ( DS - ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( RRSe * RRSe ) + ( CS + MLU ) ) )", "obj1": 0.59375, "obj2": 0.23244467455276707}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * Min( AMS ,MRS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( MUC,MUR ) ) ) / MUC ) + Max( Min( ( MUC / ( RRSe + DS ) ) ,( RRSe * Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - DS ) + ( CS + RRSe ) ) )", "obj1": 0.79375, "obj2": 0.08486869672477382}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( Max( RMSe,MUC ) - ( ( MUC / DS ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5375, "obj2": 0.2676625650308481}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( FirstVNF_Mem - Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC - MUC ) + Max( RMSe,( DS - ( ( MUC / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) ) )", "obj1": 0.9958333333333333, "obj2": 0.0013307848912923028}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( MUC + DS ) ) )", "obj1": 0.6916666666666667, "obj2": 0.1390028398686321}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( MUR,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5, "obj2": 0.3025339928082328}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU ) ) * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( RMSe / MUC ),( Min( ( MUC / ( RRSe + DS ) ) ,( RRSe * Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ) / RMSe ) ) ) * ( ( RRSe - DS ) + ( CS + RRSe ) ) )", "obj1": 0.49166666666666664, "obj2": 0.312559765334487}, {"determining": "( ( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - Min( Max( FirstVNF_Mem,PN ) ,( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( DS - ( MLU / DS ) ) * ( ( CS * MLU ) + ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) )", "obj1": 0.8833333333333333, "obj2": 0.05581881510270578}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.83125, "obj2": 0.07132316132978499}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / Max( RMSe,( RMSe - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.9354166666666667, "obj2": 0.025901696516976606}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem / ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( ( RCSe / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6020833333333333, "obj2": 0.21010151494975887}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( AMS - ( Min( ( ( DDR + ( MDR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.8479166666666667, "obj2": 0.06055179029649694}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + MDR ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.33541666666666664, "obj2": 0.48300941468908765}], "42": [{"determining": "( ( ( RRS / AMS ) - Min( DDR ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RCSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * FirstVNF_Mem ) - Min( Max( FirstVNF_Mem,PN ) ,( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( CS + MLU ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( Min( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) ,MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.23420178571243455}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_RAM_Server + PN ) * ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( DS / MUC ) + Max( RCSe,( RMSe - ( ( RRSe / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.70625, "obj2": 0.12409213901455585}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( MUC + DS ) ) )", "obj1": 0.6916666666666667, "obj2": 0.1390028398686321}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * ( Min( ( PN * FirstVNF_Mem ) ,( BR - Const ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - MLU ) + DS ) * ( DS * DS ) )", "obj1": 0.25625, "obj2": 0.5933001184941733}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "Min( ( ( DDR + ( MDR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20625, "obj2": 0.6547396147502379}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4708333333333333, "obj2": 0.3258320824966442}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( ( MUR / CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RRSe ) * ( CS + DS ) ) )", "obj1": 0.7375, "obj2": 0.10895570016015774}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,Min( AMS ,MRS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,MRS ) ) - ( PN * FirstVNF_CPU_Server ) ) - MDR ) ) )", "choosing": "( ( ( CS * RMSe ) - ( ( MUC / MUC ) * Max( MLU,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + DS ) ) )", "obj1": 0.29375, "obj2": 0.5375084227476838}, {"determining": "( ( ( AMS / AMS ) - Max( AMS,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( ( Max( MUR,CS ) + ( DS - MUR ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS - RMSe ) ) ) * ( ( DS - MUC ) + ( CS + DS ) ) )", "obj1": 0.35833333333333334, "obj2": 0.45729758395056325}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.375, "obj2": 0.44645104911614725}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * Min( AMS ,MRS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( MUC,MUR ) ) ) / MUC ) + Max( Min( ( MUC / ( RRSe + DS ) ) ,( RRSe * Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - DS ) + ( CS + RRSe ) ) )", "obj1": 0.79375, "obj2": 0.08486869672477382}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.5104166666666666, "obj2": 0.2873411088638506}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem * PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) * Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.76875, "obj2": 0.09257483276705392}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,PN ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( ( MUC / RMSe ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.59375, "obj2": 0.21877601439181532}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( Max( RMSe,MUC ) - ( ( MUC / DS ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5375, "obj2": 0.2676625650308481}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( RRSe + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS / MLU ) + ( CS + DS ) ) )", "obj1": 0.6291666666666667, "obj2": 0.19873899015070806}, {"determining": "( ( Min( AMS ,AMS ) - ( AMS - ( ( AMS / AMS ) - Min( AMS ,MRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS + DS ) ) + Max( MUR,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5, "obj2": 0.3025339928082328}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.17090590009677373}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS - DS ) ) + Max( MUR,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9645833333333333, "obj2": 0.011678923912056693}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU ) ) * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( RMSe / MUC ),( Min( ( MUC / ( RRSe + DS ) ) ,( RRSe * Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ) / RMSe ) ) ) * ( ( RRSe - DS ) + ( CS + RRSe ) ) )", "obj1": 0.49166666666666664, "obj2": 0.312559765334487}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / Max( RMSe,( RMSe - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.9354166666666667, "obj2": 0.025901696516976606}, {"determining": "( ( ( ( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - RMSe ) - ( Max( ( MUC / Max( RMSe,RCSe ) ),CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RRSe ) * ( CS + DS ) ) )", "obj1": 0.99375, "obj2": 0.002840010947847161}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),Min( AMS ,CRS ) ) ) / RRS ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( AMS ,FirstVNF_Mem ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( DS / ( MUR * MUR ) ) - ( ( MUC / ( CS + DS ) ) + Max( DS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS / MUR ) ) ) * ( ( RRSe * RRSe ) * ( CS + DS ) ) )", "obj1": 0.3125, "obj2": 0.5362943745193023}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + PN ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( DS - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC - MUC ) + Max( RMSe,( DS - ( ( MUC / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) + ( CS + DS ) ) )", "obj1": 0.9208333333333333, "obj2": 0.031922092915559475}, {"determining": "( ( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - Min( Max( FirstVNF_Mem,PN ) ,( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( DS - ( MLU / DS ) ) * ( ( CS * MLU ) + ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) )", "obj1": 0.8833333333333333, "obj2": 0.05581881510270578}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC - MUC ) + Max( RMSe,( DS - ( Max( RMSe,MUC ) - ( ( MUC / DS ) + Max( MUC,RMSe ) ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7625, "obj2": 0.10316122830409574}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( DDR ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * MLU ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ),RRSe ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6125, "obj2": 0.20487844134439714}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}], "43": [{"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + RRS ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,BR ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MUM ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / AMS ) - Min( DDR ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( MUC / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RCSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * DS ) ) - ( ( MUC / ( CS - DS ) ) + Max( MUR,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9645833333333333, "obj2": 0.011678923912056693}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / Max( RMSe,( RMSe - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe * Min( ( MUR / RMSe ) ,( RRSe * RRSe ) ) ) ),RCSe ) ) ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.9354166666666667, "obj2": 0.025901696516976606}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( Min( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) ,MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.23420178571243455}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS + MUM ) ) )", "obj1": 0.6916666666666667, "obj2": 0.13708163199538229}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_RAM_Server + PN ) * ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( DS / MUC ) + Max( RCSe,( RMSe - ( ( RRSe / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.70625, "obj2": 0.12409213901455585}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * ( Min( ( PN * FirstVNF_Mem ) ,( BR - Const ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - MLU ) + DS ) * ( DS * DS ) )", "obj1": 0.25625, "obj2": 0.5933001184941733}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "Min( ( ( DDR + ( MDR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20625, "obj2": 0.6547396147502379}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,Min( AMS ,MRS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,MRS ) ) - ( PN * FirstVNF_CPU_Server ) ) - MDR ) ) )", "choosing": "( ( ( CS * RMSe ) - ( ( MUC / MUC ) * Max( MLU,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + DS ) ) )", "obj1": 0.29375, "obj2": 0.5375084227476838}, {"determining": "( ( ( AMS / AMS ) - Max( AMS,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( ( Max( MUR,CS ) + ( DS - MUR ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS - RMSe ) ) ) * ( ( DS - MUC ) + ( CS + DS ) ) )", "obj1": 0.35833333333333334, "obj2": 0.45729758395056325}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.375, "obj2": 0.44645104911614725}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.30680999131157893}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) / ( BR * CRS ) ) + ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( RRSe + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS + MLU ) + ( CS + DS ) ) )", "obj1": 0.5645833333333333, "obj2": 0.2515862024290614}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( Max( ( ( DDR + RRS ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( DS / RMSe ) / RRSe ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.8354166666666667, "obj2": 0.06783234853515954}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem * PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) * Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.76875, "obj2": 0.09257483276705392}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + PN ) + ( PN * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.91875, "obj2": 0.03288088090659403}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,PN ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( ( MUC / RMSe ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.59375, "obj2": 0.21877601439181532}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.17090590009677373}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( Max( RMSe,MUC ) - ( ( MUC / DS ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5375, "obj2": 0.2676625650308481}, {"determining": "( ( ( Max( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( ( DS - ( Max( RMSe,MUC ) - ( ( MUC / DS ) + Max( MUC,RMSe ) ) ) ) / MUC ) + Max( RMSe,( Max( RMSe,MUC ) - ( ( MUC / DS ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7333333333333333, "obj2": 0.11909111118564063}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46875, "obj2": 0.3288047095899794}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - CRS ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.7583333333333333, "obj2": 0.09972111869949313}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * Min( AMS ,MRS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( MUC,MUR ) ) ) / MUC ) + Max( Min( ( MUC / ( RRSe + DS ) ) ,( RRSe * Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - DS ) + ( CS + RRSe ) ) )", "obj1": 0.79375, "obj2": 0.08486869672477382}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( DDR ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * MLU ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ),RRSe ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6270833333333333, "obj2": 0.19254429855407862}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),Min( AMS ,CRS ) ) ) / RRS ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( AMS ,FirstVNF_Mem ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( DS / ( MUR * MUR ) ) - ( ( MUC / ( CS + DS ) ) + Max( DS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS / MUR ) ) ) * ( ( RRSe * RRSe ) * ( CS + DS ) ) )", "obj1": 0.3125, "obj2": 0.5362943745193023}, {"determining": "( ( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - Min( Max( FirstVNF_Mem,PN ) ,( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( DS - ( MLU / DS ) ) * ( ( CS * MLU ) + ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) )", "obj1": 0.8833333333333333, "obj2": 0.05581881510270578}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4708333333333333, "obj2": 0.3258320824966442}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,( MUC / MUC ) ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.64375, "obj2": 0.17844773153472052}], "44": [{"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - ( AMS / AMS ) ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - ( ( RRSe / MUC ) + Max( MUC,RMSe ) ) ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + RRS ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),Min( FirstVNF_CPU_Server ,BR ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MUM ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,PN ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( ( MUC / RMSe ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.59375, "obj2": 0.21877601439181532}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + PN ) + ( PN * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.91875, "obj2": 0.03288088090659403}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( DDR ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * MLU ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ),RRSe ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6270833333333333, "obj2": 0.19254429855407862}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( Min( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) ,MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.23420178571243455}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - AMS ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( MLU * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.025716981892779243}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * ( Min( ( PN * FirstVNF_Mem ) ,( BR - Const ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - MLU ) + DS ) * ( DS * DS ) )", "obj1": 0.25625, "obj2": 0.5933001184941733}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "Min( ( ( DDR + ( MDR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20625, "obj2": 0.6547396147502379}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.17090590009677373}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,Min( AMS ,MRS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,MRS ) ) - ( PN * FirstVNF_CPU_Server ) ) - MDR ) ) )", "choosing": "( ( ( CS * RMSe ) - ( ( MUC / MUC ) * Max( MLU,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + DS ) ) )", "obj1": 0.29375, "obj2": 0.5375084227476838}, {"determining": "( ( ( AMS / AMS ) - Max( AMS,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( ( Max( MUR,CS ) + ( DS - MUR ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS - RMSe ) ) ) * ( ( DS - MUC ) + ( CS + DS ) ) )", "obj1": 0.35833333333333334, "obj2": 0.45729758395056325}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.375, "obj2": 0.44645104911614725}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) / ( BR * CRS ) ) + ( Max( BR,PN ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) - Min( AMS ,BR ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( MUC / ( RRSe + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS + MLU ) + ( CS + DS ) ) )", "obj1": 0.5645833333333333, "obj2": 0.2515862024290614}, {"determining": "( ( ( DDR / AMS ) / Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU_Server + ( ( BR / FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) / ( ( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),Min( AMS ,FirstVNF_CPU_Server ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) + ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Max( ( ( MUC + MUC ) / Min( ( RRSe / RMSe ) ,( RRSe * RRSe ) ) ),MUC ) * ( ( Min( DS ,( RMSe + MUR ) ) * ( DS / RRSe ) ) + ( Max( MUC,RCSe ) - Min( DS ,RMSe ) ) ) ) ) / RCSe ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3895362386059833}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.30680999131157893}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * RCSe ) - ( ( MLU + MUC ) + ( MUC * MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.5041666666666667, "obj2": 0.2987724911755239}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46875, "obj2": 0.3288047095899794}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - CRS ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6264649744169538}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - DDR ),( Const * FirstVNF_Mem ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - MLU ) * ( ( RRSe - MLU ) + ( CS + RRSe ) ) )", "obj1": 0.9604166666666667, "obj2": 0.013177139874263147}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),Min( AMS ,CRS ) ) ) / RRS ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( AMS ,FirstVNF_Mem ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( DS / ( MUR * MUR ) ) - ( ( MUC / ( CS + DS ) ) + Max( DS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS / MUR ) ) ) * ( ( RRSe * RRSe ) * ( CS + DS ) ) )", "obj1": 0.3125, "obj2": 0.5362943745193023}, {"determining": "( ( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - Min( Max( FirstVNF_Mem,PN ) ,( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( DS - ( MLU / DS ) ) * ( ( CS * MLU ) + ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) )", "obj1": 0.8833333333333333, "obj2": 0.05581881510270578}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4708333333333333, "obj2": 0.32224913211232464}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * Min( AMS ,MRS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * Max( MUC,MUR ) ) ) / MUC ) + Max( Min( ( MUC / ( RRSe + DS ) ) ,( RRSe * Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - DS ) + ( CS + RRSe ) ) )", "obj1": 0.79375, "obj2": 0.08486869672477382}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - CRS ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( DS / RMSe ) / RRSe ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7375, "obj2": 0.10978555248535239}, {"determining": "( ( ( AMS / ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( PN ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * DS ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ),RRSe ) ,( DS + DS ) ) ) + DS ) * ( Max( MUR,CS ) * DS ) )", "obj1": 0.23125, "obj2": 0.6401070510091345}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_RAM_Server + PN ) * ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( DS / MUC ) + Max( RCSe,( RMSe - ( ( RRSe / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7145833333333333, "obj2": 0.11713634316868392}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem * PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) * Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.76875, "obj2": 0.09257483276705392}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( MLU / DS ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.8208333333333333, "obj2": 0.07379057900469788}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.6875, "obj2": 0.14827822228355272}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Max( MUC,DS ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9833333333333333, "obj2": 0.005441217551701051}], "45": [{"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / Max( ( ( ( PN * FirstVNF_Mem ) / ( BR - ( AMS / AMS ) ) ) + ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ),MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( DS - ( ( RRSe / MUC ) + Max( MUC,RMSe ) ) ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,PN ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( ( MUC / RMSe ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5916666666666667, "obj2": 0.21746330803729483}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + PN ) + ( PN * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.91875, "obj2": 0.03288088090659403}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * RCSe ) - ( ( MLU + MUC ) + ( MUC * MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.5041666666666667, "obj2": 0.2987724911755239}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.6875, "obj2": 0.14827822228355272}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem * PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - RRSe ) * ( MUM * RMSe ) ) * Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.76875, "obj2": 0.09257483276705392}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_RAM ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * CS ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ),RRSe ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.625, "obj2": 0.19796929872977587}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( PN * FirstVNF_Mem ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( Min( DS ,RMSe ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.12248828261796665}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.30680999131157893}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "Min( ( ( DDR + ( MDR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20625, "obj2": 0.6547396147502379}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6520833333333333, "obj2": 0.17090590009677373}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( Min( AMS ,MRS ) ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( DS * MUR ) + ( CS + DS ) ) - ( MLU / DS ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.8333333333333334, "obj2": 0.06968063191367209}, {"determining": "( Min( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) ,MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.5791666666666667, "obj2": 0.23420178571243455}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.46875, "obj2": 0.3288047095899794}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( ( ( BR / FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * Min( AMS ,MRS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.79375, "obj2": 0.0846470206003218}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - CRS ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( RRSe - MUM ) / RRSe ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.75, "obj2": 0.1040935727740131}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - CRS ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( DS / RMSe ) / RRSe ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7375, "obj2": 0.10978555248535239}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.64375, "obj2": 0.1784142470163795}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_RAM_Server + PN ) * ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( DS / MUC ) + Max( RCSe,( RMSe - ( ( RRSe / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7145833333333333, "obj2": 0.11713634316868392}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),Min( AMS ,CRS ) ) ) / RRS ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( AMS ,FirstVNF_Mem ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( DS / ( MUR * MUR ) ) - ( ( MUC / ( CS + DS ) ) + Max( DS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS / MUR ) ) ) * ( ( RRSe * RRSe ) * ( CS + DS ) ) )", "obj1": 0.3125, "obj2": 0.5362943745193023}, {"determining": "( ( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - Min( Max( FirstVNF_Mem,PN ) ,( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( DS - ( MLU / DS ) ) * ( ( CS * MLU ) + ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) )", "obj1": 0.8833333333333333, "obj2": 0.05581881510270578}, {"determining": "Max( ( FirstVNF_RAM + CRS ),( ACS + ( ( Max( ( PN * AMS ),( BR - CRS ) ) + Max( ( FirstVNF_Mem_Server * FirstVNF_RAM ),( ACS - FirstVNF_RAM ) ) ) / FirstVNF_CPU ) ) )", "choosing": "( Max( RMSe,CS ) / Max( MLU,( Max( ( MLU + Min( MLU ,RCSe ) ),( ( CS + MLU ) + ( MUR - MUR ) ) ) / DS ) ) )", "obj1": 0.2125, "obj2": 0.6408469738192499}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4708333333333333, "obj2": 0.32224913211232464}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( DDR ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * MLU ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ),RRSe ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6270833333333333, "obj2": 0.19254429855407862}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,Min( AMS ,MRS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,MRS ) ) - ( PN * FirstVNF_CPU_Server ) ) - MDR ) ) )", "choosing": "( ( ( CS * RMSe ) - ( ( MUC / MUC ) * Max( MLU,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + DS ) ) )", "obj1": 0.29375, "obj2": 0.5375084227476838}, {"determining": "( ( ( AMS / ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( PN ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * DS ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ),RRSe ) ,( DS + DS ) ) ) + DS ) * ( Max( MUR,CS ) * DS ) )", "obj1": 0.23125, "obj2": 0.6401070510091345}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.375, "obj2": 0.44645104911614725}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - AMS ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( MLU * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.025716981892779243}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) / ( RRSe + DS ) ) )", "obj1": 0.2875, "obj2": 0.5491945315562636}, {"determining": "( ( ( ( ( PN * CRS ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( ( ( RRSe - DS ) + ( CS + MUR ) ) + DS ) ) )", "obj1": 0.575, "obj2": 0.24963545491565012}], "46": [{"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( Min( DS ,RMSe ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * DS ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ),RRSe ) ,( DS + DS ) ) ) + DS ) * ( Max( MUR,CS ) * DS ) )", "obj1": 0.9645833333333333, "obj2": 0.01248159597707106}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + PN ) + ( PN * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.91875, "obj2": 0.03288088090659403}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( PN ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * DS ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ),RRSe ) ,( DS + DS ) ) ) + DS ) * ( Max( MUR,CS ) * DS ) )", "obj1": 0.23125, "obj2": 0.6401070510091345}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - AMS ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( MLU * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.025716981892779243}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( ( ( PN * CRS ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( ( ( RRSe - DS ) + ( CS + MUR ) ) + DS ) ) )", "obj1": 0.575, "obj2": 0.24963545491565012}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6083333333333333, "obj2": 0.21400251415448687}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.6520833333333333, "obj2": 0.16971053638221492}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.375, "obj2": 0.44645104911614725}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * ( PN * ACS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( RMSe / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5791666666666667, "obj2": 0.23237759788507198}, {"determining": "( ( ( AMS / ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( PN ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.26458333333333334, "obj2": 0.605791607430803}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,PN ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( ( MUC / RMSe ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5916666666666667, "obj2": 0.21746330803729483}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "Min( ( ( DDR + ( MDR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20625, "obj2": 0.6547396147502379}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.46458333333333335, "obj2": 0.3320784800788336}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.51875, "obj2": 0.296535410648439}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6958333333333333, "obj2": 0.14132130241064353}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - CRS ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( DS / RMSe ) / RRSe ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7375, "obj2": 0.10978555248535239}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_RAM_Server + PN ) * ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( DS / MUC ) + Max( RCSe,( RMSe - ( ( RRSe / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7145833333333333, "obj2": 0.11713634316868392}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),Min( AMS ,CRS ) ) ) / RRS ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( AMS ,FirstVNF_Mem ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( DS / ( MUR * MUR ) ) - ( ( MUC / ( CS + DS ) ) + Max( DS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS / MUR ) ) ) * ( ( RRSe * RRSe ) * ( CS + DS ) ) )", "obj1": 0.3125, "obj2": 0.5362943745193023}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * RCSe ) - ( ( MLU + MUC ) + ( MUC * MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.5041666666666667, "obj2": 0.2987724911755239}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_RAM ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * CS ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ),RRSe ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.625, "obj2": 0.19796929872977587}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( Max( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( Min( MDR ,( PN * FirstVNF_Mem ) ) + ( FirstVNF_CPU_Server * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( RRSe / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe + RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.8708333333333333, "obj2": 0.050292498010513755}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,Min( AMS ,MRS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,MRS ) ) - ( PN * FirstVNF_CPU_Server ) ) - MDR ) ) )", "choosing": "( ( ( CS * RMSe ) - ( ( MUC / MUC ) * Max( MLU,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + DS ) ) )", "obj1": 0.29375, "obj2": 0.5375084227476838}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) - ( Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( RRSe - RRSe ) + ( CS + DS ) ) )", "obj1": 0.7958333333333333, "obj2": 0.0807380981743542}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) / ( RRSe + DS ) ) )", "obj1": 0.2875, "obj2": 0.5491945315562636}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( ( ( RRS - DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( MUR * RCSe ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.84375, "obj2": 0.0629181237131405}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.6875, "obj2": 0.14827822228355272}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( Min( DS ,RMSe ) + Max( MUC,RMSe ) ) ) ) ) * DS ) )", "obj1": 0.6375, "obj2": 0.1797411242933653}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.3048585984862752}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( PN * FirstVNF_Mem ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.70625, "obj2": 0.12570491416103374}], "47": [{"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( Min( DS ,RMSe ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) - ( Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( RRSe - RRSe ) + ( CS + DS ) ) )", "obj1": 0.7958333333333333, "obj2": 0.0807380981743542}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / RMSe ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.33152882424289415}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.3048585984862752}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "Min( ( ( DDR + ( MDR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20625, "obj2": 0.6547396147502379}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + PN ) + ( PN * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.91875, "obj2": 0.03288088090659403}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9645833333333333, "obj2": 0.012457730527845977}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS / ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( PN ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * DS ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ),RRSe ) ,( DS + DS ) ) ) + DS ) * ( Max( MUR,CS ) * DS ) )", "obj1": 0.23125, "obj2": 0.6401070510091345}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) / ( CRS - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( DS + DS ) ) ) ,DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.75625, "obj2": 0.09831060588339136}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.6520833333333333, "obj2": 0.16971053638221492}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( ( ( PN * CRS ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( ( ( RRSe - DS ) + ( CS + MUR ) ) + DS ) ) )", "obj1": 0.575, "obj2": 0.24963545491565012}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.375, "obj2": 0.44645104911614725}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5020833333333333, "obj2": 0.2955964208449614}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - CRS ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / ( Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( RMSe ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.24375, "obj2": 0.6280813089653888}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_RAM ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * CS ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ),RRSe ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.625, "obj2": 0.19796929872977587}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_RAM_Server + PN ) * ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( DS / MUC ) + Max( RCSe,( RMSe - ( ( RRSe / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7145833333333333, "obj2": 0.11713634316868392}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( MLU / DS ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( ( ( AMS / ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( PN ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.26458333333333334, "obj2": 0.605791607430803}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - AMS ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( MLU * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.025716981892779243}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Max( ( BR / FirstVNF_RAM ),Min( AMS ,CRS ) ) ) / RRS ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_Mem_Server ) + Min( AMS ,FirstVNF_Mem ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( DS / ( MUR * MUR ) ) - ( ( MUC / ( CS + DS ) ) + Max( DS,MUR ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) ) - RMSe ) - ( Max( MUR,CS ) + ( DS / MUR ) ) ) * ( ( RRSe * RRSe ) * ( CS + DS ) ) )", "obj1": 0.3125, "obj2": 0.5362943745193023}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN / FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( Min( DS ,MUM ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.5125, "obj2": 0.2829462766623425}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( Max( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( Min( MDR ,( PN * FirstVNF_Mem ) ) + ( FirstVNF_CPU_Server * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( RRSe / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe + RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.8708333333333333, "obj2": 0.050292498010513755}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,Min( AMS ,MRS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,MRS ) ) - ( PN * FirstVNF_CPU_Server ) ) - MDR ) ) )", "choosing": "( ( ( CS * RMSe ) - ( ( MUC / MUC ) * Max( MLU,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + DS ) ) )", "obj1": 0.29375, "obj2": 0.5375084227476838}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + Max( BR,CRS ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC - MUC ) + Max( RMSe,( DS - ( ( MUC / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8375, "obj2": 0.07432694829166128}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) / ( RRSe + DS ) ) )", "obj1": 0.2875, "obj2": 0.5491945315562636}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.6875, "obj2": 0.14827822228355272}, {"determining": "( ( AMS * Min( AMS ,MRS ) ) - ( ( DDR + RRS ) / ( ( ( ( PN * RRS ) / ( BR - CRS ) ) + ( ( Min( BR ,FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) ) ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / RRSe ) - ( Min( ( RMSe / RMSe ) ,( RRSe * ( ( RMSe / RMSe ) * ( RCSe * RRSe ) ) ) ) / RMSe ) ) ) * ( Min( DS ,MLU ) + ( RRSe + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6086155280071301}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - CRS ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( DS / RMSe ) / RRSe ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7375, "obj2": 0.10978555248535239}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,PN ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( FirstVNF_CPU / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) / ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.6125, "obj2": 0.2076776628982644}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.6354166666666666, "obj2": 0.1838441215616314}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( Min( DS ,RMSe ) + Max( MUC,RMSe ) ) ) ) ) * DS ) )", "obj1": 0.6375, "obj2": 0.1797411242933653}], "48": [{"determining": "( ( ( FirstVNF_Mem / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( RRS - DDR ) - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / MUC ) ,( RRSe - RRSe ) ) / MUC ) / Max( DS,MUR ) ) ) ) + DS ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( ( ( PN * CRS ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( ( ( RRSe - DS ) + ( CS + MUR ) ) + DS ) ) )", "obj1": 0.575, "obj2": 0.24963545491565012}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,PN ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( FirstVNF_CPU / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) / ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.6125, "obj2": 0.2076776628982644}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + PN ) + ( PN * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.91875, "obj2": 0.03288088090659403}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem * PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( DS - MLU ),( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.6854166666666667, "obj2": 0.13983320431045504}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) / ( CRS - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( DS + DS ) ) ) ,DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.75625, "obj2": 0.09831060588339136}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) - ( Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7916666666666666, "obj2": 0.08566965805915809}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * MRS ) + Min( ( ( BR / FirstVNF_Mem ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.11981995321363338}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( Max( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( Min( MDR ,( PN * FirstVNF_Mem ) ) + ( FirstVNF_CPU_Server * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( RRSe / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe + RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.83125, "obj2": 0.06866305637845473}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( AMS / ( ( ( BR / FirstVNF_RAM ) / FirstVNF_RAM ) * Min( MDR ,Max( ( RRS - PN ),( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ) ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( PN ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.26458333333333334, "obj2": 0.605791607430803}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - AMS ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( MLU * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.025716981892779243}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / RMSe ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4583333333333333, "obj2": 0.33152882424289415}, {"determining": "( ( ( DDR + ( MDR / FirstVNF_RAM ) ) / ACS ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) - ( Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( DS * DS ) )", "obj1": 0.9875, "obj2": 0.005035592294171991}, {"determining": "Min( ( ( DDR + ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RRSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.225, "obj2": 0.6354216560432865}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Max( ( Const - DDR ),( BR * Const ) ) * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( MUM + DS ) ) + Max( ( ( ( MUC / MUC ) * ( RMSe * MUR ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5347963352535864}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.48541666666666666, "obj2": 0.3048585984862752}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( ACS * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( ( PN * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - RMSe ) + CS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.6666666666666666, "obj2": 0.16722147098203818}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) - ( Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( RRSe - RRSe ) + ( CS + DS ) ) )", "obj1": 0.7958333333333333, "obj2": 0.0807380981743542}, {"determining": "Min( ( ( DDR + ( MDR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - Min( AMS ,MRS ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( ( DS - MLU ) + ( CS + DS ) ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20416666666666666, "obj2": 0.6578178870592143}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,Min( AMS ,MRS ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,MRS ) ) - ( PN * FirstVNF_CPU_Server ) ) - MDR ) ) )", "choosing": "( ( ( CS * RMSe ) - ( ( MUC / MUC ) * Max( MLU,MUR ) ) ) * ( Min( DS ,MLU ) + ( CS + DS ) ) )", "obj1": 0.29375, "obj2": 0.5375084227476838}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS - DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6271794222293677}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) / ( RRSe + DS ) ) )", "obj1": 0.2875, "obj2": 0.5491945315562636}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( MLU / DS ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5020833333333333, "obj2": 0.2955964208449614}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN / FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( Min( DS ,MUM ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.5125, "obj2": 0.2829462766623425}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.17917072502955528}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_RAM ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * CS ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / RRSe ),RRSe ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.625, "obj2": 0.19796929872977587}, {"determining": "Min( ( ( DDR + ( MDR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) - ( Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( RMSe + MUR ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21458333333333332, "obj2": 0.6469714524508087}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.375, "obj2": 0.44645104911614725}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( Const - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_RAM ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * Min( BR ,FirstVNF_RAM ) ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( DS / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.63125, "obj2": 0.19283680661716912}], "49": [{"determining": "( ( ( AMS / AMS ) - Min( MRS ,MRS ) ) - Max( Max( PN,PN ),( ( ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * RCSe ) - ( ( MLU + MUC ) + ( MUC * MUR ) ) ) * ( ( DS - MLU ) + ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( RRS - DDR ) - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( ( ( PN * CRS ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( ( ( RRSe - DS ) + ( CS + MUR ) ) + DS ) ) )", "obj1": 0.575, "obj2": 0.24963545491565012}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,PN ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - MDR ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe - RMSe ) + ( CS / MUM ) ) )", "obj1": 0.6083333333333333, "obj2": 0.21222894565541578}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - AMS ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( MLU * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.025716981892779243}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * MRS ) + Min( ( ( BR / FirstVNF_Mem ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.11981995321363338}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * DDR ) + Min( AMS ,MRS ) ) - ( Min( ( ( FirstVNF_RAM + CRS ) + ( BR * CRS ) ) ,MRS ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( DS * ( ( RRSe - RRSe ) + ( CS + MUM ) ) )", "obj1": 0.9770833333333333, "obj2": 0.011105278242049751}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + PN ) + ( PN * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.91875, "obj2": 0.03288088090659403}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem * PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( DS - MLU ),( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.6854166666666667, "obj2": 0.13983320431045504}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( PN * ARS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN / FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( DS * Min( MUR ,MLU ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7375, "obj2": 0.11596157346425003}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * BR ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUM ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.25833333333333336, "obj2": 0.5905675578478692}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.375, "obj2": 0.44645104911614725}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) / ( CRS - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( Min( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( DS + DS ) ) ) ,DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.75625, "obj2": 0.09831060588339136}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.53125, "obj2": 0.2715380726652018}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( FirstVNF_CPU ,MRS ) ) + ( PN * ARS ) ) / MDR ) - BR )", "choosing": "( ( RMSe - ( ( MUC / ( DS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6083901976828318}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ,( PN * FirstVNF_Mem ) ) + ( FirstVNF_CPU_Server * CRS ) ) / BR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( RRSe / MUC ) + ( MUC + RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( MLU ,MLU ) + ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.7854166666666667, "obj2": 0.0905298025881473}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( Min( DS ,MUM ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5, "obj2": 0.29081093811507736}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "Min( ( ( DDR + ( MDR / FirstVNF_RAM ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - Min( AMS ,MRS ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( ( DS - MLU ) + ( CS + DS ) ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20416666666666666, "obj2": 0.6578178870592143}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.6541666666666667, "obj2": 0.17333827924270112}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( Max( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( Min( MDR ,( PN * FirstVNF_Mem ) ) + ( FirstVNF_CPU_Server * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( RRSe / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe + RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.83125, "obj2": 0.06866305637845473}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( ACS * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( ( PN * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - RMSe ) + CS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.6666666666666666, "obj2": 0.16722147098203818}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN / FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( Min( DS ,MUM ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.5125, "obj2": 0.2829462766623425}, {"determining": "Min( ( ( DDR + ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RRSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.225, "obj2": 0.6354216560432865}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( CRS - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( RRSe - RRSe ) + DS ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.7458333333333333, "obj2": 0.1018605854045569}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( Min( Min( DS ,RMSe ) ,MUM ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MUC ) + ( CS + DS ) ) )", "obj1": 0.2375, "obj2": 0.615447005747836}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS - DDR ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6271794222293677}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.17917072502955528}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) - ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( RMSe / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RRSe / Min( ( MUR / RMSe ) ,( DS * RRSe ) ) ) ),RMSe ) ) ) * ( ( RRSe - RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.525, "obj2": 0.27800454197195107}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.30453152978990744}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( ( DS / RMSe ) + Max( MUC,RMSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4479166666666667, "obj2": 0.33942362005975024}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) - ( Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) * Min( AMS ,MRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) )", "obj1": 0.8479166666666667, "obj2": 0.06322726602535744}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) / ( RRSe + DS ) ) )", "obj1": 0.2875, "obj2": 0.5491945315562636}], "50": [{"determining": "( ( ( FirstVNF_Mem / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( RRS - DDR ) - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( MRS ,MRS ) ) - Max( Max( PN,PN ),( ( ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * RCSe ) - ( ( MLU + MUC ) + ( MUC * MUR ) ) ) * ( ( DS - MLU ) + ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( ( ( PN * CRS ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( ( ( RRSe - DS ) + ( CS + MUR ) ) + DS ) ) )", "obj1": 0.575, "obj2": 0.24963545491565012}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( CRS / AMS ) - ( ( Min( PN ,FirstVNF_Mem ) + ( BR - ARS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( ( ( Max( RMSe,RMSe ) - ( ( MUC / MUC ) - Max( MUC,RMSe ) ) ) * Max( MUM,RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe - MUC ) ,( CS - RRSe ) ) / MUC ) / ( DS / MUR ) ) ) ) + DS ) * ( DS * RMSe ) )", "obj1": 0.42916666666666664, "obj2": 0.3840853062722813}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,PN ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5979166666666667, "obj2": 0.2147970434467624}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) / ( RRSe + DS ) ) )", "obj1": 0.2875, "obj2": 0.5491945315562636}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.17917072502955528}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ,( PN * FirstVNF_Mem ) ) + ( FirstVNF_CPU_Server * CRS ) ) / BR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( RRSe / MUC ) + ( MUC + RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( MLU ,MLU ) + ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.7854166666666667, "obj2": 0.0905298025881473}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + PN ) + ( PN * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.91875, "obj2": 0.03288088090659403}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - AMS ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( MLU * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.025716981892779243}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "Min( ( ( DDR + ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) ) / ACS ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,ACS ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RRSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.225, "obj2": 0.6354216560432865}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( PN * FirstVNF_Mem ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( ( DS - MUR ) / Max( MUC,RMSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6083333333333333, "obj2": 0.20169773269480423}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.36875, "obj2": 0.438475570737113}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * MDR ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * MRS ) + Min( ( ( BR / FirstVNF_Mem ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( MUR / MUC ),( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.80625, "obj2": 0.07546228807182795}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.30453152978990744}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * DDR ) + Min( AMS ,MRS ) ) - ( Min( ( ( FirstVNF_RAM + CRS ) + ( BR * CRS ) ) ,MRS ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( DS * ( ( RRSe - RRSe ) + ( CS + MUM ) ) )", "obj1": 0.9770833333333333, "obj2": 0.011105278242049751}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) + ( FirstVNF_CPU / ARS ) ) + ARS ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUC / MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2699798441038796}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( FirstVNF_CPU ,MRS ) ) + ( PN * ARS ) ) / MDR ) - BR )", "choosing": "( ( RMSe - ( ( MUC / ( DS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6083901976828318}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.2125, "obj2": 0.6532591632765654}, {"determining": "( ( ( PN * ARS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN / FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( DS * Min( MUR ,MLU ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.7375, "obj2": 0.11596157346425003}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.6541666666666667, "obj2": 0.17333827924270112}, {"determining": "( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - Const ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / MDR ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - ( ( DS * RCSe ) - ( ( MLU + MUC ) + ( MUC * MUR ) ) ) ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS + DS ) )", "obj1": 0.9604166666666667, "obj2": 0.01767752438917223}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( Max( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ),FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( Min( MDR ,( PN * FirstVNF_Mem ) ) + ( FirstVNF_CPU_Server * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( RRSe / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe + RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.83125, "obj2": 0.06866305637845473}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( ACS * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( ( PN * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - RMSe ) + CS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.6666666666666666, "obj2": 0.16722147098203818}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( CRS - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( DS + DS ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.75625, "obj2": 0.09771449370607327}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN / FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,( RMSe - ( Min( DS ,MUM ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.5125, "obj2": 0.2829462766623425}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) / Min( AMS ,ARS ) ) + Max( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ),MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( RMSe,CS ) + ( MLU + MUR ) ) ) * ( ( RRSe + MLU ) + ( CS + MUM ) ) )", "obj1": 0.46458333333333335, "obj2": 0.330335220974436}, {"determining": "( Max( Min( AMS ,AMS ),Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) - ( Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) * Min( AMS ,MRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( RRSe ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( RRSe * RRSe ) ) ) )", "obj1": 0.8479166666666667, "obj2": 0.06322726602535744}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem * PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( DS - MLU ),( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.6854166666666667, "obj2": 0.13983320431045504}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( FirstVNF_CPU ,MRS ) ) + ( PN * ARS ) ) / MDR ) - BR )", "choosing": "( ( RMSe - ( ( MUC / ( DS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6218712673684145}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( CRS - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7104166666666667, "obj2": 0.11961958822192782}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * BR ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUM ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.25833333333333336, "obj2": 0.5905675578478692}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}], "51": [{"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) * ( ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ,( PN * FirstVNF_Mem ) ) + ( FirstVNF_CPU_Server * CRS ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( RRSe / MUC ) + ( MUC + RMSe ) ) ) / ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( ( ( ( RRS - DDR ) - ( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Max( MDR,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + ( BR + CRS ) ) + ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RRSe ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.42083333333333334, "obj2": 0.37126824591648655}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) / ( RRSe + DS ) ) )", "obj1": 0.2875, "obj2": 0.5491945315562636}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ,( PN * FirstVNF_Mem ) ) + ( FirstVNF_CPU_Server * CRS ) ) / BR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( RRSe / MUC ) + ( MUC + RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( MLU ,MLU ) + ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.7854166666666667, "obj2": 0.0905298025881473}, {"determining": "( ( ( ( ( PN * CRS ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( ( ( RRSe - DS ) + ( CS + MUR ) ) + DS ) ) )", "obj1": 0.575, "obj2": 0.24963545491565012}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.17917072502955528}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) / Min( AMS ,ARS ) ) + Max( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ),MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( RMSe,CS ) + ( MLU + MUR ) ) ) * ( ( RRSe + MLU ) + ( CS + MUM ) ) )", "obj1": 0.46458333333333335, "obj2": 0.330335220974436}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( CRS - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( DS + DS ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.75625, "obj2": 0.09771449370607327}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC + RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6306109542633865}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( FirstVNF_CPU ,MRS ) ) + ( PN * ARS ) ) / MDR ) - BR )", "choosing": "( ( RMSe - ( ( MUC / ( DS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6083901976828318}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( FirstVNF_CPU ,MRS ) ) + ( PN * ARS ) ) / MDR ) - BR )", "choosing": "( ( RMSe - ( ( MUC / ( DS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6218712673684145}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.36875, "obj2": 0.438475570737113}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * MDR ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN * MRS ) + Min( ( ( BR / FirstVNF_Mem ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( MUR / MUC ),( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.80625, "obj2": 0.07543842257337692}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5854166666666667, "obj2": 0.2215797390657113}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( DS + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.2125, "obj2": 0.6532591632765654}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( PN * FirstVNF_Mem ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR * CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.61875, "obj2": 0.19865279458199928}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( MRS * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( CRS - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.8958333333333334, "obj2": 0.043049211760925014}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) + ( FirstVNF_CPU / ARS ) ) + ARS ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUC / MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2699798441038796}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20625, "obj2": 0.6604082793185488}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.6541666666666667, "obj2": 0.17333827924270112}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + PN ) + ( PN * CRS ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( RRSe + CS ) ) )", "obj1": 0.91875, "obj2": 0.03288088090659403}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem * PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( DS - MLU ),( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.6854166666666667, "obj2": 0.13983320431045504}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( ACS * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( ( PN * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - RMSe ) + CS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.6666666666666666, "obj2": 0.16722147098203818}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.30453152978990744}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( CRS - CRS ) ),( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( DS - ( ( MUC / MUC ) + Max( RRSe,RMSe ) ) ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( DS + DS ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.74375, "obj2": 0.10494929899047398}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( AMS / ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( RMSe - ( Min( DS ,MUM ) + Max( MUC,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7333333333333333, "obj2": 0.11252767274024097}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.69375, "obj2": 0.13355554077669304}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,PN ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( CS - RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5979166666666667, "obj2": 0.2142507316776778}, {"determining": "( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - Const ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / MDR ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.9479166666666666, "obj2": 0.022022274736423847}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - AMS ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Max( MRS,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( MLU * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9354166666666667, "obj2": 0.025716981892779243}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * BR ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUM ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.25833333333333336, "obj2": 0.5905675578478692}], "52": [{"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( Max( Min( DDR ,CRS ),MDR ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) / ( RRSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) * ( ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ,( PN * FirstVNF_Mem ) ) + ( FirstVNF_CPU_Server * CRS ) ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( RRSe / MUC ) + ( MUC + RMSe ) ) ) / ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( DS ,MLU ) + ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.30453152978990744}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RRSe ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.42083333333333334, "obj2": 0.37126824591648655}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) / ( RRSe + DS ) ) )", "obj1": 0.2875, "obj2": 0.5491945315562636}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) - MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( Min( MUC ,( RRSe - RRSe ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5208333333333334, "obj2": 0.274832812790261}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( PN * FirstVNF_Mem ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR * CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.61875, "obj2": 0.19865279458199928}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) * ( ( DS - MLU ) + ( CS + ( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + DS ) ) ) ) ) )", "obj1": 0.98125, "obj2": 0.020191550052290102}, {"determining": "( ( ( AMS / AMS ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + PN ),( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,Min( ACS ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ) ) + ( FirstVNF_Mem * ACS ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS / ( MUR + DS ) ) - ( ( RMSe * ( CS + MUR ) ) - Max( RMSe,MUR ) ) ) * ( ( RCSe - MLU ) + ( CS * MUR ) ) )", "obj1": 0.44375, "obj2": 0.3439079569743573}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / Max( BR,PN ) ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( MUM * ( MUC / Max( RCSe,RCSe ) ) ) - ( ( ( DS / ( MUR * RRSe ) ) / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.575, "obj2": 0.2309565297374355}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) / Min( AMS ,ARS ) ) + Max( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ),MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( RMSe,CS ) + ( MLU + MUR ) ) ) * ( ( RRSe + MLU ) + ( CS + MUM ) ) )", "obj1": 0.46458333333333335, "obj2": 0.330335220974436}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC + RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6306109542633865}, {"determining": "( ( ( ( ( PN * CRS ) + ( AMS / MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Max( DS,RRSe ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.12127683074909917}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * BR ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUM ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.25833333333333336, "obj2": 0.5905675578478692}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( BR * CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( RRS - DDR ),( Const * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,PN ) / ( ( Min( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) ,( PN * FirstVNF_Mem ) ) + ( FirstVNF_CPU_Server * CRS ) ) / BR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( RRSe / MUC ) + ( MUC + RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) + DS ) * ( Min( MLU ,MLU ) + ( Min( DS ,RMSe ) - ( ( Min( ( RMSe / RMSe ) ,( RRSe - RRSe ) ) / MUC ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.7854166666666667, "obj2": 0.0905298025881473}, {"determining": "( ( ( AMS / ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) ) - ( ( ( PN * FirstVNF_Mem ) + ( Max( ( Min( AMS ,MRS ) - AMS ),( Const * ( PN * FirstVNF_Mem ) ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( RMSe - ( Min( DS ,MUM ) + Max( DS,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5541666666666667, "obj2": 0.24788555769286638}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.36875, "obj2": 0.438475570737113}, {"determining": "( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR - Const ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / MDR ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.9479166666666666, "obj2": 0.022022274736423847}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.17917072502955528}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * MDR ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN * MRS ) + Min( ( ( BR / FirstVNF_Mem ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( MUR / MUC ),( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.80625, "obj2": 0.07543842257337692}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6478948615061708}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) + ( FirstVNF_CPU / ARS ) ) + ARS ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUC / MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2699798441038796}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem * PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( DS - MLU ),( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.6854166666666667, "obj2": 0.13983320431045504}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( ACS * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( ( PN * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - RMSe ) + CS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.6666666666666666, "obj2": 0.16722147098203818}, {"determining": "( ( ( AMS / ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( RMSe - ( Min( DS ,MUM ) + Max( MUC,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7333333333333333, "obj2": 0.11252767274024097}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( DS - MLU ) ) * ( ( DS - RRSe ) + ( MLU + DS ) ) )", "obj1": 0.99375, "obj2": 0.007948924907451962}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( FirstVNF_CPU ,MRS ) ) + ( PN * ARS ) ) / MDR ) - BR )", "choosing": "( ( RMSe - ( ( MUC / ( DS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6218712673684145}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( FirstVNF_CPU ,MRS ) ) + ( PN * ARS ) ) / MDR ) - BR )", "choosing": "( ( RMSe - ( ( MUC / ( DS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.2520833333333333, "obj2": 0.6083901976828318}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( ( PN * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6041666666666666, "obj2": 0.2075104743448824}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( ACS + CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem_Server ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUM * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS / MLU ) + ( CS - DS ) ) )", "obj1": 0.7708333333333334, "obj2": 0.09171722472891042}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( CRS - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( DS + DS ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.75625, "obj2": 0.09771449370607327}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5854166666666667, "obj2": 0.22133842285180158}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( ( PN * ARS ) - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - Min( Max( FirstVNF_Mem,PN ) ,( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( MLU - Max( ( RMSe / MUC ),MUR ) ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6151876180194042}], "53": [{"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( DS / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( Max( Min( DDR ,CRS ),MDR ) ,MRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) / ( RRSe + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.30453152978990744}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( DS / MUC ) + Max( RMSe,( RMSe - ( ( RRSe / MUC ) + MUR ) ) ) ) ) * ( ( DS - MLU ) + ( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.9458333333333333, "obj2": 0.02420570031809328}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RRSe ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.42083333333333334, "obj2": 0.37126824591648655}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( BR * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) / ( RRSe + DS ) ) )", "obj1": 0.2875, "obj2": 0.5491945315562636}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( MUR + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 0.51875, "obj2": 0.2762467971617513}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.17917072502955528}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) / Min( AMS ,ARS ) ) + Max( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ),MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( RMSe,CS ) + ( MLU + MUR ) ) ) * ( ( RRSe + MLU ) + ( CS + MUM ) ) )", "obj1": 0.46458333333333335, "obj2": 0.330335220974436}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( PN * FirstVNF_Mem ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR * CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.61875, "obj2": 0.19865279458199928}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.36875, "obj2": 0.438475570737113}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / Max( BR,PN ) ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( MUM * ( MUC / Max( RCSe,RCSe ) ) ) - ( ( ( DS / ( MUR * RRSe ) ) / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.575, "obj2": 0.2309565297374355}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem * PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( DS - MLU ),( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.6854166666666667, "obj2": 0.13983320431045504}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * BR ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUM ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.25833333333333336, "obj2": 0.5905675578478692}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) + ( FirstVNF_CPU / ARS ) ) + ARS ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUC / MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2699798441038796}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20208333333333334, "obj2": 0.6635685050752128}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.9645833333333333, "obj2": 0.011723595615513402}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC + RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6306109542633865}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.6541666666666667, "obj2": 0.17333827924270112}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( ACS * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( ( PN * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - RMSe ) + CS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.6666666666666666, "obj2": 0.16722147098203818}, {"determining": "( ( ( AMS / ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) ) - ( ( ( PN * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,RMSe ) - ( Min( DS ,MUM ) + Max( MUC,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7854166666666667, "obj2": 0.0861315177595682}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5854166666666667, "obj2": 0.22133842285180158}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( FirstVNF_CPU ,MRS ) ) + ( PN * ARS ) ) / MDR ) - BR )", "choosing": "( ( RMSe - ( ( MUC / ( DS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + RCSe ) ) )", "obj1": 0.23541666666666666, "obj2": 0.6218712673684145}, {"determining": "( ( ( AMS / ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) ) - ( ( ( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) + ( Max( ( Min( AMS ,MRS ) - AMS ),( Const * ( PN * FirstVNF_Mem ) ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( RMSe - ( Min( DS ,MUM ) + Max( ( CS / DS ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5625, "obj2": 0.2466344802619608}, {"determining": "( ( ( ( ( PN * CRS ) + ( AMS / MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Max( DS,RRSe ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.12127683074909917}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR + FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.44583333333333336, "obj2": 0.34255694175502305}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( ACS * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( ( PN * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6, "obj2": 0.2170316284774212}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( Min( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) ,Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21666666666666667, "obj2": 0.6463563476979491}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20833333333333334, "obj2": 0.6478948615061708}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.8, "obj2": 0.0808949202060373}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( DS - MLU ) ) * ( ( DS - RRSe ) + ( MLU + DS ) ) )", "obj1": 0.99375, "obj2": 0.007948924907451962}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( ( PN * ARS ) - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - Min( Max( FirstVNF_Mem,PN ) ,( ( ( Max( PN,FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( MLU - Max( ( RMSe / MUC ),MUR ) ) ) ) * ( ( RRSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.24583333333333332, "obj2": 0.6151876180194042}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( ACS + CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem_Server ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUM * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS / MLU ) + ( CS - DS ) ) )", "obj1": 0.7708333333333334, "obj2": 0.09171722472891042}], "54": [{"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) / Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * ( MUR * MUM ) ) ) * ( ( DS - RRSe ) + ( MLU + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - ( ( DS / MUC ) + Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( DS / MUC ) + Max( RMSe,( RMSe - ( ( RRSe / MUC ) + MUR ) ) ) ) ) * ( ( DS - MLU ) + ( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.9458333333333333, "obj2": 0.02420570031809328}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RRSe ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.42083333333333334, "obj2": 0.37126824591648655}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.28958333333333336, "obj2": 0.5454647627188559}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR + FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.44583333333333336, "obj2": 0.34255694175502305}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5, "obj2": 0.29422580854899677}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * BR ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUM ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.25833333333333336, "obj2": 0.5905675578478692}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( MUR + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 0.51875, "obj2": 0.2762467971617513}, {"determining": "( ( ( AMS / ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) ) - ( ( ( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) + ( Max( ( Min( AMS ,MRS ) - AMS ),( Const * ( PN * FirstVNF_Mem ) ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( RMSe - ( Min( DS ,MUM ) + Max( ( CS / DS ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5625, "obj2": 0.2466344802619608}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) + ( FirstVNF_CPU / ARS ) ) + ARS ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUC / MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2699798441038796}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.36875, "obj2": 0.438475570737113}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.30453152978990744}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.17917072502955528}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( MLU - Max( ( RMSe / MUC ),MUR ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.74375, "obj2": 0.10420074640527481}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( ACS + CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem_Server ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUM * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS / MLU ) + ( CS - DS ) ) )", "obj1": 0.7708333333333334, "obj2": 0.09171722472891042}, {"determining": "( ( ( ( ( PN * CRS ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( CS + ( MUR * RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.7375, "obj2": 0.11939900374843913}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( ( ( PN * CRS ) + ( AMS / MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Max( DS,RRSe ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.12127683074909917}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) / Min( AMS ,ARS ) ) + Max( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ),MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( RMSe,CS ) + ( MLU + MUR ) ) ) * ( ( RRSe + MLU ) + ( CS + MUM ) ) )", "obj1": 0.46458333333333335, "obj2": 0.330335220974436}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.8, "obj2": 0.0808949202060373}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR + Const ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / MUC ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.25416666666666665, "obj2": 0.6138386083142722}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / Max( BR,PN ) ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( DS ,RMSe ) - ( ( ( ( RMSe / RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.6291666666666667, "obj2": 0.19632966015765105}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.6666666666666666, "obj2": 0.16443852547956303}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem * PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( DS - MLU ),( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.6854166666666667, "obj2": 0.13983320431045504}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.9895833333333334, "obj2": 0.01159970804411823}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC + RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6306109542633865}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / Max( BR,PN ) ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( MUM * ( MUC / Max( RCSe,RCSe ) ) ) - ( ( ( DS / ( MUR * RRSe ) ) / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.575, "obj2": 0.2309565297374355}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( Min( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) ,Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21666666666666667, "obj2": 0.6463563476979491}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( PN * FirstVNF_Mem ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR * CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.61875, "obj2": 0.19865279458199928}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20208333333333334, "obj2": 0.6635685050752128}, {"determining": "( ( ( FirstVNF_CPU_Server + ( ( ( ( PN * FirstVNF_Mem ) + ( BR * CRS ) ) - ( Max( BR,PN ) * Min( MDR ,( PN * FirstVNF_Mem ) ) ) ) / MDR ) ) - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( BR / FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / AMS ) - Min( AMS ,MRS ) ) / ( Max( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ),( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( DS - MLU ) + ( CS / DS ) ) )", "obj1": 0.6541666666666667, "obj2": 0.17333827924270112}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.9645833333333333, "obj2": 0.011723595615513402}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5854166666666667, "obj2": 0.22133842285180158}], "55": [{"determining": "( ( ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) / ARS ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Max( ( ( BR / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ),MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RCSe ) ) - ( ( MUC / ( DS + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / MUC ) / MUC ),MUR ) ) ) * ( CS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) / Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * ( MUR * MUM ) ) ) * ( ( DS - RRSe ) + ( MLU + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RRSe ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.42083333333333334, "obj2": 0.37126824591648655}, {"determining": "( ( BR - CRS ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR + Const ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / MUC ) ) - ( ( DS - MLU ) + ( CS / DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9416666666666667, "obj2": 0.02671951920800887}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR + Const ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / MUC ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.25416666666666665, "obj2": 0.6138386083142722}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.28958333333333336, "obj2": 0.5454647627188559}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC + RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6306109542633865}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem * PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( DS - MLU ),( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.6854166666666667, "obj2": 0.13983320431045504}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( PN * FirstVNF_Mem ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR * CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.61875, "obj2": 0.19865279458199928}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5854166666666667, "obj2": 0.22133842285180158}, {"determining": "( ( ( ( ( PN * CRS ) + ( AMS / MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Max( DS,RRSe ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.12127683074909917}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR + FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.44583333333333336, "obj2": 0.34255694175502305}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( ACS + CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem_Server ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUM * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS / MLU ) + ( CS - DS ) ) )", "obj1": 0.7708333333333334, "obj2": 0.09171722472891042}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * BR ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUM ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.25833333333333336, "obj2": 0.5905675578478692}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.9645833333333333, "obj2": 0.011723595615513402}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( Min( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) ,Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21666666666666667, "obj2": 0.6463563476979491}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20208333333333334, "obj2": 0.6635685050752128}, {"determining": "( ( Min( AMS ,MRS ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + MLU ) )", "obj1": 0.8354166666666667, "obj2": 0.06914693362364292}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) / Min( AMS ,ARS ) ) + Max( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ),MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( RMSe,CS ) + ( MLU + MUR ) ) ) * ( ( RRSe + MLU ) + ( CS + MUM ) ) )", "obj1": 0.46458333333333335, "obj2": 0.330335220974436}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) + ( FirstVNF_CPU / ARS ) ) + ARS ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUC / MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2699798441038796}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.36875, "obj2": 0.438475570737113}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN - FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7479166666666667, "obj2": 0.10271983730211025}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( DS / MUC ) + Max( RMSe,( RMSe - ( ( RRSe / MUC ) + MUR ) ) ) ) ) * ( ( DS - MLU ) + ( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.9458333333333333, "obj2": 0.02420570031809328}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( MUR + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 0.51875, "obj2": 0.2762467971617513}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.9895833333333334, "obj2": 0.01159970804411823}, {"determining": "( ( ( AMS / ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) ) - ( ( ( ( BR / FirstVNF_RAM ) * ( MDR * Min( MDR ,DDR ) ) ) + ( Max( ( Min( AMS ,MRS ) - AMS ),( Const * ( PN * FirstVNF_Mem ) ) ) - CRS ) ) + ( ( Max( ( Min( AMS ,MRS ) - DDR ),( Const * ( PN * FirstVNF_Mem ) ) ) * FirstVNF_RAM_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) / ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( RMSe - ( Min( DS ,MUM ) + Max( ( CS / DS ),RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5625, "obj2": 0.2466344802619608}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.30453152978990744}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( Max( ( MUR / MUC ),MUR ) + DS ) ) + Max( ( ( Min( ( RMSe / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5, "obj2": 0.29136481569985223}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( MUM * ( MUC / Max( RCSe,RCSe ) ) ) - ( ( ( DS / ( MUR * RRSe ) ) / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5083333333333333, "obj2": 0.2882163905768137}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.8, "obj2": 0.0808949202060373}, {"determining": "( ( ( ( ( PN * CRS ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.7916666666666666, "obj2": 0.08890657854466562}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.48125, "obj2": 0.3080567777810096}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.7229166666666667, "obj2": 0.11593660851351718}], "56": [{"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) / Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * ( MUR * MUM ) ) ) * ( ( DS - RRSe ) + ( MLU + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) / ARS ) - ( Max( FirstVNF_Mem,PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Max( ( ( BR / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ),MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RCSe ) ) - ( ( MUC / ( DS + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / MUC ) / MUC ),MUR ) ) ) * ( CS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) + Min( ACS ,PN ) ) - BR ) )", "choosing": "( ( ( ( ( Min( DS ,MUM ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / MUC ) ,( RRSe * RRSe ) ) ),RCSe ) ,( MLU / MUR ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19375, "obj2": 0.7300438101372402}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN + ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC * MUM ) - ( Max( MUR,CS ) + ( RRSe / MUR ) ) ) * ( ( DS - RMSe ) + ( CS + DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.18922023874973332}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR + Const ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / MUC ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.25416666666666665, "obj2": 0.6138386083142722}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( ACS + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( MUM,CS ) + ( MLU - MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + MUM ) ) )", "obj1": 0.6645833333333333, "obj2": 0.16191287903276408}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5854166666666667, "obj2": 0.22133842285180158}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC + RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6306109542633865}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * PN ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) - MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS - DS ) ) )", "obj1": 0.9, "obj2": 0.040859781960325664}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem * PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( DS - MLU ),( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.6854166666666667, "obj2": 0.13983320431045504}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RRSe ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.42083333333333334, "obj2": 0.37126824591648655}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( ( ( PN * CRS ) + ( AMS / MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Max( DS,RRSe ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.12127683074909917}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR + FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.44583333333333336, "obj2": 0.34255694175502305}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.28958333333333336, "obj2": 0.5454647627188559}, {"determining": "( ( FirstVNF_Mem - Min( AMS ,MRS ) ) - ( ( ( ( FirstVNF_Mem + ( ( ( MRS * FirstVNF_Mem ) + Min( BR ,CRS ) ) + ( PN * FirstVNF_Mem ) ) ) / AMS ) - Min( ( ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ,MRS ) ) / ( Max( ( ( Const * FirstVNF_Mem ) + Max( BR,DDR ) ),( Min( BR ,FirstVNF_RAM ) * Min( MDR ,Min( MDR ,DDR ) ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( CS - MUC ) + Max( RMSe,( DS - ( ( RMSe / MUC ) + Max( RRSe,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + Max( CS,DS ) ) )", "obj1": 0.85625, "obj2": 0.057959176029732516}, {"determining": "Max( ( FirstVNF_RAM + CRS ),Min( FirstVNF_Mem ,Max( Min( PN ,( ( RRS / FirstVNF_RAM_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ),FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( MUR / RCSe ) ) / ( MLU - ( MUR / MUM ) ) )", "obj1": 0.19583333333333333, "obj2": 0.7044746690473302}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6020833333333333, "obj2": 0.20463645321567883}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * BR ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUM ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.25833333333333336, "obj2": 0.5905675578478692}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( BR - CRS ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR + Const ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9375, "obj2": 0.028536213968554783}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5279266919111419}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) / Min( AMS ,ARS ) ) + Max( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ),MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( RMSe,CS ) + ( MLU + MUR ) ) ) * ( ( RRSe + MLU ) + ( CS + MUM ) ) )", "obj1": 0.46458333333333335, "obj2": 0.330335220974436}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) + ( FirstVNF_CPU / ARS ) ) + ARS ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUC / MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2699798441038796}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.36875, "obj2": 0.438475570737113}, {"determining": "( ( ( MDR / AMS ) * Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + BR ) / ( ( Max( ( ( DDR + PN ) / ACS ),( ( ( Const + Const ) * Max( BR,CRS ) ) + Max( Max( PN,FirstVNF_RAM ),( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( RCSe ,CS ) - ( ( MUC / RRSe ) + Max( MUM,RMSe ) ) ) * ( MUM - RCSe ) ) - Min( Max( ( MLU / Min( ( DS / RMSe ) ,( MLU * MLU ) ) ),MUM ) ,( RRSe / MUC ) ) ) + MUC ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6806700480520923}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( Min( FirstVNF_CPU ,MRS ) / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( Max( MUR,CS ) / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5645833333333333, "obj2": 0.23724942077115538}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( Min( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) ,Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21666666666666667, "obj2": 0.6463563476979491}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( Max( ( AMS / AMS ),Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( BR * FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) * ( ( DS - RRSe ) + ( MLU + CS ) ) )", "obj1": 0.6708333333333333, "obj2": 0.15093951389589405}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( MUR + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 0.51875, "obj2": 0.2762467971617513}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( ( BR - CRS ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR + Const ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / MUC ) ) - ( ( DS - MLU ) + ( CS / DS ) ) ) * ( ( DS - MLU ) + ( CS + ( Min( DS ,MUR ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) ) ) )", "obj1": 0.9895833333333334, "obj2": 0.004595429538701542}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.8, "obj2": 0.0808949202060373}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( MUM * ( MUC / Max( RCSe,RCSe ) ) ) - ( ( ( DS / ( MUR * RRSe ) ) / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5083333333333333, "obj2": 0.2882163905768137}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC * MUM ) - ( Max( MUR,CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS + DS ) ) )", "obj1": 0.75625, "obj2": 0.10095286243160907}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20625, "obj2": 0.6604082793185488}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( ACS + CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem_Server ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUM * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS / MLU ) + ( CS - DS ) ) )", "obj1": 0.7708333333333334, "obj2": 0.09171722472891042}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( CRS / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN + FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( ( DDR + ( FirstVNF_CPU / FirstVNF_RAM ) ) + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( Min( Min( DS ,MUM ) ,( ( MUC / ( Min( DS ,RMSe ) - ( ( DS / MUC ) * Max( MUR,RMSe ) ) ) ) + Max( MUC,RMSe ) ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.9666666666666667, "obj2": 0.011691024698029103}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( AMS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,Const ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( MUR + Min( MUC ,RMSe ) ) ) ) ) ) * ( ( CS - MLU ) + ( MLU + Max( MLU,MUR ) ) ) )", "obj1": 0.8479166666666667, "obj2": 0.0667512037504304}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN - FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( MUM ,( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7479166666666667, "obj2": 0.10271983730211025}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20208333333333334, "obj2": 0.6635685050752128}], "57": [{"determining": "( ( ( PN * MDR ) + ( Max( BR,FirstVNF_RAM ) * Max( MRS,CRS ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( ( ( MUC * MUM ) - ( Max( MUR,CS ) + Min( RRSe ,MUR ) ) ),RCSe ) ) ) - ( ( MUC / MUC ) - Max( RMSe,MUR ) ) ) * ( Max( DS,MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( FirstVNF_Mem_Server ,MRS ) ) - ( ( FirstVNF_Mem + ( ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,CRS ) / Min( AMS ,MRS ) ) + ( PN * FirstVNF_CPU ) ) + MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( DS / MUC ) * ( MUR * MUM ) ) ) * ( ( DS - RRSe ) + ( MLU + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) / DS ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19166666666666668, "obj2": 0.6796059826192643}, {"determining": "( ( ( ( ( PN * CRS ) + ( AMS / MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Max( DS,RRSe ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.12127683074909917}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( Min( AMS ,MRS ) / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( Max( MUR,CS ) / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5625, "obj2": 0.2368602518159191}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( DS * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.49583333333333335, "obj2": 0.30577923897587256}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7479166666666667, "obj2": 0.10235938759226784}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RRSe ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.42083333333333334, "obj2": 0.37126824591648655}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC + RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6306109542633865}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( RRSe - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS + DS ) ) )", "obj1": 0.8, "obj2": 0.0808949202060373}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( ACS + CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem_Server ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUM * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS / MLU ) + ( CS - DS ) ) )", "obj1": 0.7708333333333334, "obj2": 0.09171722472891042}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR + FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.44583333333333336, "obj2": 0.34255694175502305}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.28958333333333336, "obj2": 0.5454647627188559}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( Min( FirstVNF_CPU ,MRS ) / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( Max( MUR,CS ) / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( CS - MLU ) + ( CS + DS ) ) )", "obj1": 0.64375, "obj2": 0.18841148884591477}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( ACS + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( MUM,CS ) + ( MLU - MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + MUM ) ) )", "obj1": 0.6645833333333333, "obj2": 0.16191287903276408}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5854166666666667, "obj2": 0.22133842285180158}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * BR ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUM ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.25833333333333336, "obj2": 0.5905675578478692}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem * PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) * Max( ( DS - MLU ),( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.6854166666666667, "obj2": 0.13983320431045504}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / Const ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( DDR * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( MUR + DS ) ) + ( ( ( DS * RCSe ) - ( ( DS + MUC ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5083333333333333, "obj2": 0.28539374394362865}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5279266919111419}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( AMS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,Const ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( MUR + Min( MUC ,RMSe ) ) ) ) ) ) * ( ( CS - MLU ) + ( MLU + Max( MLU,MUR ) ) ) )", "obj1": 0.8479166666666667, "obj2": 0.0667512037504304}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) / Min( AMS ,ARS ) ) + Max( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ),MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( RMSe,CS ) + ( MLU + MUR ) ) ) * ( ( RRSe + MLU ) + ( CS + MUM ) ) )", "obj1": 0.46458333333333335, "obj2": 0.330335220974436}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.36875, "obj2": 0.438475570737113}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( Min( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) ,Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21666666666666667, "obj2": 0.6463563476979491}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN + ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC * MUM ) - ( Max( MUR,CS ) + ( RRSe / MUR ) ) ) * ( ( DS - RMSe ) + ( CS + DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.18922023874973332}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) + ( FirstVNF_CPU / ARS ) ) + ARS ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUC / MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2699798441038796}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( Min( MRS ,CRS ) * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( ( DS - MLU ) + ( CS + DS ) ) + Min( MUC ,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.925, "obj2": 0.03427682039949241}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6104166666666667, "obj2": 0.201597622041896}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - CS ) * ( MUM * RMSe ) ) - Min( ( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.875, "obj2": 0.051705752896703705}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20208333333333334, "obj2": 0.6635685050752128}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5958333333333333, "obj2": 0.21497423012559475}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUC * MUM ) - ( Max( MUR,CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS + DS ) ) )", "obj1": 0.75625, "obj2": 0.10095286243160907}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.20625, "obj2": 0.6604082793185488}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * PN ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC * MUM ) - ( Max( MUR,CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS + DS ) ) )", "obj1": 0.9041666666666667, "obj2": 0.03967221545025052}, {"determining": "( ( BR - CRS ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR + Const ) ) ) + Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.95, "obj2": 0.02368485934054806}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( ( DS / ( MLU / DS ) ) * ( ( MUR * DS ) / Min( CS ,DS ) ) ) * DS ) )", "obj1": 0.25625, "obj2": 0.6134714682315876}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( MUR + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 0.51875, "obj2": 0.2762467971617513}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / BR ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) + ( CS + DS ) ) )", "obj1": 0.6833333333333333, "obj2": 0.1496403470991002}], "58": [{"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( Max( Min( DDR ,CRS ),MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUR ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * MDR ) + ( Max( BR,FirstVNF_RAM ) * Max( MRS,CRS ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( ( ( MUC * MUM ) - ( Max( MUR,CS ) + Min( RRSe ,MUR ) ) ),RCSe ) ) ) - ( ( MUC / MUC ) - Max( RMSe,MUR ) ) ) * ( Max( DS,MLU ) + ( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) / DS ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19166666666666668, "obj2": 0.6796059826192643}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( BR - CRS ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR + Const ) ) ) + Max( ( RRS / DDR ),( MDR - ( ( FirstVNF_RAM - BR ) * ( AMS - MRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR - MUC ),MUR ) ) ) * ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) + ( CS + DS ) ) )", "obj1": 0.95, "obj2": 0.0231732477588223}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( ( ( MUC * MUM ) - ( Max( MUR,CS ) + Min( RRSe ,MUR ) ) ),RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Max( DS,MLU ) + ( CS + DS ) ) )", "obj1": 0.8395833333333333, "obj2": 0.06367853220652071}, {"determining": "( ( ( ( ( PN * CRS ) + ( AMS / MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Max( DS,RRSe ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.12127683074909917}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( ( DS / ( MLU / DS ) ) * ( ( MUR * DS ) / Min( CS ,DS ) ) ) * DS ) )", "obj1": 0.25416666666666665, "obj2": 0.6083663718205}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( ACS + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( MUM,CS ) + ( MLU - MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + MUM ) ) )", "obj1": 0.6645833333333333, "obj2": 0.16191287903276408}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - CS ) * ( MUM * RMSe ) ) - Min( ( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.875, "obj2": 0.051705752896703705}, {"determining": "( ( ( RRS / AMS ) - Min( AMS ,MRS ) ) - ( Min( FirstVNF_RAM_Server ,( Min( BR ,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) / Min( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) - ( PN * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( MUC / MUC ) - Max( ( DS / DS ),Max( Min( ( RMSe / RMSe ) ,( RMSe * Min( ( RMSe / RMSe ) ,Min( RRSe ,RRSe ) ) ) ),RMSe ) ) ) * ( ( DS * MUR ) + ( CS + DS ) ) )", "obj1": 0.3229166666666667, "obj2": 0.52527354154334}, {"determining": "( ( ( PN * MDR ) + Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( ( ( MUC * MUM ) - ( Max( MUR,DS ) + Min( RRSe ,MUR ) ) ),RCSe ) ) ) - ( ( MUC / MUC ) - Max( RMSe,MUR ) ) ) * ( Max( DS,MLU ) + ( CS + DS ) ) )", "obj1": 0.9854166666666667, "obj2": 0.0071105921498643915}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR + FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.44583333333333336, "obj2": 0.34255694175502305}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.28958333333333336, "obj2": 0.5454647627188559}, {"determining": "( ( ( ( ( PN * ARS ) * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( MUC / ( MUR + DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.74375, "obj2": 0.11472819255433568}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR + FirstVNF_RAM ) * Min( FirstVNF_Mem ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / BR ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( RMSe - MLU ) + ( MUC + DS ) ) )", "obj1": 0.6416666666666667, "obj2": 0.1716574108453615}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.2375, "obj2": 0.6305742845386421}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5279266919111419}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + Min( Max( Min( DDR ,CRS ),MDR ) ,RRS ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC + MUR ) ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3756906314653168}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) / Min( AMS ,ARS ) ) + Max( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ),MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( RMSe,CS ) + ( MLU + MUR ) ) ) * ( ( RRSe + MLU ) + ( CS + MUM ) ) )", "obj1": 0.46458333333333335, "obj2": 0.330335220974436}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( Min( MRS ,CRS ) * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( ( DS - MLU ) + ( CS + DS ) ) + Min( MUC ,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.925, "obj2": 0.03427682039949241}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * BR ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUM ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.25833333333333336, "obj2": 0.5905675578478692}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) + ( FirstVNF_CPU / ARS ) ) + ARS ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUC / MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2699798441038796}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.36875, "obj2": 0.438475570737113}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( ACS + CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem_Server ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUM * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS / MLU ) + ( CS - DS ) ) )", "obj1": 0.7708333333333334, "obj2": 0.09171722472891042}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( Min( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) ,Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21666666666666667, "obj2": 0.6463563476979491}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN + ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC * MUM ) - ( Max( MUR,CS ) + ( RRSe / MUR ) ) ) * ( ( DS - RMSe ) + ( CS + DS ) ) )", "obj1": 0.6354166666666666, "obj2": 0.18922023874973332}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / BR ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) + ( CS + DS ) ) )", "obj1": 0.6833333333333333, "obj2": 0.1496403470991002}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5958333333333333, "obj2": 0.21497423012559475}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.6083333333333333, "obj2": 0.20115641893320813}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / Const ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( Min( CRS ,FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - Min( Max( Min( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) ,Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6895833333333333, "obj2": 0.13553496529022235}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.7979166666666667, "obj2": 0.09012605719057035}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.61875, "obj2": 0.19556575810729662}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( DS * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.49583333333333335, "obj2": 0.3043984778320096}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC + RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6306109542633865}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS - RMSe ) + ( CS + DS ) ) )", "obj1": 0.5854166666666667, "obj2": 0.22058516990605198}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Max( DS,RRSe ) + ( CS + DS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.3141233868345028}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5770833333333333, "obj2": 0.2324537952721105}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( MUR + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 0.51875, "obj2": 0.2762467971617513}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) * ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( DS + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.55, "obj2": 0.2522220574414194}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}], "59": [{"determining": "( Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "( ( ( ( ( ( MUC - MUR ) - ( Max( MUM,CS ) + ( MLU - MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + MUM ) ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) / DS ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( Max( Min( DDR ,CRS ),MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUR ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) / DS ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19166666666666668, "obj2": 0.6796059826192643}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + Min( Max( Min( DDR ,CRS ),MDR ) ,RRS ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC + MUR ) ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3756906314653168}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MUC / ( MUR + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 0.51875, "obj2": 0.2762467971617513}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.7979166666666667, "obj2": 0.09012605719057035}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( DS,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( ( DS / ( MLU / DS ) ) * ( ( MUR * DS ) / Min( CS ,DS ) ) ) * DS ) )", "obj1": 0.31666666666666665, "obj2": 0.5157117762223122}, {"determining": "( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( DS * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.49583333333333335, "obj2": 0.3043984778320096}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) / DS ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21041666666666667, "obj2": 0.6667516648666277}, {"determining": "( ( ( ( ( PN * CRS ) + ( AMS / MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) / ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM / ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Max( DS,RRSe ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.12127683074909917}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR + FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.44583333333333336, "obj2": 0.34255694175502305}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.28958333333333336, "obj2": 0.5454647627188559}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5279266919111419}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( BR - CRS ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR + Const ) ) ) + Max( ( RRS / DDR ),( MDR - ( ( FirstVNF_RAM - BR ) * ( AMS - MRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR - MUC ),MUR ) ) ) * ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) + ( CS + DS ) ) )", "obj1": 0.95, "obj2": 0.0231732477588223}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) / Min( AMS ,ARS ) ) + Max( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ),MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( RMSe,CS ) + ( MLU + MUR ) ) ) * ( ( RRSe + MLU ) + ( CS + MUM ) ) )", "obj1": 0.46458333333333335, "obj2": 0.330335220974436}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( Min( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) ,Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21666666666666667, "obj2": 0.6463563476979491}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( FirstVNF_Mem ,DDR ) ) ,MRS ) ) + ( PN * BR ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MUM ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.25833333333333336, "obj2": 0.5905675578478692}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) + ( FirstVNF_CPU / ARS ) ) + ARS ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUC / MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2699798441038796}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.36875, "obj2": 0.438475570737113}, {"determining": "( ( ( PN * MDR ) + Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.9791666666666666, "obj2": 0.008607428581599833}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( ( ( Const * ACS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * ACS ) ) / MDR ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( ( CS + DS ) / MUC ) / ( RMSe * MLU ) ) ) * ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) + ( CS + DS ) ) )", "obj1": 0.91875, "obj2": 0.042007016728484274}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6645833333333333, "obj2": 0.1577751869215048}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.7395833333333334, "obj2": 0.10748804110021078}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / BR ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) + ( CS + DS ) ) )", "obj1": 0.6833333333333333, "obj2": 0.1496403470991002}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( PN - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.63125, "obj2": 0.18818579786473844}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - CS ) * ( MUM * RMSe ) ) - Min( ( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.875, "obj2": 0.051705752896703705}, {"determining": "( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / Const ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( Min( CRS ,FirstVNF_CPU_Server ) * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - Min( Max( Min( ( Min( MLU ,MUM ) / DS ) ,Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7625, "obj2": 0.09685004870554971}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_RAM_Server ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( RMSe / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),CS ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.85, "obj2": 0.059250775872831486}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( ( DS / ( MLU / DS ) ) * ( ( MUR * DS ) / Min( CS ,DS ) ) ) * DS ) )", "obj1": 0.25416666666666665, "obj2": 0.6083663718205}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( ( ( MUC * MUM ) - ( Max( MUR,CS ) + Min( RRSe ,MUR ) ) ),RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Max( DS,MLU ) + ( CS + DS ) ) )", "obj1": 0.8395833333333333, "obj2": 0.06367853220652071}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MLU ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5666666666666667, "obj2": 0.23364081729928218}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( ( MUC - MUR ) + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7333333333333333, "obj2": 0.11620171793631083}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR + FirstVNF_RAM ) * Min( FirstVNF_Mem ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / BR ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( RMSe - MLU ) + ( MUC + DS ) ) )", "obj1": 0.6416666666666667, "obj2": 0.1716574108453615}, {"determining": "( ( ( ( ( PN * PN ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + Min( Max( Min( DDR ,CRS ),MDR ) ,RRS ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC + MUR ) ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * ( MUC / MUC ) ) )", "obj1": 0.55, "obj2": 0.25103927047350566}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( ACS + CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem_Server ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUM * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS / MLU ) + ( CS - DS ) ) )", "obj1": 0.7708333333333334, "obj2": 0.09171722472891042}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( ( DS / ( MLU / DS ) ) * ( ( MUR * DS ) / Min( CS ,DS ) ) ) * DS ) )", "obj1": 0.24791666666666667, "obj2": 0.6235080725610486}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( Min( MRS ,CRS ) * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( ( DS - MLU ) + ( CS + DS ) ) + Min( MUC ,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.925, "obj2": 0.03427682039949241}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + Min( Max( Min( DDR ,CRS ),MDR ) ,RRS ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( CRS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / ( RMSe + RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.42291666666666666, "obj2": 0.361747255987083}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC + RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6306109542633865}], "60": [{"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS * RCSe ) - ( ( MLU + MUC ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "( ( ( ( ( ( MUC - MUR ) - ( Max( MUM,CS ) + ( MLU - MUR ) ) ) * ( ( RRSe - MLU ) + ( CS + MUM ) ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) / DS ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) / DS ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19166666666666668, "obj2": 0.6796059826192643}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / FirstVNF_Mem ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( ( ( MUC + MUM ) - ( Max( MUR,CS ) + Min( RRSe ,MUR ) ) ),RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,MUR ) ) ) * ( Max( DS,MLU ) + ( CS + DS ) ) )", "obj1": 0.60625, "obj2": 0.22817316692120085}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( BR - CRS ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR + Const ) ) ) + Max( ( RRS / DDR ),( MDR - ( ( FirstVNF_RAM - BR ) * ( AMS - MRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR - MUC ),MUR ) ) ) * ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) + ( CS + DS ) ) )", "obj1": 0.95, "obj2": 0.0231732477588223}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + Min( Max( Min( DDR ,CRS ),MDR ) ,RRS ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC + MUR ) ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.4125, "obj2": 0.3756906314653168}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC + RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6306109542633865}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + FirstVNF_RAM ) / ( ( ( ( Min( AMS ,MRS ) * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( MLU / ( MUR + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) / ( CS + DS ) ) )", "obj1": 0.61875, "obj2": 0.19516553384313245}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MLU ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5666666666666667, "obj2": 0.23364081729928218}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.7979166666666667, "obj2": 0.09012605719057035}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.28958333333333336, "obj2": 0.5454647627188559}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5279266919111419}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.24791666666666667, "obj2": 0.6090811885952045}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC + MUR ) ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * ( MUC / MUC ) ) )", "obj1": 0.25625, "obj2": 0.5852799259698608}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) + ( FirstVNF_CPU / ARS ) ) + ARS ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUC / MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2699798441038796}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.36875, "obj2": 0.438475570737113}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( ( ( Const * ACS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * ACS ) ) / MDR ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( ( CS + DS ) / MUC ) / ( RMSe * MLU ) ) ) * ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) + ( CS + DS ) ) )", "obj1": 0.91875, "obj2": 0.042007016728484274}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( Min( MRS ,CRS ) * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( ( DS - MLU ) + ( CS + DS ) ) + Min( MUC ,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.925, "obj2": 0.03427682039949241}, {"determining": "( ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_CPU_Server ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( ( MUC - MUR ) + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12895755920801363}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR + FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.44583333333333336, "obj2": 0.34255694175502305}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),( MUC / ( CS + DS ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.11991770230851427}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( ACS ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( DS * DS ) ) ),MUC ) ,( ( ( DS / ( MLU / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) ) + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5166666666666667, "obj2": 0.2896148455378483}, {"determining": "( ( ( PN * MDR ) + Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.9791666666666666, "obj2": 0.008607428581599833}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_RAM_Server ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( RMSe / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),CS ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.85, "obj2": 0.059250775872831486}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + Min( Max( Min( DDR ,CRS ),MDR ) ,( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,MUR ) ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.49583333333333335, "obj2": 0.29914160673405615}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( PN - CRS ) ) ,MRS ) ) + ( PN * Min( BR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) - ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) * ( CS + DS ) ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.7291666666666666, "obj2": 0.10913322947614018}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + Min( Max( Min( DDR ,CRS ),MDR ) ,RRS ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC + MUR ) ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( ( CS + MUM ) / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * ( MUC / MUC ) ) )", "obj1": 0.4895833333333333, "obj2": 0.3058589971231435}, {"determining": "( ( ( AMS / AMS ) - ( Min( BR ,FirstVNF_RAM ) * Min( Const ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / ( Max( RMSe,DS ) * ( DS * RMSe ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21666666666666667, "obj2": 0.644728812136975}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / BR ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) + ( CS + DS ) ) )", "obj1": 0.6875, "obj2": 0.1465209895107427}, {"determining": "( ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,Min( MLU ,MUM ) ) ) + DS ) * ( ( ( DS / ( MLU / DS ) ) * ( ( MUR * DS ) / Min( CS ,DS ) ) ) * DS ) )", "obj1": 0.31875, "obj2": 0.5156955363266702}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR + FirstVNF_RAM ) * Min( FirstVNF_Mem ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / BR ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( RMSe - MLU ) + ( MUC + DS ) ) )", "obj1": 0.6416666666666667, "obj2": 0.1716574108453615}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + Min( Max( Min( DDR ,CRS ),MDR ) ,RRS ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( CRS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / ( RMSe + RCSe ) ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.42291666666666666, "obj2": 0.361747255987083}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( ACS + CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem_Server ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUM * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS / MLU ) + ( CS - DS ) ) )", "obj1": 0.7708333333333334, "obj2": 0.09171722472891042}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC + MUR ) ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * ( MUC / MUC ) ) )", "obj1": 0.6625, "obj2": 0.1613605571443978}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - CS ) * ( MUM * RMSe ) ) - Min( ( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.875, "obj2": 0.051705752896703705}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( AMS ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "( ( ( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) / DS ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19791666666666666, "obj2": 0.6766729522613826}, {"determining": "( ( ( ( ( PN * PN ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + Min( Max( Min( DDR ,CRS ),MDR ) ,RRS ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( Min( RMSe ,( RRSe - RRSe ) ) / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.55625, "obj2": 0.24409312166137279}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) / Min( AMS ,ARS ) ) + Max( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ),MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC - MUR ) - ( Max( RMSe,CS ) + ( MLU + MUR ) ) ) * ( ( RRSe + MLU ) + ( CS + MUM ) ) )", "obj1": 0.46458333333333335, "obj2": 0.330335220974436}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( ( DS / ( MLU / DS ) ) * ( ( MUR * DS ) / Min( CS ,DS ) ) ) * DS ) )", "obj1": 0.25416666666666665, "obj2": 0.6083663718205}], "61": [{"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),( Max( MUR,CS ) + ( DS - MUR ) ) ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( ( DS * RCSe ) - ( ( MLU + MUC ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) / DS ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19166666666666668, "obj2": 0.6796059826192643}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( PN - CRS ) ) ,MRS ) ) + ( PN * Min( BR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) - ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) * ( CS + DS ) ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.7291666666666666, "obj2": 0.10913322947614018}, {"determining": "( ( ( ( PN * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,( ACS + CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem_Server ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUM * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( RMSe / MUC ),MUR ) ) ) * ( ( DS / MLU ) + ( CS - DS ) ) )", "obj1": 0.7708333333333334, "obj2": 0.09171722472891042}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / BR ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) + ( CS + DS ) ) )", "obj1": 0.6875, "obj2": 0.1465209895107427}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) + ( FirstVNF_CPU / ARS ) ) + ARS ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUC / MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2699798441038796}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.7979166666666667, "obj2": 0.09012605719057035}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUC * MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.60625, "obj2": 0.22229663378764974}, {"determining": "( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( ACS ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( DS * DS ) ) ),MUC ) ,( ( ( DS / ( MLU / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) ) + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5166666666666667, "obj2": 0.2896148455378483}, {"determining": "( ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,Min( MLU ,MUM ) ) ) + DS ) * ( ( ( DS / ( MLU / DS ) ) * ( ( MUR * DS ) / Min( CS ,DS ) ) ) * DS ) )", "obj1": 0.31875, "obj2": 0.5156955363266702}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MLU ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5666666666666667, "obj2": 0.23364081729928218}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.30833333333333335, "obj2": 0.5279266919111419}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.28958333333333336, "obj2": 0.5454647627188559}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.8854166666666666, "obj2": 0.04653435326020468}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR + FirstVNF_RAM ) * Min( FirstVNF_Mem ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / BR ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( RMSe - MLU ) + ( MUC + DS ) ) )", "obj1": 0.6416666666666667, "obj2": 0.1716574108453615}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( Min( MRS ,CRS ) * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( ( DS - MLU ) + ( CS + DS ) ) + Min( MUC ,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + Max( MLU,MUR ) ) ) )", "obj1": 0.91875, "obj2": 0.03734814121022776}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC + MUR ) ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * ( MUC / MUC ) ) )", "obj1": 0.6625, "obj2": 0.1613605571443978}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC + MUR ) ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * ( MUC / MUC ) ) )", "obj1": 0.25625, "obj2": 0.5852799259698608}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,RRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - RMSe ) * ( CS + DS ) ) )", "obj1": 0.275, "obj2": 0.5530583555113495}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.36875, "obj2": 0.438475570737113}, {"determining": "( ( ( ( Max( PN,FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( FirstVNF_RAM_Server - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_CPU_Server ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( ( MUC - MUR ) + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),DS ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7020833333333333, "obj2": 0.12895755920801363}, {"determining": "( ( ( PN * MDR ) + Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.9791666666666666, "obj2": 0.008607428581599833}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( ( MUC - MUR ) + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6291666666666667, "obj2": 0.19465303470666195}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),( MUC / ( CS + DS ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.11991770230851427}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) * Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,FirstVNF_Mem ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC - MUR ) ) ) ) * RMSe ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RRSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * ( MUC / MUC ) ) )", "obj1": 0.9229166666666667, "obj2": 0.031097386460844787}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * AMS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - ( MUC / Max( RMSe,RCSe ) ) ) + ( CS + DS ) ) )", "obj1": 0.4083333333333333, "obj2": 0.37726865954589855}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - CS ) * ( MUM * RMSe ) ) - Min( ( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.875, "obj2": 0.051705752896703705}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + Min( Max( Min( DDR ,CRS ),MDR ) ,( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,MUR ) ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.49583333333333335, "obj2": 0.29914160673405615}, {"determining": "( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( ACS ,DDR ) ) ,MRS ) ) + ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.3854166666666667, "obj2": 0.42114855326678363}, {"determining": "( ( ( AMS / AMS ) + Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) - Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + RCSe ) * ( DS * DS ) )", "obj1": 0.20208333333333334, "obj2": 0.6635685050752128}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( ( BR - CRS ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR + Const ) ) ) + Max( ( RRS / DDR ),( MDR - ( ( FirstVNF_RAM - BR ) * ( AMS - MRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR - MUC ),MUR ) ) ) * ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) + ( CS + DS ) ) )", "obj1": 0.95, "obj2": 0.0231732477588223}, {"determining": "( ( BR - CRS ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR + Const ) ) ) + Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - FirstVNF_RAM ),( AMS - MRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( DS / RMSe ) + Min( MUC ,RMSe ) ) ) ) ) ) + ( CS + DS ) ) )", "obj1": 0.95, "obj2": 0.0231732477588223}, {"determining": "( ( ( ( ( ( ( PN * PN ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( CS + DS ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.24583333333333332, "obj2": 0.6223188318434353}, {"determining": "( ( ( AMS / AMS ) - Min( RRS ,MRS ) ) - Max( Max( PN,PN ),( ( Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) + ( FirstVNF_RAM_Server * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS * MUR ) - ( ( MLU + DS ) + ( MUC * MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.42971720990224826}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( ( DS - MLU ) + ( CS + DS ) ) / DS ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.2125, "obj2": 0.6506468440462864}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( ( ( DS / ( MLU / DS ) ) * ( ( MUR * DS ) / Min( CS ,DS ) ) ) * DS ) )", "obj1": 0.25416666666666665, "obj2": 0.6083663718205}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC + RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6306109542633865}, {"determining": "( ( ( AMS / AMS ) - ( Min( BR ,FirstVNF_RAM ) * Min( Const ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / ( Max( RMSe,DS ) * ( DS * RMSe ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21666666666666667, "obj2": 0.644728812136975}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_RAM_Server ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( RMSe / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),CS ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.85, "obj2": 0.059250775872831486}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( RMSe / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.8520833333333333, "obj2": 0.057897022976751145}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR + FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.44583333333333336, "obj2": 0.34255694175502305}], "62": [{"determining": "( ( ( AMS / AMS ) + Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) - Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + RCSe ) * ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),( Max( MUR,CS ) + ( DS - MUR ) ) ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,MUR ) ) / DS ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.19166666666666668, "obj2": 0.6796059826192643}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * AMS ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - ( MUC / Max( RMSe,RCSe ) ) ) + ( CS + DS ) ) )", "obj1": 0.4083333333333333, "obj2": 0.37726865954589855}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC + MUR ) ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * ( MUC / MUC ) ) )", "obj1": 0.6625, "obj2": 0.1613605571443978}, {"determining": "( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) - ( ( FirstVNF_Mem + PN ) * ( ( ( ( PN - FirstVNF_Mem ) + Min( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( RRSe - RMSe ) - ( Max( MUR,CS ) + ( DS - MUR ) ) ) * ( ( RRSe * RMSe ) + ( CS / CS ) ) )", "obj1": 0.5479166666666667, "obj2": 0.254599779042447}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem * PN ) / ( ( ( Max( PN,FirstVNF_Mem ) + ( ( ( FirstVNF_RAM - CRS ) + ( CRS - CRS ) ) / MRS ) ) + ( FirstVNF_CPU_Server * ACS ) ) / CRS ) ) )", "choosing": "( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) * ( ( DS - RMSe ) + ( CS * DS ) ) )", "obj1": 0.32708333333333334, "obj2": 0.4883134058875239}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * Const ) ) * FirstVNF_RAM_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) ) - ( Max( FirstVNF_Mem,ACS ) * ( ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Max( DS,RMSe ) - ( ( MUC / MUC ) + Max( MUC,RMSe ) ) ) - ( MUM * RCSe ) ) - ( Min( RMSe ,RMSe ) - ( ( ( Max( RMSe,RMSe ) - ( RRSe - RRSe ) ) / MUC ) / Max( RRSe,MUR ) ) ) ) + DS ) * ( ( DS - MLU ) + ( CS + CS ) ) )", "obj1": 0.4375, "obj2": 0.3611974245479615}, {"determining": "( ( ( AMS + AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_CPU + ( ( BR / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( ( FirstVNF_RAM + CRS ) + ( BR - CRS ) ) - BR ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,MLU ) - ( ( MUC / MUC ) + Max( MUR,RMSe ) ) ) * ( MUM * RCSe ) ) - Min( Max( ( ( CS + MUC ) / ( ( DS / RMSe ) / ( MUC * RCSe ) ) ),DS ) ,Max( MLU,DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.39166666666666666, "obj2": 0.3982268407659255}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.47291666666666665, "obj2": 0.3173638437832364}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.23958333333333334, "obj2": 0.609653470679556}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) - Min( AMS ,MRS ) ) + ( FirstVNF_CPU / ARS ) ) + ARS ) - ( ( FirstVNF_Mem + PN ) / Min( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * FirstVNF_Mem ) ) ,MDR ) ) )", "choosing": "( ( ( DS / ( MUC / MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5270833333333333, "obj2": 0.2699798441038796}, {"determining": "( ( Max( AMS,AMS ) - Min( MDR ,MRS ) ) - ( ( FirstVNF_Mem + PN ) + ( ( ( Min( PN ,FirstVNF_Mem ) + Min( ( Min( DDR ,CRS ) / MDR ) ,RRS ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( MUC + MUC ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * Min( ( DS - MLU ) ,( CS + MUM ) ) )", "obj1": 0.34375, "obj2": 0.4685719656330866}, {"determining": "( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( ACS ,DDR ) ) ,MRS ) ) + ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MLU ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.3770833333333333, "obj2": 0.41390866640930024}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,DDR ) ) ) / ( ( ( ( PN + FirstVNF_CPU_Server ) + Min( ( MDR / Min( MDR ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.28958333333333336, "obj2": 0.5454647627188559}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( Min( BR ,CRS ) * Min( Const ,ACS ) ) ) ) - Min( ( FirstVNF_Mem + PN ) ,( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * ( MUC / Min( RMSe ,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * DS ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.36875, "obj2": 0.438475570737113}, {"determining": "( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( CRS ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( Min( MDR ,Min( ACS ,DDR ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( DS * DS ) ) ),MUC ) ,( ( ( DS / ( MLU / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) ) + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.5166666666666667, "obj2": 0.2896148455378483}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUC + RMSe ) - ( Max( MUR,CS ) + ( MLU - MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.22291666666666668, "obj2": 0.6306109542633865}, {"determining": "( ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - ( ( MUC / MUC ) + ( RMSe * RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.30625, "obj2": 0.5206433661321405}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUC * MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.60625, "obj2": 0.22229663378764974}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MLU ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6875, "obj2": 0.13528878791710283}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( FirstVNF_CPU - DDR ),( BR * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) - ( MDR - CRS ) ) ) ) - ( Max( ACS,PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( AMS + CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUR ) * ( MUM / RMSe ) ) * Min( ( ( ( ( MUC - MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.35833333333333334, "obj2": 0.45482605888206734}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MLU ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5666666666666667, "obj2": 0.23364081729928218}, {"determining": "( ( ( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( DS ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,RMSe ) ,( RCSe * DS ) ) ),MUC ) ,Min( MLU ,MUM ) ) ) + DS ) * ( ( ( DS / ( MLU / DS ) ) * ( ( MUR * DS ) / Min( CS ,DS ) ) ) * DS ) )", "obj1": 0.31875, "obj2": 0.5156955363266702}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( PN * FirstVNF_Mem ) ,( BR + Const ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( MUR / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.45625, "obj2": 0.336028545063096}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( FirstVNF_RAM_Server + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.5770833333333333, "obj2": 0.22887214002459655}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.26666666666666666, "obj2": 0.5725271665779963}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + RCSe ) * ( DS * DS ) )", "obj1": 0.8270833333333333, "obj2": 0.07228502463866987}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( BR + FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe * MLU ) ) ) * ( ( DS - MLU ) + ( CS + MUM ) ) )", "obj1": 0.44583333333333336, "obj2": 0.34255694175502305}, {"determining": "( ( ( AMS / AMS ) + Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) - Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ),MUC ) ,( MUR + DS ) ) ) + RCSe ) * ( DS * DS ) )", "obj1": 0.20208333333333334, "obj2": 0.6635685050752128}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC + MUR ) ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * ( MUC / MUC ) ) )", "obj1": 0.25416666666666665, "obj2": 0.5943876136050286}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + Min( Max( Min( DDR ,CRS ),MDR ) ,( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,MUR ) ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.4895833333333333, "obj2": 0.3012414645438657}, {"determining": "( ( ( ( ACS * ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ACS * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) / ( ( Max( ( RRS / DDR ),( MDR + Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + ( MDR * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( Min( BR ,FirstVNF_RAM ) ,( ACS + CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS / ( RCSe / RCSe ) ) * ( ( MUR * DS ) / ( CS + DS ) ) )", "obj1": 0.7979166666666667, "obj2": 0.09012605719057035}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * FirstVNF_RAM_Server ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * MLU ) ) - ( ( CS / ( CS + DS ) ) + Max( ( ( Min( ( RMSe / RMSe ) ,( RRSe - MUR ) ) / MUC ) / MUC ),CS ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.85, "obj2": 0.059250775872831486}, {"determining": "( ( AMS - ( ( PN * FirstVNF_Mem ) - ( ( BR + FirstVNF_RAM ) * Min( FirstVNF_Mem ,CRS ) ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_Mem ) - ( ( BR / BR ) * Min( MRS ,CRS ) ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( RMSe - MLU ) + ( MUC + DS ) ) )", "obj1": 0.6416666666666667, "obj2": 0.1716574108453615}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + Min( Max( Min( DDR ,CRS ),MDR ) ,( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( MDR / FirstVNF_CPU_Server ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,MUR ) ) ) - ( ( MUC / MUC ) + Max( RMSe,RMSe ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.49583333333333335, "obj2": 0.29914160673405615}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.8041666666666667, "obj2": 0.08127955230354147}, {"determining": "( ( ( ( ( PN * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( MRS ,CRS ) ) ) + ( PN * ( ( ( PN * FirstVNF_Mem ) + ( BR - FirstVNF_RAM ) ) + ( PN * FirstVNF_Mem ) ) ) ) / MDR ) - ( ( FirstVNF_Mem + ( DDR / FirstVNF_RAM ) ) / ( ( ( ( ( PN * FirstVNF_Mem ) + Min( AMS ,MRS ) ) + Min( ( ( BR / FirstVNF_RAM ) + ( BR - CRS ) ) ,FirstVNF_Mem ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( ( ( CS + DS ) / MUC ) * ( RMSe * MLU ) ) ) * ( ( RMSe - MLU ) + ( CS + DS ) ) )", "obj1": 0.88125, "obj2": 0.04632801630897671}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC + MUR ) ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( MUC / MUC ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * ( MUC / MUC ) ) )", "obj1": 0.25625, "obj2": 0.5852799259698608}, {"determining": "( ( ( AMS / AMS ) - ( ( ( PN * FirstVNF_Mem ) + ( BR - CRS ) ) * ( ( Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - Min( MDR ,CRS ) ) ) ) - ( ( FirstVNF_Mem - PN ) / ( ( ( Max( PN,FirstVNF_Mem ) * ( BR - CRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( ( MUC - MUR ) + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.6291666666666667, "obj2": 0.19465303470666195}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( ( AMS / AMS ) * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( ( ( DS - MLU ) + ( CS + DS ) ) / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.7541666666666667, "obj2": 0.09965627892634014}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( Min( BR ,( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( PN * FirstVNF_Mem ) + ( Min( BR ,FirstVNF_CPU_Server ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( ( DS - MLU ) + ( CS + DS ) ) / DS ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.2125, "obj2": 0.6506468440462864}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( FirstVNF_Mem * FirstVNF_Mem ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( MUM * ( MUC / Max( RMSe,RCSe ) ) ) - Max( ( DS / MUC ),Max( RMSe,( RMSe - ( ( RRSe / MUC ) + Min( MUC ,RMSe ) ) ) ) ) ) * ( ( DS - MLU ) + ( CS + MUR ) ) )", "obj1": 0.9604166666666667, "obj2": 0.01577164919709293}, {"determining": "( ( BR - CRS ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,( BR + Const ) ) ) + Max( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUR * RRSe ) ) - ( ( MUC / ( Max( ( RMSe / MUC ),MUR ) + DS ) ) + Max( ( MUR / MUC ),MUR ) ) ) * ( CS / ( CS + DS ) ) )", "obj1": 0.9395833333333333, "obj2": 0.027729204310942824}, {"determining": "( ( ( ( ( PN * MDR ) + ( ( BR / FirstVNF_RAM ) * Max( MRS,CRS ) ) ) + ( PN * ARS ) ) / MDR ) - ( ( FirstVNF_Mem + ( FirstVNF_Mem / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( BR - CRS ) ) ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( DS * ( MUR * MLU ) ) - ( ( MUC / ( CS + DS ) ) + Max( ( ( DS / ( Min( DS ,MUM ) / Max( MUC,RRSe ) ) ) / MUC ),( MUC / ( CS + DS ) ) ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.7083333333333334, "obj2": 0.11991770230851427}, {"determining": "( ( ( PN * MDR ) + Max( ( RRS - DDR ),( BR * FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_Mem + PN ) / ( ( ( ( Const * FirstVNF_Mem ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) + ( PN * ACS ) ) / MDR ) ) )", "choosing": "( ( ( DS / ( MUC * MLU ) ) - ( ( MUC / ( CS + DS ) ) / Max( ( ( Min( ( DS / RMSe ) ,( RRSe - MUR ) ) - MUC ) / MUC ),MUR ) ) ) * ( ( DS - MLU ) + ( CS + DS ) ) )", "obj1": 0.9791666666666666, "obj2": 0.00849223300739438}, {"determining": "( ( ( AMS / AMS ) - ( ( FirstVNF_Mem + PN ) * ( ( ( AMS * MRS ) + Min( ( BR / FirstVNF_RAM ) ,Min( AMS ,CRS ) ) ) / MDR ) ) ) - ( ( Max( ( ( ( ( PN * AMS ) + Min( ACS ,MRS ) ) + ( AMS - MRS ) ) + ( PN + FirstVNF_Mem ) ),MDR ) + ( Min( BR ,FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,( RCSe * DS ) ) ) * ( MUM * RMSe ) ) - Min( ( ( ( Min( MUC ,MUM ) / Max( RMSe,RCSe ) ) / Min( ( RMSe * RMSe ) ,( RCSe * DS ) ) ) * MUC ) ,( DS + DS ) ) ) + MLU ) * ( DS * DS ) )", "obj1": 0.9041666666666667, "obj2": 0.04039725026569453}, {"determining": "( ( ( AMS / AMS ) - ( Min( BR ,FirstVNF_RAM ) * Min( Const ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + ( Min( BR ,FirstVNF_RAM ) * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + Min( AMS ,MRS ) ) + ( PN * FirstVNF_Mem ) ) / MRS ) ) )", "choosing": "( ( ( ( ( RRSe - MUM ) * ( MUM * RMSe ) ) - Min( Max( ( ( Min( MLU ,MUM ) / Max( RMSe,RCSe ) ) / ( Max( RMSe,DS ) * ( DS * RMSe ) ) ),MUC ) ,( MUR + DS ) ) ) + DS ) * ( DS * DS ) )", "obj1": 0.21666666666666667, "obj2": 0.644728812136975}, {"determining": "( ( Min( MDR ,DDR ) / MDR ) - ( ( FirstVNF_Mem + ( BR / FirstVNF_RAM ) ) / ( ( ( ( PN * FirstVNF_Mem ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) + ( PN - CRS ) ) ,MRS ) ) + ( PN * Min( BR ,FirstVNF_CPU_Server ) ) ) / MDR ) ) )", "choosing": "( ( ( ( MUC * MUM ) - ( ( MUR + CS ) + Min( RRSe ,MUR ) ) ) - ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) * ( RMSe + MUR ) ) ) * ( ( DS - MLU ) * ( Min( ( MUR / RMSe ) ,( RRSe - MUR ) ) / MUC ) ) ) ) * ( ( DS * RMSe ) + ( CS + DS ) ) )", "obj1": 0.7270833333333333, "obj2": 0.10969707438246926}, {"determining": "( ( ( ( PN * ( ( PN * ARS ) + ( ( BR / FirstVNF_RAM ) * Min( ACS ,CRS ) ) ) ) + ( ( ( PN * FirstVNF_Mem ) + ( BR - MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) ) * ( ( Max( ( RRS / DDR ),( MDR - Max( ( FirstVNF_RAM - BR ),( AMS - MRS ) ) ) ) * FirstVNF_RAM_Server ) + Min( MDR ,FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_Mem + PN ) - ( ( ( PN * FirstVNF_Mem ) + Min( ( BR / FirstVNF_RAM ) ,Min( ACS ,CRS ) ) ) / MDR ) ) )", "choosing": "( ( DS - ( RRSe / DS ) ) * ( ( CS * DS ) + ( CS / DS ) ) )", "obj1": 0.81875, "obj2": 0.0746118680284764}, {"determining": "( ( ( AMS / AMS ) - Min( AMS ,MRS ) ) - ( ( FirstVNF_Mem + ( MDR * Min( MDR ,FirstVNF_CPU_Server ) ) ) / ( ( ( ( PN * FirstVNF_CPU_Server ) + CRS ) + ( PN * FirstVNF_Mem ) ) / MDR ) ) )", "choosing": "( ( ( ( ( Min( DS ,RMSe ) - ( ( MUC / MUC ) + Max( MUC,( MUC + MUR ) ) ) ) * ( CS * RCSe ) ) - Min( Max( ( ( RMSe + MUR ) / Min( ( DS / RMSe ) ,( MUM * RRSe ) ) ),RCSe ) ,( MLU / MUC ) ) ) + DS ) * ( DS * ( MUC / MUC ) ) )", "obj1": 0.27291666666666664, "obj2": 0.5570745524671267}]}