{"1": [{"determining": "( ( Const * ( MRS + Max( FirstVNF_Mem_Server,BR ) ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe + MUC ),( ( MUM / Max( MLU,MLU ) ) * RCSe ) )", "obj1": 0.6773547094188377, "obj2": 0.25204802877355725}, {"determining": "( ( FirstVNF_CPU / MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - ( ( ( MUR + MLU ) + ( ( Max( MLU,RMSe ) / DS ) + MUC ) ) - MLU ) ) ,DS ) + ( RMSe - ( MUC * Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / CRS ) ,( ( ( Min( FirstVNF_CPU ,MDR ) * Min( Min( CRS ,FirstVNF_RAM ) ,( MDR * ARS ) ) ) / RRS ) + BR ) )", "choosing": "( ( RCSe * DS ) + Max( MUM,( MUR * RRSe ) ) )", "obj1": 0.685370741482966, "obj2": 0.22234114992475715}, {"determining": "( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( ( ( RRSe - DS ) * Max( MLU,MLU ) ) * DS ) ) / ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / FirstVNF_Mem ),( FirstVNF_CPU_Server - PN ) ) - ( ( PN * FirstVNF_Mem_Server ) / ( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( MUR ,RRSe ) * ( RCSe / DS ) ) - Min( Max( CS,DS ) ,( MLU * MUR ) ) )", "obj1": 0.6352705410821643, "obj2": 0.2973216430583313}, {"determining": "Max( ( ( Const - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + Const ) ),Min( ( MDR / MDR ) ,( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUR ) + ( MUM - DS ) ) - Max( ( CS * MLU ),( RCSe + DS ) ) )", "obj1": 0.6292585170340681, "obj2": 0.29959438223434925}, {"determining": "( ( Max( ( ( Const + RRS ) - ( ( FirstVNF_Mem_Server - BR ) + RRS ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + ( MUM + MLU ) ) / Max( ( RMSe + ( MUR - MLU ) ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "Max( ( BR / Min( MRS ,FirstVNF_RAM ) ),( Const - CRS ) )", "choosing": "( ( ( MUR + MUC ) * Min( RMSe ,DS ) ) / Min( Min( MUR ,MUM ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.7114228456913828, "obj2": 0.20920630284718206}, {"determining": "( ( DDR + MRS ) + ( Const / RRS ) )", "choosing": "Min( Max( CS,RCSe ) ,( DS + MUC ) )", "obj1": 0.6412825651302605, "obj2": 0.2782068521949652}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - ( ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) + AMS ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6513026052104208, "obj2": 0.25436283241520713}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,( RCSe / ( Min( ( ( Max( RCSe,MUR ) - Min( DS ,DS ) ) / Min( MLU ,Min( MUM ,DS ) ) ) ,MUR ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server * BR ) ,Max( BR,MDR ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - ( CRS * FirstVNF_Mem ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) )", "choosing": "( ( ( ( RCSe - MUC ) + ( CS + RRSe ) ) * Max( ( RRSe / MUR ),( RMSe - RRSe ) ) ) / Min( ( Max( RRSe,MUR ) / ( MUC / MUR ) ) ,( ( RCSe + RRSe ) * ( CS - MUC ) ) ) )", "obj1": 0.6492985971943888, "obj2": 0.2642801689166924}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,Max( Min( FirstVNF_Mem ,Min( MDR ,( PN * MRS ) ) ),( MRS * MRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( ( Max( RRSe,( MUM - CS ) ) * Min( ( DS - RCSe ) ,RMSe ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ( CRS - FirstVNF_Mem ) ) ,( ( CRS / RRS ) + Max( MDR,( FirstVNF_RAM / ( ARS - Min( Max( CRS,RRS ) ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + Min( ( ( RMSe - RCSe ) + Max( ( MUR * CS ),DS ) ) ,CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) * Max( ARS,RRS ) ) )", "choosing": "( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Min( ( CRS - ARS ) ,Max( ( ( ( Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,ARS ) ) * CRS ) + RRS ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( ( Min( MUM ,( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) ) / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( FirstVNF_CPU / MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - ( ( ( MUR + MLU ) + ( ( Max( MLU,RMSe ) / DS ) + MUC ) ) - MLU ) ) ,DS ) + ( RMSe - ( MUC * Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( ( ( RRSe - DS ) * Max( MLU,MLU ) ) * DS ) ) / ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Const - FirstVNF_Mem_Server ) + ( FirstVNF_CPU + Const ) ),Min( ( MDR / MDR ) ,( MRS - MRS ) ) )", "choosing": "( ( ( RCSe + MUR ) + ( MUM - DS ) ) - Max( ( CS * MLU ),( RCSe + DS ) ) )", "obj1": 0.6292585170340681, "obj2": 0.29959438223434925}, {"determining": "( ( Max( ( ( Const + RRS ) - ( ( FirstVNF_Mem_Server - BR ) + RRS ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + ( MUM + MLU ) ) / Max( ( RMSe + ( MUR - MLU ) ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,( RCSe / ( Min( ( ( Max( RCSe,MUR ) - Min( DS ,DS ) ) / Min( MLU ,Min( MUM ,DS ) ) ) ,MUR ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,Max( Min( FirstVNF_Mem ,Min( MDR ,( PN * MRS ) ) ),( MRS * MRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( ( Max( RRSe,( MUM - CS ) ) * Min( ( DS - RCSe ) ,RMSe ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ( CRS - FirstVNF_Mem ) ) ,( ( CRS / RRS ) + Max( MDR,( FirstVNF_RAM / ( ARS - Min( Max( CRS,RRS ) ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + Min( ( ( RMSe - RCSe ) + Max( ( MUR * CS ),DS ) ) ,CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) * Max( ARS,RRS ) ) )", "choosing": "( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Min( ( CRS - ARS ) ,Max( ( ( ( Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,ARS ) ) * CRS ) + RRS ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( ( Min( MUM ,( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) ) / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_Mem ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ( AMS / Min( AMS ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( ( RCSe + CS ) ,( ( Min( Max( RMSe,DS ) ,( MUM * CS ) ) * ( ( MLU / MUM ) * RMSe ) ) + MUM ) ) ),MUC ) * ( MUR / ( Max( Min( RMSe ,CS ),MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( ( ( RRSe * ( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * ( ( MUR + ( MUC + CS ) ) - ( RCSe / Max( MLU,CS ) ) ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( RRSe - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6533066132264529, "obj2": 0.2452050295394451}, {"determining": "( ( ( FirstVNF_Mem_Server * Max( Min( BR ,DDR ),( FirstVNF_Mem + ( FirstVNF_Mem / BR ) ) ) ) / FirstVNF_RAM_Server ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( ( DS / MUC ) ,( DS - MLU ) ),( ( ( ( MUM * ( Min( RRSe ,RRSe ) / ( DS / CS ) ) ) - Min( RCSe ,RMSe ) ) - MUM ) / MUM ) ) )", "obj1": 0.6332665330661322, "obj2": 0.27698096860034827}, {"determining": "( ( DDR + CRS ) - ( ( ( PN / ACS ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) + MUC ) / MUR ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,RRS ) ),FirstVNF_RAM ),Min( MRS ,CRS ) )", "choosing": "( ( DS * MUM ) + ( RCSe * CS ) )", "obj1": 0.6733466933867736, "obj2": 0.23652206486225807}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( DDR / PN ) ) )", "choosing": "( ( RMSe * ( CS / ( Min( MLU ,RRSe ) + Min( MUR ,MUR ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + ( CRS + PN ) ) ) ) ,CRS ) - ( ( PN + FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( MLU + RRSe ) * ( MLU / ( DS * ( DS * Min( RMSe ,CS ) ) ) ) ) * RRSe ) ,( MUR - MUM ) ) * ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( ( CRS - ARS ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * MUM ),( ( Max( DS,( ( ( ( RRSe * RRSe ) + MUC ) + DS ) - RCSe ) ) - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,Min( MRS ,AMS ) ) ,( DDR - FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Max( Max( ( ( ( MLU + MUR ) + RRSe ) - RMSe ),Min( RMSe ,( RRSe - ( ( ( DS + CS ) + ( CS - RRSe ) ) / DS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + AMS ) * ( ARS + FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_Mem + MDR ),( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( RRSe,RRSe ) ,( RMSe / MUM ) )", "obj1": 0.6352705410821643, "obj2": 0.2597061761337089}, {"determining": "( ( MDR - PN ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( DS / RRSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,Min( Const ,Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) ) ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM * MRS ) )", "choosing": "( ( Min( Max( ( RRSe * MUM ),MUC ) ,( Max( MUM,Max( MUC,( Max( MLU,DS ) * Min( RMSe ,RMSe ) ) ) ) + MUR ) ) - ( ( ( RMSe + DS ) - ( MUC * RRSe ) ) * ( MLU / RCSe ) ) ) - ( ( DS / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( FirstVNF_Mem / PN ) ,( ( DDR * FirstVNF_RAM_Server ) - RRS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( Min( MLU ,CS ) - MUC ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - FirstVNF_Mem ) + ( Min( FirstVNF_CPU ,MDR ) * Min( Min( CRS ,FirstVNF_RAM ) ,( MDR * ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),( ( RCSe * DS ) + Max( MUM,( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( DDR / PN ) ) )", "choosing": "( ( RMSe * ( CS / ( Min( MLU ,RRSe ) + Min( MUR ,MUR ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,( ( ( RRSe * RCSe ) - ( MUR * MLU ) ) * ( Max( ( ( RCSe * CS ) * ( CS / DS ) ),Max( ( RCSe / MUR ),DS ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( Min( Max( Min( ACS ,FirstVNF_CPU ),MDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RRSe + ( MUC * MUM ) ),MLU ) * MUR ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( ( FirstVNF_CPU_Server + ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( DDR * FirstVNF_RAM ) ) + ACS ) * ( ( AMS * FirstVNF_CPU ) / DDR ) ) - FirstVNF_CPU ) ) + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( RRSe / MUM ) - ( ( RMSe - RRSe ) - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,Const ) ) ,CRS ) - ( ACS + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( ( DS - RRSe ) + ( MUC / ( Max( MLU,RMSe ) / ( MUR - MLU ) ) ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 0.749498997995992, "obj2": 0.1827800080466102}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_CPU_Server ) ) ) ) / AMS ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( RMSe / RMSe ) * DS ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_CPU_Server * Min( DDR ,AMS ) ) + MRS ),MRS ) )", "choosing": "( ( MUR + ( ( RRSe + DS ) * RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 0.6452905811623246, "obj2": 0.25222419769015897}, {"determining": "Min( ( AMS / FirstVNF_RAM ) ,Max( Min( DDR ,( ( ( FirstVNF_RAM - ( DDR / RRS ) ) / PN ) + RRS ) ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( ( ( MUR - CS ) * Min( DS ,RCSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) / ( CRS / MRS ) )", "choosing": "( Min( ( RRSe * ( RMSe / ( CS + MUC ) ) ) ,Min( ( ( RCSe + ( MUM + MUM ) ) * MUC ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7074148296593187, "obj2": 0.20493209423460448}, {"determining": "( ( FirstVNF_RAM_Server / DDR ) / ( ( ( MDR + Max( ( ( FirstVNF_CPU_Server - AMS ) / MDR ),( FirstVNF_Mem * MDR ) ) ) * ( FirstVNF_Mem_Server / DDR ) ) * Max( ARS,MDR ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Max( ( RMSe / ( RRSe - MUC ) ),Max( Min( MUC ,MLU ),( ( ( DS - CS ) - CS ) - MUC ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),RRSe ) ) ) * ( ( MUM / CS ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.9939879759519038, "obj2": 0.006794936819028679}], "3": [{"determining": "( ( FirstVNF_CPU / MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - ( ( ( MUR + MLU ) + ( ( Max( MLU,RMSe ) / DS ) + MUC ) ) - MLU ) ) ,DS ) + ( RMSe - ( MUC * Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( ( ( RRSe - DS ) * Max( MLU,MLU ) ) * DS ) ) / ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Const + RRS ) - ( ( FirstVNF_Mem_Server - BR ) + RRS ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + ( MUM + MLU ) ) / Max( ( RMSe + ( MUR - MLU ) ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0033712361352305677}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,( RCSe / ( Min( ( ( Max( RCSe,MUR ) - Min( DS ,DS ) ) / Min( MLU ,Min( MUM ,DS ) ) ) ,MUR ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,Max( Min( FirstVNF_Mem ,Min( MDR ,( PN * MRS ) ) ),( MRS * MRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( ( Max( RRSe,( MUM - CS ) ) * Min( ( DS - RCSe ) ,RMSe ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + PN ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ( CRS - FirstVNF_Mem ) ) ,( ( CRS / RRS ) + Max( MDR,( FirstVNF_RAM / ( ARS - Min( Max( CRS,RRS ) ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + Min( ( ( RMSe - RCSe ) + Max( ( MUR * CS ),DS ) ) ,CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) * Max( ARS,RRS ) ) )", "choosing": "( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Min( ( CRS - ARS ) ,Max( ( ( ( Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,ARS ) ) * CRS ) + RRS ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( ( Min( MUM ,( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) ) / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_Mem ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ( AMS / Min( AMS ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( ( RCSe + CS ) ,( ( Min( Max( RMSe,DS ) ,( MUM * CS ) ) * ( ( MLU / MUM ) * RMSe ) ) + MUM ) ) ),MUC ) * ( MUR / ( Max( Min( RMSe ,CS ),MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( ( ( RRSe * ( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * ( ( MUR + ( MUC + CS ) ) - ( RCSe / Max( MLU,CS ) ) ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( RRSe - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6533066132264529, "obj2": 0.2452050295394451}, {"determining": "( ( DDR + CRS ) - ( ( ( PN / ACS ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) + MUC ) / MUR ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( DDR / PN ) ) )", "choosing": "( ( RMSe * ( CS / ( Min( MLU ,RRSe ) + Min( MUR ,MUR ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + ( CRS + PN ) ) ) ) ,CRS ) - ( ( PN + FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( MLU + RRSe ) * ( MLU / ( DS * ( DS * Min( RMSe ,CS ) ) ) ) ) * RRSe ) ,( MUR - MUM ) ) * ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( ( CRS - ARS ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * MUM ),( ( Max( DS,( ( ( ( RRSe * RRSe ) + MUC ) + DS ) - RCSe ) ) - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,Min( MRS ,AMS ) ) ,( DDR - FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Max( Max( ( ( ( MLU + MUR ) + RRSe ) - RMSe ),Min( RMSe ,( RRSe - ( ( ( DS + CS ) + ( CS - RRSe ) ) / DS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + AMS ) * ( ARS + FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_Mem + MDR ),( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( RRSe,RRSe ) ,( RMSe / MUM ) )", "obj1": 0.6352705410821643, "obj2": 0.2597061761337089}, {"determining": "( ( MDR - PN ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( DS / RRSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,Min( Const ,Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) ) ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM * MRS ) )", "choosing": "( ( Min( Max( ( RRSe * MUM ),MUC ) ,( Max( MUM,Max( MUC,( Max( MLU,DS ) * Min( RMSe ,RMSe ) ) ) ) + MUR ) ) - ( ( ( RMSe + DS ) - ( MUC * RRSe ) ) * ( MLU / RCSe ) ) ) - ( ( DS / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( FirstVNF_Mem / PN ) ,( ( DDR * FirstVNF_RAM_Server ) - RRS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( Min( MLU ,CS ) - MUC ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - FirstVNF_Mem ) + ( Min( FirstVNF_CPU ,MDR ) * Min( Min( CRS ,FirstVNF_RAM ) ,( MDR * ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),( ( RCSe * DS ) + Max( MUM,( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( DDR / PN ) ) )", "choosing": "( ( RMSe * ( CS / ( Min( MLU ,RRSe ) + Min( MUR ,MUR ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,( ( ( RRSe * RCSe ) - ( MUR * MLU ) ) * ( Max( ( ( RCSe * CS ) * ( CS / DS ) ),Max( ( RCSe / MUR ),DS ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( Min( Max( Min( ACS ,FirstVNF_CPU ),MDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RRSe + ( MUC * MUM ) ),MLU ) * MUR ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( ( FirstVNF_CPU_Server + ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( DDR * FirstVNF_RAM ) ) + ACS ) * ( ( AMS * FirstVNF_CPU ) / DDR ) ) - FirstVNF_CPU ) ) + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( RRSe / MUM ) - ( ( RMSe - RRSe ) - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,Const ) ) ,CRS ) - ( ACS + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( ( DS - RRSe ) + ( MUC / ( Max( MLU,RMSe ) / ( MUR - MLU ) ) ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 0.749498997995992, "obj2": 0.1827800080466102}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_CPU_Server ) ) ) ) / AMS ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( RMSe / RMSe ) * DS ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_CPU_Server * Min( DDR ,AMS ) ) + MRS ),MRS ) )", "choosing": "( ( MUR + ( ( RRSe + DS ) * RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 0.6452905811623246, "obj2": 0.25222419769015897}, {"determining": "Min( ( AMS / FirstVNF_RAM ) ,Max( Min( DDR ,( ( ( FirstVNF_RAM - ( DDR / RRS ) ) / PN ) + RRS ) ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( ( ( MUR - CS ) * Min( DS ,RCSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) / ( CRS / MRS ) )", "choosing": "( Min( ( RRSe * ( RMSe / ( CS + MUC ) ) ) ,Min( ( ( RCSe + ( MUM + MUM ) ) * MUC ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7074148296593187, "obj2": 0.20493209423460448}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( CS - MLU ) / ( ( RRSe * ( MLU + RMSe ) ) - ( ( DS - DS ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( RRS + DDR ) ) / Max( ( FirstVNF_Mem_Server + PN ),( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( Min( ( MUR - RCSe ) ,RCSe ) * MUC ),MUC ) + RMSe ) ) ) - Max( ( Max( MUC,( ( RMSe * ( ( RRSe - RMSe ) + DS ) ) - ( ( MUM + MUR ) + MUR ) ) ) / ( ( Max( RCSe,RCSe ) - MUR ) * RRSe ) ),( CS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * MRS ),( FirstVNF_RAM + ( ( ( AMS / Const ) + ( FirstVNF_RAM_Server / ( PN / FirstVNF_RAM_Server ) ) ) - Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( DS / ( MUM * RCSe ) ) / MUC ) * ( DS + Max( ( RCSe + ( MLU / ( RRSe + Max( RMSe,MUM ) ) ) ),( MUC / MUM ) ) ) ) / Min( RCSe ,RMSe ) )", "obj1": 0.6713426853707415, "obj2": 0.23542706402790253}, {"determining": "Min( Min( DDR ,Const ) ,Min( RRS ,PN ) )", "choosing": "Min( ( RMSe + Max( Max( RCSe,Min( DS ,MUC ) ),MLU ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server - ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * Max( MUM,( MUM * ( CS * ( RCSe + RRSe ) ) ) ) ) / ( CS * RCSe ) ),( ( RCSe * DS ) + Max( MUM,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * AMS ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( Max( RRSe,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Min( Max( ACS,PN ) ,( ( ( FirstVNF_Mem_Server + DDR ) - AMS ) - ( MDR / BR ) ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( Max( ACS,( PN * ( FirstVNF_Mem_Server - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) ) )", "choosing": "( ( Min( CS ,Min( RRSe ,RCSe ) ) * ( DS - Min( MLU ,( MLU + Min( CS ,RMSe ) ) ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ACS * Max( ARS,ACS ) ) ) )", "choosing": "( ( MUC / MUR ) * ( Min( ( Min( CS ,MUC ) - Max( Max( RCSe,( Max( RMSe,MLU ) - ( MUM - RRSe ) ) ),( MLU + ( MLU + ( CS / CS ) ) ) ) ) ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) / ( ( ARS - RRS ) / ( BR - MRS ) ) ) - ( ( ( ACS / BR ) * Const ) * FirstVNF_Mem ) )", "choosing": "Min( ( CS / ( RCSe - ( MUR / ( ( MUM / MUM ) + RMSe ) ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( ( ACS / FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR - MUM ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6392785571142284, "obj2": 0.2545197273868646}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) ) ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Max( ( CS * MUR ),MUC ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / BR )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( ( MUR - MUM ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS - CRS ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) * ( AMS + BR ) ) ) ,CRS ) - Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( CRS ,( ARS + FirstVNF_RAM_Server ) ) ) ) ,Max( ACS,DDR ) ) )", "choosing": "( Max( ( ( MUR / DS ) * RCSe ),CS ) * ( MUC / ( RRSe / ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( ACS - CRS ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( Max( RMSe,MUC ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - ( ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) + AMS ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,( ( FirstVNF_Mem_Server + DDR ) - AMS ) ) ) + Min( Max( ACS,PN ) ,Max( ARS,CRS ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( RMSe,( MLU + Min( CS ,RMSe ) ) ) + RMSe ) ) ) - ( CS - Max( ( RMSe * ( ( MUR + RCSe ) - ( Max( MUM,MUM ) * Min( CS ,( RMSe / MUC ) ) ) ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / DDR ) / ( ( ( MDR + Max( ( ( FirstVNF_CPU_Server - AMS ) / MDR ),( FirstVNF_Mem * MDR ) ) ) * ( FirstVNF_Mem_Server / DDR ) ) * Max( ARS,MDR ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Max( ( RMSe / ( RRSe - MUC ) ),Max( Min( MUC ,MLU ),( ( ( DS - CS ) - CS ) - MUC ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),RRSe ) ) ) * ( ( MUM / CS ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002244934190539509}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ( Max( Const,( ( RRS - ARS ) + FirstVNF_Mem_Server ) ) / MDR ) ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * ( ARS * FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + CS ) ),Max( RRSe,Max( MLU,( ( CS - MUC ) / MLU ) ) ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( ( ARS * FirstVNF_Mem ),FirstVNF_RAM ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( RMSe * MUC ) ) + ( ( Min( RRSe ,MUR ) + Min( ( Min( CS ,MUC ) / MLU ) ,MUR ) ) * RCSe ) )", "obj1": 0.627254509018036, "obj2": 0.26339773222116253}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,( ( PN * ACS ) + ARS ) ),( AMS - RRS ) ) ) )", "choosing": "( Max( Min( ( MUM + CS ) ,Min( ( RCSe + CS ) ,( ( Max( ( MUR + CS ),RCSe ) + ( ( DS / MUM ) / RMSe ) ) * RRSe ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( Const * MDR ) ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( MUC - Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Min( FirstVNF_CPU_Server ,( BR * Const ) ) + ( MDR * ( PN / FirstVNF_RAM_Server ) ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,MUM ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "( ( PN + FirstVNF_Mem ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ( AMS / Min( AMS ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( ( RCSe + CS ) ,( ( Min( Max( RMSe,DS ) ,( MUM * CS ) ) * ( ( MLU / MUM ) * RMSe ) ) + MUM ) ) ),MUC ) * ( MUR / ( Max( Min( RMSe ,CS ),MUC ) + RMSe ) ) )", "obj1": 0.8537074148296593, "obj2": 0.1293345793947298}, {"determining": "( ( ACS * ARS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe + ( RMSe * DS ) ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( FirstVNF_Mem_Server * Max( ( FirstVNF_CPU - ARS ),PN ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( MUC * ( CS + MLU ) ) - CS ) * ( ( MUM + MLU ) - RMSe ) ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6533066132264529, "obj2": 0.2452050295394451}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + Min( Max( ACS,PN ) ,Max( RRS,( ( ACS - FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( RCSe - MUR ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( ( MUR * RRSe ) ,( MUR - MUM ) ) * Max( Min( Min( Max( Max( MLU,MLU ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,( FirstVNF_CPU * ( ( RRS * AMS ) * ( ( MDR * DDR ) / Const ) ) ) )", "choosing": "Max( ( CS / Min( RMSe ,( MUM - ( Max( DS,CS ) * CS ) ) ) ),Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( MDR * DDR ) / ( BR - BR ) ),Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) ) * FirstVNF_RAM ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( DS + ( RCSe * MLU ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( PN * MDR ) * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - ( ( CRS / FirstVNF_CPU_Server ) + ( DDR + PN ) ) ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( DS * MUC ) ,( MUR * Max( CS,( RCSe * MLU ) ) ) ) ,CS ) )", "obj1": 0.8897795591182365, "obj2": 0.10077301408916484}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( Max( MLU,MLU ) ,Max( ( DS - ( Max( RMSe,MUC ) + RMSe ) ),RMSe ) ) + Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / Min( DDR ,Max( PN,FirstVNF_Mem ) ) ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( ( MUC + MUC ) + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 0.9779559118236473, "obj2": 0.008723209636202442}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( FirstVNF_RAM + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Min( RCSe ,MUC ) - ( MUR - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,( MDR * ( Min( FirstVNF_CPU ,( FirstVNF_Mem - AMS ) ) + CRS ) ) )", "choosing": "Max( ( ( RRSe * ( Max( CS,DS ) * ( Min( MUM ,RCSe ) * ( RCSe / RMSe ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ( FirstVNF_Mem_Server - MRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server / ARS ) - Min( BR ,PN ) ) ) - ( ( ( ARS - FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,RRS ) ) / ( ( DDR * MRS ) * Max( PN,ARS ) ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) )", "choosing": "( ( ( ( RCSe - MUC ) + ( CS + RRSe ) ) * Max( ( RRSe / MUR ),( RMSe - RRSe ) ) ) / Min( ( ( MUC - ( RRSe - MUR ) ) / ( MUC / MUR ) ) ,( ( RCSe + RRSe ) * ( CS - MUC ) ) ) )", "obj1": 0.8677354709418837, "obj2": 0.11496450940229477}, {"determining": "( ( Const * FirstVNF_CPU_Server ) / Min( Min( ( Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( DS + MUC ) ,CS ),( CS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_CPU ,MRS ) + ( ( BR - Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) + ARS ) ) ,( BR * RRS ) ) + ( MDR * ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( ( DS / MUC ) ,( DS - MLU ) ),( ( MUM - MUM ) / MUM ) ) + ( MUC - ( RRSe * CS ) ) )", "obj1": 0.8857715430861723, "obj2": 0.1027712743176705}, {"determining": "( ( PN / FirstVNF_RAM_Server ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( ( MUM * RRSe ) - ( CS / ( RCSe - RMSe ) ) )", "obj1": 0.6633266533066132, "obj2": 0.23954224769762933}, {"determining": "( FirstVNF_RAM_Server / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + ( Max( ( Min( FirstVNF_CPU ,PN ) - ( AMS + PN ) ),FirstVNF_CPU_Server ) + ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Min( ( ( ( DS * RMSe ) + ( MUM * MUR ) ) - ( Min( RRSe ,CS ) / Min( DS ,RCSe ) ) ) ,( Max( Max( DS,MLU ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Const + RRS ) - ( ( FirstVNF_Mem_Server - BR ) + RRS ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + ( MUM + MLU ) ) / Max( ( RMSe + ( MUR - MLU ) ),( CS * MUC ) ) )", "obj1": 0.9919839679358717, "obj2": 0.006694710017574059}, {"determining": "( ( ( ( CRS * ( MDR / ARS ) ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,( MUM + CS ) ) + MUC ) ) ) ,Min( Min( ( Min( Max( MUC,DS ) ,( RCSe - RCSe ) ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( ( PN / Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( ( RCSe + ( RCSe * DS ) ) ,( DS * DS ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,DDR ) ),Max( FirstVNF_RAM_Server,Min( ARS ,( FirstVNF_CPU_Server - Const ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Min( ( MUC / ( Min( DS ,RRSe ) * MUM ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + BR ) ) ) ,CRS ) - ( ARS * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * RRSe ) ,( MUR - MUM ) ) * DS )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( FirstVNF_CPU + Const ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( ( ( MUR - MUM ) * MLU ),MUC ) + RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - ( ( ( MUR + MLU ) + ( ( Max( MLU,RMSe ) / DS ) + MUC ) ) - MLU ) ) ,DS ) + ( RMSe - ( MUC * Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6172344689378757, "obj2": 0.2594060956258364}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( ARS * DDR ) / FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + Min( MLU ,RCSe ) ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.9719438877755511, "obj2": 0.024309700195589895}, {"determining": "( ( ( ( FirstVNF_RAM_Server - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + ( Min( DDR ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( AMS - RRS ) ) ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( RRSe,MUC ) * ( ( ( CS * MUM ) * MUC ) + ( ( DS + DS ) + MUM ) ) )", "obj1": 0.8897795591182365, "obj2": 0.09716384835589784}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) * Max( ARS,RRS ) ) )", "choosing": "( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 0.749498997995992, "obj2": 0.1827800080466102}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - ( ( CRS / FirstVNF_CPU_Server ) + ( DDR + PN ) ) ) / ( Const + ARS ) ) ) - ( ( ( ( MDR + Max( ( FirstVNF_Mem / MDR ),( FirstVNF_Mem * MDR ) ) ) * ( MDR - ARS ) ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Max( ( RMSe / MUR ),Max( Min( MUC ,MLU ),( ( Min( RRSe ,MUR ) - CS ) - MUC ) ) ) )", "obj1": 0.8276553106212425, "obj2": 0.12887384666545143}, {"determining": "( ( Min( Max( ( FirstVNF_Mem_Server - MRS ),Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server / ARS ) - Min( BR ,PN ) ) ) - ( ( ( ARS - FirstVNF_RAM ) / Max( FirstVNF_CPU_Server,RRS ) ) / ( ( DDR * MRS ) * Max( PN,ARS ) ) ) ) * Min( ( Min( FirstVNF_Mem_Server ,ARS ) / ( PN * AMS ) ) ,Max( ( RRS * FirstVNF_RAM ),( AMS + ARS ) ) ) )", "choosing": "( ( ( ( RCSe - MUC ) + ( CS + RRSe ) ) * Max( ( RRSe / MUR ),( RMSe - RRSe ) ) ) / Min( ( ( MUC - ( RRSe - MUR ) ) / ( MUC / MUR ) ) ,( ( RCSe + RRSe ) * ( CS - MUC ) ) ) )", "obj1": 0.8677354709418837, "obj2": 0.11496450940229477}, {"determining": "( ( PN - DDR ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + ( Max( ( Min( FirstVNF_CPU ,PN ) - ( AMS + PN ) ),FirstVNF_CPU_Server ) + ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Min( ( ( ( DS * RMSe ) + ( MUM * MUR ) ) - ( Min( RRSe ,CS ) / Max( MUR,MUR ) ) ) ,( Max( Max( DS,MLU ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),Min( MUR ,MUR ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7034068136272545, "obj2": 0.19667050327276372}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + ( MUC * DS ) ) ) ) ) )", "obj1": 0.6933867735470942, "obj2": 0.1992604916259272}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( MDR + ARS ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( ( Max( RMSe,MUC ) * RCSe ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6693386773547094, "obj2": 0.23175296320713676}, {"determining": "( Min( ( Min( FirstVNF_CPU ,MRS ) + ( ( BR - Max( ( ARS - FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) + ARS ) ) ,( BR * RRS ) ) + ( MDR * ( PN / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Min( ( DS / MUC ) ,( DS - MLU ) ),( ( MUM - MUM ) / MUM ) ) + ( MUC - ( RRSe * CS ) ) )", "obj1": 0.8857715430861723, "obj2": 0.1027712743176705}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 0.9779559118236473, "obj2": 0.008723209636202442}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( DDR / PN ) ) )", "choosing": "( ( RMSe * ( CS / ( Min( MLU ,RRSe ) + Min( MUR ,MUR ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( ( Max( RRS,BR ) + ( MDR + ARS ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( DDR - Min( FirstVNF_CPU ,( Max( BR,FirstVNF_Mem_Server ) - Min( MDR ,CRS ) ) ) ) / DDR ) ) ) )", "choosing": "( ( RMSe * ( CS / Min( RMSe ,( ( RCSe - CS ) / Max( MLU,RRSe ) ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.657314629258517, "obj2": 0.2377627511410636}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( DDR / PN ) ) )", "choosing": "( ( RMSe * ( CS / ( Min( MLU ,RRSe ) + Min( MUR ,MUR ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_CPU_Server * Min( DDR ,AMS ) ) + MRS ),MRS ) )", "choosing": "( ( MUR + ( ( RRSe + DS ) * RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 0.6452905811623246, "obj2": 0.25222419769015897}, {"determining": "( ( FirstVNF_RAM_Server / DDR ) / ( ( ( MDR + Max( ( FirstVNF_Mem / MDR ),( FirstVNF_Mem * MDR ) ) ) * ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Max( ( RMSe / MUR ),Max( Min( MUC ,MLU ),( ( Min( RRSe ,MUR ) - CS ) - MUC ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ),RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6332665330661322, "obj2": 0.25729978283259514}, {"determining": "Min( Min( DDR ,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( RRSe - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6533066132264529, "obj2": 0.2452050295394451}, {"determining": "( ( Max( ( ( Const + RRS ) - ( Min( BR ,( MDR * AMS ) ) + RRS ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUM / RRSe ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9899799599198397, "obj2": 0.008554347208865977}, {"determining": "Min( Min( ARS ,( FirstVNF_Mem_Server * Max( ( FirstVNF_CPU - ARS ),PN ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( MUC * ( CS + MLU ) ) - CS ) * ( ( MUM + MLU ) - RMSe ) ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6533066132264529, "obj2": 0.2452050295394451}, {"determining": "Min( Min( DDR ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( ( ACS / FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR - MUM ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6392785571142284, "obj2": 0.2545197273868646}, {"determining": "( ( Max( ( ( Const + RRS ) - ( ( FirstVNF_Mem_Server - BR ) + RRS ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + ( MUM + MLU ) ) / Max( ( RMSe + ( MUR - MLU ) ),( CS * MUC ) ) )", "obj1": 0.9919839679358717, "obj2": 0.006694710017574059}, {"determining": "Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6372745490981964, "obj2": 0.25584970944486496}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( ( RRS + AMS ) ,MRS ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe / MUM ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( RCSe - ( CS + MUC ) ),( CS - MUR ) ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.9939879759519038, "obj2": 0.003670600288112354}, {"determining": "( ( Max( ( ( Const + RRS ) - ( Min( BR ,( MDR * FirstVNF_Mem_Server ) ) + RRS ) ),( AMS / Const ) ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + ( DS + Max( ( RCSe + ( MLU / ( RRSe + Max( RMSe,MUM ) ) ) ),( MUC / MUM ) ) ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0031686922746292294}, {"determining": "( ( FirstVNF_RAM_Server / DDR ) / ( ( ( MDR + Max( ( ( FirstVNF_CPU_Server - AMS ) / MDR ),( FirstVNF_Mem * MDR ) ) ) * ( FirstVNF_Mem_Server / DDR ) ) * Max( ARS,MDR ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Max( ( RMSe / ( RRSe - MUC ) ),Max( Min( MUC ,MLU ),( ( ( DS - CS ) - CS ) - MUC ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),RRSe ) ) ) * ( ( MUM / CS ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002244934190539509}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Max( DDR,FirstVNF_RAM_Server ) ) / ( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( RCSe / MUM ) ) - Min( Min( RCSe ,( ( RRSe + ( RRSe * ( ( RRSe / RMSe ) + ( MUC - RMSe ) ) ) ) - ( MUR * MUM ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9979959919839679, "obj2": 0.002244934190539509}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( ( ( RRSe - DS ) * Max( MLU,MLU ) ) * DS ) ) / ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,( RCSe / ( Min( ( ( Max( RCSe,MUR ) - Min( DS ,DS ) ) / Min( MLU ,Min( MUM ,DS ) ) ) ,MUR ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,Max( Min( FirstVNF_Mem ,Min( MDR ,( PN * MRS ) ) ),( MRS * MRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( ( Max( RRSe,( MUM - CS ) ) * Min( ( DS - RCSe ) ,RMSe ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ( CRS - FirstVNF_Mem ) ) ,( ( CRS / RRS ) + Max( MDR,( FirstVNF_RAM / ( ARS - Min( Max( CRS,RRS ) ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + Min( ( ( RMSe - RCSe ) + Max( ( MUR * CS ),DS ) ) ,CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( ( ( ( Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,ARS ) ) * CRS ) + RRS ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( ( Min( MUM ,( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) ) / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( ( ( RRSe * ( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * ( ( MUR + ( MUC + CS ) ) - ( RCSe / Max( MLU,CS ) ) ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( ( ( PN / ACS ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) + MUC ) / MUR ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + ( CRS + PN ) ) ) ) ,CRS ) - ( ( PN + FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( MLU + RRSe ) * ( MLU / ( DS * ( DS * Min( RMSe ,CS ) ) ) ) ) * RRSe ) ,( MUR - MUM ) ) * ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( ( CRS - ARS ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * MUM ),( ( Max( DS,( ( ( ( RRSe * RRSe ) + MUC ) + DS ) - RCSe ) ) - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,Min( MRS ,AMS ) ) ,( DDR - FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Max( Max( ( ( ( MLU + MUR ) + RRSe ) - RMSe ),Min( RMSe ,( RRSe - ( ( ( DS + CS ) + ( CS - RRSe ) ) / DS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - PN ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( DS / RRSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,Min( Const ,Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) ) ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM * MRS ) )", "choosing": "( ( Min( Max( ( RRSe * MUM ),MUC ) ,( Max( MUM,Max( MUC,( Max( MLU,DS ) * Min( RMSe ,RMSe ) ) ) ) + MUR ) ) - ( ( ( RMSe + DS ) - ( MUC * RRSe ) ) * ( MLU / RCSe ) ) ) - ( ( DS / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( FirstVNF_Mem / PN ) ,( ( DDR * FirstVNF_RAM_Server ) - RRS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( Min( MLU ,CS ) - MUC ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - FirstVNF_Mem ) + ( Min( FirstVNF_CPU ,MDR ) * Min( Min( CRS ,FirstVNF_RAM ) ,( MDR * ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),( ( RCSe * DS ) + Max( MUM,( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,( ( ( RRSe * RCSe ) - ( MUR * MLU ) ) * ( Max( ( ( RCSe * CS ) * ( CS / DS ) ),Max( ( RCSe / MUR ),DS ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( Min( Max( Min( ACS ,FirstVNF_CPU ),MDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RRSe + ( MUC * MUM ) ),MLU ) * MUR ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( ( FirstVNF_CPU_Server + ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( DDR * FirstVNF_RAM ) ) + ACS ) * ( ( AMS * FirstVNF_CPU ) / DDR ) ) - FirstVNF_CPU ) ) + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( RRSe / MUM ) - ( ( RMSe - RRSe ) - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,Const ) ) ,CRS ) - ( ACS + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( ( DS - RRSe ) + ( MUC / ( Max( MLU,RMSe ) / ( MUR - MLU ) ) ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_CPU_Server ) ) ) ) / AMS ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( RMSe / RMSe ) * DS ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / FirstVNF_RAM ) ,Max( Min( DDR ,( ( ( FirstVNF_RAM - ( DDR / RRS ) ) / PN ) + RRS ) ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( ( ( MUR - CS ) * Min( DS ,RCSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) / ( CRS / MRS ) )", "choosing": "( Min( ( RRSe * ( RMSe / ( CS + MUC ) ) ) ,Min( ( ( RCSe + ( MUM + MUM ) ) * MUC ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( CS - MLU ) / ( ( RRSe * ( MLU + RMSe ) ) - ( ( DS - DS ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( RRS + DDR ) ) / Max( ( FirstVNF_Mem_Server + PN ),( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( Min( ( MUR - RCSe ) ,RCSe ) * MUC ),MUC ) + RMSe ) ) ) - Max( ( Max( MUC,( ( RMSe * ( ( RRSe - RMSe ) + DS ) ) - ( ( MUM + MUR ) + MUR ) ) ) / ( ( Max( RCSe,RCSe ) - MUR ) * RRSe ) ),( CS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,Min( RRS ,PN ) )", "choosing": "Min( ( RMSe + Max( Max( RCSe,Min( DS ,MUC ) ),MLU ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server - ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * Max( MUM,( MUM * ( CS * ( RCSe + RRSe ) ) ) ) ) / ( CS * RCSe ) ),( ( RCSe * DS ) + Max( MUM,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * AMS ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( Max( RRSe,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Min( Max( ACS,PN ) ,( ( ( FirstVNF_Mem_Server + DDR ) - AMS ) - ( MDR / BR ) ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( Max( ACS,( PN * ( FirstVNF_Mem_Server - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) ) )", "choosing": "( ( Min( CS ,Min( RRSe ,RCSe ) ) * ( DS - Min( MLU ,( MLU + Min( CS ,RMSe ) ) ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ACS * Max( ARS,ACS ) ) ) )", "choosing": "( ( MUC / MUR ) * ( Min( ( Min( CS ,MUC ) - Max( Max( RCSe,( Max( RMSe,MLU ) - ( MUM - RRSe ) ) ),( MLU + ( MLU + ( CS / CS ) ) ) ) ) ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) / ( ( ARS - RRS ) / ( BR - MRS ) ) ) - ( ( ( ACS / BR ) * Const ) * FirstVNF_Mem ) )", "choosing": "Min( ( CS / ( RCSe - ( MUR / ( ( MUM / MUM ) + RMSe ) ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) ) ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Max( ( CS * MUR ),MUC ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / BR )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( ( MUR - MUM ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS - CRS ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) * ( AMS + BR ) ) ) ,CRS ) - Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( CRS ,( ARS + FirstVNF_RAM_Server ) ) ) ) ,Max( ACS,DDR ) ) )", "choosing": "( Max( ( ( MUR / DS ) * RCSe ),CS ) * ( MUC / ( RRSe / ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( ACS - CRS ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( Max( RMSe,MUC ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - ( ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) + AMS ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,( ( FirstVNF_Mem_Server + DDR ) - AMS ) ) ) + Min( Max( ACS,PN ) ,Max( ARS,CRS ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( RMSe,( MLU + Min( CS ,RMSe ) ) ) + RMSe ) ) ) - ( CS - Max( ( RMSe * ( ( MUR + RCSe ) - ( Max( MUM,MUM ) * Min( CS ,( RMSe / MUC ) ) ) ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ( Max( Const,( ( RRS - ARS ) + FirstVNF_Mem_Server ) ) / MDR ) ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * ( ARS * FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + CS ) ),Max( RRSe,Max( MLU,( ( CS - MUC ) / MLU ) ) ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,( ( PN * ACS ) + ARS ) ),( AMS - RRS ) ) ) )", "choosing": "( Max( Min( ( MUM + CS ) ,Min( ( RCSe + CS ) ,( ( Max( ( MUR + CS ),RCSe ) + ( ( DS / MUM ) / RMSe ) ) * RRSe ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( Const * MDR ) ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( MUC - Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ARS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe + ( RMSe * DS ) ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + Min( Max( ACS,PN ) ,Max( RRS,( ( ACS - FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( RCSe - MUR ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( ( MUR * RRSe ) ,( MUR - MUM ) ) * Max( Min( Min( Max( Max( MLU,MLU ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,( FirstVNF_CPU * ( ( RRS * AMS ) * ( ( MDR * DDR ) / Const ) ) ) )", "choosing": "Max( ( CS / Min( RMSe ,( MUM - ( Max( DS,CS ) * CS ) ) ) ),Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( MDR * DDR ) / ( BR - BR ) ),Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) ) * FirstVNF_RAM ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( DS + ( RCSe * MLU ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( Max( MLU,MLU ) ,Max( ( DS - ( Max( RMSe,MUC ) + RMSe ) ),RMSe ) ) + Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / Min( DDR ,Max( PN,FirstVNF_Mem ) ) ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( ( MUC + MUC ) + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( FirstVNF_RAM + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Min( RCSe ,MUC ) - ( MUR - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,( MDR * ( Min( FirstVNF_CPU ,( FirstVNF_Mem - AMS ) ) + CRS ) ) )", "choosing": "Max( ( ( RRSe * ( Max( CS,DS ) * ( Min( MUM ,RCSe ) * ( RCSe / RMSe ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_CPU_Server ) / Min( Min( ( Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( DS + MUC ) ,CS ),( CS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + ( Max( ( Min( FirstVNF_CPU ,PN ) - ( AMS + PN ) ),FirstVNF_CPU_Server ) + ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Min( ( ( ( DS * RMSe ) + ( MUM * MUR ) ) - ( Min( RRSe ,CS ) / Min( DS ,RCSe ) ) ) ,( Max( Max( DS,MLU ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * ( MDR / ARS ) ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,( MUM + CS ) ) + MUC ) ) ) ,Min( Min( ( Min( Max( MUC,DS ) ,( RCSe - RCSe ) ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( ( PN / Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( ( RCSe + ( RCSe * DS ) ) ,( DS * DS ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,DDR ) ),Max( FirstVNF_RAM_Server,Min( ARS ,( FirstVNF_CPU_Server - Const ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Min( ( MUC / ( Min( DS ,RRSe ) * MUM ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + BR ) ) ) ,CRS ) - ( ARS * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * RRSe ) ,( MUR - MUM ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,Const ) / ( Max( FirstVNF_CPU_Server,BR ) - ( MDR / BR ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( Min( MUR ,MUR ) / ( ( MUR / ( MUM - ( RCSe + MUM ) ) ) / RMSe ) ) ) * ( MUR / ( Max( RMSe,CS ) + RMSe ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( ( ACS - CRS ) - Min( ACS ,AMS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * Max( ( MUR + CS ),RCSe ) ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS / RRS ) + Max( MDR,MRS ) ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( MUM / CS ) ) ,CS ) + MUC ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( MDR + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,CS ) + MUC ) ) ) ,Min( Min( ( Min( MUM ,RMSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( Const,FirstVNF_CPU ) + Min( FirstVNF_Mem_Server ,AMS ) ) ,( ( FirstVNF_RAM_Server / ARS ) - Min( BR ,PN ) ) ) - ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * Max( PN,ARS ) ) ) )", "choosing": "( ( CS - MLU ) / ( ( RRSe * CS ) - Max( ( MUC / CS ),( RRSe + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * FirstVNF_Mem_Server ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU_Server ,DDR ) ) )", "choosing": "( Max( Min( RCSe ,( MUR / CS ) ),MUC ) * ( MUR / ( Max( RMSe,( MUC + ( Max( RCSe,MUR ) - Min( DS ,DS ) ) ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,( ( FirstVNF_Mem_Server + DDR ) - AMS ) ) ) + Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ) / ( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( Max( RMSe,MUC ) + RMSe ),( MLU + Min( CS ,RMSe ) ) ) + RMSe ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,( ( RRS + AMS ) - ( FirstVNF_RAM_Server / MRS ) ) )", "choosing": "Min( MLU ,( ( MUM / RRSe ) * Max( CS,Max( ( MUM * MUM ),( ( ( MUM + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,CS ) + MUC ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Const ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( ( ( MUR - MUM ) * MLU ),MUC ) + RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * AMS ) - Min( BR ,Min( ( Min( ( FirstVNF_CPU_Server - PN ) ,( ARS * ( MDR - FirstVNF_Mem ) ) ) + AMS ) ,( BR / RRS ) ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),Min( Min( RCSe ,Min( Max( RMSe,Max( MUC,RCSe ) ) ,MUC ) ) ,RRSe ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6152304609218436, "obj2": 0.2656331275997212}, {"determining": "Min( ( ( MDR * DDR ) / Const ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,( MUM + Min( CS ,RMSe ) ) ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.9158316633266533, "obj2": 0.08389351293631762}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( ARS * DDR ) / FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + Min( MLU ,RCSe ) ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.9719438877755511, "obj2": 0.024309700195589895}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - ( ( CRS / FirstVNF_CPU_Server ) + ( DDR + PN ) ) ) / ( Const + ARS ) ) ) - ( ( ( ( MDR + Max( ( FirstVNF_Mem / MDR ),( FirstVNF_Mem * MDR ) ) ) * ( MDR - ARS ) ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Max( ( RMSe / MUR ),Max( Min( MUC ,MLU ),( ( Min( RRSe ,MUR ) - CS ) - MUC ) ) ) )", "obj1": 0.8276553106212425, "obj2": 0.12887384666545143}, {"determining": "( ( PN - DDR ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + ( Max( ( Min( FirstVNF_CPU ,PN ) - DDR ),FirstVNF_CPU_Server ) + ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Min( ( ( ( DS * RMSe ) + ( MUM * MUR ) ) - ( Min( RRSe ,CS ) / Max( MUR,MUR ) ) ) ,( Max( Max( DS,MLU ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),Min( MUR ,Min( MUM ,RCSe ) ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7194388777555111, "obj2": 0.18518073170862598}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + ( ( Min( ( ACS * DDR ) ,( PN * FirstVNF_RAM_Server ) ) - MDR ) + FirstVNF_RAM ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUR / CS ) + ( ( ( Max( ( MLU - ( MUR * RMSe ) ),( RMSe + Min( MLU ,MUM ) ) ) + CS ) * RMSe ) + MUR ) )", "obj1": 0.7434869739478958, "obj2": 0.13889278580389944}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,PN ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( ( CS / ( Min( MLU ,RRSe ) + Min( MUR ,MUR ) ) ) * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 0.8537074148296593, "obj2": 0.09780256310670608}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) * Max( ARS,RRS ) ) )", "choosing": "( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "( ( ( ( FirstVNF_RAM_Server - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + ( Min( DDR ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( AMS - RRS ) ) ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( RRSe,MUC ) * ( ( ( CS * MUM ) * MUC ) + ( ( DS + DS ) + MUM ) ) )", "obj1": 0.8897795591182365, "obj2": 0.09716384835589784}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + ( MUC * DS ) ) ) ) ) )", "obj1": 0.6933867735470942, "obj2": 0.1992604916259272}, {"determining": "Min( ( ARS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM + ( FirstVNF_CPU + ( FirstVNF_CPU_Server + Const ) ) ) ,DDR ) ) ) ,Min( Max( ( DDR - ARS ),Max( PN,FirstVNF_CPU ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( Max( DDR,MDR ) - ( MRS * ACS ) ) / DDR ) ) ) )", "choosing": "( ( RRSe * Max( ( ( RRSe - RCSe ) - DS ),( RCSe * Max( RRSe,CS ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6673346693386774, "obj2": 0.2293720761518246}, {"determining": "( ( PN - DDR ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + ( Max( ( Min( FirstVNF_CPU ,PN ) - ( AMS + PN ) ),FirstVNF_CPU_Server ) + ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Min( ( ( ( DS * RMSe ) + ( MUM * MUR ) ) - ( Min( RRSe ,CS ) / Max( MUR,MUR ) ) ) ,( Max( Max( DS,MLU ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),Min( MUR ,MUR ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7034068136272545, "obj2": 0.19667050327276372}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( DDR / PN ) ) )", "choosing": "( ( RMSe * ( CS / ( Min( MLU ,RRSe ) + Min( MUR ,MUR ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 0.9779559118236473, "obj2": 0.008723209636202442}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( ( Max( RRS,BR ) + ( MDR + ARS ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( DDR - Min( FirstVNF_CPU ,( Max( BR,FirstVNF_Mem_Server ) - Min( MDR ,CRS ) ) ) ) / DDR ) ) ) )", "choosing": "( ( RMSe * ( CS / Min( RMSe ,( ( RCSe - CS ) / Max( MLU,RRSe ) ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.657314629258517, "obj2": 0.2377627511410636}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6172344689378757, "obj2": 0.2594060956258364}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_CPU_Server * Min( DDR ,AMS ) ) + MRS ),MRS ) )", "choosing": "( ( MUR + ( ( RRSe + DS ) * RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 0.6452905811623246, "obj2": 0.25222419769015897}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( DDR / PN ) ) )", "choosing": "( ( RMSe * ( CS / ( Min( MLU ,RRSe ) + Min( MUR ,MUR ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "( ( FirstVNF_RAM_Server / DDR ) / ( ( ( MDR + Max( ( FirstVNF_Mem / MDR ),( FirstVNF_Mem * MDR ) ) ) * ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Max( ( RMSe / MUR ),Max( Min( MUC ,MLU ),( ( Min( RRSe ,MUR ) - CS ) - MUC ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ),RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6332665330661322, "obj2": 0.25729978283259514}, {"determining": "Min( Min( DDR ,Const ) ,( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( RRSe - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6533066132264529, "obj2": 0.2452050295394451}, {"determining": "( ( Max( ( ( Const + RRS ) - ( Min( BR ,( MDR * AMS ) ) + RRS ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUM / RRSe ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9899799599198397, "obj2": 0.008554347208865977}, {"determining": "Min( Min( ARS ,( FirstVNF_Mem_Server * Max( ( FirstVNF_CPU - ARS ),PN ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( MUC * ( CS + MLU ) ) - CS ) * ( ( MUM + MLU ) - RMSe ) ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6533066132264529, "obj2": 0.2452050295394451}, {"determining": "Min( Min( DDR ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( ( ACS / FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR - MUM ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6392785571142284, "obj2": 0.2545197273868646}, {"determining": "( ( Max( ( ( Const + RRS ) - ( ( FirstVNF_Mem_Server - BR ) + RRS ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + ( MUM + MLU ) ) / Max( ( RMSe + ( MUR - MLU ) ),( CS * MUC ) ) )", "obj1": 0.9919839679358717, "obj2": 0.006694710017574059}, {"determining": "Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6372745490981964, "obj2": 0.25584970944486496}, {"determining": "( ( Max( ( ( Const + RRS ) - ( Min( BR ,( ( ARS - AMS ) * FirstVNF_Mem_Server ) ) + RRS ) ),( AMS / Const ) ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + Max( ( RCSe + ( MLU / ( RRSe + Max( RMSe,MUM ) ) ) ),( MUC / MUM ) ) ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.0018755553724675996}, {"determining": "( ( Max( ( ( Const + RRS ) - ( Min( BR ,( MDR * FirstVNF_Mem_Server ) ) + RRS ) ),( AMS / Const ) ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + CS ) + ( DS + Max( ( RCSe + ( MLU / ( RRSe + Max( RMSe,MUM ) ) ) ),( MUC / MUM ) ) ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0031686922746292294}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( ( RRS + AMS ) ,MRS ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe / MUM ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( RCSe - ( CS + MUC ) ),( CS - MUR ) ) ) * ( CS / ( CS + MLU ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.9939879759519038, "obj2": 0.003670600288112354}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( ( RRS + AMS ) ,MRS ) ) ) ) ) )", "choosing": "( ( ( ( ( RMSe / MUM ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( RCSe - ( CS + MUC ) ),( CS - MUR ) ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.9939879759519038, "obj2": 0.003670600288112354}, {"determining": "( ( Max( ( AMS - ( Min( BR ,( MDR * AMS ) ) + RRS ) ),FirstVNF_Mem ) * FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( MUM / RRSe ) / Max( ( Max( ( Min( RCSe ,MUC ) - ( MUR - DS ) ),( RCSe / MUR ) ) + CS ),( CS * MUC ) ) )", "obj1": 0.9899799599198397, "obj2": 0.008554347208865977}, {"determining": "( ( FirstVNF_CPU / MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - ( ( ( MUR + MLU ) + ( ( Max( MLU,RMSe ) / DS ) + MUC ) ) - MLU ) ) ,DS ) + ( RMSe - ( MUC * Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( ( ( RRSe - DS ) * Max( MLU,MLU ) ) * DS ) ) / ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,( RCSe / ( Min( ( ( Max( RCSe,MUR ) - Min( DS ,DS ) ) / Min( MLU ,Min( MUM ,DS ) ) ) ,MUR ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,Max( Min( FirstVNF_Mem ,Min( MDR ,( PN * MRS ) ) ),( MRS * MRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( ( Max( RRSe,( MUM - CS ) ) * Min( ( DS - RCSe ) ,RMSe ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ( CRS - FirstVNF_Mem ) ) ,( ( CRS / RRS ) + Max( MDR,( FirstVNF_RAM / ( ARS - Min( Max( CRS,RRS ) ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + Min( ( ( RMSe - RCSe ) + Max( ( MUR * CS ),DS ) ) ,CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( ( ( ( Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,ARS ) ) * CRS ) + RRS ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( ( Min( MUM ,( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) ) / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( ( ( RRSe * ( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * ( ( MUR + ( MUC + CS ) ) - ( RCSe / Max( MLU,CS ) ) ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( ( ( PN / ACS ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) + MUC ) / MUR ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + ( CRS + PN ) ) ) ) ,CRS ) - ( ( PN + FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( MLU + RRSe ) * ( MLU / ( DS * ( DS * Min( RMSe ,CS ) ) ) ) ) * RRSe ) ,( MUR - MUM ) ) * ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( ( CRS - ARS ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * MUM ),( ( Max( DS,( ( ( ( RRSe * RRSe ) + MUC ) + DS ) - RCSe ) ) - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,Min( MRS ,AMS ) ) ,( DDR - FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Max( Max( ( ( ( MLU + MUR ) + RRSe ) - RMSe ),Min( RMSe ,( RRSe - ( ( ( DS + CS ) + ( CS - RRSe ) ) / DS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - PN ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( DS / RRSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,Min( Const ,Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) ) ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM * MRS ) )", "choosing": "( ( Min( Max( ( RRSe * MUM ),MUC ) ,( Max( MUM,Max( MUC,( Max( MLU,DS ) * Min( RMSe ,RMSe ) ) ) ) + MUR ) ) - ( ( ( RMSe + DS ) - ( MUC * RRSe ) ) * ( MLU / RCSe ) ) ) - ( ( DS / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( FirstVNF_Mem / PN ) ,( ( DDR * FirstVNF_RAM_Server ) - RRS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( Min( MLU ,CS ) - MUC ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - FirstVNF_Mem ) + ( Min( FirstVNF_CPU ,MDR ) * Min( Min( CRS ,FirstVNF_RAM ) ,( MDR * ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),( ( RCSe * DS ) + Max( MUM,( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,( ( ( RRSe * RCSe ) - ( MUR * MLU ) ) * ( Max( ( ( RCSe * CS ) * ( CS / DS ) ),Max( ( RCSe / MUR ),DS ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( Min( Max( Min( ACS ,FirstVNF_CPU ),MDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RRSe + ( MUC * MUM ) ),MLU ) * MUR ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( ( FirstVNF_CPU_Server + ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( DDR * FirstVNF_RAM ) ) + ACS ) * ( ( AMS * FirstVNF_CPU ) / DDR ) ) - FirstVNF_CPU ) ) + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( RRSe / MUM ) - ( ( RMSe - RRSe ) - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,Const ) ) ,CRS ) - ( ACS + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( ( DS - RRSe ) + ( MUC / ( Max( MLU,RMSe ) / ( MUR - MLU ) ) ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_CPU_Server ) ) ) ) / AMS ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( RMSe / RMSe ) * DS ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / FirstVNF_RAM ) ,Max( Min( DDR ,( ( ( FirstVNF_RAM - ( DDR / RRS ) ) / PN ) + RRS ) ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( ( ( MUR - CS ) * Min( DS ,RCSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) / ( CRS / MRS ) )", "choosing": "( Min( ( RRSe * ( RMSe / ( CS + MUC ) ) ) ,Min( ( ( RCSe + ( MUM + MUM ) ) * MUC ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( CS - MLU ) / ( ( RRSe * ( MLU + RMSe ) ) - ( ( DS - DS ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( RRS + DDR ) ) / Max( ( FirstVNF_Mem_Server + PN ),( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( Min( ( MUR - RCSe ) ,RCSe ) * MUC ),MUC ) + RMSe ) ) ) - Max( ( Max( MUC,( ( RMSe * ( ( RRSe - RMSe ) + DS ) ) - ( ( MUM + MUR ) + MUR ) ) ) / ( ( Max( RCSe,RCSe ) - MUR ) * RRSe ) ),( CS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,Min( RRS ,PN ) )", "choosing": "Min( ( RMSe + Max( Max( RCSe,Min( DS ,MUC ) ),MLU ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server - ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * Max( MUM,( MUM * ( CS * ( RCSe + RRSe ) ) ) ) ) / ( CS * RCSe ) ),( ( RCSe * DS ) + Max( MUM,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * AMS ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( Max( RRSe,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Min( Max( ACS,PN ) ,( ( ( FirstVNF_Mem_Server + DDR ) - AMS ) - ( MDR / BR ) ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( Max( ACS,( PN * ( FirstVNF_Mem_Server - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) ) )", "choosing": "( ( Min( CS ,Min( RRSe ,RCSe ) ) * ( DS - Min( MLU ,( MLU + Min( CS ,RMSe ) ) ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ACS * Max( ARS,ACS ) ) ) )", "choosing": "( ( MUC / MUR ) * ( Min( ( Min( CS ,MUC ) - Max( Max( RCSe,( Max( RMSe,MLU ) - ( MUM - RRSe ) ) ),( MLU + ( MLU + ( CS / CS ) ) ) ) ) ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) / ( ( ARS - RRS ) / ( BR - MRS ) ) ) - ( ( ( ACS / BR ) * Const ) * FirstVNF_Mem ) )", "choosing": "Min( ( CS / ( RCSe - ( MUR / ( ( MUM / MUM ) + RMSe ) ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) ) ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Max( ( CS * MUR ),MUC ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / BR )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( ( MUR - MUM ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS - CRS ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) * ( AMS + BR ) ) ) ,CRS ) - Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( CRS ,( ARS + FirstVNF_RAM_Server ) ) ) ) ,Max( ACS,DDR ) ) )", "choosing": "( Max( ( ( MUR / DS ) * RCSe ),CS ) * ( MUC / ( RRSe / ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( ACS - CRS ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( Max( RMSe,MUC ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - ( ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) + AMS ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,( ( FirstVNF_Mem_Server + DDR ) - AMS ) ) ) + Min( Max( ACS,PN ) ,Max( ARS,CRS ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( RMSe,( MLU + Min( CS ,RMSe ) ) ) + RMSe ) ) ) - ( CS - Max( ( RMSe * ( ( MUR + RCSe ) - ( Max( MUM,MUM ) * Min( CS ,( RMSe / MUC ) ) ) ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ( Max( Const,( ( RRS - ARS ) + FirstVNF_Mem_Server ) ) / MDR ) ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * ( ARS * FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + CS ) ),Max( RRSe,Max( MLU,( ( CS - MUC ) / MLU ) ) ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,( ( PN * ACS ) + ARS ) ),( AMS - RRS ) ) ) )", "choosing": "( Max( Min( ( MUM + CS ) ,Min( ( RCSe + CS ) ,( ( Max( ( MUR + CS ),RCSe ) + ( ( DS / MUM ) / RMSe ) ) * RRSe ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( Const * MDR ) ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( MUC - Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ARS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe + ( RMSe * DS ) ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + Min( Max( ACS,PN ) ,Max( RRS,( ( ACS - FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( RCSe - MUR ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( ( MUR * RRSe ) ,( MUR - MUM ) ) * Max( Min( Min( Max( Max( MLU,MLU ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,( FirstVNF_CPU * ( ( RRS * AMS ) * ( ( MDR * DDR ) / Const ) ) ) )", "choosing": "Max( ( CS / Min( RMSe ,( MUM - ( Max( DS,CS ) * CS ) ) ) ),Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( MDR * DDR ) / ( BR - BR ) ),Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) ) * FirstVNF_RAM ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( DS + ( RCSe * MLU ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( Max( MLU,MLU ) ,Max( ( DS - ( Max( RMSe,MUC ) + RMSe ) ),RMSe ) ) + Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / Min( DDR ,Max( PN,FirstVNF_Mem ) ) ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( ( MUC + MUC ) + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( FirstVNF_RAM + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Min( RCSe ,MUC ) - ( MUR - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,( MDR * ( Min( FirstVNF_CPU ,( FirstVNF_Mem - AMS ) ) + CRS ) ) )", "choosing": "Max( ( ( RRSe * ( Max( CS,DS ) * ( Min( MUM ,RCSe ) * ( RCSe / RMSe ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_CPU_Server ) / Min( Min( ( Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( DS + MUC ) ,CS ),( CS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + ( Max( ( Min( FirstVNF_CPU ,PN ) - ( AMS + PN ) ),FirstVNF_CPU_Server ) + ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Min( ( ( ( DS * RMSe ) + ( MUM * MUR ) ) - ( Min( RRSe ,CS ) / Min( DS ,RCSe ) ) ) ,( Max( Max( DS,MLU ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * ( MDR / ARS ) ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,( MUM + CS ) ) + MUC ) ) ) ,Min( Min( ( Min( Max( MUC,DS ) ,( RCSe - RCSe ) ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( ( PN / Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( ( RCSe + ( RCSe * DS ) ) ,( DS * DS ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,DDR ) ),Max( FirstVNF_RAM_Server,Min( ARS ,( FirstVNF_CPU_Server - Const ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Min( ( MUC / ( Min( DS ,RRSe ) * MUM ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + BR ) ) ) ,CRS ) - ( ARS * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * RRSe ) ,( MUR - MUM ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,Const ) / ( Max( FirstVNF_CPU_Server,BR ) - ( MDR / BR ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( Min( MUR ,MUR ) / ( ( MUR / ( MUM - ( RCSe + MUM ) ) ) / RMSe ) ) ) * ( MUR / ( Max( RMSe,CS ) + RMSe ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( ( ACS - CRS ) - Min( ACS ,AMS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * Max( ( MUR + CS ),RCSe ) ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS / RRS ) + Max( MDR,MRS ) ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( MUM / CS ) ) ,CS ) + MUC ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( MDR + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,CS ) + MUC ) ) ) ,Min( Min( ( Min( MUM ,RMSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( Max( ( ( Const + RRS ) - ( Min( BR ,( AMS - RRS ) ) + RRS ) ),( AMS / Const ) ) * FirstVNF_Mem_Server ) * ( Min( ( ( DDR + DDR ) / PN ) ,Min( CRS ,BR ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR - MLU ) * MUR ) + ( DS + MLU ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,CS ) + MUC ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + Max( DDR,FirstVNF_RAM_Server ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Min( ( BR * ( MDR - ARS ) ) ,( Min( ( BR + BR ) ,MDR ) * DDR ) ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - Max( CS,MLU ) )", "obj1": 0.5951903807615231, "obj2": 0.2937602401899241}, {"determining": "Min( ( ( MDR * DDR ) / Const ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,( MUM + Min( CS ,RMSe ) ) ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.9158316633266533, "obj2": 0.08389351293631762}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( ARS * DDR ) / FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + Min( MLU ,RCSe ) ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.9719438877755511, "obj2": 0.024309700195589895}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ) / ( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,PN ) ) - ( DDR * ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( MUC + ( Max( MUC,RCSe ) / MUC ) ),CS ) + RMSe ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.8476953907815631, "obj2": 0.08531855814202169}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) * Max( ARS,RRS ) ) )", "choosing": "( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - ( ( CRS / FirstVNF_CPU_Server ) + ( DDR + PN ) ) ) / ( Const + ARS ) ) ) - ( ( ( ( MDR + Max( ( FirstVNF_Mem / MDR ),( FirstVNF_Mem * MDR ) ) ) * ( MDR - ARS ) ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Max( ( RMSe / MUR ),Max( Min( MUC ,MLU ),( ( Min( RRSe ,MUR ) - CS ) - MUC ) ) ) )", "obj1": 0.8276553106212425, "obj2": 0.12887384666545143}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + RRS ),Min( MRS ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( ( ( MUR * MUC ) * ( MLU / RCSe ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + ( MUC * DS ) ) ) ) ) )", "obj1": 0.7314629258517034, "obj2": 0.15611635252077666}, {"determining": "Min( Min( DDR ,Const ) ,( ( CRS + AMS ) - ( FirstVNF_RAM_Server / ( ( Const + RRS ) - ( ( FirstVNF_Mem_Server - BR ) + RRS ) ) ) ) )", "choosing": "Min( ( RMSe + ( MUR - MLU ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.8416833667334669, "obj2": 0.12663164815564495}, {"determining": "Min( ( ( ARS * AMS ) - Min( Const ,Min( Max( Min( FirstVNF_RAM_Server ,ARS ),BR ) ,MRS ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUM - RMSe ) / MUM ) ) * ( MUR - MUR ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6112224448897795, "obj2": 0.27641667880079596}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + ( ( Min( ( ACS * DDR ) ,( PN * FirstVNF_RAM_Server ) ) - MDR ) + FirstVNF_RAM ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUR / CS ) + ( ( ( Max( ( MLU - ( MUR * RMSe ) ),( RMSe + Min( MLU ,MUM ) ) ) + CS ) * RMSe ) + MUR ) )", "obj1": 0.7434869739478958, "obj2": 0.13889278580389944}, {"determining": "( ( PN - DDR ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( MRS,Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Min( ( ( ( DS * RMSe ) + ( MUM * MUR ) ) - ( Min( RRSe ,CS ) / Max( MUR,MUR ) ) ) ,( Max( Max( DS,MUR ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),Min( MUR ,MUR ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7214428857715431, "obj2": 0.18270829715075382}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + ( MUC * DS ) ) ) ) ) )", "obj1": 0.6933867735470942, "obj2": 0.1992604916259272}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 0.9779559118236473, "obj2": 0.008723209636202442}, {"determining": "( ( PN - DDR ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + ( Max( ( Min( FirstVNF_CPU ,PN ) - ( AMS + PN ) ),FirstVNF_CPU_Server ) + FirstVNF_CPU ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( ( Min( RRSe ,CS ) / Min( DS ,RCSe ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),Min( MUR ,MUR ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6993987975951904, "obj2": 0.19433479114487598}, {"determining": "Min( ( ARS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM + ( FirstVNF_CPU + ( FirstVNF_CPU_Server + Const ) ) ) ,DDR ) ) ) ,Min( Max( ( DDR - ARS ),Max( PN,FirstVNF_CPU ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( Max( DDR,MDR ) - ( MRS * ACS ) ) / DDR ) ) ) )", "choosing": "( ( RRSe * Max( ( ( RRSe - RCSe ) - DS ),( RCSe * Max( RRSe,CS ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6673346693386774, "obj2": 0.2293720761518246}, {"determining": "( ( PN - DDR ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + ( Max( ( Min( FirstVNF_CPU ,PN ) - DDR ),FirstVNF_CPU_Server ) + ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Min( ( ( ( DS * RMSe ) + ( MUM * MUR ) ) - ( Min( RRSe ,CS ) / Max( MUR,MUR ) ) ) ,( Max( Max( DS,MLU ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),Min( MUR ,Min( MUM ,RCSe ) ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7194388777555111, "obj2": 0.18518073170862598}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( ( Max( RRS,BR ) + ( MDR + ARS ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( DDR - Min( FirstVNF_CPU ,( Max( BR,FirstVNF_Mem_Server ) - Min( MDR ,CRS ) ) ) ) / DDR ) ) ) )", "choosing": "( ( RMSe * ( CS / Min( RMSe ,( ( RCSe - CS ) / Max( MLU,RRSe ) ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.657314629258517, "obj2": 0.2377627511410636}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( DDR / PN ) ) )", "choosing": "( ( RMSe * ( CS / ( Min( MLU ,RRSe ) + Min( MUR ,MUR ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6172344689378757, "obj2": 0.2594060956258364}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( Max( DDR,FirstVNF_Mem_Server ) * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( Min( ( MUM * ( ( ( MUM / MLU ) * MUC ) / Max( RRSe,MUR ) ) ) ,( ( RRSe + ( RRSe * ( ( RRSe / RMSe ) + ( MUC - RMSe ) ) ) ) - ( MUR * MUM ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "Min( ( ( ARS * AMS ) - Min( BR ,Min( ( Min( ( FirstVNF_CPU_Server - PN ) ,( ARS * ( MDR - FirstVNF_Mem ) ) ) + AMS ) ,( BR / RRS ) ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),Min( Min( RCSe ,Min( Max( RMSe,Max( MUC,RCSe ) ) ,MUC ) ) ,RRSe ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6152304609218436, "obj2": 0.2656331275997212}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,Max( Min( Const ,FirstVNF_Mem ),Max( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RRSe + MUC ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) ) * Min( Max( ( Min( DS ,CS ) * ( RRSe * ( ( MUC + RCSe ) / MUM ) ) ),( RMSe - MUM ) ) ,RCSe ) )", "obj1": 0.6733466933867736, "obj2": 0.22164536289749442}, {"determining": "( ( FirstVNF_RAM_Server / DDR ) / ( ( ( MDR + Max( ( FirstVNF_Mem / MDR ),( FirstVNF_Mem * MDR ) ) ) * ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Max( ( RMSe / MUR ),Max( Min( MUC ,MLU ),( ( Min( RRSe ,MUR ) - CS ) - MUC ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ),RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6332665330661322, "obj2": 0.25729978283259514}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_CPU_Server * Min( DDR ,AMS ) ) + MRS ),MRS ) )", "choosing": "( ( MUR + ( ( RRSe + DS ) * RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 0.6452905811623246, "obj2": 0.25222419769015897}, {"determining": "Min( Min( DDR ,Const ) ,( ( CRS + ( ( ACS * FirstVNF_Mem_Server ) - ( ACS * FirstVNF_CPU_Server ) ) ) - BR ) )", "choosing": "Min( MLU ,( ( MUM / RRSe ) * ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( ( Max( DS,MLU ) + DS ) / ( Min( CS ,CS ) - Min( RCSe ,MLU ) ) ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) ) )", "obj1": 0.6492985971943888, "obj2": 0.24254256876963007}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_CPU_Server - PN ) + MRS ),MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( RMSe * MUC ) ) + ( ( ( ( MUC / DS ) * MUR ) + ( MUM + MLU ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) ) )", "obj1": 0.6472945891783567, "obj2": 0.2445321947732065}, {"determining": "( Min( FirstVNF_RAM_Server ,ACS ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + Max( ( RCSe + ( MLU / Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) ) ),Min( ( RMSe * MUR ) ,Max( Max( ( RCSe + MUC ),DS ),CS ) ) ) ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.0018596371912919195}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( DDR / PN ) ) )", "choosing": "( ( RMSe * ( CS / ( Min( MLU ,RRSe ) + Min( MUR ,MUR ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "Min( Min( DDR ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( ( ACS / FirstVNF_CPU ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR - MUM ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6392785571142284, "obj2": 0.2545197273868646}, {"determining": "Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6372745490981964, "obj2": 0.25584970944486496}, {"determining": "( ( ( FirstVNF_CPU + Const ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( ( ( MUR - MUM ) * MLU ),MUC ) + RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - ( ( ( MUR + MLU ) + ( ( Max( MLU,RMSe ) / DS ) + MUC ) ) - MLU ) ) ,DS ) + ( RMSe - ( MUC * Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( ( ( RRSe - DS ) * Max( MLU,MLU ) ) * DS ) ) / ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,( RCSe / ( Min( ( ( Max( RCSe,MUR ) - Min( DS ,DS ) ) / Min( MLU ,Min( MUM ,DS ) ) ) ,MUR ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,Max( Min( FirstVNF_Mem ,Min( MDR ,( PN * MRS ) ) ),( MRS * MRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( ( Max( RRSe,( MUM - CS ) ) * Min( ( DS - RCSe ) ,RMSe ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ( CRS - FirstVNF_Mem ) ) ,( ( CRS / RRS ) + Max( MDR,( FirstVNF_RAM / ( ARS - Min( Max( CRS,RRS ) ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + Min( ( ( RMSe - RCSe ) + Max( ( MUR * CS ),DS ) ) ,CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( ( ( ( Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,ARS ) ) * CRS ) + RRS ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( ( Min( MUM ,( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) ) / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( ( ( RRSe * ( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * ( ( MUR + ( MUC + CS ) ) - ( RCSe / Max( MLU,CS ) ) ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( ( ( PN / ACS ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) + MUC ) / MUR ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + ( CRS + PN ) ) ) ) ,CRS ) - ( ( PN + FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( MLU + RRSe ) * ( MLU / ( DS * ( DS * Min( RMSe ,CS ) ) ) ) ) * RRSe ) ,( MUR - MUM ) ) * ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( ( CRS - ARS ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * MUM ),( ( Max( DS,( ( ( ( RRSe * RRSe ) + MUC ) + DS ) - RCSe ) ) - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,Min( MRS ,AMS ) ) ,( DDR - FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Max( Max( ( ( ( MLU + MUR ) + RRSe ) - RMSe ),Min( RMSe ,( RRSe - ( ( ( DS + CS ) + ( CS - RRSe ) ) / DS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - PN ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( DS / RRSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,Min( Const ,Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) ) ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM * MRS ) )", "choosing": "( ( Min( Max( ( RRSe * MUM ),MUC ) ,( Max( MUM,Max( MUC,( Max( MLU,DS ) * Min( RMSe ,RMSe ) ) ) ) + MUR ) ) - ( ( ( RMSe + DS ) - ( MUC * RRSe ) ) * ( MLU / RCSe ) ) ) - ( ( DS / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( FirstVNF_Mem / PN ) ,( ( DDR * FirstVNF_RAM_Server ) - RRS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( Min( MLU ,CS ) - MUC ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - FirstVNF_Mem ) + ( Min( FirstVNF_CPU ,MDR ) * Min( Min( CRS ,FirstVNF_RAM ) ,( MDR * ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),( ( RCSe * DS ) + Max( MUM,( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,( ( ( RRSe * RCSe ) - ( MUR * MLU ) ) * ( Max( ( ( RCSe * CS ) * ( CS / DS ) ),Max( ( RCSe / MUR ),DS ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( Min( Max( Min( ACS ,FirstVNF_CPU ),MDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RRSe + ( MUC * MUM ) ),MLU ) * MUR ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( ( FirstVNF_CPU_Server + ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( DDR * FirstVNF_RAM ) ) + ACS ) * ( ( AMS * FirstVNF_CPU ) / DDR ) ) - FirstVNF_CPU ) ) + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( RRSe / MUM ) - ( ( RMSe - RRSe ) - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,Const ) ) ,CRS ) - ( ACS + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( ( DS - RRSe ) + ( MUC / ( Max( MLU,RMSe ) / ( MUR - MLU ) ) ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_CPU_Server ) ) ) ) / AMS ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( RMSe / RMSe ) * DS ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / FirstVNF_RAM ) ,Max( Min( DDR ,( ( ( FirstVNF_RAM - ( DDR / RRS ) ) / PN ) + RRS ) ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( ( ( MUR - CS ) * Min( DS ,RCSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) / ( CRS / MRS ) )", "choosing": "( Min( ( RRSe * ( RMSe / ( CS + MUC ) ) ) ,Min( ( ( RCSe + ( MUM + MUM ) ) * MUC ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( CS - MLU ) / ( ( RRSe * ( MLU + RMSe ) ) - ( ( DS - DS ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( RRS + DDR ) ) / Max( ( FirstVNF_Mem_Server + PN ),( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( Min( ( MUR - RCSe ) ,RCSe ) * MUC ),MUC ) + RMSe ) ) ) - Max( ( Max( MUC,( ( RMSe * ( ( RRSe - RMSe ) + DS ) ) - ( ( MUM + MUR ) + MUR ) ) ) / ( ( Max( RCSe,RCSe ) - MUR ) * RRSe ) ),( CS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,Min( RRS ,PN ) )", "choosing": "Min( ( RMSe + Max( Max( RCSe,Min( DS ,MUC ) ),MLU ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server - ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * Max( MUM,( MUM * ( CS * ( RCSe + RRSe ) ) ) ) ) / ( CS * RCSe ) ),( ( RCSe * DS ) + Max( MUM,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * AMS ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( Max( RRSe,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Min( Max( ACS,PN ) ,( ( ( FirstVNF_Mem_Server + DDR ) - AMS ) - ( MDR / BR ) ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( Max( ACS,( PN * ( FirstVNF_Mem_Server - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) ) )", "choosing": "( ( Min( CS ,Min( RRSe ,RCSe ) ) * ( DS - Min( MLU ,( MLU + Min( CS ,RMSe ) ) ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ACS * Max( ARS,ACS ) ) ) )", "choosing": "( ( MUC / MUR ) * ( Min( ( Min( CS ,MUC ) - Max( Max( RCSe,( Max( RMSe,MLU ) - ( MUM - RRSe ) ) ),( MLU + ( MLU + ( CS / CS ) ) ) ) ) ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) / ( ( ARS - RRS ) / ( BR - MRS ) ) ) - ( ( ( ACS / BR ) * Const ) * FirstVNF_Mem ) )", "choosing": "Min( ( CS / ( RCSe - ( MUR / ( ( MUM / MUM ) + RMSe ) ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) ) ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Max( ( CS * MUR ),MUC ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / BR )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( ( MUR - MUM ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS - CRS ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) * ( AMS + BR ) ) ) ,CRS ) - Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( CRS ,( ARS + FirstVNF_RAM_Server ) ) ) ) ,Max( ACS,DDR ) ) )", "choosing": "( Max( ( ( MUR / DS ) * RCSe ),CS ) * ( MUC / ( RRSe / ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( ACS - CRS ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( Max( RMSe,MUC ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - ( ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) + AMS ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,( ( FirstVNF_Mem_Server + DDR ) - AMS ) ) ) + Min( Max( ACS,PN ) ,Max( ARS,CRS ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( RMSe,( MLU + Min( CS ,RMSe ) ) ) + RMSe ) ) ) - ( CS - Max( ( RMSe * ( ( MUR + RCSe ) - ( Max( MUM,MUM ) * Min( CS ,( RMSe / MUC ) ) ) ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ( Max( Const,( ( RRS - ARS ) + FirstVNF_Mem_Server ) ) / MDR ) ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * ( ARS * FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + CS ) ),Max( RRSe,Max( MLU,( ( CS - MUC ) / MLU ) ) ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,( ( PN * ACS ) + ARS ) ),( AMS - RRS ) ) ) )", "choosing": "( Max( Min( ( MUM + CS ) ,Min( ( RCSe + CS ) ,( ( Max( ( MUR + CS ),RCSe ) + ( ( DS / MUM ) / RMSe ) ) * RRSe ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( Const * MDR ) ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( MUC - Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ARS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe + ( RMSe * DS ) ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + Min( Max( ACS,PN ) ,Max( RRS,( ( ACS - FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( RCSe - MUR ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( ( MUR * RRSe ) ,( MUR - MUM ) ) * Max( Min( Min( Max( Max( MLU,MLU ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,( FirstVNF_CPU * ( ( RRS * AMS ) * ( ( MDR * DDR ) / Const ) ) ) )", "choosing": "Max( ( CS / Min( RMSe ,( MUM - ( Max( DS,CS ) * CS ) ) ) ),Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( MDR * DDR ) / ( BR - BR ) ),Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) ) * FirstVNF_RAM ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( DS + ( RCSe * MLU ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( Max( MLU,MLU ) ,Max( ( DS - ( Max( RMSe,MUC ) + RMSe ) ),RMSe ) ) + Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / Min( DDR ,Max( PN,FirstVNF_Mem ) ) ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( ( MUC + MUC ) + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( FirstVNF_RAM + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Min( RCSe ,MUC ) - ( MUR - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,( MDR * ( Min( FirstVNF_CPU ,( FirstVNF_Mem - AMS ) ) + CRS ) ) )", "choosing": "Max( ( ( RRSe * ( Max( CS,DS ) * ( Min( MUM ,RCSe ) * ( RCSe / RMSe ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_CPU_Server ) / Min( Min( ( Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( DS + MUC ) ,CS ),( CS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + ( Max( ( Min( FirstVNF_CPU ,PN ) - ( AMS + PN ) ),FirstVNF_CPU_Server ) + ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Min( ( ( ( DS * RMSe ) + ( MUM * MUR ) ) - ( Min( RRSe ,CS ) / Min( DS ,RCSe ) ) ) ,( Max( Max( DS,MLU ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * ( MDR / ARS ) ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,( MUM + CS ) ) + MUC ) ) ) ,Min( Min( ( Min( Max( MUC,DS ) ,( RCSe - RCSe ) ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( ( PN / Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( ( RCSe + ( RCSe * DS ) ) ,( DS * DS ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,DDR ) ),Max( FirstVNF_RAM_Server,Min( ARS ,( FirstVNF_CPU_Server - Const ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Min( ( MUC / ( Min( DS ,RRSe ) * MUM ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + BR ) ) ) ,CRS ) - ( ARS * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * RRSe ) ,( MUR - MUM ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,Const ) / ( Max( FirstVNF_CPU_Server,BR ) - ( MDR / BR ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( Min( MUR ,MUR ) / ( ( MUR / ( MUM - ( RCSe + MUM ) ) ) / RMSe ) ) ) * ( MUR / ( Max( RMSe,CS ) + RMSe ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( ( ACS - CRS ) - Min( ACS ,AMS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( ( MUC * Max( ( MUR + CS ),RCSe ) ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( CRS / RRS ) + Max( MDR,MRS ) ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( MUM / CS ) ) ,CS ) + MUC ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( FirstVNF_Mem_Server + ( AMS - RRS ) ) * ( Min( MDR ,ARS ) - Max( FirstVNF_Mem,ACS ) ) )", "choosing": "( Min( ( Max( ( MUR + RRSe ),MLU ) * Min( ( CS * DS ) ,( MUM + RMSe ) ) ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Const + RRS ) - ( Min( BR ,( AMS - RRS ) ) + RRS ) ),( AMS / Const ) ) * FirstVNF_Mem_Server ) * ( Min( ( ( DDR + DDR ) / PN ) ,Min( CRS ,BR ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR - MLU ) * MUR ) + ( DS + MLU ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + Max( DDR,FirstVNF_RAM_Server ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Min( ( BR * ( MDR - ARS ) ) ,( Min( ( BR + BR ) ,MDR ) * DDR ) ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - Max( CS,MLU ) )", "obj1": 0.5951903807615231, "obj2": 0.2937602401899241}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + Max( FirstVNF_Mem,Max( MRS,AMS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUC - RCSe ) / RRSe ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.8336673346693386, "obj2": 0.06170578741760337}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( ( RRS - ARS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * Max( RRSe,Max( MLU,( ( CS - MUC ) / MLU ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.9519038076152304, "obj2": 0.032513049581614745}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + Min( ( ( MDR + ACS ) * ( MDR - ARS ) ) ,Max( RRS,RRS ) ) ) / ( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,PN ) ) - ( DDR * ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( MUC + ( Max( MUC,RCSe ) / MUC ) ),CS ) + RMSe ) ) ) - Min( ( Min( RRSe ,CS ) + Min( Min( ( ( ( DS * RMSe ) + ( MUM * MUR ) ) - ( Min( RRSe ,CS ) / Max( MUR,MUR ) ) ) ,( Max( Max( DS,MUR ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) ) ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.8176352705410822, "obj2": 0.11720235525538719}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) * Max( ARS,RRS ) ) )", "choosing": "( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "( Max( AMS,( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( ARS - MRS ),MRS ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RRSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7274549098196392, "obj2": 0.1451926435517585}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( ARS * DDR ) / FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + Min( MLU ,RCSe ) ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.9719438877755511, "obj2": 0.024309700195589895}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + FirstVNF_Mem ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( ( MUR + ( ( RRSe + DS ) * RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + ( MUC * DS ) ) ) ) ) )", "obj1": 0.7234468937875751, "obj2": 0.17022163033555668}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( BR ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6913827655310621, "obj2": 0.19473556739587514}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 0.9779559118236473, "obj2": 0.008723209636202442}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + ( ( Min( ( ACS * DDR ) ,( PN * FirstVNF_RAM_Server ) ) - MDR ) + FirstVNF_RAM ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUR / CS ) + ( ( ( Max( ( MLU - ( MUR * RMSe ) ),( RMSe + Min( MLU ,MUM ) ) ) + CS ) * RMSe ) + MUR ) )", "obj1": 0.7434869739478958, "obj2": 0.13889278580389944}, {"determining": "( ( PN - DDR ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + ( Max( ( Min( FirstVNF_CPU ,PN ) - ( AMS + PN ) ),FirstVNF_CPU_Server ) + FirstVNF_CPU ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( ( Min( RRSe ,CS ) / Min( DS ,RCSe ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),Min( MUR ,MUR ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.6993987975951904, "obj2": 0.19433479114487598}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * Max( ( Const / FirstVNF_CPU ),ARS ) ) ) ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + ( MLU + MUR ) ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Min( Max( ( MLU / RRSe ),DS ) ,( ( RMSe / RRSe ) / CS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.2781164669631867}, {"determining": "Min( ( ARS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM + ( FirstVNF_CPU + ( FirstVNF_CPU_Server + Const ) ) ) ,DDR ) ) ) ,Min( Max( ( DDR - ARS ),Max( PN,FirstVNF_CPU ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( Max( DDR,MDR ) - ( MRS * ACS ) ) / DDR ) ) ) )", "choosing": "( ( RRSe * Max( ( ( RRSe - RCSe ) - DS ),( RCSe * Max( RRSe,CS ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6673346693386774, "obj2": 0.2293720761518246}, {"determining": "( ( PN - DDR ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + ( Max( ( Min( FirstVNF_CPU ,PN ) - DDR ),FirstVNF_CPU_Server ) + ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Min( ( ( ( DS * RMSe ) + ( MUM * MUR ) ) - ( Min( RRSe ,CS ) / Max( MUR,MUR ) ) ) ,( Max( Max( DS,MLU ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),Min( MUR ,Min( MUM ,RCSe ) ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7194388777555111, "obj2": 0.18518073170862598}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( DDR / PN ) ) )", "choosing": "( ( RMSe * ( CS / ( Min( MLU ,RRSe ) + Min( MUR ,MUR ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( ( Max( RRS,BR ) + ( MDR + ARS ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( DDR - Min( FirstVNF_CPU ,( Max( BR,FirstVNF_Mem_Server ) - Min( MDR ,CRS ) ) ) ) / DDR ) ) ) )", "choosing": "( ( RMSe * ( CS / Min( RMSe ,( ( RCSe - CS ) / Max( MLU,RRSe ) ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.657314629258517, "obj2": 0.2377627511410636}, {"determining": "Min( ( ( ARS * AMS ) - Min( Const ,Min( Max( Min( FirstVNF_RAM_Server ,ARS ),BR ) ,MRS ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUM - RMSe ) / MUM ) ) * ( MUR - MUR ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6112224448897795, "obj2": 0.27641667880079596}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( Max( DDR,FirstVNF_Mem_Server ) * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( Min( ( MUM * ( ( ( MUM / MLU ) * MUC ) / Max( RRSe,MUR ) ) ) ,( ( RRSe + ( RRSe * ( ( RRSe / RMSe ) + ( MUC - RMSe ) ) ) ) - ( MUR * MUM ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "Min( ( ( ARS * AMS ) - Min( BR ,Min( ( Min( ( FirstVNF_CPU_Server - PN ) ,( ARS * ( MDR - FirstVNF_Mem ) ) ) + AMS ) ,( BR / RRS ) ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),Min( Min( RCSe ,Min( Max( RMSe,Max( MUC,RCSe ) ) ,MUC ) ) ,RRSe ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6152304609218436, "obj2": 0.2656331275997212}, {"determining": "( ( PN - DDR ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( MRS,Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Min( ( ( ( DS * RMSe ) + ( MUM * MUR ) ) - ( Min( RRSe ,CS ) / Max( MUR,MUR ) ) ) ,( Max( Max( DS,MUR ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),Min( MUR ,MUR ) ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 0.7214428857715431, "obj2": 0.18270829715075382}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,Max( Min( Const ,FirstVNF_Mem ),Max( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RRSe + MUC ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) ) * Min( Max( ( Min( DS ,CS ) * ( RRSe * ( ( MUC + RCSe ) / MUM ) ) ),( RMSe - MUM ) ) ,RCSe ) )", "obj1": 0.6733466933867736, "obj2": 0.22164536289749442}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( ( Max( RRS,BR ) + ( MDR + ARS ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( DDR - Min( FirstVNF_CPU ,( Max( BR,FirstVNF_Mem_Server ) - Min( MDR ,CRS ) ) ) ) / DDR ) ) ) )", "choosing": "( ( RMSe * ( CS / Min( RMSe ,( ( RCSe - CS ) / Max( MLU,RRSe ) ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6312625250501002, "obj2": 0.2560668770995249}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6172344689378757, "obj2": 0.2594060956258364}, {"determining": "Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) )", "choosing": "Min( Max( ( DS + MUC ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6372745490981964, "obj2": 0.24900201044874964}, {"determining": "Min( Min( DDR ,Const ) ,( ( CRS + ( ( ACS * FirstVNF_Mem_Server ) - ( ACS * FirstVNF_CPU_Server ) ) ) - BR ) )", "choosing": "Min( MLU ,( ( MUM / RRSe ) * ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( ( Max( DS,MLU ) + DS ) / ( Min( CS ,CS ) - Min( RCSe ,MLU ) ) ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) ) )", "obj1": 0.6492985971943888, "obj2": 0.24254256876963007}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * ( FirstVNF_Mem + ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) ) / AMS ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / ( ( MLU + MUR ) + Min( ( DS / RRSe ) ,RMSe ) ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( RCSe - ( CS + MUC ) ),( CS - MUR ) ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.625250501002004, "obj2": 0.2570613086224285}, {"determining": "( Min( FirstVNF_RAM_Server ,ACS ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + Max( ( RCSe + ( MLU / Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) ) ),Min( ( RMSe * MUR ) ,Max( Max( ( RCSe + MUC ),DS ),CS ) ) ) ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.0018596371912919195}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( ( Max( MRS,DDR ) / ( MDR + MRS ) ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( Min( MUM ,RCSe ) * MUC ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.6412825651302605, "obj2": 0.24888724025014516}, {"determining": "Min( Min( Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,( RRS - Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,DDR ) ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( MUM + ( MUC * RMSe ) ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6452905811623246, "obj2": 0.24477053866497514}, {"determining": "Min( ( Min( MRS ,ACS ) - ( FirstVNF_RAM_Server - ( Const / ( BR - ACS ) ) ) ) ,( ( CRS + AMS ) - Min( ( ( FirstVNF_RAM - ARS ) / Min( FirstVNF_RAM ,( ( ARS + ( PN / ACS ) ) / ACS ) ) ) ,( FirstVNF_CPU / PN ) ) ) )", "choosing": "Min( MLU ,( MUR / RRSe ) )", "obj1": 0.6773547094188377, "obj2": 0.21973281673724557}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( ( Max( RRS,BR ) + ( MDR + ARS ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( DDR - FirstVNF_CPU ) / DDR ) ) ) )", "choosing": "( ( RMSe * ( CS / ( MUC + Max( ( Min( MUM ,RCSe ) * MUC ),MUC ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_CPU_Server - PN ) + MRS ),MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( RMSe * MUC ) ) + ( ( ( ( MUC / DS ) * MUR ) + ( MUM + MLU ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) ) )", "obj1": 0.6472945891783567, "obj2": 0.2445321947732065}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,CS ) + MUC ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Const ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( ( ( MUR - MUM ) * MLU ),MUC ) + RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - ( ( ( MUR + MLU ) + ( ( Max( MLU,RMSe ) / DS ) + MUC ) ) - MLU ) ) ,DS ) + ( RMSe - ( MUC * Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( ( ( RRSe - DS ) * Max( MLU,MLU ) ) * DS ) ) / ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,( RCSe / ( Min( ( ( Max( RCSe,MUR ) - Min( DS ,DS ) ) / Min( MLU ,Min( MUM ,DS ) ) ) ,MUR ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,Max( Min( FirstVNF_Mem ,Min( MDR ,( PN * MRS ) ) ),( MRS * MRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( ( Max( RRSe,( MUM - CS ) ) * Min( ( DS - RCSe ) ,RMSe ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ( CRS - FirstVNF_Mem ) ) ,( ( CRS / RRS ) + Max( MDR,( FirstVNF_RAM / ( ARS - Min( Max( CRS,RRS ) ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + Min( ( ( RMSe - RCSe ) + Max( ( MUR * CS ),DS ) ) ,CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( ( ( ( Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,ARS ) ) * CRS ) + RRS ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( ( Min( MUM ,( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) ) / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( ( ( RRSe * ( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * ( ( MUR + ( MUC + CS ) ) - ( RCSe / Max( MLU,CS ) ) ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( ( ( PN / ACS ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) + MUC ) / MUR ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + ( CRS + PN ) ) ) ) ,CRS ) - ( ( PN + FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( MLU + RRSe ) * ( MLU / ( DS * ( DS * Min( RMSe ,CS ) ) ) ) ) * RRSe ) ,( MUR - MUM ) ) * ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( ( CRS - ARS ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * MUM ),( ( Max( DS,( ( ( ( RRSe * RRSe ) + MUC ) + DS ) - RCSe ) ) - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,Min( MRS ,AMS ) ) ,( DDR - FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Max( Max( ( ( ( MLU + MUR ) + RRSe ) - RMSe ),Min( RMSe ,( RRSe - ( ( ( DS + CS ) + ( CS - RRSe ) ) / DS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - PN ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( DS / RRSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,Min( Const ,Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) ) ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM * MRS ) )", "choosing": "( ( Min( Max( ( RRSe * MUM ),MUC ) ,( Max( MUM,Max( MUC,( Max( MLU,DS ) * Min( RMSe ,RMSe ) ) ) ) + MUR ) ) - ( ( ( RMSe + DS ) - ( MUC * RRSe ) ) * ( MLU / RCSe ) ) ) - ( ( DS / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( FirstVNF_Mem / PN ) ,( ( DDR * FirstVNF_RAM_Server ) - RRS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( Min( MLU ,CS ) - MUC ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - FirstVNF_Mem ) + ( Min( FirstVNF_CPU ,MDR ) * Min( Min( CRS ,FirstVNF_RAM ) ,( MDR * ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),( ( RCSe * DS ) + Max( MUM,( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,( ( ( RRSe * RCSe ) - ( MUR * MLU ) ) * ( Max( ( ( RCSe * CS ) * ( CS / DS ) ),Max( ( RCSe / MUR ),DS ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( Min( Max( Min( ACS ,FirstVNF_CPU ),MDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RRSe + ( MUC * MUM ) ),MLU ) * MUR ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( ( FirstVNF_CPU_Server + ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( DDR * FirstVNF_RAM ) ) + ACS ) * ( ( AMS * FirstVNF_CPU ) / DDR ) ) - FirstVNF_CPU ) ) + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( RRSe / MUM ) - ( ( RMSe - RRSe ) - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,Const ) ) ,CRS ) - ( ACS + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( ( DS - RRSe ) + ( MUC / ( Max( MLU,RMSe ) / ( MUR - MLU ) ) ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_CPU_Server ) ) ) ) / AMS ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( RMSe / RMSe ) * DS ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / FirstVNF_RAM ) ,Max( Min( DDR ,( ( ( FirstVNF_RAM - ( DDR / RRS ) ) / PN ) + RRS ) ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( ( ( MUR - CS ) * Min( DS ,RCSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) / ( CRS / MRS ) )", "choosing": "( Min( ( RRSe * ( RMSe / ( CS + MUC ) ) ) ,Min( ( ( RCSe + ( MUM + MUM ) ) * MUC ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( CS - MLU ) / ( ( RRSe * ( MLU + RMSe ) ) - ( ( DS - DS ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( RRS + DDR ) ) / Max( ( FirstVNF_Mem_Server + PN ),( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( Min( ( MUR - RCSe ) ,RCSe ) * MUC ),MUC ) + RMSe ) ) ) - Max( ( Max( MUC,( ( RMSe * ( ( RRSe - RMSe ) + DS ) ) - ( ( MUM + MUR ) + MUR ) ) ) / ( ( Max( RCSe,RCSe ) - MUR ) * RRSe ) ),( CS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,Min( RRS ,PN ) )", "choosing": "Min( ( RMSe + Max( Max( RCSe,Min( DS ,MUC ) ),MLU ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server - ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * Max( MUM,( MUM * ( CS * ( RCSe + RRSe ) ) ) ) ) / ( CS * RCSe ) ),( ( RCSe * DS ) + Max( MUM,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * AMS ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( Max( RRSe,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Min( Max( ACS,PN ) ,( ( ( FirstVNF_Mem_Server + DDR ) - AMS ) - ( MDR / BR ) ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( Max( ACS,( PN * ( FirstVNF_Mem_Server - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) ) )", "choosing": "( ( Min( CS ,Min( RRSe ,RCSe ) ) * ( DS - Min( MLU ,( MLU + Min( CS ,RMSe ) ) ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ACS * Max( ARS,ACS ) ) ) )", "choosing": "( ( MUC / MUR ) * ( Min( ( Min( CS ,MUC ) - Max( Max( RCSe,( Max( RMSe,MLU ) - ( MUM - RRSe ) ) ),( MLU + ( MLU + ( CS / CS ) ) ) ) ) ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) / ( ( ARS - RRS ) / ( BR - MRS ) ) ) - ( ( ( ACS / BR ) * Const ) * FirstVNF_Mem ) )", "choosing": "Min( ( CS / ( RCSe - ( MUR / ( ( MUM / MUM ) + RMSe ) ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) ) ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Max( ( CS * MUR ),MUC ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / BR )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( ( MUR - MUM ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS - CRS ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) * ( AMS + BR ) ) ) ,CRS ) - Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( CRS ,( ARS + FirstVNF_RAM_Server ) ) ) ) ,Max( ACS,DDR ) ) )", "choosing": "( Max( ( ( MUR / DS ) * RCSe ),CS ) * ( MUC / ( RRSe / ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( ACS - CRS ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( Max( RMSe,MUC ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - ( ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) + AMS ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,( ( FirstVNF_Mem_Server + DDR ) - AMS ) ) ) + Min( Max( ACS,PN ) ,Max( ARS,CRS ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( RMSe,( MLU + Min( CS ,RMSe ) ) ) + RMSe ) ) ) - ( CS - Max( ( RMSe * ( ( MUR + RCSe ) - ( Max( MUM,MUM ) * Min( CS ,( RMSe / MUC ) ) ) ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ( Max( Const,( ( RRS - ARS ) + FirstVNF_Mem_Server ) ) / MDR ) ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * ( ARS * FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + CS ) ),Max( RRSe,Max( MLU,( ( CS - MUC ) / MLU ) ) ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,( ( PN * ACS ) + ARS ) ),( AMS - RRS ) ) ) )", "choosing": "( Max( Min( ( MUM + CS ) ,Min( ( RCSe + CS ) ,( ( Max( ( MUR + CS ),RCSe ) + ( ( DS / MUM ) / RMSe ) ) * RRSe ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( Const * MDR ) ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( MUC - Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ARS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe + ( RMSe * DS ) ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + Min( Max( ACS,PN ) ,Max( RRS,( ( ACS - FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( RCSe - MUR ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( ( MUR * RRSe ) ,( MUR - MUM ) ) * Max( Min( Min( Max( Max( MLU,MLU ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,( FirstVNF_CPU * ( ( RRS * AMS ) * ( ( MDR * DDR ) / Const ) ) ) )", "choosing": "Max( ( CS / Min( RMSe ,( MUM - ( Max( DS,CS ) * CS ) ) ) ),Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( MDR * DDR ) / ( BR - BR ) ),Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) ) * FirstVNF_RAM ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( DS + ( RCSe * MLU ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( Max( MLU,MLU ) ,Max( ( DS - ( Max( RMSe,MUC ) + RMSe ) ),RMSe ) ) + Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / Min( DDR ,Max( PN,FirstVNF_Mem ) ) ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( ( MUC + MUC ) + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( FirstVNF_RAM + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Min( RCSe ,MUC ) - ( MUR - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,( MDR * ( Min( FirstVNF_CPU ,( FirstVNF_Mem - AMS ) ) + CRS ) ) )", "choosing": "Max( ( ( RRSe * ( Max( CS,DS ) * ( Min( MUM ,RCSe ) * ( RCSe / RMSe ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_CPU_Server ) / Min( Min( ( Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) - ARS ) ,Max( FirstVNF_CPU_Server,( FirstVNF_RAM - BR ) ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Max( Min( ( DS + MUC ) ,CS ),( CS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + ( Max( ( Min( FirstVNF_CPU ,PN ) - ( AMS + PN ) ),FirstVNF_CPU_Server ) + ( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( PN + FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) ) ) ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),Min( ( ( ( DS * RMSe ) + ( MUM * MUR ) ) - ( Min( RRSe ,CS ) / Min( DS ,RCSe ) ) ) ,( Max( Max( DS,MLU ),( MUR / DS ) ) - ( ( RCSe / MUM ) / ( MUC * RMSe ) ) ) ) ) ,Min( Max( MUR,MUR ) ,Max( ( MLU / CS ),RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * ( MDR / ARS ) ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,( MUM + CS ) ) + MUC ) ) ) ,Min( Min( ( Min( Max( MUC,DS ) ,( RCSe - RCSe ) ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( ( PN / Min( ( FirstVNF_Mem_Server - RRS ) ,FirstVNF_Mem_Server ) ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( Max( Min( RCSe ,Min( ( RCSe + ( RCSe * DS ) ) ,( DS * DS ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,DDR ) ),Max( FirstVNF_RAM_Server,Min( ARS ,( FirstVNF_CPU_Server - Const ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Min( ( MUC / ( Min( DS ,RRSe ) * MUM ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + BR ) ) ) ,CRS ) - ( ARS * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUR * RRSe ) ,( MUR - MUM ) ) * DS )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + Max( DDR,FirstVNF_RAM_Server ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Min( ( BR * ( MDR - ARS ) ) ,( Min( ( BR + BR ) ,MDR ) * DDR ) ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - Max( CS,MLU ) )", "obj1": 0.5951903807615231, "obj2": 0.2937602401899241}, {"determining": "( Min( Max( ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,DDR ) ),Max( FirstVNF_RAM_Server,Min( ARS ,( FirstVNF_CPU_Server - Const ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Min( ( MUC / ( Min( DS ,RRSe ) * MUM ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + ( AMS - RRS ) ) * ( Min( MDR ,ARS ) - Max( FirstVNF_Mem,ACS ) ) )", "choosing": "( Min( ( Max( ( MUR + RRSe ),MLU ) * Min( ( CS * DS ) ,( MUM + RMSe ) ) ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + ( CRS / AMS ) ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + Max( DDR,FirstVNF_RAM_Server ) ) / ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( BR + FirstVNF_CPU ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - Max( ( Max( RRSe,MLU ) * RMSe ),Max( ( ( RRSe * MUR ) + ( CS - DS ) ),MUR ) ) ) ) ) - Min( Min( Min( RMSe ,( RRSe - ( ( ( RCSe * MUR ) + Max( MLU,MUR ) ) / DS ) ) ) ,( ( RRSe + ( RRSe * ( ( RRSe / RMSe ) + ( MUC - RMSe ) ) ) ) - ( MUR * ( ( ( DS + DS ) * Max( MUM,MUM ) ) * RRSe ) ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2937602401899241}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + Max( FirstVNF_Mem,Max( MRS,AMS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUC - RCSe ) / RRSe ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.8336673346693386, "obj2": 0.06170578741760337}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( ( RRS - ARS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * Max( RRSe,Max( MLU,( ( CS - MUC ) / MLU ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.9519038076152304, "obj2": 0.032513049581614745}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + Max( FirstVNF_Mem,Max( MRS,AMS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUC - RCSe ) / RRSe ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.8016032064128257, "obj2": 0.08118508844554545}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) * Max( ARS,RRS ) ) )", "choosing": "( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + FirstVNF_Mem ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( ( MUR + ( ( RRSe + DS ) * RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + ( MUC * DS ) ) ) ) ) )", "obj1": 0.7234468937875751, "obj2": 0.17022163033555668}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( BR ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6913827655310621, "obj2": 0.19473556739587514}, {"determining": "( Max( AMS,( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( ARS - MRS ),MRS ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RRSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7274549098196392, "obj2": 0.1451926435517585}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( ARS * DDR ) / FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + Min( MLU ,RCSe ) ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.9719438877755511, "obj2": 0.024309700195589895}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 0.9779559118236473, "obj2": 0.008723209636202442}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 0.6973947895791583, "obj2": 0.18079782149169465}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + ( ( Min( ( ACS * DDR ) ,( PN * FirstVNF_RAM_Server ) ) - MDR ) + FirstVNF_RAM ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUR / CS ) + ( ( ( Max( ( MLU - ( MUR * RMSe ) ),( RMSe + Min( MLU ,MUM ) ) ) + CS ) * RMSe ) + MUR ) )", "obj1": 0.7434869739478958, "obj2": 0.13889278580389944}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * Max( ( Const / FirstVNF_CPU ),ARS ) ) ) ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + ( MLU + MUR ) ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Min( Max( ( MLU / RRSe ),DS ) ,( ( RMSe / RRSe ) / CS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.2781164669631867}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( DDR / PN ) ) )", "choosing": "( ( RMSe * ( CS / ( Min( MLU ,RRSe ) + Min( MUR ,MUR ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( ( Max( RRS,BR ) + ( MDR + ARS ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( DDR - Min( FirstVNF_CPU ,( Max( BR,FirstVNF_Mem_Server ) - Min( MDR ,CRS ) ) ) ) / DDR ) ) ) )", "choosing": "( ( RMSe * ( CS / Min( RMSe ,( ( RCSe - CS ) / Max( MLU,RRSe ) ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.657314629258517, "obj2": 0.2377627511410636}, {"determining": "Min( ( ( ARS * AMS ) - Min( BR ,Min( ( Min( ( FirstVNF_CPU_Server - PN ) ,( ARS * ( MDR - FirstVNF_Mem ) ) ) + AMS ) ,( BR / RRS ) ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),Min( Min( RCSe ,Min( Max( RMSe,Max( MUC,RCSe ) ) ,MUC ) ) ,RRSe ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6152304609218436, "obj2": 0.2656331275997212}, {"determining": "Min( ( ( ARS * AMS ) - Min( Const ,Min( Max( Min( FirstVNF_RAM_Server ,ARS ),BR ) ,MRS ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUM - RMSe ) / MUM ) ) * ( MUR - MUR ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6112224448897795, "obj2": 0.27641667880079596}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6172344689378757, "obj2": 0.2594060956258364}, {"determining": "Min( Min( Min( Min( ARS ,Max( BR,Min( DDR ,Const ) ) ) ,BR ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Min( Min( MUC ,RMSe ) ,( CS - ( MUR - ( RRSe - CS ) ) ) ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6633266533066132, "obj2": 0.23044836603149968}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 0.6973947895791583, "obj2": 0.18079782149169465}, {"determining": "Min( Min( DDR ,Const ) ,( ( CRS + ( ( ACS * FirstVNF_Mem_Server ) - ( ACS * FirstVNF_CPU_Server ) ) ) - BR ) )", "choosing": "Min( MLU ,( ( MUM / RRSe ) * ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( ( Max( DS,MLU ) + DS ) / ( Min( CS ,CS ) - Min( RCSe ,MLU ) ) ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) ) )", "obj1": 0.6492985971943888, "obj2": 0.24254256876963007}, {"determining": "Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( DDR ,Max( PN,Max( PN,CRS ) ) ) ,DDR ) )", "choosing": "Min( Max( ( DS + MUC ),( ( ( ( RRSe + MUC ) * ( CS + Max( MUR,RRSe ) ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6352705410821643, "obj2": 0.2546086128024703}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( Min( RCSe ,( ( RRSe + ( RRSe * ( ( RRSe / RMSe ) + CS ) ) ) - ( MUR * MUM ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,Max( Min( Const ,FirstVNF_Mem ),Max( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RRSe + MUC ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) ) * Min( Max( ( Min( DS ,CS ) * ( RRSe * ( ( MUC + RCSe ) / MUM ) ) ),( RMSe - MUM ) ) ,RCSe ) )", "obj1": 0.6733466933867736, "obj2": 0.22164536289749442}, {"determining": "Min( ( ( ARS * AMS ) - Min( BR ,( BR * DDR ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),Min( Min( RCSe ,Min( Min( RCSe ,MUC ) ,MUC ) ) ,RRSe ) ) ,( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) ) )", "obj1": 0.6713426853707415, "obj2": 0.22798579229205007}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * ( FirstVNF_Mem + ( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) ) / AMS ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / ( ( MLU + MUR ) + Min( ( DS / RRSe ) ,RMSe ) ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( RCSe - ( CS + MUC ) ),( CS - MUR ) ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.625250501002004, "obj2": 0.2570613086224285}, {"determining": "( Min( FirstVNF_RAM_Server ,ACS ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + Max( ( RCSe + ( MLU / Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) ) ),Min( ( RMSe * MUR ) ,Max( Max( ( RCSe + MUC ),DS ),CS ) ) ) ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.0018596371912919195}, {"determining": "Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) )", "choosing": "Min( Max( ( DS + MUC ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6372745490981964, "obj2": 0.24900201044874964}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( ( Max( MRS,DDR ) / ( MDR + MRS ) ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( Min( MUM ,RCSe ) * MUC ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.6412825651302605, "obj2": 0.24888724025014516}, {"determining": "Min( Min( DDR ,Const ) ,( ( CRS + AMS ) - Min( ( ( ( BR - FirstVNF_Mem_Server ) * AMS ) - Min( BR ,Min( ( RRS + AMS ) ,MRS ) ) ) ,( FirstVNF_CPU / PN ) ) ) )", "choosing": "Min( MLU ,( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) )", "obj1": 0.627254509018036, "obj2": 0.25499388925279043}, {"determining": "Min( Min( Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,( RRS - Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,DDR ) ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( MUM + ( MUC * RMSe ) ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6452905811623246, "obj2": 0.24477053866497514}, {"determining": "Min( ( Min( MRS ,ACS ) - ( FirstVNF_RAM_Server - ( Const / ( BR - ACS ) ) ) ) ,( ( CRS + AMS ) - Min( ( ( FirstVNF_RAM - ARS ) / Min( FirstVNF_RAM ,( ( ARS + ( PN / ACS ) ) / ACS ) ) ) ,( FirstVNF_CPU / PN ) ) ) )", "choosing": "Min( MLU ,( MUR / RRSe ) )", "obj1": 0.6773547094188377, "obj2": 0.21973281673724557}, {"determining": "Min( ( ARS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM + ( FirstVNF_CPU + ( FirstVNF_CPU_Server + Const ) ) ) ,DDR ) ) ) ,Min( Max( ( DDR - ARS ),Max( PN,FirstVNF_CPU ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( Max( DDR,MDR ) - ( MRS * ACS ) ) / DDR ) ) ) )", "choosing": "( ( RRSe * Max( ( ( RRSe - RCSe ) - DS ),( RCSe * Max( RRSe,CS ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6673346693386774, "obj2": 0.2293720761518246}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( Max( DDR,FirstVNF_Mem_Server ) * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( Min( ( MUM * ( ( ( MUM / MLU ) * MUC ) / Max( RRSe,MUR ) ) ) ,( ( RRSe + ( RRSe * ( ( RRSe / RMSe ) + ( MUC - RMSe ) ) ) ) - ( MUR * MUM ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( ( Max( RRS,BR ) + ( MDR + ARS ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( DDR - FirstVNF_CPU ) / DDR ) ) ) )", "choosing": "( ( RMSe * ( CS / ( MUC + Max( ( Min( MUM ,RCSe ) * MUC ),MUC ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6813627254509018, "obj2": 0.21895581724304355}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_CPU_Server - PN ) + MRS ),MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( RMSe * MUC ) ) + ( ( ( ( MUC / DS ) * MUR ) + ( MUM + MLU ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) ) )", "obj1": 0.6472945891783567, "obj2": 0.2445321947732065}, {"determining": "Min( ( ( ARS * AMS ) - Min( Const ,Min( ( RRS + Max( ACS,PN ) ) ,MRS ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6112224448897795, "obj2": 0.27641667880079596}, {"determining": "( ( Max( ( ( Const + RRS ) - ( Min( BR ,( AMS - RRS ) ) + RRS ) ),( AMS / Const ) ) * FirstVNF_Mem_Server ) * ( Min( ( ( DDR + DDR ) / PN ) ,Min( CRS ,BR ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR - MLU ) * MUR ) + ( DS + MLU ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,CS ) + MUC ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Const ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( ( ( MUR - MUM ) * MLU ),MUC ) + RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - ( ( ( MUR + MLU ) + ( ( Max( MLU,RMSe ) / DS ) + MUC ) ) - MLU ) ) ,DS ) + ( RMSe - ( MUC * Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( ( ( RRSe - DS ) * Max( MLU,MLU ) ) * DS ) ) / ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,( RCSe / ( Min( ( ( Max( RCSe,MUR ) - Min( DS ,DS ) ) / Min( MLU ,Min( MUM ,DS ) ) ) ,MUR ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,Max( Min( FirstVNF_Mem ,Min( MDR ,( PN * MRS ) ) ),( MRS * MRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( ( Max( RRSe,( MUM - CS ) ) * Min( ( DS - RCSe ) ,RMSe ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ( CRS - FirstVNF_Mem ) ) ,( ( CRS / RRS ) + Max( MDR,( FirstVNF_RAM / ( ARS - Min( Max( CRS,RRS ) ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + Min( ( ( RMSe - RCSe ) + Max( ( MUR * CS ),DS ) ) ,CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( ( ( ( Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,ARS ) ) * CRS ) + RRS ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( ( Min( MUM ,( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) ) / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( ( ( RRSe * ( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * ( ( MUR + ( MUC + CS ) ) - ( RCSe / Max( MLU,CS ) ) ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( ( ( PN / ACS ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) + MUC ) / MUR ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + ( CRS + PN ) ) ) ) ,CRS ) - ( ( PN + FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( MLU + RRSe ) * ( MLU / ( DS * ( DS * Min( RMSe ,CS ) ) ) ) ) * RRSe ) ,( MUR - MUM ) ) * ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( ( CRS - ARS ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * MUM ),( ( Max( DS,( ( ( ( RRSe * RRSe ) + MUC ) + DS ) - RCSe ) ) - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,Min( MRS ,AMS ) ) ,( DDR - FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Max( Max( ( ( ( MLU + MUR ) + RRSe ) - RMSe ),Min( RMSe ,( RRSe - ( ( ( DS + CS ) + ( CS - RRSe ) ) / DS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - PN ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( DS / RRSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,Min( Const ,Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) ) ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM * MRS ) )", "choosing": "( ( Min( Max( ( RRSe * MUM ),MUC ) ,( Max( MUM,Max( MUC,( Max( MLU,DS ) * Min( RMSe ,RMSe ) ) ) ) + MUR ) ) - ( ( ( RMSe + DS ) - ( MUC * RRSe ) ) * ( MLU / RCSe ) ) ) - ( ( DS / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( FirstVNF_Mem / PN ) ,( ( DDR * FirstVNF_RAM_Server ) - RRS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( Min( MLU ,CS ) - MUC ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - FirstVNF_Mem ) + ( Min( FirstVNF_CPU ,MDR ) * Min( Min( CRS ,FirstVNF_RAM ) ,( MDR * ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),( ( RCSe * DS ) + Max( MUM,( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,( ( ( RRSe * RCSe ) - ( MUR * MLU ) ) * ( Max( ( ( RCSe * CS ) * ( CS / DS ) ),Max( ( RCSe / MUR ),DS ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( Min( Max( Min( ACS ,FirstVNF_CPU ),MDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RRSe + ( MUC * MUM ) ),MLU ) * MUR ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( ( FirstVNF_CPU_Server + ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( DDR * FirstVNF_RAM ) ) + ACS ) * ( ( AMS * FirstVNF_CPU ) / DDR ) ) - FirstVNF_CPU ) ) + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( RRSe / MUM ) - ( ( RMSe - RRSe ) - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,Const ) ) ,CRS ) - ( ACS + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( ( DS - RRSe ) + ( MUC / ( Max( MLU,RMSe ) / ( MUR - MLU ) ) ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_CPU_Server ) ) ) ) / AMS ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( RMSe / RMSe ) * DS ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / FirstVNF_RAM ) ,Max( Min( DDR ,( ( ( FirstVNF_RAM - ( DDR / RRS ) ) / PN ) + RRS ) ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( ( ( MUR - CS ) * Min( DS ,RCSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) / ( CRS / MRS ) )", "choosing": "( Min( ( RRSe * ( RMSe / ( CS + MUC ) ) ) ,Min( ( ( RCSe + ( MUM + MUM ) ) * MUC ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( CS - MLU ) / ( ( RRSe * ( MLU + RMSe ) ) - ( ( DS - DS ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( RRS + DDR ) ) / Max( ( FirstVNF_Mem_Server + PN ),( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( Min( ( MUR - RCSe ) ,RCSe ) * MUC ),MUC ) + RMSe ) ) ) - Max( ( Max( MUC,( ( RMSe * ( ( RRSe - RMSe ) + DS ) ) - ( ( MUM + MUR ) + MUR ) ) ) / ( ( Max( RCSe,RCSe ) - MUR ) * RRSe ) ),( CS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,Min( RRS ,PN ) )", "choosing": "Min( ( RMSe + Max( Max( RCSe,Min( DS ,MUC ) ),MLU ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server - ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * Max( MUM,( MUM * ( CS * ( RCSe + RRSe ) ) ) ) ) / ( CS * RCSe ) ),( ( RCSe * DS ) + Max( MUM,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * AMS ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( Max( RRSe,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Min( Max( ACS,PN ) ,( ( ( FirstVNF_Mem_Server + DDR ) - AMS ) - ( MDR / BR ) ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( Max( ACS,( PN * ( FirstVNF_Mem_Server - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) ) )", "choosing": "( ( Min( CS ,Min( RRSe ,RCSe ) ) * ( DS - Min( MLU ,( MLU + Min( CS ,RMSe ) ) ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ACS * Max( ARS,ACS ) ) ) )", "choosing": "( ( MUC / MUR ) * ( Min( ( Min( CS ,MUC ) - Max( Max( RCSe,( Max( RMSe,MLU ) - ( MUM - RRSe ) ) ),( MLU + ( MLU + ( CS / CS ) ) ) ) ) ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) / ( ( ARS - RRS ) / ( BR - MRS ) ) ) - ( ( ( ACS / BR ) * Const ) * FirstVNF_Mem ) )", "choosing": "Min( ( CS / ( RCSe - ( MUR / ( ( MUM / MUM ) + RMSe ) ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) ) ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Max( ( CS * MUR ),MUC ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / BR )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( ( MUR - MUM ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS - CRS ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) * ( AMS + BR ) ) ) ,CRS ) - Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( CRS ,( ARS + FirstVNF_RAM_Server ) ) ) ) ,Max( ACS,DDR ) ) )", "choosing": "( Max( ( ( MUR / DS ) * RCSe ),CS ) * ( MUC / ( RRSe / ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( ACS - CRS ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( Max( RMSe,MUC ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - ( ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) + AMS ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,( ( FirstVNF_Mem_Server + DDR ) - AMS ) ) ) + Min( Max( ACS,PN ) ,Max( ARS,CRS ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( RMSe,( MLU + Min( CS ,RMSe ) ) ) + RMSe ) ) ) - ( CS - Max( ( RMSe * ( ( MUR + RCSe ) - ( Max( MUM,MUM ) * Min( CS ,( RMSe / MUC ) ) ) ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ( Max( Const,( ( RRS - ARS ) + FirstVNF_Mem_Server ) ) / MDR ) ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * ( ARS * FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + CS ) ),Max( RRSe,Max( MLU,( ( CS - MUC ) / MLU ) ) ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,( ( PN * ACS ) + ARS ) ),( AMS - RRS ) ) ) )", "choosing": "( Max( Min( ( MUM + CS ) ,Min( ( RCSe + CS ) ,( ( Max( ( MUR + CS ),RCSe ) + ( ( DS / MUM ) / RMSe ) ) * RRSe ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( Const * MDR ) ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( MUC - Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ARS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe + ( RMSe * DS ) ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + Min( Max( ACS,PN ) ,Max( RRS,( ( ACS - FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( RCSe - MUR ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( ( MUR * RRSe ) ,( MUR - MUM ) ) * Max( Min( Min( Max( Max( MLU,MLU ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,( FirstVNF_CPU * ( ( RRS * AMS ) * ( ( MDR * DDR ) / Const ) ) ) )", "choosing": "Max( ( CS / Min( RMSe ,( MUM - ( Max( DS,CS ) * CS ) ) ) ),Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( MDR * DDR ) / ( BR - BR ) ),Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) ) * FirstVNF_RAM ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( DS + ( RCSe * MLU ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( Max( MLU,MLU ) ,Max( ( DS - ( Max( RMSe,MUC ) + RMSe ) ),RMSe ) ) + Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / Min( DDR ,Max( PN,FirstVNF_Mem ) ) ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( ( MUC + MUC ) + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( FirstVNF_RAM + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Min( RCSe ,MUC ) - ( MUR - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,( MDR * ( Min( FirstVNF_CPU ,( FirstVNF_Mem - AMS ) ) + CRS ) ) )", "choosing": "Max( ( ( RRSe * ( Max( CS,DS ) * ( Min( MUM ,RCSe ) * ( RCSe / RMSe ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + Max( DDR,FirstVNF_RAM_Server ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / Min( ( BR * ( MDR - ARS ) ) ,( Min( ( BR + BR ) ,MDR ) * DDR ) ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - Max( CS,MLU ) )", "obj1": 0.5951903807615231, "obj2": 0.2937602401899241}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * ( FirstVNF_Mem + Const ) ) ) ) / AMS ) ) * Min( ( ( DDR + DDR ) / PN ) ,Min( CRS ,BR ) ) )", "choosing": "( ( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + MLU ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,DDR ) ),Max( FirstVNF_RAM_Server,Min( ARS ,( FirstVNF_CPU_Server - Const ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Min( ( MUC / ( Min( DS ,RRSe ) * MUM ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + ( CRS / AMS ) ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + Max( DDR,FirstVNF_RAM_Server ) ) / ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( BR + FirstVNF_CPU ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - Max( ( Max( RRSe,MLU ) * RMSe ),Max( ( ( RRSe * MUR ) + ( CS - DS ) ),MUR ) ) ) ) ) - Min( Min( Min( RMSe ,( RRSe - ( ( ( RCSe * MUR ) + Max( MLU,MUR ) ) / DS ) ) ) ,( ( RRSe + ( RRSe * ( ( RRSe / RMSe ) + ( MUC - RMSe ) ) ) ) - ( MUR * ( ( ( DS + DS ) * Max( MUM,MUM ) ) * RRSe ) ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.5951903807615231, "obj2": 0.2937602401899241}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + Max( FirstVNF_Mem,Max( MRS,AMS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUC - RCSe ) / RRSe ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.8336673346693386, "obj2": 0.06170578741760337}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( ( RRS - ARS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * Max( RRSe,Max( MLU,( ( CS - MUC ) / MLU ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.9519038076152304, "obj2": 0.032513049581614745}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + Max( FirstVNF_Mem,Max( MRS,AMS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUC - RCSe ) / RRSe ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.8016032064128257, "obj2": 0.08118508844554545}, {"determining": "( Min( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( ( ( MDR / FirstVNF_Mem_Server ) + FirstVNF_RAM ) + ( ( Const * RRS ) - DDR ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / ( BR * BR ) ) )", "choosing": "( Min( ( ( RCSe * RCSe ) - Max( MLU,MLU ) ) ,RCSe ) + ( Min( ( ( MUC - CS ) * DS ) ,Min( RRSe ,CS ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7735470941883767, "obj2": 0.10928360440574754}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) * Max( ARS,RRS ) ) )", "choosing": "( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + FirstVNF_Mem ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( ( MUR + ( ( RRSe + DS ) * RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + ( MUC * DS ) ) ) ) ) )", "obj1": 0.7234468937875751, "obj2": 0.17022163033555668}, {"determining": "( Max( AMS,( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( ARS - MRS ),MRS ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RRSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7274549098196392, "obj2": 0.1451926435517585}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Const ) )", "choosing": "( ( MLU - Min( DS ,MUM ) ) + ( RRSe * MUM ) )", "obj1": 0.6953907815631263, "obj2": 0.17158246420487758}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( ( ARS - MRS ) + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) ) )", "obj1": 0.6773547094188377, "obj2": 0.19733532012906227}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * Max( ( Const / FirstVNF_CPU ),ARS ) ) ) ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + ( MLU + MUR ) ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Min( Max( ( MLU / RRSe ),DS ) ,( ( RMSe / RRSe ) / CS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.2781164669631867}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,Max( Min( Const ,FirstVNF_Mem ),Max( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RRSe + MUC ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) ) * Min( Max( ( Min( DS ,CS ) * ( RRSe * ( ( MUC + RCSe ) / MUM ) ) ),( RMSe - MUM ) ) ,RCSe ) )", "obj1": 0.6733466933867736, "obj2": 0.22164536289749442}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 0.9779559118236473, "obj2": 0.008723209636202442}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + ( ( Min( ( ACS * DDR ) ,( PN * FirstVNF_RAM_Server ) ) - MDR ) + FirstVNF_RAM ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUR / CS ) + ( ( ( Max( ( MLU - ( MUR * RMSe ) ),( RMSe + Min( MLU ,MUM ) ) ) + CS ) * RMSe ) + MUR ) )", "obj1": 0.7434869739478958, "obj2": 0.13889278580389944}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( ARS * DDR ) / FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + Min( MLU ,RCSe ) ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.9719438877755511, "obj2": 0.024309700195589895}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( Min( Const ,FirstVNF_Mem ) - ( BR + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( Max( ( ( RRSe - RCSe ) - DS ),Max( MUR,Max( MUC,MUR ) ) ) ,DS ) ) + ( RRSe * MUM ) )", "obj1": 0.6933867735470942, "obj2": 0.18935329231597317}, {"determining": "Min( ( ( PN - PN ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ,( FirstVNF_CPU / ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * ( ( RRS * AMS ) * ( ( MDR * DDR ) / Const ) ) ) ) ) )", "choosing": "Min( Max( ( CS / Min( RMSe ,( MUM - ( Max( DS,CS ) * CS ) ) ) ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Min( Max( ( MLU / RRSe ),DS ) ,( ( MUC / ( CS / ( MUC / MUM ) ) ) * RCSe ) ) ) )", "obj1": 0.6092184368737475, "obj2": 0.2688980845104004}, {"determining": "Min( Min( Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Max( Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) ),RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( Max( ( DS + MUC ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,RCSe ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6533066132264529, "obj2": 0.23519315132873198}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( BR ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6913827655310621, "obj2": 0.19473556739587514}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6172344689378757, "obj2": 0.2594060956258364}, {"determining": "Min( Min( Min( Min( ARS ,Max( BR,Min( DDR ,Const ) ) ) ,BR ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Min( Min( MUC ,RMSe ) ,( CS - ( MUR - ( RRSe - CS ) ) ) ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6633266533066132, "obj2": 0.23044836603149968}, {"determining": "Min( ( ( ARS * AMS ) - Min( BR ,Min( ( Min( ( FirstVNF_CPU_Server - PN ) ,( ARS * ( MDR - FirstVNF_Mem ) ) ) + AMS ) ,( BR / RRS ) ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),Min( Min( RCSe ,Min( Max( RMSe,Max( MUC,RCSe ) ) ,MUC ) ) ,RRSe ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6152304609218436, "obj2": 0.2656331275997212}, {"determining": "Min( Min( DDR ,Const ) ,( ( CRS + AMS ) - Min( ( ( ( BR - FirstVNF_Mem_Server ) * AMS ) - Min( BR ,Min( ( RRS + AMS ) ,MRS ) ) ) ,( FirstVNF_CPU / PN ) ) ) )", "choosing": "Min( MLU ,( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) )", "obj1": 0.627254509018036, "obj2": 0.25499388925279043}, {"determining": "Min( Min( DDR ,Const ) ,( ( CRS + ( ( ACS * FirstVNF_Mem_Server ) - ( ACS * FirstVNF_CPU_Server ) ) ) - BR ) )", "choosing": "Min( MLU ,( ( MUM / RRSe ) * ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( ( Max( DS,MLU ) + DS ) / ( Min( CS ,CS ) - Min( RCSe ,MLU ) ) ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) ) )", "obj1": 0.6492985971943888, "obj2": 0.24254256876963007}, {"determining": "( Min( ( FirstVNF_CPU + DDR ) ,( MDR / BR ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( ( ( MUC - DS ) / MUM ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + ( RRSe + MUM ) ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6352705410821643, "obj2": 0.24928210140287277}, {"determining": "Min( ( ARS * Min( ( RRS + AMS ) ,( BR / RRS ) ) ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * Max( RMSe,MUM ) ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.9719438877755511, "obj2": 0.024309700195589895}, {"determining": "Min( ( Max( ( FirstVNF_RAM / DDR ),( ( ( ( ( MDR / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) + CRS ) / MDR ) - Min( MDR ,FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server )", "choosing": "( ( Min( MLU ,RMSe ) + ( ( Min( DS ,MLU ) / RMSe ) + ( DS - CS ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.625250501002004, "obj2": 0.25575399448232555}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( Min( ( MUM * ( ( ( MUM / MLU ) * MUC ) / Max( RRSe,MUR ) ) ) ,( ( RRSe + ( RRSe * ( RRSe + ( MUC - RMSe ) ) ) ) - ( MUR * MUM ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( ( Max( MRS,DDR ) / ( MDR + MRS ) ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( Min( MUM ,RCSe ) * MUC ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.6412825651302605, "obj2": 0.24888724025014516}, {"determining": "Min( ( ( ARS * AMS ) - Min( BR ,( BR * DDR ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),Min( Min( RCSe ,Min( Min( RCSe ,MUC ) ,MUC ) ) ,RRSe ) ) ,( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) ) )", "obj1": 0.6713426853707415, "obj2": 0.22798579229205007}, {"determining": "Min( Min( Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,( RRS - Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,DDR ) ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( MUM + ( MUC * RMSe ) ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6452905811623246, "obj2": 0.24477053866497514}, {"determining": "Min( ( ARS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM + ( FirstVNF_CPU + ( FirstVNF_CPU_Server + Const ) ) ) ,DDR ) ) ) ,Min( Max( ( DDR - ARS ),Max( PN,FirstVNF_CPU ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( Max( DDR,MDR ) - ( MRS * ACS ) ) / DDR ) ) ) )", "choosing": "( ( RRSe * Max( ( ( RRSe - RCSe ) - DS ),( RCSe * Max( RRSe,CS ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6673346693386774, "obj2": 0.2293720761518246}, {"determining": "( Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( BR + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + ( RRSe * ( RCSe * MLU ) ) )", "obj1": 0.9939879759519038, "obj2": 0.0018735535759129417}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( ( Min( FirstVNF_Mem_Server ,ACS ) * ( ARS - FirstVNF_Mem ) ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( Min( RCSe ,( ( RRSe + ( RRSe * ( ( RRSe / RMSe ) + CS ) ) ) - ( MUR * MUM ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_CPU_Server - PN ) + MRS ),MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( RMSe * MUC ) ) + ( ( ( ( MUC / DS ) * MUR ) + ( MUM + MLU ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) ) )", "obj1": 0.6472945891783567, "obj2": 0.2445321947732065}, {"determining": "( Min( FirstVNF_RAM_Server ,ACS ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + Max( ( RCSe + ( MLU / Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) ) ),Min( ( RMSe * MUR ) ,Max( Max( ( RCSe + MUC ),DS ),CS ) ) ) ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.0018596371912919195}, {"determining": "Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) )", "choosing": "Min( Max( ( DS + MUC ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6372745490981964, "obj2": 0.24900201044874964}, {"determining": "Min( ( ( ARS * AMS ) - Min( BR ,Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,( BR / RRS ) ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),Min( Min( ( Min( ( Min( RMSe ,CS ) / MUC ) ,CS ) * CS ) ,Min( Max( RMSe,MUM ) ,MUC ) ) ,RRSe ) ) ,( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * MUC ) ) )", "obj1": 0.6713426853707415, "obj2": 0.22798579229205007}, {"determining": "( Min( FirstVNF_RAM_Server ,ACS ) * ( MDR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + Max( ( RCSe + ( MLU / Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) ) ),Min( ( RMSe * MUR ) ,Max( Max( ( RCSe + MUC ),DS ),CS ) ) ) ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 0.9979959919839679, "obj2": 0.0018596371912919195}, {"determining": "( ( FirstVNF_Mem_Server + ( AMS - RRS ) ) * ( Min( MDR ,ARS ) - Max( FirstVNF_Mem,ACS ) ) )", "choosing": "( Min( ( Max( ( MUR + RRSe ),MLU ) * Min( ( CS * DS ) ,( MUM + RMSe ) ) ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Const + RRS ) - ( Min( BR ,( AMS - RRS ) ) + RRS ) ),( AMS / Const ) ) * FirstVNF_Mem_Server ) * ( Min( ( ( DDR + DDR ) / PN ) ,Min( CRS ,BR ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR - MLU ) * MUR ) + ( DS + MLU ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,CS ) + MUC ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Const ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( ( ( MUR - MUM ) * MLU ),MUC ) + RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - ( ( ( MUR + MLU ) + ( ( Max( MLU,RMSe ) / DS ) + MUC ) ) - MLU ) ) ,DS ) + ( RMSe - ( MUC * Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( ( ( RRSe - DS ) * Max( MLU,MLU ) ) * DS ) ) / ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,( RCSe / ( Min( ( ( Max( RCSe,MUR ) - Min( DS ,DS ) ) / Min( MLU ,Min( MUM ,DS ) ) ) ,MUR ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,Max( Min( FirstVNF_Mem ,Min( MDR ,( PN * MRS ) ) ),( MRS * MRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( ( Max( RRSe,( MUM - CS ) ) * Min( ( DS - RCSe ) ,RMSe ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ( CRS - FirstVNF_Mem ) ) ,( ( CRS / RRS ) + Max( MDR,( FirstVNF_RAM / ( ARS - Min( Max( CRS,RRS ) ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + Min( ( ( RMSe - RCSe ) + Max( ( MUR * CS ),DS ) ) ,CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( ( ( ( Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,ARS ) ) * CRS ) + RRS ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( ( Min( MUM ,( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) ) / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( ( ( RRSe * ( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * ( ( MUR + ( MUC + CS ) ) - ( RCSe / Max( MLU,CS ) ) ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( ( ( PN / ACS ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) + MUC ) / MUR ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + ( CRS + PN ) ) ) ) ,CRS ) - ( ( PN + FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( MLU + RRSe ) * ( MLU / ( DS * ( DS * Min( RMSe ,CS ) ) ) ) ) * RRSe ) ,( MUR - MUM ) ) * ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( ( CRS - ARS ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * MUM ),( ( Max( DS,( ( ( ( RRSe * RRSe ) + MUC ) + DS ) - RCSe ) ) - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,Min( MRS ,AMS ) ) ,( DDR - FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Max( Max( ( ( ( MLU + MUR ) + RRSe ) - RMSe ),Min( RMSe ,( RRSe - ( ( ( DS + CS ) + ( CS - RRSe ) ) / DS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - PN ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( DS / RRSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,Min( Const ,Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) ) ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM * MRS ) )", "choosing": "( ( Min( Max( ( RRSe * MUM ),MUC ) ,( Max( MUM,Max( MUC,( Max( MLU,DS ) * Min( RMSe ,RMSe ) ) ) ) + MUR ) ) - ( ( ( RMSe + DS ) - ( MUC * RRSe ) ) * ( MLU / RCSe ) ) ) - ( ( DS / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( FirstVNF_Mem / PN ) ,( ( DDR * FirstVNF_RAM_Server ) - RRS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( Min( MLU ,CS ) - MUC ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - FirstVNF_Mem ) + ( Min( FirstVNF_CPU ,MDR ) * Min( Min( CRS ,FirstVNF_RAM ) ,( MDR * ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),( ( RCSe * DS ) + Max( MUM,( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,( ( ( RRSe * RCSe ) - ( MUR * MLU ) ) * ( Max( ( ( RCSe * CS ) * ( CS / DS ) ),Max( ( RCSe / MUR ),DS ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( Min( Max( Min( ACS ,FirstVNF_CPU ),MDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RRSe + ( MUC * MUM ) ),MLU ) * MUR ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( ( FirstVNF_CPU_Server + ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( DDR * FirstVNF_RAM ) ) + ACS ) * ( ( AMS * FirstVNF_CPU ) / DDR ) ) - FirstVNF_CPU ) ) + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( RRSe / MUM ) - ( ( RMSe - RRSe ) - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,Const ) ) ,CRS ) - ( ACS + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( ( DS - RRSe ) + ( MUC / ( Max( MLU,RMSe ) / ( MUR - MLU ) ) ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_CPU_Server ) ) ) ) / AMS ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( RMSe / RMSe ) * DS ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / FirstVNF_RAM ) ,Max( Min( DDR ,( ( ( FirstVNF_RAM - ( DDR / RRS ) ) / PN ) + RRS ) ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( ( ( MUR - CS ) * Min( DS ,RCSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) / ( CRS / MRS ) )", "choosing": "( Min( ( RRSe * ( RMSe / ( CS + MUC ) ) ) ,Min( ( ( RCSe + ( MUM + MUM ) ) * MUC ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( CS - MLU ) / ( ( RRSe * ( MLU + RMSe ) ) - ( ( DS - DS ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( RRS + DDR ) ) / Max( ( FirstVNF_Mem_Server + PN ),( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( Min( ( MUR - RCSe ) ,RCSe ) * MUC ),MUC ) + RMSe ) ) ) - Max( ( Max( MUC,( ( RMSe * ( ( RRSe - RMSe ) + DS ) ) - ( ( MUM + MUR ) + MUR ) ) ) / ( ( Max( RCSe,RCSe ) - MUR ) * RRSe ) ),( CS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,Min( RRS ,PN ) )", "choosing": "Min( ( RMSe + Max( Max( RCSe,Min( DS ,MUC ) ),MLU ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server - ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * Max( MUM,( MUM * ( CS * ( RCSe + RRSe ) ) ) ) ) / ( CS * RCSe ) ),( ( RCSe * DS ) + Max( MUM,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * AMS ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( Max( RRSe,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Min( Max( ACS,PN ) ,( ( ( FirstVNF_Mem_Server + DDR ) - AMS ) - ( MDR / BR ) ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( Max( ACS,( PN * ( FirstVNF_Mem_Server - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) ) )", "choosing": "( ( Min( CS ,Min( RRSe ,RCSe ) ) * ( DS - Min( MLU ,( MLU + Min( CS ,RMSe ) ) ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ACS * Max( ARS,ACS ) ) ) )", "choosing": "( ( MUC / MUR ) * ( Min( ( Min( CS ,MUC ) - Max( Max( RCSe,( Max( RMSe,MLU ) - ( MUM - RRSe ) ) ),( MLU + ( MLU + ( CS / CS ) ) ) ) ) ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) / ( ( ARS - RRS ) / ( BR - MRS ) ) ) - ( ( ( ACS / BR ) * Const ) * FirstVNF_Mem ) )", "choosing": "Min( ( CS / ( RCSe - ( MUR / ( ( MUM / MUM ) + RMSe ) ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) ) ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Max( ( CS * MUR ),MUC ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / BR )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( ( MUR - MUM ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS - CRS ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) * ( AMS + BR ) ) ) ,CRS ) - Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( CRS ,( ARS + FirstVNF_RAM_Server ) ) ) ) ,Max( ACS,DDR ) ) )", "choosing": "( Max( ( ( MUR / DS ) * RCSe ),CS ) * ( MUC / ( RRSe / ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( ACS - CRS ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( Max( RMSe,MUC ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - ( ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) + AMS ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,( ( FirstVNF_Mem_Server + DDR ) - AMS ) ) ) + Min( Max( ACS,PN ) ,Max( ARS,CRS ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( RMSe,( MLU + Min( CS ,RMSe ) ) ) + RMSe ) ) ) - ( CS - Max( ( RMSe * ( ( MUR + RCSe ) - ( Max( MUM,MUM ) * Min( CS ,( RMSe / MUC ) ) ) ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ( Max( Const,( ( RRS - ARS ) + FirstVNF_Mem_Server ) ) / MDR ) ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * ( ARS * FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + CS ) ),Max( RRSe,Max( MLU,( ( CS - MUC ) / MLU ) ) ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,( ( PN * ACS ) + ARS ) ),( AMS - RRS ) ) ) )", "choosing": "( Max( Min( ( MUM + CS ) ,Min( ( RCSe + CS ) ,( ( Max( ( MUR + CS ),RCSe ) + ( ( DS / MUM ) / RMSe ) ) * RRSe ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( Const * MDR ) ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( MUC - Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ARS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe + ( RMSe * DS ) ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + Min( Max( ACS,PN ) ,Max( RRS,( ( ACS - FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( RCSe - MUR ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem - FirstVNF_CPU ),( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( ( MUR * RRSe ) ,( MUR - MUM ) ) * Max( Min( Min( Max( Max( MLU,MLU ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,( FirstVNF_CPU * ( ( RRS * AMS ) * ( ( MDR * DDR ) / Const ) ) ) )", "choosing": "Max( ( CS / Min( RMSe ,( MUM - ( Max( DS,CS ) * CS ) ) ) ),Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( MDR * DDR ) / ( BR - BR ) ),Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) ) * FirstVNF_RAM ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( DS + ( RCSe * MLU ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - ( MDR / BR ) )", "choosing": "( ( MLU - MUC ) + ( Min( Max( MLU,MLU ) ,Max( ( DS - ( Max( RMSe,MUC ) + RMSe ) ),RMSe ) ) + Min( MUR ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - MLU ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * ( FirstVNF_Mem + Const ) ) ) ) / AMS ) ) * Min( ( ( DDR + DDR ) / PN ) ,Min( CRS ,BR ) ) )", "choosing": "( ( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + MLU ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + ( CRS / AMS ) ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + Max( DDR,FirstVNF_RAM_Server ) ) / ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( BR + FirstVNF_CPU ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - Max( ( Max( RRSe,MLU ) * RMSe ),Max( ( ( RRSe * MUR ) + ( CS - DS ) ),MUR ) ) ) ) ) - Min( Min( Min( RMSe ,( RRSe - ( ( ( RCSe * MUR ) + Max( MLU,MUR ) ) / DS ) ) ) ,( ( RRSe + ( RRSe * ( ( RRSe / RMSe ) + ( MUC - RMSe ) ) ) ) - ( MUR * ( ( ( DS + DS ) * Max( MUM,MUM ) ) * RRSe ) ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.5871743486973948, "obj2": 0.2914833650715554}, {"determining": "Min( Min( FirstVNF_Mem ,( Max( PN,FirstVNF_CPU ) / ( ACS + Min( MDR ,FirstVNF_Mem ) ) ) ) ,( ( ( PN * FirstVNF_Mem ) - ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUM,( MUC / MUC ) ) * Max( RRSe,Max( MLU,( ( Min( RRSe ,CS ) - MUM ) / MLU ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.8997995991983968, "obj2": 0.03922385037821547}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + Max( FirstVNF_Mem,Max( MRS,AMS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUC - RCSe ) / RRSe ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.8336673346693386, "obj2": 0.06170578741760337}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + Max( FirstVNF_Mem,Max( MRS,AMS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUC - RCSe ) / RRSe ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.8016032064128257, "obj2": 0.08118508844554545}, {"determining": "( Min( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( ( ( MDR / FirstVNF_Mem_Server ) + FirstVNF_RAM ) + ( ( Const * RRS ) - DDR ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / ( BR * BR ) ) )", "choosing": "( Min( ( ( RCSe * RCSe ) - Max( MLU,MLU ) ) ,RCSe ) + ( Min( ( ( MUC - CS ) * DS ) ,Min( RRSe ,CS ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7735470941883767, "obj2": 0.10928360440574754}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( ( RRS - ARS ) + FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * Max( RRSe,Max( MLU,( ( CS - MUC ) / MLU ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.9519038076152304, "obj2": 0.032513049581614745}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + FirstVNF_Mem ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( ( MUR + ( ( RRSe + DS ) * RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + ( MUC * DS ) ) ) ) ) )", "obj1": 0.7234468937875751, "obj2": 0.17022163033555668}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Const ) )", "choosing": "( ( MLU - Min( DS ,MUM ) ) + ( RRSe * MUM ) )", "obj1": 0.6953907815631263, "obj2": 0.17158246420487758}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( ( ARS - MRS ) + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) ) )", "obj1": 0.6773547094188377, "obj2": 0.19733532012906227}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * Max( ( Const / FirstVNF_CPU ),ARS ) ) ) ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + ( MLU + MUR ) ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Min( Max( ( MLU / RRSe ),DS ) ,( ( RMSe / RRSe ) / CS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.2781164669631867}, {"determining": "( Max( AMS,( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( ARS - MRS ),MRS ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RRSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7695390781563126, "obj2": 0.12469268722238876}, {"determining": "( Max( AMS,( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( ARS - MRS ),MRS ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RRSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7274549098196392, "obj2": 0.1451926435517585}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 0.9779559118236473, "obj2": 0.008723209636202442}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) * Max( ARS,RRS ) ) )", "choosing": "( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,Max( Min( Const ,FirstVNF_Mem ),Max( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RRSe + MUC ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) ) * Min( Max( ( Min( DS ,CS ) * ( RRSe * ( ( MUC + RCSe ) / MUM ) ) ),( RMSe - MUM ) ) ,RCSe ) )", "obj1": 0.6733466933867736, "obj2": 0.22164536289749442}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( Min( Const ,FirstVNF_Mem ) - ( BR + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( Max( ( ( RRSe - RCSe ) - DS ),Max( MUR,Max( MUC,MUR ) ) ) ,DS ) ) + ( RRSe * MUM ) )", "obj1": 0.6933867735470942, "obj2": 0.18935329231597317}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + ( ( Min( ( ACS * DDR ) ,( PN * FirstVNF_RAM_Server ) ) - MDR ) + FirstVNF_RAM ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUR / CS ) + ( ( ( Max( ( MLU - ( MUR * RMSe ) ),( RMSe + Min( MLU ,MUM ) ) ) + CS ) * RMSe ) + MUR ) )", "obj1": 0.7434869739478958, "obj2": 0.13889278580389944}, {"determining": "Min( ( ( PN - PN ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ,( FirstVNF_CPU / ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * ( ( RRS * AMS ) * ( ( MDR * DDR ) / Const ) ) ) ) ) )", "choosing": "Min( Max( ( CS / Min( RMSe ,( MUM - ( Max( DS,CS ) * CS ) ) ) ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Min( Max( ( MLU / RRSe ),DS ) ,( ( MUC / ( CS / ( MUC / MUM ) ) ) * RCSe ) ) ) )", "obj1": 0.6092184368737475, "obj2": 0.2688980845104004}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + ( CRS / AMS ) ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ) / ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( BR + FirstVNF_CPU ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - Max( ( Max( RRSe,MLU ) * RMSe ),Max( ( ( RRSe * MUR ) + ( CS - DS ) ),MUR ) ) ) ) ) - Min( Min( Min( RMSe ,( RRSe - ( ( ( RCSe * MUR ) + Max( MLU,RCSe ) ) / DS ) ) ) ,( ( RRSe + ( RRSe * ( ( RRSe / RMSe ) + ( MUC - RMSe ) ) ) ) - ( MUR * ( ( ( DS + DS ) * Max( MUM,MUM ) ) * RRSe ) ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9679358717434869, "obj2": 0.029153992762032697}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( BR ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6913827655310621, "obj2": 0.19473556739587514}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( ARS * DDR ) / FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + Min( MLU ,RCSe ) ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.9719438877755511, "obj2": 0.024309700195589895}, {"determining": "Min( Min( Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Max( Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) ),RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( Max( ( DS + MUC ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,RCSe ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6533066132264529, "obj2": 0.23519315132873198}, {"determining": "( Min( FirstVNF_RAM_Server ,ACS ) * ( Min( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) ,( ( ARS * Const ) * ( ( Const - AMS ) - FirstVNF_Mem ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) ) )", "choosing": "( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + Max( ( RCSe + ( MLU / Min( Min( MUR ,MUM ) ,( MLU / RRSe ) ) ) ),Min( ( RMSe * MUR ) ,Max( Max( ( RCSe + MUC ),DS ),CS ) ) ) ) ) / Max( Min( Min( Max( MUC,MUC ) ,DS ) ,( MLU / RCSe ) ),( RMSe / MUM ) ) )", "obj1": 0.7314629258517034, "obj2": 0.14111835374777787}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6172344689378757, "obj2": 0.2594060956258364}, {"determining": "Min( ( ( ARS * AMS ) - Min( BR ,Min( ( Min( ( FirstVNF_CPU_Server - PN ) ,( ARS * ( MDR - FirstVNF_Mem ) ) ) + AMS ) ,( BR / RRS ) ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),Min( Min( RCSe ,Min( Max( RMSe,Max( MUC,RCSe ) ) ,MUC ) ) ,RRSe ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6152304609218436, "obj2": 0.2656331275997212}, {"determining": "Min( ( ARS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM + ( FirstVNF_CPU + ( FirstVNF_CPU_Server + Const ) ) ) ,DDR ) ) ) ,Min( Max( ( DDR - ARS ),Max( PN,FirstVNF_CPU ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( Max( DDR,MDR ) - ( MRS * ACS ) ) / DDR ) ) ) )", "choosing": "( ( RRSe * Max( ( ( RRSe - RCSe ) - DS ),( RCSe * Max( RRSe,CS ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6673346693386774, "obj2": 0.2293720761518246}, {"determining": "Min( Min( DDR ,Const ) ,( ( CRS + ( ( ACS * FirstVNF_Mem_Server ) - ( ACS * FirstVNF_CPU_Server ) ) ) - BR ) )", "choosing": "Min( MLU ,( ( MUM / RRSe ) * ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( ( Max( DS,MLU ) + DS ) / ( Min( CS ,CS ) - Min( RCSe ,MLU ) ) ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) ) )", "obj1": 0.6492985971943888, "obj2": 0.24254256876963007}, {"determining": "Min( Min( DDR ,Const ) ,( ( CRS + AMS ) - Min( ( ( ( BR - FirstVNF_Mem_Server ) * AMS ) - Min( BR ,Min( ( RRS + AMS ) ,MRS ) ) ) ,( FirstVNF_CPU / PN ) ) ) )", "choosing": "Min( MLU ,( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) )", "obj1": 0.627254509018036, "obj2": 0.25499388925279043}, {"determining": "( Min( ( FirstVNF_CPU + DDR ) ,( MDR / BR ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( ( ( MUC - DS ) / MUM ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + ( RRSe + MUM ) ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6352705410821643, "obj2": 0.24928210140287277}, {"determining": "( ( ( ( ACS * ARS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( DDR * ( FirstVNF_CPU_Server / MRS ) ) )", "choosing": "( ( ( MUC - DS ) / Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / Min( MUM ,DS ) ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6713426853707415, "obj2": 0.22177940772660956}, {"determining": "Min( Min( Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Max( Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,Max( PN,BR ) ) ,DDR ) ),RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( ( RRSe + RCSe ) + RRSe ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6593186372745491, "obj2": 0.2314851205119986}, {"determining": "Min( ( Max( ( FirstVNF_RAM / DDR ),( ( ( ( ( MDR / FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ) + CRS ) / MDR ) - Min( MDR ,FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server )", "choosing": "( ( Min( MLU ,RMSe ) + ( ( Min( DS ,MLU ) / RMSe ) + ( DS - CS ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.625250501002004, "obj2": 0.25575399448232555}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * AMS ) - Min( Min( FirstVNF_RAM_Server ,ACS ) ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( ( RMSe / MUM ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,Max( Min( ( ARS * FirstVNF_Mem_Server ) ,FirstVNF_Mem ),( ( Max( ARS,PN ) - MRS ) / ( ( RRS - ( Max( Const,BR ) - Min( CRS ,DDR ) ) ) + ARS ) ) ) ) )", "choosing": "( Max( ( RRSe + MUC ),( Max( Max( ( DS - ( CS + RMSe ) ),( ( Min( CS ,MLU ) / CS ) / MLU ) ),MUC ) * RCSe ) ) * Min( MUM ,CS ) )", "obj1": 0.6392785571142284, "obj2": 0.24734863400506957}, {"determining": "Min( ( ARS * Min( ( RRS + AMS ) ,( BR / RRS ) ) ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * Max( RMSe,MUM ) ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) * Min( DS ,RCSe ) )", "obj1": 0.9719438877755511, "obj2": 0.024309700195589895}, {"determining": "Min( Min( Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,( RRS - Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,DDR ) ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( MUM + ( MUC * RMSe ) ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6452905811623246, "obj2": 0.24477053866497514}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( Min( ( MUM * ( ( ( MUM / MLU ) * MUC ) / Max( RRSe,MUR ) ) ) ,( ( RRSe + ( RRSe * ( RRSe + ( MUC - RMSe ) ) ) ) - ( MUR * MUM ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "Min( Min( Min( Min( ARS ,Max( BR,Min( DDR ,Const ) ) ) ,BR ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Min( Min( MUC ,RMSe ) ,( CS - ( MUR - ( RRSe - CS ) ) ) ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6633266533066132, "obj2": 0.23044836603149968}, {"determining": "( ( DDR + CRS ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( ( CRS - ARS ),BR ) ) ) )", "choosing": "Min( ( DS - ( MLU * MUC ) ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0013159967010323039}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_CPU_Server - PN ) + MRS ),MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( RMSe * MUC ) ) + ( ( ( ( MUC / DS ) * MUR ) + ( MUM + MLU ) ) / Max( ( RMSe + CS ),( CS * MUC ) ) ) )", "obj1": 0.6472945891783567, "obj2": 0.2445321947732065}, {"determining": "( Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( BR + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + ( RRSe * ( RCSe * MLU ) ) )", "obj1": 0.9939879759519038, "obj2": 0.0018735535759129417}, {"determining": "Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) )", "choosing": "Min( Max( ( DS + MUC ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6372745490981964, "obj2": 0.24900201044874964}, {"determining": "( Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( ( FirstVNF_CPU + ARS ) - ( BR + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + ( RRSe * ( ( RCSe / MUR ) * MLU ) ) )", "obj1": 0.9939879759519038, "obj2": 0.0018735535759129417}, {"determining": "( Min( Max( ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,DDR ) ),Max( FirstVNF_RAM_Server,Min( ARS ,( FirstVNF_CPU_Server - Const ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Min( ( MUC / ( Min( DS ,RRSe ) * MUM ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + ( AMS - RRS ) ) * ( Min( MDR ,ARS ) - Max( FirstVNF_Mem,ACS ) ) )", "choosing": "( Min( ( Max( ( MUR + RRSe ),MLU ) * Min( ( CS * DS ) ,( MUM + RMSe ) ) ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Const + RRS ) - ( Min( BR ,( AMS - RRS ) ) + RRS ) ),( AMS / Const ) ) * FirstVNF_Mem_Server ) * ( Min( ( ( DDR + DDR ) / PN ) ,Min( CRS ,BR ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR - MLU ) * MUR ) + ( DS + MLU ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,CS ) + MUC ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Const ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( ( ( MUR - MUM ) * MLU ),MUC ) + RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - ( ( ( MUR + MLU ) + ( ( Max( MLU,RMSe ) / DS ) + MUC ) ) - MLU ) ) ,DS ) + ( RMSe - ( MUC * Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( ( ( RRSe - DS ) * Max( MLU,MLU ) ) * DS ) ) / ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,( RCSe / ( Min( ( ( Max( RCSe,MUR ) - Min( DS ,DS ) ) / Min( MLU ,Min( MUM ,DS ) ) ) ,MUR ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,Max( Min( FirstVNF_Mem ,Min( MDR ,( PN * MRS ) ) ),( MRS * MRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( ( Max( RRSe,( MUM - CS ) ) * Min( ( DS - RCSe ) ,RMSe ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ( CRS - FirstVNF_Mem ) ) ,( ( CRS / RRS ) + Max( MDR,( FirstVNF_RAM / ( ARS - Min( Max( CRS,RRS ) ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + Min( ( ( RMSe - RCSe ) + Max( ( MUR * CS ),DS ) ) ,CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( ( ( ( Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,ARS ) ) * CRS ) + RRS ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( ( Min( MUM ,( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) ) / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( ( ( RRSe * ( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * ( ( MUR + ( MUC + CS ) ) - ( RCSe / Max( MLU,CS ) ) ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( ( ( PN / ACS ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) + MUC ) / MUR ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + ( CRS + PN ) ) ) ) ,CRS ) - ( ( PN + FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( MLU + RRSe ) * ( MLU / ( DS * ( DS * Min( RMSe ,CS ) ) ) ) ) * RRSe ) ,( MUR - MUM ) ) * ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( ( CRS - ARS ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * MUM ),( ( Max( DS,( ( ( ( RRSe * RRSe ) + MUC ) + DS ) - RCSe ) ) - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,Min( MRS ,AMS ) ) ,( DDR - FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Max( Max( ( ( ( MLU + MUR ) + RRSe ) - RMSe ),Min( RMSe ,( RRSe - ( ( ( DS + CS ) + ( CS - RRSe ) ) / DS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - PN ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( DS / RRSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,Min( Const ,Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) ) ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM * MRS ) )", "choosing": "( ( Min( Max( ( RRSe * MUM ),MUC ) ,( Max( MUM,Max( MUC,( Max( MLU,DS ) * Min( RMSe ,RMSe ) ) ) ) + MUR ) ) - ( ( ( RMSe + DS ) - ( MUC * RRSe ) ) * ( MLU / RCSe ) ) ) - ( ( DS / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( FirstVNF_Mem / PN ) ,( ( DDR * FirstVNF_RAM_Server ) - RRS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( Min( MLU ,CS ) - MUC ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - FirstVNF_Mem ) + ( Min( FirstVNF_CPU ,MDR ) * Min( Min( CRS ,FirstVNF_RAM ) ,( MDR * ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),( ( RCSe * DS ) + Max( MUM,( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,( ( ( RRSe * RCSe ) - ( MUR * MLU ) ) * ( Max( ( ( RCSe * CS ) * ( CS / DS ) ),Max( ( RCSe / MUR ),DS ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( Min( Max( Min( ACS ,FirstVNF_CPU ),MDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RRSe + ( MUC * MUM ) ),MLU ) * MUR ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( ( FirstVNF_CPU_Server + ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( DDR * FirstVNF_RAM ) ) + ACS ) * ( ( AMS * FirstVNF_CPU ) / DDR ) ) - FirstVNF_CPU ) ) + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( RRSe / MUM ) - ( ( RMSe - RRSe ) - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,Const ) ) ,CRS ) - ( ACS + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( ( DS - RRSe ) + ( MUC / ( Max( MLU,RMSe ) / ( MUR - MLU ) ) ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_CPU_Server ) ) ) ) / AMS ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( RMSe / RMSe ) * DS ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / FirstVNF_RAM ) ,Max( Min( DDR ,( ( ( FirstVNF_RAM - ( DDR / RRS ) ) / PN ) + RRS ) ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( ( ( MUR - CS ) * Min( DS ,RCSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) / ( CRS / MRS ) )", "choosing": "( Min( ( RRSe * ( RMSe / ( CS + MUC ) ) ) ,Min( ( ( RCSe + ( MUM + MUM ) ) * MUC ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( CS - MLU ) / ( ( RRSe * ( MLU + RMSe ) ) - ( ( DS - DS ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( RRS + DDR ) ) / Max( ( FirstVNF_Mem_Server + PN ),( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( Min( ( MUR - RCSe ) ,RCSe ) * MUC ),MUC ) + RMSe ) ) ) - Max( ( Max( MUC,( ( RMSe * ( ( RRSe - RMSe ) + DS ) ) - ( ( MUM + MUR ) + MUR ) ) ) / ( ( Max( RCSe,RCSe ) - MUR ) * RRSe ) ),( CS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,Min( RRS ,PN ) )", "choosing": "Min( ( RMSe + Max( Max( RCSe,Min( DS ,MUC ) ),MLU ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server - ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * Max( MUM,( MUM * ( CS * ( RCSe + RRSe ) ) ) ) ) / ( CS * RCSe ) ),( ( RCSe * DS ) + Max( MUM,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * AMS ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( Max( RRSe,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Min( Max( ACS,PN ) ,( ( ( FirstVNF_Mem_Server + DDR ) - AMS ) - ( MDR / BR ) ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( Max( ACS,( PN * ( FirstVNF_Mem_Server - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) ) )", "choosing": "( ( Min( CS ,Min( RRSe ,RCSe ) ) * ( DS - Min( MLU ,( MLU + Min( CS ,RMSe ) ) ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ACS * Max( ARS,ACS ) ) ) )", "choosing": "( ( MUC / MUR ) * ( Min( ( Min( CS ,MUC ) - Max( Max( RCSe,( Max( RMSe,MLU ) - ( MUM - RRSe ) ) ),( MLU + ( MLU + ( CS / CS ) ) ) ) ) ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) / ( ( ARS - RRS ) / ( BR - MRS ) ) ) - ( ( ( ACS / BR ) * Const ) * FirstVNF_Mem ) )", "choosing": "Min( ( CS / ( RCSe - ( MUR / ( ( MUM / MUM ) + RMSe ) ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) ) ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Max( ( CS * MUR ),MUC ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / BR )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( ( MUR - MUM ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS - CRS ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) * ( AMS + BR ) ) ) ,CRS ) - Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( CRS ,( ARS + FirstVNF_RAM_Server ) ) ) ) ,Max( ACS,DDR ) ) )", "choosing": "( Max( ( ( MUR / DS ) * RCSe ),CS ) * ( MUC / ( RRSe / ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( ACS - CRS ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( Max( RMSe,MUC ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - ( ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) + AMS ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,( ( FirstVNF_Mem_Server + DDR ) - AMS ) ) ) + Min( Max( ACS,PN ) ,Max( ARS,CRS ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( RMSe,( MLU + Min( CS ,RMSe ) ) ) + RMSe ) ) ) - ( CS - Max( ( RMSe * ( ( MUR + RCSe ) - ( Max( MUM,MUM ) * Min( CS ,( RMSe / MUC ) ) ) ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ( Max( Const,( ( RRS - ARS ) + FirstVNF_Mem_Server ) ) / MDR ) ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * ( ARS * FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + CS ) ),Max( RRSe,Max( MLU,( ( CS - MUC ) / MLU ) ) ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,( ( PN * ACS ) + ARS ) ),( AMS - RRS ) ) ) )", "choosing": "( Max( Min( ( MUM + CS ) ,Min( ( RCSe + CS ) ,( ( Max( ( MUR + CS ),RCSe ) + ( ( DS / MUM ) / RMSe ) ) * RRSe ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( Const * MDR ) ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( MUC - Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ARS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe + ( RMSe * DS ) ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + Min( Max( ACS,PN ) ,Max( RRS,( ( ACS - FirstVNF_RAM ) + FirstVNF_CPU_Server ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( RCSe - MUR ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - MLU ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + ( CRS / AMS ) ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + Max( DDR,FirstVNF_RAM_Server ) ) / ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( BR + FirstVNF_CPU ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - Max( ( Max( RRSe,MLU ) * RMSe ),Max( ( ( RRSe * MUR ) + ( CS - DS ) ),MUR ) ) ) ) ) - Min( Min( Min( RMSe ,( RRSe - ( ( ( RCSe * MUR ) + Max( MLU,MUR ) ) / DS ) ) ) ,( ( RRSe + ( RRSe * ( ( RRSe / RMSe ) + ( MUC - RMSe ) ) ) ) - ( MUR * ( ( ( DS + DS ) * Max( MUM,MUM ) ) * RRSe ) ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.5871743486973948, "obj2": 0.2914833650715554}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + Max( FirstVNF_Mem,Max( MRS,AMS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUC - RCSe ) / RRSe ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.8336673346693386, "obj2": 0.06170578741760337}, {"determining": "Min( Min( FirstVNF_Mem ,( Max( PN,FirstVNF_CPU ) / ( ACS + Min( MDR ,FirstVNF_Mem ) ) ) ) ,( ( ( PN * FirstVNF_Mem ) - ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUM,( MUC / MUC ) ) * Max( RRSe,Max( MLU,( ( Min( RRSe ,CS ) - MUM ) / MLU ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.8997995991983968, "obj2": 0.03922385037821547}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + Max( FirstVNF_Mem,Max( MRS,AMS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUC - RCSe ) / RRSe ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.8016032064128257, "obj2": 0.08118508844554545}, {"determining": "( Max( Min( DDR ,Const ),( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * RMSe ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.9458917835671342, "obj2": 0.0173616041145395}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Const ) )", "choosing": "( ( MLU - Min( DS ,MUM ) ) + ( RRSe * MUM ) )", "obj1": 0.6953907815631263, "obj2": 0.17158246420487758}, {"determining": "Min( Min( Min( Min( ( ARS * FirstVNF_Mem_Server ) ,( ( RRS - ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) ) + FirstVNF_Mem_Server ) ) ,Max( Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,Max( PN,BR ) ) ,DDR ) ),RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( ( RRSe + ( ( CS - MUM ) / MLU ) ) + RRSe ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.9038076152304609, "obj2": 0.03772736378955896}, {"determining": "( Max( AMS,( MDR * ARS ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RCSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / ( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 0.7194388777555111, "obj2": 0.1488376737401068}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( FirstVNF_RAM_Server * RRS ) - DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( Max( MUM,RRSe ) + ( MUR + ( Min( ( ( MUC - CS ) * DS ) ,Min( RRSe ,CS ) ) / Min( CS ,Max( ( MUR + MUM ),Min( MUC ,RMSe ) ) ) ) ) ) / ( CS * RCSe ) ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.7935871743486974, "obj2": 0.09507359304495373}, {"determining": "( Min( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( ( ( MDR / FirstVNF_Mem_Server ) + FirstVNF_RAM ) + ( ( Const * RRS ) - DDR ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / ( BR * BR ) ) )", "choosing": "( Min( ( ( RCSe * RCSe ) - Max( MLU,MLU ) ) ,RCSe ) + ( Min( ( ( MUC - CS ) * DS ) ,Min( RRSe ,CS ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7735470941883767, "obj2": 0.10928360440574754}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( ( ARS - MRS ) + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) ) )", "obj1": 0.6773547094188377, "obj2": 0.19733532012906227}, {"determining": "( Max( AMS,( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( ARS - MRS ),MRS ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RRSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7695390781563126, "obj2": 0.12469268722238876}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 0.9779559118236473, "obj2": 0.008723209636202442}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) * Max( ARS,RRS ) ) )", "choosing": "( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( ( RRS - ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( RMSe * Max( RRSe,Max( MLU,( Min( ( ( RRSe + RCSe ) + RRSe ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) ) / MLU ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.9619238476953907, "obj2": 0.017311906136513212}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,Max( Min( Const ,FirstVNF_Mem ),Max( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RRSe + MUC ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) ) * Min( Max( ( Min( DS ,CS ) * ( RRSe * ( ( MUC + RCSe ) / MUM ) ) ),( RMSe - MUM ) ) ,RCSe ) )", "obj1": 0.6733466933867736, "obj2": 0.22164536289749442}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( Min( Const ,FirstVNF_Mem ) - ( BR + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( Max( ( ( RRSe - RCSe ) - DS ),Max( MUR,Max( MUC,MUR ) ) ) ,DS ) ) + ( RRSe * MUM ) )", "obj1": 0.6933867735470942, "obj2": 0.18935329231597317}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + ( ( Min( ( ACS * DDR ) ,( PN * FirstVNF_RAM_Server ) ) - MDR ) + FirstVNF_RAM ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUR / CS ) + ( ( ( Max( ( MLU - ( MUR * RMSe ) ),( RMSe + Min( MLU ,MUM ) ) ) + CS ) * RMSe ) + MUR ) )", "obj1": 0.7434869739478958, "obj2": 0.13889278580389944}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) * Max( ( ( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) - PN ) + MRS ),MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( RMSe * MUC ) ) + ( ( ( ( MUC / DS ) * MUR ) + ( MUM + MLU ) ) / Max( ( RMSe + CS ),( MUR * MUC ) ) ) )", "obj1": 0.5991983967935872, "obj2": 0.28362744689028313}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / ( ( ( MDR + FirstVNF_Mem ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( ( RCSe * CS ) * ( CS / DS ) ),Max( ( RCSe / MUR ),DS ) ) - RCSe ) )", "obj1": 0.6472945891783567, "obj2": 0.23312389817238618}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( CRS + AMS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) * Min( ( ( Max( MLU,RMSe ) / DS ) + MUC ) ,RCSe ) )", "obj1": 0.625250501002004, "obj2": 0.25453887116318025}, {"determining": "Min( ( ( PN - PN ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ,( FirstVNF_CPU / ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * ( ( RRS * AMS ) * ( ( MDR * DDR ) / Const ) ) ) ) ) )", "choosing": "Min( Max( ( CS / Min( RMSe ,( MUM - ( Max( DS,CS ) * CS ) ) ) ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Min( Max( ( MLU / RRSe ),DS ) ,( ( MUC / ( CS / ( MUC / MUM ) ) ) * RCSe ) ) ) )", "obj1": 0.6092184368737475, "obj2": 0.2688980845104004}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * Max( ( Const / FirstVNF_CPU ),ARS ) ) ) ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + ( MLU + MUR ) ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Min( Max( ( MLU / RRSe ),DS ) ,( ( RMSe / RRSe ) / CS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.2781164669631867}, {"determining": "Min( Min( Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,( RRS - Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,DDR ) ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( MUM + ( MUC * RMSe ) ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6452905811623246, "obj2": 0.24477053866497514}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( BR ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6913827655310621, "obj2": 0.19473556739587514}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6172344689378757, "obj2": 0.2594060956258364}, {"determining": "( Min( FirstVNF_RAM_Server ,ACS ) * ( Min( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) ,( ( ARS * Const ) * ( ( Const - AMS ) - FirstVNF_Mem ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) ) )", "choosing": "( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + Max( ( RCSe + ( MLU / Min( Min( MUR ,MUM ) ,( MLU / RRSe ) ) ) ),Min( ( RMSe * MUR ) ,Max( Max( ( RCSe + MUC ),DS ),CS ) ) ) ) ) / Max( Min( Min( Max( MUC,MUC ) ,DS ) ,( MLU / RCSe ) ),( RMSe / MUM ) ) )", "obj1": 0.7314629258517034, "obj2": 0.14111835374777787}, {"determining": "( Max( AMS,( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( ARS - MRS ),MRS ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RRSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7274549098196392, "obj2": 0.1451926435517585}, {"determining": "Min( ( ( ARS * AMS ) - Min( BR ,Min( ( Min( ( FirstVNF_CPU_Server - PN ) ,( ARS * ( MDR - FirstVNF_Mem ) ) ) + AMS ) ,( BR / RRS ) ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),Min( Min( RCSe ,Min( Max( RMSe,Max( MUC,RCSe ) ) ,MUC ) ) ,RRSe ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6152304609218436, "obj2": 0.2656331275997212}, {"determining": "Min( ( ARS * ( FirstVNF_RAM - Min( ( FirstVNF_RAM + ( FirstVNF_CPU + ( FirstVNF_CPU_Server + Const ) ) ) ,DDR ) ) ) ,Min( Max( ( DDR - ARS ),Max( PN,FirstVNF_CPU ) ) ,Max( Min( Const ,FirstVNF_Mem ),( ( Max( DDR,MDR ) - ( MRS * ACS ) ) / DDR ) ) ) )", "choosing": "( ( RRSe * Max( ( ( RRSe - RCSe ) - DS ),( RCSe * Max( RRSe,CS ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.6673346693386774, "obj2": 0.2293720761518246}, {"determining": "( Min( ( FirstVNF_CPU + DDR ) ,( MDR / BR ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( ( ( MUC - DS ) / MUM ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + ( RRSe + MUM ) ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6352705410821643, "obj2": 0.24928210140287277}, {"determining": "Min( Min( Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Max( Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,Max( PN,BR ) ) ,DDR ) ),RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( ( RRSe + RCSe ) + RRSe ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6593186372745491, "obj2": 0.2314851205119986}, {"determining": "( ( ( ( ACS * ARS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( DDR * ( FirstVNF_CPU_Server / MRS ) ) )", "choosing": "( ( ( MUC - DS ) / Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / Min( MUM ,DS ) ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6713426853707415, "obj2": 0.22177940772660956}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( Min( ( MUM * ( ( ( MUM / MLU ) * MUC ) / Max( RRSe,MUR ) ) ) ,( ( RRSe + ( RRSe * ( RRSe + ( MUC - RMSe ) ) ) ) - ( MUR * MUM ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * AMS ) - Min( Min( FirstVNF_RAM_Server ,ACS ) ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( ( RMSe / MUM ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "Min( Min( Min( Min( ARS ,Max( BR,Min( DDR ,Const ) ) ) ,BR ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Min( Min( MUC ,RMSe ) ,( CS - ( MUR - ( RRSe - CS ) ) ) ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6633266533066132, "obj2": 0.23044836603149968}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,Max( Min( ( ARS * FirstVNF_Mem_Server ) ,FirstVNF_Mem ),( ( Max( ARS,PN ) - MRS ) / ( ( RRS - ( Max( Const,BR ) - Min( CRS ,DDR ) ) ) + ARS ) ) ) ) )", "choosing": "( Max( ( RRSe + MUC ),( Max( Max( ( DS - ( CS + RMSe ) ),( ( Min( CS ,MLU ) / CS ) / MLU ) ),MUC ) * RCSe ) ) * Min( MUM ,CS ) )", "obj1": 0.6392785571142284, "obj2": 0.24734863400506957}, {"determining": "( Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( BR + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + ( RRSe * ( RCSe * MLU ) ) )", "obj1": 0.9939879759519038, "obj2": 0.0018735535759129417}, {"determining": "Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) )", "choosing": "Min( Max( ( DS + MUC ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6372745490981964, "obj2": 0.24900201044874964}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,Max( Min( ( ARS * FirstVNF_Mem_Server ) ,FirstVNF_Mem ),( ( Max( ARS,PN ) - MRS ) / ( ( RRS - ( Max( Const,BR ) - Min( CRS ,DDR ) ) ) + ARS ) ) ) ) )", "choosing": "( Max( ( RRSe + MUC ),( Max( Max( ( DS - ( CS + RMSe ) ),( ( Min( CS ,MLU ) / CS ) / MLU ) ),MUC ) * RCSe ) ) * Min( MUM ,CS ) )", "obj1": 0.6392785571142284, "obj2": 0.24734863400506957}, {"determining": "( ( DDR + CRS ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( ( Max( MDR,MRS ) - Max( MDR,BR ) ),BR ) ) ) )", "choosing": "Min( ( DS - ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) * MUC ) ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0013159967010323039}, {"determining": "( ( DDR + CRS ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( ( CRS - ARS ),BR ) ) ) )", "choosing": "Min( ( DS - ( MLU * MUC ) ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0013159967010323039}, {"determining": "( Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( ( FirstVNF_CPU + ARS ) - ( BR + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + ( RRSe * ( ( RCSe / MUR ) * MLU ) ) )", "obj1": 0.9939879759519038, "obj2": 0.0018735535759129417}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * ( FirstVNF_Mem + Const ) ) ) ) / AMS ) ) * Min( ( ( DDR + DDR ) / PN ) ,Min( CRS ,BR ) ) )", "choosing": "( ( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + MLU ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,DDR ) ),Max( FirstVNF_RAM_Server,Min( ARS ,( FirstVNF_CPU_Server - Const ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Min( ( MUC / ( Min( DS ,RRSe ) * MUM ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + ( AMS - RRS ) ) * ( Min( MDR ,ARS ) - Max( FirstVNF_Mem,ACS ) ) )", "choosing": "( Min( ( Max( ( MUR + RRSe ),MLU ) * Min( ( CS * DS ) ,( MUM + RMSe ) ) ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Const + RRS ) - ( Min( BR ,( AMS - RRS ) ) + RRS ) ),( AMS / Const ) ) * FirstVNF_Mem_Server ) * ( Min( ( ( DDR + DDR ) / PN ) ,Min( CRS ,BR ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR - MLU ) * MUR ) + ( DS + MLU ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,CS ) + MUC ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Const ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( ( ( MUR - MUM ) * MLU ),MUC ) + RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - ( ( ( MUR + MLU ) + ( ( Max( MLU,RMSe ) / DS ) + MUC ) ) - MLU ) ) ,DS ) + ( RMSe - ( MUC * Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( ( ( RRSe - DS ) * Max( MLU,MLU ) ) * DS ) ) / ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,( RCSe / ( Min( ( ( Max( RCSe,MUR ) - Min( DS ,DS ) ) / Min( MLU ,Min( MUM ,DS ) ) ) ,MUR ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,Max( Min( FirstVNF_Mem ,Min( MDR ,( PN * MRS ) ) ),( MRS * MRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( ( Max( RRSe,( MUM - CS ) ) * Min( ( DS - RCSe ) ,RMSe ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ( CRS - FirstVNF_Mem ) ) ,( ( CRS / RRS ) + Max( MDR,( FirstVNF_RAM / ( ARS - Min( Max( CRS,RRS ) ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + Min( ( ( RMSe - RCSe ) + Max( ( MUR * CS ),DS ) ) ,CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( ( ( ( Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,ARS ) ) * CRS ) + RRS ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( ( Min( MUM ,( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) ) / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( ( ( RRSe * ( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * ( ( MUR + ( MUC + CS ) ) - ( RCSe / Max( MLU,CS ) ) ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( ( ( PN / ACS ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) + MUC ) / MUR ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + ( CRS + PN ) ) ) ) ,CRS ) - ( ( PN + FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( MLU + RRSe ) * ( MLU / ( DS * ( DS * Min( RMSe ,CS ) ) ) ) ) * RRSe ) ,( MUR - MUM ) ) * ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( ( CRS - ARS ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * MUM ),( ( Max( DS,( ( ( ( RRSe * RRSe ) + MUC ) + DS ) - RCSe ) ) - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,Min( MRS ,AMS ) ) ,( DDR - FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Max( Max( ( ( ( MLU + MUR ) + RRSe ) - RMSe ),Min( RMSe ,( RRSe - ( ( ( DS + CS ) + ( CS - RRSe ) ) / DS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - PN ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( DS / RRSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,Min( Const ,Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) ) ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM * MRS ) )", "choosing": "( ( Min( Max( ( RRSe * MUM ),MUC ) ,( Max( MUM,Max( MUC,( Max( MLU,DS ) * Min( RMSe ,RMSe ) ) ) ) + MUR ) ) - ( ( ( RMSe + DS ) - ( MUC * RRSe ) ) * ( MLU / RCSe ) ) ) - ( ( DS / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( FirstVNF_Mem / PN ) ,( ( DDR * FirstVNF_RAM_Server ) - RRS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( Min( MLU ,CS ) - MUC ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - FirstVNF_Mem ) + ( Min( FirstVNF_CPU ,MDR ) * Min( Min( CRS ,FirstVNF_RAM ) ,( MDR * ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),( ( RCSe * DS ) + Max( MUM,( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,( ( ( RRSe * RCSe ) - ( MUR * MLU ) ) * ( Max( ( ( RCSe * CS ) * ( CS / DS ) ),Max( ( RCSe / MUR ),DS ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( Min( Max( Min( ACS ,FirstVNF_CPU ),MDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RRSe + ( MUC * MUM ) ),MLU ) * MUR ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( ( FirstVNF_CPU_Server + ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( DDR * FirstVNF_RAM ) ) + ACS ) * ( ( AMS * FirstVNF_CPU ) / DDR ) ) - FirstVNF_CPU ) ) + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( RRSe / MUM ) - ( ( RMSe - RRSe ) - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,Const ) ) ,CRS ) - ( ACS + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( ( DS - RRSe ) + ( MUC / ( Max( MLU,RMSe ) / ( MUR - MLU ) ) ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_CPU_Server ) ) ) ) / AMS ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( RMSe / RMSe ) * DS ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / FirstVNF_RAM ) ,Max( Min( DDR ,( ( ( FirstVNF_RAM - ( DDR / RRS ) ) / PN ) + RRS ) ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( ( ( MUR - CS ) * Min( DS ,RCSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) / ( CRS / MRS ) )", "choosing": "( Min( ( RRSe * ( RMSe / ( CS + MUC ) ) ) ,Min( ( ( RCSe + ( MUM + MUM ) ) * MUC ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( CS - MLU ) / ( ( RRSe * ( MLU + RMSe ) ) - ( ( DS - DS ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( RRS + DDR ) ) / Max( ( FirstVNF_Mem_Server + PN ),( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( Min( ( MUR - RCSe ) ,RCSe ) * MUC ),MUC ) + RMSe ) ) ) - Max( ( Max( MUC,( ( RMSe * ( ( RRSe - RMSe ) + DS ) ) - ( ( MUM + MUR ) + MUR ) ) ) / ( ( Max( RCSe,RCSe ) - MUR ) * RRSe ) ),( CS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,Min( RRS ,PN ) )", "choosing": "Min( ( RMSe + Max( Max( RCSe,Min( DS ,MUC ) ),MLU ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server - ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * Max( MUM,( MUM * ( CS * ( RCSe + RRSe ) ) ) ) ) / ( CS * RCSe ) ),( ( RCSe * DS ) + Max( MUM,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * AMS ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( Max( RRSe,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Min( Max( ACS,PN ) ,( ( ( FirstVNF_Mem_Server + DDR ) - AMS ) - ( MDR / BR ) ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( Max( ACS,( PN * ( FirstVNF_Mem_Server - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) ) )", "choosing": "( ( Min( CS ,Min( RRSe ,RCSe ) ) * ( DS - Min( MLU ,( MLU + Min( CS ,RMSe ) ) ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ACS * Max( ARS,ACS ) ) ) )", "choosing": "( ( MUC / MUR ) * ( Min( ( Min( CS ,MUC ) - Max( Max( RCSe,( Max( RMSe,MLU ) - ( MUM - RRSe ) ) ),( MLU + ( MLU + ( CS / CS ) ) ) ) ) ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) / ( ( ARS - RRS ) / ( BR - MRS ) ) ) - ( ( ( ACS / BR ) * Const ) * FirstVNF_Mem ) )", "choosing": "Min( ( CS / ( RCSe - ( MUR / ( ( MUM / MUM ) + RMSe ) ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) ) ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Max( ( CS * MUR ),MUC ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / BR )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( ( MUR - MUM ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS - CRS ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) * ( AMS + BR ) ) ) ,CRS ) - Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( CRS ,( ARS + FirstVNF_RAM_Server ) ) ) ) ,Max( ACS,DDR ) ) )", "choosing": "( Max( ( ( MUR / DS ) * RCSe ),CS ) * ( MUC / ( RRSe / ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( ACS - CRS ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( Max( RMSe,MUC ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_CPU_Server - ( ( Max( BR,FirstVNF_CPU ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) + AMS ) ) ,Const ) ,( ( MDR * FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( RMSe - MLU ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,( ( FirstVNF_Mem_Server + DDR ) - AMS ) ) ) + Min( Max( ACS,PN ) ,Max( ARS,CRS ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( RMSe,( MLU + Min( CS ,RMSe ) ) ) + RMSe ) ) ) - ( CS - Max( ( RMSe * ( ( MUR + RCSe ) - ( Max( MUM,MUM ) * Min( CS ,( RMSe / MUC ) ) ) ) ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ( Max( Const,( ( RRS - ARS ) + FirstVNF_Mem_Server ) ) / MDR ) ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * ( ARS * FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + CS ) ),Max( RRSe,Max( MLU,( ( CS - MUC ) / MLU ) ) ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,( ( PN * ACS ) + ARS ) ),( AMS - RRS ) ) ) )", "choosing": "( Max( Min( ( MUM + CS ) ,Min( ( RCSe + CS ) ,( ( Max( ( MUR + CS ),RCSe ) + ( ( DS / MUM ) / RMSe ) ) * RRSe ) ) ),MUC ) * ( MUR / ( Max( RMSe,MUC ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - ( Const * MDR ) ) * ( Min( Min( PN ,FirstVNF_RAM_Server ) ,Min( BR ,Const ) ) / ( Min( FirstVNF_CPU ,MRS ) + ( AMS + ARS ) ) ) )", "choosing": "( MUC - Max( RMSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * ARS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe + ( RMSe * DS ) ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + BR ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe - MLU ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + ( CRS / AMS ) ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + Max( DDR,FirstVNF_RAM_Server ) ) / ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( BR + FirstVNF_CPU ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - Max( ( Max( RRSe,MLU ) * RMSe ),Max( ( ( RRSe * MUR ) + ( CS - DS ) ),MUR ) ) ) ) ) - Min( Min( Min( RMSe ,( RRSe - ( ( ( RCSe * MUR ) + Max( MLU,MUR ) ) / DS ) ) ) ,( ( RRSe + ( RRSe * ( ( RRSe / RMSe ) + ( MUC - RMSe ) ) ) ) - ( MUR * ( ( ( DS + DS ) * Max( MUM,MUM ) ) * RRSe ) ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.5871743486973948, "obj2": 0.2914833650715554}, {"determining": "( ( DDR + CRS ) - ( ( ( MDR * DDR ) / ( Min( Max( DDR,FirstVNF_Mem_Server ) ,( ( ( Const + PN ) - ( FirstVNF_CPU_Server / ACS ) ) + FirstVNF_CPU_Server ) ) / MDR ) ) + ( Max( MDR,MRS ) - Max( ( CRS - ARS ),BR ) ) ) )", "choosing": "Min( Max( ( Min( ( RRSe * ( RMSe * ( RMSe / Max( RMSe,RCSe ) ) ) ) ,( RCSe - RCSe ) ) / MUC ),MLU ) ,( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) )", "obj1": 0.8637274549098196, "obj2": 0.0529387488694028}, {"determining": "Min( Min( Min( Min( ( ARS * FirstVNF_Mem_Server ) ,( ( RRS - ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) ) + FirstVNF_Mem_Server ) ) ,Max( Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,( BR / RRS ) ) ,Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,Max( PN,BR ) ) ,DDR ) ),RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( ( RRSe + ( ( CS - MUM ) / MLU ) ) + RRSe ) ,( ( MUM / RRSe ) * ( DS / Min( Min( RCSe ,Min( Max( RMSe,Max( MUC,RCSe ) ) ,MUC ) ) ,RRSe ) ) ) )", "obj1": 0.9278557114228457, "obj2": 0.027113639767952}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + Max( FirstVNF_Mem,Max( MRS,AMS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUC - RCSe ) / RRSe ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.8336673346693386, "obj2": 0.06170578741760337}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ( Max( FirstVNF_CPU,MRS ) - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( Max( MUM,RRSe ) + ( MUR + ( Min( ( ( MUC - CS ) * DS ) ,Min( RRSe ,CS ) ) / ( ( MUM / RRSe ) * ( DS / RRSe ) ) ) ) ) / ( CS * RCSe ) ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.7935871743486974, "obj2": 0.0945791663082914}, {"determining": "( Min( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( ( ( MDR / FirstVNF_Mem_Server ) + FirstVNF_RAM ) + ( ( Const * RRS ) - DDR ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / ( BR * BR ) ) )", "choosing": "( Min( ( ( RCSe * RCSe ) - Max( MLU,MLU ) ) ,RCSe ) + ( Min( ( ( MUC - CS ) * DS ) ,Min( RRSe ,CS ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7735470941883767, "obj2": 0.10928360440574754}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + Max( FirstVNF_Mem,Max( MRS,AMS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUC - RCSe ) / RRSe ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.8016032064128257, "obj2": 0.08118508844554545}, {"determining": "( Max( AMS,( MDR * ARS ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RCSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / ( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 0.7194388777555111, "obj2": 0.1488376737401068}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( RRSe * RMSe ) / ( MLU * MUC ) ) + ( Min( ( ( MUC - CS ) * DS ) ,Min( RRSe ,CS ) ) / ( MUC / RRSe ) ) )", "obj1": 0.8196392785571143, "obj2": 0.07017599316520579}, {"determining": "Min( Min( Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Max( Min( Min( ( CRS * AMS ) ,Const ) ,Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,Max( PN,BR ) ) ,DDR ) ),FirstVNF_RAM_Server ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( RRSe / ( DS * CS ) ) ,( ( MUM / MLU ) * ( DS / RRSe ) ) )", "obj1": 0.6472945891783567, "obj2": 0.22921497583872344}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + Max( ARS,RRS ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUR / ( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) ) ) + ( ( RRSe - ( RRSe + Max( CS,( ( MUC * ( RCSe * MUR ) ) - RCSe ) ) ) ) / ( MUC / RRSe ) ) )", "obj1": 0.6993987975951904, "obj2": 0.16813808628010551}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( ( ARS - MRS ) + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) ) )", "obj1": 0.6773547094188377, "obj2": 0.19733532012906227}, {"determining": "Min( Min( FirstVNF_Mem ,( Max( PN,FirstVNF_CPU ) / ( ACS + Min( MDR ,FirstVNF_Mem ) ) ) ) ,( ( ( PN * FirstVNF_Mem ) - ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUM,( MUC / MUC ) ) * Max( RRSe,Max( MLU,( ( Min( RRSe ,CS ) - MUM ) / MLU ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.8857715430861723, "obj2": 0.044967783667863186}, {"determining": "( Max( AMS,( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( ARS - MRS ),MRS ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RRSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7695390781563126, "obj2": 0.12469268722238876}, {"determining": "( Max( Min( DDR ,Const ),( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * RMSe ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.9458917835671342, "obj2": 0.0173616041145395}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 0.9779559118236473, "obj2": 0.008723209636202442}, {"determining": "( Min( ( Min( FirstVNF_RAM ,Const ) / Min( DDR ,FirstVNF_Mem_Server ) ) ,( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( FirstVNF_CPU_Server - MDR ) * Max( ARS,RRS ) ) )", "choosing": "( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7575150300601202, "obj2": 0.13506723036189897}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( ( RRS - ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) ) + FirstVNF_CPU ) )", "choosing": "( ( RMSe * Max( RRSe,Max( MLU,( Min( ( ( RRSe + RCSe ) + RRSe ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) ) / MLU ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.9619238476953907, "obj2": 0.017311906136513212}, {"determining": "Min( Min( Min( Min( ( ARS * FirstVNF_Mem_Server ) ,( ( RRS - ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) ) + FirstVNF_Mem_Server ) ) ,Max( Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,Max( PN,BR ) ) ,DDR ) ),RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( ( RRSe + ( ( CS - MUM ) / MLU ) ) + RRSe ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.9038076152304609, "obj2": 0.03772736378955896}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,Max( Min( Const ,FirstVNF_Mem ),Max( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RRSe + MUC ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) ) * Min( Max( ( Min( DS ,CS ) * ( RRSe * ( ( MUC + RCSe ) / MUM ) ) ),( RMSe - MUM ) ) ,RCSe ) )", "obj1": 0.6733466933867736, "obj2": 0.22164536289749442}, {"determining": "( ( ( ( ACS * ARS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( DDR * ( FirstVNF_CPU_Server / MRS ) ) )", "choosing": "( ( ( MUC - DS ) / Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / Min( MUM ,DS ) ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6713426853707415, "obj2": 0.22177940772660956}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Const ) )", "choosing": "( ( MLU - Min( DS ,MUM ) ) + ( RRSe * MUM ) )", "obj1": 0.6953907815631263, "obj2": 0.17158246420487758}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + ( ( Min( ( ACS * DDR ) ,( PN * FirstVNF_RAM_Server ) ) - MDR ) + FirstVNF_RAM ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUR / CS ) + ( ( ( Max( ( MLU - ( MUR * RMSe ) ),( RMSe + Min( MLU ,MUM ) ) ) + CS ) * RMSe ) + MUR ) )", "obj1": 0.7434869739478958, "obj2": 0.13889278580389944}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) * Max( ( ( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) - PN ) + MRS ),MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( RMSe * MUC ) ) + ( ( ( ( MUC / DS ) * MUR ) + ( MUM + MLU ) ) / Max( ( RMSe + CS ),( MUR * MUC ) ) ) )", "obj1": 0.5991983967935872, "obj2": 0.28362744689028313}, {"determining": "Min( ( ( PN - PN ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ,( FirstVNF_CPU / ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * ( ( RRS * AMS ) * ( ( MDR * DDR ) / Const ) ) ) ) ) )", "choosing": "Min( Max( ( CS / Min( RMSe ,( MUM - ( Max( DS,CS ) * CS ) ) ) ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Min( Max( ( MLU / RRSe ),DS ) ,( ( MUC / ( CS / ( MUC / MUM ) ) ) * RCSe ) ) ) )", "obj1": 0.6092184368737475, "obj2": 0.2688980845104004}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * Max( ( Const / FirstVNF_CPU ),ARS ) ) ) ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + ( MLU + MUR ) ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Min( Max( ( MLU / RRSe ),DS ) ,( ( RMSe / RRSe ) / CS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.2781164669631867}, {"determining": "Min( Min( Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,( RRS - Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,DDR ) ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( MUM + ( MUC * RMSe ) ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6452905811623246, "obj2": 0.24477053866497514}, {"determining": "( ( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( BR ,RRS ) ) ) ) ) / ( MRS + FirstVNF_CPU_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + ( MUM * MLU ) ) ) ),MUR ) ,Max( MUR,RRSe ) ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6913827655310621, "obj2": 0.19473556739587514}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( Min( Const ,FirstVNF_Mem ) - ( BR + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( Max( ( ( RRSe - RCSe ) - DS ),Max( MUR,Max( MUC,MUR ) ) ) ,DS ) ) + ( RRSe * MUM ) )", "obj1": 0.6933867735470942, "obj2": 0.18935329231597317}, {"determining": "( Min( FirstVNF_RAM_Server ,ACS ) * ( Min( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) ,( ( ARS * Const ) * ( ( Const - AMS ) - FirstVNF_Mem ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) ) )", "choosing": "( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + Max( ( RCSe + ( MLU / Min( Min( MUR ,MUM ) ,( MLU / RRSe ) ) ) ),Min( ( RMSe * MUR ) ,Max( Max( ( RCSe + MUC ),DS ),CS ) ) ) ) ) / Max( Min( Min( Max( MUC,MUC ) ,DS ) ,( MLU / RCSe ) ),( RMSe / MUM ) ) )", "obj1": 0.7314629258517034, "obj2": 0.14111835374777787}, {"determining": "Min( Min( FirstVNF_Mem ,( Max( PN,FirstVNF_CPU ) / ( ACS + Min( MDR ,FirstVNF_Mem ) ) ) ) ,( ( ( PN * FirstVNF_Mem ) - ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUM,( MUC / MUC ) ) * Max( RRSe,Max( MLU,( ( Min( RRSe ,CS ) - MUM ) / MLU ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.8997995991983968, "obj2": 0.03922385037821547}, {"determining": "( Max( AMS,( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( ARS - MRS ),MRS ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RRSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7274549098196392, "obj2": 0.1451926435517585}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( CRS + AMS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) * Min( ( ( Max( MLU,RMSe ) / DS ) + MUC ) ,RCSe ) )", "obj1": 0.625250501002004, "obj2": 0.25453887116318025}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6172344689378757, "obj2": 0.2594060956258364}, {"determining": "Min( ( ( ARS * AMS ) - Min( BR ,Min( ( Min( ( FirstVNF_CPU_Server - PN ) ,( ARS * ( MDR - FirstVNF_Mem ) ) ) + AMS ) ,( BR / RRS ) ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),Min( Min( RCSe ,Min( Max( RMSe,Max( MUC,RCSe ) ) ,MUC ) ) ,RRSe ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6152304609218436, "obj2": 0.2656331275997212}, {"determining": "( Min( ( FirstVNF_CPU + DDR ) ,( MDR / BR ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( ( ( MUC - DS ) / MUM ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + ( RRSe + MUM ) ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6352705410821643, "obj2": 0.24928210140287277}, {"determining": "Min( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( CRS + AMS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( ( ( MUC - MLU ) * CS ) + CS ) ) * ( CS / RCSe ) ) * Min( ( ( Max( MLU,RMSe ) / DS ) + MUC ) ,RCSe ) )", "obj1": 0.6232464929859719, "obj2": 0.256087700351099}, {"determining": "Min( ( ( ARS * ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) ) - Min( BR ,Min( ( Min( ( FirstVNF_CPU_Server - PN ) ,( ARS * ( MDR - FirstVNF_Mem ) ) ) + AMS ) ,( BR / RRS ) ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( Min( ( ( MUC - CS ) * DS ) ,Min( RRSe ,CS ) ) / ( MUC / RRSe ) ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6392785571142284, "obj2": 0.24486551116157007}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * AMS ) - Min( Min( FirstVNF_RAM_Server ,ACS ) ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( ( RMSe / MUM ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) )", "choosing": "Min( Max( ( DS + MUC ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6372745490981964, "obj2": 0.24900201044874964}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( Min( ( MUM * ( ( ( MUM / MLU ) * MUC ) / Max( RRSe,MUR ) ) ) ,( ( RRSe + ( RRSe * ( RRSe + ( MUC - RMSe ) ) ) ) - ( MUR * MUM ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) ) ) )", "choosing": "( ( MLU - Min( Max( ( ( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) - DS ),Max( MUR,Max( MUC,MUR ) ) ) ,DS ) ) + ( RRSe * MUM ) )", "obj1": 0.6933867735470942, "obj2": 0.18935329231597317}, {"determining": "( Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( ARS * Max( FirstVNF_CPU,MRS ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( ( MLU * ( DS / RRSe ) ) + MUM ) + ( RRSe * ( RCSe * MLU ) ) )", "obj1": 0.9919839679358717, "obj2": 0.0028117105380413426}, {"determining": "Min( Min( Min( Min( ( ARS * FirstVNF_Mem_Server ) ,( ( RRS - ( Max( ACS,AMS ) * ( MDR + DDR ) ) ) + FirstVNF_Mem_Server ) ) ,Max( Min( Min( ( CRS - ARS ) ,Const ) ,Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,Max( PN,BR ) ) ,DDR ) ),RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( ( RRSe + ( ( ( ( MLU - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) - MUM ) / ( MUR + RCSe ) ) ) + RRSe ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.9018036072144289, "obj2": 0.03896618588200013}, {"determining": "( ( DDR + CRS ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( ( Min( FirstVNF_RAM_Server ,AMS ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ),BR ) ) ) )", "choosing": "Min( ( DS - ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) * MUC ) ) ,Min( ( ( CS + CS ) * CS ) ,( MUM * MLU ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0013159967010323039}, {"determining": "( ( DDR + CRS ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( ( Max( MDR,MRS ) - Max( MDR,BR ) ),BR ) ) ) )", "choosing": "Min( ( DS - ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) * MUC ) ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0013159967010323039}, {"determining": "( Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( ( FirstVNF_CPU + ARS ) - ( BR + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + ( RRSe * ( ( RCSe / MUR ) * MLU ) ) )", "obj1": 0.9939879759519038, "obj2": 0.0018735535759129417}, {"determining": "( Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( BR + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + ( RRSe * ( RCSe * MLU ) ) )", "obj1": 0.9939879759519038, "obj2": 0.0018735535759129417}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - MLU ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * ( FirstVNF_Mem + Const ) ) ) ) / AMS ) ) * Min( ( ( DDR + DDR ) / PN ) ,Min( CRS ,BR ) ) )", "choosing": "( ( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + MLU ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,DDR ) ),Max( FirstVNF_RAM_Server,Min( ARS ,( FirstVNF_CPU_Server - Const ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Min( ( MUC / ( Min( DS ,RRSe ) * MUM ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + ( AMS - RRS ) ) * ( Min( MDR ,ARS ) - Max( FirstVNF_Mem,ACS ) ) )", "choosing": "( Min( ( Max( ( MUR + RRSe ),MLU ) * Min( ( CS * DS ) ,( MUM + RMSe ) ) ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Const + RRS ) - ( Min( BR ,( AMS - RRS ) ) + RRS ) ),( AMS / Const ) ) * FirstVNF_Mem_Server ) * ( Min( ( ( DDR + DDR ) / PN ) ,Min( CRS ,BR ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR - MLU ) * MUR ) + ( DS + MLU ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,CS ) + MUC ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Const ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( ( ( MUR - MUM ) * MLU ),MUC ) + RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - ( ( ( MUR + MLU ) + ( ( Max( MLU,RMSe ) / DS ) + MUC ) ) - MLU ) ) ,DS ) + ( RMSe - ( MUC * Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( ( ( RRSe - DS ) * Max( MLU,MLU ) ) * DS ) ) / ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,( RCSe / ( Min( ( ( Max( RCSe,MUR ) - Min( DS ,DS ) ) / Min( MLU ,Min( MUM ,DS ) ) ) ,MUR ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,Max( Min( FirstVNF_Mem ,Min( MDR ,( PN * MRS ) ) ),( MRS * MRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( ( Max( RRSe,( MUM - CS ) ) * Min( ( DS - RCSe ) ,RMSe ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ( CRS - FirstVNF_Mem ) ) ,( ( CRS / RRS ) + Max( MDR,( FirstVNF_RAM / ( ARS - Min( Max( CRS,RRS ) ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + Min( ( ( RMSe - RCSe ) + Max( ( MUR * CS ),DS ) ) ,CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( ( ( ( Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,ARS ) ) * CRS ) + RRS ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( ( Min( MUM ,( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) ) / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( ( ( RRSe * ( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * ( ( MUR + ( MUC + CS ) ) - ( RCSe / Max( MLU,CS ) ) ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( ( ( PN / ACS ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) + MUC ) / MUR ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + ( CRS + PN ) ) ) ) ,CRS ) - ( ( PN + FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( MLU + RRSe ) * ( MLU / ( DS * ( DS * Min( RMSe ,CS ) ) ) ) ) * RRSe ) ,( MUR - MUM ) ) * ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( ( CRS - ARS ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * MUM ),( ( Max( DS,( ( ( ( RRSe * RRSe ) + MUC ) + DS ) - RCSe ) ) - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,Min( MRS ,AMS ) ) ,( DDR - FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Max( Max( ( ( ( MLU + MUR ) + RRSe ) - RMSe ),Min( RMSe ,( RRSe - ( ( ( DS + CS ) + ( CS - RRSe ) ) / DS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - PN ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( DS / RRSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,Min( Const ,Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) ) ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM * MRS ) )", "choosing": "( ( Min( Max( ( RRSe * MUM ),MUC ) ,( Max( MUM,Max( MUC,( Max( MLU,DS ) * Min( RMSe ,RMSe ) ) ) ) + MUR ) ) - ( ( ( RMSe + DS ) - ( MUC * RRSe ) ) * ( MLU / RCSe ) ) ) - ( ( DS / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( FirstVNF_Mem / PN ) ,( ( DDR * FirstVNF_RAM_Server ) - RRS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( Min( MLU ,CS ) - MUC ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - FirstVNF_Mem ) + ( Min( FirstVNF_CPU ,MDR ) * Min( Min( CRS ,FirstVNF_RAM ) ,( MDR * ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),( ( RCSe * DS ) + Max( MUM,( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,( ( ( RRSe * RCSe ) - ( MUR * MLU ) ) * ( Max( ( ( RCSe * CS ) * ( CS / DS ) ),Max( ( RCSe / MUR ),DS ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( Min( Max( Min( ACS ,FirstVNF_CPU ),MDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RRSe + ( MUC * MUM ) ),MLU ) * MUR ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( ( FirstVNF_CPU_Server + ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( DDR * FirstVNF_RAM ) ) + ACS ) * ( ( AMS * FirstVNF_CPU ) / DDR ) ) - FirstVNF_CPU ) ) + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( RRSe / MUM ) - ( ( RMSe - RRSe ) - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,Const ) ) ,CRS ) - ( ACS + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( ( DS - RRSe ) + ( MUC / ( Max( MLU,RMSe ) / ( MUR - MLU ) ) ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_CPU_Server ) ) ) ) / AMS ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( RMSe / RMSe ) * DS ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / FirstVNF_RAM ) ,Max( Min( DDR ,( ( ( FirstVNF_RAM - ( DDR / RRS ) ) / PN ) + RRS ) ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( ( ( MUR - CS ) * Min( DS ,RCSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) / ( CRS / MRS ) )", "choosing": "( Min( ( RRSe * ( RMSe / ( CS + MUC ) ) ) ,Min( ( ( RCSe + ( MUM + MUM ) ) * MUC ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( CS - MLU ) / ( ( RRSe * ( MLU + RMSe ) ) - ( ( DS - DS ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( RRS + DDR ) ) / Max( ( FirstVNF_Mem_Server + PN ),( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( Min( ( MUR - RCSe ) ,RCSe ) * MUC ),MUC ) + RMSe ) ) ) - Max( ( Max( MUC,( ( RMSe * ( ( RRSe - RMSe ) + DS ) ) - ( ( MUM + MUR ) + MUR ) ) ) / ( ( Max( RCSe,RCSe ) - MUR ) * RRSe ) ),( CS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,Min( RRS ,PN ) )", "choosing": "Min( ( RMSe + Max( Max( RCSe,Min( DS ,MUC ) ),MLU ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server - ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * Max( MUM,( MUM * ( CS * ( RCSe + RRSe ) ) ) ) ) / ( CS * RCSe ) ),( ( RCSe * DS ) + Max( MUM,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * AMS ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( Max( RRSe,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Min( Max( ACS,PN ) ,( ( ( FirstVNF_Mem_Server + DDR ) - AMS ) - ( MDR / BR ) ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( Max( ACS,( PN * ( FirstVNF_Mem_Server - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) ) )", "choosing": "( ( Min( CS ,Min( RRSe ,RCSe ) ) * ( DS - Min( MLU ,( MLU + Min( CS ,RMSe ) ) ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ACS * Max( ARS,ACS ) ) ) )", "choosing": "( ( MUC / MUR ) * ( Min( ( Min( CS ,MUC ) - Max( Max( RCSe,( Max( RMSe,MLU ) - ( MUM - RRSe ) ) ),( MLU + ( MLU + ( CS / CS ) ) ) ) ) ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) / ( ( ARS - RRS ) / ( BR - MRS ) ) ) - ( ( ( ACS / BR ) * Const ) * FirstVNF_Mem ) )", "choosing": "Min( ( CS / ( RCSe - ( MUR / ( ( MUM / MUM ) + RMSe ) ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) ) ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Max( ( CS * MUR ),MUC ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / BR )", "choosing": "( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) * ( ( MUR - MUM ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( MRS - CRS ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) * ( AMS + BR ) ) ) ,CRS ) - Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM + Min( CRS ,( ARS + FirstVNF_RAM_Server ) ) ) ) ,Max( ACS,DDR ) ) )", "choosing": "( Max( ( ( MUR / DS ) * RCSe ),CS ) * ( MUC / ( RRSe / ( CS + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( ACS - CRS ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( Max( Max( RMSe,MUC ),( RCSe + MUR ) ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + Max( MDR,MRS ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( Max( ( Min( ( RRSe * ( RMSe * ( RMSe / MUR ) ) ) ,( RCSe - RCSe ) ) / MUC ),MLU ) * ( CS / RCSe ) ) - Min( ( RMSe / MUM ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + BR ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe - MLU ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + ( CRS / AMS ) ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + Max( DDR,FirstVNF_RAM_Server ) ) / ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( BR + FirstVNF_CPU ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( MUR - Max( ( Max( RRSe,MLU ) * RMSe ),Max( ( ( RRSe * MUR ) + ( CS - DS ) ),MUR ) ) ) ) ) - Min( Min( Min( RMSe ,( RRSe - ( ( ( RCSe * MUR ) + Max( MLU,MUR ) ) / DS ) ) ) ,( ( RRSe + ( RRSe * ( ( RRSe / RMSe ) + ( MUC - RMSe ) ) ) ) - ( MUR * ( ( ( DS + DS ) * Max( MUM,MUM ) ) * RRSe ) ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.5871743486973948, "obj2": 0.2914833650715554}, {"determining": "( ( DDR + CRS ) - ( ( ( MDR * DDR ) / ( Min( Max( DDR,FirstVNF_Mem_Server ) ,( ( ( Const + PN ) - ( FirstVNF_CPU_Server / ACS ) ) + FirstVNF_CPU_Server ) ) / MDR ) ) + ( Max( MDR,MRS ) - Max( ( CRS - ARS ),BR ) ) ) )", "choosing": "Min( Max( ( Min( ( RRSe * ( RMSe * ( RMSe / Max( RMSe,RCSe ) ) ) ) ,( RCSe - RCSe ) ) / MUC ),MLU ) ,( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) )", "obj1": 0.8637274549098196, "obj2": 0.0529387488694028}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( ( ARS - MRS ) + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + MLU ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) ) )", "obj1": 0.6773547094188377, "obj2": 0.19733532012906227}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + Max( FirstVNF_Mem,Max( MRS,AMS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUC - RCSe ) / RRSe ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.8336673346693386, "obj2": 0.06170578741760337}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + Max( FirstVNF_Mem,Max( MRS,AMS ) ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( MUC - RCSe ) / RRSe ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.8016032064128257, "obj2": 0.08118508844554545}, {"determining": "( Max( AMS,( MDR * ARS ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RCSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / ( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 0.7194388777555111, "obj2": 0.1488376737401068}, {"determining": "( Min( ( FirstVNF_Mem_Server / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( RRSe * RMSe ) / ( MLU * MUC ) ) + ( Min( ( ( MUC - CS ) * DS ) ,Min( RRSe ,CS ) ) / ( MUC / RRSe ) ) )", "obj1": 0.8196392785571143, "obj2": 0.07017599316520579}, {"determining": "Min( Min( Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Max( Min( Min( ( CRS * AMS ) ,Const ) ,Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,Max( PN,BR ) ) ,DDR ) ),FirstVNF_RAM_Server ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( RRSe / ( DS * CS ) ) ,( ( MUM / MLU ) * ( DS / RRSe ) ) )", "obj1": 0.6472945891783567, "obj2": 0.22921497583872344}, {"determining": "( Max( AMS,( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RRSe ),MLU ) ) * DS ) ) / ( MUC * ( MUM + MUR ) ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.8797595190380761, "obj2": 0.042243733428180254}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + Max( ARS,RRS ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUR / ( ( ( MUM - Min( ( MUC * MUM ) ,( RCSe - DS ) ) ) - ( ( MUR - MLU ) - ( MUR / MUM ) ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) ) ) + ( ( RRSe - ( RRSe + Max( CS,( ( MUC * ( RCSe * MUR ) ) - RCSe ) ) ) ) / ( MUC / RRSe ) ) )", "obj1": 0.6993987975951904, "obj2": 0.16813808628010551}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + ( CRS + Min( ( AMS / FirstVNF_RAM ) ,Max( ( FirstVNF_Mem - MDR ),FirstVNF_RAM ) ) ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUR / DS ) + ( ( RRSe - ( RRSe + Max( CS,( ( MUC * ( RCSe * MUR ) ) - RCSe ) ) ) ) / ( MUC / RRSe ) ) )", "obj1": 0.6793587174348698, "obj2": 0.17679937417515768}, {"determining": "Min( Min( Min( Min( ( ARS * FirstVNF_Mem_Server ) ,( ( RRS - ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) ) + FirstVNF_Mem_Server ) ) ,Max( Min( Min( ( CRS - MDR ) ,Const ) ,Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,Max( PN,BR ) ) ,DDR ) ),RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( ( RRSe + ( ( ( ( MLU - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) - MUM ) / MLU ) ) + RRSe ) ,( ( MUM / RRSe ) * ( MUM - CS ) ) )", "obj1": 0.8977955911823647, "obj2": 0.03708477777740226}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ( Max( FirstVNF_CPU,MRS ) - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( Max( MUM,RRSe ) + ( MUR + ( Min( ( ( MUC - CS ) * DS ) ,Min( RRSe ,CS ) ) / ( ( MUM / RRSe ) * ( DS / RRSe ) ) ) ) ) / ( CS * RCSe ) ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.7935871743486974, "obj2": 0.0945791663082914}, {"determining": "( ( DDR + CRS ) - ( ( ( MDR * DDR ) / ( Min( Max( DDR,FirstVNF_Mem_Server ) ,( ( PN * FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) / MDR ) ) + ( Max( MDR,MRS ) - Max( ( CRS - ARS ),BR ) ) ) )", "choosing": "Min( Max( ( Min( ( RRSe * ( RMSe * ( DS / MUR ) ) ) ,( RCSe - RCSe ) ) / MUC ),MLU ) ,( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) )", "obj1": 0.7434869739478958, "obj2": 0.1275907272407192}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_RAM_Server * ( ( ( ( FirstVNF_RAM_Server * Const ) / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - ( PN - AMS ) ) * Max( ( FirstVNF_Mem + FirstVNF_RAM_Server ),Min( BR ,RRS ) ) ) ) ) - ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( Max( MUM,( MUC / MUC ) ) * Max( RRSe,Max( MLU,( ( CS - MUM ) / DS ) ) ) ) * Min( DS ,RCSe ) )", "obj1": 0.9599198396793587, "obj2": 0.015230101940206825}, {"determining": "Min( Min( Min( Min( ( ARS * FirstVNF_Mem_Server ) ,( ( RRS - ( Max( ACS,FirstVNF_RAM_Server ) * ( DDR + DDR ) ) ) + FirstVNF_Mem_Server ) ) ,Max( Min( Min( ( CRS - ARS ) ,Const ) ,Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,Max( PN,BR ) ) ,DDR ) ),RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( ( RRSe + ( ( ( ( MLU - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) - MUM ) / MLU ) ) + RRSe ) ,( ( MUM / RRSe ) * ( ( MUR + ( Min( ( ( MUC - RCSe ) * DS ) ,Min( ( MUM + MLU ) ,CS ) ) / CS ) ) / RRSe ) ) )", "obj1": 0.9198396793587175, "obj2": 0.03229934942922617}, {"determining": "( Min( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( ( ( MDR / FirstVNF_Mem_Server ) + FirstVNF_RAM ) + ( ( Const * RRS ) - DDR ) ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / ( BR * BR ) ) )", "choosing": "( Min( ( ( RCSe * RCSe ) - Max( MLU,MLU ) ) ,RCSe ) + ( Min( ( ( MUC - CS ) * DS ) ,Min( RRSe ,CS ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7735470941883767, "obj2": 0.10928360440574754}, {"determining": "( Max( AMS,( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( ARS - MRS ),MRS ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RRSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7695390781563126, "obj2": 0.12469268722238876}, {"determining": "( Min( FirstVNF_RAM_Server ,ACS ) * ( Min( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) ,( ( ARS * Const ) * ( ( Const - AMS ) - FirstVNF_Mem ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) ) )", "choosing": "( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + Max( ( RCSe + ( MLU / Min( Min( MUR ,MUM ) ,( MLU / RRSe ) ) ) ),Min( ( RMSe * MUR ) ,Max( Max( ( RCSe + MUC ),DS ),CS ) ) ) ) ) / Max( Min( Min( Max( MUC,MUC ) ,DS ) ,( MLU / RCSe ) ),( RMSe / MUM ) ) )", "obj1": 0.7314629258517034, "obj2": 0.14111835374777787}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + ( ( Min( ( ACS * DDR ) ,( PN * FirstVNF_RAM_Server ) ) - MDR ) + FirstVNF_RAM ) ),( ARS / Const ) ) ) )", "choosing": "( ( MUR / CS ) + ( ( ( Max( ( MLU - ( MUR * RMSe ) ),( RMSe + Min( MLU ,MUM ) ) ) + CS ) * RMSe ) + MUR ) )", "obj1": 0.7875751503006012, "obj2": 0.1072239530875035}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,Max( Min( Const ,FirstVNF_Mem ),Max( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( RRSe + MUC ),( Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) * RCSe ) ) * Min( Max( ( Min( DS ,CS ) * ( RRSe * ( ( MUC + RCSe ) / MUM ) ) ),( RMSe - MUM ) ) ,RCSe ) )", "obj1": 0.6733466933867736, "obj2": 0.22164536289749442}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 0.9779559118236473, "obj2": 0.008723209636202442}, {"determining": "( ( ( ( ACS * ARS ) / Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem_Server + PN ) * ( CRS / MRS ) ) ) / ( DDR * ( FirstVNF_CPU_Server / MRS ) ) )", "choosing": "( ( ( MUC - DS ) / Max( Max( ( DS - ( CS + RMSe ) ),MLU ),MUC ) ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + RCSe ),( RMSe / Min( MUM ,DS ) ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6713426853707415, "obj2": 0.22177940772660956}, {"determining": "Min( Min( Min( Min( ( ARS * FirstVNF_Mem_Server ) ,( ( RRS - ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) ) + FirstVNF_Mem_Server ) ) ,Max( Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,( BR / RRS ) ) ,Min( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,Max( PN,BR ) ) ,DDR ) ),RRS ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( ( RRSe + ( ( CS - MUM ) / MLU ) ) + RRSe ) ,( ( MUM / RRSe ) * ( DS / Min( Min( RCSe ,Min( Max( RMSe,Max( MUC,RCSe ) ) ,MUC ) ) ,RRSe ) ) ) )", "obj1": 0.9278557114228457, "obj2": 0.027113639767952}, {"determining": "( Max( RRS,FirstVNF_RAM_Server ) * Max( ( ( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) - PN ) + MRS ),MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( RMSe * MUC ) ) + ( ( ( ( MUC / DS ) * MUR ) + ( MUM + MLU ) ) / Max( ( RMSe + CS ),( MUR * MUC ) ) ) )", "obj1": 0.5991983967935872, "obj2": 0.28362744689028313}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Const ) )", "choosing": "( ( MLU - Min( DS ,MUM ) ) + ( RRSe * MUM ) )", "obj1": 0.6953907815631263, "obj2": 0.17158246420487758}, {"determining": "( ( DDR + CRS ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( ( Min( FirstVNF_RAM_Server ,AMS ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ),BR ) ) ) )", "choosing": "Min( ( DS - ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) * MUC ) ) ,Min( ( ( CS + CS ) * CS ) ,( MUM * MLU ) ) )", "obj1": 0.9418837675350702, "obj2": 0.023947515237955255}, {"determining": "Min( ( ( PN - PN ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ,( FirstVNF_CPU / ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * ( ( RRS * AMS ) * ( ( MDR * DDR ) / Const ) ) ) ) ) )", "choosing": "Min( Max( ( CS / Min( RMSe ,( MUM - ( Max( DS,CS ) * CS ) ) ) ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Min( Max( ( MLU / RRSe ),DS ) ,( ( MUC / ( CS / ( MUC / MUM ) ) ) * RCSe ) ) ) )", "obj1": 0.6092184368737475, "obj2": 0.2688980845104004}, {"determining": "( Max( Min( DDR ,Const ),( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( Const + AMS ),( ARS / Const ) ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * RMSe ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.9458917835671342, "obj2": 0.0173616041145395}, {"determining": "Min( Min( Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,( RRS - Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ,DDR ) ) ) ,Const ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( ( MUM + ( MUC * RMSe ) ) ,( ( MUM / RRSe ) * ( DS / RRSe ) ) )", "obj1": 0.6452905811623246, "obj2": 0.24477053866497514}, {"determining": "( Max( AMS,( MRS * FirstVNF_CPU_Server ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / Max( ( ARS - MRS ),MRS ) ) )", "choosing": "( ( ( ( ( RCSe / MUM ) / ( ( ( ( MUM + CS ) - DS ) * Max( Min( RRSe ,RRSe ),MLU ) ) * DS ) ) / ( MUC * RMSe ) ) / ( CS * RCSe ) ) + ( ( RRSe - ( RRSe + RCSe ) ) / ( MUC / RRSe ) ) )", "obj1": 0.7274549098196392, "obj2": 0.1451926435517585}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( CRS + AMS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) * Min( ( ( Max( MLU,RMSe ) / DS ) + MUC ) ,RCSe ) )", "obj1": 0.625250501002004, "obj2": 0.25453887116318025}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6172344689378757, "obj2": 0.2594060956258364}, {"determining": "Min( ( ( ARS * AMS ) - Min( BR ,Min( ( Min( ( FirstVNF_CPU_Server - PN ) ,( ARS * ( MDR - FirstVNF_Mem ) ) ) + AMS ) ,( BR / RRS ) ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),Min( Min( RCSe ,Min( Max( RMSe,Max( MUC,RCSe ) ) ,MUC ) ) ,RRSe ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6152304609218436, "obj2": 0.2656331275997212}, {"determining": "( Min( ( FirstVNF_CPU + DDR ) ,( MDR / BR ) ) / ( ( ( MDR + ACS ) * ( MDR - ARS ) ) * Max( ( DDR + FirstVNF_Mem_Server ),Min( MRS ,RRS ) ) ) )", "choosing": "( ( ( MUC - DS ) / MUM ) * ( Max( Min( MUR ,Min( Max( ( ( RCSe * RCSe ) + ( RRSe + MUM ) ),( RMSe / RCSe ) ) ,CS ) ),( RRSe + MLU ) ) * ( ( MUM + MUR ) + Min( MLU ,( DS + Min( RRSe ,RMSe ) ) ) ) ) )", "obj1": 0.6352705410821643, "obj2": 0.24928210140287277}, {"determining": "( ( DDR + CRS ) - ( ( ( MDR * DDR ) / ( Min( Max( DDR,FirstVNF_Mem_Server ) ,( ( ( Const + PN ) - ( FirstVNF_CPU_Server / ACS ) ) + FirstVNF_CPU_Server ) ) / MDR ) ) + ( Max( MDR,MRS ) - Max( ( CRS - ARS ),BR ) ) ) )", "choosing": "Min( Max( ( Min( ( RRSe * ( RMSe * ( RMSe / Max( RMSe,RCSe ) ) ) ) ,( RCSe - RCSe ) ) / MUC ),MLU ) ,( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) )", "obj1": 0.7535070140280561, "obj2": 0.12496910393410371}, {"determining": "( Min( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ( FirstVNF_RAM_Server - PN ) - RRS ) / ( Const + ARS ) ) ) ,( ( ARS * Const ) * ( FirstVNF_CPU / RRS ) ) ) - ( ( Max( ACS,FirstVNF_RAM_Server ) * ( MDR + DDR ) ) / ( ( Max( DDR,MDR ) - MRS ) / DDR ) ) )", "choosing": "( ( ( Max( MUM,RRSe ) + ( MUR + ( MLU / CS ) ) ) / ( CS * RCSe ) ) + Min( MLU ,Min( MUM ,DS ) ) )", "obj1": 0.9839679358717435, "obj2": 0.004816723824390872}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * Max( PN,( FirstVNF_CPU * DDR ) ) ) ) ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + RRSe ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Min( Max( ( MLU / RRSe ),Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) ,( ( RMSe / RRSe ) / CS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.2781164669631867}, {"determining": "Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( FirstVNF_CPU / ( ( ( ARS - FirstVNF_RAM ) / Max( RRS,RRS ) ) / ( ( DDR * MRS ) * Max( ( Const / FirstVNF_CPU ),ARS ) ) ) ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( ( ( ( ( MLU + ( MLU + MUR ) ) * ( ( MUC - DS ) / MUM ) ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Min( Max( ( MLU / RRSe ),DS ) ,( ( RMSe / RRSe ) / CS ) ) ) )", "obj1": 0.6012024048096193, "obj2": 0.2781164669631867}, {"determining": "Min( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) ,Min( FirstVNF_RAM_Server ,( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( CRS + AMS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( ( ( MUC - MLU ) * CS ) + CS ) ) * ( CS / RCSe ) ) * Min( ( ( Max( MLU,RMSe ) / DS ) + MUC ) ,RCSe ) )", "obj1": 0.6232464929859719, "obj2": 0.256087700351099}, {"determining": "Min( ( ( ARS * ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) ) - Min( BR ,Min( ( Min( ( FirstVNF_CPU_Server - PN ) ,( ARS * ( MDR - FirstVNF_Mem ) ) ) + AMS ) ,( BR / RRS ) ) ) ) ,( FirstVNF_CPU / PN ) )", "choosing": "Min( Max( Min( MUR ,RCSe ),( Min( ( ( MUC - CS ) * DS ) ,Min( RRSe ,CS ) ) / ( MUC / RRSe ) ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6392785571142284, "obj2": 0.24486551116157007}, {"determining": "( ( DDR + CRS ) - ( ( ( MDR * DDR ) / ( Min( Max( DDR,FirstVNF_Mem_Server ) ,( ( ( Const + PN ) - ( FirstVNF_CPU_Server / ACS ) ) + FirstVNF_CPU_Server ) ) / MDR ) ) + ( Max( MDR,MRS ) - Max( ( CRS - ARS ),BR ) ) ) )", "choosing": "Min( Max( ( Min( ( RRSe * ( RMSe * ( RMSe / Max( RMSe,RCSe ) ) ) ) ,( RCSe - RCSe ) ) / MUC ),MLU ) ,( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) )", "obj1": 0.7535070140280561, "obj2": 0.12496910393410371}, {"determining": "Min( Min( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) ,Const ) ,Min( Min( DDR ,Max( PN,BR ) ) ,DDR ) )", "choosing": "Min( Max( ( DS + MUC ),( ( ( ( RRSe + MUC ) * ( CS + MLU ) ) - CS ) * MUC ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 0.6372745490981964, "obj2": 0.24900201044874964}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Min( Max( ACS,PN ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) - ( MDR / BR ) ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( Max( ACS,( PN * ( FirstVNF_Mem_Server - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) ) )", "choosing": "( ( ( ( CS - MUM ) / MLU ) * ( DS - Min( MLU ,( MLU + Min( CS ,RMSe ) ) ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9919839679358717, "obj2": 0.002569117086046892}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( Min( ( MUM * ( ( ( MUM / MLU ) * MUC ) / Max( RRSe,MUR ) ) ) ,( ( RRSe + ( RRSe * ( RRSe + ( MUC - RMSe ) ) ) ) - ( MUR * MUM ) ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "( ( DDR + CRS ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( ( Max( MDR,MRS ) - Max( MDR,BR ) ),BR ) ) ) )", "choosing": "Min( ( DS - ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) * MUC ) ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0013159967010323039}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - MDR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * AMS ) - Min( Min( FirstVNF_RAM_Server ,ACS ) ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_CPU / ACS ) - FirstVNF_Mem ) ) ) ) ) ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) )", "choosing": "( ( ( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - ( RCSe + CS ) ) * ( CS / RCSe ) ) - Min( ( RMSe / MUM ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 0.9879759519038076, "obj2": 0.0028654332838156556}, {"determining": "( ( DDR + CRS ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( ( Min( FirstVNF_RAM_Server ,AMS ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ),BR ) ) ) )", "choosing": "Min( ( DS - ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) * MUC ) ) ,Min( ( ( CS + CS ) * CS ) ,( MUM * MLU ) ) )", "obj1": 0.9959919839679359, "obj2": 0.0013159967010323039}, {"determining": "( Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( DDR - ( BR + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + ( RRSe * ( RCSe * MLU ) ) )", "obj1": 0.9939879759519038, "obj2": 0.0018735535759129417}, {"determining": "( Min( Max( FirstVNF_CPU_Server,PN ) ,( PN + BR ) ) - ( MDR / Max( ( ARS / FirstVNF_CPU ),Min( ( ( ( FirstVNF_CPU + ARS ) - ( BR + ( CRS * FirstVNF_CPU_Server ) ) ) + PN ) ,MDR ) ) ) )", "choosing": "( ( MLU - Min( DS ,DS ) ) + ( RRSe * ( ( RCSe / MUR ) * MLU ) ) )", "obj1": 0.9939879759519038, "obj2": 0.0018735535759129417}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - MLU ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * ( FirstVNF_Mem + Const ) ) ) ) / AMS ) ) * Min( ( ( DDR + DDR ) / PN ) ,Min( CRS ,BR ) ) )", "choosing": "( ( ( ( RCSe + Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ) + ( DS + MLU ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( DDR * Min( Max( MRS,FirstVNF_RAM_Server ) ,DDR ) ),Max( FirstVNF_RAM_Server,Min( ARS ,( FirstVNF_CPU_Server - Const ) ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Min( ( MUC / ( Min( DS ,RRSe ) * MUM ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + ( AMS - RRS ) ) * ( Min( MDR ,ARS ) - Max( FirstVNF_Mem,ACS ) ) )", "choosing": "( Min( ( Max( ( MUR + RRSe ),MLU ) * Min( ( CS * DS ) ,( MUM + RMSe ) ) ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Const + RRS ) - ( Min( BR ,( AMS - RRS ) ) + RRS ) ),( AMS / Const ) ) * FirstVNF_Mem_Server ) * ( Min( ( ( DDR + DDR ) / PN ) ,Min( CRS ,BR ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( MUR - MLU ) * MUR ) + ( DS + MLU ) ) / Max( ( RMSe + CS ),( RMSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( Max( BR,RRS ),( MRS * FirstVNF_Mem_Server ) ) ) + ( ( FirstVNF_Mem_Server / MRS ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - ( Min( ( RCSe * ( ( MUC - MUR ) / CS ) ) ,CS ) + MUC ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + Const ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( ( ( MUR - MUM ) * MLU ),MUC ) + RMSe ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MRS ) - Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( DS - ( ( ( MUR + MLU ) + ( ( Max( MLU,RMSe ) / DS ) + MUC ) ) - MLU ) ) ,DS ) + ( RMSe - ( MUC * Max( DS,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( DDR,MDR ) - FirstVNF_CPU_Server ) / ( FirstVNF_RAM / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe / MUM ) / ( ( ( RRSe - DS ) * Max( MLU,MLU ) ) * DS ) ) / ( MUC * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( Min( FirstVNF_RAM ,MRS ) + MRS ) )", "choosing": "Max( ( Max( MUC,Max( Max( RRSe,( RCSe / RCSe ) ),CS ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - ( DDR + ( ( Const * RRS ) - DDR ) ) ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( MUR * CS ) ,Max( MLU,CS ) ) ,( RCSe / ( Min( ( ( Max( RCSe,MUR ) - Min( DS ,DS ) ) / Min( MLU ,Min( MUM ,DS ) ) ) ,MUR ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM_Server ,PN ) + Min( FirstVNF_CPU ,MDR ) ) - ( ( ARS * AMS ) - Min( BR ,Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server + Const ) ) ) ) ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( DDR * ARS ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( RRSe,MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( ( MLU / RRSe ) - ( CS + MUC ) ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,Max( Min( FirstVNF_Mem ,Min( MDR ,( PN * MRS ) ) ),( MRS * MRS ) ) ) ,CRS ) - ( ACS / FirstVNF_CPU ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( ( Max( RRSe,( MUM - CS ) ) * Min( ( DS - RCSe ) ,RMSe ) ),( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( RRS,FirstVNF_Mem_Server ) ,Min( ( CRS - ( CRS - FirstVNF_Mem ) ) ,( ( CRS / RRS ) + Max( MDR,( FirstVNF_RAM / ( ARS - Min( Max( CRS,RRS ) ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( RCSe + RMSe ),CS ) * MUM ),( ( ( MUM + Min( ( ( RMSe - RCSe ) + Max( ( MUR * CS ),DS ) ) ,CS ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - ARS ) ,Max( ( ( ( Min( FirstVNF_CPU ,( Max( MDR,PN ) * ( BR + BR ) ) ) / Min( Min( FirstVNF_Mem_Server ,RRS ) ,ARS ) ) * CRS ) + RRS ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( ( Min( MUM ,( ( RCSe + RCSe ) - ( MUM - Max( RMSe,MUM ) ) ) ) / DS ) - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) ,Max( FirstVNF_RAM_Server,MDR ) )", "choosing": "Max( ( ( RRSe * ( ( DS * RMSe ) * ( Min( MUM ,RCSe ) * ( ( MUR + ( MUC + CS ) ) - ( RCSe / Max( MLU,CS ) ) ) ) ) ) / ( MLU / CS ) ),Max( ( RCSe * MUC ),( RRSe / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( ( ( PN / ACS ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MDR,MRS ) - Max( MDR,BR ) ) ) )", "choosing": "Min( ( ( ( ( CS - Min( ( RCSe * ( RRSe * MLU ) ) ,CS ) ) + RMSe ) + MUC ) / MUR ) ,Min( ( ( MUC - MLU ) * CS ) ,( MUM * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( BR,( ( FirstVNF_Mem + FirstVNF_RAM_Server ) * ( AMS + ( CRS + PN ) ) ) ) ,CRS ) - ( ( PN + FirstVNF_Mem ) / FirstVNF_CPU ) )", "choosing": "( Min( ( ( ( MLU + RRSe ) * ( MLU / ( DS * ( DS * Min( RMSe ,CS ) ) ) ) ) * RRSe ) ,( MUR - MUM ) ) * ( MLU * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( ( CRS - ARS ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "Max( ( MUM * MUM ),( ( Max( DS,( ( ( ( RRSe * RRSe ) + MUC ) + DS ) - RCSe ) ) - ( MUM - RMSe ) ) / Max( Min( MUC ,RRSe ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( CRS ,Min( MRS ,AMS ) ) ,( DDR - FirstVNF_CPU ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Max( Max( ( ( ( MLU + MUR ) + RRSe ) - RMSe ),Min( RMSe ,( RRSe - ( ( ( DS + CS ) + ( CS - RRSe ) ) / DS ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,Min( ( CRS - ARS ) ,( ( CRS / RRS ) + Max( MDR,MRS ) ) ) )", "choosing": "Max( ( MUM * MUM ),( ( ( MUM + Max( MUR,MUM ) ) - ( MUM - RMSe ) ) / Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,( MRS * ACS ) ) - ( MDR / Max( ( ARS / ( BR / Max( AMS,FirstVNF_CPU_Server ) ) ),( ( FirstVNF_RAM_Server / DDR ) / FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - Min( DS ,Max( ( MUC + CS ),( ( MUC / Min( ( MUR / RMSe ) ,Max( MUC,RRSe ) ) ) / DS ) ) ) ) + ( Min( ( Min( CS ,( RRSe * RMSe ) ) * Min( ( RRSe * DS ) ,MUR ) ) ,( RRSe * RRSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - PN ) - Min( ( ARS * Max( FirstVNF_CPU,MRS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU * ( DS / RRSe ) ) + MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - FirstVNF_Mem ) + ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,Min( Const ,Min( FirstVNF_RAM_Server ,( AMS + RRS ) ) ) ) * AMS ) - ( MDR + FirstVNF_Mem_Server ) ) ) / ( FirstVNF_RAM * MRS ) )", "choosing": "( ( Min( Max( ( RRSe * MUM ),MUC ) ,( Max( MUM,Max( MUC,( Max( MLU,DS ) * Min( RMSe ,RMSe ) ) ) ) + MUR ) ) - ( ( ( RMSe + DS ) - ( MUC * RRSe ) ) * ( MLU / RCSe ) ) ) - ( ( DS / MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS / ( Min( ( FirstVNF_Mem / PN ) ,( ( DDR * FirstVNF_RAM_Server ) - RRS ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( Min( Min( DS ,RCSe ) ,( DS * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( MLU / RCSe ) ) ) - Max( ( Min( MLU ,CS ) - MUC ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) - FirstVNF_Mem ) + ( Min( FirstVNF_CPU ,MDR ) * Min( Min( CRS ,FirstVNF_RAM ) ,( MDR * ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * RMSe ) / ( MLU / CS ) ),( ( RCSe * DS ) + Max( MUM,( Min( ( ( ( RRSe - DS ) * MUR ) * MUR ) ,( ( CS / MUM ) / ( ( RMSe - MUR ) + Max( MUR,RRSe ) ) ) ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * PN ) * ( MDR - ( ( FirstVNF_CPU / Min( ( Min( FirstVNF_RAM_Server ,ARS ) + ARS ) ,FirstVNF_CPU ) ) - FirstVNF_Mem ) ) )", "choosing": "( ( ( CS / ( RMSe / MUR ) ) + Max( ( DS * RMSe ),DS ) ) / Max( ( RMSe + CS ),Max( MUR,( ( ( RRSe * RCSe ) - ( MUR * MLU ) ) * ( Max( ( ( RCSe * CS ) * ( CS / DS ) ),Max( ( RCSe / MUR ),DS ) ) - RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_RAM ) * ( Min( Max( Min( ACS ,FirstVNF_CPU ),MDR ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - ( ACS / FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( ( RRSe + ( MUC * MUM ) ),MLU ) * MUR ) ,MUC ) / ( MUR * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + ARS ) - ( ( FirstVNF_CPU_Server + ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) * ( DDR * FirstVNF_RAM ) ) + ACS ) * ( ( AMS * FirstVNF_CPU ) / DDR ) ) - FirstVNF_CPU ) ) + ( ( AMS / Const ) + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( RRSe / MUM ) - ( ( RMSe - RRSe ) - DS ) ),( RCSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( FirstVNF_RAM,FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,Const ) ) ,CRS ) - ( ACS + FirstVNF_Mem ) )", "choosing": "( Min( MLU ,( MUR - MUM ) ) * Max( Min( ( RCSe * ( ( DS - RRSe ) + ( MUC / ( Max( MLU,RMSe ) / ( MUR - MLU ) ) ) ) ) ,MLU ),( RCSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - ( Max( CRS,( ( Const / FirstVNF_Mem_Server ) + ( FirstVNF_CPU * Min( Const ,FirstVNF_CPU_Server ) ) ) ) / AMS ) ) * Max( CRS,MRS ) )", "choosing": "( Min( Min( DS ,RCSe ) ,( Max( Max( ( MUC * MLU ),( RCSe + MUR ) ),( ( RMSe / RMSe ) * DS ) ) * MUC ) ) + ( ( MLU + MUR ) + Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS / FirstVNF_RAM ) ,Max( Min( DDR ,( ( ( FirstVNF_RAM - ( DDR / RRS ) ) / PN ) + RRS ) ),FirstVNF_RAM ) )", "choosing": "Max( ( DS - ( MLU * MUC ) ),Min( ( RCSe / MUR ) ,( MUM + ( ( ( MUR - CS ) * Min( DS ,RCSe ) ) * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / ( RRS - Const ) ) / ( ( ARS - RRS ) / ( Const + ARS ) ) ) - ( ( ( FirstVNF_CPU * DDR ) / Max( MDR,FirstVNF_RAM_Server ) ) + ( Max( MRS,DDR ) / ( MDR + MRS ) ) ) )", "choosing": "Min( ( CS / ( RCSe - RMSe ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,CRS ) / ( CRS / MRS ) )", "choosing": "( Min( ( RRSe * ( RMSe / ( CS + MUC ) ) ) ,Min( ( ( RCSe + ( MUM + MUM ) ) * MUC ) ,Max( MUR,RRSe ) ) ) * ( Max( ( DS * CS ),( RRSe + MLU ) ) * ( ( Min( Max( ( CS * MUM ),( RMSe + CS ) ) ,Min( Max( MUR,MUR ) ,Max( MUR,RRSe ) ) ) + MUR ) + ( MUM * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_RAM_Server ) - Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( CS - MLU ) / ( ( RRSe * ( MLU + RMSe ) ) - ( ( DS - DS ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + ( RRS + DDR ) ) / Max( ( FirstVNF_Mem_Server + PN ),( Min( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + ( FirstVNF_Mem_Server / BR ) ) ,FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,( MLU / MUM ) ) * ( MUR / ( Max( ( Min( ( MUR - RCSe ) ,RCSe ) * MUC ),MUC ) + RMSe ) ) ) - Max( ( Max( MUC,( ( RMSe * ( ( RRSe - RMSe ) + DS ) ) - ( ( MUM + MUR ) + MUR ) ) ) / ( ( Max( RCSe,RCSe ) - MUR ) * RRSe ) ),( CS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( DDR ,Const ) ,Min( RRS ,PN ) )", "choosing": "Min( ( RMSe + Max( Max( RCSe,Min( DS ,MUC ) ),MLU ) ) ,( ( MUM / RRSe ) * Max( CS,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - BR ) ,( ( FirstVNF_RAM_Server + ( DDR - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM_Server - ARS ) ) ) ) + MRS ) )", "choosing": "Max( ( ( RRSe * Max( MUM,( MUM * ( CS * ( RCSe + RRSe ) ) ) ) ) / ( CS * RCSe ) ),( ( RCSe * DS ) + Max( MUM,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * AMS ) / ( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) / ( BR - FirstVNF_Mem_Server ) ) - ( Max( RRS,BR ) + ( MDR + ARS ) ) ) ) + AMS ) - ( FirstVNF_RAM_Server / MRS ) )", "choosing": "( ( MLU * RMSe ) + ( Max( RRSe,MUC ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),Max( BR,FirstVNF_Mem ) ) + Min( Max( ACS,PN ) ,( ( ( FirstVNF_Mem_Server + DDR ) - AMS ) - ( MDR / BR ) ) ) ) / ( Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,( FirstVNF_CPU + PN ) ) + Max( Min( RRS ,ACS ),( Max( ACS,( PN * ( FirstVNF_Mem_Server - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) ) - RRS ) ) ) )", "choosing": "( ( Min( CS ,Min( RRSe ,RCSe ) ) * ( DS - Min( MLU ,( MLU + Min( CS ,RMSe ) ) ) ) ) - Min( ( Min( RRSe ,CS ) + Min( MLU ,MLU ) ) ,( ( MUR / MUR ) - Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS * FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,( ACS * Max( ARS,ACS ) ) ) )", "choosing": "( ( MUC / MUR ) * ( Min( ( Min( CS ,MUC ) - Max( Max( RCSe,( Max( RMSe,MLU ) - ( MUM - RRSe ) ) ),( MLU + ( MLU + ( CS / CS ) ) ) ) ) ,DS ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ACS,PN ) ,Max( RRS,RRS ) ) / ( ( ARS - RRS ) / ( BR - MRS ) ) ) - ( ( ( ACS / BR ) * Const ) * FirstVNF_Mem ) )", "choosing": "Min( ( CS / ( RCSe - ( MUR / ( ( MUM / MUM ) + RMSe ) ) ) ) ,Min( Min( ( Min( MUM ,RCSe ) * MUC ) ,Max( MLU,CS ) ) ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Min( ( ( ( AMS - MRS ) + FirstVNF_Mem_Server ) * DDR ) ,MDR ) ,FirstVNF_RAM ) ,MRS ) / ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( Max( MDR,ACS ),MDR ) ) )", "choosing": "( ( ( ( MLU + DS ) / Max( ( ( RRSe + CS ) + ( MUM + Min( CS ,RMSe ) ) ),MUC ) ) - ( ( MUR * MUC ) * ( ( Min( MUC ,Min( ( RCSe + RCSe ) ,MLU ) ) - RMSe ) - MUR ) ) ) - Max( ( MLU + RMSe ),( ( CS + MLU ) * Min( RRSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - Min( ACS ,AMS ) ) / ( ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ( Min( ( FirstVNF_Mem / PN ) ,Min( ARS ,BR ) ) - Max( ( FirstVNF_Mem_Server / ACS ),Min( PN ,CRS ) ) ) ) ) ) / ( FirstVNF_Mem + CRS ) )", "choosing": "( Max( ( CS * MUR ),MUC ) * Max( RMSe,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM - ( ( ( ( FirstVNF_Mem - BR ) + ARS ) + RRS ) - PN ) ),Max( BR,FirstVNF_Mem ) ) + ( MDR / MRS ) ) / ( Min( AMS ,RRS ) - BR ) )", "choosing": "( ( Min( Min( MUR ,( Min( ( Min( RRSe ,CS ) / MUC ) ,CS ) * CS ) ) ,( MLU / MUM ) ) * ( MUR / ( MUR - DS ) ) ) - ( ( Max( Min( CS ,( ( DS / RRSe ) * RRSe ) ),MUM ) * RMSe ) * Max( ( ( Min( MUC ,MLU ) * RMSe ) + DS ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}]}