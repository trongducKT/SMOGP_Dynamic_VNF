{"1": [{"determining": "( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR / MLU ) / RCSe ),( MLU / RMSe ) )", "obj1": 0.7858672376873662, "obj2": 0.19027661882600927}, {"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( DS - DS ) + ( MUM + ( CS / RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401057}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25204731463681707}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Max( Min( AMS ,FirstVNF_RAM_Server ),Max( CRS,DDR ) ),Min( ( FirstVNF_RAM / Const ) ,Max( FirstVNF_CPU,DDR ) ) ),( ( ( FirstVNF_RAM / MDR ) * ( DDR * RRS ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - RMSe ) + MUM ),( MUM / Max( MUR,RCSe ) ) )", "obj1": 0.69593147751606, "obj2": 0.2614169448142151}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( FirstVNF_Mem_Server + ( PN + MDR ) ) * Min( BR ,PN ) )", "choosing": "Min( Max( ( MUR * MUC ),( ( RMSe + MLU ) * Max( CS,CS ) ) ) ,Min( RRSe ,CS ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_Mem_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( AMS + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) - ( FirstVNF_Mem * FirstVNF_CPU ) )", "choosing": "Max( ( ( MUR / MLU ) / RCSe ),( MLU / RMSe ) )", "obj1": 0.7858672376873662, "obj2": 0.19027661882600927}, {"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( DS - DS ) + ( MUM + ( CS / RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401057}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25204731463681707}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_Mem_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + MRS ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / ( Min( FirstVNF_RAM ,( FirstVNF_RAM + Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) ) - Min( DDR ,( MRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( CS - ( CS * Max( ( Max( ( RMSe + MLU ),MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.8372591006423983, "obj2": 0.10222963456611187}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * FirstVNF_Mem ) / ( ARS / Min( FirstVNF_CPU_Server ,MDR ) ) )", "choosing": "( Min( Max( ( RMSe * MUM ),( DS * DS ) ) ,Min( Min( MUR ,MUC ) ,( MUR * DS ) ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7002141327623126, "obj2": 0.24316131362669813}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - ( Max( Max( CS,MUM ),MUM ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / FirstVNF_RAM_Server ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + ( DS / RCSe ) ),MUR ) + RMSe )", "obj1": 0.715203426124197, "obj2": 0.22811059040608914}, {"determining": "( Max( MRS,Const ) + Max( ( ( FirstVNF_Mem - Const ) * ( FirstVNF_Mem / ARS ) ),DDR ) )", "choosing": "( Min( CS ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "Min( ( RCSe - MUR ) ,( MUC - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - Max( MRS,Const ) ) * ( FirstVNF_Mem / ARS ) )", "choosing": "Min( ( RCSe - MUM ) ,( MUC - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS / MDR ),Min( MDR ,( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem / CRS ) * ( FirstVNF_RAM - AMS ) ) / ( MRS - Const ) ) ) ) )", "choosing": "Max( Min( MLU ,( Min( MUM ,DS ) * ( MUM - ( MUC - Max( ( Max( MUR,MUC ) * ( RMSe + MUM ) ),MUR ) ) ) ) ),( MUR * DS ) )", "obj1": 0.6852248394004282, "obj2": 0.2579942120116052}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + DDR ) + ( CRS - Const ) )", "choosing": "( ( RRSe - MUM ) + Max( MUR,RMSe ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( Max( CRS,FirstVNF_CPU ) * Max( ( DDR + FirstVNF_RAM_Server ),( Min( AMS ,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( RCSe ,( Max( Min( Max( RMSe,RCSe ) ,RCSe ),DS ) - ( MUC / RCSe ) ) )", "obj1": 0.6937901498929336, "obj2": 0.2554938591308363}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_CPU + DDR ) ,FirstVNF_CPU ) ) - ( ARS + BR ) )", "choosing": "( ( ( CS + ( RRSe * ( CS + MUR ) ) ) + Max( DS,MUC ) ) + ( Max( RCSe,RRSe ) / Max( ( MLU / RMSe ),( DS / RCSe ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.16654233424808124}], "3": [{"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( DS - DS ) + ( MUM + ( CS / RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401057}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_Mem_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + MRS ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / ( Min( FirstVNF_RAM ,( FirstVNF_RAM + Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) ) - Min( DDR ,( MRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( CS - ( CS * Max( ( Max( ( RMSe + MLU ),MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.8372591006423983, "obj2": 0.10222963456611187}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - ( Max( Max( CS,MUM ),MUM ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Const ) + Max( ( ( FirstVNF_Mem - Const ) * ( FirstVNF_Mem / ARS ) ),DDR ) )", "choosing": "( Min( CS ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "Min( ( RCSe - MUR ) ,( MUC - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - Max( MRS,Const ) ) * ( FirstVNF_Mem / ARS ) )", "choosing": "Min( ( RCSe - MUM ) ,( MUC - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ( FirstVNF_CPU + DDR ) ,FirstVNF_CPU ) ) - ( ARS + BR ) )", "choosing": "( ( ( CS + ( RRSe * ( CS + MUR ) ) ) + Max( DS,MUC ) ) + ( Max( RCSe,RRSe ) / Max( ( MLU / RMSe ),( DS / RCSe ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.16654233424808124}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_Mem_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( MLU - RRSe ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( ( RRS + FirstVNF_RAM ) * FirstVNF_Mem ) ) / ( Max( ( FirstVNF_Mem_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,MRS ) ) ) )", "choosing": "( Min( ( MUR + RCSe ) ,( Min( MLU ,( MLU + MUM ) ) * MLU ) ) / ( RRSe - CS ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MRS ) * DDR ) * ( Max( Max( AMS,Min( RRS ,RRS ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( ( Min( Max( ( ( ( CS / MUM ) * DS ) / ( ( MUR + MUM ) - DS ) ),Min( RMSe ,DS ) ) ,( RCSe * Max( MLU,RRSe ) ) ) - MUC ) - ( MLU + ( ( ( ( ( DS - RMSe ) + MLU ) - RMSe ) + ( DS + RCSe ) ) + MUC ) ) ),( ( ( DS + MUM ) + ( MUC * MLU ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( Min( FirstVNF_CPU ,( AMS + ( MRS * CRS ) ) ) - ( ACS / FirstVNF_RAM ) ) / CRS ) * ( FirstVNF_RAM - CRS ) ) / ( MRS - Const ) ) ,FirstVNF_RAM )", "choosing": "( ( ( Max( Min( ( Max( MUC,( MUM + MUC ) ) - MLU ) ,Max( DS,MUC ) ),MUM ) * MLU ) - Min( ( RCSe + ( ( DS * MLU ) + ( DS - CS ) ) ) ,MUR ) ) + ( MUM + MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08134643678772986}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / ( ( ACS * MDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUR,( MUM * ( ( RRSe - CS ) * Max( MLU,RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * MRS ) + ( MDR + PN ) ) - ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( MUC / RRSe ) - DS ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_Mem_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + Min( ( CS * MLU ) ,( MLU - RRSe ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_RAM ,DDR ),Max( Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem ,Min( DDR ,RRS ) ) ),ACS ) )", "choosing": "( ( ( ( RCSe + RRSe ) * ( RRSe / MUR ) ) - CS ) / ( MUC / MUM ) )", "obj1": 0.683083511777302, "obj2": 0.2621226360856684}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) - ( MDR * DDR ) )", "choosing": "( ( Min( Max( ( ( Max( Max( MLU,MUC ),CS ) * MUR ) - RCSe ),( MLU + MUC ) ) ,RRSe ) / Min( RMSe ,( MLU - MLU ) ) ) + ( ( ( CS + MUM ) * Max( DS,RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU + ARS ) ,DDR ) ) - ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe / DS ) ,( RCSe + MLU ) ) / ( ( DS * MUM ) * Max( ( Max( MUC,Max( ( Min( RCSe ,DS ) * MLU ),CS ) ) * RMSe ),( MUR / ( MUM * ( MUR / Max( MUM,( RCSe / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ACS / ( PN * PN ) ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS * ( RRSe / ( ( ( RRSe * RMSe ) * ( CS - DS ) ) * RRSe ) ) ) / RRSe ) ) - ( Min( MUM ,RRSe ) - Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) - Min( ARS ,BR ) )", "choosing": "( ( ( CS + CS ) + Max( MUC,MUC ) ) + ( Max( RCSe,RRSe ) / Max( ( MLU / RMSe ),( DS / RCSe ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.16703530449946175}, {"determining": "( Max( MRS,Const ) + Max( ( ( FirstVNF_Mem - Const ) * ( FirstVNF_Mem / ARS ) ),DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( FirstVNF_CPU - MRS ) - Min( ( MRS / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Min( ( CS / DS ) ,( RCSe + MLU ) ) / Max( ( ( RRSe + DS ) * MUM ),Max( ( ( ( Min( MUC ,DS ) / MLU ) - ( Max( Max( RCSe,RCSe ),Min( RMSe ,RCSe ) ) - MUR ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUM ,MUC ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) - ( BR - ( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * BR ) ) * PN ) ) ) + DDR ) ) )", "choosing": "( Max( DS,( ( Max( MUC,RMSe ) + ( ( Max( RMSe,RRSe ) * ( RRSe * MUC ) ) - ( RMSe + ( MUC + MUR ) ) ) ) / MUM ) ) / ( ( DS * MUM ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Const ) + Max( ( ( FirstVNF_Mem - Const ) * ( FirstVNF_Mem / ARS ) ),( MRS * MDR ) ) )", "choosing": "( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Min( Max( RRS,Const ) ,RRS ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}], "4": [{"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Const ) + Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( RCSe - MUR ) ,( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - ( Max( Max( CS,MUM ),MUM ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM_Server,DDR ) - ( ACS / FirstVNF_RAM ) ) / CRS ) * ( FirstVNF_RAM - CRS ) ) / ( MRS - Const ) ) ,FirstVNF_RAM )", "choosing": "( ( ( Max( Min( ( Max( MUC,( MUM + RRSe ) ) - MLU ) ,Max( DS,MUC ) ),MUM ) * MLU ) - Min( ( RCSe + ( ( DS * MLU ) + ( DS - CS ) ) ) ,MUR ) ) + ( MUM + MUR ) )", "obj1": 0.7687366167023555, "obj2": 0.1769190376394744}, {"determining": "Min( ( ( ( ( Min( FirstVNF_CPU ,( AMS + ( MRS * CRS ) ) ) - ( ACS / FirstVNF_RAM ) ) / CRS ) * ( FirstVNF_RAM - CRS ) ) / ( MRS - Const ) ) ,FirstVNF_RAM )", "choosing": "( ( ( Max( Min( ( Max( MUC,( MUM + MUC ) ) - MLU ) ,Max( DS,MUC ) ),MUM ) * MLU ) - Min( ( RCSe + ( ( DS * MLU ) + ( DS - CS ) ) ) ,MUR ) ) + ( MUM + MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08134643678772986}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - DS ) + ( CS + ( CS / RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "Max( Min( FirstVNF_RAM ,DDR ),Max( Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem ,Min( DDR ,RRS ) ) ),ACS ) )", "choosing": "( ( ( ( RCSe + RRSe ) * ( RRSe / MUR ) ) - CS ) / ( MUC / MUM ) )", "obj1": 0.683083511777302, "obj2": 0.2621226360856684}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( Max( ( MRS / MDR ),BR ) + ( MRS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM - AMS ) ) / ( ( ( Min( PN ,MRS ) + ACS ) - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( Max( RCSe,MLU ) + CS ) / Min( MUC ,RMSe ) ) * Min( RRSe ,( DS - RMSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.13822611328723663}, {"determining": "( ( ( FirstVNF_RAM + MRS ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / ( Min( FirstVNF_RAM ,( FirstVNF_RAM + Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) ) - Min( DDR ,( MRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( CS - ( CS * Max( ( Max( ( RMSe + MLU ),MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.8372591006423983, "obj2": 0.10222963456611187}, {"determining": "( FirstVNF_RAM - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( Max( Min( MUC ,RCSe ),CS ) / ( ( ( RCSe + RRSe ) * MUC ) - CS ) ) )", "obj1": 0.7944325481798715, "obj2": 0.1625249972912434}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) - Min( ARS ,BR ) )", "choosing": "( ( ( CS + CS ) + Max( MUC,MUC ) ) + ( Max( RCSe,RRSe ) / Max( ( MLU / RMSe ),( DS / RCSe ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.16703530449946175}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) + Min( ( CS * MLU ) ,( MLU - RRSe ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_Mem_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "Max( ( FirstVNF_RAM + DDR ),Max( ( Const + ACS ),( BR + AMS ) ) )", "choosing": "Min( ( CS * MLU ) ,( MLU - RRSe ) )", "obj1": 0.683083511777302, "obj2": 0.2621226360856684}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MRS ) * DDR ) * ( Max( Max( AMS,Min( RRS ,RRS ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( ( Min( Max( ( ( ( CS / MUM ) * DS ) / ( ( MUR + MUM ) - DS ) ),Min( RMSe ,DS ) ) ,( RCSe * Max( MLU,RRSe ) ) ) - MUC ) - ( MLU + ( ( ( ( ( DS - RMSe ) + MLU ) - RMSe ) + ( DS + RCSe ) ) + MUC ) ) ),( ( ( DS + MUM ) + ( MUC * MLU ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / ( ( ACS * MDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUR,( MUM * ( ( RRSe - CS ) * Max( MLU,RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * MRS ) + ( MDR + PN ) ) - ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( MUC / RRSe ) - DS ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) - ( MDR * DDR ) )", "choosing": "( ( Min( Max( ( ( Max( Max( MLU,MUC ),CS ) * MUR ) - RCSe ),( MLU + MUC ) ) ,RRSe ) / Min( RMSe ,( MLU - MLU ) ) ) + ( ( ( CS + MUM ) * Max( DS,RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU + ARS ) ,DDR ) ) - ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe / DS ) ,( RCSe + MLU ) ) / ( ( DS * MUM ) * Max( ( Max( MUC,Max( ( Min( RCSe ,DS ) * MLU ),CS ) ) * RMSe ),( MUR / ( MUM * ( MUR / Max( MUM,( RCSe / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ACS / ( PN * PN ) ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS * ( RRSe / ( ( ( RRSe * RMSe ) * ( CS - DS ) ) * RRSe ) ) ) / RRSe ) ) - ( Min( MUM ,RRSe ) - Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) - Min( ( MRS / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Min( ( CS / DS ) ,( RCSe + MLU ) ) / Max( ( ( RRSe + DS ) * MUM ),Max( ( ( ( Min( MUC ,DS ) / MLU ) - ( Max( Max( RCSe,RCSe ),Min( RMSe ,RCSe ) ) - MUR ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUM ,MUC ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) - ( BR - ( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * BR ) ) * PN ) ) ) + DDR ) ) )", "choosing": "( Max( DS,( ( Max( MUC,RMSe ) + ( ( Max( RMSe,RRSe ) * ( RRSe * MUC ) ) - ( RMSe + ( MUC + MUR ) ) ) ) / MUM ) ) / ( ( DS * MUM ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,RRS ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( Max( Const,Min( MRS ,MDR ) ) - ( FirstVNF_Mem / MRS ) ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( PN + MDR ) ) ) )", "choosing": "( ( ( RRSe - Max( ( MUM / ( MUR / DS ) ),MUM ) ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUR * MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( CRS,( FirstVNF_RAM + ( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + DDR ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( ( RRSe - Max( ( RMSe * ( RRSe - DS ) ),( MUC + DS ) ) ),Min( MUR ,MUC ) ) ),( ( CS + RRSe ) + ( MLU / RRSe ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( RRSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / CRS )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,CRS ) ,Max( Const,DDR ) ) - Max( RRS,Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( RMSe ,( MUC * RMSe ) ),( Max( Max( MLU,MUC ),CS ) * Min( CS ,RCSe ) ) ) / ( ( MUC * ( RCSe + RRSe ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS * PN ) * ( MRS - AMS ) ) * ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * AMS ) ) ),( FirstVNF_RAM + AMS ) )", "choosing": "( ( Min( RMSe ,MUC ) * Max( MUM,( ( ( MLU / MLU ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - FirstVNF_CPU ) / FirstVNF_CPU_Server ) + ACS ) )", "choosing": "Max( ( ( Min( MUC ,( CS / RCSe ) ) * ( RCSe + MLU ) ) - CS ),Max( ( RMSe / CS ),( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) - Min( MRS ,Const ) )", "choosing": "( RCSe + ( ( ( CS + MUM ) * ( MLU - RRSe ) ) - ( ( ( Max( ( Min( RCSe ,MUR ) - MUR ),( ( RRSe - MUR ) * ( MUR - CS ) ) ) + MUC ) / RRSe ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,FirstVNF_CPU ) / ARS ) - MRS ) )", "choosing": "( Min( ( DS / RMSe ) ,( MUR - RRSe ) ) / ( ( DS * RRSe ) * Max( ( Max( RRSe,RRSe ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,CRS ),( ( MRS * MDR ) * ( MRS + RRS ) ) ) - ( DDR - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - ARS ) ) )", "choosing": "( ( ( ( Max( MUR,MUC ) / Max( RRSe,RRSe ) ) * ( ( MLU - CS ) * ( Min( ( CS / MUM ) ,DS ) - MUC ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - ARS ),( Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) * ( ( ( ACS - MDR ) / CRS ) - CRS ) ) )", "choosing": "( ( ( MUC + ( ( MUR + RRSe ) * Min( RMSe ,RMSe ) ) ) + MUR ) + ( MUM - ( ( MUM / DS ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,Max( PN,( ( ( ( RRS + RRS ) * FirstVNF_RAM ) + BR ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) ) - ARS ) / ( ( BR + MRS ) / ( FirstVNF_CPU - MDR ) ) )", "choosing": "( ( DS - DS ) + ( MUM + ( ( Min( MUR ,RMSe ) - ( RCSe * RCSe ) ) + Max( ( RRSe + MUR ),( ( Min( ( RCSe + MUC ) ,( RCSe + RMSe ) ) - MUM ) + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( Max( PN,CRS ) - ( BR * PN ) ),CRS ) - RRS ) / ( ( BR - FirstVNF_CPU ) + RRS ) ) + ( CRS - Const ) )", "choosing": "( ( ( ( MLU - RCSe ) + MLU ) + ( Min( MLU ,MUC ) / MUM ) ) / ( ( DS * DS ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) )", "choosing": "( ( Max( MLU,CS ) / ( ( CS * ( MUR + Min( MUM ,DS ) ) ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,Min( ( ( ( ( AMS + ( FirstVNF_RAM - FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) / ( ACS + MRS ) ) * ( PN + ( MDR / FirstVNF_Mem_Server ) ) ) ,ACS ) ) - ( Const / MRS ) )", "choosing": "( Max( MUM,Min( RRSe ,( MUC * Max( ( RMSe * MUR ),MUC ) ) ) ) + ( MLU / ( Min( RMSe ,RCSe ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / Min( MDR ,( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem / CRS ) * ( FirstVNF_RAM - AMS ) ) / ( MRS - Const ) ) ) ) ) )", "choosing": "( ( Max( Max( CS,MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * Max( ( Max( MUR,MUC ) * ( RMSe + MUM ) ),MUR ) ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM * CRS ),( Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU * CRS ) ) - ( Min( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( DDR * RRS ) ) ,ARS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( RMSe / MLU ) ) * Max( MUM,CS ) ) + ( ( RCSe * ( Min( RMSe ,( ( ( RCSe - RRSe ) / Max( MUC,MLU ) ) - ( RRSe * ( MUC - CS ) ) ) ) * ( RCSe + Max( Max( MUC,MUM ),( RCSe * RMSe ) ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,( ( ( Const + PN ) * AMS ) - ( ACS / FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( MUM ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - CRS ) ,ACS ) - BR ) - Max( FirstVNF_RAM,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS - MUM ) / DS ) ,( RCSe + RMSe ) ) / ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) + BR ) ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe / DS ) ,( Max( RRSe,( Max( RMSe,DS ) / Min( RCSe ,RMSe ) ) ) * RMSe ) ) / ( ( DS * MUM ) * Max( ( Max( RRSe,( Max( RMSe,DS ) / Min( RCSe ,RMSe ) ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) * ( ( AMS - AMS ) * ( AMS * PN ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( ( BR - ( MRS / FirstVNF_Mem ) ) + MDR ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / Min( MUM ,Min( MLU ,DS ) ) ) + Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUR * MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( MDR * DDR ) / MRS ) - Min( ( MRS / ( FirstVNF_CPU - ( FirstVNF_RAM_Server - CRS ) ) ) ,AMS ) ) ,FirstVNF_Mem ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( DS * MUC ) / Min( MUM ,MUM ) ) ) ) ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( Min( DS ,( RMSe * ( CS + ( Min( RCSe ,MUR ) * MUC ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( FirstVNF_CPU + ( DDR / MRS ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( ( MUR * MUC ) / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ARS ) - FirstVNF_RAM )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( RMSe + RMSe ) * MUM ) - ( MLU / RRSe ) ) ,( MLU + ( MUR + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( ( FirstVNF_Mem_Server * ( FirstVNF_Mem * FirstVNF_Mem ) ) ,MDR ) ) - ( ( AMS * PN ) / MRS ) )", "choosing": "( Max( Max( CS,Max( MUR,MUM ) ),( ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) / ( MUR / DS ) ) ) + ( MLU / Min( RRSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( FirstVNF_RAM + ( Min( ( ( ( Max( MRS,FirstVNF_RAM ) - Min( AMS ,CRS ) ) / ACS ) - AMS ) ,DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( Max( ( Min( Max( RMSe,MUC ) ,RCSe ) / ( Max( CS,MLU ) - Min( MUC ,MUR ) ) ),MUM ),MUM ) - ( ( ( ( MUC + ( ( MUC / RMSe ) - MUC ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( Max( FirstVNF_RAM_Server,( BR * PN ) ) + CRS ) ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe + MUC ) / Max( ( RCSe + RRSe ),( RCSe + RMSe ) ) ) - Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Const ) + Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( RCSe - MUR ) ,( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( AMS - MDR ) - ( ( CRS - Const ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( ( MUM * CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( Min( MUR ,RMSe ) - ( RRSe * RCSe ) ) + Max( ( MUC + MUR ),( ( MUM - Min( ( MLU * RCSe ) ,( RCSe + MUC ) ) ) + RCSe ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.023382656413932765}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( MDR - AMS ) + ( CRS - Const ) ) )", "choosing": "( ( Max( MLU,CS ) / ( ( CS * ( MUR + Min( RRSe ,DS ) ) ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.1741871606247704}, {"determining": "Min( ( ( ( ( Min( FirstVNF_CPU ,( AMS + ( MRS * CRS ) ) ) - ( ACS / FirstVNF_RAM ) ) / CRS ) * ( FirstVNF_RAM - CRS ) ) / ( MRS - Const ) ) ,FirstVNF_RAM )", "choosing": "( ( ( Max( Min( ( Max( MUC,( MUM + MUC ) ) - MLU ) ,Max( DS,MUC ) ),MUM ) * MLU ) - Min( ( RCSe + ( ( DS * MLU ) + ( DS - CS ) ) ) ,MUR ) ) + ( MUM + MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08134643678772986}, {"determining": "Max( Min( FirstVNF_RAM ,DDR ),Max( Min( FirstVNF_RAM_Server ,Min( FirstVNF_Mem ,Min( DDR ,RRS ) ) ),ACS ) )", "choosing": "( ( ( ( RCSe + RRSe ) * ( RRSe / MUR ) ) - CS ) / ( MUC / MUM ) )", "obj1": 0.683083511777302, "obj2": 0.2621226360856684}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - DS ) + ( CS + ( CS / RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( Max( ( MRS / MDR ),BR ) + ( MRS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM - AMS ) ) / ( ( ( Min( PN ,MRS ) + ACS ) - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( Max( RCSe,MLU ) + CS ) / Min( MUC ,RMSe ) ) * Min( RRSe ,( DS - RMSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.13822611328723663}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - ( Max( Max( CS,MUM ),MUM ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "( ( ( FirstVNF_RAM + MRS ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / ( Min( FirstVNF_RAM ,( FirstVNF_RAM + Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) ) - Min( DDR ,( MRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( CS - ( CS * Max( ( Max( ( RMSe + MLU ),MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.8372591006423983, "obj2": 0.10222963456611187}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) + Min( ( CS * MLU ) ,( MLU - RRSe ) ) )", "obj1": 0.8137044967880086, "obj2": 0.14566867967005734}, {"determining": "( FirstVNF_RAM - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( Max( Min( MUC ,RCSe ),CS ) / ( ( ( RCSe + RRSe ) * MUC ) - CS ) ) )", "obj1": 0.7944325481798715, "obj2": 0.1625249972912434}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) - Min( ARS ,BR ) )", "choosing": "( ( ( CS + CS ) + Max( MUC,MUC ) ) + ( Max( RCSe,RRSe ) / Max( ( MLU / RMSe ),( DS / RCSe ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.16703530449946175}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( ( ACS / Const ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + MDR ),( AMS + RRS ) ) * ( ( ACS * Const ) - Min( DDR ,MDR ) ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) + Min( ( DS / Min( ( Min( MUR ,MLU ) + ( Max( RCSe,DS ) / MUR ) ) ,RMSe ) ) ,( MUR * MLU ) ) )", "obj1": 0.8051391862955032, "obj2": 0.14817262790886496}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - DS ) + ( CS + ( CS / RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "Max( ( FirstVNF_RAM + DDR ),Max( ( Const + ACS ),( BR + AMS ) ) )", "choosing": "Min( ( CS * MLU ) ,( MLU - RRSe ) )", "obj1": 0.683083511777302, "obj2": 0.2621226360856684}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MRS ) * DDR ) * ( Max( Max( AMS,Min( RRS ,RRS ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( ( Min( Max( ( ( ( CS / MUM ) * DS ) / ( ( MUR + MUM ) - DS ) ),Min( RMSe ,DS ) ) ,( RCSe * Max( MLU,RRSe ) ) ) - MUC ) - ( MLU + ( ( ( ( ( DS - RMSe ) + MLU ) - RMSe ) + ( DS + RCSe ) ) + MUC ) ) ),( ( ( DS + MUM ) + ( MUC * MLU ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / ( ( ACS * MDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUR,( MUM * ( ( RRSe - CS ) * Max( MLU,RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * MRS ) + ( MDR + PN ) ) - ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( MUC / RRSe ) - DS ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) - ( MDR * DDR ) )", "choosing": "( ( Min( Max( ( ( Max( Max( MLU,MUC ),CS ) * MUR ) - RCSe ),( MLU + MUC ) ) ,RRSe ) / Min( RMSe ,( MLU - MLU ) ) ) + ( ( ( CS + MUM ) * Max( DS,RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU + ARS ) ,DDR ) ) - ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe / DS ) ,( RCSe + MLU ) ) / ( ( DS * MUM ) * Max( ( Max( MUC,Max( ( Min( RCSe ,DS ) * MLU ),CS ) ) * RMSe ),( MUR / ( MUM * ( MUR / Max( MUM,( RCSe / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ACS / ( PN * PN ) ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS * ( RRSe / ( ( ( RRSe * RMSe ) * ( CS - DS ) ) * RRSe ) ) ) / RRSe ) ) - ( Min( MUM ,RRSe ) - Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) - Min( ( MRS / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Min( ( CS / DS ) ,( RCSe + MLU ) ) / Max( ( ( RRSe + DS ) * MUM ),Max( ( ( ( Min( MUC ,DS ) / MLU ) - ( Max( Max( RCSe,RCSe ),Min( RMSe ,RCSe ) ) - MUR ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUM ,MUC ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) - ( BR - ( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * BR ) ) * PN ) ) ) + DDR ) ) )", "choosing": "( Max( DS,( ( Max( MUC,RMSe ) + ( ( Max( RMSe,RRSe ) * ( RRSe * MUC ) ) - ( RMSe + ( MUC + MUR ) ) ) ) / MUM ) ) / ( ( DS * MUM ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,RRS ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( Max( Const,Min( MRS ,MDR ) ) - ( FirstVNF_Mem / MRS ) ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( PN + MDR ) ) ) )", "choosing": "( ( ( RRSe - Max( ( MUM / ( MUR / DS ) ),MUM ) ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUR * MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( CRS,( FirstVNF_RAM + ( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + DDR ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( ( RRSe - Max( ( RMSe * ( RRSe - DS ) ),( MUC + DS ) ) ),Min( MUR ,MUC ) ) ),( ( CS + RRSe ) + ( MLU / RRSe ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( RRSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / CRS )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,CRS ) ,Max( Const,DDR ) ) - Max( RRS,Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( RMSe ,( MUC * RMSe ) ),( Max( Max( MLU,MUC ),CS ) * Min( CS ,RCSe ) ) ) / ( ( MUC * ( RCSe + RRSe ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS * PN ) * ( MRS - AMS ) ) * ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * AMS ) ) ),( FirstVNF_RAM + AMS ) )", "choosing": "( ( Min( RMSe ,MUC ) * Max( MUM,( ( ( MLU / MLU ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - FirstVNF_CPU ) / FirstVNF_CPU_Server ) + ACS ) )", "choosing": "Max( ( ( Min( MUC ,( CS / RCSe ) ) * ( RCSe + MLU ) ) - CS ),Max( ( RMSe / CS ),( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) - Min( MRS ,Const ) )", "choosing": "( RCSe + ( ( ( CS + MUM ) * ( MLU - RRSe ) ) - ( ( ( Max( ( Min( RCSe ,MUR ) - MUR ),( ( RRSe - MUR ) * ( MUR - CS ) ) ) + MUC ) / RRSe ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,FirstVNF_CPU ) / ARS ) - MRS ) )", "choosing": "( Min( ( DS / RMSe ) ,( MUR - RRSe ) ) / ( ( DS * RRSe ) * Max( ( Max( RRSe,RRSe ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,CRS ),( ( MRS * MDR ) * ( MRS + RRS ) ) ) - ( DDR - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - ARS ) ) )", "choosing": "( ( ( ( Max( MUR,MUC ) / Max( RRSe,RRSe ) ) * ( ( MLU - CS ) * ( Min( ( CS / MUM ) ,DS ) - MUC ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - ARS ),( Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) * ( ( ( ACS - MDR ) / CRS ) - CRS ) ) )", "choosing": "( ( ( MUC + ( ( MUR + RRSe ) * Min( RMSe ,RMSe ) ) ) + MUR ) + ( MUM - ( ( MUM / DS ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,Max( PN,( ( ( ( RRS + RRS ) * FirstVNF_RAM ) + BR ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) ) - ARS ) / ( ( BR + MRS ) / ( FirstVNF_CPU - MDR ) ) )", "choosing": "( ( DS - DS ) + ( MUM + ( ( Min( MUR ,RMSe ) - ( RCSe * RCSe ) ) + Max( ( RRSe + MUR ),( ( Min( ( RCSe + MUC ) ,( RCSe + RMSe ) ) - MUM ) + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( Max( PN,CRS ) - ( BR * PN ) ),CRS ) - RRS ) / ( ( BR - FirstVNF_CPU ) + RRS ) ) + ( CRS - Const ) )", "choosing": "( ( ( ( MLU - RCSe ) + MLU ) + ( Min( MLU ,MUC ) / MUM ) ) / ( ( DS * DS ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) )", "choosing": "( ( Max( MLU,CS ) / ( ( CS * ( MUR + Min( MUM ,DS ) ) ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,Min( ( ( ( ( AMS + ( FirstVNF_RAM - FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) / ( ACS + MRS ) ) * ( PN + ( MDR / FirstVNF_Mem_Server ) ) ) ,ACS ) ) - ( Const / MRS ) )", "choosing": "( Max( MUM,Min( RRSe ,( MUC * Max( ( RMSe * MUR ),MUC ) ) ) ) + ( MLU / ( Min( RMSe ,RCSe ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / Min( MDR ,( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem / CRS ) * ( FirstVNF_RAM - AMS ) ) / ( MRS - Const ) ) ) ) ) )", "choosing": "( ( Max( Max( CS,MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * Max( ( Max( MUR,MUC ) * ( RMSe + MUM ) ),MUR ) ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM * CRS ),( Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU * CRS ) ) - ( Min( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( DDR * RRS ) ) ,ARS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( RMSe / MLU ) ) * Max( MUM,CS ) ) + ( ( RCSe * ( Min( RMSe ,( ( ( RCSe - RRSe ) / Max( MUC,MLU ) ) - ( RRSe * ( MUC - CS ) ) ) ) * ( RCSe + Max( Max( MUC,MUM ),( RCSe * RMSe ) ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,( ( ( Const + PN ) * AMS ) - ( ACS / FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( MUM ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - CRS ) ,ACS ) - BR ) - Max( FirstVNF_RAM,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS - MUM ) / DS ) ,( RCSe + RMSe ) ) / ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) + BR ) ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe / DS ) ,( Max( RRSe,( Max( RMSe,DS ) / Min( RCSe ,RMSe ) ) ) * RMSe ) ) / ( ( DS * MUM ) * Max( ( Max( RRSe,( Max( RMSe,DS ) / Min( RCSe ,RMSe ) ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) * ( ( AMS - AMS ) * ( AMS * PN ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( ( BR - ( MRS / FirstVNF_Mem ) ) + MDR ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / Min( MUM ,Min( MLU ,DS ) ) ) + Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUR * MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( MDR * DDR ) / MRS ) - Min( ( MRS / ( FirstVNF_CPU - ( FirstVNF_RAM_Server - CRS ) ) ) ,AMS ) ) ,FirstVNF_Mem ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( DS * MUC ) / Min( MUM ,MUM ) ) ) ) ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( Min( DS ,( RMSe * ( CS + ( Min( RCSe ,MUR ) * MUC ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( FirstVNF_CPU + ( DDR / MRS ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( ( MUR * MUC ) / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ARS ) - FirstVNF_RAM )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( RMSe + RMSe ) * MUM ) - ( MLU / RRSe ) ) ,( MLU + ( MUR + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * RRSe ) * DS ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - DS ) + ( CS + ( MUR + Min( RRSe ,DS ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( AMS - MDR ) - ( ( CRS - Const ) * FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( ( MUM * CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( Min( MUR ,RMSe ) - ( RRSe * RCSe ) ) + Max( ( MUC + MUR ),( ( MUM - Min( ( MLU * RCSe ) ,( RCSe + MUC ) ) ) + RCSe ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.023382656413932765}, {"determining": "( Max( RRS,Const ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - ( Max( Max( CS,MUM ),Max( CS,MUM ) ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.14990627041520183}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( Max( ( MRS / MDR ),BR ) + ( MRS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM - AMS ) ) / ( ( ( Min( PN ,MRS ) + ACS ) - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( Max( RCSe,MLU ) + CS ) / Min( MUC ,RMSe ) ) * Min( RRSe ,( DS - RMSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.13822611328723663}, {"determining": "( ( ( FirstVNF_RAM + MRS ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / ( Min( FirstVNF_RAM ,( FirstVNF_RAM + Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) ) - Min( DDR ,( MRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( CS - ( CS * Max( ( Max( ( RMSe + MLU ),MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.8372591006423983, "obj2": 0.10222963456611187}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - DS ) + ( CS + ( CS / RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - DS ) + ( CS + ( CS / RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) + Min( ( CS * MLU ) ,( MLU - RRSe ) ) )", "obj1": 0.8137044967880086, "obj2": 0.14566867967005734}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( ( ACS / Const ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + MDR ),( AMS + RRS ) ) * ( ( ACS * Const ) - Min( DDR ,MDR ) ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) + Min( ( DS / Min( ( Min( MUR ,MLU ) + ( Max( RCSe,DS ) / MUR ) ) ,RMSe ) ) ,( MUR * MLU ) ) )", "obj1": 0.8051391862955032, "obj2": 0.14817262790886496}, {"determining": "( Min( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ,( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Min( DDR ,BR ) * Min( ( BR / Const ) ,MDR ) ) ) / CRS ) )", "choosing": "( ( Max( ( MLU - Min( ( RMSe - ( RMSe * Min( MUR ,CS ) ) ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MLU + MUM ) ) ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + ARS ),Max( PN,PN ) ) * Min( Min( ACS ,FirstVNF_Mem ) ,( ARS - MDR ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( ( DS / RMSe ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - ( Max( Max( CS,MUM ),MUM ) - ( DS - ( MUM * RMSe ) ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.14817262790886496}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MRS ) * DDR ) * ( Max( Max( AMS,Min( RRS ,RRS ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( ( Min( Max( ( ( ( CS / MUM ) * DS ) / ( ( MUR + MUM ) - DS ) ),Min( RMSe ,DS ) ) ,( RCSe * Max( MLU,RRSe ) ) ) - MUC ) - ( MLU + ( ( ( ( ( DS - RMSe ) + MLU ) - RMSe ) + ( DS + RCSe ) ) + MUC ) ) ),( ( ( DS + MUM ) + ( MUC * MLU ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / ( ( ACS * MDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUR,( MUM * ( ( RRSe - CS ) * Max( MLU,RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * MRS ) + ( MDR + PN ) ) - ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( MUC / RRSe ) - DS ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) - ( MDR * DDR ) )", "choosing": "( ( Min( Max( ( ( Max( Max( MLU,MUC ),CS ) * MUR ) - RCSe ),( MLU + MUC ) ) ,RRSe ) / Min( RMSe ,( MLU - MLU ) ) ) + ( ( ( CS + MUM ) * Max( DS,RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU + ARS ) ,DDR ) ) - ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe / DS ) ,( RCSe + MLU ) ) / ( ( DS * MUM ) * Max( ( Max( MUC,Max( ( Min( RCSe ,DS ) * MLU ),CS ) ) * RMSe ),( MUR / ( MUM * ( MUR / Max( MUM,( RCSe / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ACS / ( PN * PN ) ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS * ( RRSe / ( ( ( RRSe * RMSe ) * ( CS - DS ) ) * RRSe ) ) ) / RRSe ) ) - ( Min( MUM ,RRSe ) - Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) - Min( ( MRS / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Min( ( CS / DS ) ,( RCSe + MLU ) ) / Max( ( ( RRSe + DS ) * MUM ),Max( ( ( ( Min( MUC ,DS ) / MLU ) - ( Max( Max( RCSe,RCSe ),Min( RMSe ,RCSe ) ) - MUR ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUM ,MUC ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) - ( BR - ( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * BR ) ) * PN ) ) ) + DDR ) ) )", "choosing": "( Max( DS,( ( Max( MUC,RMSe ) + ( ( Max( RMSe,RRSe ) * ( RRSe * MUC ) ) - ( RMSe + ( MUC + MUR ) ) ) ) / MUM ) ) / ( ( DS * MUM ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,RRS ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( Max( Const,Min( MRS ,MDR ) ) - ( FirstVNF_Mem / MRS ) ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( PN + MDR ) ) ) )", "choosing": "( ( ( RRSe - Max( ( MUM / ( MUR / DS ) ),MUM ) ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUR * MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( CRS,( FirstVNF_RAM + ( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + DDR ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( ( RRSe - Max( ( RMSe * ( RRSe - DS ) ),( MUC + DS ) ) ),Min( MUR ,MUC ) ) ),( ( CS + RRSe ) + ( MLU / RRSe ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( RRSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / CRS )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,CRS ) ,Max( Const,DDR ) ) - Max( RRS,Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( RMSe ,( MUC * RMSe ) ),( Max( Max( MLU,MUC ),CS ) * Min( CS ,RCSe ) ) ) / ( ( MUC * ( RCSe + RRSe ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS * PN ) * ( MRS - AMS ) ) * ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * AMS ) ) ),( FirstVNF_RAM + AMS ) )", "choosing": "( ( Min( RMSe ,MUC ) * Max( MUM,( ( ( MLU / MLU ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - FirstVNF_CPU ) / FirstVNF_CPU_Server ) + ACS ) )", "choosing": "Max( ( ( Min( MUC ,( CS / RCSe ) ) * ( RCSe + MLU ) ) - CS ),Max( ( RMSe / CS ),( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) - Min( MRS ,Const ) )", "choosing": "( RCSe + ( ( ( CS + MUM ) * ( MLU - RRSe ) ) - ( ( ( Max( ( Min( RCSe ,MUR ) - MUR ),( ( RRSe - MUR ) * ( MUR - CS ) ) ) + MUC ) / RRSe ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,FirstVNF_CPU ) / ARS ) - MRS ) )", "choosing": "( Min( ( DS / RMSe ) ,( MUR - RRSe ) ) / ( ( DS * RRSe ) * Max( ( Max( RRSe,RRSe ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,CRS ),( ( MRS * MDR ) * ( MRS + RRS ) ) ) - ( DDR - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - ARS ) ) )", "choosing": "( ( ( ( Max( MUR,MUC ) / Max( RRSe,RRSe ) ) * ( ( MLU - CS ) * ( Min( ( CS / MUM ) ,DS ) - MUC ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - ARS ),( Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) * ( ( ( ACS - MDR ) / CRS ) - CRS ) ) )", "choosing": "( ( ( MUC + ( ( MUR + RRSe ) * Min( RMSe ,RMSe ) ) ) + MUR ) + ( MUM - ( ( MUM / DS ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,Max( PN,( ( ( ( RRS + RRS ) * FirstVNF_RAM ) + BR ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) ) - ARS ) / ( ( BR + MRS ) / ( FirstVNF_CPU - MDR ) ) )", "choosing": "( ( DS - DS ) + ( MUM + ( ( Min( MUR ,RMSe ) - ( RCSe * RCSe ) ) + Max( ( RRSe + MUR ),( ( Min( ( RCSe + MUC ) ,( RCSe + RMSe ) ) - MUM ) + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( Max( PN,CRS ) - ( BR * PN ) ),CRS ) - RRS ) / ( ( BR - FirstVNF_CPU ) + RRS ) ) + ( CRS - Const ) )", "choosing": "( ( ( ( MLU - RCSe ) + MLU ) + ( Min( MLU ,MUC ) / MUM ) ) / ( ( DS * DS ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) )", "choosing": "( ( Max( MLU,CS ) / ( ( CS * ( MUR + Min( MUM ,DS ) ) ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,Min( ( ( ( ( AMS + ( FirstVNF_RAM - FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) / ( ACS + MRS ) ) * ( PN + ( MDR / FirstVNF_Mem_Server ) ) ) ,ACS ) ) - ( Const / MRS ) )", "choosing": "( Max( MUM,Min( RRSe ,( MUC * Max( ( RMSe * MUR ),MUC ) ) ) ) + ( MLU / ( Min( RMSe ,RCSe ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / Min( MDR ,( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem / CRS ) * ( FirstVNF_RAM - AMS ) ) / ( MRS - Const ) ) ) ) ) )", "choosing": "( ( Max( Max( CS,MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * Max( ( Max( MUR,MUC ) * ( RMSe + MUM ) ),MUR ) ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM * CRS ),( Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU * CRS ) ) - ( Min( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( DDR * RRS ) ) ,ARS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( RMSe / MLU ) ) * Max( MUM,CS ) ) + ( ( RCSe * ( Min( RMSe ,( ( ( RCSe - RRSe ) / Max( MUC,MLU ) ) - ( RRSe * ( MUC - CS ) ) ) ) * ( RCSe + Max( Max( MUC,MUM ),( RCSe * RMSe ) ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,( ( ( Const + PN ) * AMS ) - ( ACS / FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( MUM ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - CRS ) ,ACS ) - BR ) - Max( FirstVNF_RAM,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS - MUM ) / DS ) ,( RCSe + RMSe ) ) / ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) + BR ) ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe / DS ) ,( Max( RRSe,( Max( RMSe,DS ) / Min( RCSe ,RMSe ) ) ) * RMSe ) ) / ( ( DS * MUM ) * Max( ( Max( RRSe,( Max( RMSe,DS ) / Min( RCSe ,RMSe ) ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) * ( ( AMS - AMS ) * ( AMS * PN ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( ( BR - ( MRS / FirstVNF_Mem ) ) + MDR ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / Min( MUM ,Min( MLU ,DS ) ) ) + Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUR * MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( MDR * DDR ) / MRS ) - Min( ( MRS / ( FirstVNF_CPU - ( FirstVNF_RAM_Server - CRS ) ) ) ,AMS ) ) ,FirstVNF_Mem ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( DS * MUC ) / Min( MUM ,MUM ) ) ) ) ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( Min( DS ,( RMSe * ( CS + ( Min( RCSe ,MUR ) * MUC ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( FirstVNF_CPU + ( DDR / MRS ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( ( MUR * MUC ) / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / ARS ) - FirstVNF_RAM )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( RMSe + RMSe ) * MUM ) - ( MLU / RRSe ) ) ,( MLU + ( MUR + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( ( MDR * FirstVNF_Mem_Server ) ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - Min( Max( MUR,( MUM * ( MUM * ( MLU + RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) ) ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,( Max( RRS,( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) - ( AMS - MDR ) ) ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( RCSe + RMSe ) ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - Max( AMS,Min( MRS ,MDR ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + DDR ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( ( RCSe + ( ( DS * MLU ) + ( DS - CS ) ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( RRSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + ( MRS - FirstVNF_RAM ) ) - ( ARS * BR ) )", "choosing": "( Min( RCSe ,MUM ) / Min( RMSe ,( MLU + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * RRSe ) * DS ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( ( ( Max( RMSe,( RCSe * MUR ) ) - ( ( MUM + Min( MUC ,CS ) ) / MUC ) ) / CS ) + RCSe ) ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - DS ) + ( CS + ( MUR + Min( RRSe ,DS ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( Max( RRS,Const ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - ( Max( Max( CS,MUM ),Max( CS,MUM ) ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.14990627041520183}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( Max( Min( MUR ,Max( RRSe,RCSe ) ),( RCSe + RMSe ) ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6895074946466809, "obj2": 0.1822235641465781}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( Max( ( MRS / MDR ),BR ) + ( MRS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM - AMS ) ) / ( ( ( Min( PN ,MRS ) + ACS ) - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( Max( RCSe,MLU ) + CS ) / Min( MUC ,RMSe ) ) * Min( RRSe ,( DS - RMSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.13822611328723663}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + MDR ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( PN ,FirstVNF_Mem_Server ) + DDR ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,RRSe ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( FirstVNF_RAM + MRS ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / ( Min( FirstVNF_RAM ,( FirstVNF_RAM + Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) ) - Min( DDR ,( MRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( CS - ( CS * Max( ( Max( ( RMSe + MLU ),MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.8372591006423983, "obj2": 0.10222963456611187}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - DS ) + ( CS + ( CS / RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - DS ) + ( CS + ( CS / RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401055}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) + Min( ( CS * MLU ) ,( MLU - RRSe ) ) )", "obj1": 0.8137044967880086, "obj2": 0.14566867967005734}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( ( ACS / Const ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + MDR ),( AMS + RRS ) ) * ( ( ACS * Const ) - Min( DDR ,MDR ) ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) + Min( ( DS / Min( ( Min( MUR ,MLU ) + ( Max( RCSe,DS ) / MUR ) ) ,RMSe ) ) ,( MUR * MLU ) ) )", "obj1": 0.8051391862955032, "obj2": 0.14817262790886496}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,Max( MRS,( Max( DDR,RRS ) * FirstVNF_CPU_Server ) ) ) ) - MDR ) - ( AMS - ( MRS / Min( MDR ,CRS ) ) ) )", "choosing": "( Min( MUR ,( ( ( RMSe * MUM ) + ( RCSe / MUR ) ) * MUC ) ) - ( ( MUM - CS ) * DS ) )", "obj1": 0.6809421841541756, "obj2": 0.19115294949282424}, {"determining": "( Min( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ,( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Min( DDR ,BR ) * Min( ( BR / Const ) ,MDR ) ) ) / CRS ) )", "choosing": "( ( Max( ( MLU - Min( ( RMSe - ( RMSe * Min( MUR ,CS ) ) ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MLU + MUM ) ) ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + ARS ),Max( PN,PN ) ) * Min( Min( ACS ,FirstVNF_Mem ) ,( ARS - MDR ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( ( DS / RMSe ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - ( Max( Max( CS,MUM ),MUM ) - ( DS - ( MUM * RMSe ) ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.8051391862955032, "obj2": 0.14817262790886496}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MRS ) * DDR ) * ( Max( Max( AMS,Min( RRS ,RRS ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( ( Min( Max( ( ( ( CS / MUM ) * DS ) / ( ( MUR + MUM ) - DS ) ),Min( RMSe ,DS ) ) ,( RCSe * Max( MLU,RRSe ) ) ) - MUC ) - ( MLU + ( ( ( ( ( DS - RMSe ) + MLU ) - RMSe ) + ( DS + RCSe ) ) + MUC ) ) ),( ( ( DS + MUM ) + ( MUC * MLU ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / ( ( ACS * MDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUR,( MUM * ( ( RRSe - CS ) * Max( MLU,RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * MRS ) + ( MDR + PN ) ) - ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( MUC / RRSe ) - DS ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) - ( MDR * DDR ) )", "choosing": "( ( Min( Max( ( ( Max( Max( MLU,MUC ),CS ) * MUR ) - RCSe ),( MLU + MUC ) ) ,RRSe ) / Min( RMSe ,( MLU - MLU ) ) ) + ( ( ( CS + MUM ) * Max( DS,RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU + ARS ) ,DDR ) ) - ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe / DS ) ,( RCSe + MLU ) ) / ( ( DS * MUM ) * Max( ( Max( MUC,Max( ( Min( RCSe ,DS ) * MLU ),CS ) ) * RMSe ),( MUR / ( MUM * ( MUR / Max( MUM,( RCSe / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ACS / ( PN * PN ) ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS * ( RRSe / ( ( ( RRSe * RMSe ) * ( CS - DS ) ) * RRSe ) ) ) / RRSe ) ) - ( Min( MUM ,RRSe ) - Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) - Min( ( MRS / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Min( ( CS / DS ) ,( RCSe + MLU ) ) / Max( ( ( RRSe + DS ) * MUM ),Max( ( ( ( Min( MUC ,DS ) / MLU ) - ( Max( Max( RCSe,RCSe ),Min( RMSe ,RCSe ) ) - MUR ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUM ,MUC ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) - ( BR - ( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * BR ) ) * PN ) ) ) + DDR ) ) )", "choosing": "( Max( DS,( ( Max( MUC,RMSe ) + ( ( Max( RMSe,RRSe ) * ( RRSe * MUC ) ) - ( RMSe + ( MUC + MUR ) ) ) ) / MUM ) ) / ( ( DS * MUM ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,RRS ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( Max( Const,Min( MRS ,MDR ) ) - ( FirstVNF_Mem / MRS ) ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( PN + MDR ) ) ) )", "choosing": "( ( ( RRSe - Max( ( MUM / ( MUR / DS ) ),MUM ) ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUR * MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( CRS,( FirstVNF_RAM + ( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + DDR ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( ( RRSe - Max( ( RMSe * ( RRSe - DS ) ),( MUC + DS ) ) ),Min( MUR ,MUC ) ) ),( ( CS + RRSe ) + ( MLU / RRSe ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( RRSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / CRS )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,CRS ) ,Max( Const,DDR ) ) - Max( RRS,Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( RMSe ,( MUC * RMSe ) ),( Max( Max( MLU,MUC ),CS ) * Min( CS ,RCSe ) ) ) / ( ( MUC * ( RCSe + RRSe ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS * PN ) * ( MRS - AMS ) ) * ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * AMS ) ) ),( FirstVNF_RAM + AMS ) )", "choosing": "( ( Min( RMSe ,MUC ) * Max( MUM,( ( ( MLU / MLU ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - FirstVNF_CPU ) / FirstVNF_CPU_Server ) + ACS ) )", "choosing": "Max( ( ( Min( MUC ,( CS / RCSe ) ) * ( RCSe + MLU ) ) - CS ),Max( ( RMSe / CS ),( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) - Min( MRS ,Const ) )", "choosing": "( RCSe + ( ( ( CS + MUM ) * ( MLU - RRSe ) ) - ( ( ( Max( ( Min( RCSe ,MUR ) - MUR ),( ( RRSe - MUR ) * ( MUR - CS ) ) ) + MUC ) / RRSe ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,FirstVNF_CPU ) / ARS ) - MRS ) )", "choosing": "( Min( ( DS / RMSe ) ,( MUR - RRSe ) ) / ( ( DS * RRSe ) * Max( ( Max( RRSe,RRSe ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,CRS ),( ( MRS * MDR ) * ( MRS + RRS ) ) ) - ( DDR - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - ARS ) ) )", "choosing": "( ( ( ( Max( MUR,MUC ) / Max( RRSe,RRSe ) ) * ( ( MLU - CS ) * ( Min( ( CS / MUM ) ,DS ) - MUC ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - ARS ),( Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) * ( ( ( ACS - MDR ) / CRS ) - CRS ) ) )", "choosing": "( ( ( MUC + ( ( MUR + RRSe ) * Min( RMSe ,RMSe ) ) ) + MUR ) + ( MUM - ( ( MUM / DS ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,Max( PN,( ( ( ( RRS + RRS ) * FirstVNF_RAM ) + BR ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) ) - ARS ) / ( ( BR + MRS ) / ( FirstVNF_CPU - MDR ) ) )", "choosing": "( ( DS - DS ) + ( MUM + ( ( Min( MUR ,RMSe ) - ( RCSe * RCSe ) ) + Max( ( RRSe + MUR ),( ( Min( ( RCSe + MUC ) ,( RCSe + RMSe ) ) - MUM ) + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( Max( PN,CRS ) - ( BR * PN ) ),CRS ) - RRS ) / ( ( BR - FirstVNF_CPU ) + RRS ) ) + ( CRS - Const ) )", "choosing": "( ( ( ( MLU - RCSe ) + MLU ) + ( Min( MLU ,MUC ) / MUM ) ) / ( ( DS * DS ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) )", "choosing": "( ( Max( MLU,CS ) / ( ( CS * ( MUR + Min( MUM ,DS ) ) ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,Min( ( ( ( ( AMS + ( FirstVNF_RAM - FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) / ( ACS + MRS ) ) * ( PN + ( MDR / FirstVNF_Mem_Server ) ) ) ,ACS ) ) - ( Const / MRS ) )", "choosing": "( Max( MUM,Min( RRSe ,( MUC * Max( ( RMSe * MUR ),MUC ) ) ) ) + ( MLU / ( Min( RMSe ,RCSe ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / Min( MDR ,( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem / CRS ) * ( FirstVNF_RAM - AMS ) ) / ( MRS - Const ) ) ) ) ) )", "choosing": "( ( Max( Max( CS,MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * Max( ( Max( MUR,MUC ) * ( RMSe + MUM ) ),MUR ) ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM * CRS ),( Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU * CRS ) ) - ( Min( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( DDR * RRS ) ) ,ARS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( RMSe / MLU ) ) * Max( MUM,CS ) ) + ( ( RCSe * ( Min( RMSe ,( ( ( RCSe - RRSe ) / Max( MUC,MLU ) ) - ( RRSe * ( MUC - CS ) ) ) ) * ( RCSe + Max( Max( MUC,MUM ),( RCSe * RMSe ) ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,( ( ( Const + PN ) * AMS ) - ( ACS / FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( MUM ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - CRS ) ,ACS ) - BR ) - Max( FirstVNF_RAM,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_CPU ) ) )", "choosing": "( Min( ( ( DS - MUM ) / DS ) ,( RCSe + RMSe ) ) / ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - Min( ( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ) + BR ) ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe / DS ) ,( Max( RRSe,( Max( RMSe,DS ) / Min( RCSe ,RMSe ) ) ) * RMSe ) ) / ( ( DS * MUM ) * Max( ( Max( RRSe,( Max( RMSe,DS ) / Min( RCSe ,RMSe ) ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) * ( ( AMS - AMS ) * ( AMS * PN ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( ( BR - ( MRS / FirstVNF_Mem ) ) + MDR ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / Min( MUM ,Min( MLU ,DS ) ) ) + Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUR * MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( MDR * DDR ) / MRS ) - Min( ( MRS / ( FirstVNF_CPU - ( FirstVNF_RAM_Server - CRS ) ) ) ,AMS ) ) ,FirstVNF_Mem ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( DS * MUC ) / Min( MUM ,MUM ) ) ) ) ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( Min( DS ,( RMSe * ( CS + ( Min( RCSe ,MUR ) * MUC ) ) ) ) - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( FirstVNF_CPU + ( DDR / MRS ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( ( MUR * MUC ) / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_CPU_Server / ( ARS + PN ) ) ) ) ) / CRS ) )", "choosing": "( ( Max( Max( CS,MUM ),( MLU - ( Max( Max( RCSe,CS ),Min( RMSe ,RCSe ) ) - MUR ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( Max( RRS,Const ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - ( Max( Max( CS,MUM ),Max( CS,MUM ) ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.14990627041520183}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - DS ) + ( CS + ( MUR + Min( RRSe ,DS ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - DS ) + ( CS + ( CS / RCSe ) ) )", "obj1": 0.8436830835117773, "obj2": 0.08860065042911337}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( Max( ( MRS / MDR ),BR ) + ( MRS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM - AMS ) ) / ( ( ( Min( PN ,MRS ) + ACS ) - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( Max( RCSe,MLU ) + CS ) / Min( MUC ,RMSe ) ) * Min( RRSe ,( DS - RMSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.13822611328723663}, {"determining": "Max( ( ( Const * FirstVNF_RAM_Server ) * Min( ( PN + FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( Min( FirstVNF_RAM ,MRS ) / ( DDR - Max( ( FirstVNF_RAM_Server + Const ),Min( FirstVNF_RAM ,( CRS / AMS ) ) ) ) ) )", "choosing": "( ( MUM - ( Max( MUR,Min( MLU ,( RRSe / MUR ) ) ) + Max( MUM,( ( ( MUR - DS ) - ( ( MUR - CS ) - RCSe ) ) * ( RRSe - MUM ) ) ) ) ) - Max( RCSe,MUR ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( FirstVNF_RAM + MRS ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / ( Min( FirstVNF_RAM ,( FirstVNF_RAM + Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) ) - Min( DDR ,( MRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( CS - ( CS * Max( ( Max( ( RMSe + MLU ),MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.8372591006423983, "obj2": 0.10222963456611187}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( Max( Min( MUR ,Max( RRSe,RCSe ) ),( RCSe + RMSe ) ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6895074946466809, "obj2": 0.1822235641465781}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( ( ACS / Const ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + MDR ),( AMS + RRS ) ) * ( ( ACS * Const ) - Min( DDR ,MDR ) ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) + Min( ( DS / Min( ( Min( MUR ,MLU ) + ( Max( RCSe,DS ) / MUR ) ) ,RMSe ) ) ,( MUR * MLU ) ) )", "obj1": 0.8051391862955032, "obj2": 0.14817262790886496}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + ARS ),( AMS + Min( Max( RRS,Const ) ,FirstVNF_Mem ) ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - ( ( MUR + Min( MUM ,DS ) ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.815845824411135, "obj2": 0.1455046442181246}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( ACS - PN ) ) / FirstVNF_Mem )", "choosing": "( ( RCSe * MUC ) + ( MLU / ( CS + MUC ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,Max( MRS,( Max( DDR,RRS ) * FirstVNF_CPU_Server ) ) ) ) - MDR ) - ( AMS - ( MRS / Min( MDR ,CRS ) ) ) )", "choosing": "( Min( MUR ,( ( ( RMSe * MUM ) + ( RCSe / MUR ) ) * MUC ) ) - ( ( MUM - CS ) * DS ) )", "obj1": 0.6809421841541756, "obj2": 0.19115294949282424}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) + Min( ( CS * MLU ) ,( MLU - RRSe ) ) )", "obj1": 0.8137044967880086, "obj2": 0.14566867967005734}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( ( ACS / Const ) + ( DDR / Const ) ) ) / ( Min( ( ARS - MDR ) ,Min( ACS ,RRS ) ) * Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + MDR ),( AMS + RRS ) ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,RRSe ) - DS ) - MLU ) * ( MUR - ( ( RCSe * MUC ) + RRSe ) ) ) * ( ( MUC - RMSe ) / ( ( ( MUR - RCSe ) * ( RRSe + CS ) ) - ( RMSe / DS ) ) ) ) / ( CS - MUC ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.8051391862955032, "obj2": 0.14817262790886496}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( Max( CS,MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( Min( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ,( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Min( DDR ,BR ) * Min( ( BR / Const ) ,MDR ) ) ) / CRS ) )", "choosing": "( ( Max( ( MLU - Min( ( RMSe - ( RMSe * Min( MUR ,CS ) ) ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MLU + MUM ) ) ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( MUC,DS ) ) ,DS ) ,MUM ) - RMSe ),( RCSe / CS ) ),( CS + RCSe ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( ( ( ( MUC + ( ( RMSe / DS ) - MUC ) ) * RRSe ) * MLU ) / RRSe ) / ( Min( ( MUR - RRSe ) ,RCSe ) - ( MLU / RRSe ) ) ) - ( Min( RMSe ,MUR ) + ( RRSe * MUC ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * RRSe ) * DS ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MRS ) * DDR ) * ( Max( Max( AMS,Min( RRS ,RRS ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( ( Min( Max( ( ( ( CS / MUM ) * DS ) / ( ( MUR + MUM ) - DS ) ),Min( RMSe ,DS ) ) ,( RCSe * Max( MLU,RRSe ) ) ) - MUC ) - ( MLU + ( ( ( ( ( DS - RMSe ) + MLU ) - RMSe ) + ( DS + RCSe ) ) + MUC ) ) ),( ( ( DS + MUM ) + ( MUC * MLU ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / ( ( ACS * MDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUR,( MUM * ( ( RRSe - CS ) * Max( MLU,RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * MRS ) + ( MDR + PN ) ) - ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( MUC / RRSe ) - DS ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) - ( MDR * DDR ) )", "choosing": "( ( Min( Max( ( ( Max( Max( MLU,MUC ),CS ) * MUR ) - RCSe ),( MLU + MUC ) ) ,RRSe ) / Min( RMSe ,( MLU - MLU ) ) ) + ( ( ( CS + MUM ) * Max( DS,RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU + ARS ) ,DDR ) ) - ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe / DS ) ,( RCSe + MLU ) ) / ( ( DS * MUM ) * Max( ( Max( MUC,Max( ( Min( RCSe ,DS ) * MLU ),CS ) ) * RMSe ),( MUR / ( MUM * ( MUR / Max( MUM,( RCSe / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ACS / ( PN * PN ) ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS * ( RRSe / ( ( ( RRSe * RMSe ) * ( CS - DS ) ) * RRSe ) ) ) / RRSe ) ) - ( Min( MUM ,RRSe ) - Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) - Min( ( MRS / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Min( ( CS / DS ) ,( RCSe + MLU ) ) / Max( ( ( RRSe + DS ) * MUM ),Max( ( ( ( Min( MUC ,DS ) / MLU ) - ( Max( Max( RCSe,RCSe ),Min( RMSe ,RCSe ) ) - MUR ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUM ,MUC ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) - ( BR - ( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * BR ) ) * PN ) ) ) + DDR ) ) )", "choosing": "( Max( DS,( ( Max( MUC,RMSe ) + ( ( Max( RMSe,RRSe ) * ( RRSe * MUC ) ) - ( RMSe + ( MUC + MUR ) ) ) ) / MUM ) ) / ( ( DS * MUM ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,RRS ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( Max( Const,Min( MRS ,MDR ) ) - ( FirstVNF_Mem / MRS ) ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( PN + MDR ) ) ) )", "choosing": "( ( ( RRSe - Max( ( MUM / ( MUR / DS ) ),MUM ) ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUR * MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( CRS,( FirstVNF_RAM + ( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + DDR ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( ( RRSe - Max( ( RMSe * ( RRSe - DS ) ),( MUC + DS ) ) ),Min( MUR ,MUC ) ) ),( ( CS + RRSe ) + ( MLU / RRSe ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( RRSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / CRS )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,CRS ) ,Max( Const,DDR ) ) - Max( RRS,Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( RMSe ,( MUC * RMSe ) ),( Max( Max( MLU,MUC ),CS ) * Min( CS ,RCSe ) ) ) / ( ( MUC * ( RCSe + RRSe ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS * PN ) * ( MRS - AMS ) ) * ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * AMS ) ) ),( FirstVNF_RAM + AMS ) )", "choosing": "( ( Min( RMSe ,MUC ) * Max( MUM,( ( ( MLU / MLU ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - FirstVNF_CPU ) / FirstVNF_CPU_Server ) + ACS ) )", "choosing": "Max( ( ( Min( MUC ,( CS / RCSe ) ) * ( RCSe + MLU ) ) - CS ),Max( ( RMSe / CS ),( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) - Min( MRS ,Const ) )", "choosing": "( RCSe + ( ( ( CS + MUM ) * ( MLU - RRSe ) ) - ( ( ( Max( ( Min( RCSe ,MUR ) - MUR ),( ( RRSe - MUR ) * ( MUR - CS ) ) ) + MUC ) / RRSe ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,FirstVNF_CPU ) / ARS ) - MRS ) )", "choosing": "( Min( ( DS / RMSe ) ,( MUR - RRSe ) ) / ( ( DS * RRSe ) * Max( ( Max( RRSe,RRSe ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,CRS ),( ( MRS * MDR ) * ( MRS + RRS ) ) ) - ( DDR - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - ARS ) ) )", "choosing": "( ( ( ( Max( MUR,MUC ) / Max( RRSe,RRSe ) ) * ( ( MLU - CS ) * ( Min( ( CS / MUM ) ,DS ) - MUC ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - ARS ),( Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) * ( ( ( ACS - MDR ) / CRS ) - CRS ) ) )", "choosing": "( ( ( MUC + ( ( MUR + RRSe ) * Min( RMSe ,RMSe ) ) ) + MUR ) + ( MUM - ( ( MUM / DS ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,Max( PN,( ( ( ( RRS + RRS ) * FirstVNF_RAM ) + BR ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) ) - ARS ) / ( ( BR + MRS ) / ( FirstVNF_CPU - MDR ) ) )", "choosing": "( ( DS - DS ) + ( MUM + ( ( Min( MUR ,RMSe ) - ( RCSe * RCSe ) ) + Max( ( RRSe + MUR ),( ( Min( ( RCSe + MUC ) ,( RCSe + RMSe ) ) - MUM ) + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ( Max( PN,CRS ) - ( BR * PN ) ),CRS ) - RRS ) / ( ( BR - FirstVNF_CPU ) + RRS ) ) + ( CRS - Const ) )", "choosing": "( ( ( ( MLU - RCSe ) + MLU ) + ( Min( MLU ,MUC ) / MUM ) ) / ( ( DS * DS ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) )", "choosing": "( ( Max( MLU,CS ) / ( ( CS * ( MUR + Min( MUM ,DS ) ) ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,Min( ( ( ( ( AMS + ( FirstVNF_RAM - FirstVNF_Mem ) ) + FirstVNF_Mem_Server ) / ( ACS + MRS ) ) * ( PN + ( MDR / FirstVNF_Mem_Server ) ) ) ,ACS ) ) - ( Const / MRS ) )", "choosing": "( Max( MUM,Min( RRSe ,( MUC * Max( ( RMSe * MUR ),MUC ) ) ) ) + ( MLU / ( Min( RMSe ,RCSe ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / Min( MDR ,( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem / CRS ) * ( FirstVNF_RAM - AMS ) ) / ( MRS - Const ) ) ) ) ) )", "choosing": "( ( Max( Max( CS,MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * Max( ( Max( MUR,MUC ) * ( RMSe + MUM ) ),MUR ) ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM * CRS ),( Min( ( FirstVNF_Mem_Server / PN ) ,( FirstVNF_CPU * CRS ) ) - ( Min( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,( DDR * RRS ) ) ,ARS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - ( RMSe / MLU ) ) * Max( MUM,CS ) ) + ( ( RCSe * ( Min( RMSe ,( ( ( RCSe - RRSe ) / Max( MUC,MLU ) ) - ( RRSe * ( MUC - CS ) ) ) ) * ( RCSe + Max( Max( MUC,MUM ),( RCSe * RMSe ) ) ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( ( Const + Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) ) * ( CRS + Min( Const ,FirstVNF_RAM_Server ) ) ) * Max( MRS,( BR - RRS ) ) )", "choosing": "Min( ( ( Min( MUR ,( CS * MLU ) ) * RRSe ) + Min( CS ,RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - ( Max( ( Max( DDR,( RRS / BR ) ) * Min( BR ,CRS ) ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) + ( ( ( RRS + DDR ) + ( Max( ( Min( FirstVNF_RAM ,CRS ) - FirstVNF_CPU ),BR ) + CRS ) ) - ( ( AMS - ACS ) * Max( FirstVNF_CPU,ACS ) ) ) )", "choosing": "( ( ( ( ( ( MUC + ( ( MLU / DS ) - MUC ) ) * RRSe ) * MLU ) / Min( MUC ,RMSe ) ) / ( Min( ( MUR - RRSe ) ,RCSe ) - ( MLU / RRSe ) ) ) - Max( RCSe,Min( RCSe ,( MUM - Max( ( ( Min( RMSe ,DS ) - Min( MUC ,MLU ) ) / MLU ),MUM ) ) ) ) )", "obj1": 0.6680942184154176, "obj2": 0.21447339286329697}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - DS ) + ( CS + ( CS / RCSe ) ) )", "obj1": 0.8436830835117773, "obj2": 0.08860065042911337}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( Max( ( MRS / MDR ),BR ) + ( MRS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM - AMS ) ) / ( ( ( Min( PN ,MRS ) + ACS ) - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( Max( RCSe,MLU ) + CS ) / Min( MUC ,RMSe ) ) * Min( RRSe ,( DS - RMSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.13822611328723663}, {"determining": "Max( ( ( Const * FirstVNF_RAM_Server ) * Min( ( PN + FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( Min( FirstVNF_RAM ,MRS ) / ( DDR - Max( ( FirstVNF_RAM_Server + Const ),Min( FirstVNF_RAM ,( CRS / AMS ) ) ) ) ) )", "choosing": "( ( MUM - ( Max( MUR,Min( MLU ,( RRSe / MUR ) ) ) + Max( MUM,( ( ( MUR - DS ) - ( ( MUR - CS ) - RCSe ) ) * ( RRSe - MUM ) ) ) ) ) - Max( RCSe,MUR ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( FirstVNF_RAM + MRS ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / ( Min( FirstVNF_RAM ,( FirstVNF_RAM + Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) ) - Min( DDR ,( MRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( CS - ( CS * Max( ( Max( ( RMSe + MLU ),MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.8372591006423983, "obj2": 0.10222963456611187}, {"determining": "( Max( RRS,Const ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - ( Max( Max( CS,MUM ),Max( CS,MUM ) ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.14990627041520183}, {"determining": "( Max( ( RRS / Max( DDR,( PN - MRS ) ) ),Const ) - Min( FirstVNF_Mem ,( CRS / AMS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.14990627041520183}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ),ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( Max( Min( MUR ,Max( RRSe,RCSe ) ),( RCSe + RMSe ) ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6895074946466809, "obj2": 0.1822235641465781}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( MDR ,ACS ) ) + FirstVNF_CPU ) ),Min( ARS ,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( CS - MUM ),MUM ) + ( ( RRSe / CS ) + MLU ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( ( ACS / Const ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + MDR ),( AMS + RRS ) ) * ( ( ACS * Const ) - Min( DDR ,MDR ) ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) + Min( ( DS / Min( ( Min( MUR ,MLU ) + ( Max( RCSe,DS ) / MUR ) ) ,RMSe ) ) ,( MUR * MLU ) ) )", "obj1": 0.8051391862955032, "obj2": 0.14817262790886496}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + ARS ),( AMS + Min( Max( RRS,Const ) ,FirstVNF_Mem ) ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - ( ( MUR + Min( MUM ,DS ) ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.815845824411135, "obj2": 0.1455046442181246}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( ACS - PN ) ) / FirstVNF_Mem )", "choosing": "( ( RCSe * MUC ) + ( MLU / ( CS + MUC ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,Max( MRS,( Max( DDR,RRS ) * FirstVNF_CPU_Server ) ) ) ) - MDR ) - ( AMS - ( MRS / Min( MDR ,CRS ) ) ) )", "choosing": "( Min( MUR ,( ( ( RMSe * MUM ) + ( RCSe / MUR ) ) * MUC ) ) - ( ( MUM - CS ) * DS ) )", "obj1": 0.6809421841541756, "obj2": 0.19115294949282424}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,MRS ) ) * BR ),( Const / ( DDR / BR ) ) ) * Min( MRS ,( FirstVNF_CPU_Server / Max( ARS,PN ) ) ) ) ) / CRS ) )", "choosing": "( ( Max( Max( Max( MUM,( ( ( MLU / RCSe ) * Min( DS ,MLU ) ) - DS ) ),MUM ),( MLU - ( MUR - Max( Max( RCSe,CS ),Min( RMSe ,RCSe ) ) ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - ( CS + RCSe ) ) ) * CS ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_CPU_Server / ( ARS + PN ) ) ) ) ) / CRS ) )", "choosing": "( ( Max( Max( CS,MUM ),( MLU - ( Max( Max( RCSe,CS ),Min( RMSe ,RCSe ) ) - MUR ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( ( ACS / Const ) + ( DDR / Const ) ) ) / ( Min( ( ARS - MDR ) ,Min( ACS ,RRS ) ) * Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + MDR ),( AMS + RRS ) ) ) )", "choosing": "( ( ( ( ( ( Max( MUC,RRSe ) - DS ) - MLU ) * ( MUR - ( ( RCSe * MUC ) + RRSe ) ) ) * ( ( MUC - RMSe ) / ( ( ( MUR - RCSe ) * ( RRSe + CS ) ) - ( RMSe / DS ) ) ) ) / ( CS - MUC ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.8051391862955032, "obj2": 0.14817262790886496}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( Max( CS,MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( Min( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ,( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Min( DDR ,BR ) * Min( ( BR / Const ) ,MDR ) ) ) / CRS ) )", "choosing": "( ( Max( ( MLU - Min( ( RMSe - ( RMSe * Min( MUR ,CS ) ) ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MLU + MUM ) ) ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) + Min( ( CS * MLU ) ,( MLU - RRSe ) ) )", "obj1": 0.8137044967880086, "obj2": 0.14566867967005734}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * RRSe ) * DS ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( ( ( ( MUC + ( ( RMSe / DS ) - MUC ) ) * RRSe ) * MLU ) / RRSe ) / ( Min( ( MUR - RRSe ) ,RCSe ) - ( MLU / RRSe ) ) ) - ( Min( RMSe ,MUR ) + ( RRSe * MUC ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( MUC,DS ) ) ,DS ) ,MUM ) - RMSe ),( RCSe / CS ) ),( CS + RCSe ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_CPU_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 0.8137044967880086, "obj2": 0.14566867967005734}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MRS ) * DDR ) * ( Max( Max( AMS,Min( RRS ,RRS ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( ( Min( Max( ( ( ( CS / MUM ) * DS ) / ( ( MUR + MUM ) - DS ) ),Min( RMSe ,DS ) ) ,( RCSe * Max( MLU,RRSe ) ) ) - MUC ) - ( MLU + ( ( ( ( ( DS - RMSe ) + MLU ) - RMSe ) + ( DS + RCSe ) ) + MUC ) ) ),( ( ( DS + MUM ) + ( MUC * MLU ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / ( ( ACS * MDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUR,( MUM * ( ( RRSe - CS ) * Max( MLU,RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * MRS ) + ( MDR + PN ) ) - ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( MUC / RRSe ) - DS ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) - ( MDR * DDR ) )", "choosing": "( ( Min( Max( ( ( Max( Max( MLU,MUC ),CS ) * MUR ) - RCSe ),( MLU + MUC ) ) ,RRSe ) / Min( RMSe ,( MLU - MLU ) ) ) + ( ( ( CS + MUM ) * Max( DS,RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU + ARS ) ,DDR ) ) - ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe / DS ) ,( RCSe + MLU ) ) / ( ( DS * MUM ) * Max( ( Max( MUC,Max( ( Min( RCSe ,DS ) * MLU ),CS ) ) * RMSe ),( MUR / ( MUM * ( MUR / Max( MUM,( RCSe / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ACS / ( PN * PN ) ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS * ( RRSe / ( ( ( RRSe * RMSe ) * ( CS - DS ) ) * RRSe ) ) ) / RRSe ) ) - ( Min( MUM ,RRSe ) - Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) - Min( ( MRS / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Min( ( CS / DS ) ,( RCSe + MLU ) ) / Max( ( ( RRSe + DS ) * MUM ),Max( ( ( ( Min( MUC ,DS ) / MLU ) - ( Max( Max( RCSe,RCSe ),Min( RMSe ,RCSe ) ) - MUR ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUM ,MUC ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) - ( BR - ( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * BR ) ) * PN ) ) ) + DDR ) ) )", "choosing": "( Max( DS,( ( Max( MUC,RMSe ) + ( ( Max( RMSe,RRSe ) * ( RRSe * MUC ) ) - ( RMSe + ( MUC + MUR ) ) ) ) / MUM ) ) / ( ( DS * MUM ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,RRS ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( Max( Const,Min( MRS ,MDR ) ) - ( FirstVNF_Mem / MRS ) ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( PN + MDR ) ) ) )", "choosing": "( ( ( RRSe - Max( ( MUM / ( MUR / DS ) ),MUM ) ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUR * MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( CRS,( FirstVNF_RAM + ( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + DDR ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( ( RRSe - Max( ( RMSe * ( RRSe - DS ) ),( MUC + DS ) ) ),Min( MUR ,MUC ) ) ),( ( CS + RRSe ) + ( MLU / RRSe ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( RRSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / CRS )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,CRS ) ,Max( Const,DDR ) ) - Max( RRS,Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( RMSe ,( MUC * RMSe ) ),( Max( Max( MLU,MUC ),CS ) * Min( CS ,RCSe ) ) ) / ( ( MUC * ( RCSe + RRSe ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS * PN ) * ( MRS - AMS ) ) * ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * AMS ) ) ),( FirstVNF_RAM + AMS ) )", "choosing": "( ( Min( RMSe ,MUC ) * Max( MUM,( ( ( MLU / MLU ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - FirstVNF_CPU ) / FirstVNF_CPU_Server ) + ACS ) )", "choosing": "Max( ( ( Min( MUC ,( CS / RCSe ) ) * ( RCSe + MLU ) ) - CS ),Max( ( RMSe / CS ),( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) - Min( MRS ,Const ) )", "choosing": "( RCSe + ( ( ( CS + MUM ) * ( MLU - RRSe ) ) - ( ( ( Max( ( Min( RCSe ,MUR ) - MUR ),( ( RRSe - MUR ) * ( MUR - CS ) ) ) + MUC ) / RRSe ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,FirstVNF_CPU ) / ARS ) - MRS ) )", "choosing": "( Min( ( DS / RMSe ) ,( MUR - RRSe ) ) / ( ( DS * RRSe ) * Max( ( Max( RRSe,RRSe ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,CRS ),( ( MRS * MDR ) * ( MRS + RRS ) ) ) - ( DDR - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - ARS ) ) )", "choosing": "( ( ( ( Max( MUR,MUC ) / Max( RRSe,RRSe ) ) * ( ( MLU - CS ) * ( Min( ( CS / MUM ) ,DS ) - MUC ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - ARS ),( Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) * ( ( ( ACS - MDR ) / CRS ) - CRS ) ) )", "choosing": "( ( ( MUC + ( ( MUR + RRSe ) * Min( RMSe ,RMSe ) ) ) + MUR ) + ( MUM - ( ( MUM / DS ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,Max( PN,( ( ( ( RRS + RRS ) * FirstVNF_RAM ) + BR ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) ) - ARS ) / ( ( BR + MRS ) / ( FirstVNF_CPU - MDR ) ) )", "choosing": "( ( DS - DS ) + ( MUM + ( ( Min( MUR ,RMSe ) - ( RCSe * RCSe ) ) + Max( ( RRSe + MUR ),( ( Min( ( RCSe + MUC ) ,( RCSe + RMSe ) ) - MUM ) + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( Min( PN ,CRS ) - ( ( Max( RRS,( ( FirstVNF_Mem - MDR ) / ( RRS - AMS ) ) ) * ( FirstVNF_RAM + RRS ) ) - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( ( ( RRSe + MUC ) * ( ( RRSe + DS ) - RRSe ) ),Max( MLU,Max( ( ( ( DS / MUM ) + MUM ) + Max( MUM,( RMSe / RMSe ) ) ),( ( CS + CS ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) ) * ( CRS + Min( Const ,FirstVNF_RAM_Server ) ) ) * Max( MRS,( BR - RRS ) ) )", "choosing": "Min( ( ( Min( MUR ,( CS * MLU ) ) * RRSe ) + Min( CS ,RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - ( Max( ( Max( DDR,( RRS / BR ) ) * Min( BR ,CRS ) ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) + ( ( ( RRS + DDR ) + ( Max( ( Min( FirstVNF_RAM ,CRS ) - FirstVNF_CPU ),BR ) + CRS ) ) - ( ( AMS - ACS ) * Max( FirstVNF_CPU,ACS ) ) ) )", "choosing": "( ( ( ( ( ( MUC + ( ( MLU / DS ) - MUC ) ) * RRSe ) * MLU ) / Min( MUC ,RMSe ) ) / ( Min( ( MUR - RRSe ) ,RCSe ) - ( MLU / RRSe ) ) ) - Max( RCSe,Min( RCSe ,( MUM - Max( ( ( Min( RMSe ,DS ) - Min( MUC ,MLU ) ) / MLU ),MUM ) ) ) ) )", "obj1": 0.6680942184154176, "obj2": 0.21447339286329697}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( Max( ( MRS / MDR ),BR ) + ( MRS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM - AMS ) ) / ( ( ( Min( PN ,MRS ) + ACS ) - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( Max( RCSe,MLU ) + CS ) / Min( MUC ,RMSe ) ) * Min( RRSe ,( DS - RMSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.13822611328723663}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( Min( FirstVNF_RAM ,( CRS + ( ( FirstVNF_Mem_Server / RRS ) - CRS ) ) ) - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( Min( DDR ,( ( FirstVNF_CPU_Server + Const ) * PN ) ) / RRS ) ) )", "choosing": "( Min( CS ,Min( MUC ,MLU ) ) + ( ( ( DS - ( Max( Max( CS,MUM ),Max( MUM,RRSe ) ) - ( ( Max( MUC,MUC ) * MLU ) - DS ) ) ) * ( CS + MUM ) ) - ( MUR * MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.0849668429541316}, {"determining": "Max( ( ( Const * FirstVNF_RAM_Server ) * Min( ( PN + FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( Min( FirstVNF_RAM ,MRS ) / ( DDR - Max( ( FirstVNF_RAM_Server + Const ),Min( FirstVNF_RAM ,( CRS / AMS ) ) ) ) ) )", "choosing": "( ( MUM - ( Max( MUR,Min( MLU ,( RRSe / MUR ) ) ) + Max( MUM,( ( ( MUR - DS ) - ( ( MUR - CS ) - RCSe ) ) * ( RRSe - MUM ) ) ) ) ) - Max( RCSe,MUR ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( FirstVNF_RAM + MRS ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / ( Min( FirstVNF_RAM ,( FirstVNF_RAM + Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) ) - Min( DDR ,( MRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( CS - ( CS * Max( ( Max( ( RMSe + MLU ),MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.8372591006423983, "obj2": 0.10222963456611187}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,( CRS / ( RRS + CRS ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( MUC ,RCSe ) - ( ( ( MUR + MUR ) / DS ) + RCSe ) ) ) + ( ( ( RCSe + RMSe ) / MLU ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.145213185101084}, {"determining": "( Max( RRS,Const ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( RCSe ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + MUM ) * ( DS - ( Max( Max( CS,MUM ),Max( CS,MUM ) ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.14990627041520183}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( MUC / DS ) - Max( MUM,MLU ) ) ) * RRSe ) * DS ) )", "obj1": 0.6895074946466809, "obj2": 0.1688439545244625}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( ACS - PN ) ) / FirstVNF_Mem )", "choosing": "( ( RCSe * MUC ) + ( MLU / ( CS + MUC ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( MDR ,ACS ) ) + FirstVNF_CPU ) ),Min( ARS ,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( CS - MUM ),MUM ) + ( ( RRSe / CS ) + MLU ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( Min( FirstVNF_CPU_Server ,( Min( FirstVNF_CPU ,FirstVNF_RAM ) / AMS ) ) - Max( RRS,Const ) )", "choosing": "( ( ( RRSe + ( MUM * MUC ) ) / ( CS + ( CS / MUR ) ) ) / Min( MUM ,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.14990627041520183}, {"determining": "( Max( ARS,AMS ) - ( FirstVNF_RAM - Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM + Max( CS,CS ) ) - ( MLU - RRSe ) )", "obj1": 0.6702355460385439, "obj2": 0.208847990936383}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,Max( MRS,( Max( DDR,RRS ) * FirstVNF_CPU_Server ) ) ) ) - MDR ) - ( AMS - ( MRS / Min( MDR ,CRS ) ) ) )", "choosing": "( Min( MUR ,( ( ( RMSe * MUM ) + ( RCSe / MUR ) ) * MUC ) ) - ( ( MUM - CS ) * DS ) )", "obj1": 0.6809421841541756, "obj2": 0.19115294949282424}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,RRS ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( Min( ( DS + MUM ) ,MUR ) + MUM ) / ( MUR / ( MUC + ( ( RMSe / DS ) - MUC ) ) ) ),MUM ) + ( MLU / ( RRSe / CS ) ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( Max( ( RRS / Max( DDR,( PN - MRS ) ) ),Const ) - Min( FirstVNF_Mem ,( CRS / AMS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7708779443254818, "obj2": 0.14666467876655945}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,MRS ) ) * BR ),( Const / ( DDR / BR ) ) ) * Min( MRS ,( FirstVNF_CPU_Server / Max( ARS,PN ) ) ) ) ) / CRS ) )", "choosing": "( ( Max( Max( Max( MUM,( ( ( MLU / RCSe ) * Min( DS ,MLU ) ) - DS ) ),MUM ),( MLU - ( MUR - Max( Max( RCSe,CS ),Min( RMSe ,RCSe ) ) ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - ( CS + RCSe ) ) ) * CS ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( Max( CS,MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,MRS ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_CPU_Server / ( ARS + PN ) ) ) ) ) / CRS ) )", "choosing": "( Max( ( ( Min( ( RCSe * Min( MUR ,MUM ) ) ,MUR ) + MUM ) / ( MUR / DS ) ),MUM ) + ( MLU / ( RRSe / CS ) ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( Min( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ,( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Min( DDR ,BR ) * Min( ( BR / Const ) ,MDR ) ) ) / CRS ) )", "choosing": "( ( Max( ( MLU - Min( ( RMSe - ( RMSe * Min( MUR ,CS ) ) ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MLU + MUM ) ) ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( DS - DS ) + ( CS + ( ( MLU / ( MLU / MUM ) ) + Min( MUR ,( DS - MUM ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( MUC / DS ) - MUC ) ) * RRSe ) * DS ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MRS ) * DDR ) * ( Max( Max( AMS,Min( RRS ,RRS ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( ( Min( Max( ( ( ( CS / MUM ) * DS ) / ( ( MUR + MUM ) - DS ) ),Min( RMSe ,DS ) ) ,( RCSe * Max( MLU,RRSe ) ) ) - MUC ) - ( MLU + ( ( ( ( ( DS - RMSe ) + MLU ) - RMSe ) + ( DS + RCSe ) ) + MUC ) ) ),( ( ( DS + MUM ) + ( MUC * MLU ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / ( ( ACS * MDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUR,( MUM * ( ( RRSe - CS ) * Max( MLU,RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * MRS ) + ( MDR + PN ) ) - ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( MUC / RRSe ) - DS ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) - ( MDR * DDR ) )", "choosing": "( ( Min( Max( ( ( Max( Max( MLU,MUC ),CS ) * MUR ) - RCSe ),( MLU + MUC ) ) ,RRSe ) / Min( RMSe ,( MLU - MLU ) ) ) + ( ( ( CS + MUM ) * Max( DS,RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU + ARS ) ,DDR ) ) - ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe / DS ) ,( RCSe + MLU ) ) / ( ( DS * MUM ) * Max( ( Max( MUC,Max( ( Min( RCSe ,DS ) * MLU ),CS ) ) * RMSe ),( MUR / ( MUM * ( MUR / Max( MUM,( RCSe / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ACS / ( PN * PN ) ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS * ( RRSe / ( ( ( RRSe * RMSe ) * ( CS - DS ) ) * RRSe ) ) ) / RRSe ) ) - ( Min( MUM ,RRSe ) - Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) - Min( ( MRS / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Min( ( CS / DS ) ,( RCSe + MLU ) ) / Max( ( ( RRSe + DS ) * MUM ),Max( ( ( ( Min( MUC ,DS ) / MLU ) - ( Max( Max( RCSe,RCSe ),Min( RMSe ,RCSe ) ) - MUR ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUM ,MUC ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) - ( BR - ( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * BR ) ) * PN ) ) ) + DDR ) ) )", "choosing": "( Max( DS,( ( Max( MUC,RMSe ) + ( ( Max( RMSe,RRSe ) * ( RRSe * MUC ) ) - ( RMSe + ( MUC + MUR ) ) ) ) / MUM ) ) / ( ( DS * MUM ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,RRS ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( Max( Const,Min( MRS ,MDR ) ) - ( FirstVNF_Mem / MRS ) ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( PN + MDR ) ) ) )", "choosing": "( ( ( RRSe - Max( ( MUM / ( MUR / DS ) ),MUM ) ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUR * MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( CRS,( FirstVNF_RAM + ( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + DDR ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( ( RRSe - Max( ( RMSe * ( RRSe - DS ) ),( MUC + DS ) ) ),Min( MUR ,MUC ) ) ),( ( CS + RRSe ) + ( MLU / RRSe ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( RRSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / CRS )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,CRS ) ,Max( Const,DDR ) ) - Max( RRS,Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( RMSe ,( MUC * RMSe ) ),( Max( Max( MLU,MUC ),CS ) * Min( CS ,RCSe ) ) ) / ( ( MUC * ( RCSe + RRSe ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS * PN ) * ( MRS - AMS ) ) * ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_RAM * AMS ) ) ),( FirstVNF_RAM + AMS ) )", "choosing": "( ( Min( RMSe ,MUC ) * Max( MUM,( ( ( MLU / MLU ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + Min( MRS ,MDR ) ) - ( ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - FirstVNF_CPU ) / FirstVNF_CPU_Server ) + ACS ) )", "choosing": "Max( ( ( Min( MUC ,( CS / RCSe ) ) * ( RCSe + MLU ) ) - CS ),Max( ( RMSe / CS ),( RRSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) - Min( MRS ,Const ) )", "choosing": "( RCSe + ( ( ( CS + MUM ) * ( MLU - RRSe ) ) - ( ( ( Max( ( Min( RCSe ,MUR ) - MUR ),( ( RRSe - MUR ) * ( MUR - CS ) ) ) + MUC ) / RRSe ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( ( Min( ( FirstVNF_CPU_Server / FirstVNF_RAM ) ,FirstVNF_CPU ) / ARS ) - MRS ) )", "choosing": "( Min( ( DS / RMSe ) ,( MUR - RRSe ) ) / ( ( DS * RRSe ) * Max( ( Max( RRSe,RRSe ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( RRS ,CRS ),( ( MRS * MDR ) * ( MRS + RRS ) ) ) - ( DDR - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - ARS ) ) )", "choosing": "( ( ( ( Max( MUR,MUC ) / Max( RRSe,RRSe ) ) * ( ( MLU - CS ) * ( Min( ( CS / MUM ) ,DS ) - MUC ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR - ARS ),( Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) * ( ( ( ACS - MDR ) / CRS ) - CRS ) ) )", "choosing": "( ( ( MUC + ( ( MUR + RRSe ) * Min( RMSe ,RMSe ) ) ) + MUR ) + ( MUM - ( ( MUM / DS ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,Max( PN,( ( ( ( RRS + RRS ) * FirstVNF_RAM ) + BR ) / Min( RRS ,FirstVNF_Mem_Server ) ) ) ) - ARS ) / ( ( BR + MRS ) / ( FirstVNF_CPU - MDR ) ) )", "choosing": "( ( DS - DS ) + ( MUM + ( ( Min( MUR ,RMSe ) - ( RCSe * RCSe ) ) + Max( ( RRSe + MUR ),( ( Min( ( RCSe + MUC ) ,( RCSe + RMSe ) ) - MUM ) + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( RRS - ( ( FirstVNF_RAM / MRS ) - CRS ) ) / ( ( RRS * FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * MUC ) * ( Max( DS,( ( CS / ( DS + MLU ) ) + ( ( RCSe * ( Max( MUC,MUR ) * ( MUC / RCSe ) ) ) / RRSe ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,CRS ) - ( ( Max( RRS,( ( FirstVNF_Mem - MDR ) / ( RRS - AMS ) ) ) * ( FirstVNF_RAM + RRS ) ) - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( ( ( RRSe + MUC ) * ( ( RRSe + DS ) - RRSe ) ),Max( MLU,Max( ( ( ( DS / MUM ) + MUM ) + Max( MUM,( RMSe / RMSe ) ) ),( ( CS + CS ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - ( Max( ( Max( DDR,( RRS / BR ) ) * Min( BR ,CRS ) ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) + ( ( ( RRS + DDR ) + ( Max( ( Min( FirstVNF_RAM ,CRS ) - FirstVNF_CPU ),BR ) + CRS ) ) - ( ( AMS - ACS ) * Max( FirstVNF_CPU,ACS ) ) ) )", "choosing": "( ( ( ( ( ( MUC + ( ( MLU / DS ) - MUC ) ) * RRSe ) * MLU ) / Min( MUC ,RMSe ) ) / ( Min( ( MUR - RRSe ) ,RCSe ) - ( MLU / RRSe ) ) ) - Max( RCSe,Min( RCSe ,( MUM - Max( ( ( Min( RMSe ,DS ) - Min( MUC ,MLU ) ) / MLU ),MUM ) ) ) ) )", "obj1": 0.6680942184154176, "obj2": 0.21447339286329697}, {"determining": "Max( ( Max( CRS,( PN + ( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + DDR ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( ( RRSe - Max( ( RMSe * ( RRSe - DS ) ),( DS + DS ) ) ),Min( MUR ,MUC ) ) ),( ( CS + RRSe ) + ( MLU / RRSe ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( RRSe - RRSe ) ) )", "obj1": 0.961456102783726, "obj2": 0.027869527485372116}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( Max( ( MRS / MDR ),BR ) + ( MRS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM - AMS ) ) / ( ( ( Min( PN ,MRS ) + ACS ) - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( Max( RCSe,MLU ) + CS ) / Min( MUC ,RMSe ) ) * Min( RRSe ,( DS - RMSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.13822611328723663}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Min( FirstVNF_RAM ,( CRS + ( ( FirstVNF_Mem_Server / RRS ) - CRS ) ) ) - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( Min( DDR ,( ( FirstVNF_CPU_Server + Const ) * PN ) ) / RRS ) ) )", "choosing": "( Min( CS ,Min( MUC ,MLU ) ) + ( ( ( DS - ( Max( Max( CS,MUM ),Max( MUM,RRSe ) ) - ( ( Max( MUC,MUC ) * MLU ) - DS ) ) ) * ( CS + MUM ) ) - ( MUR * MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.0849668429541316}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Const - ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( ( BR * Const ) ,MDR ) ) ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( Max( RRSe,( MUM * MUC ) ) / ( CS + CS ) ) / ( DS - Min( RMSe ,DS ) ) )", "obj1": 0.7623126338329764, "obj2": 0.14689564102162783}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU_Server,( Max( ( PN + ( FirstVNF_CPU - Const ) ),ACS ) / FirstVNF_RAM ) ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( ( CS - MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( RRSe ,MUR ) * RMSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "( ( ( FirstVNF_RAM + MRS ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / ( Min( FirstVNF_RAM ,( FirstVNF_RAM + Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) ) - Min( DDR ,( MRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( CS - ( CS * Max( ( Max( ( RMSe + MLU ),MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.8372591006423983, "obj2": 0.10222963456611187}, {"determining": "( ( Min( ( MRS / ( ( FirstVNF_Mem_Server / ACS ) - MRS ) ) ,AMS ) * Const ) - Min( FirstVNF_Mem ,( AMS / CRS ) ) )", "choosing": "( Max( MLU,Max( MUC,MUM ) ) + ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.1450981307179602}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( MUC / DS ) - Max( MUM,MLU ) ) ) * RRSe ) * DS ) )", "obj1": 0.6895074946466809, "obj2": 0.1688439545244625}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( DS - DS ) + ( CS + ( ( MLU / ( MLU / MUM ) ) + Min( MUR ,( DS - MUM ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( ACS - PN ) ) / FirstVNF_Mem )", "choosing": "( ( RCSe * MUC ) + ( MLU / ( CS + MUC ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( Min( AMS ,RRS ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( MUM - Max( ( ( Min( RMSe ,DS ) - Min( MUC ,RCSe ) ) / MLU ),MUM ) ) + ( ( ( CS + ( Min( Max( MUM,MUM ) ,MUM ) + RCSe ) ) * ( DS - ( Max( Max( CS,MUM ),Max( CS,MUM ) ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) / ( MUC * MUC ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01919145066101353}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( Max( ARS,AMS ) - ( FirstVNF_RAM - Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM + Max( CS,CS ) ) - ( MLU - RRSe ) )", "obj1": 0.6702355460385439, "obj2": 0.208847990936383}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( MDR ,ACS ) ) + FirstVNF_CPU ) ),Min( ARS ,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( CS - MUM ),MUM ) + ( ( RRSe / CS ) + MLU ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,Max( MRS,( Max( DDR,RRS ) * FirstVNF_CPU_Server ) ) ) ) - MDR ) - ( AMS - ( MRS / Min( MDR ,CRS ) ) ) )", "choosing": "( Min( MUR ,( ( ( RMSe * MUM ) + ( RCSe / MUR ) ) * MUC ) ) - ( ( MUM - CS ) * DS ) )", "obj1": 0.6809421841541756, "obj2": 0.19115294949282424}, {"determining": "Max( ( ( Const * FirstVNF_RAM_Server ) * Min( ( PN + FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( Min( FirstVNF_RAM ,MRS ) / ( DDR - Max( ( FirstVNF_RAM_Server + Const ),Min( FirstVNF_RAM ,( CRS / AMS ) ) ) ) ) )", "choosing": "( ( MUM - ( Max( MUR,Min( MLU ,( RRSe / MUR ) ) ) + Max( MUM,( ( ( MUR - DS ) - ( ( MUR - CS ) - RCSe ) ) * ( RRSe - MUM ) ) ) ) ) - Max( RCSe,MUR ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( Max( ( RRS / Max( DDR,( PN - MRS ) ) ),Const ) - Min( FirstVNF_Mem ,( CRS / AMS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7708779443254818, "obj2": 0.14666467876655945}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,MRS ) ) * BR ),( Const / ( DDR / BR ) ) ) * Min( MRS ,( FirstVNF_CPU_Server / Max( ARS,PN ) ) ) ) ) / CRS ) )", "choosing": "( ( Max( Max( Max( MUM,( ( ( MLU / RCSe ) * Min( DS ,MLU ) ) - DS ) ),MUM ),( MLU - ( MUR - Max( Max( RCSe,CS ),Min( RMSe ,RCSe ) ) ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - ( CS + RCSe ) ) ) * CS ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( ( Max( MRS,ACS ) - ( ( RRS * DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,MRS ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_CPU_Server / ( ARS + PN ) ) ) ) ) / CRS ) )", "choosing": "( ( Min( DS ,( Min( RCSe ,MUR ) - MUR ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * MLU ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( Min( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ,( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Min( DDR ,BR ) * Min( ( BR / Const ) ,MDR ) ) ) / CRS ) )", "choosing": "( ( Max( ( MLU - Min( ( RMSe - ( RMSe * Min( MUR ,CS ) ) ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MLU + MUM ) ) ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( Min( ( DS + MUM ) ,MUR ) + MUM ) / ( MUR / DS ) ),MUM ) + ( MLU / ( RRSe / CS ) ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,( CRS / ( RRS + CRS ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( MUC ,RCSe ) - ( ( ( MUR + MUR ) / DS ) + RCSe ) ) ) + ( ( ( RCSe + RMSe ) / MLU ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.145213185101084}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( ( ( Max( MUR,MUC ) / Max( RRSe,RRSe ) ) * ( ( MLU - CS ) * ( Min( ( CS / MUM ) ,DS ) - MUC ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( CS ,RMSe ) ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( Max( ( ( Min( ( DS + MUM ) ,MUR ) + MUM ) / ( MUR / ( MUC + ( ( RMSe / DS ) - MUC ) ) ) ),MUM ) + ( MLU / ( RRSe / CS ) ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( Max( DS,( RCSe / ( MLU + MUM ) ) ) / ( MUR / DS ) ) * MUM ) + ( MLU / ( ( ( MLU * MUC ) - Max( CS,MUR ) ) / MUC ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.683083511777302, "obj2": 0.1894510888494918}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( MDR - RRS ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( DS ,MUM ) ) ,( ( RRSe + RCSe ) + ( MLU + DS ) ) )", "obj1": 0.683083511777302, "obj2": 0.1894510888494918}, {"determining": "( ( ( Const + Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) ) * ( CRS + Min( Const ,FirstVNF_RAM_Server ) ) ) * Max( MRS,( BR - RRS ) ) )", "choosing": "Min( ( ( Min( MUR ,( CS * MLU ) ) * RRSe ) + Min( CS ,RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MRS ) * DDR ) * ( Max( Max( AMS,Min( RRS ,RRS ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( ( Min( Max( ( ( ( CS / MUM ) * DS ) / ( ( MUR + MUM ) - DS ) ),Min( RMSe ,DS ) ) ,( RCSe * Max( MLU,RRSe ) ) ) - MUC ) - ( MLU + ( ( ( ( ( DS - RMSe ) + MLU ) - RMSe ) + ( DS + RCSe ) ) + MUC ) ) ),( ( ( DS + MUM ) + ( MUC * MLU ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / ( ( ACS * MDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUR,( MUM * ( ( RRSe - CS ) * Max( MLU,RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * MRS ) + ( MDR + PN ) ) - ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( MUC / RRSe ) - DS ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) - ( MDR * DDR ) )", "choosing": "( ( Min( Max( ( ( Max( Max( MLU,MUC ),CS ) * MUR ) - RCSe ),( MLU + MUC ) ) ,RRSe ) / Min( RMSe ,( MLU - MLU ) ) ) + ( ( ( CS + MUM ) * Max( DS,RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU + ARS ) ,DDR ) ) - ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe / DS ) ,( RCSe + MLU ) ) / ( ( DS * MUM ) * Max( ( Max( MUC,Max( ( Min( RCSe ,DS ) * MLU ),CS ) ) * RMSe ),( MUR / ( MUM * ( MUR / Max( MUM,( RCSe / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ACS / ( PN * PN ) ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS * ( RRSe / ( ( ( RRSe * RMSe ) * ( CS - DS ) ) * RRSe ) ) ) / RRSe ) ) - ( Min( MUM ,RRSe ) - Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) - Min( ( MRS / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Min( ( CS / DS ) ,( RCSe + MLU ) ) / Max( ( ( RRSe + DS ) * MUM ),Max( ( ( ( Min( MUC ,DS ) / MLU ) - ( Max( Max( RCSe,RCSe ),Min( RMSe ,RCSe ) ) - MUR ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUM ,MUC ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) - ( BR - ( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * BR ) ) * PN ) ) ) + DDR ) ) )", "choosing": "( Max( DS,( ( Max( MUC,RMSe ) + ( ( Max( RMSe,RRSe ) * ( RRSe * MUC ) ) - ( RMSe + ( MUC + MUR ) ) ) ) / MUM ) ) / ( ( DS * MUM ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,RRS ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( Max( Const,Min( MRS ,MDR ) ) - ( FirstVNF_Mem / MRS ) ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( PN + MDR ) ) ) )", "choosing": "( ( ( RRSe - Max( ( MUM / ( MUR / DS ) ),MUM ) ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUR * MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( CRS,( FirstVNF_RAM + ( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + DDR ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( ( RRSe - Max( ( RMSe * ( RRSe - DS ) ),( MUC + DS ) ) ),Min( MUR ,MUC ) ) ),( ( CS + RRSe ) + ( MLU / RRSe ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( RRSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / CRS )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,CRS ) ,Max( Const,DDR ) ) - Max( RRS,Min( ARS ,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( RMSe ,( MUC * RMSe ) ),( Max( Max( MLU,MUC ),CS ) * Min( CS ,RCSe ) ) ) / ( ( MUC * ( RCSe + RRSe ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( Max( FirstVNF_CPU,BR ) * FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,RRSe ) - Max( RRSe,MLU ) ) - ( MUC / ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / MRS ) - CRS ) ) / ( ( RRS * FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * MUC ) * ( Max( DS,( ( CS / ( DS + MLU ) ) + ( ( RCSe * ( Max( MUC,MUR ) * ( MUC / RCSe ) ) ) / RRSe ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( RRS,ACS ) ) - ( ARS + ( RRS + DDR ) ) ) + ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( FirstVNF_Mem_Server - MRS ) ) / CRS ) ) - ( PN * DDR ) )", "choosing": "( ( CS * ( ( ( MUR * RMSe ) / ( RRSe * ( ( RMSe - ( RRSe + MUM ) ) + RMSe ) ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( ( ( DS / RRSe ) * ( MUR + ( CS * Max( DS,Max( RCSe,MUC ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.6680942184154176, "obj2": 0.2096771719911212}, {"determining": "Max( ( Max( CRS,( PN + ( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + DDR ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( ( RRSe - Max( ( RMSe * ( RRSe - DS ) ),( DS + DS ) ) ),Min( MUR ,MUC ) ) ),( ( CS + RRSe ) + ( MLU / RRSe ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( RRSe - RRSe ) ) )", "obj1": 0.961456102783726, "obj2": 0.027869527485372116}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( Max( ( MRS / MDR ),BR ) + ( MRS / FirstVNF_RAM_Server ) ) * ( FirstVNF_RAM - AMS ) ) / ( ( ( Min( PN ,MRS ) + ACS ) - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( Max( RCSe,MLU ) + CS ) / Min( MUC ,RMSe ) ) * Min( RRSe ,( DS - RMSe ) ) )", "obj1": 0.8351177730192719, "obj2": 0.13822611328723663}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * RRSe ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.08066167092748758}, {"determining": "( ( ( FirstVNF_RAM + MRS ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / ( Min( FirstVNF_RAM ,( FirstVNF_RAM + Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) ) - Min( DDR ,( MRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( CS - ( CS * Max( ( Max( ( RMSe + MLU ),MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.8372591006423983, "obj2": 0.10222963456611187}, {"determining": "( ( Const - ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * Min( ( BR * Const ) ,MDR ) ) ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( Max( RRSe,( MUM * MUC ) ) / ( CS + CS ) ) / ( DS - Min( RMSe ,DS ) ) )", "obj1": 0.7623126338329764, "obj2": 0.14689564102162783}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( RCSe,CS ) / ( ( CS * MLU ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "( Max( Min( ( MRS / ( FirstVNF_Mem - MRS ) ) ,AMS ),Const ) - Min( FirstVNF_Mem ,( CRS / AMS ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( MUC / DS ) - Max( MUM,MLU ) ) ) * RRSe ) * DS ) )", "obj1": 0.7773019271948608, "obj2": 0.1450981307179602}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( RRS + CRS ) ) ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( RCSe + MLU ) - ( RMSe + MUM ) ) ) * RRSe ) * DS ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Min( FirstVNF_RAM ,( CRS + ( ( FirstVNF_Mem_Server / RRS ) - CRS ) ) ) - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( Min( DDR ,( ( FirstVNF_CPU_Server + Const ) * PN ) ) / RRS ) ) )", "choosing": "( Min( CS ,Min( MUC ,MLU ) ) + ( ( ( DS - ( Max( Max( CS,MUM ),Max( MUM,RRSe ) ) - ( ( Max( MUC,MUC ) * MLU ) - DS ) ) ) * ( CS + MUM ) ) - ( MUR * MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.0849668429541316}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( DS - DS ) + ( CS + ( ( MLU / ( MLU / MUM ) ) + Min( MUR ,( DS - MUM ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),FirstVNF_CPU ) / ( MRS * Const ) ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( Min( DS ,( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( ( Max( DS,MUR ) - ( ( RCSe / MUC ) - RMSe ) ) * Max( MLU,( RMSe / RRSe ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01919145066101353}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU_Server,( Max( ( PN + ( FirstVNF_CPU - Const ) ),ACS ) / FirstVNF_RAM ) ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( ( CS - MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( RRSe ,MUR ) * RMSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - ( CS * Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( MDR ,ACS ) ) + FirstVNF_CPU ) ),Min( ARS ,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( CS - MUM ),MUM ) + ( ( RRSe / CS ) + MLU ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( Min( ( MRS / ( ( FirstVNF_Mem_Server / ACS ) - MRS ) ) ,AMS ) * Const ) - Min( FirstVNF_Mem ,( AMS / CRS ) ) )", "choosing": "( Max( MLU,Max( MUC,MUM ) ) + ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) )", "obj1": 0.7773019271948608, "obj2": 0.1450981307179602}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,Max( MRS,( Max( DDR,RRS ) * FirstVNF_CPU_Server ) ) ) ) - MDR ) - ( AMS - ( MRS / Min( MDR ,CRS ) ) ) )", "choosing": "( Min( MUR ,( ( ( RMSe * MUM ) + ( RCSe / MUR ) ) * MUC ) ) - ( ( MUM - CS ) * DS ) )", "obj1": 0.6809421841541756, "obj2": 0.19115294949282424}, {"determining": "Max( ( ( Const * FirstVNF_RAM_Server ) * Min( ( PN + FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( Min( FirstVNF_RAM ,MRS ) / ( DDR - Max( ( FirstVNF_RAM_Server + Const ),Min( FirstVNF_RAM ,( CRS / AMS ) ) ) ) ) )", "choosing": "( ( MUM - ( Max( MUR,Min( MLU ,( RRSe / MUR ) ) ) + Max( MUM,( ( ( MUR - DS ) - ( ( MUR - CS ) - RCSe ) ) * ( RRSe - MUM ) ) ) ) ) - Max( RCSe,MUR ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( Const - ( Max( ( Max( Max( ( DDR - ARS ),Min( BR ,ACS ) ),Max( AMS,FirstVNF_CPU ) ) * BR ),FirstVNF_CPU_Server ) * Min( ( BR * Const ) ,MDR ) ) ) - Min( FirstVNF_CPU_Server ,( CRS / AMS ) ) )", "choosing": "( ( ( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Min( MUR ,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.14528836806355735}, {"determining": "( Max( RRS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,( CRS / ( RRS + CRS ) ) ) )", "choosing": "( ( ( ( RCSe + MLU ) - ( RMSe + MUM ) ) * ( Min( MUC ,RCSe ) - ( ( ( MUR + MUR ) / DS ) + RCSe ) ) ) + ( ( ( RCSe + RMSe ) / MLU ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.145213185101084}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( ACS - PN ) ) / FirstVNF_Mem )", "choosing": "( ( RCSe * MUC ) + ( MLU / ( CS + MUC ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,MRS ) ) * BR ),( Const / ( DDR / BR ) ) ) * Min( MRS ,( FirstVNF_CPU_Server / Max( ARS,PN ) ) ) ) ) / CRS ) )", "choosing": "( ( Max( Max( Max( MUM,( ( ( MLU / RCSe ) * Min( DS ,MLU ) ) - DS ) ),MUM ),( MLU - ( MUR - Max( Max( RCSe,CS ),Min( RMSe ,RCSe ) ) ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - ( CS + RCSe ) ) ) * CS ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,MRS ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_CPU_Server / ( ARS + PN ) ) ) ) ) / CRS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,RRSe ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( Max( ARS,AMS ) - ( FirstVNF_RAM - Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM + Max( CS,CS ) ) - ( MLU - RRSe ) )", "obj1": 0.6702355460385439, "obj2": 0.208847990936383}, {"determining": "( Min( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ,( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Min( DDR ,BR ) * Min( ( BR / Const ) ,MDR ) ) ) / CRS ) )", "choosing": "( ( Max( ( MLU - Min( ( RMSe - ( RMSe * Min( MUR ,CS ) ) ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MLU + MUM ) ) ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( CRS,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( Min( ( DS + MUM ) ,MUR ) + MUM ) / ( MUR / DS ) ),MUM ) + ( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( Min( AMS ,RRS ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( MUM - Max( ( ( Min( RMSe ,DS ) - Min( MUC ,RCSe ) ) / MLU ),MUM ) ) + ( ( ( CS + ( Min( Max( MUM,MUM ) ,MUM ) + RCSe ) ) * ( DS - ( Max( Max( CS,MUM ),Max( CS,MUM ) ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) / ( MUC * MUC ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01919145066101353}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( ARS / FirstVNF_Mem ) ) ) + Max( PN,MDR ) )", "choosing": "Min( MUM ,( MUR + Min( MLU ,MUR ) ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / DDR ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / Max( FirstVNF_Mem,( ( ACS + DDR ) + Max( ARS,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( Min( ( ( CS * ( Max( CS,RRSe ) * Max( MUC,MLU ) ) ) / Max( MUR,( ( ( MUR * MUC ) * Min( DS ,RMSe ) ) + RRSe ) ) ) ,RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( ( ( Max( MUR,MUC ) / Max( RRSe,RRSe ) ) * ( ( MLU - CS ) * ( Min( ( CS / MUM ) ,DS ) - MUC ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( CS ,RMSe ) ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.683083511777302, "obj2": 0.1894510888494918}, {"determining": "( ( ( Min( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) + MRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( Max( RMSe,Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - MUC ) ) * RRSe ) * CS ) )", "obj1": 0.6702355460385439, "obj2": 0.208847990936383}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( MDR - RRS ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( DS ,MUM ) ) ,( ( RRSe + RCSe ) + ( MLU + DS ) ) )", "obj1": 0.683083511777302, "obj2": 0.1894510888494918}, {"determining": "( Min( PN ,CRS ) - ( ( Max( RRS,( ( FirstVNF_Mem - MDR ) / ( RRS - AMS ) ) ) * ( FirstVNF_RAM + RRS ) ) - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( ( ( RRSe + MUC ) * ( ( RRSe + DS ) - RRSe ) ),Max( MLU,Max( ( ( ( DS / MUM ) + MUM ) + Max( MUM,( RMSe / RMSe ) ) ),( ( CS + CS ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) ) * ( CRS + Min( Const ,FirstVNF_RAM_Server ) ) ) * Max( MRS,( BR - RRS ) ) )", "choosing": "Min( ( ( Min( MUR ,( CS * MLU ) ) * RRSe ) + Min( CS ,RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MRS ) * DDR ) * ( Max( Max( AMS,Min( RRS ,RRS ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( ( Min( Max( ( ( ( CS / MUM ) * DS ) / ( ( MUR + MUM ) - DS ) ),Min( RMSe ,DS ) ) ,( RCSe * Max( MLU,RRSe ) ) ) - MUC ) - ( MLU + ( ( ( ( ( DS - RMSe ) + MLU ) - RMSe ) + ( DS + RCSe ) ) + MUC ) ) ),( ( ( DS + MUM ) + ( MUC * MLU ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / ( ( ACS * MDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUR,( MUM * ( ( RRSe - CS ) * Max( MLU,RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * MRS ) + ( MDR + PN ) ) - ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( MUC / RRSe ) - DS ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) - ( MDR * DDR ) )", "choosing": "( ( Min( Max( ( ( Max( Max( MLU,MUC ),CS ) * MUR ) - RCSe ),( MLU + MUC ) ) ,RRSe ) / Min( RMSe ,( MLU - MLU ) ) ) + ( ( ( CS + MUM ) * Max( DS,RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU + ARS ) ,DDR ) ) - ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe / DS ) ,( RCSe + MLU ) ) / ( ( DS * MUM ) * Max( ( Max( MUC,Max( ( Min( RCSe ,DS ) * MLU ),CS ) ) * RMSe ),( MUR / ( MUM * ( MUR / Max( MUM,( RCSe / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ACS / ( PN * PN ) ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS * ( RRSe / ( ( ( RRSe * RMSe ) * ( CS - DS ) ) * RRSe ) ) ) / RRSe ) ) - ( Min( MUM ,RRSe ) - Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) - Min( ( MRS / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Min( ( CS / DS ) ,( RCSe + MLU ) ) / Max( ( ( RRSe + DS ) * MUM ),Max( ( ( ( Min( MUC ,DS ) / MLU ) - ( Max( Max( RCSe,RCSe ),Min( RMSe ,RCSe ) ) - MUR ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUM ,MUC ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) - ( BR - ( ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + Max( FirstVNF_RAM_Server,( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * BR ) ) * PN ) ) ) + DDR ) ) )", "choosing": "( Max( DS,( ( Max( MUC,RMSe ) + ( ( Max( RMSe,RRSe ) * ( RRSe * MUC ) ) - ( RMSe + ( MUC + MUR ) ) ) ) / MUM ) ) / ( ( DS * MUM ) * Max( ( RMSe * Max( RRSe,RRSe ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( Min( Max( FirstVNF_RAM,( ( ACS + Min( ARS ,CRS ) ) + MRS ) ) ,( MDR * DDR ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( RRS,ACS ) ) - ( ARS + ( RRS + DDR ) ) ) + ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( FirstVNF_Mem_Server - MRS ) ) / CRS ) ) - ( PN * DDR ) )", "choosing": "( ( CS * ( ( ( MUR * RMSe ) / ( RRSe * ( ( RMSe - ( RRSe + MUM ) ) + RMSe ) ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( ( ( DS / RRSe ) * ( MUR + ( CS * Max( DS,Max( RCSe,MUC ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.6680942184154176, "obj2": 0.2096771719911212}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( Max( FirstVNF_CPU,BR ) * FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,RRSe ) - Max( RRSe,MLU ) ) - ( MUC / ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ARS ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Max( ( ( ( DS * Min( MUM ,( MUC - DS ) ) ) + ( RRSe * CS ) ) + MLU ),Max( Max( ( DS * RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) - Min( RRSe ,MLU ) ) ) )", "obj1": 0.6680942184154176, "obj2": 0.2096771719911212}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( ( FirstVNF_RAM + MRS ) / ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) / ( Min( FirstVNF_RAM ,( FirstVNF_RAM + Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ARS ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) ) ) - Min( DDR ,( MRS - FirstVNF_RAM ) ) ) )", "choosing": "( ( CS - ( CS * Max( ( Max( ( RMSe + MLU ),MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.8372591006423983, "obj2": 0.10222963456611187}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * RRSe ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.08066167092748758}, {"determining": "Max( ( Max( CRS,( PN + ( FirstVNF_RAM * AMS ) ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + DDR ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( ( RRSe - Max( ( RMSe * ( RRSe - DS ) ),( DS + DS ) ) ),Min( MUR ,MUC ) ) ),( ( CS + RRSe ) + ( MLU / RRSe ) ) ),( ( ( MUM - DS ) * ( MUM * RMSe ) ) + ( RRSe - RRSe ) ) )", "obj1": 0.961456102783726, "obj2": 0.027869527485372116}, {"determining": "( ( Min( FirstVNF_RAM ,( CRS + ( ( FirstVNF_Mem_Server / RRS ) - CRS ) ) ) - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( Min( DDR ,( ( FirstVNF_CPU_Server + Const ) * PN ) ) / RRS ) ) )", "choosing": "( Min( CS ,Min( MUC ,MLU ) ) + ( ( ( DS - ( Max( Max( CS,MUM ),Max( MUM,RRSe ) ) - ( ( Max( MUC,MUC ) * MLU ) - DS ) ) ) * ( CS + MUM ) ) - ( MUR * MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.0849668429541316}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( RRS + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( RCSe + MLU ) - ( ( MUR / DS ) + MUM ) ) ) * RRSe ) * DS ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( RCSe,CS ) / ( ( CS * MLU ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU_Server,( Max( ( PN + ( FirstVNF_CPU - Const ) ),ACS ) / FirstVNF_RAM ) ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( ( CS - MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( RRSe ,MUR ) * RMSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "( ( Min( FirstVNF_RAM ,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / MRS ) ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( MUC + Max( Min( ( ( MUC * RMSe ) * Min( MUM ,RRSe ) ) ,( MUC / Max( CS,MUR ) ) ),DS ) ) * ( ( MUR + ( MUR * ( ( CS - CS ) * MUR ) ) ) - RCSe ) ) ) / ( ( MUM * DS ) * Max( ( ( Min( ( MUR * Min( RCSe ,MUC ) ) ,RCSe ) + RRSe ) * Max( Min( RMSe ,MLU ),( ( ( RCSe - MLU ) * RRSe ) / MUC ) ) ),MUM ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01919145066101353}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( ACS - PN ) ) / FirstVNF_Mem )", "choosing": "( ( RCSe * MUC ) + ( MLU / ( CS + MUC ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( Max( ARS,( Min( ARS ,FirstVNF_CPU ) + ( CRS - FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( CS + ( ( MLU / ( MLU / MUM ) ) + Min( MUR ,( ( ( Max( MUM,DS ) + ( MUC / RMSe ) ) / CS ) - MUM ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( MDR ,ACS ) ) + FirstVNF_CPU ) ),Min( ARS ,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( CS - MUM ),MUM ) + ( ( RRSe / CS ) + MLU ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Min( MUR ,CS ) )", "obj1": 0.8779443254817987, "obj2": 0.08066167092748758}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,Max( MRS,( Max( DDR,RRS ) * FirstVNF_CPU_Server ) ) ) ) - MDR ) - ( AMS - ( MRS / Min( MDR ,CRS ) ) ) )", "choosing": "( Min( MUR ,( ( ( RMSe * MUM ) + ( RCSe / MUR ) ) * MUC ) ) - ( ( MUM - CS ) * DS ) )", "obj1": 0.6809421841541756, "obj2": 0.19115294949282424}, {"determining": "Max( ( ( Const * FirstVNF_RAM_Server ) * Min( ( PN + FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( Min( FirstVNF_RAM ,MRS ) / ( DDR - Max( ( FirstVNF_RAM_Server + Const ),Min( FirstVNF_RAM ,( CRS / AMS ) ) ) ) ) )", "choosing": "( ( MUM - ( Max( MUR,Min( MLU ,( RRSe / MUR ) ) ) + Max( MUM,( ( ( MUR - DS ) - ( ( MUR - CS ) - RCSe ) ) * ( RRSe - MUM ) ) ) ) ) - Max( RCSe,MUR ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( RRS + CRS ) ) ) ,( FirstVNF_CPU - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( RCSe + MLU ) - ( RMSe + MUM ) ) ) * RRSe ) * DS ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( DS - DS ) + ( CS + ( ( MLU / ( MLU / MUM ) ) + Min( MUR ,( DS - MUM ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / FirstVNF_Mem )", "choosing": "( ( DS - ( CS * Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ) ) + Min( MLU ,( CS + MUC ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,MRS ) ) * BR ),( Const / ( DDR / BR ) ) ) * Min( MRS ,( FirstVNF_CPU_Server / Max( ARS,PN ) ) ) ) ) / CRS ) )", "choosing": "( ( Max( Max( Max( MUM,( ( ( MLU / RCSe ) * Min( DS ,MLU ) ) - DS ) ),MUM ),( MLU - ( MUR - Max( Max( RCSe,CS ),Min( RMSe ,RCSe ) ) ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - ( CS + RCSe ) ) ) * CS ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,MRS ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_CPU_Server / ( ARS + PN ) ) ) ) ) / CRS ) )", "choosing": "( ( MUM - Max( ( ( Min( RMSe ,DS ) - Min( MUC ,RCSe ) ) / MLU ),MUM ) ) + ( ( ( CS + ( Min( Max( MUM,MUM ) ,MUM ) + RCSe ) ) * ( DS - ( Max( Max( CS,MUM ),Max( CS,MUM ) ) - Max( DS,( MUM * RMSe ) ) ) ) ) - ( ( RCSe / Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) / ( MUC * MUC ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( Max( ARS,AMS ) - ( FirstVNF_RAM - Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM + Max( CS,CS ) ) - ( MLU - RRSe ) )", "obj1": 0.6702355460385439, "obj2": 0.208847990936383}, {"determining": "( Min( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ,( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Min( DDR ,BR ) * Min( ( BR / Const ) ,MDR ) ) ) / CRS ) )", "choosing": "( ( Max( ( MLU - Min( ( RMSe - ( RMSe * Min( MUR ,CS ) ) ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MLU + MUM ) ) ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( ACS * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( Min( ( DS + ( RCSe + MLU ) ) ,MUR ) + MUM ) / ( MUR / DS ) ),MUM ) + ( MLU / ( RRSe / CS ) ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( ( ( Max( MUR,MUC ) / Max( RRSe,RRSe ) ) * ( ( MLU - CS ) * ( Min( ( CS / MUM ) ,DS ) - MUC ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( CS ,RMSe ) ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),FirstVNF_CPU ) / ( MRS * Const ) ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( Min( DS ,( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( ( Max( DS,MUR ) - ( ( RCSe / MUC ) - RMSe ) ) * Max( MLU,( RMSe / RRSe ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01919145066101353}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( ARS / FirstVNF_Mem ) ) ) + Max( PN,MDR ) )", "choosing": "Min( MUM ,( MUR + Min( MLU ,MUR ) ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) * ( Min( CS ,MLU ) * MLU ) ) / ( ( MUR / DS ) - CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.683083511777302, "obj2": 0.1894510888494918}, {"determining": "( ( ( Min( ( DDR + MRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * BR ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( Max( RMSe,Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - MUC ) ) * ( MUM * MUC ) ) * DS ) )", "obj1": 0.6702355460385439, "obj2": 0.208847990936383}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( MDR - RRS ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( DS ,MUM ) ) ,( ( RRSe + RCSe ) + ( MLU + DS ) ) )", "obj1": 0.683083511777302, "obj2": 0.1894510888494918}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / MRS ) - CRS ) ) / ( ( RRS * FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * MUC ) * ( Max( DS,( ( CS / ( DS + MLU ) ) + ( ( RCSe * ( Max( MUC,MUR ) * ( MUC / RCSe ) ) ) / RRSe ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,CRS ) - ( ( Max( RRS,( ( FirstVNF_Mem - MDR ) / ( RRS - AMS ) ) ) * ( FirstVNF_RAM + RRS ) ) - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( ( ( RRSe + MUC ) * ( ( RRSe + DS ) - RRSe ) ),Max( MLU,Max( ( ( ( DS / MUM ) + MUM ) + Max( MUM,( RMSe / RMSe ) ) ),( ( CS + CS ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) ) * ( CRS + Min( Const ,FirstVNF_RAM_Server ) ) ) * Max( MRS,( BR - RRS ) ) )", "choosing": "Min( ( ( Min( MUR ,( CS * MLU ) ) * RRSe ) + Min( CS ,RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MRS ) * DDR ) * ( Max( Max( AMS,Min( RRS ,RRS ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( ( Min( Max( ( ( ( CS / MUM ) * DS ) / ( ( MUR + MUM ) - DS ) ),Min( RMSe ,DS ) ) ,( RCSe * Max( MLU,RRSe ) ) ) - MUC ) - ( MLU + ( ( ( ( ( DS - RMSe ) + MLU ) - RMSe ) + ( DS + RCSe ) ) + MUC ) ) ),( ( ( DS + MUM ) + ( MUC * MLU ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / ( ( ACS * MDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUR,( MUM * ( ( RRSe - CS ) * Max( MLU,RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * MRS ) + ( MDR + PN ) ) - ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( MUC / RRSe ) - DS ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) - ( MDR * DDR ) )", "choosing": "( ( Min( Max( ( ( Max( Max( MLU,MUC ),CS ) * MUR ) - RCSe ),( MLU + MUC ) ) ,RRSe ) / Min( RMSe ,( MLU - MLU ) ) ) + ( ( ( CS + MUM ) * Max( DS,RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU + ARS ) ,DDR ) ) - ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe / DS ) ,( RCSe + MLU ) ) / ( ( DS * MUM ) * Max( ( Max( MUC,Max( ( Min( RCSe ,DS ) * MLU ),CS ) ) * RMSe ),( MUR / ( MUM * ( MUR / Max( MUM,( RCSe / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ACS / ( PN * PN ) ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS * ( RRSe / ( ( ( RRSe * RMSe ) * ( CS - DS ) ) * RRSe ) ) ) / RRSe ) ) - ( Min( MUM ,RRSe ) - Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) - Min( ( MRS / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Min( ( CS / DS ) ,( RCSe + MLU ) ) / Max( ( ( RRSe + DS ) * MUM ),Max( ( ( ( Min( MUC ,DS ) / MLU ) - ( Max( Max( RCSe,RCSe ),Min( RMSe ,RCSe ) ) - MUR ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUM ,MUC ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,PN ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,Min( Max( ( ARS * PN ),AMS ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( MUR + ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( RRS,ACS ) ) - ( ARS + ( RRS + DDR ) ) ) + ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( FirstVNF_Mem_Server - MRS ) ) / CRS ) ) - ( PN * DDR ) )", "choosing": "( ( CS * ( ( ( MUR * RMSe ) / ( RRSe * ( ( RMSe - ( RRSe + MUM ) ) + RMSe ) ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( ( ( DS / RRSe ) * ( MUR + ( CS * Max( DS,Max( RCSe,MUC ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.6680942184154176, "obj2": 0.2096771719911212}, {"determining": "( Min( Max( FirstVNF_RAM,( ( ACS + Min( ARS ,CRS ) ) + MRS ) ) ,( MDR * DDR ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ARS ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( Min( ( Max( MUM,CS ) - DS ) ,( Max( ( MLU - MUR ),( MUC * ( DS - Max( RRSe,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 0.6680942184154176, "obj2": 0.2096771719911212}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - FirstVNF_CPU ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + ( ( DDR * ( RRS - FirstVNF_CPU_Server ) ) + DDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( CRS / ( Const - MRS ) ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( ( RCSe + RCSe ) + ( RRSe * ( MUR + MUC ) ) ) ) ,( DS / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * RRSe ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.08066167092748758}, {"determining": "( ( Min( FirstVNF_RAM ,( CRS + ( ( FirstVNF_Mem_Server / RRS ) - CRS ) ) ) - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( Min( DDR ,( ( FirstVNF_CPU_Server + Const ) * PN ) ) / RRS ) ) )", "choosing": "( Min( CS ,Min( MUC ,MLU ) ) + ( ( ( DS - ( Max( Max( CS,MUM ),Max( MUM,RRSe ) ) - ( ( Max( MUC,MUC ) * MLU ) - DS ) ) ) * ( CS + MUM ) ) - ( MUR * MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.0849668429541316}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( RRS + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( ( Max( Max( CS,MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( ( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( RCSe,CS ) / ( ( CS * MLU ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU_Server,( Max( ( PN + ( FirstVNF_CPU - Const ) ),ACS ) / FirstVNF_RAM ) ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( ( CS - MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( RRSe ,MUR ) * RMSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( ( ARS + MRS ) + PN ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,( MRS / ( AMS / Min( RRS ,DDR ) ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( MDR ,ACS ) ) + FirstVNF_CPU ) ),Min( ARS ,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( CS - MUM ),MUM ) + ( ( RRSe / CS ) + MLU ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),FirstVNF_CPU ) / ( MRS * Const ) ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( Min( DS ,( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( ( Max( DS,MUR ) - ( ( RCSe / MUC ) - RMSe ) ) * Max( MLU,( RMSe / RRSe ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01919145066101353}, {"determining": "( ( Min( FirstVNF_RAM ,Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / MRS ) ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( MUC + Max( Min( ( ( MUC * RMSe ) * Min( MUM ,RRSe ) ) ,( MUC / Max( CS,MUR ) ) ),DS ) ) * ( ( MUR + ( MUR * ( ( CS - CS ) * MUR ) ) ) - RCSe ) ) ) / ( ( MUM * DS ) * Max( ( ( Min( ( MUR * Min( RCSe ,MUC ) ) ,RCSe ) + RRSe ) * Max( Min( RMSe ,MLU ),( ( ( RCSe - MLU ) * RRSe ) / MUC ) ) ),MUM ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01919145066101353}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Min( MUR ,CS ) )", "obj1": 0.8779443254817987, "obj2": 0.08066167092748758}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,Max( MRS,( Max( DDR,RRS ) * FirstVNF_CPU_Server ) ) ) ) - MDR ) - ( AMS - ( MRS / Min( MDR ,CRS ) ) ) )", "choosing": "( Min( MUR ,( ( ( RMSe * MUM ) + ( RCSe / MUR ) ) * MUC ) ) - ( ( MUM - CS ) * DS ) )", "obj1": 0.6809421841541756, "obj2": 0.19115294949282424}, {"determining": "Max( ( ( Const * FirstVNF_RAM_Server ) * Min( ( PN + FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( Min( FirstVNF_RAM ,MRS ) / ( DDR - Max( ( FirstVNF_RAM_Server + Const ),Min( FirstVNF_RAM ,( CRS / AMS ) ) ) ) ) )", "choosing": "( ( MUM - ( Max( MUR,Min( MLU ,( RRSe / MUR ) ) ) + Max( MUM,( ( ( MUR - DS ) - ( ( MUR - CS ) - RCSe ) ) * ( RRSe - MUM ) ) ) ) ) - Max( RCSe,MUR ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( RRS + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( RCSe + MLU ) - ( ( MUR / DS ) + MUM ) ) ) * RRSe ) * DS ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( Max( ARS,( Min( ARS ,FirstVNF_CPU ) + ( CRS - FirstVNF_CPU_Server ) ) ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( CS + ( ( MLU / ( MLU / MUM ) ) + Min( MUR ,( ( ( Max( MUM,DS ) + ( MUC / RMSe ) ) / CS ) - MUM ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,MRS ) ) * BR ),( Const / ( DDR / BR ) ) ) * Min( MRS ,( FirstVNF_CPU_Server / Max( ARS,PN ) ) ) ) ) / CRS ) )", "choosing": "( ( Max( Max( Max( MUM,( ( ( MLU / RCSe ) * Min( DS ,MLU ) ) - DS ) ),MUM ),( MLU - ( MUR - Max( Max( RCSe,CS ),Min( RMSe ,RCSe ) ) ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - ( CS + RCSe ) ) ) * CS ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,MRS ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_CPU_Server / MRS ) ) ) ) / CRS ) )", "choosing": "( ( Max( Max( Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ),MUM ),( MLU - ( Max( Max( RCSe,CS ),Min( RMSe ,RCSe ) ) - MUR ) ) ) - ( ( Min( RCSe ,RRSe ) / DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( Max( ARS,AMS ) - ( FirstVNF_RAM - Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM + Max( CS,CS ) ) - ( MLU - RRSe ) )", "obj1": 0.6702355460385439, "obj2": 0.208847990936383}, {"determining": "( Min( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ,( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Min( DDR ,BR ) * Min( ( BR / Const ) ,MDR ) ) ) / CRS ) )", "choosing": "( ( Max( ( MLU - Min( ( RMSe - ( RMSe * Min( MUR ,CS ) ) ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MLU + MUM ) ) ,DS ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / MUM ) ) ) ) / DS ) ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( ARS / FirstVNF_Mem ) ) ) + Max( PN,MDR ) )", "choosing": "Min( MUM ,( MUR + Min( MLU ,MUR ) ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * BR ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "Min( ( CS * MLU ) ,( ( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) * ( Min( CS ,MLU ) * MLU ) ) / ( ( MUR / DS ) - CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.1960851998829009}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( ( ( Max( MUR,MUC ) / Max( RRSe,RRSe ) ) * ( ( MLU - CS ) * ( Min( ( CS / MUM ) ,DS ) - MUC ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( CS ,RMSe ) ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.683083511777302, "obj2": 0.1894510888494918}, {"determining": "( ( ( Min( ( DDR + MRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) + CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( MUM / MUM ) * ( MUC + ( Max( MUC,RCSe ) / CS ) ) )", "obj1": 0.6702355460385439, "obj2": 0.208847990936383}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( MDR - RRS ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( DS ,MUM ) ) ,( ( RRSe + RCSe ) + ( MLU + DS ) ) )", "obj1": 0.683083511777302, "obj2": 0.1894510888494918}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( Max( FirstVNF_CPU,BR ) * FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,RRSe ) - Max( RRSe,MLU ) ) - ( MUC / ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / MRS ) - CRS ) ) / ( ( RRS * FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * MUC ) * ( Max( DS,( ( CS / ( DS + MLU ) ) + ( ( RCSe * ( Max( MUC,MUR ) * ( MUC / RCSe ) ) ) / RRSe ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,CRS ) - ( ( Max( RRS,( ( FirstVNF_Mem - MDR ) / ( RRS - AMS ) ) ) * ( FirstVNF_RAM + RRS ) ) - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( ( ( RRSe + MUC ) * ( ( RRSe + DS ) - RRSe ) ),Max( MLU,Max( ( ( ( DS / MUM ) + MUM ) + Max( MUM,( RMSe / RMSe ) ) ),( ( CS + CS ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) ) * ( CRS + Min( Const ,FirstVNF_RAM_Server ) ) ) * Max( MRS,( BR - RRS ) ) )", "choosing": "Min( ( ( Min( MUR ,( CS * MLU ) ) * RRSe ) + Min( CS ,RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MRS ) * DDR ) * ( Max( Max( AMS,Min( RRS ,RRS ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( ( Min( Max( ( ( ( CS / MUM ) * DS ) / ( ( MUR + MUM ) - DS ) ),Min( RMSe ,DS ) ) ,( RCSe * Max( MLU,RRSe ) ) ) - MUC ) - ( MLU + ( ( ( ( ( DS - RMSe ) + MLU ) - RMSe ) + ( DS + RCSe ) ) + MUC ) ) ),( ( ( DS + MUM ) + ( MUC * MLU ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / ( ( ACS * MDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUR,( MUM * ( ( RRSe - CS ) * Max( MLU,RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * MRS ) + ( MDR + PN ) ) - ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( MUC / RRSe ) - DS ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) - ( MDR * DDR ) )", "choosing": "( ( Min( Max( ( ( Max( Max( MLU,MUC ),CS ) * MUR ) - RCSe ),( MLU + MUC ) ) ,RRSe ) / Min( RMSe ,( MLU - MLU ) ) ) + ( ( ( CS + MUM ) * Max( DS,RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU + ARS ) ,DDR ) ) - ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe / DS ) ,( RCSe + MLU ) ) / ( ( DS * MUM ) * Max( ( Max( MUC,Max( ( Min( RCSe ,DS ) * MLU ),CS ) ) * RMSe ),( MUR / ( MUM * ( MUR / Max( MUM,( RCSe / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ACS / ( PN * PN ) ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS * ( RRSe / ( ( ( RRSe * RMSe ) * ( CS - DS ) ) * RRSe ) ) ) / RRSe ) ) - ( Min( MUM ,RRSe ) - Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) - Min( ( MRS / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Min( ( CS / DS ) ,( RCSe + MLU ) ) / Max( ( ( RRSe + DS ) * MUM ),Max( ( ( ( Min( MUC ,DS ) / MLU ) - ( Max( Max( RCSe,RCSe ),Min( RMSe ,RCSe ) ) - MUR ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUM ,MUC ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU_Server + ( ( FirstVNF_CPU / ( ( AMS * FirstVNF_RAM_Server ) / Const ) ) * MRS ) ) ) - ( ( RRS / FirstVNF_CPU ) / PN ) )", "choosing": "( Min( ( RMSe / RMSe ) ,( ( MUC + Max( Min( ( ( MUC * RMSe ) * ( MUR / RRSe ) ) ,( MUC / Max( CS,MUR ) ) ),DS ) ) * ( ( MUR + ( MUR * ( MUM / MUR ) ) ) - RCSe ) ) ) / Max( MLU,( ( ( DS / CS ) + Min( ( MUM - RCSe ) ,RCSe ) ) - ( MLU * ( CS - Min( RMSe ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( ( Max( ( ( Const - Min( ( ( PN + RRS ) / Min( ACS ,Const ) ) ,DDR ) ) * ( ( CRS - RRS ) - MDR ) ),( Max( ( Max( ( DDR / BR ),Max( FirstVNF_RAM,DDR ) ) * BR ),FirstVNF_CPU_Server ) * Min( ( BR / Const ) ,MDR ) ) ) * Min( MRS ,MDR ) ) - Min( ( PN / AMS ) ,( Const + Min( ( FirstVNF_RAM + MRS ) ,DDR ) ) ) )", "choosing": "Max( ( ( Min( MUM ,Min( ( Min( MUR ,RRSe ) + ( DS - MUC ) ) ,DS ) ) - RMSe ) * ( RCSe / ( Min( RCSe ,RRSe ) / DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( RRS,ACS ) ) - ( ARS + ( RRS + DDR ) ) ) + ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( FirstVNF_Mem_Server - MRS ) ) / CRS ) ) - ( PN * DDR ) )", "choosing": "( ( CS * ( ( ( MUR * RMSe ) / ( RRSe * ( ( RMSe - ( RRSe + MUM ) ) + RMSe ) ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( ( ( DS / RRSe ) * ( MUR + ( CS * Max( DS,Max( RCSe,MUC ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.6680942184154176, "obj2": 0.2096771719911212}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,PN ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,Min( Max( ( ARS * PN ),AMS ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( MUR + ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + PN ) ) - ( ( RRS + DDR ) + ARS ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ARS ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,RMSe ) ) + Max( RCSe,Min( RCSe ,( MUM - Max( ( Min( MUM ,( RMSe * CS ) ) / MLU ),MUM ) ) ) ) )", "obj1": 0.6680942184154176, "obj2": 0.2096771719911212}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - FirstVNF_CPU ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + ( ( DDR * ( RRS - FirstVNF_CPU_Server ) ) + DDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( CRS / ( Const - MRS ) ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( ( RCSe + RCSe ) + ( RRSe * ( MUR + MUC ) ) ) ) ,( DS / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * RRSe ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.08066167092748758}, {"determining": "( ( Min( FirstVNF_RAM ,( CRS + ( ( FirstVNF_Mem_Server / RRS ) - CRS ) ) ) - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( Min( DDR ,( ( FirstVNF_CPU_Server + Const ) * PN ) ) / RRS ) ) )", "choosing": "( Min( CS ,Min( MUC ,MLU ) ) + ( ( ( DS - ( Max( Max( CS,MUM ),Max( MUM,RRSe ) ) - ( ( Max( MUC,MUC ) * MLU ) - DS ) ) ) * ( CS + MUM ) ) - ( MUR * MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.0849668429541316}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "Min( ( CS * MLU ) ,Max( RCSe,( MLU - Min( ( ( ( DS / MUM ) + MUM ) + Max( MUM,( RMSe / RMSe ) ) ) ,DS ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( RRS + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( RCSe + MLU ) - ( ( MUR / DS ) + MUM ) ) ) * RRSe ) * DS ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( RCSe,CS ) / ( ( CS * MLU ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( CS - ( DS + Min( ( ( Max( MUR,MUC ) / ( MUC + RMSe ) ) * RRSe ) ,MUR ) ) ) + ( MLU / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( Min( Min( ACS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( ( ( ( RCSe - CS ) - MUC ) - RRSe ) - Max( Max( CS,MUM ),( MLU - Min( RCSe ,RRSe ) ) ) ) * ( MUM / MLU ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Min( FirstVNF_RAM ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( MDR ,ACS ) ) + FirstVNF_CPU ) ),Min( ARS ,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( CS - MUM ),MUM ) + ( ( RRSe / CS ) + MLU ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + MDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( ( DS - ( RCSe / RRSe ) ) * ( Min( ( DS + ( RCSe + MLU ) ) ,MUR ) + MUM ) ) )", "obj1": 0.6788008565310493, "obj2": 0.19441830454621928}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( RRSe + CS ) + ( MUC * ( ( DS + MUM ) / DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01919145066101353}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),FirstVNF_CPU ) / ( MRS * Const ) ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( Min( DS ,( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( ( Max( DS,MUR ) - ( ( RCSe / MUC ) - RMSe ) ) * Max( MLU,( RMSe / RRSe ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01919145066101353}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Min( MUR ,CS ) )", "obj1": 0.8779443254817987, "obj2": 0.08066167092748758}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "Max( ( ( Const * FirstVNF_RAM_Server ) * Min( ( PN + FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( Min( FirstVNF_RAM ,MRS ) / ( DDR - Max( ( FirstVNF_RAM_Server + Const ),Min( FirstVNF_RAM ,( CRS / AMS ) ) ) ) ) )", "choosing": "( ( MUM - ( Max( MUR,Min( MLU ,( RRSe / MUR ) ) ) + Max( MUM,( ( ( MUR - DS ) - ( ( MUR - CS ) - RCSe ) ) * ( RRSe - MUM ) ) ) ) ) - Max( RCSe,MUR ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( RRS + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( ( Max( Max( CS,MUM ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( ( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( ( ARS + MRS ) + PN ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,( MRS / ( AMS / Min( RRS ,DDR ) ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,Max( MRS,( Max( DDR,RRS ) * FirstVNF_CPU_Server ) ) ) ) - MDR ) - ( AMS - ( MRS / Min( MDR ,CRS ) ) ) )", "choosing": "( Min( MUR ,( ( ( RMSe * MUM ) + ( RCSe / MUR ) ) * MUC ) ) - ( ( MUM - CS ) * DS ) )", "obj1": 0.6809421841541756, "obj2": 0.19115294949282424}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,MRS ) ) * BR ),( Const / ( DDR / BR ) ) ) * Min( MRS ,( FirstVNF_CPU_Server / Max( ARS,PN ) ) ) ) ) / CRS ) )", "choosing": "( ( Max( Max( Max( MUM,( ( ( MLU / RCSe ) * Min( DS ,MLU ) ) - DS ) ),MUM ),( MLU - ( MUR - Max( Max( RCSe,CS ),Min( RMSe ,RCSe ) ) ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - ( CS + RCSe ) ) ) * CS ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( ( Min( ( AMS + CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Min( Const ,CRS ) + Min( ( Max( PN,ACS ) * ( BR * FirstVNF_RAM_Server ) ) ,AMS ) ) / MRS ) )", "choosing": "( ( Max( Max( Max( MUM,( ( ( MLU / DS ) / Min( DS ,MLU ) ) - DS ) ),MUM ),( MLU - ( Max( Max( RCSe,CS ),Min( RMSe ,RCSe ) ) - MUR ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - ( CS + RCSe ) ) ) * RRSe ) * MUR ) - ( MLU * MUM ) ) ) * ( ( DS - Min( Min( RRSe ,CS ) ,MUC ) ) * Min( MUM ,( RMSe / MUC ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( Max( ARS,AMS ) - ( FirstVNF_RAM - Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM + Max( CS,CS ) ) - ( MLU - RRSe ) )", "obj1": 0.6702355460385439, "obj2": 0.208847990936383}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( MDR ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( Min( ( MLU - MUR ) ,MUR ) + MUM ) / ( MUR / DS ) ),MUM ) + ( MLU / ( RRSe / CS ) ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( ( ( CRS - MRS ) + ( ( RRS - DDR ) + ( Max( PN,ACS ) / ( Const / ( RRS - BR ) ) ) ) ) + ( ( MRS - Const ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MLU,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( RMSe + Min( ( RMSe + Max( Max( MUM,MLU ),MUC ) ) ,MUM ) ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( ARS / FirstVNF_Mem ) ) ) + Max( PN,MDR ) )", "choosing": "Min( MUM ,( MUR + Min( MLU ,MUR ) ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.683083511777302, "obj2": 0.1894510888494918}, {"determining": "( ( ( Min( ( DDR + MRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) + CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( MUM / MUM ) * ( MUC + ( Max( MUC,RCSe ) / CS ) ) )", "obj1": 0.6702355460385439, "obj2": 0.208847990936383}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( MDR - RRS ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS - DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( DS ,MUM ) ) ,( ( RRSe + RCSe ) + ( MLU + DS ) ) )", "obj1": 0.683083511777302, "obj2": 0.1894510888494918}, {"determining": "( Min( Max( FirstVNF_RAM,( ( ACS + Min( ARS ,CRS ) ) + MRS ) ) ,( MDR * DDR ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( Max( FirstVNF_CPU,BR ) * FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,RRSe ) - Max( RRSe,MLU ) ) - ( MUC / ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / MRS ) - CRS ) ) / ( ( RRS * FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * MUC ) * ( Max( DS,( ( CS / ( DS + MLU ) ) + ( ( RCSe * ( Max( MUC,MUR ) * ( MUC / RCSe ) ) ) / RRSe ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,CRS ) - ( ( Max( RRS,( ( FirstVNF_Mem - MDR ) / ( RRS - AMS ) ) ) * ( FirstVNF_RAM + RRS ) ) - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( ( ( RRSe + MUC ) * ( ( RRSe + DS ) - RRSe ) ),Max( MLU,Max( ( ( ( DS / MUM ) + MUM ) + Max( MUM,( RMSe / RMSe ) ) ),( ( CS + CS ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) ) * ( CRS + Min( Const ,FirstVNF_RAM_Server ) ) ) * Max( MRS,( BR - RRS ) ) )", "choosing": "Min( ( ( Min( MUR ,( CS * MLU ) ) * RRSe ) + Min( CS ,RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MRS ) * DDR ) * ( Max( Max( AMS,Min( RRS ,RRS ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / Min( FirstVNF_RAM ,MDR ) ) )", "choosing": "Max( ( ( Min( Max( ( ( ( CS / MUM ) * DS ) / ( ( MUR + MUM ) - DS ) ),Min( RMSe ,DS ) ) ,( RCSe * Max( MLU,RRSe ) ) ) - MUC ) - ( MLU + ( ( ( ( ( DS - RMSe ) + MLU ) - RMSe ) + ( DS + RCSe ) ) + MUC ) ) ),( ( ( DS + MUM ) + ( MUC * MLU ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( MDR - AMS ) / ( ( ACS * MDR ) - FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( MUR,( MUM * ( ( RRSe - CS ) * Max( MLU,RRSe ) ) ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ARS * MRS ) + ( MDR + PN ) ) - ( Min( FirstVNF_Mem_Server ,PN ) + ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( MUC / RRSe ) - DS ) ) ) + ( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) - ( MDR * DDR ) )", "choosing": "( ( Min( Max( ( ( Max( Max( MLU,MUC ),CS ) * MUR ) - RCSe ),( MLU + MUC ) ) ,RRSe ) / Min( RMSe ,( MLU - MLU ) ) ) + ( ( ( CS + MUM ) * Max( DS,RRSe ) ) - ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,Min( ( FirstVNF_CPU + ARS ) ,DDR ) ) - ( MRS - FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe / DS ) ,( RCSe + MLU ) ) / ( ( DS * MUM ) * Max( ( Max( MUC,Max( ( Min( RCSe ,DS ) * MLU ),CS ) ) * RMSe ),( MUR / ( MUM * ( MUR / Max( MUM,( RCSe / MUC ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ACS / ( PN * PN ) ) )", "choosing": "( ( ( RCSe * CS ) / ( ( CS * ( RRSe / ( ( ( RRSe * RMSe ) * ( CS - DS ) ) * RRSe ) ) ) / RRSe ) ) - ( Min( MUM ,RRSe ) - Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) - Min( ( MRS / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ,AMS ) )", "choosing": "( Min( ( CS / DS ) ,( RCSe + MLU ) ) / Max( ( ( RRSe + DS ) * MUM ),Max( ( ( ( Min( MUC ,DS ) / MLU ) - ( Max( Max( RCSe,RCSe ),Min( RMSe ,RCSe ) ) - MUR ) ) * RMSe ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Const * ACS ) + ( DDR / MRS ) ) )", "choosing": "( ( Max( ( ( DS * MLU ) / MUC ),CS ) + Min( RMSe ,( CS * DS ) ) ) / Min( ( RMSe / DS ) ,( Min( RRSe ,( RMSe - ( RCSe * ( ( MUC * DS ) / Min( MUM ,MUC ) ) ) ) ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( Min( Const ,MRS ) - ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( CS - ( DS + Min( Max( Max( RRSe,( MUR - Min( RRSe ,DS ) ) ),CS ) ,RCSe ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( RRS,ACS ) ) - ( ARS + ( RRS + DDR ) ) ) + ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),( FirstVNF_Mem_Server - MRS ) ) / CRS ) ) - ( PN * DDR ) )", "choosing": "( ( CS * ( ( ( MUR * RMSe ) / ( RRSe * ( ( RMSe - ( RRSe + MUM ) ) + RMSe ) ) ) + ( ( MUC + MUR ) + Min( MUM ,RRSe ) ) ) ) - Max( RRSe,Min( ( ( DS / RRSe ) * ( MUR + ( CS * Max( DS,Max( RCSe,MUC ) ) ) ) ) ,RMSe ) ) )", "obj1": 0.6680942184154176, "obj2": 0.2096771719911212}, {"determining": "( ( Max( ( ( Const - Min( ( ( PN + RRS ) / Min( ACS ,Const ) ) ,DDR ) ) * ( ( CRS - RRS ) - MDR ) ),( Max( ( Max( ( DDR / BR ),Max( FirstVNF_RAM,DDR ) ) * BR ),FirstVNF_CPU_Server ) * Min( ( BR / Const ) ,MDR ) ) ) * Min( MRS ,MDR ) ) - Min( ( PN / AMS ) ,( Const + Min( ( FirstVNF_RAM + MRS ) ,DDR ) ) ) )", "choosing": "Max( ( ( Min( MUM ,Min( ( Min( MUR ,RRSe ) + ( DS - MUC ) ) ,DS ) ) - RMSe ) * ( RCSe / ( Min( RCSe ,RRSe ) / DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + PN ) ) - ( ( RRS + DDR ) + ARS ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ARS ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,RMSe ) ) + Max( RCSe,Min( RCSe ,( MUM - Max( ( Min( MUM ,( RMSe * CS ) ) / MLU ),MUM ) ) ) ) )", "obj1": 0.6680942184154176, "obj2": 0.2096771719911212}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server - ( RRS / ACS ) ) ) - ( MDR - AMS ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - FirstVNF_Mem_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13445466531935846}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( MDR,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.8993576017130621, "obj2": 0.05027120538929271}, {"determining": "( ( Min( FirstVNF_RAM ,( CRS + ( ( FirstVNF_Mem_Server / RRS ) - CRS ) ) ) - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( Min( DDR ,( ( FirstVNF_CPU_Server + Const ) * PN ) ) / RRS ) ) )", "choosing": "( Min( CS ,Min( MUC ,MLU ) ) + ( ( ( DS - ( Max( Max( CS,MUM ),Max( MUM,RRSe ) ) - ( ( Max( MUC,MUC ) * MLU ) - DS ) ) ) * ( CS + MUM ) ) - ( MUR * MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.0849668429541316}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( AMS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( RCSe,( MLU - Min( ( ( ( DS / MUM ) + MUM ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14131207129291531}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( ( Max( Const,Min( FirstVNF_CPU_Server ,( CRS * ( FirstVNF_Mem - PN ) ) ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( Max( Max( RMSe,MUM ),MUC ) / Max( ( MLU * RMSe ),RRSe ) ) - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Min( MUR ,CS ) )", "obj1": 0.8843683083511777, "obj2": 0.07841339220877797}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( RRS + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "Min( ( ( ( ( MUR / Max( CS,( CS * ( MUC + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,( MLU - RRSe ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) * FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,MDR ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / CS ) / Max( ( MUC - RCSe ),RRSe ) ) / Min( MUR ,CS ) )", "obj1": 0.8736616702355461, "obj2": 0.08140745767542612}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( CS * MUM ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( MDR * ARS ) ) + ( CRS / ( MDR * ACS ) ) )", "choosing": "( ( Max( ( MUM / RRSe ),( MLU - Min( RCSe ,RMSe ) ) ) - ( ( Min( ( MUC + ( Max( MUC,RCSe ) - MUC ) ) ,RRSe ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( RCSe,CS ) / ( ( CS * MLU ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,Min( ( MDR - AMS ) ,Min( ACS ,FirstVNF_CPU_Server ) ) ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( CS - ( DS + Min( ( ( Max( MUR,MUC ) / ( MUC + RMSe ) ) * RRSe ) ,MLU ) ) ) + ( MLU / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - FirstVNF_CPU ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + ( ( DDR * ( RRS - FirstVNF_CPU_Server ) ) + DDR ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( CRS / ( Const - MRS ) ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( ( RCSe + RCSe ) + ( RRSe * ( MUR + MUC ) ) ) ) ,( DS / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "Max( ( ( ( MRS - AMS ) * ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / ( ACS * ( CRS - FirstVNF_CPU ) ) ) + ( Const + Max( CRS,( MRS - FirstVNF_CPU ) ) ) ) ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Max( ( MUM / CS ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( Min( RCSe ,RRSe ) / ( CS / RMSe ) ) + ( RCSe / Max( ( Max( CS,CS ) - MLU ),RCSe ) ) ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( ( ARS + MRS ) + PN ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,( MRS / ( AMS / Min( RRS ,DDR ) ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( MDR ,ACS ) ) + FirstVNF_CPU ) ),Min( ARS ,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( CS - MUM ),MUM ) + ( ( RRSe / CS ) + MLU ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + MDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( ( DS - ( RCSe / RRSe ) ) * ( Min( ( DS + ( RCSe + MLU ) ) ,MUR ) + MUM ) ) )", "obj1": 0.6788008565310493, "obj2": 0.19441830454621928}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( RRSe,MUR ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),FirstVNF_CPU ) / ( MRS * Const ) ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( Min( DS ,( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( ( Max( DS,MUR ) - ( ( RCSe / MUC ) - RMSe ) ) * Max( MLU,( RMSe / RRSe ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01919145066101353}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( RRSe + CS ) + ( MUC * ( ( DS + MUM ) / DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01919145066101353}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "Max( ( ( Const * FirstVNF_RAM_Server ) * Min( ( PN + FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( Min( FirstVNF_RAM ,MRS ) / ( DDR - Max( ( FirstVNF_RAM_Server + Const ),Min( FirstVNF_RAM ,( CRS / AMS ) ) ) ) ) )", "choosing": "( ( MUM - ( Max( MUR,Min( MLU ,( RRSe / MUR ) ) ) + Max( MUM,( ( ( MUR - DS ) - ( ( MUR - CS ) - RCSe ) ) * ( RRSe - MUM ) ) ) ) ) - Max( RCSe,MUR ) )", "obj1": 0.974304068522484, "obj2": 0.015490289132236565}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( RRS + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( RCSe + MLU ) - ( ( MUR / DS ) + MUM ) ) ) * RRSe ) * DS ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Min( FirstVNF_RAM ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM + ( ARS / ARS ) ) + ( FirstVNF_CPU / FirstVNF_CPU ) ) ) + ( ( MRS - Const ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / Max( AMS,Max( MRS,( Max( DDR,RRS ) * FirstVNF_CPU_Server ) ) ) ) - MDR ) - ( AMS - ( MRS / Min( MDR ,CRS ) ) ) )", "choosing": "( Min( MUR ,( ( ( RMSe * MUM ) + ( RCSe / MUR ) ) * MUC ) ) - ( ( MUM - CS ) * DS ) )", "obj1": 0.6809421841541756, "obj2": 0.19115294949282424}, {"determining": "( ( ( ( CRS - MRS ) + ( ( RRS - DDR ) + ( Max( PN,ACS ) / ( Const / ( RRS - BR ) ) ) ) ) + ( ( MRS - Const ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MLU,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( RMSe + Min( ( RMSe + Max( Max( MUM,MLU ),MUC ) ) ,MUM ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13898933613153078}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,MRS ) ) * BR ),( Const / ( DDR / BR ) ) ) * Min( MRS ,( FirstVNF_CPU_Server / Max( ARS,PN ) ) ) ) ) / CRS ) )", "choosing": "( ( Max( Max( Max( MUM,( ( ( MLU / RCSe ) * Min( DS ,MLU ) ) - DS ) ),MUM ),( MLU - ( MUR - Max( Max( RCSe,CS ),Min( RMSe ,RCSe ) ) ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - ( CS + RCSe ) ) ) * CS ) * DS ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( ( Min( ( AMS + CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Min( Const ,CRS ) + Min( ( Max( PN,ACS ) * ( BR * FirstVNF_RAM_Server ) ) ,AMS ) ) / MRS ) )", "choosing": "( ( Max( Max( Max( MUM,( ( ( MLU / DS ) / Min( DS ,MLU ) ) - DS ) ),MUM ),( MLU - ( Max( Max( RCSe,CS ),Min( RMSe ,RCSe ) ) - MUR ) ) ) - ( ( ( ( MUC + ( ( MUC / DS ) - ( CS + RCSe ) ) ) * RRSe ) * MUR ) - ( MLU * MUM ) ) ) * ( ( DS - Min( Min( RRSe ,CS ) ,MUC ) ) * Min( MUM ,( RMSe / MUC ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.20355743467839446}, {"determining": "( Max( ARS,AMS ) - ( FirstVNF_RAM - Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ) )", "choosing": "( ( MUM + Max( CS,CS ) ) - ( MLU - RRSe ) )", "obj1": 0.6702355460385439, "obj2": 0.208847990936383}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - ( MUM * MLU ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( Max( ( Min( ( Const * Max( Min( PN ,AMS ),Min( MDR ,Max( FirstVNF_RAM,CRS ) ) ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) / ( ( ( MDR - BR ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,( ACS + RRS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( RCSe - MUR ) - ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) ) * RMSe ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( ( ( CRS - MRS ) + ( ( RRS - DDR ) + ( Max( PN,ACS ) / ( Const / ( RRS - BR ) ) ) ) ) + ( ( MRS - Const ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MLU,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( RMSe + Min( ( RMSe + Max( Max( MUM,MLU ),MUC ) ) ,MUM ) ) )", "obj1": 0.6766595289079229, "obj2": 0.19941160133758346}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( ARS / FirstVNF_Mem ) ) ) + Max( PN,MDR ) )", "choosing": "Min( MUM ,( MUR + Min( MLU ,MUR ) ) )", "obj1": 0.6852248394004282, "obj2": 0.18717120860364284}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * RRSe ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.08066167092748758}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Min( MUR ,CS ) )", "obj1": 0.8779443254817987, "obj2": 0.08066167092748758}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - FirstVNF_Mem_Server ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.683083511777302, "obj2": 0.1894510888494918}, {"determining": "( ( ( Min( ( DDR + MRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * Max( FirstVNF_Mem,FirstVNF_RAM ) ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) + CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( MUM / MUM ) * ( MUC + ( Max( MUC,RCSe ) / CS ) ) )", "obj1": 0.6702355460385439, "obj2": 0.208847990936383}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( FirstVNF_Mem_Server - Max( Min( FirstVNF_RAM ,( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) / PN ) ),FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Min( MUM ,( Min( MLU ,CS ) - DS ) ) ) + ( RRSe + CS ) )", "obj1": 0.683083511777302, "obj2": 0.1894510888494918}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,PN ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,Min( Max( ( ARS * PN ),AMS ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( MUR + ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_RAM,( ( ACS + Min( ARS ,CRS ) ) + MRS ) ) ,( MDR * DDR ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( Max( FirstVNF_CPU,BR ) * FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,RRSe ) - Max( RRSe,MLU ) ) - ( MUC / ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / MRS ) - CRS ) ) / ( ( RRS * FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * MUC ) * ( Max( DS,( ( CS / ( DS + MLU ) ) + ( ( RCSe * ( Max( MUC,MUR ) * ( MUC / RCSe ) ) ) / RRSe ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,CRS ) - ( ( Max( RRS,( ( FirstVNF_Mem - MDR ) / ( RRS - AMS ) ) ) * ( FirstVNF_RAM + RRS ) ) - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( ( ( RRSe + MUC ) * ( ( RRSe + DS ) - RRSe ) ),Max( MLU,Max( ( ( ( DS / MUM ) + MUM ) + Max( MUM,( RMSe / RMSe ) ) ),( ( CS + CS ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) ) * ( CRS + Min( Const ,FirstVNF_RAM_Server ) ) ) * Max( MRS,( BR - RRS ) ) )", "choosing": "Min( ( ( Min( MUR ,( CS * MLU ) ) * RRSe ) + Min( CS ,RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),ARS ) / ( MRS * Const ) ) )", "choosing": "( ( Max( ( ( RMSe / Min( ( RMSe - CS ) ,Min( MUR ,( MUC / MLU ) ) ) ) + RMSe ),CS ) * ( RRSe - RRSe ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MRS ) - ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( CS - ( DS + Min( Max( Max( RRSe,( MUR - Min( RRSe ,DS ) ) ),CS ) ,RCSe ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - PN ) * DDR ) - ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) / ( ( RRS + DDR ) + ( RRS / FirstVNF_Mem ) ) ) + ( ( Const - PN ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Min( RCSe ,RRSe ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),( RRSe / CS ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7644539614561028, "obj2": 0.13058333835028765}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( MDR,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.8993576017130621, "obj2": 0.05027120538929271}, {"determining": "( ( Min( FirstVNF_RAM ,( CRS + ( ( FirstVNF_Mem_Server / RRS ) - CRS ) ) ) - ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( Min( DDR ,( ( FirstVNF_CPU_Server + Const ) * PN ) ) / RRS ) ) )", "choosing": "( Min( CS ,Min( MUC ,MLU ) ) + ( ( ( DS - ( Max( Max( CS,MUM ),Max( MUM,RRSe ) ) - ( ( Max( MUC,MUC ) * MLU ) - DS ) ) ) * ( CS + MUM ) ) - ( MUR * MLU ) ) )", "obj1": 0.8436830835117773, "obj2": 0.0849668429541316}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server - ( RRS / ACS ) ) ) - ( MDR - AMS ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( ( ( ( Max( Const,Min( FirstVNF_CPU_Server ,( CRS * ( FirstVNF_Mem - PN ) ) ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( Max( Max( RMSe,MUM ),MUC ) / Max( ( MLU * RMSe ),RRSe ) ) - ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Min( MUR ,CS ) )", "obj1": 0.8843683083511777, "obj2": 0.07841339220877797}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) * FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,MDR ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( CS / CS ) / Max( ( MUC - RCSe ),RRSe ) ) / Min( MUR ,CS ) )", "obj1": 0.8736616702355461, "obj2": 0.08140745767542612}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( CS,MUC ) * ( MLU - ( ( RCSe * RRSe ) - MUR ) ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13445466531935846}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( Const + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( ( MUR / DS ) + MLU ) - ( ( MUR / DS ) + MUM ) ) ) * RRSe ) * DS ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( CS * MUM ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( RRSe + CS ) + ( MUC * ( ( DS + MUM ) / DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019191450661013527}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( MUR + ( RMSe * RCSe ) ) ) ) ) + ( CS * MUM ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( MLU / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( RRS + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "Min( ( ( ( ( MUR / Max( CS,( CS * ( MUC + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,( MLU - RRSe ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( RCSe,CS ) / ( ( CS * MLU ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "( ( ( ( ( MDR - AMS ) + ( CRS - Const ) ) - ( Max( RRS,Const ) - BR ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU_Server - Max( ARS,( Min( DDR ,Max( ( ( FirstVNF_Mem - AMS ) / Min( PN ,Const ) ),( ( RRS - FirstVNF_CPU_Server ) * BR ) ) ) + Max( AMS,RRS ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - MUR ) ,( Max( RRSe,MUC ) + Min( MLU ,( ( RRSe - ( ( MUC - Max( RCSe,MUM ) ) - MUM ) ) - ( MUC * ( ( Max( RRSe,MUM ) - RRSe ) / Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( ( ( ARS + MRS ) + PN ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,( MRS / ( AMS / Min( RRS ,DDR ) ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( MDR ,ACS ) ) + FirstVNF_CPU ) ),Min( ARS ,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( CS - MUM ),MUM ) + ( ( RRSe / CS ) + MLU ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - Min( ( RRS + DDR ) ,Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( MRS / MDR ) / ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + ( ( ( Max( ( RCSe / RCSe ),RRSe ) - ( MUR * MUM ) ) - ( RMSe - MUM ) ) - ( MUR * RMSe ) ) ),MUR ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * RRSe ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.08066167092748756}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "Max( ( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ),( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 0.7173447537473233, "obj2": 0.1430806954887515}, {"determining": "( ( ( ( CRS - MRS ) + ( ( RRS - DDR ) + ( Max( PN,ACS ) / ( Const / ( RRS - BR ) ) ) ) ) + ( ( MRS - Const ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MLU,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( RMSe + Min( ( RMSe + Max( Max( MUM,MLU ),MUC ) ) ,MUM ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13898933613153078}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( Max( ( Min( ( Const * Max( Min( PN ,AMS ),Min( MDR ,Max( FirstVNF_RAM,CRS ) ) ) ) ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) / ( ( ( MDR - BR ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,( ACS + RRS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( RCSe - MUR ) - ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) ) * RMSe ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - FirstVNF_Mem_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13445466531935846}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( AMS - Max( DDR,ACS ) ) )", "choosing": "Min( ( RRSe * ( Min( ( ( ( Min( DS ,DS ) / DS ) / CS ) + Min( MLU ,MLU ) ) ,MUR ) / ( ( MUR + RCSe ) - MUM ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7194860813704497, "obj2": 0.14131207129291531}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( RRSe,MUR ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / AMS ) ) ) + ( Max( ( ( RRS + FirstVNF_RAM ) / ARS ),ARS ) / ( Const - FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server - PN ) - MDR ) )", "choosing": "( Max( ( ( RCSe - MUR ) - CS ),RCSe ) + Min( ( MLU - MUC ) ,Max( MUR,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( Max( ( DDR * FirstVNF_Mem_Server ),( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( Const + FirstVNF_Mem_Server ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUR * MUC ) / Min( MUC ,DS ) ) ) * Min( DS ,MLU ) ) / DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM + ( ARS / ARS ) ) + ( FirstVNF_CPU / FirstVNF_CPU ) ) ) + ( ( MRS - Const ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( AMS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( RCSe,( MLU - Min( ( ( ( DS / MUM ) + MUM ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14131207129291531}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( Max( ( ( Const - Min( ( ( PN + RRS ) / Min( ACS ,Const ) ) ,DDR ) ) * ( ( CRS - RRS ) - MDR ) ),( Max( ( Max( ( DDR / BR ),Max( FirstVNF_RAM,DDR ) ) * BR ),FirstVNF_CPU_Server ) * Min( ( BR / Const ) ,MDR ) ) ) * Min( MRS ,MDR ) ) - Min( ( PN / AMS ) ,( Const + Min( ( FirstVNF_RAM + MRS ) ,DDR ) ) ) )", "choosing": "Max( ( ( Min( MUM ,Min( ( Min( MUR ,RRSe ) + ( DS - MUC ) ) ,DS ) ) - RMSe ) * ( RCSe / ( Min( RCSe ,RRSe ) / DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,PN ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,Min( Max( ( ARS * PN ),AMS ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( MUR + ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_RAM,( ( ACS + Min( ARS ,CRS ) ) + MRS ) ) ,( MDR * DDR ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( Max( FirstVNF_CPU,BR ) * FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,RRSe ) - Max( RRSe,MLU ) ) - ( MUC / ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / MRS ) - CRS ) ) / ( ( RRS * FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * MUC ) * ( Max( DS,( ( CS / ( DS + MLU ) ) + ( ( RCSe * ( Max( MUC,MUR ) * ( MUC / RCSe ) ) ) / RRSe ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,CRS ) - ( ( Max( RRS,( ( FirstVNF_Mem - MDR ) / ( RRS - AMS ) ) ) * ( FirstVNF_RAM + RRS ) ) - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( ( ( RRSe + MUC ) * ( ( RRSe + DS ) - RRSe ) ),Max( MLU,Max( ( ( ( DS / MUM ) + MUM ) + Max( MUM,( RMSe / RMSe ) ) ),( ( CS + CS ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) ) * ( CRS + Min( Const ,FirstVNF_RAM_Server ) ) ) * Max( MRS,( BR - RRS ) ) )", "choosing": "Min( ( ( Min( MUR ,( CS * MLU ) ) * RRSe ) + Min( CS ,RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - Min( FirstVNF_Mem ,MRS ) )", "choosing": "( ( CS - ( DS + Min( Max( RMSe,CS ) ,MUR ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * RRS ) - ( FirstVNF_RAM / DDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - ( ( ( Max( MUM,CS ) - DS ) - ( Max( ( MLU - MUR ),( MUC * ( DS - Max( MUM,MUR ) ) ) ) - RMSe ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_Mem_Server ) + Const ) - Max( BR,( ( MDR / FirstVNF_CPU ) / ( Max( BR,FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RRSe / RMSe ) + ( MLU - ( ( RCSe + CS ) + ( ( MUR * Min( RCSe ,CS ) ) * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,PN ) + ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( ( RRSe - ( ( ( RMSe + ( ( MUC - ( CS * MUR ) ) / ( CS + MLU ) ) ) * Min( RCSe ,( MUM - DS ) ) ) / ( RMSe + DS ) ) ) + Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM - ( ( FirstVNF_CPU_Server + Min( ARS ,CRS ) ) + ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU * CRS ) )", "choosing": "( ( DS * RMSe ) - ( Max( ( ( MUC * MUR ) * MUC ),MUC ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - CRS ) - Min( ( ARS - ( ( ( ( FirstVNF_RAM + ( FirstVNF_RAM_Server - ACS ) ) * CRS ) + Max( FirstVNF_Mem,Max( Min( BR ,AMS ),AMS ) ) ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,( MLU * CS ) ) ,Max( ( Min( DS ,MUM ) * RCSe ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),FirstVNF_CPU ) / ( MRS * Const ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( AMS,FirstVNF_RAM ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / Min( ACS ,Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( CS ,( DS + Min( ( MLU - Min( RCSe ,MUM ) ) ,( Min( RMSe ,RMSe ) / Min( CS ,MUR ) ) ) ) ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS + MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( Min( DS ,( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + ( RCSe * RRSe ) ) ) ) ) ,( ( Max( DS,MUR ) - ( ( RCSe / MUC ) - RMSe ) ) * Max( MLU,( RMSe / RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( Max( ( Min( Min( Max( ARS,( Min( FirstVNF_RAM ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ,FirstVNF_CPU ) ,( Const * Max( Min( PN ,AMS ),Min( MDR ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,( ACS + RRS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( Max( RMSe,Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - CS ) ) * ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),ARS ) / ( MRS * Const ) ) )", "choosing": "( ( Max( ( ( RMSe / Min( ( RMSe - CS ) ,Min( MUR ,( MUC / MLU ) ) ) ) + RMSe ),CS ) * ( RRSe - RRSe ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - PN ) * DDR ) - ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) / ( ( RRS + DDR ) + ( RRS / FirstVNF_Mem ) ) ) + ( ( Const - PN ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server - ( RRS / ACS ) ) ) - ( MDR - AMS ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( Min( MDR ,AMS ) - ( BR / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - ( RCSe - RRSe ) ) + Max( ( RMSe - ( Max( RRSe,RRSe ) / ( CS - MUC ) ) ),MLU ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM + ( ARS / ARS ) ) + ( FirstVNF_CPU / FirstVNF_CPU ) ) ) + ( ( MRS - Const ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( CS + RMSe ) + ( ( ( ( RRSe - MUM ) * RMSe ) + ( CS - Max( CS,( ( ( MUR * RRSe ) * MUR ) / Min( MUM ,MLU ) ) ) ) ) / DS ) )", "obj1": 0.8993576017130621, "obj2": 0.05027120538929271}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( CS,MUC ) * ( MLU - ( ( RCSe * RRSe ) - MUR ) ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( MDR,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.8993576017130621, "obj2": 0.05027120538929271}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( RRSe + CS ) + ( MUC * ( ( DS + MUM ) / DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019191450661013527}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( RCSe / RRSe ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( MLU / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS * ( Const + FirstVNF_RAM_Server ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( MUR + ( RMSe * RCSe ) ) ) ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( FirstVNF_RAM - ( AMS / ARS ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * RRSe ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( ( RCSe - ( MLU / ( MUR + MUR ) ) ) + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.9807280513918629, "obj2": 0.009012061715364022}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( Const + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( ( MUR / DS ) + MLU ) - ( ( MUR / DS ) + MUM ) ) ) * RRSe ) * DS ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const - MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / ( MRS + RRS ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( MUM,( ( Min( ( DS + MUM ) ,MUR ) + ( RCSe * MUC ) ) / ( MUR / DS ) ) ) + ( MLU / ( MUM / CS ) ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "( ( Max( RCSe,CS ) / ( ( CS * MLU ) / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( CS * MUM ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( MDR ,ACS ) ) + FirstVNF_CPU ) ),Min( ARS ,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( CS - MUM ),MUM ) + ( ( RRSe / CS ) + MLU ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13092420778850278}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( Max( RRS,Const ) - FirstVNF_Mem ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + Min( ARS ,Const ) ) + ( FirstVNF_Mem_Server / AMS ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) * ( ( RMSe + Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - ( Max( MLU,RRSe ) * RRSe ) ) ) ) * ( Max( RCSe,Max( MUC,Min( RRSe ,MLU ) ) ) + ( ( MUM + Min( Max( MLU,MUR ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - Min( ( RRS + DDR ) ,Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( MRS / MDR ) / ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + ( ( ( Max( ( RCSe / RCSe ),RRSe ) - ( MUR * MUM ) ) - ( RMSe - MUM ) ) - ( MUR * RMSe ) ) ),MUR ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( MDR ,ACS ) ) + FirstVNF_CPU ) ),Min( ARS ,( ACS + MDR ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( CS - MUM ),MUM ) + ( ( RRSe / CS ) + MLU ) )", "obj1": 0.9935760171306209, "obj2": 0.005361296218047177}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.728051391862955, "obj2": 0.1368066517973203}, {"determining": "( ( ( ( CRS - MRS ) + ( ( RRS - DDR ) + ( Max( PN,ACS ) / ( Const / ( RRS - BR ) ) ) ) ) + ( ( MRS - Const ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MLU,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( RMSe + Min( ( RMSe + Max( Max( MUM,MLU ),MUC ) ) ,MUM ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13898933613153078}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( AMS - Max( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ),ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( RCSe,( MLU - Min( ( ( ( DS / MUM ) + MUM ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,Max( MUM,MLU ) ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.1402059812945196}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( ( FirstVNF_CPU_Server - Max( BR,PN ) ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,CS ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.715203426124197, "obj2": 0.1444965853753668}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - FirstVNF_Mem_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13445466531935846}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13445466531935846}, {"determining": "( ( ( ( ( MDR - AMS ) + ( CRS - Const ) ) - ( Max( RRS,Const ) - BR ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU_Server - Max( ARS,( Min( DDR ,Max( ( ( FirstVNF_Mem - AMS ) / Min( PN ,Const ) ),( ( RRS - FirstVNF_CPU_Server ) * BR ) ) ) + Max( AMS,RRS ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - MUR ) ,( Max( RRSe,MUC ) + Min( MLU ,( ( RRSe - ( ( MUC - Max( RCSe,MUM ) ) - MUM ) ) - ( MUC * ( ( Max( RRSe,MUM ) - RRSe ) / Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( ( DS + Min( MUM ,( Min( RMSe ,RMSe ) / Min( CS ,MUR ) ) ) ) ,CS ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS + MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 0.7066381156316917, "obj2": 0.15879328226892264}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( MUR + ( RMSe * RCSe ) ) ) ) ) + ( CS * MUM ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( AMS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( RCSe,( MLU - Min( ( ( ( DS / MUM ) + MUM ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14131207129291531}, {"determining": "Max( ( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ),( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 0.7173447537473233, "obj2": 0.1430806954887515}, {"determining": "( Min( ( PN - CRS ) ,Max( FirstVNF_CPU,ACS ) ) * ( ( Min( Max( FirstVNF_RAM_Server,PN ) ,Max( FirstVNF_CPU,MRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( MUM ,( ( CS + Min( MUR ,Min( MUR ,RCSe ) ) ) - ( RCSe * MUM ) ) ) - RRSe ) / DS ) + ( MLU / Min( MUM ,RRSe ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "Max( ( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * ( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) ) ) + Min( DS ,CS ) )", "obj1": 0.7173447537473233, "obj2": 0.1430806954887515}, {"determining": "( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM + ( ARS / ARS ) ) + ( FirstVNF_CPU / FirstVNF_CPU ) ) ) + ( ( MRS - Const ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( AMS - Max( DDR,ACS ) ) )", "choosing": "Min( ( RRSe * ( Min( ( ( ( Min( DS ,DS ) / DS ) / CS ) + Min( MLU ,MLU ) ) ,MUR ) / ( ( MUR + RCSe ) - MUM ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7194860813704497, "obj2": 0.14131207129291531}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / AMS ) ) ) + ( Max( ( ( RRS + FirstVNF_RAM ) / ARS ),ARS ) / ( Const - FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server - PN ) - MDR ) )", "choosing": "( Max( ( ( RCSe - MUR ) - CS ),RCSe ) + Min( ( MLU - MUC ) ,Max( MUR,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( Max( ( DDR * FirstVNF_Mem_Server ),( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( Const + FirstVNF_Mem_Server ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUR * MUC ) / Min( MUC ,DS ) ) ) * Min( DS ,MLU ) ) / DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( Min( Const ,MRS ) - ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( CS - ( DS + Min( Max( Max( RRSe,( MUR - Min( RRSe ,DS ) ) ),CS ) ,RCSe ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Const - Min( ( ( PN + RRS ) / Min( ACS ,Const ) ) ,DDR ) ) * ( ( CRS - RRS ) - MDR ) ),( Max( ( Max( ( DDR / BR ),Max( FirstVNF_RAM,DDR ) ) * BR ),FirstVNF_CPU_Server ) * Min( ( BR / Const ) ,MDR ) ) ) * Min( MRS ,MDR ) ) - Min( ( PN / AMS ) ,( Const + Min( ( FirstVNF_RAM + MRS ) ,DDR ) ) ) )", "choosing": "Max( ( ( Min( MUM ,Min( ( Min( MUR ,RRSe ) + ( DS - MUC ) ) ,DS ) ) - RMSe ) * ( RCSe / ( Min( RCSe ,RRSe ) / DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,PN ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,Min( Max( ( ARS * PN ),AMS ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( MUR + ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_RAM,( ( ACS + Min( ARS ,CRS ) ) + MRS ) ) ,( MDR * DDR ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( Max( FirstVNF_CPU,BR ) * FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,RRSe ) - Max( RRSe,MLU ) ) - ( MUC / ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / MRS ) - CRS ) ) / ( ( RRS * FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * MUC ) * ( Max( DS,( ( CS / ( DS + MLU ) ) + ( ( RCSe * ( Max( MUC,MUR ) * ( MUC / RCSe ) ) ) / RRSe ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,CRS ) - ( ( Max( RRS,( ( FirstVNF_Mem - MDR ) / ( RRS - AMS ) ) ) * ( FirstVNF_RAM + RRS ) ) - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( ( ( RRSe + MUC ) * ( ( RRSe + DS ) - RRSe ) ),Max( MLU,Max( ( ( ( DS / MUM ) + MUM ) + Max( MUM,( RMSe / RMSe ) ) ),( ( CS + CS ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) ) * ( CRS + Min( Const ,FirstVNF_RAM_Server ) ) ) * Max( MRS,( BR - RRS ) ) )", "choosing": "Min( ( ( Min( MUR ,( CS * MLU ) ) * RRSe ) + Min( CS ,RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,FirstVNF_Mem ) - ( Max( ( Min( ( MRS / MDR ) ,MRS ) - FirstVNF_RAM ),BR ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * RRSe ) - Max( Min( RCSe ,RRSe ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,FirstVNF_Mem ) - ( Max( FirstVNF_Mem,Min( ( Max( BR,BR ) + DDR ) ,AMS ) ) + ( BR / ARS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),MUM ) * ( ( ( ( ( RRSe / RCSe ) + ( ( MUR + MUC ) - ( RMSe * RRSe ) ) ) + ( ( Max( RCSe,MLU ) - Min( RCSe ,DS ) ) + RCSe ) ) * RCSe ) - ( MUM * MLU ) ) ) * ( MUM / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Max( PN,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server / AMS ) )", "choosing": "( ( Max( MLU,CS ) / ( Min( MLU ,( Min( CS ,MLU ) + MUM ) ) * RCSe ) ) - ( ( MUR * RRSe ) + Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN - PN ) - RRS ) * Min( Max( FirstVNF_Mem_Server,Max( ( Min( RRS ,FirstVNF_RAM ) + FirstVNF_CPU ),PN ) ) ,FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( ( FirstVNF_CPU_Server - FirstVNF_CPU ) ,Max( ( Const + DDR ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,CS ) ,Min( ( MLU - Max( MUC,MLU ) ) ,RCSe ) ) ,( RCSe / ( RRSe + Max( MUR,CS ) ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( ( ( CS - MUC ) + Min( RMSe ,( DS / DS ) ) ) + Max( Max( DS,Max( ( MUM * RCSe ),( MUR * DS ) ) ),MUC ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - CRS ) * ( AMS * RRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + CRS ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * Max( MUM,( ( ( Min( CS ,( MUM * DS ) ) / DS ) * Min( DS ,MLU ) ) - RMSe ) ) ) + Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - Min( FirstVNF_CPU_Server ,Const ) ) - ( DDR / ( ( ( ( CRS * Min( BR ,Min( FirstVNF_CPU ,BR ) ) ) / ( ( CRS + FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) / ARS ) ) )", "choosing": "( Min( DS ,( ( Max( DS,DS ) + MUM ) / CS ) ) - Max( RRSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( Max( ARS,( Min( FirstVNF_RAM ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ,FirstVNF_CPU ) ,( Const * Max( Min( PN ,AMS ),Min( MDR ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,( ACS + RRS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( Max( RMSe,Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - CS ) ) * ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - PN ) * DDR ) - ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) / ( ( RRS + DDR ) + ( RRS / FirstVNF_Mem ) ) ) + ( ( Const - PN ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server - ( RRS / ACS ) ) ) - ( MDR - AMS ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( RRS / ( FirstVNF_Mem + PN ) ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( FirstVNF_Mem + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( ( RRS / PN ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Max( MUM,( MUR - Min( RCSe ,DS ) ) ) + DS ) + ( ( MLU - DS ) + ( ( MLU / MUM ) * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( ( CRS - MRS ) - ( ( ( AMS * ( RRS * DDR ) ) / FirstVNF_Mem_Server ) + ( RRS + ( ( FirstVNF_CPU_Server - BR ) / DDR ) ) ) ) + ( ( MRS - ( DDR - FirstVNF_Mem ) ) / CRS ) ) - ( ACS - MDR ) )", "choosing": "( Max( ( ( ( RRSe - ( ( Min( RRSe ,CS ) - ( MUC - MUM ) ) + RRSe ) ) + Max( MUR,( RCSe / RMSe ) ) ) / Max( MUR,DS ) ),MUM ) + ( Max( ( MUR - MUC ),Max( MUR,RRSe ) ) / MUC ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU - ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( ( MUC * CS ) + MUM ) - ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) ) * RRSe ) * DS ) )", "obj1": 0.9014989293361885, "obj2": 0.04947068955109358}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( Min( MDR ,AMS ) - ( BR / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - ( RCSe - RRSe ) ) + Max( ( RMSe - ( Max( RRSe,RRSe ) / ( CS - MUC ) ) ),MLU ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( CS,MUC ) * ( MLU - ( ( RCSe * RRSe ) - MUR ) ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( RRSe + CS ) + ( MUC * ( ( DS + MUM ) / DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019191450661013527}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( Const + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( CRS - Min( Min( FirstVNF_RAM_Server ,( ( ARS / MRS ) + MDR ) ) ,FirstVNF_Mem_Server ) ) - ( ( Const / ( Min( ( MDR / RRS ) ,CRS ) - PN ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,CS ) - ( ( ( ( MUM - ( ( ( MLU + RMSe ) - RRSe ) + DS ) ) * RMSe ) * RRSe ) * DS ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MLU - Max( MLU,MLU ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.9914346895074947, "obj2": 0.003766036430200043}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( RCSe / RRSe ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( MLU / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( Const + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( ( MUR / DS ) + MLU ) - ( ( MUR / DS ) + MUM ) ) ) * RRSe ) * DS ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS * ( Const + FirstVNF_RAM_Server ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),ARS ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( Max( ( MUM * RCSe ),( MUR * DS ) ) ,RMSe ) ,( MLU - RCSe ) ) + ( CS * MUM ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( Max( Min( FirstVNF_RAM ,( FirstVNF_RAM * FirstVNF_CPU ) ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( Max( ( RRSe / CS ),( Min( MUC ,MUR ) / ( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ) + CS ) + ( MUC * ( ( RCSe + DS ) / DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.011511027182639964}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( RMSe + RRSe ) ) ) / ( MUR + ( RMSe * RCSe ) ) ) ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( BR ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( ( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + CS ) / MUM ) ) + Min( ( ( ( ( RCSe / MUR ) * ( RMSe / DS ) ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ),CS ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( CS + RMSe ) + ( ( ( ( RRSe - MUM ) * RMSe ) + ( CS - Max( CS,( ( ( MUR * RRSe ) * MUR ) / Min( MUM ,MLU ) ) ) ) ) / DS ) )", "obj1": 0.8993576017130621, "obj2": 0.05027120538929271}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( CS,MUC ) * ( MLU - ( ( RCSe * RRSe ) - MUR ) ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13168202072287624}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( MDR,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.8993576017130621, "obj2": 0.05027120538929271}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( ( Max( RRS,Const ) - FirstVNF_Mem ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + Min( ARS ,Const ) ) + ( FirstVNF_Mem_Server / AMS ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) * ( ( RMSe + Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - ( Max( MLU,RRSe ) * RRSe ) ) ) ) * ( Max( RCSe,Max( MUC,Min( RRSe ,MLU ) ) ) + ( ( MUM + Min( Max( MLU,MUR ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( ( ( MDR - AMS ) + ( CRS - Const ) ) - ( Max( RRS,Const ) - BR ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU_Server - Max( ARS,( Min( DDR ,Max( ( ( FirstVNF_Mem - AMS ) / Min( PN ,Const ) ),( ( RRS - FirstVNF_CPU_Server ) * BR ) ) ) + Max( AMS,RRS ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - MUR ) ,( Max( RRSe,MUC ) + Min( MLU ,( ( RRSe - ( ( MUC - Max( RCSe,MUM ) ) - MUM ) ) - ( MUC * ( ( Max( RRSe,MUM ) - RRSe ) / Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "Max( ( ( ( ( MRS - CRS ) - ( ( MRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * ( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * Max( MUM,CS ) ) + ( RRSe + CS ) ) ) + Min( DS ,CS ) )", "obj1": 0.7173447537473233, "obj2": 0.14294174147033264}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.728051391862955, "obj2": 0.1368066517973203}, {"determining": "( ( ( ( CRS - MRS ) + ( ( RRS - DDR ) + ( Max( PN,ACS ) / ( Const / ( RRS - BR ) ) ) ) ) + ( ( MRS - Const ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MLU,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( RMSe + Min( ( RMSe + Max( Max( MUM,MLU ),MUC ) ) ,MUM ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13898933613153078}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( ( FirstVNF_CPU_Server - Max( BR,PN ) ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,CS ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.715203426124197, "obj2": 0.1444965853753668}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( AMS - Max( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ),ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( RCSe,( MLU - Min( ( ( ( DS / MUM ) + MUM ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,Max( MUM,MLU ) ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.1402059812945196}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const - MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / ( MRS + RRS ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( MUM,( ( Min( ( DS + MUM ) ,MUR ) + ( RCSe * MUC ) ) / ( MUR / DS ) ) ) + ( MLU / ( MUM / CS ) ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - FirstVNF_Mem_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13445466531935846}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( FirstVNF_RAM - ( AMS / ARS ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009012061715364022}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( Const + PN ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MLU ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * MUM ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13445466531935846}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - Min( ( RRS + DDR ) ,Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( MRS / MDR ) / ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + ( ( ( Max( ( RCSe / RCSe ),RRSe ) - ( MUR * MUM ) ) - ( RMSe - MUM ) ) - ( MUR * RMSe ) ) ),MUR ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( MUR + ( RMSe * RCSe ) ) ) ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( AMS - Max( DDR,ACS ) ) )", "choosing": "Min( ( RRSe * ( Min( ( ( ( Min( DS ,DS ) / DS ) / CS ) + Min( MLU ,MLU ) ) ,MUR ) / ( ( MUR + RCSe ) - MUM ) ) ) ,Max( MUM,RRSe ) )", "obj1": 0.7194860813704497, "obj2": 0.14131207129291531}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / AMS ) ) ) + ( Max( ( ( RRS + FirstVNF_RAM ) / ARS ),ARS ) / ( Const - FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server - PN ) - MDR ) )", "choosing": "( Max( ( ( RCSe - MUR ) - CS ),RCSe ) + Min( ( MLU - MUC ) ,Max( MUR,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( AMS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( RCSe,( MLU - Min( ( ( ( DS / MUM ) + MUM ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.14131207129291531}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13092420778850278}, {"determining": "( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM + ( ARS / ARS ) ) + ( FirstVNF_CPU / FirstVNF_CPU ) ) ) + ( ( MRS - Const ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( Min( ( PN - CRS ) ,Max( FirstVNF_CPU,ACS ) ) * ( ( Min( Max( FirstVNF_RAM_Server,PN ) ,Max( FirstVNF_CPU,MRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( MUM ,( ( CS + Min( MUR ,Min( MUR ,RCSe ) ) ) - ( RCSe * MUM ) ) ) - RRSe ) / DS ) + ( MLU / Min( MUM ,RRSe ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( CS - ( DS + Min( Max( Max( RRSe,( MUR - Min( RRSe ,DS ) ) ),CS ) ,RCSe ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13092420778850278}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( FirstVNF_RAM - ( AMS / ARS ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * RRSe ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( ( RCSe - ( MLU / ( MUR + MUR ) ) ) + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.9807280513918629, "obj2": 0.009012061715364022}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),ARS ) / ( MRS * Const ) ) )", "choosing": "( ( Max( ( ( RMSe / Min( ( RMSe - CS ) ,Min( MUR ,( MUC / MLU ) ) ) ) + RMSe ),CS ) * ( RRSe - RRSe ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MRS ) - ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( CS - ( DS + Min( Max( Max( RRSe,( MUR - Min( RRSe ,DS ) ) ),CS ) ,RCSe ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Const - Min( ( ( PN + RRS ) / Min( ACS ,Const ) ) ,DDR ) ) * ( ( CRS - RRS ) - MDR ) ),( Max( ( Max( ( DDR / BR ),Max( FirstVNF_RAM,DDR ) ) * BR ),FirstVNF_CPU_Server ) * Min( ( BR / Const ) ,MDR ) ) ) * Min( MRS ,MDR ) ) - Min( ( PN / AMS ) ,( Const + Min( ( FirstVNF_RAM + MRS ) ,DDR ) ) ) )", "choosing": "Max( ( ( Min( MUM ,Min( ( Min( MUR ,RRSe ) + ( DS - MUC ) ) ,DS ) ) - RMSe ) * ( RCSe / ( Min( RCSe ,RRSe ) / DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,PN ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,Min( Max( ( ARS * PN ),AMS ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( MUR + ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_RAM,( ( ACS + Min( ARS ,CRS ) ) + MRS ) ) ,( MDR * DDR ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( Max( FirstVNF_CPU,BR ) * FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,RRSe ) - Max( RRSe,MLU ) ) - ( MUC / ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / MRS ) - CRS ) ) / ( ( RRS * FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * MUC ) * ( Max( DS,( ( CS / ( DS + MLU ) ) + ( ( RCSe * ( Max( MUC,MUR ) * ( MUC / RCSe ) ) ) / RRSe ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,CRS ) - ( ( Max( RRS,( ( FirstVNF_Mem - MDR ) / ( RRS - AMS ) ) ) * ( FirstVNF_RAM + RRS ) ) - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( ( ( RRSe + MUC ) * ( ( RRSe + DS ) - RRSe ) ),Max( MLU,Max( ( ( ( DS / MUM ) + MUM ) + Max( MUM,( RMSe / RMSe ) ) ),( ( CS + CS ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) ) * ( CRS + Min( Const ,FirstVNF_RAM_Server ) ) ) * Max( MRS,( BR - RRS ) ) )", "choosing": "Min( ( ( Min( MUR ,( CS * MLU ) ) * RRSe ) + Min( CS ,RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU_Server / FirstVNF_Mem ) ,( Max( MRS,CRS ) * FirstVNF_Mem_Server ) ) ) * Min( Max( RRS,ARS ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( Max( MUR,( ( MUM * ( MLU / Max( Max( RMSe,( RMSe * CS ) ),MUR ) ) ) * Min( MUM ,CS ) ) ) ,Max( ( MUM * MUM ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - AMS ) - ( ( MRS - FirstVNF_Mem ) + MDR ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( FirstVNF_RAM,( Max( ( Const / FirstVNF_RAM_Server ),( ARS * RRS ) ) / ( PN / DDR ) ) ) * ( MDR + FirstVNF_CPU_Server ) ),( Max( ARS,ACS ) - ( ( ( ( ( BR / Const ) * DDR ) + ( DDR + Max( Const,ARS ) ) ) / BR ) + ACS ) ) ) - Min( MRS ,MRS ) )", "choosing": "Min( Min( Min( Max( ( RRSe - RMSe ),MUM ) ,( MUC * ( CS / ( MUC * RMSe ) ) ) ) ,( ( MUR - MUC ) / ( Max( ( CS / ( RCSe + MLU ) ),MUR ) + ( DS * Max( ( ( MUM + DS ) + MLU ),RMSe ) ) ) ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / RRS ) - ( AMS - MDR ) ) / Min( MRS ,( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Max( ( Min( ( RMSe * RMSe ) ,RRSe ) + RCSe ),( DS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Max( ARS,PN ),Max( ARS,FirstVNF_Mem_Server ) ) / Min( MDR ,MRS ) ) - ( PN + PN ) ) - ( FirstVNF_Mem_Server * AMS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR / PN ) + DDR ) - ( Max( ARS,MRS ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ),( Max( ACS,( CRS - FirstVNF_Mem ) ) + ( Max( ( DDR * BR ),( FirstVNF_CPU - FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( RRSe * CS ) + ( DS * Min( MUM ,( MUC - DS ) ) ) ) + MLU ),Max( Max( ( MUC * ( RCSe + ( DS * CS ) ) ),MUR ),( Min( RRSe ,MLU ) - ( CS + ( Max( ( ( CS - MUM ) + Max( RMSe,RMSe ) ),( ( MUM - DS ) * ( RMSe / RMSe ) ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( FirstVNF_RAM + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( ( ( RRSe - ( RCSe + RRSe ) ) + Max( MUR,RMSe ) ) / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( ( ( DDR - PN ) * DDR ) - ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) / ( ( RRS + DDR ) + ( RRS / FirstVNF_Mem ) ) ) + ( ( Const - PN ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( RRS - ARS ) + ( Max( FirstVNF_RAM_Server,( FirstVNF_RAM / ( DDR / ( ( Const - ACS ) / FirstVNF_Mem_Server ) ) ) ) - CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( RCSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( MUR * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( RMSe - RMSe ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - BR ) + Max( FirstVNF_CPU,( Const * Min( ( AMS + FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( CRS / Min( Const ,MRS ) ) ) - ( AMS - FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( DS - ( Max( MUR,( ( MUM / CS ) + MUM ) ) * Min( DS ,MLU ) ) ) ) ) + ( CS / DS ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) + DDR ) + ( PN * FirstVNF_RAM_Server ) ) ) + ( ( CRS * ( Min( AMS ,Min( FirstVNF_RAM ,RRS ) ) - CRS ) ) / CRS ) ) )", "choosing": "( ( Min( Max( ( MLU + MUR ),RRSe ) ,RRSe ) * Max( MUM,( ( ( RCSe * ( MLU / Min( DS ,RRSe ) ) ) * Min( MLU ,DS ) ) - DS ) ) ) + ( ( MLU - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10285264793729243}, {"determining": "( Min( MDR ,AMS ) - ( BR / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - ( RCSe - RRSe ) ) + Max( ( RMSe - ( Max( RRSe,RRSe ) / ( CS - MUC ) ) ),MLU ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU - ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( ( MUC * CS ) + MUM ) - ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) ) * RRSe ) * DS ) )", "obj1": 0.9014989293361885, "obj2": 0.04947068955109358}, {"determining": "( ( ( ( CRS - MRS ) - ( ( ( AMS * ( RRS * DDR ) ) / FirstVNF_Mem_Server ) + ( RRS + ( ( FirstVNF_CPU_Server - BR ) / DDR ) ) ) ) + ( ( MRS - ( DDR - FirstVNF_Mem ) ) / CRS ) ) - ( ACS - MDR ) )", "choosing": "( Max( ( ( ( RRSe - ( ( Min( RRSe ,CS ) - ( MUC - MUM ) ) + RRSe ) ) + Max( MUR,( RCSe / RMSe ) ) ) / Max( MUR,DS ) ),MUM ) + ( Max( ( MUR - MUC ),Max( MUR,RRSe ) ) / MUC ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( RRS / ( FirstVNF_Mem + PN ) ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( FirstVNF_Mem + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( ( RRS / PN ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Max( MUM,( MUR - Min( RCSe ,DS ) ) ) + DS ) + ( ( MLU - DS ) + ( ( MLU / MUM ) * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( CS,MUC ) * ( MLU - ( ( RCSe * RRSe ) - MUR ) ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server - ( RRS / ACS ) ) ) - ( MDR - AMS ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MLU - Max( MLU,MLU ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.9914346895074947, "obj2": 0.003766036430200043}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( ( RRS - FirstVNF_CPU_Server ) + PN ) + DDR ) + ( FirstVNF_CPU_Server * DDR ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( MUR ,RMSe ) ,( MLU - ( ( Min( ( RMSe / ( MUC / RMSe ) ) ,Min( MUM ,RRSe ) ) * ( MUM * ( RMSe + RRSe ) ) ) / ( ( MUM + MUM ) + MUR ) ) ) ) + DS )", "obj1": 0.6702355460385439, "obj2": 0.18925915522388256}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( DDR / MRS ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * ( FirstVNF_RAM_Server * Const ) ) ) ) ) + ( CRS / ( Const - MRS ) ) ) )", "choosing": "( ( Max( RRSe,( MUR + Min( RRSe ,DS ) ) ) * Max( MUM,( ( ( ( MUR + MLU ) - RCSe ) * RRSe ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS * ( Const + FirstVNF_RAM_Server ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU + ( MUC - Max( ( MUM + CS ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( MUM + CS ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( Const + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( ( MUR / DS ) + MLU ) - ( ( MUR / DS ) + MUM ) ) ) * RRSe ) * DS ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( Min( PN ,DDR ) / CRS ) * ( ( Min( Min( FirstVNF_CPU_Server ,CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( ( RMSe * Min( MUC ,RMSe ) ),MUR ) + ( Max( Min( RMSe ,( MLU + ( Max( ( MLU - MLU ),( MUM / MUM ) ) / ( ( DS * RCSe ) / RRSe ) ) ) ),( RCSe / MLU ) ) / CS ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( MUC * DS ) - ( ( MUR / DS ) + MUM ) ) ) * RRSe ) * DS ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( Max( Min( FirstVNF_RAM ,( FirstVNF_RAM * FirstVNF_CPU ) ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( Max( ( RRSe / CS ),( Min( MUC ,MUR ) / ( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ) + CS ) + ( MUC * ( ( RCSe + DS ) / DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.011511027182639964}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( RRSe + CS ) + ( MUC * ( ( DS + MUM ) / DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019191450661013527}, {"determining": "( FirstVNF_CPU * ( ( ( FirstVNF_RAM - ( Min( BR ,DDR ) + ( AMS / ACS ) ) ) / ( FirstVNF_RAM_Server - ( ACS + ARS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( RMSe * DS ) ) / ( RRSe * MUC ) ) ) ) + MLU )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + ( ( Const - MRS ) / CRS ) ) ) ) )", "choosing": "( ( RMSe - ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( RCSe / RRSe ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( MLU / MUM ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.02422752047861926}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( CS + RMSe ) + ( ( ( ( RRSe - MUM ) * RMSe ) + ( CS - Max( CS,( ( ( MUR * RRSe ) * MUR ) / Min( MUM ,MLU ) ) ) ) ) / DS ) )", "obj1": 0.8993576017130621, "obj2": 0.05027120538929271}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019191450661013527}, {"determining": "( ( ACS * ( CRS / BR ) ) / Max( ( MRS * AMS ),Const ) )", "choosing": "( ( ( MUR + ( RCSe / RRSe ) ) - ( MUR - RRSe ) ) + Max( ( RMSe * DS ),( ( MLU / Max( ( MUC * MUR ),Min( CS ,( ( RMSe * MUM ) / CS ) ) ) ) + Min( ( ( Min( RMSe ,( MLU * MLU ) ) + ( MUR * RRSe ) ) + MUM ) ,MUR ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( MDR,Const ) / FirstVNF_Mem ) - ( ARS / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.8993576017130621, "obj2": 0.05027120538929271}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( BR ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( ( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + CS ) / MUM ) ) + Min( ( ( ( ( RCSe / MUR ) * ( RMSe / DS ) ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ),CS ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( ( Max( RRS,Const ) - FirstVNF_Mem ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + Min( ARS ,Const ) ) + ( FirstVNF_Mem_Server / AMS ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) * ( ( RMSe + Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - ( Max( MLU,RRSe ) * RRSe ) ) ) ) * ( Max( RCSe,Max( MUC,Min( RRSe ,MLU ) ) ) + ( ( MUM + Min( Max( MLU,MUR ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( ( ( MDR - AMS ) + ( CRS - Const ) ) - ( Max( RRS,Const ) - BR ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU_Server - Max( ARS,( Min( DDR ,Max( ( ( FirstVNF_Mem - AMS ) / Min( PN ,Const ) ),( ( RRS - FirstVNF_CPU_Server ) * BR ) ) ) + Max( AMS,RRS ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - MUR ) ,( Max( RRSe,MUC ) + Min( MLU ,( ( RRSe - ( ( MUC - Max( RCSe,MUM ) ) - MUM ) ) - ( MUC * ( ( Max( RRSe,MUM ) - RRSe ) / Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( FirstVNF_RAM - ( AMS / ARS ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.140952569576909}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.734475374732334, "obj2": 0.1332461132297103}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( Const + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( CRS - Min( Min( FirstVNF_RAM_Server ,( ( ARS / MRS ) + MDR ) ) ,FirstVNF_Mem_Server ) ) - ( ( Const / ( Min( ( MDR / RRS ) ,CRS ) - PN ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,CS ) - ( ( ( ( MUM - ( ( ( MLU + RMSe ) - RRSe ) + DS ) ) * RMSe ) * RRSe ) * DS ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.728051391862955, "obj2": 0.1368066517973203}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Min( MRS ,RRS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( ARS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14301822456575125}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( Const + PN ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MLU ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * MUM ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( ( CRS - MRS ) + ( ( RRS - DDR ) + ( Max( PN,ACS ) / ( Const / ( RRS - BR ) ) ) ) ) + ( ( MRS - Const ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MLU,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( RMSe + Min( ( RMSe + Max( Max( MUM,MLU ),MUC ) ) ,MUM ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13898933613153078}, {"determining": "Max( ( ( ( ( MRS - CRS ) - ( ( MRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * ( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * Max( MUM,CS ) ) + ( RRSe + CS ) ) ) + Min( DS ,CS ) )", "obj1": 0.7173447537473233, "obj2": 0.14283412189047495}, {"determining": "( ( ( DDR * RRS ) * ( Max( Max( Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ),AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( FirstVNF_CPU_Server * Const ) )", "choosing": "Min( Max( ( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ),( MUR + ( RRSe * RCSe ) ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( Max( Max( Max( ( MUM - DS ),RCSe ),( MUR + Min( DS ,MUR ) ) ),( ( MUR + DS ) / DS ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.721627408993576, "obj2": 0.14001096921123768}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - Min( ( RRS + DDR ) ,Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( MRS / MDR ) / ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + ( ( ( Max( ( RCSe / RCSe ),RRSe ) - ( MUR * MUM ) ) - ( RMSe - MUM ) ) - ( MUR * RMSe ) ) ),MUR ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( RMSe + RRSe ) ) ) / ( MUR + ( RMSe * RCSe ) ) ) ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13168202072287624}, {"determining": "( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) * ( ( Min( Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RCSe * ( Min( ( MLU / DS ) ,Min( ( RCSe * ( CS * RCSe ) ) ,( ( MUR * RRSe ) * ( DS * RRSe ) ) ) ) / Min( MUR ,MUM ) ) ) - DS ) + ( MUC * ( CS / RMSe ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - FirstVNF_Mem_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13445466531935846}, {"determining": "( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM + ( ARS / ARS ) ) + ( FirstVNF_CPU / FirstVNF_CPU ) ) ) + ( ( MRS - Const ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13092420778850278}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / AMS ) ) ) + ( Max( ( ( RRS + FirstVNF_RAM ) / ARS ),ARS ) / ( Const - FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server - PN ) - MDR ) )", "choosing": "( Max( ( ( RCSe - MUR ) - CS ),RCSe ) + Min( ( MLU - MUC ) ,Max( MUR,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13445466531935846}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13092420778850278}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( CS,MUC ) * ( MLU - ( ( RCSe * RRSe ) - MUR ) ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13168202072287624}, {"determining": "( Max( ( Min( Min( Max( ARS,( Min( FirstVNF_RAM ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ,FirstVNF_CPU ) ,( Const * Max( Min( PN ,AMS ),Min( MDR ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,( ACS + RRS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( Max( RMSe,Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - CS ) ) * ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),ARS ) / ( MRS * Const ) ) )", "choosing": "( ( Max( ( ( RMSe / Min( ( RMSe - CS ) ,Min( MUR ,( MUC / MLU ) ) ) ) + RMSe ),CS ) * ( RRSe - RRSe ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MRS ) - ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( CS - ( DS + Min( Max( Max( RRSe,( MUR - Min( RRSe ,DS ) ) ),CS ) ,RCSe ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Const - Min( ( ( PN + RRS ) / Min( ACS ,Const ) ) ,DDR ) ) * ( ( CRS - RRS ) - MDR ) ),( Max( ( Max( ( DDR / BR ),Max( FirstVNF_RAM,DDR ) ) * BR ),FirstVNF_CPU_Server ) * Min( ( BR / Const ) ,MDR ) ) ) * Min( MRS ,MDR ) ) - Min( ( PN / AMS ) ,( Const + Min( ( FirstVNF_RAM + MRS ) ,DDR ) ) ) )", "choosing": "Max( ( ( Min( MUM ,Min( ( Min( MUR ,RRSe ) + ( DS - MUC ) ) ,DS ) ) - RMSe ) * ( RCSe / ( Min( RCSe ,RRSe ) / DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,PN ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,Min( Max( ( ARS * PN ),AMS ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( MUR + ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_RAM,( ( ACS + Min( ARS ,CRS ) ) + MRS ) ) ,( MDR * DDR ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( Max( FirstVNF_CPU,BR ) * FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,RRSe ) - Max( RRSe,MLU ) ) - ( MUC / ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / MRS ) - CRS ) ) / ( ( RRS * FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * MUC ) * ( Max( DS,( ( CS / ( DS + MLU ) ) + ( ( RCSe * ( Max( MUC,MUR ) * ( MUC / RCSe ) ) ) / RRSe ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,CRS ) - ( ( Max( RRS,( ( FirstVNF_Mem - MDR ) / ( RRS - AMS ) ) ) * ( FirstVNF_RAM + RRS ) ) - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( ( ( RRSe + MUC ) * ( ( RRSe + DS ) - RRSe ) ),Max( MLU,Max( ( ( ( DS / MUM ) + MUM ) + Max( MUM,( RMSe / RMSe ) ) ),( ( CS + CS ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) ) * ( CRS + Min( Const ,FirstVNF_RAM_Server ) ) ) * Max( MRS,( BR - RRS ) ) )", "choosing": "Min( ( ( Min( MUR ,( CS * MLU ) ) * RRSe ) + Min( CS ,RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS - ( ( MRS - PN ) + BR ) ) ,FirstVNF_Mem ) - Max( ( MDR / FirstVNF_Mem_Server ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,( ( FirstVNF_CPU + BR ) / ( ARS - ( ( Min( FirstVNF_RAM ,BR ) + Max( CRS,DDR ) ) * ( MDR * MRS ) ) ) ) ) - ( ( FirstVNF_CPU / RRS ) / PN ) )", "choosing": "( Min( ( RMSe / MUR ) ,( ( ( MUR + ( ( RRSe * MUR ) * MUR ) ) - RCSe ) * ( ( DS + ( MUR / MLU ) ) + Max( Min( ( DS / ( MLU * RRSe ) ) ,( MUC / Max( RMSe,MUR ) ) ),DS ) ) ) ) / ( ( DS * MUM ) * Max( ( ( Min( ( Min( RMSe ,MLU ) * Min( RCSe ,RRSe ) ) ,MUR ) + MUM ) * ( ( MLU - MUM ) - Min( MLU ,Min( MUM ,MUC ) ) ) ),MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MDR ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RCSe / CS ) ),( ( Min( ( MUR * CS ) ,MUC ) * Min( MLU ,( ( Min( Min( MUR ,RMSe ) ,( DS * RRSe ) ) * MUC ) / MUR ) ) ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( AMS - MRS ) * ( AMS * PN ) ) - Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),Min( BR ,BR ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_Mem / CRS ) ) ) ) ),ARS ) ) - ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( MLU - ( MUM + Max( MUR,Max( MUR,RRSe ) ) ) ) + ( MUC / ( CS / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_CPU / MDR ) ),Min( ( PN + BR ) ,Max( RRS,ACS ) ) ) - ( Max( ( Max( MRS,ARS ) * RRS ),Min( FirstVNF_CPU_Server ,( CRS * ( ACS / FirstVNF_CPU ) ) ) ) / ( ( CRS + PN ) - ACS ) ) )", "choosing": "Min( Min( Min( ( MUM / RMSe ) ,( MUR + RRSe ) ) ,( Max( MUR,MUC ) / Max( MLU,MUC ) ) ) ,( ( Min( ( RMSe - ( MLU - RMSe ) ) ,MUC ) + Max( RRSe,CS ) ) / ( MUM - CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Min( ( DDR + CRS ) ,( ( BR + RRS ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( CRS ,( FirstVNF_RAM * Min( ( ( ( FirstVNF_CPU / MRS ) - RRS ) / BR ) ,( Min( ARS ,MRS ) + Const ) ) ) ) * Min( ( BR / FirstVNF_Mem_Server ) ,( RRS * FirstVNF_RAM ) ) ),( ACS / FirstVNF_Mem ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( RCSe + Max( ( MUC / MUR ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Const,RRS ) ,Max( ARS,Const ) ) - ( Min( FirstVNF_CPU_Server ,ARS ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( ( ( MUR / ( CS / ( ( DS * DS ) * ( DS + MLU ) ) ) ) / CS ) + MLU ) * MLU ) ,Max( MLU,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( Max( FirstVNF_CPU_Server,Min( ARS ,ARS ) ) / ( MRS * ( PN / Min( RRS ,DDR ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * MDR ),( Min( FirstVNF_RAM_Server ,CRS ) + Min( ( ( FirstVNF_CPU_Server * CRS ) * FirstVNF_RAM ) ,PN ) ) ) / ARS ) - ( AMS - MDR ) )", "choosing": "( Min( RMSe ,RRSe ) - ( CS + ( ( RMSe - MUR ) / Min( ( MLU * MLU ) ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * ( CRS + ARS ) ) - Max( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + ( MUM + ( ( ( DS + ( MLU + CS ) ) + CS ) + ( DS / MUR ) ) ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( ( ( FirstVNF_RAM - ( ( PN * MDR ) / ARS ) ) - FirstVNF_Mem_Server ) * AMS ) ,( PN / Const ) ) ),( ( Min( BR ,PN ) + ( MRS - ACS ) ) - ( ( MDR - ( Min( FirstVNF_Mem_Server ,( Const / FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( FirstVNF_RAM / ( ( FirstVNF_RAM_Server + DDR ) * ( CRS + PN ) ) ) ) ) )", "choosing": "( ( ( CS / DS ) * ( RCSe - ( MLU / ( ( MLU / MUC ) * Max( Min( DS ,Min( RRSe ,RCSe ) ),( MUM - ( RCSe / MUC ) ) ) ) ) ) ) + ( ( DS / ( DS + MUM ) ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) + ( MRS - MDR ) ) * Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( Min( Min( ( MUC + Max( ( RMSe * RMSe ),DS ) ) ,DS ) ,MUM ) - RMSe ),Min( RCSe ,CS ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,( ARS / FirstVNF_RAM ) ) + Max( Max( FirstVNF_CPU_Server,AMS ),FirstVNF_CPU_Server ) ) - ( ( PN - ( ( FirstVNF_RAM / CRS ) / ARS ) ) + ACS ) )", "choosing": "( ( ( ( RCSe + MLU ) / ( RMSe + MUM ) ) * ( Min( Max( ( MUR + Min( ( MUC * MUM ) ,DS ) ),MLU ) ,MUC ) - Min( CS ,RMSe ) ) ) + ( ( ( CS + RCSe ) * ( DS - RRSe ) ) - ( ( RCSe / DS ) / ( MUC * MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - Max( Max( Max( FirstVNF_CPU,Max( FirstVNF_Mem,CRS ) ),FirstVNF_CPU ),CRS ) ) / ( ( ( ARS / MRS ) + Min( FirstVNF_CPU ,( FirstVNF_Mem_Server - CRS ) ) ) * Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) * RCSe ) * ( MLU * Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( ( ( DDR - PN ) * DDR ) - ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) / ( ( RRS + DDR ) + ( RRS / FirstVNF_Mem ) ) ) + ( ( Const - PN ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( Const + PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU + ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),Min( CS ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ARS ) + ( Max( FirstVNF_RAM_Server,( FirstVNF_RAM / ( DDR / ( ( Const - ACS ) / FirstVNF_Mem_Server ) ) ) ) - CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( RCSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( MUR * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( RMSe - RMSe ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - BR ) + Max( FirstVNF_CPU,( Const * Min( ( AMS + FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( CRS / Min( Const ,MRS ) ) ) - ( AMS - FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( DS - ( Max( MUR,( ( MUM / CS ) + MUM ) ) * Min( DS ,MLU ) ) ) ) ) + ( CS / DS ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + Min( ( MUR / DS ) ,RRSe ) ),MUR ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) + DDR ) + ( PN * FirstVNF_RAM_Server ) ) ) + ( ( CRS * ( Min( AMS ,Min( FirstVNF_RAM ,RRS ) ) - CRS ) ) / CRS ) ) )", "choosing": "( ( Min( Max( ( MLU + MUR ),RRSe ) ,RRSe ) * Max( MUM,( ( ( RCSe * ( MLU / Min( DS ,RRSe ) ) ) * Min( MLU ,DS ) ) - DS ) ) ) + ( ( MLU - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10285264793729243}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / ( FirstVNF_Mem * RRS ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - ( DS * CS ) ) ) * ( Max( MLU,MUC ) + ( Max( MLU,Max( Max( ( MUR - RMSe ),CS ),MUR ) ) + MUC ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( BR / FirstVNF_CPU ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ( Max( BR,DDR ) * Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( Min( Min( Max( ( RCSe * MUM ),( MUR * DS ) ) ,RCSe ) ,( MLU - RCSe ) ) + ( MUM - Max( ( Min( MUM ,( ( RMSe - Min( MUR ,RMSe ) ) * CS ) ) / MLU ),MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,ACS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10285264793729243}, {"determining": "( ( ( ARS * ( ( FirstVNF_Mem * PN ) - ( MDR * ARS ) ) ) - Const ) - ( Const - MDR ) )", "choosing": "( ( Min( MUM ,( RMSe + MUC ) ) * ( ( ( RRSe - MLU ) * RRSe ) + RCSe ) ) + Min( MUR ,RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.04109253149856394}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( Min( MDR ,AMS ) - ( BR / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - ( RCSe - RRSe ) ) + Max( ( RMSe - ( Max( RRSe,RRSe ) / ( CS - MUC ) ) ),MLU ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MLU - Max( MLU,MLU ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.9914346895074947, "obj2": 0.003766036430200043}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( CS,MUC ) * ( MLU - ( ( RCSe * RRSe ) - MUR ) ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( Const + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS * ( Const + FirstVNF_RAM_Server ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server - ( RRS / ACS ) ) ) - ( MDR - AMS ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * ( Max( Max( AMS,FirstVNF_RAM ),( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * CRS ) ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( MRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( PN / Max( ( FirstVNF_RAM * ( Min( PN ,ACS ) + Min( PN ,FirstVNF_RAM ) ) ),Min( AMS ,( ARS * DDR ) ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( RCSe * RCSe ) / ( RRSe / CS ) ) / RRSe ) - DS ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RRSe ) ) - ( RCSe / ( RMSe + RRSe ) ) ) ) / RCSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18194290558368115}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( ( Const - ( FirstVNF_RAM * ( FirstVNF_Mem_Server * AMS ) ) ) / CRS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( DDR - ( FirstVNF_RAM_Server - ARS ) ) ) ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ACS ) / CRS ) ) - ( ( PN + ARS ) - MDR ) )", "choosing": "( ( MUR / RMSe ) - Max( MUC,MLU ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( Max( Min( FirstVNF_RAM ,( FirstVNF_RAM * FirstVNF_CPU ) ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( Max( ( RRSe / CS ),( Min( MUC ,MUR ) / ( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ) + CS ) + ( MUC * ( ( RCSe + DS ) / DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.011511027182639964}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( FirstVNF_CPU * ( ( Min( ( Max( FirstVNF_CPU,BR ) * FirstVNF_CPU ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MUC / ( MLU / CS ) ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( Const - MRS ) * ( Max( Max( FirstVNF_RAM,AMS ),ARS ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( RRSe + CS ) + ( MUC * ( ( DS + MUM ) / DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019191450661013527}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MUM ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.024018699321358732}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU - ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( ( MUC * CS ) + MUM ) - ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) ) * RRSe ) * DS ) )", "obj1": 0.9014989293361885, "obj2": 0.04947068955109358}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( CS + RMSe ) + ( ( ( ( RRSe - MUM ) * RMSe ) + ( CS - Max( CS,( ( ( MUR * RRSe ) * MUR ) / Min( MUM ,MLU ) ) ) ) ) / DS ) )", "obj1": 0.8993576017130621, "obj2": 0.05027120538929271}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - FirstVNF_Mem ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / Min( ( RRS + Const ) ,ACS ) ) ) )", "choosing": "( ( Max( RRSe,( MUR - Min( RRSe ,DS ) ) ) * Max( MUM,( ( ( RCSe * ( RMSe / Min( RRSe ,RCSe ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUM - MUC ) + ( MLU - DS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( ( RRS - FirstVNF_CPU_Server ) + PN ) + DDR ) + ( FirstVNF_CPU_Server * DDR ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( MUR ,RMSe ) ,( MLU - ( ( Min( ( RMSe / ( MUC / RMSe ) ) ,Min( MUM ,RRSe ) ) * ( MUM * ( RMSe + RRSe ) ) ) / ( ( MUM + MUM ) + MUR ) ) ) ) + DS )", "obj1": 0.6702355460385439, "obj2": 0.18925915522388256}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( Max( AMS,Const ),RRS ) ) ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / CRS ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( FirstVNF_CPU * ( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) / ( ARS + ( ( PN / CRS ) - ( AMS - MRS ) ) ) ) / ( ARS * PN ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( ( ( RCSe / Min( CS ,CS ) ) + MUR ) - ( MUR - RRSe ) ) / ( RRSe * MUC ) ) ) ) + DS )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUM - CS ) * RRSe ) * DS ) )", "obj1": 0.9014989293361885, "obj2": 0.04947068955109358}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( DDR / MRS ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * ( FirstVNF_RAM_Server * Const ) ) ) ) ) + ( CRS / ( Const - MRS ) ) ) )", "choosing": "( ( Max( RRSe,( MUR + Min( RRSe ,DS ) ) ) * Max( MUM,( ( ( ( MUR + MLU ) - RCSe ) * RRSe ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( MDR,Const ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( DS / ( ( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - RRSe ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.8993576017130621, "obj2": 0.05027120538929271}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( Min( FirstVNF_RAM ,Max( AMS,MDR ) ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( MUR * ( MUC + ( RCSe * RRSe ) ) ) * DS ) )", "obj1": 0.9635974304068522, "obj2": 0.019191450661013527}, {"determining": "( ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_Mem * FirstVNF_RAM ) ) ),ARS ) ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) + CS ) + ( MUC * ( ( ( ( ( MLU * DS ) / MUM ) * DS ) + MUM ) / DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( ( Max( RRS,Const ) - FirstVNF_Mem ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + Min( ARS ,Const ) ) + ( FirstVNF_Mem_Server / AMS ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) * ( ( RMSe + Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - ( Max( MLU,RRSe ) * RRSe ) ) ) ) * ( Max( RCSe,Max( MUC,Min( RRSe ,MLU ) ) ) + ( ( MUM + Min( Max( MLU,MUR ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( ( ( MDR - AMS ) + ( CRS - Const ) ) - ( Max( RRS,Const ) - BR ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU_Server - Max( ARS,( Min( DDR ,Max( ( ( FirstVNF_Mem - AMS ) / Min( PN ,Const ) ),( ( RRS - FirstVNF_CPU_Server ) * BR ) ) ) + Max( AMS,RRS ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - MUR ) ,( Max( RRSe,MUC ) + Min( MLU ,( ( RRSe - ( ( MUC - Max( RCSe,MUM ) ) - MUM ) ) - ( MUC * ( ( Max( RRSe,MUM ) - RRSe ) / Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( Max( MUR,RRSe ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08732564412547753}, {"determining": "( ( ( ( FirstVNF_Mem / MRS ) + CRS ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU - ( MUC - Max( ( MUR / Max( ( MUC * DS ),RMSe ) ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( Min( RCSe ,CS ) + CS ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.140952569576909}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( MUC * DS ) - ( ( MUR / DS ) + MUM ) ) ) * RRSe ) * DS ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ACS * ( CRS / BR ) ) / Max( ( MRS * AMS ),Const ) )", "choosing": "( ( ( MUR + ( RCSe / RRSe ) ) - ( MUR - RRSe ) ) + Max( ( RMSe * DS ),( ( MLU / Max( ( MUC * MUR ),Min( CS ,( ( RMSe * MUM ) / CS ) ) ) ) + Min( ( ( Min( RMSe ,( MLU * MLU ) ) + ( MUR * RRSe ) ) + MUM ) ,MUR ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.728051391862955, "obj2": 0.1368066517973203}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Min( MRS ,RRS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( ARS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14301822456575125}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "Min( Max( Min( CS ,RRSe ),( Min( MUR ,( ( ( ( RMSe * RMSe ) + Min( DS ,MLU ) ) + Max( RCSe,DS ) ) + CS ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14581980191124583}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * Min( Min( Max( FirstVNF_RAM,AMS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) * ( Min( Max( MRS,( MDR + FirstVNF_CPU ) ) ,RRS ) + ( ( AMS - ( ACS * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) - ARS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUR,( MUM - Max( Min( ( ( MUM + RMSe ) - MUC ) ,( CS + Max( MUC,MLU ) ) ),MUM ) ) ) ) + ( ( MLU - ( RCSe / Min( RCSe ,( ( Max( RRSe,MUM ) / RMSe ) / RCSe ) ) ) ) + ( ( ( MLU + Min( DS ,RRSe ) ) * ( Min( ( CS + MUM ) ,( MUC - Min( CS ,RRSe ) ) ) + CS ) ) * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08839181479307313}, {"determining": "( ( ( ( CRS - MRS ) + ( ( RRS - DDR ) + ( Max( PN,ACS ) / ( Const / ( RRS - BR ) ) ) ) ) + ( ( MRS - Const ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MLU,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( RMSe + Min( ( RMSe + Max( Max( MUM,MLU ),MUC ) ) ,MUM ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13898933613153078}, {"determining": "Max( ( ( ( ( MRS - CRS ) - ( ( MRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * ( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * Max( MUM,CS ) ) + ( RRSe + CS ) ) ) + Min( DS ,CS ) )", "obj1": 0.7173447537473233, "obj2": 0.14283412189047495}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( CS,MUC ) * ( MLU - ( ( RCSe * RRSe ) - MUR ) ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13091155234651006}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + ( ( Const - MRS ) / CRS ) ) ) ) )", "choosing": "( ( RMSe - ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( ( ( Max( MDR,AMS ) + ( ( FirstVNF_RAM - ( AMS / ARS ) ) - Const ) ) - ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) - ( DDR / FirstVNF_RAM_Server ) ) / ( Const + AMS ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( Min( MLU ,DS ) + Max( Min( MLU ,( MUR / ( ( DS - Max( RRSe,RRSe ) ) * MUC ) ) ),RCSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( Const + PN ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MLU ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * MUM ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,Min( ( ACS + FirstVNF_RAM ) ,CRS ) ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / ( RRS - FirstVNF_CPU_Server ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( RRSe / ( MUM - RMSe ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) + DS )", "obj1": 0.6702355460385439, "obj2": 0.18925915522388256}, {"determining": "( FirstVNF_CPU * ( ( ( FirstVNF_RAM - ( Min( BR ,DDR ) + ( AMS / ACS ) ) ) / ( FirstVNF_RAM_Server - ( ACS + ARS ) ) ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( RMSe * DS ) ) / ( RRSe * MUC ) ) ) ) + MLU )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - FirstVNF_Mem_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13445466531935846}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / AMS ) ) ) + ( Max( ( ( RRS + FirstVNF_RAM ) / ARS ),ARS ) / ( Const - FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server - PN ) - MDR ) )", "choosing": "( Max( ( ( RCSe - MUR ) - CS ),RCSe ) + Min( ( MLU - MUC ) ,Max( MUR,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ( Min( ( AMS - CRS ) ,( ( ( ( AMS * PN ) / Min( DDR ,RRS ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( MUR + ( RRSe * RCSe ) ),( Max( RMSe,( MUR / ( MUM / ( RMSe + MLU ) ) ) ) - RMSe ) ) ,( ( MLU + Max( ( MUC - ( RRSe * RRSe ) ),MUM ) ) + Max( CS,MUM ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13168202072287624}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( Min( PN ,DDR ) / CRS ) * ( ( Min( Min( FirstVNF_CPU_Server ,CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( ( RMSe * Min( MUC ,RMSe ) ),MUR ) + ( Max( Min( RMSe ,( MLU + ( Max( ( MLU - MLU ),( MUM / MUM ) ) / ( ( DS * RCSe ) / RRSe ) ) ) ),( RCSe / MLU ) ) / CS ) )", "obj1": 0.8244111349036403, "obj2": 0.08732564412547753}, {"determining": "( ( ( DDR * RRS ) * ( Max( Max( Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ),AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( FirstVNF_CPU_Server * Const ) )", "choosing": "Min( Max( ( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ),( MUR + ( RRSe * RCSe ) ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( Max( Max( Max( ( MUM - DS ),RCSe ),( MUR + Min( DS ,MUR ) ) ),( ( MUR + DS ) / DS ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.721627408993576, "obj2": 0.14001096921123768}, {"determining": "( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM + ( ARS / ARS ) ) + ( FirstVNF_CPU / FirstVNF_CPU ) ) ) + ( ( MRS - Const ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( DDR + ( PN + PN ) ) * ( ( ( Const - MRS ) / CRS ) + ( Min( ARS ,( PN * ( RRS * ARS ) ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( CS + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) ) ,( Min( Max( CS,( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( Max( DS,MUC ) + ( CS * RMSe ) ) / DS ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.721627408993576, "obj2": 0.14001096921123768}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13445466531935846}, {"determining": "( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) * ( ( Min( Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( RRS + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RCSe * ( Min( ( MLU / DS ) ,Min( ( RCSe * ( CS * RCSe ) ) ,( ( MUR * RRSe ) * ( DS * RRSe ) ) ) ) / Min( MUR ,MUM ) ) ) - DS ) + ( MUC * ( CS / RMSe ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13168202072287624}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "Min( Max( Min( CS ,RRSe ),( Min( MUR ,( ( ( ( RMSe * RMSe ) + Min( DS ,MLU ) ) + Max( RCSe,DS ) ) + CS ) ) * RRSe ) ) ,DS )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( FirstVNF_RAM - ( AMS / ARS ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( Max( ARS,( Min( FirstVNF_RAM ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ,FirstVNF_CPU ) ,( Const * Max( Min( PN ,AMS ),Min( MDR ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,( ACS + RRS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( Max( RMSe,Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - CS ) ) * ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),ARS ) / ( MRS * Const ) ) )", "choosing": "( ( Max( ( ( RMSe / Min( ( RMSe - CS ) ,Min( MUR ,( MUC / MLU ) ) ) ) + RMSe ),CS ) * ( RRSe - RRSe ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MRS ) - ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( CS - ( DS + Min( Max( Max( RRSe,( MUR - Min( RRSe ,DS ) ) ),CS ) ,RCSe ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Const - Min( ( ( PN + RRS ) / Min( ACS ,Const ) ) ,DDR ) ) * ( ( CRS - RRS ) - MDR ) ),( Max( ( Max( ( DDR / BR ),Max( FirstVNF_RAM,DDR ) ) * BR ),FirstVNF_CPU_Server ) * Min( ( BR / Const ) ,MDR ) ) ) * Min( MRS ,MDR ) ) - Min( ( PN / AMS ) ,( Const + Min( ( FirstVNF_RAM + MRS ) ,DDR ) ) ) )", "choosing": "Max( ( ( Min( MUM ,Min( ( Min( MUR ,RRSe ) + ( DS - MUC ) ) ,DS ) ) - RMSe ) * ( RCSe / ( Min( RCSe ,RRSe ) / DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,PN ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,Min( Max( ( ARS * PN ),AMS ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( MUR + ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_RAM,( ( ACS + Min( ARS ,CRS ) ) + MRS ) ) ,( MDR * DDR ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( Max( FirstVNF_CPU,BR ) * FirstVNF_CPU ) )", "choosing": "( ( Min( MUM ,RRSe ) - Max( RRSe,MLU ) ) - ( MUC / ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ( FirstVNF_RAM / MRS ) - CRS ) ) / ( ( RRS * FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * MUC ) * ( Max( DS,( ( CS / ( DS + MLU ) ) + ( ( RCSe * ( Max( MUC,MUR ) * ( MUC / RCSe ) ) ) / RRSe ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,CRS ) - ( ( Max( RRS,( ( FirstVNF_Mem - MDR ) / ( RRS - AMS ) ) ) * ( FirstVNF_RAM + RRS ) ) - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS * MLU ) ,Max( ( ( RRSe + MUC ) * ( ( RRSe + DS ) - RRSe ) ),Max( MLU,Max( ( ( ( DS / MUM ) + MUM ) + Max( MUM,( RMSe / RMSe ) ) ),( ( CS + CS ) * MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) ) * ( CRS + Min( Const ,FirstVNF_RAM_Server ) ) ) * Max( MRS,( BR - RRS ) ) )", "choosing": "Min( ( ( Min( MUR ,( CS * MLU ) ) * RRSe ) + Min( CS ,RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( BR + PN ) ) - ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( Min( Min( Const ,MDR ) ,FirstVNF_RAM ) - FirstVNF_CPU_Server ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU / ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),( DS - Min( CS ,Max( ( DS - MUC ),RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Min( MRS ,( DDR / AMS ) ) ) - ( FirstVNF_RAM_Server / MDR ) )", "choosing": "( Max( ( Min( RRSe ,RRSe ) + ( MUR + MUR ) ),MUM ) + ( ( RRSe / ( DS * MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( AMS,Min( RRS ,Max( FirstVNF_RAM,AMS ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Max( PN,ACS ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ),( ( ( MUC * MLU ) + ( DS - MUM ) ) + Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM,Const ) / BR ) - Min( FirstVNF_Mem_Server ,CRS ) )", "choosing": "Max( ( ( ( Max( ( RMSe - RRSe ),( MLU * MLU ) ) + MLU ) - Min( MUC ,( RMSe * Min( ( MLU * MUC ) ,DS ) ) ) ) * ( RCSe / ( Min( Max( RCSe,MUM ) ,RRSe ) - DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,( DDR / ACS ) ) ) ) * ( Min( ( FirstVNF_Mem_Server + FirstVNF_RAM ) ,CRS ) + FirstVNF_CPU ) ),Max( ARS,( ACS + MDR ) ) ) - ( FirstVNF_RAM + AMS ) )", "choosing": "( Max( ( Min( MUR ,DS ) / ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( Max( DS,MUM ) + Min( CS ,MUC ) ) ) / ( RMSe + ( ( CS + DS ) - ( MUC + MLU ) ) ) ) + MUM ) ),MUM ) + ( MLU / ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / Const ) - Max( Max( ( ( BR / AMS ) / FirstVNF_CPU ),Const ),RRS ) )", "choosing": "( ( Min( DS ,Max( RRSe,RCSe ) ) - ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) ) - Max( ( Min( MUR ,DS ) * DS ),Max( ( ( Min( ( ( RMSe - RMSe ) / RRSe ) ,( RCSe + Min( RRSe ,RCSe ) ) ) / Max( RRSe,DS ) ) / ( RRSe * MUC ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( ( ( DDR - PN ) * DDR ) - ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) / ( ( RRS + DDR ) + ( RRS / FirstVNF_Mem ) ) ) + ( ( Const - PN ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - BR ) ) - Min( Max( FirstVNF_CPU,( Const * Min( DDR ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + CS ) + ( MUC * Max( ( DS * ( ( CS / ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) / ( ( MLU - ( MUC + RRSe ) ) + ( RMSe / ( RCSe / DS ) ) ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( Const + PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU + ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),Min( CS ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - BR ) + Max( FirstVNF_CPU,( Const * Min( ( AMS + FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( CRS / Min( Const ,MRS ) ) ) - ( AMS - FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( DS - ( Max( MUR,( ( MUM / CS ) + MUM ) ) * Min( DS ,MLU ) ) ) ) ) + ( CS / DS ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + Min( ( MUR / DS ) ,RRSe ) ),MUR ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( Min( MDR ,AMS ) - ( BR / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - ( RCSe - RRSe ) ) + Max( ( RMSe - ( Max( RRSe,RRSe ) / ( CS - MUC ) ) ),MLU ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( Min( RRSe ,RRSe ) + Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12457718148786782}, {"determining": "( ( ( ARS * ( ( FirstVNF_Mem * PN ) - ( MDR * ARS ) ) ) - Const ) - ( Const - MDR ) )", "choosing": "( ( Min( MUM ,( RMSe + MUC ) ) * ( ( ( RRSe - MLU ) * RRSe ) + RCSe ) ) + Min( MUR ,RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.04109253149856394}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) + DDR ) + ( PN * FirstVNF_RAM_Server ) ) ) + ( ( CRS * ( Min( AMS ,Min( FirstVNF_RAM ,RRS ) ) - CRS ) ) / CRS ) ) )", "choosing": "( ( Min( Max( ( MLU + MUR ),RRSe ) ,RRSe ) * Max( MUM,( ( ( RCSe * ( MLU / Min( DS ,RRSe ) ) ) * Min( MLU ,DS ) ) - DS ) ) ) + ( ( MLU - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10285264793729243}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12457718148786782}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( BR / FirstVNF_CPU ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ( Max( BR,DDR ) * Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( Min( Min( Max( ( RCSe * MUM ),( MUR * DS ) ) ,RCSe ) ,( MLU - RCSe ) ) + ( MUM - Max( ( Min( MUM ,( ( RMSe - Min( MUR ,RMSe ) ) * CS ) ) / MLU ),MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,ACS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10285264793729243}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server - ( RRS / ACS ) ) ) - ( MDR - AMS ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( CS,MUC ) * ( MLU - ( ( RCSe * RRSe ) - MUR ) ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS * ( Const + FirstVNF_RAM_Server ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.8950749464668094, "obj2": 0.052513671463991995}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( Const + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / CRS ) ) ) + ( ( Const - ( Const * MDR ) ) / CRS ) ) - ( MDR - ( ( MDR - ( PN / FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,MUM ) - ( ( MUR * ( ( ( ( DS + RCSe ) * RCSe ) * RMSe ) - ( RCSe * RRSe ) ) ) * DS ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS * CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / Max( FirstVNF_CPU_Server,AMS ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( RMSe,Max( RCSe,MUM ) ) ) ,( Max( CS,MUR ) - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( MUC * RRSe ) ) ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( Const - MRS ) * ( Max( Max( FirstVNF_RAM,AMS ),ARS ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.8201284796573876, "obj2": 0.08955805207305319}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ACS * ( MDR + FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( ( ( FirstVNF_Mem * Const ) - FirstVNF_RAM ),Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,( CS * ( MUC * MUC ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005212088447184323}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( RRSe + CS ) + ( MUC * ( ( DS + MUM ) / DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019191450661013527}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MLU - Max( MLU,MLU ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.9914346895074947, "obj2": 0.003766036430200043}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU - ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC + ( ( ( MUC * CS ) + MUM ) - ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) ) * RRSe ) * DS ) )", "obj1": 0.9014989293361885, "obj2": 0.04947068955109358}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * ( Max( Max( AMS,FirstVNF_RAM ),( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * CRS ) ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( MRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( PN / Max( ( FirstVNF_RAM * ( Min( PN ,ACS ) + Min( PN ,FirstVNF_RAM ) ) ),Min( AMS ,( ARS * DDR ) ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( RCSe * RCSe ) / ( RRSe / CS ) ) / RRSe ) - DS ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RRSe ) ) - ( RCSe / ( RMSe + RRSe ) ) ) ) / RCSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18194290558368115}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) + ( ( Const - MRS ) / CRS ) ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( MLU - DS ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6723768736616702, "obj2": 0.1862464360446244}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MUM ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.024018699321358732}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) * ( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem_Server / ( PN - Max( AMS,FirstVNF_CPU_Server ) ) ) ) ) / ( ARS * PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - ( ( ( MUR + ( RCSe / RRSe ) ) - ( Max( RRSe,CS ) - RRSe ) ) / ( RRSe * ( DS + MUR ) ) ) ) ) + DS )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU_Server ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) - ( ( ( MUM - CS ) * RRSe ) * DS ) )", "obj1": 0.9014989293361885, "obj2": 0.04947068955109358}, {"determining": "( ( ( ( Max( MDR,( ACS * ( FirstVNF_RAM + DDR ) ) ) + ( CRS - Const ) ) - Min( Max( ACS,Const ) ,MRS ) ) - ( Max( ( FirstVNF_RAM * AMS ),( BR * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - ( BR / DDR ) ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MLU ) ) - ( MUR - RRSe ) ) + Max( CS,( Min( RCSe ,MUR ) + ( ( ( MUM + MUR ) / Max( DS,DS ) ) + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + ( ( Const - MRS ) / CRS ) ) ) ) )", "choosing": "( ( RMSe - ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019191450661013527}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / ( FirstVNF_Mem * RRS ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - ( DS * CS ) ) ) * ( Max( MLU,MUC ) + ( Max( MLU,Max( Max( ( MUR - RMSe ),CS ),MUR ) ) + MUC ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,Min( ( ACS + FirstVNF_RAM ) ,CRS ) ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / FirstVNF_Mem_Server ) ) - ( ( ( PN / ( RRS - FirstVNF_CPU_Server ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( RRSe / ( MUM - RMSe ) ) ) / RRSe ) + MUM ) + DS )", "obj1": 0.6702355460385439, "obj2": 0.18809343937356365}, {"determining": "( ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_Mem * FirstVNF_RAM ) ) ),ARS ) ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) + CS ) + ( MUC * ( ( ( ( ( MLU * DS ) / MUM ) * DS ) + MUM ) / DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,Min( MRS ,( PN * Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( Max( MUR,RRSe ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08732564412547753}, {"determining": "( ( ( ( FirstVNF_Mem / MRS ) + CRS ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU - ( MUC - Max( ( MUR / Max( ( MUC * DS ),RMSe ) ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( Min( RCSe ,CS ) + CS ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.140952569576909}, {"determining": "( Max( Max( ( FirstVNF_RAM - ( ( AMS * ( Const + PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MLU - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( ( Const - ( FirstVNF_RAM * ( FirstVNF_Mem_Server * AMS ) ) ) / CRS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( DDR - ( FirstVNF_RAM_Server - ARS ) ) ) ) + ( ( Max( FirstVNF_RAM,FirstVNF_Mem ) / ACS ) / CRS ) ) - ( ( PN + ARS ) - MDR ) )", "choosing": "( ( MUR / RMSe ) - Max( MUC,MLU ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( FirstVNF_CPU * ( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) / ( ARS + ( ( PN / CRS ) - ( AMS - MRS ) ) ) ) / ( ARS * PN ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( ( ( RCSe / Min( CS ,CS ) ) + MUR ) - ( MUR - RRSe ) ) / ( RRSe * MUC ) ) ) ) + DS )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - BR ) ) - Min( ( DDR / FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( MUR * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( CS / DS ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.728051391862955, "obj2": 0.1368066517973203}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Min( MRS ,RRS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( ARS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14301822456575125}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( MRS * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Min( MUM ,( CS * CS ) ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14568906397361506}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( DDR / MRS ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * ( FirstVNF_RAM_Server * Const ) ) ) ) ) + ( CRS / ( Const - MRS ) ) ) )", "choosing": "( ( Max( RRSe,( MUR + Min( RRSe ,DS ) ) ) * Max( MUM,( ( ( ( MUR + MLU ) - RCSe ) * RRSe ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * Min( Min( Max( FirstVNF_RAM,AMS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) * ( Min( Max( MRS,( MDR + FirstVNF_CPU ) ) ,RRS ) + ( ( AMS - ( ACS * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) - ARS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUR,( MUM - Max( Min( ( ( MUM + RMSe ) - MUC ) ,( CS + Max( MUC,MLU ) ) ),MUM ) ) ) ) + ( ( MLU - ( RCSe / Min( RCSe ,( ( Max( RRSe,MUM ) / RMSe ) / RCSe ) ) ) ) + ( ( ( MLU + Min( DS ,RRSe ) ) * ( Min( ( CS + MUM ) ,( MUC - Min( CS ,RRSe ) ) ) + CS ) ) * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08839181479307313}, {"determining": "( ( ( ( CRS - MRS ) + ( ( RRS - DDR ) + ( Max( PN,ACS ) / ( Const / ( RRS - BR ) ) ) ) ) + ( ( MRS - Const ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MLU,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( RMSe + Min( ( RMSe + Max( Max( MUM,MLU ),MUC ) ) ,MUM ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13898933613153078}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( Max( AMS,Const ),RRS ) ) ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / CRS ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( ( Max( RRS,Const ) - FirstVNF_Mem ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + Min( ARS ,Const ) ) + ( FirstVNF_Mem_Server / AMS ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) * ( ( RMSe + Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - ( Max( MLU,RRSe ) * RRSe ) ) ) ) * ( Max( RCSe,Max( MUC,Min( RRSe ,MLU ) ) ) + ( ( MUM + Min( Max( MLU,MUR ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - Min( ( RRS + DDR ) ,Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( MUR * CS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( MUC,RRSe ) + ( RRSe + CS ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( ( ( MDR - AMS ) + ( CRS - Const ) ) - ( Max( RRS,Const ) - BR ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU_Server - Max( ARS,( Min( DDR ,Max( ( ( FirstVNF_Mem - AMS ) / Min( PN ,Const ) ),( ( RRS - FirstVNF_CPU_Server ) * BR ) ) ) + Max( AMS,RRS ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - MUR ) ,( Max( RRSe,MUC ) + Min( MLU ,( ( RRSe - ( ( MUC - Max( RCSe,MUM ) ) - MUM ) ) - ( MUC * ( ( Max( RRSe,MUM ) - RRSe ) / Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( CS,MUC ) * ( MLU - ( ( RCSe * RRSe ) - MUR ) ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13091155234651006}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - FirstVNF_Mem ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / Min( ( RRS + Const ) ,ACS ) ) ) )", "choosing": "( ( Max( RRSe,( MUR - Min( RRSe ,DS ) ) ) * Max( MUM,( ( ( RCSe * ( RMSe / Min( RRSe ,RCSe ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUM - MUC ) + ( MLU - DS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( Const + PN ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MLU ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * MUM ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( ( Max( MDR,Const ) / FirstVNF_Mem ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) )", "obj1": 0.8993576017130621, "obj2": 0.05027120538929271}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( CS + RMSe ) + ( ( ( ( RRSe - MUM ) * RMSe ) + ( CS - Max( CS,( ( ( MUR * RRSe ) * MUR ) / Min( MUM ,MLU ) ) ) ) ) / DS ) )", "obj1": 0.8993576017130621, "obj2": 0.05027120538929271}, {"determining": "( FirstVNF_CPU * ( ( Min( ( Max( FirstVNF_CPU,BR ) * FirstVNF_CPU ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MUC / ( MLU / CS ) ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "Max( ( ( ( ( MRS - CRS ) - ( ( MRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * ( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * Max( MUM,CS ) ) + ( RRSe + CS ) ) ) + Min( DS ,CS ) )", "obj1": 0.7173447537473233, "obj2": 0.14283412189047495}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( FirstVNF_RAM - ( AMS / ARS ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - FirstVNF_Mem_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13445466531935846}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS / ( ( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) / ( MUR + ( RMSe * RCSe ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - RRSe ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM + ( ARS / ARS ) ) + ( FirstVNF_CPU / FirstVNF_CPU ) ) ) + ( ( MRS - Const ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13168202072287624}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( ( Const - MRS ) * ( Max( Max( ( PN - MDR ),AMS ),ARS ) + FirstVNF_Mem ) ) * ( ( Min( Min( AMS ,CRS ) ,( ( DDR * FirstVNF_Mem_Server ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ) + Min( MUM ,Max( ( Min( MUM ,( CS * CS ) ) / MLU ),MUM ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08732564412547753}, {"determining": "( ( ( DDR * RRS ) * ( Max( Max( Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ),AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( FirstVNF_CPU_Server * Const ) )", "choosing": "Min( Max( ( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ),( MUR + ( RRSe * RCSe ) ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( Max( Max( Max( ( MUM - DS ),RCSe ),( MUR + Min( DS ,MUR ) ) ),( ( MUR + DS ) / DS ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.721627408993576, "obj2": 0.14001096921123768}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / AMS ) ) ) + ( Max( ( ( RRS + FirstVNF_RAM ) / ARS ),ARS ) / ( Const - FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server - PN ) - MDR ) )", "choosing": "( Max( ( ( RCSe - MUR ) - CS ),RCSe ) + Min( ( MLU - MUC ) ,Max( MUR,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( DDR + ( PN + PN ) ) * ( ( ( Const - MRS ) / CRS ) + ( Min( ARS ,( PN * ( RRS * ARS ) ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( CS + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) ) ,( Min( Max( CS,( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( Max( DS,MUC ) + ( CS * RMSe ) ) / DS ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.721627408993576, "obj2": 0.14001096921123768}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13445466531935846}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.13525191807009973}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ( Min( ( AMS - CRS ) ,( ( ( ( AMS * PN ) / Min( DDR ,RRS ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( MUR + ( RRSe * RCSe ) ),( Max( RMSe,( MUR / ( MUM / ( RMSe + MLU ) ) ) ) - RMSe ) ) ,( ( MLU + Max( ( MUC - ( RRSe * RRSe ) ),MUM ) ) + Max( CS,MUM ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13168202072287624}, {"determining": "( ( ( ( Max( MDR,AMS ) + ( ( FirstVNF_RAM - ( AMS / ARS ) ) - Const ) ) - ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ) - ( DDR / FirstVNF_RAM_Server ) ) / ( Const + AMS ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( Min( MLU ,DS ) + Max( Min( MLU ,( MUR / ( ( DS - Max( RRSe,RRSe ) ) * MUC ) ) ),RCSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "Min( Max( Min( CS ,RRSe ),( Min( MUR ,( ( ( ( RMSe * RMSe ) + Min( DS ,MLU ) ) + Max( RCSe,DS ) ) + CS ) ) * RRSe ) ) ,DS )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "Max( ( ( ( ( MRS - CRS ) - ( ( MRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Max( ( RMSe * Min( MUC ,RMSe ) ),MUR ) + Min( MUM ,Max( ( Min( MUM ,( CS * CS ) ) / MLU ),MUM ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14283412189047495}, {"determining": "( ( ( RRS - ARS ) + ( Max( FirstVNF_RAM_Server,( FirstVNF_RAM / ( DDR / ( ( Const - ACS ) / FirstVNF_Mem_Server ) ) ) ) - CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( RCSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( MUR * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( RMSe - RMSe ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( Max( ARS,( Min( FirstVNF_RAM ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ,FirstVNF_CPU ) ,( Const * Max( Min( PN ,AMS ),Min( MDR ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,( ACS + RRS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( Max( RMSe,Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - CS ) ) * ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),ARS ) / ( MRS * Const ) ) )", "choosing": "( ( Max( ( ( RMSe / Min( ( RMSe - CS ) ,Min( MUR ,( MUC / MLU ) ) ) ) + RMSe ),CS ) * ( RRSe - RRSe ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,MRS ) - ( Const * FirstVNF_CPU_Server ) )", "choosing": "( ( CS - ( DS + Min( Max( Max( RRSe,( MUR - Min( RRSe ,DS ) ) ),CS ) ,RCSe ) ) ) + ( MUC / ( ( ( MLU * MUC ) - Max( MUR,CS ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ( Const - Min( ( ( PN + RRS ) / Min( ACS ,Const ) ) ,DDR ) ) * ( ( CRS - RRS ) - MDR ) ),( Max( ( Max( ( DDR / BR ),Max( FirstVNF_RAM,DDR ) ) * BR ),FirstVNF_CPU_Server ) * Min( ( BR / Const ) ,MDR ) ) ) * Min( MRS ,MDR ) ) - Min( ( PN / AMS ) ,( Const + Min( ( FirstVNF_RAM + MRS ) ,DDR ) ) ) )", "choosing": "Max( ( ( Min( MUM ,Min( ( Min( MUR ,RRSe ) + ( DS - MUC ) ) ,DS ) ) - RMSe ) * ( RCSe / ( Min( RCSe ,RRSe ) / DS ) ) ),( CS + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / Max( ( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const * Max( FirstVNF_RAM_Server,PN ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,Min( Max( ( ARS * PN ),AMS ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) * CRS ) ) ) ) )", "choosing": "( ( RRSe * MUC ) * ( MUR + ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( FirstVNF_RAM,( ( ACS + Min( ARS ,CRS ) ) + MRS ) ) ,( MDR * DDR ) ) - ( CRS * FirstVNF_CPU ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( MUR * CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "( ( ( DDR - PN ) * DDR ) - ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) / ( ( RRS + DDR ) + ( RRS / FirstVNF_Mem ) ) ) + ( ( Const - PN ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( Min( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU * ( MUC - Max( ( MUR / Max( Min( MUC ,RCSe ),MUR ) ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - BR ) ) - Min( Max( FirstVNF_CPU,( Const * Min( DDR ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe + CS ) + ( MUC * Max( ( DS * ( ( CS / ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) / ( ( MLU - ( MUC + RRSe ) ) + ( RMSe / ( RCSe / DS ) ) ) ) ),DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - BR ) + Max( FirstVNF_CPU,( Const * Min( ( AMS + FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( CRS / Min( Const ,MRS ) ) ) - ( AMS - FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( DS - ( Max( MUR,( ( MUM / CS ) + MUM ) ) * Min( DS ,MLU ) ) ) ) ) + ( CS / DS ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( MUR * ( MUC + ( Min( ( RMSe * MUM ) ,MLU ) * RRSe ) ) ) * DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11249422247763662}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( BR / FirstVNF_CPU ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ( Max( BR,DDR ) * Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( Min( Min( Max( ( RCSe * MUM ),( MUR * DS ) ) ,RCSe ) ,( MLU - RCSe ) ) + ( MUM - Max( ( Min( MUM ,( ( RMSe - Min( MUR ,RMSe ) ) * CS ) ) / MLU ),MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( ARS * ( ( FirstVNF_Mem * PN ) - ( MDR * ARS ) ) ) - Const ) - ( Const - MDR ) )", "choosing": "( ( Min( MUM ,( RMSe + MUC ) ) * ( ( ( RRSe - MLU ) * RRSe ) + RCSe ) ) + Min( MUR ,RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.04109253149856394}, {"determining": "( Min( MDR ,AMS ) - ( BR / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - ( RCSe - RRSe ) ) + Max( ( RMSe - ( Max( RRSe,RRSe ) / ( CS - MUC ) ) ),MLU ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( ( MUR * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( BR / DDR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12277437850304601}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + Min( ( MUR / DS ) ,RRSe ) ),MUR ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( ( Max( Max( CS,MUM ),( Min( RCSe ,MUM ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ACS / ARS ) ),BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17537914826532322}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.8950749464668094, "obj2": 0.052513671463991995}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) + DDR ) + ( PN * FirstVNF_RAM_Server ) ) ) + ( ( CRS * ( Min( AMS ,Min( FirstVNF_RAM ,RRS ) ) - CRS ) ) / CRS ) ) )", "choosing": "( ( Min( Max( ( MLU + MUR ),RRSe ) ,RRSe ) * Max( MUM,( ( ( RCSe * ( MLU / Min( DS ,RRSe ) ) ) * Min( MLU ,DS ) ) - DS ) ) ) + ( ( MLU - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10285264793729243}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server - ( RRS / ACS ) ) ) - ( MDR - AMS ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,ACS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10285264793729243}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12779989824598154}, {"determining": "( Min( ( ( MRS * ( PN / Min( RRS ,DDR ) ) ) / FirstVNF_RAM ) ,( AMS - CRS ) ) * ( Max( ACS,MRS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( Min( RCSe ,( MUM + RRSe ) ) ,RRSe ) ,( ( ( MUC / MUC ) - RCSe ) - RCSe ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS * ( Const + FirstVNF_RAM_Server ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( Min( RRSe ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( FirstVNF_Mem_Server - CRS ) ,Max( ( FirstVNF_RAM_Server - MRS ),ACS ) ) ) - ( ( ARS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ACS * Const ) )", "choosing": "( Min( MUM ,Max( ( MUM - DS ),DS ) ) - ( DS * MUC ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "( ( RRSe + CS ) + ( MUC * ( ( DS + MUM ) / DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019191450661013527}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( FirstVNF_RAM,Min( ( FirstVNF_Mem * ( CRS / ( Const + CRS ) ) ) ,( MDR - AMS ) ) ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16785861906234947}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MLU - Max( MLU,MLU ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.9914346895074947, "obj2": 0.003766036430200043}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) + ( ( Const - MRS ) / CRS ) ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( MLU - DS ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6723768736616702, "obj2": 0.1862464360446244}, {"determining": "( ( ( MDR - ACS ) * ( FirstVNF_RAM * BR ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) * ( ( ( Max( ( DDR / AMS ),( AMS - FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( RRSe,( Min( MUR ,Max( DS,Max( Max( MLU,( CS + MUC ) ),RCSe ) ) ) * MUM ) ) + ( ( MUM - DS ) + ( MLU - DS ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08710438393383411}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MUM ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.024018699321358732}, {"determining": "( FirstVNF_CPU * ( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) / ( ARS + ( ( PN / CRS ) - ( AMS - MRS ) ) ) ) / ( ARS * PN ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( ( ( RCSe / Min( CS ,CS ) ) + MUR ) - ( MUR - RRSe ) ) / ( RRSe * MUC ) ) ) ) + DS )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * Min( Min( Max( FirstVNF_RAM,AMS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) * ( Min( Max( MRS,( MDR + FirstVNF_CPU ) ) ,RRS ) + ( ( AMS - ( ACS * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) - ARS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUR,( MUM - Max( Min( ( ( MUM + RMSe ) - MUC ) ,( CS + Max( MUC,MLU ) ) ),MUM ) ) ) ) + ( ( MLU - ( RCSe / Min( RCSe ,( ( Max( RRSe,MUM ) / RMSe ) / RCSe ) ) ) ) + ( ( ( MLU + Min( DS ,RRSe ) ) * ( Min( ( CS + MUM ) ,( MUC - Min( CS ,RRSe ) ) ) + CS ) ) * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08839181479307313}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12457718148786782}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( DDR * FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "( ( CS / RMSe ) + Min( RRSe ,CS ) )", "obj1": 0.7066381156316917, "obj2": 0.14957658243311148}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) * MRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ( Const + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( ACS / MRS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( MUC * ( ( DS / RCSe ) * RMSe ) ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) - Min( FirstVNF_CPU_Server ,( DDR / AMS ) ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MLU,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( RMSe + Min( ( RMSe + Max( Max( MUM,MLU ),MUC ) ) ,MUM ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019191450661013527}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,Min( ( ACS + FirstVNF_RAM ) ,CRS ) ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / FirstVNF_Mem_Server ) ) - ( ( ( PN / ( RRS - FirstVNF_CPU_Server ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( RRSe / ( MUM - RMSe ) ) ) / RRSe ) + MUM ) + DS )", "obj1": 0.6702355460385439, "obj2": 0.18809343937356365}, {"determining": "( ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( Const + FirstVNF_RAM_Server ) ) ),ARS ) ) - ( DDR + FirstVNF_RAM_Server ) ) - Max( ( Min( MDR ,BR ) / AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) + ( MUC * ( DS / ( ( ( RCSe * RCSe ) * DS ) + MUM ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( ( FirstVNF_Mem / MRS ) + CRS ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU - ( MUC - Max( ( MUR / Max( ( MUC * DS ),RMSe ) ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( Min( RCSe ,CS ) + CS ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * ( Max( Max( AMS,FirstVNF_RAM ),( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * CRS ) ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( MRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( PN / Max( ( FirstVNF_RAM * ( Min( PN ,ACS ) + Min( PN ,FirstVNF_RAM ) ) ),Min( AMS ,( ARS * DDR ) ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( RCSe * RCSe ) / ( RRSe / CS ) ) / RRSe ) - DS ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RRSe ) ) - ( RCSe / ( RMSe + RRSe ) ) ) ) / RCSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18194290558368115}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ACS * ( MDR + FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( ( ( FirstVNF_Mem * Const ) - FirstVNF_RAM ),Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,( CS * ( MUC * MUC ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005212088447184323}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.140952569576909}, {"determining": "( ( ( DDR * ( Max( Min( DDR ,BR ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( FirstVNF_Mem + RRS ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( ( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + Max( RMSe,DS ) ) ) ),Min( RRSe ,MLU ) ) + ( DS / MLU ) ) + ( MLU + DS ) ) )", "obj1": 0.728051391862955, "obj2": 0.13598506325869383}, {"determining": "( Min( FirstVNF_Mem_Server ,ARS ) * ( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( ( FirstVNF_RAM + PN ) / ( FirstVNF_Mem_Server / ( PN - Max( AMS,FirstVNF_CPU_Server ) ) ) ) ) / ( ARS * PN ) ) )", "choosing": "( Min( Min( RMSe ,RRSe ) ,( MLU - ( ( ( MUR + ( RCSe / RRSe ) ) - ( Max( RRSe,CS ) - RRSe ) ) / ( RRSe * ( DS + MUR ) ) ) ) ) + DS )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - BR ) ) - Min( ( DDR / FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + ( ( Const - MRS ) / CRS ) ) ) ) )", "choosing": "( ( RMSe - ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Min( MRS ,RRS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( ARS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14301822456575125}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( Max( AMS,Const ),RRS ) ) ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / CRS ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) + ( ( Min( FirstVNF_Mem ,Max( RRS,( BR - FirstVNF_RAM ) ) ) - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Max( Max( Max( ( ( Min( ( MUC - MUC ) ,( RRSe - RCSe ) ) * DS ) / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( CS * DS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( CS - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.1389258224715384}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - ( MRS / ACS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS / ( ( ( ( Min( RMSe ,MUC ) + ( MUR * RRSe ) ) / ( MUR + ( ( RMSe + MUM ) + MUC ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - RRSe ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.7323340471092077, "obj2": 0.13424512984790096}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( DDR / MRS ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * ( FirstVNF_RAM_Server * Const ) ) ) ) ) + ( CRS / ( Const - MRS ) ) ) )", "choosing": "( ( Max( RRSe,( MUR + Min( RRSe ,DS ) ) ) * Max( MUM,( ( ( ( MUR + MLU ) - RCSe ) * RRSe ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - Min( FirstVNF_RAM_Server ,Const ) )", "choosing": "( ( Min( RRSe ,RRSe ) + Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUR,( MUM - Max( Min( ( ( CS + RMSe ) - MUC ) ,( Max( MUC,RCSe ) + CS ) ),MUM ) ) ) ) + ( ( MLU - ( RCSe / Min( RCSe ,( ( Max( RRSe,MUM ) / RMSe ) / RCSe ) ) ) ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005212088447184323}, {"determining": "( ( ( ( Max( RRS,Const ) - FirstVNF_Mem ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + Min( ARS ,Const ) ) + ( FirstVNF_Mem_Server / AMS ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) * ( ( RMSe + Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - ( Max( MLU,RRSe ) * RRSe ) ) ) ) * ( Max( RCSe,Max( MUC,Min( RRSe ,MLU ) ) ) + ( ( MUM + Min( Max( MLU,MUR ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( Max( RRSe,( ( ( Max( RMSe,MUR ) * RRSe ) - ( ( ( CS + MLU ) - MLU ) * RCSe ) ) - Min( RRSe ,DS ) ) ) * Max( MUM,( ( Min( RCSe ,( RMSe / Min( DS ,MUM ) ) ) * Min( MLU ,RMSe ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( ( ( ( ( MDR - AMS ) + ( CRS - Const ) ) - ( Max( RRS,Const ) - BR ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU_Server - Max( ARS,( Min( DDR ,Max( ( ( FirstVNF_Mem - AMS ) / Min( PN ,Const ) ),( ( RRS - FirstVNF_CPU_Server ) * BR ) ) ) + Max( AMS,RRS ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - MUR ) ,( Max( RRSe,MUC ) + Min( MLU ,( ( RRSe - ( ( MUC - Max( RCSe,MUM ) ) - MUM ) ) - ( MUC * ( ( Max( RRSe,MUM ) - RRSe ) / Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12457718148786782}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( CS,MUC ) * ( MLU - ( ( RCSe * RRSe ) - MUR ) ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13091155234651006}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,Max( DDR,( ARS - FirstVNF_Mem_Server ) ) ) ) + FirstVNF_Mem ) ) * ( ( ( ( DDR - ( DDR / FirstVNF_RAM_Server ) ) + Min( FirstVNF_Mem_Server ,RRS ) ) - Min( ( AMS - AMS ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( ( MUR + RMSe ) ,DS ) ) ,( ( ( CS / RCSe ) * ( MLU * ( ( ( MUM - MUR ) - ( CS / CS ) ) * MUC ) ) ) + ( MLU + DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1350894481366565}, {"determining": "( ( ( ( Max( MDR,( ACS * ( FirstVNF_RAM + DDR ) ) ) + ( CRS - Const ) ) - Min( Max( ACS,Const ) ,MRS ) ) - ( Max( ( FirstVNF_RAM * AMS ),( BR * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - ( BR / DDR ) ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MLU ) ) - ( MUR - RRSe ) ) + Max( CS,( Min( RCSe ,MUR ) + ( ( ( MUM + MUR ) / Max( DS,DS ) ) + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - Min( ( RRS + DDR ) ,Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( MUR * CS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( Const + PN ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MLU ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * MUM ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / CRS ) ) ) + ( ( Const - ( Const * MDR ) ) / CRS ) ) - ( MDR - ( ( MDR - ( PN / FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,MUM ) - ( ( MUR * ( ( ( ( DS + RCSe ) * RCSe ) * RMSe ) - ( RCSe * RRSe ) ) ) * DS ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * ( Max( Max( AMS,FirstVNF_RAM ),( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * CRS ) ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( MRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( PN / Max( ( FirstVNF_RAM * ( Min( PN ,ACS ) + Min( PN ,FirstVNF_RAM ) ) ),Min( AMS ,( ARS * DDR ) ) ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( RCSe * RCSe ) / ( RRSe / CS ) ) / RRSe ) - DS ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RRSe ) ) - ( RCSe / ( RMSe + RRSe ) ) ) ) / RCSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18194290558368115}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( DS ,RRSe ) + ( MLU + DS ) ) ) + Min( MUM ,Max( ( Min( MUM ,( CS * CS ) ) / MLU ),MUM ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( Min( Max( FirstVNF_CPU,( Const * Min( DDR ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,MLU ) ) - ( RCSe / ( ( MLU - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS * CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / Max( FirstVNF_CPU_Server,AMS ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( RMSe,Max( RCSe,MUM ) ) ) ,( Max( CS,MUR ) - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( MUC * RRSe ) ) ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( MRS * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( Max( MUR,RRSe ) ,Min( Max( CS,CS ) ,Max( DS,RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14568906397361506}, {"determining": "( Max( Max( ( FirstVNF_RAM - ( ( AMS * ( Const + PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MLU - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "Max( ( ( ( ( MRS - CRS ) - ( ( MRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( DS - RRSe ) * ( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * Max( MUM,CS ) ) + ( RRSe + CS ) ) ) + Min( DS ,CS ) )", "obj1": 0.7173447537473233, "obj2": 0.14283412189047495}, {"determining": "( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM + ( ARS / ARS ) ) + ( FirstVNF_CPU / FirstVNF_CPU ) ) ) + ( ( MRS - Const ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( ARS + AMS ) / ( ACS + ( ( RRS * ARS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RMSe - ( Max( MLU,Min( DS ,RCSe ) ) - Max( RCSe,RMSe ) ) ),Min( DS ,MUM ) ) + ( ( ( ( DS * ( ( ( RMSe / RCSe ) / RCSe ) - DS ) ) * ( ( RRSe - RCSe ) - ( MLU / MLU ) ) ) * ( CS / Max( RRSe,( ( ( RMSe / MLU ) + DS ) - MUR ) ) ) ) + ( MLU - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ( Min( ( AMS - CRS ) ,( ( ( ( AMS * PN ) / Min( DDR ,RRS ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( MUR + ( RRSe * RCSe ) ),( Max( RMSe,( MUR / ( MUM / ( RMSe + MLU ) ) ) ) - RMSe ) ) ,( ( MLU + Max( ( MUC - ( RRSe * RRSe ) ),MUM ) ) + Max( CS,MUM ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13168202072287624}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / AMS ) ) ) + ( Max( ( ( RRS + FirstVNF_RAM ) / ARS ),ARS ) / ( Const - FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server - PN ) - MDR ) )", "choosing": "( Max( ( ( RCSe - MUR ) - CS ),RCSe ) + Min( ( MLU - MUC ) ,Max( MUR,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( ( DDR * RRS ) * ( Max( Max( Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ),AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( FirstVNF_CPU_Server * Const ) )", "choosing": "Min( Max( ( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ),( MUR + ( RRSe * RCSe ) ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( Max( Max( Max( ( MUM - DS ),RCSe ),( MUR + Min( DS ,MUR ) ) ),( ( MUR + DS ) / DS ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.721627408993576, "obj2": 0.14001096921123768}, {"determining": "( ( ( DDR * Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_Mem * FirstVNF_RAM ) ) ),ARS ) ) ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + ( ( ( MLU * DS ) / MUM ) * DS ) ) * CS ) ) * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( DDR + ( PN + PN ) ) * ( ( ( Const - MRS ) / CRS ) + ( Min( ARS ,( PN * ( RRS * ARS ) ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( CS + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) ) ,( Min( Max( CS,( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( Max( DS,MUC ) + ( CS * RMSe ) ) / DS ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.721627408993576, "obj2": 0.14001096921123768}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13168202072287624}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( FirstVNF_RAM - ( AMS / ARS ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( MRS * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Min( MUM ,( CS * CS ) ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14568906397361506}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( CS,MUC ) * ( MLU - ( ( RCSe * RRSe ) - MUR ) ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "Max( ( ( ( ( MRS - CRS ) - ( ( MRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( ( ( MRS * ( ( ( MRS * Const ) + FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) * MRS ) + ( PN + MDR ) ) - ( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( Max( Max( CS,MUM ),( Min( RCSe ,MUM ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.7173447537473233, "obj2": 0.14283412189047495}, {"determining": "( ( ( MDR * FirstVNF_Mem_Server ) * Max( Max( ( FirstVNF_RAM - ( ( AMS * ( Const + PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) ) * Min( ( MDR - AMS ) ,Min( Const ,( MDR + ARS ) ) ) )", "choosing": "Min( MUM ,( ( MLU + ( MLU - ( MUM + MUM ) ) ) / Max( ( ( CS * ( Min( MUC ,Min( MLU ,RMSe ) ) + Min( MUM ,MUM ) ) ) * MUR ),Max( Min( ( RMSe / ( ( MUM + RCSe ) - ( RMSe - CS ) ) ) ,( ( ( MUR + MUR ) / MUC ) - ( Min( RCSe ,MUR ) - Max( RRSe,MUC ) ) ) ),Min( CS ,MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - ARS ) + ( Max( FirstVNF_RAM_Server,( FirstVNF_RAM / ( DDR / ( ( Const - ACS ) / FirstVNF_Mem_Server ) ) ) ) - CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( RCSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( MUR * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( RMSe - RMSe ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_CPU * FirstVNF_RAM ) ) ),ARS ) ) + ( Max( ( DDR - BR ),FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RRSe / CS ),Min( MUM ,( Min( ( ( MLU / CS ) * RRSe ) ,( Min( MUM ,MUM ) / RRSe ) ) + MLU ) ) ),Min( MUC ,( ( Max( RMSe,Max( MUR,CS ) ) / ( ( ( MLU * DS ) / MUM ) * DS ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( Min( Max( ARS,( Min( FirstVNF_RAM ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ,FirstVNF_CPU ) ,( Const * Max( Min( PN ,AMS ),Min( MDR ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) / ( ( ( MDR - AMS ) / Min( ACS ,MDR ) ) + FirstVNF_CPU ) ),Max( ARS,( ACS + RRS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( Max( RMSe,Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - CS ) ) * ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) - ( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),ARS ) / ( MRS * Const ) ) )", "choosing": "( ( Max( ( ( RMSe / Min( ( RMSe - CS ) ,Min( MUR ,( MUC / MLU ) ) ) ) + RMSe ),CS ) * ( RRSe - RRSe ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "( ( ( DDR - PN ) * DDR ) - ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) / ( ( RRS + DDR ) + ( RRS / FirstVNF_Mem ) ) ) + ( ( Const - PN ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( Min( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( FirstVNF_Mem_Server / Const ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,FirstVNF_RAM_Server ) ) ) / CRS ) )", "choosing": "( ( Max( RRSe,( MUR - Min( RRSe ,DS ) ) ) * Max( MUM,( ( Min( DS ,MLU ) * ( RCSe / ( ( MLU / MUC ) / Min( MUC ,MUM ) ) ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU * ( MUC - Max( ( MUR / Max( Min( MUC ,RCSe ),MUR ) ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) ,MUC ) ) / ( MUM + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - BR ) + Max( FirstVNF_CPU,( Const * Min( ( AMS + FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( CRS / Min( Const ,MRS ) ) ) - ( AMS - FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( DS - ( Max( MUR,( ( MUM / CS ) + MUM ) ) * Min( DS ,MLU ) ) ) ) ) + ( CS / DS ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( MUR * ( MUC + ( Min( ( RMSe * MUM ) ,MLU ) * RRSe ) ) ) * DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11249422247763662}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( RCSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( MUR * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( RMSe - RMSe ) ,MUR ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.21381227244098616}, {"determining": "( Min( MDR ,AMS ) - ( BR / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - ( RCSe - RRSe ) ) + Max( ( RMSe - ( Max( RRSe,RRSe ) / ( CS - MUC ) ) ),MLU ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( ARS * ( ( FirstVNF_Mem * PN ) - ( MDR * ARS ) ) ) - Const ) - ( Const - MDR ) )", "choosing": "( ( Min( MUM ,( RMSe + MUC ) ) * ( ( ( RRSe - MLU ) * RRSe ) + RCSe ) ) + Min( MUR ,RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.04109253149856394}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( BR / FirstVNF_CPU ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ( Max( BR,DDR ) * Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( Min( Min( Max( ( RCSe * MUM ),( MUR * DS ) ) ,RCSe ) ,( MLU - RCSe ) ) + ( MUM - Max( ( Min( MUM ,( ( RMSe - Min( MUR ,RMSe ) ) * CS ) ) / MLU ),MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + Min( ( MUR / DS ) ,RRSe ) ),MUR ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( MUR + Min( MUM ,( RCSe + MUM ) ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( Min( MUR ,Max( MUM,MUR ) ) * MUC ) + ( ( MLU + RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( ( Max( Max( CS,MUM ),( Min( RCSe ,MUM ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17537914826532322}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( Min( BR ,AMS ) + ( ( Const - ( Min( ( Max( ( MRS / BR ),Max( AMS,FirstVNF_CPU ) ) * Min( DDR ,DDR ) ) ,FirstVNF_CPU_Server ) * ( MRS + ( BR / CRS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Max( RMSe,CS ) ) - Max( RCSe,Max( ( RMSe + CS ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( ( MUC + ( ( MUR / CS ) - ( MLU + RCSe ) ) ) * RRSe ) ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * ( ( MUC + ( ( CS + ( RRSe - RCSe ) ) / RRSe ) ) * MUC ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server - ( RRS / ACS ) ) ) - ( MDR - AMS ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) + DDR ) + ( PN * FirstVNF_RAM_Server ) ) ) + ( ( CRS * ( Min( AMS ,Min( FirstVNF_RAM ,RRS ) ) - CRS ) ) / CRS ) ) )", "choosing": "( ( Min( Max( ( MLU + MUR ),RRSe ) ,RRSe ) * Max( MUM,( ( ( RCSe * ( MLU / Min( DS ,RRSe ) ) ) * Min( MLU ,DS ) ) - DS ) ) ) + ( ( MLU - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10285264793729243}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( ( MUR * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}, {"determining": "( ( Min( ( AMS - ( ARS * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( BR / DDR ),Max( AMS,FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,MDR ) ),FirstVNF_CPU_Server ) * Min( MRS ,( Max( AMS,CRS ) - PN ) ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( RCSe - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( DS * ( ( MUC * CS ) * MUR ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12277437850304601}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ACS / ARS ) ),BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,ACS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,( DS / ( ( ( RCSe * RCSe ) * DS ) + MUM ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10285264793729243}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( ( MUR * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( BR / DDR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12277437850304601}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / CRS ) ) ) + ( ( Const - ( Const * MDR ) ) / CRS ) ) - ( MDR - ( ( MDR - ( PN / FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,MUM ) - ( ( MUR * ( ( ( ( DS + RCSe ) * RCSe ) * RMSe ) - ( RCSe * RRSe ) ) ) * DS ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.8950749464668094, "obj2": 0.052513671463991995}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS * CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / Max( FirstVNF_CPU_Server,AMS ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( RMSe,Max( RCSe,MUM ) ) ) ,( Max( CS,MUR ) - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( MUC * RRSe ) ) ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MLU - Max( MLU,MLU ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.9914346895074947, "obj2": 0.003766036430200043}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( RRS + BR ) ) - ( FirstVNF_Mem_Server + ACS ) ) + ( ( Const - Min( AMS ,FirstVNF_CPU ) ) / CRS ) ) - ( Const - MRS ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( ( RMSe / DS ),CS ) ) - ( ( ( ( ( ( MUR / RRSe ) - ( MLU - DS ) ) + ( DS * ( DS * MUR ) ) ) * RRSe ) * DS ) - Min( ( RRSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6723768736616702, "obj2": 0.18610912524206827}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ( Min( ( AMS - CRS ) ,CRS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_CPU_Server / MDR ) / CRS ) / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( MUR + ( RRSe * RCSe ) ),( Max( Min( Max( MUR,DS ) ,RMSe ),( RMSe * MLU ) ) / RRSe ) ) ,( ( MLU + Max( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * ( DS / MLU ) ),MUM ) ) + Max( CS,MUM ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18156101245222953}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) + CRS ) ) * ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( ( PN / ( ARS - FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / CRS ) ) )", "choosing": "( Min( ( ( DS - RMSe ) * ( Min( DS ,( MLU - MLU ) ) * Min( Min( ( Max( MUR,RRSe ) - MLU ) ,Min( RRSe ,Max( RRSe,RCSe ) ) ) ,CS ) ) ) ,Max( RCSe,( RMSe * Max( MUC,Min( MUR ,( MUC - MUM ) ) ) ) ) ) + ( ( RCSe - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.12676341880108435}, {"determining": "( ( ( MDR - ACS ) * ( FirstVNF_RAM * BR ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) * ( ( ( Max( ( DDR / AMS ),( AMS - FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( RRSe,( Min( MUR ,Max( DS,Max( Max( MLU,( CS + MUC ) ),RCSe ) ) ) * MUM ) ) + ( ( MUM - DS ) + ( MLU - DS ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08710438393383411}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ACS / ARS ) ),BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MUM ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.024018699321358732}, {"determining": "( ( ( Const - MRS ) / CRS ) * ( ( ( Max( FirstVNF_Mem_Server,ACS ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) ) ) / ( ARS * PN ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ,( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ) / ( ( ( Max( RMSe,CS ) / MUM ) / ( RRSe + RCSe ) ) * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * Min( Min( Max( FirstVNF_RAM,AMS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) * ( Min( Max( MRS,( MDR + FirstVNF_CPU ) ) ,RRS ) + ( ( AMS - ( ACS * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) - ARS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUR,( MUM - Max( Min( ( ( MUM + RMSe ) - MUC ) ,( CS + Max( MUC,MLU ) ) ),MUM ) ) ) ) + ( ( MLU - ( RCSe / Min( RCSe ,( ( Max( RRSe,MUM ) / RMSe ) / RCSe ) ) ) ) + ( ( ( MLU + Min( DS ,RRSe ) ) * ( Min( ( CS + MUM ) ,( MUC - Min( CS ,RRSe ) ) ) + CS ) ) * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08839181479307313}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( DDR * FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "( ( CS / RMSe ) + Min( RRSe ,CS ) )", "obj1": 0.7066381156316917, "obj2": 0.14957658243311148}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + ( ( Const - MRS ) / CRS ) ) ) ) )", "choosing": "( ( RMSe - ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( FirstVNF_CPU * ( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) / ( ARS + ( ( PN / CRS ) - ( AMS - MRS ) ) ) ) / ( ARS * PN ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( ( ( RCSe / Min( CS ,CS ) ) + MUR ) - ( MUR - RRSe ) ) / ( RRSe * MUC ) ) ) ) + DS )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,Min( ( ACS + FirstVNF_RAM ) ,CRS ) ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / FirstVNF_Mem_Server ) ) - ( ( ( PN / ( RRS - FirstVNF_CPU_Server ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( RRSe / ( MUM - RMSe ) ) ) / RRSe ) + MUM ) + DS )", "obj1": 0.6702355460385439, "obj2": 0.18809343937356365}, {"determining": "( ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( Const + FirstVNF_RAM_Server ) ) ),ARS ) ) - ( DDR + FirstVNF_RAM_Server ) ) - Max( ( Min( MDR ,BR ) / AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) + ( MUC * ( DS / ( ( ( RCSe * RCSe ) * DS ) + MUM ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12457718148786782}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12779989824598154}, {"determining": "( ( ( ( FirstVNF_Mem / MRS ) + CRS ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU - ( MUC - Max( ( MUR / Max( ( MUC * DS ),RMSe ) ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( Min( RCSe ,CS ) + CS ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ACS * ( MDR + FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( ( ( FirstVNF_Mem * Const ) - FirstVNF_RAM ),Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,( CS * ( MUC * MUC ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005212088447184323}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.140952569576909}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - BR ) ) - Min( ( DDR / FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) * MRS ) ) / Max( FirstVNF_CPU_Server,Max( ( ( Const + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + Max( AMS,( ( DDR + ( ACS / MRS ) ) / ( Max( DDR,PN ) + ( FirstVNF_Mem / CRS ) ) ) ) ) ) ) )", "choosing": "( ( MUC * ( ( DS / RCSe ) * RMSe ) ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( ( MUC * DS ) / Min( MUC ,CS ) ) * RCSe ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe + MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.8950749464668094, "obj2": 0.052513671463991995}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Min( MRS ,RRS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( ARS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14301822456575125}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( DDR / MRS ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * ( FirstVNF_RAM_Server * Const ) ) ) ) ) + ( CRS / ( Const - MRS ) ) ) )", "choosing": "( ( Max( RRSe,( MUR + Min( RRSe ,DS ) ) ) * Max( MUM,( ( ( ( MUR + MLU ) - RCSe ) * RRSe ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( MRS * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Min( MUM ,( CS * CS ) ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 0.7173447537473233, "obj2": 0.1428126467485646}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) - Max( Max( AMS,Const ),RRS ) ) ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / CRS ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( Min( DS ,MUC ) ,DS ) * Min( RRSe ,CS ) ) * Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,( CS * MUR ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005212088447184323}, {"determining": "( ( ( ( Max( RRS,Const ) - FirstVNF_Mem ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + Min( ARS ,Const ) ) + ( FirstVNF_Mem_Server / AMS ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) * ( ( RMSe + Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - ( Max( MLU,RRSe ) * RRSe ) ) ) ) * ( Max( RCSe,Max( MUC,Min( RRSe ,MLU ) ) ) + ( ( MUM + Min( Max( MLU,MUR ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( ( ( MDR - AMS ) + ( CRS - Const ) ) - ( Max( RRS,Const ) - BR ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU_Server - Max( ARS,( Min( DDR ,Max( ( ( FirstVNF_Mem - AMS ) / Min( PN ,Const ) ),( ( RRS - FirstVNF_CPU_Server ) * BR ) ) ) + Max( AMS,RRS ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - MUR ) ,( Max( RRSe,MUC ) + Min( MLU ,( ( RRSe - ( ( MUC - Max( RCSe,MUM ) ) - MUM ) ) - ( MUC * ( ( Max( RRSe,MUM ) - RRSe ) / Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( MUR + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( CS,MUC ) * ( MLU - ( ( RCSe * RRSe ) - MUR ) ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.7387580299785867, "obj2": 0.13091155234651006}, {"determining": "( ( ( ( Max( MDR,( ACS * ( FirstVNF_RAM + DDR ) ) ) + ( CRS - Const ) ) - Min( Max( ACS,Const ) ,MRS ) ) - ( Max( ( FirstVNF_RAM * AMS ),( BR * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - ( BR / DDR ) ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MLU ) ) - ( MUR - RRSe ) ) + Max( CS,( Min( RCSe ,MUR ) + ( ( ( MUM + MUR ) / Max( DS,DS ) ) + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( Max( RRSe,( ( ( Max( RMSe,MUR ) * RRSe ) - ( ( ( CS + MLU ) - MLU ) * RCSe ) ) - Min( RRSe ,DS ) ) ) * Max( MUM,( ( Min( RCSe ,( RMSe / Min( DS ,MUM ) ) ) * Min( MLU ,RMSe ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( Const + PN ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MLU ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * MUM ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12457718148786782}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( FirstVNF_Mem_Server - CRS ) ,Max( ( FirstVNF_RAM_Server - MRS ),ACS ) ) ) - ( ( ARS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ACS * Const ) )", "choosing": "( Min( MUM ,Max( ( MUM - DS ),DS ) ) - ( DS * MUC ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( MLU - DS ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( Max( Max( ( FirstVNF_RAM - ( ( AMS * ( FirstVNF_RAM_Server + ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) * ( ( Min( ( ( FirstVNF_RAM_Server * Max( FirstVNF_CPU,CRS ) ) * FirstVNF_CPU_Server ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / CRS ) ) )", "choosing": "( ( DS - ( ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) * RRSe ) ) * Min( ( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MLU - CS ) + RCSe ) ) ) ) / RCSe ) ,Min( Min( Max( ( MUM / Min( Min( MUC ,RMSe ) ,MUR ) ),( ( CS / MLU ) - RRSe ) ) ,( Max( CS,RRSe ) + ( ( DS + RCSe ) / MUM ) ) ) ,( MUR / RRSe ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - Min( ( RRS + DDR ) ,Max( Max( FirstVNF_RAM_Server,BR ),( MRS / FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) * CS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( Min( ( ( MRS * ( PN / Min( RRS ,DDR ) ) ) / FirstVNF_RAM ) ,( AMS - CRS ) ) * ( Max( ACS,MRS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( Min( RCSe ,( MUM + RRSe ) ) ,RRSe ) ,( ( ( MUC / MUC ) - RCSe ) - RCSe ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( MRS * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Min( MUM ,( CS * CS ) ) ) - ( RCSe / ( ( MUM - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14568906397361506}, {"determining": "( Min( Max( FirstVNF_CPU,( Const * Min( DDR ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - ( ( ( RCSe * RCSe ) / RMSe ) / RRSe ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( ( CS / ( Max( RMSe,Max( RMSe,MLU ) ) - ( RCSe / ( ( MLU - CS ) + RCSe ) ) ) ) / RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( DDR / ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - FirstVNF_Mem_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ARS - CRS ) )", "choosing": "( ( Min( RRSe ,RRSe ) + Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + Min( MUC ,MLU ) )", "obj1": 0.728051391862955, "obj2": 0.13598506325869383}, {"determining": "( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM + ( ARS / ARS ) ) + ( FirstVNF_CPU / FirstVNF_CPU ) ) ) + ( ( MRS - Const ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( ( ( Max( Const,( ( PN - BR ) / FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) - ( ( MDR - AMS ) + ( ( FirstVNF_RAM - ( AMS / ARS ) ) - Const ) ) ) - ( DDR / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( FirstVNF_Mem,( MDR + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( Max( MUC,MUC ) / Max( ( MLU * RMSe ),RRSe ) ) * ( ( CS - MLU ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) ) - Max( RRSe,( CS + DS ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - ( MRS / ACS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS / ( ( ( ( Min( RMSe ,MUC ) + ( MUR * RRSe ) ) / ( MUR + ( ( RMSe + MUM ) + MUC ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - RRSe ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.7323340471092077, "obj2": 0.13424512984790096}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13168202072287624}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) + ( ( Min( FirstVNF_Mem ,Max( RRS,( BR - FirstVNF_RAM ) ) ) - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Max( Max( Max( ( ( Min( ( MUC - MUC ) ,( RRSe - RCSe ) ) * DS ) / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( CS * DS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( CS - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.1389258224715384}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / AMS ) ) ) + ( Max( ( ( RRS + FirstVNF_RAM ) / ARS ),ARS ) / ( Const - FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server - PN ) - MDR ) )", "choosing": "( Max( ( ( RCSe - MUR ) - CS ),RCSe ) + Min( ( MLU - MUC ) ,Max( MUR,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7237687366167024, "obj2": 0.1389258224715384}, {"determining": "( ( ( DDR * RRS ) * ( Max( Max( Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ),AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( FirstVNF_CPU_Server * Const ) )", "choosing": "Min( Max( ( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ),( MUR + ( RRSe * RCSe ) ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( Max( Max( Max( ( MUM - DS ),RCSe ),( MUR + Min( DS ,MUR ) ) ),( ( MUR + DS ) / DS ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.721627408993576, "obj2": 0.14001096921123768}, {"determining": "( ( ( DDR * Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( FirstVNF_Mem * FirstVNF_RAM ) ) ),ARS ) ) ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( Const + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( ( ( DDR / FirstVNF_Mem_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RMSe + MUR ) + ( MUR * RRSe ) ) - ( CS / CS ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( DDR + ( PN + PN ) ) * ( ( ( Const - MRS ) / CRS ) + ( Min( ARS ,( PN * ( RRS * ARS ) ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( CS + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) ) ,( Min( Max( CS,( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( Max( DS,MUC ) + ( CS * RMSe ) ) / DS ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.721627408993576, "obj2": 0.14001096921123768}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - FirstVNF_Mem_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1350894481366565}, {"determining": "( ( ( DDR * ( Max( Min( DDR ,BR ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( FirstVNF_Mem + RRS ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( ( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + Max( RMSe,DS ) ) ) ),Min( RRSe ,MLU ) ) + ( DS / MLU ) ) + ( MLU + DS ) ) )", "obj1": 0.728051391862955, "obj2": 0.13598506325869383}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) )", "obj1": 0.7323340471092077, "obj2": 0.13424512984790096}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,Max( DDR,( ARS - FirstVNF_Mem_Server ) ) ) ) + FirstVNF_Mem ) ) * ( ( ( ( DDR - ( DDR / FirstVNF_RAM_Server ) ) + Min( FirstVNF_Mem_Server ,RRS ) ) - Min( ( AMS - AMS ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - Min( FirstVNF_Mem_Server ,( FirstVNF_RAM / MDR ) ) ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( ( MUR + RMSe ) ,DS ) ) ,( ( ( CS / RCSe ) * ( MLU * ( ( ( MUM - MUR ) - ( CS / CS ) ) * MUC ) ) ) + ( MLU + DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1350894481366565}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ( Min( ( AMS - CRS ) ,( ( ( ( AMS * PN ) / Min( DDR ,RRS ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( MUR + ( RRSe * RCSe ) ),( Max( RMSe,( MUR / ( MUM / ( RMSe + MLU ) ) ) ) - RMSe ) ) ,( ( MLU + Max( ( MUC - ( RRSe * RRSe ) ),MUM ) ) + Max( CS,MUM ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13168202072287624}, {"determining": "( ( ARS + AMS ) / ( ACS + ( ( RRS * ARS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RMSe - ( Max( MLU,Min( DS ,RCSe ) ) - Max( RCSe,RMSe ) ) ),Min( DS ,MUM ) ) + ( ( ( ( DS * ( ( ( RMSe / RCSe ) / RCSe ) - DS ) ) * ( ( RRSe - RCSe ) - ( MLU / MLU ) ) ) * ( CS / Max( RRSe,( ( ( RMSe / MLU ) + DS ) - MUR ) ) ) ) + ( MLU - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}], "25": [{"determining": "( ( ( DDR - PN ) * DDR ) - ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) / ( ( RRS + DDR ) + ( RRS / FirstVNF_Mem ) ) ) + ( ( Const - PN ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( ( MUR * ( RRSe / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( FirstVNF_Mem_Server / Const ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,FirstVNF_RAM_Server ) ) ) / CRS ) )", "choosing": "( ( Max( RRSe,( MUR - Min( RRSe ,DS ) ) ) * Max( MUM,( ( Min( DS ,MLU ) * ( RCSe / ( ( MLU / MUC ) / Min( MUC ,MUM ) ) ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - BR ) + Max( FirstVNF_CPU,( Const * Min( ( AMS + FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( CRS / Min( Const ,MRS ) ) ) - ( AMS - FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( DS - ( Max( MUR,( ( MUM / CS ) + MUM ) ) * Min( DS ,MLU ) ) ) ) ) + ( CS / DS ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( MUR * ( MUC + ( Min( ( RMSe * MUM ) ,MLU ) * RRSe ) ) ) * DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11249422247763662}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( RCSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( MUR * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( RMSe - RMSe ) ,MUR ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.21381227244098616}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( BR / FirstVNF_CPU ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ( Max( BR,DDR ) * Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( Min( Min( Max( ( RCSe * MUM ),( MUR * DS ) ) ,RCSe ) ,( MLU - RCSe ) ) + ( MUM - Max( ( Min( MUM ,( ( RMSe - Min( MUR ,RMSe ) ) * CS ) ) / MLU ),MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( ARS * ( ( FirstVNF_Mem * PN ) - ( MDR * ARS ) ) ) - Const ) - ( Const - MDR ) )", "choosing": "( ( Min( MUM ,( RMSe + MUC ) ) * ( ( ( RRSe - MLU ) * RRSe ) + RCSe ) ) + Min( MUR ,RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.04109253149856394}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + Min( ( MUR / DS ) ,RRSe ) ),MUR ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( PN / MDR ) + ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MLU ,CS ) ) - ( RMSe + MUR ) ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( Min( DS ,CS ) - ( RMSe - MUC ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17537914826532322}, {"determining": "( Min( MDR ,AMS ) - ( BR / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - ( RCSe - RRSe ) ) + Max( ( RMSe - ( Max( RRSe,RRSe ) / ( CS - MUC ) ) ),MLU ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,( DS / ( ( ( RCSe * Max( ( DS + RMSe ),MUC ) ) * DS ) + MUM ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10402643818474572}, {"determining": "( ( ( PN * RRS ) * ( Max( Max( Const,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / FirstVNF_Mem_Server ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MLU - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( ( MLU - RRSe ) ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,MLU ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09648948557948861}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( CRS - Const ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8372591006423983, "obj2": 0.08112831079090736}, {"determining": "( Min( BR ,AMS ) + ( ( Const - ( Min( ( Max( ( MRS / BR ),Max( AMS,FirstVNF_CPU ) ) * Min( DDR ,DDR ) ) ,FirstVNF_CPU_Server ) * ( MRS + ( BR / CRS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Max( RMSe,CS ) ) - Max( RCSe,Max( ( RMSe + CS ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( ( MUC + ( ( MUR / CS ) - ( MLU + RCSe ) ) ) * RRSe ) ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * ( ( MUC + ( ( CS + ( RRSe - RCSe ) ) / RRSe ) ) * MUC ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( ( ( ( CRS - ( PN / FirstVNF_Mem ) ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( MDR - ( ( ARS - AMS ) * ( Const - CRS ) ) ) )", "choosing": "Min( RMSe ,( MUR + Max( ( ( RMSe - RRSe ) + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ),MUM ) ) )", "obj1": 0.892933618843683, "obj2": 0.05144901732757527}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) + ( ( ARS - ARS ) / MDR ) )", "choosing": "( ( Max( MUM,( ( ( Max( Min( MLU ,DS ),( RRSe - MUR ) ) * ( ( MUR * DS ) / Min( MUC ,MUM ) ) ) * Min( MLU ,( RMSe * MUM ) ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + Min( ( RMSe * MUR ) ,RRSe ) ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12277437850304601}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ACS / ARS ) ),BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RCSe + RRSe ) + Min( RRSe ,MLU ) ) ),( ( MUR / MUR ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}, {"determining": "( ( Min( ( AMS - ( ARS * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( BR / DDR ),Max( AMS,FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,MDR ) ),FirstVNF_CPU_Server ) * Min( MRS ,( Max( AMS,CRS ) - PN ) ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( RCSe - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( DS * ( ( MUC * CS ) * MUR ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12277437850304601}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( FirstVNF_Mem_Server - CRS ) ,Max( ( FirstVNF_RAM_Server - MRS ),ACS ) ) ) - ( ( ARS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ACS * Const ) )", "choosing": "( Min( MUM ,Max( ( MUM - DS ),DS ) ) - ( DS * MUC ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( Min( ( ( MRS * ( PN / Min( RRS ,DDR ) ) ) / FirstVNF_RAM ) ,( AMS - CRS ) ) * ( Max( ACS,MRS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( Min( RCSe ,( MUM + RRSe ) ) ,RRSe ) ,( ( ( MUC / MUC ) - RCSe ) - RCSe ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09709165324555029}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ACS / ARS ) ),BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( RRS + BR ) ) - ( FirstVNF_Mem_Server + ACS ) ) + ( ( Const - Min( AMS ,FirstVNF_CPU ) ) / CRS ) ) - ( Const - MRS ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( ( RMSe / DS ),CS ) ) - ( ( ( ( ( ( MUR / RRSe ) - ( MLU - DS ) ) + ( DS * ( DS * MUR ) ) ) * RRSe ) * DS ) - Min( ( RRSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6723768736616702, "obj2": 0.18610912524206827}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ( Min( ( AMS - CRS ) ,CRS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_CPU_Server / MDR ) / CRS ) / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( MUR + ( RRSe * RCSe ) ),( Max( Min( Max( MUR,DS ) ,RMSe ),( RMSe * MLU ) ) / RRSe ) ) ,( ( MLU + Max( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * ( DS / MLU ) ),MUM ) ) + Max( CS,MUM ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18156101245222953}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) + CRS ) ) * ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( ( PN / ( ARS - FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / CRS ) ) )", "choosing": "( Min( ( ( DS - RMSe ) * ( Min( DS ,( MLU - MLU ) ) * Min( Min( ( Max( MUR,RRSe ) - MLU ) ,Min( RRSe ,Max( RRSe,RCSe ) ) ) ,CS ) ) ) ,Max( RCSe,( RMSe * Max( MUC,Min( MUR ,( MUC - MUM ) ) ) ) ) ) + ( ( RCSe - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.12676341880108435}, {"determining": "( ( ( MDR - ACS ) * ( FirstVNF_RAM * BR ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) * ( ( ( Max( ( DDR / AMS ),( AMS - FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( RRSe,( Min( MUR ,Max( DS,Max( Max( MLU,( CS + MUC ) ),RCSe ) ) ) * MUM ) ) + ( ( MUM - DS ) + ( MLU - DS ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08710438393383411}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MUM ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.024018699321358732}, {"determining": "( FirstVNF_CPU * ( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) / ( ARS + ( ( PN / CRS ) - ( AMS - MRS ) ) ) ) / ( ARS * PN ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( ( ( RCSe / Min( CS ,CS ) ) + MUR ) - ( MUR - RRSe ) ) / ( RRSe * MUC ) ) ) ) + DS )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( Max( AMS,CRS ) - Min( ( PN * RRS ) ,DDR ) ) + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) + ( ( Const - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) / CRS ) ) )", "choosing": "Min( ( DS * MUC ) ,( DS - Max( MUM,( Min( Min( RRSe ,MUR ) ,MUM ) - MUM ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10143830477112992}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * Min( Min( Max( FirstVNF_RAM,AMS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) * ( Min( Max( MRS,( MDR + FirstVNF_CPU ) ) ,RRS ) + ( ( AMS - ( ACS * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) - ARS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUR,( MUM - Max( Min( ( ( MUM + RMSe ) - MUC ) ,( CS + Max( MUC,MLU ) ) ),MUM ) ) ) ) + ( ( MLU - ( RCSe / Min( RCSe ,( ( Max( RRSe,MUM ) / RMSe ) / RCSe ) ) ) ) + ( ( ( MLU + Min( DS ,RRSe ) ) * ( Min( ( CS + MUM ) ,( MUC - Min( CS ,RRSe ) ) ) + CS ) ) * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08839181479307313}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,( ( ( ( DS * MUR ) * DS ) / ( RRSe * MUC ) ) * MUR ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( ( DDR * FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "( ( CS / RMSe ) + Min( RRSe ,CS ) )", "obj1": 0.7066381156316917, "obj2": 0.14957658243311148}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( ACS + FirstVNF_CPU_Server ) * Max( RRS,PN ) ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + ( ( Const - MRS ) / CRS ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( MUM / RMSe ),( RCSe / DS ) ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) - Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( ( Const - MRS ) / CRS ) * ( ( ( Max( FirstVNF_Mem_Server,ACS ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) ) ) / ( ARS * PN ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ,( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ) / ( ( ( Max( RMSe,CS ) / MUM ) / ( RRSe + RCSe ) ) * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,Min( ( ACS + FirstVNF_RAM ) ,CRS ) ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / FirstVNF_Mem_Server ) ) - ( ( ( PN / ( RRS - FirstVNF_CPU_Server ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( RRSe / ( MUM - RMSe ) ) ) / RRSe ) + MUM ) + DS )", "obj1": 0.6702355460385439, "obj2": 0.18809343937356365}, {"determining": "( ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( Const + FirstVNF_RAM_Server ) ) ),ARS ) ) - ( DDR + FirstVNF_RAM_Server ) ) - Max( ( Min( MDR ,BR ) / AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) + ( MUC * ( DS / ( ( ( RCSe * RCSe ) * DS ) + MUM ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( ( MUR * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Min( MRS ,RRS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( ARS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14301822456575125}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12457718148786782}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12779989824598154}, {"determining": "( ( ( ( FirstVNF_Mem / MRS ) + CRS ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU - ( MUC - Max( ( MUR / Max( ( MUC * DS ),RMSe ) ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( Min( RCSe ,CS ) + CS ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ACS * ( MDR + FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( ( ( FirstVNF_Mem * Const ) - FirstVNF_RAM ),Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,( CS * ( MUC * MUC ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005212088447184323}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( Const + PN ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MLU ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * MUM ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - BR ) ) - Min( ( DDR / FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + ( ( Const - MRS ) / CRS ) ) ) ) )", "choosing": "( ( RMSe - ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( CS * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),( ( ( ( FirstVNF_Mem + PN ) / RRS ) / FirstVNF_Mem_Server ) - Max( Max( AMS,Const ),RRS ) ) ) + FirstVNF_Mem ) ) * ( Max( Max( CRS,FirstVNF_CPU_Server ),AMS ) - DDR ) )", "choosing": "( ( MLU - MLU ) + ( ( ( MLU / MUM ) * ( CS / Max( MUC,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( Min( Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server * ( MDR / Min( MDR ,MDR ) ) ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14191213456735555}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( DDR / MRS ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * ( FirstVNF_RAM_Server * Const ) ) ) ) ) + ( CRS / ( Const - MRS ) ) ) )", "choosing": "( ( Max( RRSe,( MUR + Min( RRSe ,DS ) ) ) * Max( MUM,( ( ( ( MUR + MLU ) - RCSe ) * RRSe ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( Const ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( ( MUR * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) - Min( MUR ,( CS * MUR ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005212088447184323}, {"determining": "( ( ( ( Max( RRS,Const ) - FirstVNF_Mem ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + Min( ARS ,Const ) ) + ( FirstVNF_Mem_Server / AMS ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) * ( ( RMSe + Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - ( Max( MLU,RRSe ) * RRSe ) ) ) ) * ( Max( RCSe,Max( MUC,Min( RRSe ,MLU ) ) ) + ( ( MUM + Min( Max( MLU,MUR ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.140952569576909}, {"determining": "( ( ( ( ( MDR - AMS ) + ( CRS - Const ) ) - ( Max( RRS,Const ) - BR ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU_Server - Max( ARS,( Min( DDR ,Max( ( ( FirstVNF_Mem - AMS ) / Min( PN ,Const ) ),( ( RRS - FirstVNF_CPU_Server ) * BR ) ) ) + Max( AMS,RRS ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - MUR ) ,( Max( RRSe,MUC ) + Min( MLU ,( ( RRSe - ( ( MUC - Max( RCSe,MUM ) ) - MUM ) ) - ( MUC * ( ( Max( RRSe,MUM ) - RRSe ) / Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_RAM ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( FirstVNF_Mem / ( ARS - CRS ) ) * MRS ) / CRS ) ) - ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( ( DDR / FirstVNF_RAM_Server ) + DDR ) ) ) + ( Min( Const ,MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUR * MUR ) ) ) ) ) ,( DS + Min( CS ,MUM ) ) )", "obj1": 0.7387580299785867, "obj2": 0.130882857667694}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( ( Max( MDR,( ACS * ( FirstVNF_RAM + DDR ) ) ) + ( CRS - Const ) ) - Min( Max( ACS,Const ) ,MRS ) ) - ( Max( ( FirstVNF_RAM * AMS ),( BR * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - ( BR / DDR ) ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MLU ) ) - ( MUR - RRSe ) ) + Max( CS,( Min( RCSe ,MUR ) + ( ( ( MUM + MUR ) / Max( DS,DS ) ) + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( Max( RRSe,( ( ( Max( RMSe,MUR ) * RRSe ) - ( ( ( CS + MLU ) - MLU ) * RCSe ) ) - Min( RRSe ,DS ) ) ) * Max( MUM,( ( Min( RCSe ,( RMSe / Min( DS ,MUM ) ) ) * Min( MLU ,RMSe ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,ACS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10285264793729243}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12457718148786782}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server - ( RRS / ACS ) ) ) - ( MDR - AMS ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / CRS ) ) ) + ( ( Const - ( Const * MDR ) ) / CRS ) ) - ( MDR - ( ( MDR - ( PN / FirstVNF_RAM ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( RRSe ,MUM ) - ( ( MUR * ( ( ( ( DS + RCSe ) * RCSe ) * RMSe ) - ( RCSe * RRSe ) ) ) * DS ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( MLU - DS ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( ( ( Const - MRS ) / CRS ) + ( Min( ( AMS - CRS ) ,Min( ( ARS - Max( ( Const / CRS ),Max( FirstVNF_Mem_Server,Const ) ) ) ,( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + DDR ) ) ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) / PN ) - MDR ) )", "choosing": "( ( ( ( RMSe + MUC ) + Min( ( Max( DS,RCSe ) * MUC ) ,( Max( RCSe,RRSe ) * ( Max( MUC,MLU ) + RRSe ) ) ) ) * DS ) - Min( MUM ,MLU ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( MUR + Min( MUM ,( RCSe + MUM ) ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( Min( MUR ,Max( MUM,MUR ) ) * MUC ) + ( ( MLU + RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - Min( ( RRS + DDR ) ,Max( Max( FirstVNF_RAM_Server,BR ),( MRS / FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( Max( MUR,MUM ) * RMSe ) - ( Min( RMSe ,MUR ) + ( ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) * CS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS * CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / Max( FirstVNF_CPU_Server,AMS ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( RMSe,Max( RCSe,MUM ) ) ) ,( Max( CS,MUR ) - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( MUC * RRSe ) ) ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( Max( FirstVNF_CPU,ACS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( Max( CS,Min( Max( ( MLU + MUR ),RRSe ) ,RRSe ) ) - ( ( ( DS * MUR ) * DS ) / ( RRSe * MUC ) ) ) ) + DS )", "obj1": 0.7109207708779444, "obj2": 0.14568906397361506}, {"determining": "( Max( Max( ( FirstVNF_RAM - ( ( AMS * ( FirstVNF_RAM_Server + ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) * ( ( Min( ( ( FirstVNF_RAM_Server * Max( FirstVNF_CPU,CRS ) ) * FirstVNF_CPU_Server ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / CRS ) ) )", "choosing": "( ( DS - ( ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) * RRSe ) ) * Min( ( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MLU - CS ) + RCSe ) ) ) ) / RCSe ) ,Min( Min( Max( ( MUM / Min( Min( MUC ,RMSe ) ,MUR ) ),( ( CS / MLU ) - RRSe ) ) ,( Max( CS,RRSe ) + ( ( DS + RCSe ) / MUM ) ) ) ,( MUR / RRSe ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( DDR * ( Max( Min( DDR ,BR ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( FirstVNF_Mem + RRS ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( ( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + Max( RMSe,DS ) ) ) ),Min( RRSe ,MLU ) ) + ( DS / MLU ) ) + ( MLU + DS ) ) )", "obj1": 0.728051391862955, "obj2": 0.13598506325869383}, {"determining": "( ( ( ( CRS - MRS ) - ( ( FirstVNF_RAM + ( ARS / ARS ) ) + ( FirstVNF_CPU / FirstVNF_CPU ) ) ) + ( ( MRS - Const ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( ARS + AMS ) / ( ACS + ( ( RRS * ARS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RMSe - ( Max( MLU,Min( DS ,RCSe ) ) - Max( RCSe,RMSe ) ) ),Min( DS ,MUM ) ) + ( ( ( ( DS * ( ( ( RMSe / RCSe ) / RCSe ) - DS ) ) * ( ( RRSe - RCSe ) - ( MLU / MLU ) ) ) * ( CS / Max( RRSe,( ( ( RMSe / MLU ) + DS ) - MUR ) ) ) ) + ( MLU - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( ( ( RRS / ( RRS - FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM + ( PN * ( ( ARS - ARS ) / ACS ) ) ) - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MLU - Max( MLU,MUR ) ) ,( ( ( ( Max( MUC,( CS - MUC ) ) / MUR ) + RMSe ) + MUM ) - ( RMSe / RCSe ) ) )", "obj1": 0.9914346895074947, "obj2": 0.003766036430200043}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) + DDR ) + ( PN * FirstVNF_RAM_Server ) ) ) + ( ( CRS * ( Min( AMS ,Min( FirstVNF_RAM ,RRS ) ) - CRS ) ) / CRS ) ) )", "choosing": "( ( Min( Max( ( MLU + MUR ),RRSe ) ,RRSe ) * Max( MUM,( ( ( RCSe * ( MLU / Min( DS ,RRSe ) ) ) * Min( MLU ,DS ) ) - DS ) ) ) + ( ( MLU - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10285264793729243}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - ( MRS / ACS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS / ( ( ( ( Min( RMSe ,MUC ) + ( MUR * RRSe ) ) / ( MUR + ( ( RMSe + MUM ) + MUC ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - RRSe ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.7323340471092077, "obj2": 0.13424512984790096}, {"determining": "( ( ( DDR * AMS ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / ( AMS / DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( MUR + ( DS + MUM ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * ( CS + ( CS / RMSe ) ) ) ,DS ) ) ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13168202072287624}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) + ( ( Min( FirstVNF_Mem ,Max( RRS,( BR - FirstVNF_RAM ) ) ) - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Max( Max( Max( ( ( Min( ( MUC - MUC ) ,( RRSe - RCSe ) ) * DS ) / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( CS * DS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( CS - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.1389258224715384}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / AMS ) ) ) + ( Max( ( ( RRS + FirstVNF_RAM ) / ARS ),ARS ) / ( Const - FirstVNF_RAM ) ) ) - ( ( FirstVNF_CPU_Server - PN ) - MDR ) )", "choosing": "( Max( ( ( RCSe - MUR ) - CS ),RCSe ) + Min( ( MLU - MUC ) ,Max( MUR,CS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13778297345739807}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem ) ) ) + ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7237687366167024, "obj2": 0.1389258224715384}, {"determining": "( ( ( DDR * RRS ) * ( Max( Max( Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ),AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( FirstVNF_CPU_Server * Const ) )", "choosing": "Min( Max( ( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ),( MUR + ( RRSe * RCSe ) ) ) ,( Min( Max( ( Max( MUM,MLU ) + RCSe ),( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( Max( Max( Max( ( MUM - DS ),RCSe ),( MUR + Min( DS ,MUR ) ) ),( ( MUR + DS ) / DS ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.721627408993576, "obj2": 0.14001096921123768}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + MDR ),RRS ) ,( DDR / FirstVNF_RAM_Server ) ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / ( MDR / MRS ) ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( ( MUR * RRSe ) + ( ( MUC + MLU ) * MUC ) ) * RMSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( DDR + ( PN + PN ) ) * ( ( ( Const - MRS ) / CRS ) + ( Min( ARS ,( PN * ( RRS * ARS ) ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( CS + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUM * ( RMSe + MLU ) ) ) ) ) ) ,( Min( Max( CS,( CS - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ) ,( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( Max( DS,MUC ) + ( CS * RMSe ) ) / DS ) ) / RCSe ) ) + Max( CS,MUM ) ) )", "obj1": 0.721627408993576, "obj2": 0.14001096921123768}, {"determining": "( ( ( DDR * ( Max( Max( AMS,FirstVNF_CPU ),( DDR / BR ) ) * FirstVNF_CPU_Server ) ) * ( Min( Max( FirstVNF_RAM,Max( DDR,( Max( AMS,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) / MUC ) ) + ( MLU + DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1350894481366565}], "26": [{"determining": "( ( ( DDR - PN ) * DDR ) - ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) / ( ( RRS + DDR ) + ( RRS / FirstVNF_Mem ) ) ) + ( ( Const - PN ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) + ( Min( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ,( CRS - ( ( ARS / DDR ) / Min( CRS ,FirstVNF_RAM_Server ) ) ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,RMSe ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,Min( MUR ,Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( ( MUR * ( RRSe / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - BR ) + Max( FirstVNF_CPU,( Const * Min( ( AMS + FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( CRS / Min( Const ,MRS ) ) ) - ( AMS - FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( DS - ( Max( MUR,( ( MUM / CS ) + MUM ) ) * Min( DS ,MLU ) ) ) ) ) + ( CS / DS ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( Min( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) )", "obj1": 0.8565310492505354, "obj2": 0.06788457152415857}, {"determining": "( ( ( ARS * ( ( FirstVNF_Mem * PN ) - ( MDR * ARS ) ) ) - Const ) - ( Const - MDR ) )", "choosing": "( ( Min( MUM ,( RMSe + MUC ) ) * ( ( ( RRSe - MLU ) * RRSe ) + RCSe ) ) + Min( MUR ,RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.04109253149856394}, {"determining": "( ( ( Min( ( Max( ( BR + Min( PN ,Const ) ),PN ) / ( FirstVNF_Mem_Server / ( PN - Max( AMS,Const ) ) ) ) ,Min( ( AMS - CRS ) ,Max( ACS,FirstVNF_CPU ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / MDR ) ) ) + ( ( Const - MRS ) + CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( DS - Max( DS,( ( CS + ( ( RMSe / RRSe ) / RRSe ) ) + Max( CS,Min( MUR ,( MUC * MUC ) ) ) ) ) ) * DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11244529984803632}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( RCSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( MUR * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( RMSe - RMSe ) ,MUR ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.21381227244098616}, {"determining": "( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( MUR + Min( MUM ,( RCSe + MUM ) ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( Min( MUR ,Max( MUM,MUR ) ) * MUC ) + ( ( MLU + RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17537914826532322}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,( DS / ( ( ( RCSe * Max( ( DS + RMSe ),MUC ) ) * DS ) + MUM ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10402643818474572}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( MUR * ( MUC + ( Min( ( RMSe * MUM ) ,MLU ) * RRSe ) ) ) * DS ) )", "obj1": 0.7751605995717344, "obj2": 0.11155801570847645}, {"determining": "( ( ( PN * RRS ) * ( Max( Max( Const,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / FirstVNF_Mem_Server ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MLU - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( ( MLU - RRSe ) ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,MLU ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09648948557948861}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( CRS - Const ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8372591006423983, "obj2": 0.08112831079090736}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + Min( ( MUR / DS ) ,RRSe ) ),MUR ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( Min( MDR ,AMS ) - ( BR / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - ( RCSe - RRSe ) ) + Max( ( RMSe - ( Max( RRSe,RRSe ) / ( CS - MUC ) ) ),MLU ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( ( CRS - ( PN / FirstVNF_Mem ) ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( MDR - ( ( ARS - AMS ) * ( Const - CRS ) ) ) )", "choosing": "Min( RMSe ,( MUR + Max( ( ( RMSe - RRSe ) + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ),MUM ) ) )", "obj1": 0.892933618843683, "obj2": 0.05144901732757527}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + Min( ( MUR / DS ) ,RRSe ) ),MUR ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( ( Min( ( AMS - ( ARS * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( BR / DDR ),Max( AMS,FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,MDR ) ),FirstVNF_CPU_Server ) * Min( MRS ,( Max( AMS,CRS ) - PN ) ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( RCSe - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( DS * ( ( MUC * CS ) * MUR ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12277437850304601}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ACS / ARS ) ),BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) + ( ( ARS - ARS ) / MDR ) )", "choosing": "( ( Max( MUM,( ( ( Max( Min( MLU ,DS ),( RRSe - MUR ) ) * ( ( MUR * DS ) / Min( MUC ,MUM ) ) ) * Min( MLU ,( RMSe * MUM ) ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + Min( ( RMSe * MUR ) ,RRSe ) ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12277437850304601}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( ( MUR * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( ( FirstVNF_Mem_Server - CRS ),Max( FirstVNF_CPU,ACS ) ) ) - ( ( Min( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + Const ) ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,ACS ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( ( Min( Min( MUM ,( ( DS - ( MUC - MUC ) ) * ( ( DS - RMSe ) / ( MUC / MUC ) ) ) ) ,DS ) - Min( MUC ,RMSe ) ) ,MUM ) - ( RRSe * RMSe ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( BR / FirstVNF_CPU ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ( Max( BR,DDR ) * Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( Min( Min( Max( ( RCSe * MUM ),( MUR * DS ) ) ,RCSe ) ,( MLU - RCSe ) ) + ( MUM - Max( ( Min( MUM ,( ( RMSe - Min( MUR ,RMSe ) ) * CS ) ) / MLU ),MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS * CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / Max( FirstVNF_CPU_Server,AMS ) ) ) )", "choosing": "( Min( Min( RRSe ,Max( RMSe,Max( RCSe,MUM ) ) ) ,( Max( CS,MUR ) - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( MUC * RRSe ) ) ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ACS / ARS ) ),BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( RRS + BR ) ) - ( FirstVNF_Mem_Server + ACS ) ) + ( ( Const - Min( AMS ,FirstVNF_CPU ) ) / CRS ) ) - ( Const - MRS ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( ( RMSe / DS ),CS ) ) - ( ( ( ( ( ( MUR / RRSe ) - ( MLU - DS ) ) + ( DS * ( DS * MUR ) ) ) * RRSe ) * DS ) - Min( ( RRSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6723768736616702, "obj2": 0.18610912524206827}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ( Min( ( AMS - CRS ) ,CRS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( FirstVNF_CPU_Server / MDR ) / CRS ) / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( MUR + ( RRSe * RCSe ) ),( Max( Min( Max( MUR,DS ) ,RMSe ),( RMSe * MLU ) ) / RRSe ) ) ,( ( MLU + Max( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * ( DS / MLU ) ),MUM ) ) + Max( CS,MUM ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18156101245222953}, {"determining": "( Min( BR ,AMS ) + ( ( Const - ( Min( ( Max( ( MRS / BR ),Max( AMS,FirstVNF_CPU ) ) * Min( DDR ,DDR ) ) ,FirstVNF_CPU_Server ) * ( MRS + ( BR / CRS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Max( RMSe,CS ) ) - Max( RCSe,Max( ( RMSe + CS ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( ( MUC + ( ( MUR / CS ) - ( MLU + RCSe ) ) ) * RRSe ) ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * ( ( MUC + ( ( CS + ( RRSe - RCSe ) ) / RRSe ) ) * MUC ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( ( ( MDR - ACS ) * ( FirstVNF_RAM * BR ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) * ( ( ( Max( ( DDR / AMS ),( AMS - FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( RRSe,( Min( MUR ,Max( DS,Max( Max( MLU,( CS + MUC ) ),RCSe ) ) ) * MUM ) ) + ( ( MUM - DS ) + ( MLU - DS ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08710438393383411}, {"determining": "( Min( ( ( CRS + ACS ) + MRS ) ,MRS ) + ( ( Const - Min( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( FirstVNF_CPU,AMS ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RCSe + RRSe ) + Min( RRSe ,MLU ) ) ),( ( MUR / MUR ) + ( Min( RRSe ,MUM ) / ( ( ( ( RMSe * RCSe ) + DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.6659528907922913, "obj2": 0.21381227244098616}, {"determining": "( ( ( Max( ( Max( ( AMS / DDR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MUM ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.024018699321358732}, {"determining": "( ( ( Const - MRS ) / CRS ) * ( ( ( Max( FirstVNF_Mem_Server,ACS ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) ) ) / ( ARS * PN ) ) )", "choosing": "Min( ( ( Min( Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ,( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ) / ( ( ( Max( RMSe,CS ) / MUM ) / ( RRSe + RCSe ) ) * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * Min( Min( Max( FirstVNF_RAM,AMS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) * ( Min( Max( MRS,( MDR + FirstVNF_CPU ) ) ,RRS ) + ( ( AMS - ( ACS * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) - ARS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUR,( MUM - Max( Min( ( ( MUM + RMSe ) - MUC ) ,( CS + Max( MUC,MLU ) ) ),MUM ) ) ) ) + ( ( MLU - ( RCSe / Min( RCSe ,( ( Max( RRSe,MUM ) / RMSe ) / RCSe ) ) ) ) + ( ( ( MLU + Min( DS ,RRSe ) ) * ( Min( ( CS + MUM ) ,( MUC - Min( CS ,RRSe ) ) ) + CS ) ) * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08839181479307313}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) + CRS ) ) * ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( ( PN / ( ARS - FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / CRS ) ) )", "choosing": "( Min( ( ( DS - RMSe ) * ( Min( DS ,( MLU - MLU ) ) * Min( Min( ( Max( MUR,RRSe ) - MLU ) ,Min( RRSe ,Max( RRSe,RCSe ) ) ) ,CS ) ) ) ,Max( RCSe,( RMSe * Max( MUC,Min( MUR ,( MUC - MUM ) ) ) ) ) ) + ( ( RCSe - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.12676341880108435}, {"determining": "( ( ( ( ARS - RRS ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ) ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( Min( ( FirstVNF_Mem + PN ) ,RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + ( ( Const - MRS ) / CRS ) ) ) ) )", "choosing": "( ( RMSe - ( Min( RRSe ,MUM ) / ( ( ( MLU / ( MLU * ( RRSe + MUC ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + Max( CS,( ( MLU / ( Max( RRSe,Max( MUR,( MUM * RRSe ) ) ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( FirstVNF_CPU * ( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) / ( ARS + ( ( PN / CRS ) - ( AMS - MRS ) ) ) ) / ( ARS * PN ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( MLU - ( ( ( ( RCSe / Min( CS ,CS ) ) + MUR ) - ( MUR - RRSe ) ) / ( RRSe * MUC ) ) ) ) + DS )", "obj1": 0.9528907922912205, "obj2": 0.023191041033722083}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( MRS / ( PN / Min( RRS ,DDR ) ) ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Min( ARS ,Max( FirstVNF_Mem_Server,Const ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) * DS ) ) ,( DS * MUR ) )", "obj1": 0.7494646680942184, "obj2": 0.12478808052281591}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,( ARS - ACS ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( MLU ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09709165324555029}, {"determining": "( ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( Const + FirstVNF_RAM_Server ) ) ),ARS ) ) - ( DDR + FirstVNF_RAM_Server ) ) - Max( ( Min( MDR ,BR ) / AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) + ( MUC * ( DS / ( ( ( RCSe * RCSe ) * DS ) + MUM ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RCSe + RRSe ) + Min( RRSe ,MLU ) ) ),( ( MUR / MUR ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Min( MRS ,RRS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( ARS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14301822456575125}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12779989824598154}, {"determining": "( ( ( ( FirstVNF_Mem / MRS ) + CRS ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU - ( MUC - Max( ( MUR / Max( ( MUC * DS ),RMSe ) ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( Min( RCSe ,CS ) + CS ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ACS * ( MDR + FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( ( ( FirstVNF_Mem * Const ) - FirstVNF_RAM ),Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,( CS * ( MUC * MUC ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005212088447184323}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( Const + PN ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MLU ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * MUM ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - BR ) ) - Min( ( DDR / FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( ACS + FirstVNF_CPU_Server ) * Max( RRS,PN ) ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + ( ( Const - MRS ) / CRS ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( MUM / RMSe ),( RCSe / DS ) ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) - Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / CRS ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) + Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - ( MRS / ACS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS / ( ( ( ( Min( RMSe ,MUC ) + ( MUR * RRSe ) ) / ( MUR + ( ( RMSe + MUM ) + MUC ) ) ) + MUC ) + ( ( RMSe + ( ( RCSe * ( MUM - RRSe ) ) / RCSe ) ) / RMSe ) ) ) + ( CS + RRSe ) )", "obj1": 0.7323340471092077, "obj2": 0.13424512984790096}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server - ( RRS / ACS ) ) ) - ( MDR - AMS ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.140952569576909}, {"determining": "( ( ARS + AMS ) / ( ACS + ( ( RRS * ARS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RMSe - ( Max( MLU,Min( DS ,RCSe ) ) - Max( RCSe,RMSe ) ) ),Min( DS ,MUM ) ) + ( ( ( ( DS * ( ( ( RMSe / RCSe ) / RCSe ) - DS ) ) * ( ( RRSe - RCSe ) - ( MLU / MLU ) ) ) * ( CS / Max( RRSe,( ( ( RMSe / MLU ) + DS ) - MUR ) ) ) ) + ( MLU - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( ( ( RRS / ( RRS - FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM + ( PN * ( ( ARS - ARS ) / ACS ) ) ) - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MLU - Max( MLU,MUR ) ) ,( ( ( ( Max( MUC,( CS - MUC ) ) / MUR ) + RMSe ) + MUM ) - ( RMSe / RCSe ) ) )", "obj1": 0.9914346895074947, "obj2": 0.003766036430200043}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( Min( Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server * ( MDR / Min( MDR ,MDR ) ) ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14191213456735555}, {"determining": "( ( DDR * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( Max( ARS,FirstVNF_RAM ) - Min( ( PN * RRS ) ,DDR ) ) + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUC * DS ) ,( DS - Max( MUM,( Max( DS,RMSe ) / Min( RRSe ,( ( ( MUM - MUM ) - Min( DS ,RRSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.13976106725661838}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),( ( ( ( FirstVNF_Mem + PN ) / RRS ) / FirstVNF_Mem_Server ) - Max( Max( AMS,Const ),RRS ) ) ) + FirstVNF_Mem ) ) * ( Max( Max( CRS,FirstVNF_CPU_Server ),AMS ) - DDR ) )", "choosing": "( ( MLU - MLU ) + ( ( ( MLU / MUM ) * ( CS / Max( MUC,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),( ( FirstVNF_Mem + PN ) / RRS ) ),( Min( Const ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( ( MUR * ( ( MUC * DS ) / Min( MUC ,RCSe ) ) ) * Min( DS ,MLU ) ) - DS ) ) - Min( MUR ,( CS * MUR ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005212088447184323}, {"determining": "( ( ( ( Max( RRS,Const ) - FirstVNF_Mem ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + Min( ARS ,Const ) ) + ( FirstVNF_Mem_Server / AMS ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) * ( ( RMSe + Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - ( Max( MLU,RRSe ) * RRSe ) ) ) ) * ( Max( RCSe,Max( MUC,Min( RRSe ,MLU ) ) ) + ( ( MUM + Min( Max( MLU,MUR ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( ( ( MDR - AMS ) + ( CRS - Const ) ) - ( Max( RRS,Const ) - BR ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU_Server - Max( ARS,( Min( DDR ,Max( ( ( FirstVNF_Mem - AMS ) / Min( PN ,Const ) ),( ( RRS - FirstVNF_CPU_Server ) * BR ) ) ) + Max( AMS,RRS ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - MUR ) ,( Max( RRSe,MUC ) + Min( MLU ,( ( RRSe - ( ( MUC - Max( RCSe,MUM ) ) - MUM ) ) - ( MUC * ( ( Max( RRSe,MUM ) - RRSe ) / Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_RAM ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( FirstVNF_Mem / ( ARS - CRS ) ) * MRS ) / CRS ) ) - ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( ( DDR / FirstVNF_RAM_Server ) + DDR ) ) ) + ( Min( Const ,MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUR * MUR ) ) ) ) ) ,( DS + Min( CS ,MUM ) ) )", "obj1": 0.7387580299785867, "obj2": 0.130882857667694}, {"determining": "( ( ( DDR * ( Max( Max( AMS,FirstVNF_CPU ),( DDR / BR ) ) * FirstVNF_CPU_Server ) ) * ( Min( Max( FirstVNF_RAM,Max( DDR,( Max( AMS,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) / MUC ) ) + ( MLU + DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1350894481366565}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( ( Max( MDR,( ACS * ( FirstVNF_RAM + DDR ) ) ) + ( CRS - Const ) ) - Min( Max( ACS,Const ) ,MRS ) ) - ( Max( ( FirstVNF_RAM * AMS ),( BR * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - ( BR / DDR ) ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MLU ) ) - ( MUR - RRSe ) ) + Max( CS,( Min( RCSe ,MUR ) + ( ( ( MUM + MUR ) / Max( DS,DS ) ) + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,ACS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( ( MUM * DS ) * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10174417296326382}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( Max( RRSe,( ( ( Max( RMSe,MUR ) * RRSe ) - ( ( ( CS + MLU ) - MLU ) * RCSe ) ) - Min( RRSe ,DS ) ) ) * Max( MUM,( ( Min( RCSe ,( RMSe / Min( DS ,MUM ) ) ) * Min( MLU ,RMSe ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( Max( AMS,CRS ) - Min( ( PN * RRS ) ,DDR ) ) + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) + ( ( Const - ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) / CRS ) ) )", "choosing": "Min( ( DS * MUC ) ,( DS - Max( MUM,( Min( Min( RRSe ,MUR ) ,MUM ) - MUM ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10143830477112992}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,( ( ( ( DS * MUR ) * DS ) / ( RRSe * MUC ) ) * MUR ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( FirstVNF_Mem,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( MUM ,DS ) - MUR ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) - Min( Max( Max( FirstVNF_RAM_Server,CRS ),Min( BR ,FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( BR * ( BR + Max( DDR,MDR ) ) ) / CRS ) ) - Max( ( DDR - BR ),FirstVNF_Mem ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( MUC * RCSe ) / Min( MUC ,MUM ) ) + Max( ( ( MUC / Min( MUM ,MLU ) ) + RRSe ),MUM ) )", "obj1": 0.7066381156316917, "obj2": 0.14957658243311148}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( FirstVNF_Mem_Server - CRS ) ,Max( ( FirstVNF_RAM_Server - MRS ),ACS ) ) ) - ( ( ARS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ACS * Const ) )", "choosing": "( Min( MUM ,Max( ( MUM - DS ),DS ) ) - ( DS * MUC ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09709165324555029}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / MRS )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( MLU - DS ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) + ( ( Min( FirstVNF_Mem ,Max( RRS,( BR - FirstVNF_RAM ) ) ) - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Max( Max( Max( ( ( Min( ( MUC - MUC ) ,( RRSe - RCSe ) ) * DS ) / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( CS * DS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( CS - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.1389258224715384}, {"determining": "( ( ( DDR * ( Max( Min( DDR ,BR ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( FirstVNF_Mem + RRS ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( ( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + Max( RMSe,DS ) ) ) ),Min( RRSe ,MLU ) ) + ( DS / MLU ) ) + ( MLU + DS ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13692127002785404}, {"determining": "( Max( Max( ( FirstVNF_RAM - ( ( AMS * ( FirstVNF_RAM_Server + ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / ACS ) ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) * ( ( Min( ( ( FirstVNF_RAM_Server * Max( FirstVNF_CPU,CRS ) ) * FirstVNF_CPU_Server ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / CRS ) ) )", "choosing": "( ( DS - ( ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) * RRSe ) ) * Min( ( ( CS / ( Max( RMSe,Max( RMSe,RCSe ) ) - ( RCSe / ( ( MLU - CS ) + RCSe ) ) ) ) / RCSe ) ,Min( Min( Max( ( MUM / Min( Min( MUC ,RMSe ) ,MUR ) ),( ( CS / MLU ) - RRSe ) ) ,( Max( CS,RRSe ) + ( ( DS + RCSe ) / MUM ) ) ) ,( MUR / RRSe ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( DDR * FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "( ( CS / RMSe ) + Min( RRSe ,CS ) )", "obj1": 0.7066381156316917, "obj2": 0.14957658243311148}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,Min( ( ACS + FirstVNF_RAM ) ,CRS ) ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / FirstVNF_Mem_Server ) ) - ( ( ( PN / ( RRS - FirstVNF_CPU_Server ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( RRSe / ( MUM - RMSe ) ) ) / RRSe ) + MUM ) + DS )", "obj1": 0.6702355460385439, "obj2": 0.18809343937356365}, {"determining": "( ( ( DDR * ( ( ( ( PN + Const ) - FirstVNF_Mem ) / FirstVNF_RAM_Server ) - CRS ) ) * ( Max( Max( FirstVNF_RAM,Min( ( ACS + FirstVNF_RAM ) ,CRS ) ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( ( DDR / BR ) - CRS ) ,( ( Const * MRS ) / FirstVNF_Mem_Server ) ) - ( ( ( PN / ( RRS - FirstVNF_CPU_Server ) ) + DDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / CRS ) ) )", "choosing": "( ( ( ( Max( ( ( DS * Max( MUR,CS ) ) * DS ),( DS * CS ) ) * ( RRSe / ( MUM - RMSe ) ) ) / RRSe ) + MUM ) + DS )", "obj1": 0.6702355460385439, "obj2": 0.18809343937356365}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - Min( ( RRS + DDR ) ,Max( Max( ( ARS - FirstVNF_RAM_Server ),BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( Max( RRSe,( ( ( MUR * RRSe ) - ( MUR / RMSe ) ) - Min( RRSe ,DS ) ) ) * Max( MUM,( ( ( RCSe * ( RMSe / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( Min( ( ( MRS * ( PN / Min( RRS ,DDR ) ) ) / FirstVNF_RAM ) ,( AMS - CRS ) ) * ( Max( ACS,MRS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( Min( RCSe ,( MUM + RRSe ) ) ,RRSe ) ,( ( ( MUC / MUC ) - RCSe ) - RCSe ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( Min( ( DDR - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( Max( FirstVNF_CPU,ACS ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( Min( RRSe ,RMSe ) ,( Max( RRSe,( MUR - Min( RRSe ,DS ) ) ) - ( ( ( DS * MUR ) * DS ) / ( RRSe * MUC ) ) ) ) + DS )", "obj1": 0.7109207708779444, "obj2": 0.14568906397361506}, {"determining": "( ( ( ( Const - MRS ) / CRS ) + ( Min( ( AMS - CRS ) ,Min( ( ARS - Max( ( Const / CRS ),Max( FirstVNF_Mem_Server,Const ) ) ) ,( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + DDR ) ) ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) / PN ) - MDR ) )", "choosing": "( ( ( ( RMSe + MUC ) + Min( ( Max( DS,RCSe ) * MUC ) ,( Max( RCSe,RRSe ) * ( Max( MUC,MLU ) + RRSe ) ) ) ) * DS ) - Min( MUM ,MLU ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12457718148786782}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}], "27": [{"determining": "( ( ( DDR - PN ) * DDR ) - ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) / ( ( RRS + DDR ) + ( RRS / FirstVNF_Mem ) ) ) + ( ( Const - PN ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( ( Max( Min( FirstVNF_CPU_Server ,( CRS * ( FirstVNF_Mem - PN ) ) ),Const ) - FirstVNF_Mem ) - ( ( MDR - AMS ) - ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( MRS / ( CRS - DDR ) ) ) - Const ) ) ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) / Max( FirstVNF_CPU_Server,( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( ( ( CS - MUC ) + DS ) * RCSe ) - ( Max( Max( RMSe,MUM ),MUC ) / ( ( CS * MLU ) / CS ) ) ) ) + ( MUM * MUC ) ) / ( MUM + CS ) ) / Min( MUR ,( ( MUM - CS ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) + ( Min( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ,( CRS - ( ( ARS / DDR ) / Min( CRS ,FirstVNF_RAM_Server ) ) ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,RMSe ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,Min( MUR ,Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - BR ) + Max( FirstVNF_CPU,( Const * Min( ( AMS + FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( CRS / Min( Const ,MRS ) ) ) - ( AMS - FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( DS - ( Max( MUR,( ( MUM / CS ) + MUM ) ) * Min( DS ,MLU ) ) ) ) ) + ( CS / DS ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( Min( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) )", "obj1": 0.8565310492505354, "obj2": 0.06788457152415857}, {"determining": "( ( ( ARS * ( ( FirstVNF_Mem * PN ) - ( MDR * ARS ) ) ) - Const ) - ( Const - MDR ) )", "choosing": "( ( Min( MUM ,( RMSe + MUC ) ) * ( ( ( RRSe - MLU ) * RRSe ) + RCSe ) ) + Min( MUR ,RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.04109253149856394}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU - RRSe ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.8758029978586723, "obj2": 0.059292406062507894}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( RCSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( MUR * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( RMSe - RMSe ) ,MUR ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.21381227244098616}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17537914826532322}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,( DS / ( ( ( RCSe * Max( ( DS + RMSe ),MUC ) ) * DS ) + MUM ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10402643818474572}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( MUR * ( MUC + ( Min( ( RMSe * MUM ) ,MLU ) * RRSe ) ) ) * DS ) )", "obj1": 0.7751605995717344, "obj2": 0.11155801570847645}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( CRS - Const ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8372591006423983, "obj2": 0.08112831079090736}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( Max( FirstVNF_CPU,ACS ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RCSe + RRSe ) + Min( RRSe ,MLU ) ) ),( ( MUR / MUR ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / ( MUR / MUR ) ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.9014989293361885, "obj2": 0.0463844842516908}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( BR / FirstVNF_CPU ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ( Max( BR,DDR ) * Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( Min( Min( Max( ( RCSe * MUM ),( MUR * DS ) ) ,RCSe ) ,( MLU - RCSe ) ) + ( MUM - Max( ( Min( MUM ,( ( RMSe - Min( MUR ,RMSe ) ) * CS ) ) / MLU ),MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( ( CRS - ( PN / FirstVNF_Mem ) ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( MDR - ( ( ARS - AMS ) * ( Const - CRS ) ) ) )", "choosing": "Min( RMSe ,( MUR + Max( ( ( RMSe - RRSe ) + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ),MUM ) ) )", "obj1": 0.892933618843683, "obj2": 0.05144901732757527}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) / CRS ) ) )", "choosing": "( Min( Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ,( Max( CS,MUR ) - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( RRSe * MUC ) ) ) ) + DS )", "obj1": 0.9528907922912205, "obj2": 0.02111369673818623}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Max( ( AMS / DDR ),Max( AMS,FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( MLU - ( ( ( ( RCSe / Min( CS ,CS ) ) + MUR ) - ( MUR - RRSe ) ) / ( RRSe * MUC ) ) ) * Max( MUM,( ( ( RCSe * ( ( RRSe * DS ) / DS ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09321165049870242}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,( DS / ( ( ( RCSe * Max( ( DS + RMSe ),MUC ) ) * ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) + MUM ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11578673499003803}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( FirstVNF_Mem_Server - CRS ) ,Max( ( FirstVNF_RAM_Server - MRS ),ACS ) ) ) - ( ( ARS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ACS * Const ) )", "choosing": "( Min( MUM ,Max( ( MUM - DS ),DS ) ) - ( DS * MUC ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( PN * RRS ) * ( Max( Max( Const,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / FirstVNF_Mem_Server ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MLU - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( ( MLU - RRSe ) ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,MLU ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09648948557948861}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( Min( MDR ,AMS ) - ( BR / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - ( RCSe - RRSe ) ) + Max( ( RMSe - ( Max( RRSe,RRSe ) / ( CS - MUC ) ) ),MLU ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MUM ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.024018699321358732}, {"determining": "( Min( ( ( MRS * ( PN / Min( RRS ,DDR ) ) ) / FirstVNF_RAM ) ,( AMS - CRS ) ) * ( Max( ACS,MRS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( Min( RCSe ,( MUM + RRSe ) ) ,RRSe ) ,( ( ( MUC / MUC ) - RCSe ) - RCSe ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( Min( ( Const - MRS ) ,CRS ) + ( ( CRS - MRS ) - ( ( MDR + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * ACS ) ,Max( FirstVNF_RAM,Const ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( Min( CS ,( CS * ( MUC / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU / ( MUC / RMSe ) ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) + Min( MUM ,( ( CS - MUR ) * DS ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09709165324555027}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( RRS + BR ) ) - ( FirstVNF_Mem_Server + ACS ) ) + ( ( Const - Min( AMS ,FirstVNF_CPU ) ) / CRS ) ) - ( Const - MRS ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( ( RMSe / DS ),CS ) ) - ( ( ( ( ( ( MUR / RRSe ) - ( MLU - DS ) ) + ( DS * ( DS * MUR ) ) ) * RRSe ) * DS ) - Min( ( RRSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6723768736616702, "obj2": 0.18610912524206827}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( Min( BR ,AMS ) + ( ( Const - ( Min( ( Max( ( MRS / BR ),Max( AMS,FirstVNF_CPU ) ) * Min( DDR ,DDR ) ) ,FirstVNF_CPU_Server ) * ( MRS + ( BR / CRS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Max( RMSe,CS ) ) - Max( RCSe,Max( ( RMSe + CS ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( ( MUC + ( ( MUR / CS ) - ( MLU + RCSe ) ) ) * RRSe ) ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * ( ( MUC + ( ( CS + ( RRSe - RCSe ) ) / RRSe ) ) * MUC ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) - ( ( DDR + Const ) + ( FirstVNF_RAM_Server / Const ) ) ) + ( ( Const - MRS ) / CRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + BR ) ) )", "choosing": "Min( ( ( MLU - ( MLU / ( Min( MUR ,( CS + MUM ) ) / Min( ( ( MUR * DS ) - DS ) ,( ( DS * MUM ) * MUM ) ) ) ) ) / CS ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( Max( ( DS * MUR ),DS ) ,Min( Max( MUR,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}, {"determining": "( ( ( MDR - ACS ) * ( FirstVNF_RAM * BR ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) * ( ( ( Max( ( DDR / AMS ),( AMS - FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( RRSe,( Min( MUR ,Max( DS,Max( Max( MLU,( CS + MUC ) ),RCSe ) ) ) * MUM ) ) + ( ( MUM - DS ) + ( MLU - DS ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08710438393383411}, {"determining": "( Min( ( ( CRS + ACS ) + MRS ) ,MRS ) + ( ( Const - Min( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( FirstVNF_CPU,AMS ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) ,Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RCSe + RRSe ) + Min( RRSe ,MLU ) ) ),( ( MUR / MUR ) + ( Min( RRSe ,MUM ) / ( ( ( ( RMSe * RCSe ) + DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.6659528907922913, "obj2": 0.21381227244098616}, {"determining": "( Min( BR ,AMS ) + ( ( Const - ( Min( ( Max( ( MRS / BR ),Max( AMS,FirstVNF_CPU ) ) * Min( DDR ,DDR ) ) ,FirstVNF_CPU_Server ) * ( MRS + ( BR / CRS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Max( RMSe,CS ) ) - Max( RCSe,Max( ( RMSe + CS ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( ( MUC + ( ( MUR / CS ) - ( MLU + RCSe ) ) ) * RRSe ) ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * ( ( MUC + ( ( CS + ( RRSe - RCSe ) ) / RRSe ) ) * MUC ) )", "obj1": 0.7601713062098501, "obj2": 0.11922536172055162}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) + ( ( Const - ( Min( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * ( Max( MDR,PN ) - DDR ) ) ,FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Min( RCSe ,( MLU + RCSe ) ) ) - Max( RCSe,Max( ( RRSe / ( MUC / CS ) ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( RRSe * ( MUC + ( MUR - ( CS + RCSe ) ) ) ) ) - Max( ( RMSe * RMSe ),RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.7601713062098501, "obj2": 0.11922536172055162}, {"determining": "( ( ( ( ( DDR + RRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( ( AMS - FirstVNF_CPU_Server ) - ( MDR - AMS ) ) ) ) ,Min( ( AMS / ( FirstVNF_RAM_Server / DDR ) ) ,Min( BR ,AMS ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - AMS )", "choosing": "( ( MUM + Max( ( MUM * ( RCSe + MUM ) ),MLU ) ) - ( ( MUR * ( MUC + ( ( RRSe + Max( MUR,MUM ) ) * RRSe ) ) ) * ( Min( ( CS + DS ) ,( MUC - Min( CS ,( CS - Min( MUM ,MUM ) ) ) ) ) + CS ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1134817792929335}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * Min( Min( Max( FirstVNF_RAM,AMS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) * ( Min( Max( MRS,( MDR + FirstVNF_CPU ) ) ,RRS ) + ( ( AMS - ( ACS * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) - ARS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUR,( MUM - Max( Min( ( ( MUM + RMSe ) - MUC ) ,( CS + Max( MUC,MLU ) ) ),MUM ) ) ) ) + ( ( MLU - ( RCSe / Min( RCSe ,( ( Max( RRSe,MUM ) / RMSe ) / RCSe ) ) ) ) + ( ( ( MLU + Min( DS ,RRSe ) ) * ( Min( ( CS + MUM ) ,( MUC - Min( CS ,RRSe ) ) ) + CS ) ) * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08839181479307313}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( MRS / ( PN / Min( RRS ,DDR ) ) ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Min( ARS ,Max( FirstVNF_Mem_Server,Const ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) * DS ) ) ,( DS * MUR ) )", "obj1": 0.7494646680942184, "obj2": 0.12478808052281591}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) + CRS ) ) * ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( ( PN / ( ARS - FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / CRS ) ) )", "choosing": "( Min( ( ( DS - RMSe ) * ( Min( DS ,( MLU - MLU ) ) * Min( Min( ( Max( MUR,RRSe ) - MLU ) ,Min( RRSe ,Max( RRSe,RCSe ) ) ) ,CS ) ) ) ,Max( RCSe,( RMSe * Max( MUC,Min( MUR ,( MUC - MUM ) ) ) ) ) ) + ( ( RCSe - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.12676341880108435}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,ACS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( ( MUM * DS ) * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10174417296326382}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + ( ( Const - MRS ) / CRS ) ) ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + Min( ( MUR / DS ) ,RRSe ) ),MUR ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( Const + FirstVNF_RAM_Server ) ) ),ARS ) ) - ( DDR + FirstVNF_RAM_Server ) ) - Max( ( Min( MDR ,BR ) / AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) + ( MUC * ( DS / ( ( ( RCSe * RCSe ) * DS ) + MUM ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_CPU ) ),BR ),MRS ) ) ) + ( ( Const - Max( CRS,FirstVNF_CPU_Server ) ) / CRS ) )", "choosing": "Min( ( MUR + Min( MLU ,DS ) ) ,( ( ( ( MUM * MUM ) / MLU ) / RRSe ) + ( ( RCSe - ( Min( Min( RMSe ,( MLU * RMSe ) ) ,RMSe ) + CS ) ) + DS ) ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Min( MRS ,RRS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( ARS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14301822456575125}, {"determining": "( ( ( Max( ( Max( ( AMS / DDR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ( Min( ( AMS - CRS ) ,CRS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MUM ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * RMSe ) + Min( DS ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18156101245222953}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( ( FirstVNF_Mem / MRS ) + CRS ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU - ( MUC - Max( ( MUR / Max( ( MUC * DS ),RMSe ) ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( Min( RCSe ,CS ) + CS ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ACS * ( MDR + FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( ( ( FirstVNF_Mem * Const ) - FirstVNF_RAM ),Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,( CS * ( MUC * MUC ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005212088447184323}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) + ( ( Min( FirstVNF_Mem ,Max( RRS,( BR - FirstVNF_RAM ) ) ) - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Max( Max( Max( ( ( Min( ( MUC - MUC ) ,( RRSe - RCSe ) ) * DS ) / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( CS * DS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( CS - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.1389258224715384}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( Const + PN ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MLU ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * MUM ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - BR ) ) - Min( ( DDR / FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( ( ARS - RRS ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,Max( ( FirstVNF_CPU * Const ),FirstVNF_RAM ) ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( Min( ( FirstVNF_Mem + PN ) ,RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + ( ( Const - MRS ) / CRS ) ) ) ) )", "choosing": "( ( RMSe - ( Min( RRSe ,MUM ) / ( ( ( MLU / ( MLU * ( RRSe + MUC ) ) ) * Min( DS ,MLU ) ) - DS ) ) ) + Max( CS,( ( MLU / ( Max( RRSe,Max( MUR,( MUM * RRSe ) ) ) / MUM ) ) + Min( ( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) * MUM ) ,MUR ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_RAM ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( FirstVNF_Mem / ( ARS - CRS ) ) * MRS ) / CRS ) ) - ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( ( DDR / FirstVNF_RAM_Server ) + DDR ) ) ) + ( Min( Const ,MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUR * MUR ) ) ) ) ) ,( DS + Min( CS ,MUM ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10112888077939274}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_RAM ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( FirstVNF_Mem / ( ARS - CRS ) ) * MRS ) / CRS ) ) - ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( ( DDR / FirstVNF_RAM_Server ) + DDR ) ) ) + ( Min( Const ,MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUR * MUR ) ) ) ) ) ,( DS + Min( CS ,MUM ) ) )", "obj1": 0.7387580299785867, "obj2": 0.130882857667694}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ) + ( ( ARS - ARS ) / MDR ) )", "choosing": "( ( Max( MUM,( ( ( Max( Min( MLU ,DS ),( RRSe - MUR ) ) * ( ( MUR * DS ) / Min( MUC ,MUM ) ) ) * Min( MLU ,( RMSe * MUM ) ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + Min( ( RMSe * MUR ) ,RRSe ) ) ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12277437850304601}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),( ( ( ( FirstVNF_Mem + PN ) / RRS ) / FirstVNF_Mem_Server ) - Max( Max( AMS,Const ),RRS ) ) ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / CRS ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - ( RMSe + MUR ) ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( DDR * ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) / BR ),Max( AMS,RRS ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ARS - Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( ( Const - MRS ) / CRS ) + ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( MUR + Min( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),Min( RRSe ,MLU ) ) ,( DS / MLU ) ) + ( MLU + DS ) ) )", "obj1": 0.7323340471092077, "obj2": 0.13395105280015954}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.140952569576909}, {"determining": "( ( Min( ( AMS - ( ARS * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( BR / DDR ),Max( AMS,FirstVNF_CPU ) ) * Min( FirstVNF_RAM_Server ,MDR ) ),FirstVNF_CPU_Server ) * Min( MRS ,( Max( AMS,CRS ) - PN ) ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( RCSe - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( DS * ( ( MUC * CS ) * MUR ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.12277437850304601}, {"determining": "( ( ARS + AMS ) / ( ACS + ( ( RRS * ARS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RMSe - ( Max( MLU,Min( DS ,RCSe ) ) - Max( RCSe,RMSe ) ) ),Min( DS ,MUM ) ) + ( ( ( ( DS * ( ( ( RMSe / RCSe ) / RCSe ) - DS ) ) * ( ( RRSe - RCSe ) - ( MLU / MLU ) ) ) * ( CS / Max( RRSe,( ( ( RMSe / MLU ) + DS ) - MUR ) ) ) ) + ( MLU - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( ( ( RRS / ( RRS - FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM + ( PN * ( ( ARS - ARS ) / ACS ) ) ) - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MLU - Max( MLU,MUR ) ) ,( ( ( ( Max( MUC,( CS - MUC ) ) / MUR ) + RMSe ) + MUM ) - ( RMSe / RCSe ) ) )", "obj1": 0.9914346895074947, "obj2": 0.003766036430200043}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( Min( Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server * ( MDR / Min( MDR ,MDR ) ) ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14191213456735555}, {"determining": "( ( DDR * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( Max( ARS,FirstVNF_RAM ) - Min( ( PN * RRS ) ,DDR ) ) + DDR ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUC * DS ) ,( DS - Max( MUM,( Max( DS,RMSe ) / Min( RRSe ,( ( ( MUM - MUM ) - Min( DS ,RRSe ) ) - RMSe ) ) ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.13976106725661838}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( BR / DDR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( Max( AMS,CRS ) - PN ) ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( RCSe - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12367163684094613}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / CRS ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) + Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) )", "obj1": 0.9443254817987152, "obj2": 0.02761053181248806}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( Max( AMS,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,AMS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - ( FirstVNF_CPU / BR ) ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( RCSe / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) / RCSe ) ) + ( MLU + Max( RMSe,CS ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.13692127002785404}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13219673123067574}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),( ( FirstVNF_Mem + PN ) / RRS ) ),( Min( Const ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( ( MUR * ( ( MUC * DS ) / Min( MUC ,RCSe ) ) ) * Min( DS ,MLU ) ) - DS ) ) - Min( MUR ,( CS * MUR ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005212088447184323}, {"determining": "( ( ( ( Max( RRS,Const ) - FirstVNF_Mem ) - ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + Min( ARS ,Const ) ) + ( FirstVNF_Mem_Server / AMS ) ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / Max( FirstVNF_CPU_Server,Max( ARS,( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) + Max( AMS,RRS ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( ( MUC * ( Max( CS,MUC ) * ( MLU - ( Max( RCSe,RRSe ) - MUR ) ) ) ) * ( ( RMSe + Max( RMSe,RCSe ) ) + ( ( MUC / DS ) - ( Max( MLU,RRSe ) * RRSe ) ) ) ) * ( Max( RCSe,Max( MUC,Min( RRSe ,MLU ) ) ) + ( ( MUM + Min( Max( MLU,MUR ) ,MUR ) ) * CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( Min( ( Max( ( BR + Min( PN ,Const ) ),PN ) / ( FirstVNF_Mem_Server / ( PN - Max( AMS,Const ) ) ) ) ,Min( ( AMS - CRS ) ,Max( ACS,FirstVNF_CPU ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / MDR ) ) ) + ( ( Const - MRS ) + CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( DS - Max( DS,( ( CS + ( ( RMSe / RRSe ) / RRSe ) ) + Max( CS,Min( MUR ,( MUC * MUC ) ) ) ) ) ) * DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11244529984803632}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( ( ( MDR - AMS ) + ( CRS - Const ) ) - ( Max( RRS,Const ) - BR ) ) - ( Max( FirstVNF_RAM,PN ) / FirstVNF_RAM_Server ) ) / ( FirstVNF_CPU_Server - Max( ARS,( Min( DDR ,Max( ( ( FirstVNF_Mem - AMS ) / Min( PN ,Const ) ),( ( RRS - FirstVNF_CPU_Server ) * BR ) ) ) + Max( AMS,RRS ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - MUR ) ,( Max( RRSe,MUC ) + Min( MLU ,( ( RRSe - ( ( MUC - Max( RCSe,MUM ) ) - MUM ) ) - ( MUC * ( ( Max( RRSe,MUM ) - RRSe ) / Min( RMSe ,MUC ) ) ) ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.008560547412679167}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ACS / ARS ) ),BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( DS / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( ( Max( MDR,( ACS * ( FirstVNF_RAM + DDR ) ) ) + ( CRS - Const ) ) - Min( Max( ACS,Const ) ,MRS ) ) - ( Max( ( FirstVNF_RAM * AMS ),( BR * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - ( BR / DDR ) ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MLU ) ) - ( MUR - RRSe ) ) + Max( CS,( Min( RCSe ,MUR ) + ( ( ( MUM + MUR ) / Max( DS,DS ) ) + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( Max( RRSe,( ( ( Max( RMSe,MUR ) * RRSe ) - ( ( ( CS + MLU ) - MLU ) * RCSe ) ) - Min( RRSe ,DS ) ) ) * Max( MUM,( ( Min( RCSe ,( RMSe / Min( DS ,MUM ) ) ) * Min( MLU ,RMSe ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( ( ( DDR * ( Max( Max( AMS,FirstVNF_CPU ),( DDR / BR ) ) * FirstVNF_CPU_Server ) ) * ( Min( Max( FirstVNF_RAM,Max( DDR,( Max( AMS,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) / MUC ) ) + ( MLU + DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1350894481366565}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server - ( RRS / ACS ) ) ) - ( MDR - AMS ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,( ( ( ( DS * MUR ) * DS ) / ( RRSe * MUC ) ) * MUR ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( DDR * ARS ) * ( ( ( MDR - ARS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) / ( ( Max( ARS,PN ) * Const ) / FirstVNF_Mem ) ) ) / ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) * DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( ( Max( DS,( DS + Min( MUM ,( DS + MUM ) ) ) ) + ( ( Max( RRSe,RRSe ) - Min( CS ,( MUR * RMSe ) ) ) * MUR ) ) ,( MUC * ( ( ( ( RRSe / MUM ) - RMSe ) / MUR ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12779989824598154}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( FirstVNF_Mem,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( MUM ,DS ) - MUR ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( ( DDR * FirstVNF_CPU_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * Max( FirstVNF_Mem,FirstVNF_CPU ) )", "choosing": "( ( CS / RMSe ) + Min( RRSe ,CS ) )", "obj1": 0.7066381156316917, "obj2": 0.14957658243311148}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( ( FirstVNF_Mem_Server - CRS ),Max( FirstVNF_CPU,ACS ) ) ) - ( ( Min( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + Const ) ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,ACS ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( ( Min( Min( MUM ,( ( DS - ( MUC - MUC ) ) * ( ( DS - RMSe ) / ( MUC / MUC ) ) ) ) ,DS ) - Min( MUC ,RMSe ) ) ,MUM ) - ( RRSe * RMSe ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / MRS )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( MLU - DS ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( ( MUR * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}, {"determining": "( ( ( ( Const - MRS ) / CRS ) + ( Min( ( AMS - CRS ) ,Min( ( ARS - Max( ( Const / CRS ),Max( FirstVNF_Mem_Server,Const ) ) ) ,( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + DDR ) ) ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) / PN ) - MDR ) )", "choosing": "( ( ( ( RMSe + MUC ) + Min( ( Max( DS,RCSe ) * MUC ) ,( Max( RCSe,RRSe ) * ( Max( MUC,MLU ) + RRSe ) ) ) ) * DS ) - Min( MUM ,MLU ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) - Min( Max( Max( FirstVNF_RAM_Server,CRS ),Min( BR ,FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( BR * ( BR + Max( DDR,MDR ) ) ) / CRS ) ) - Max( ( DDR - BR ),FirstVNF_Mem ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( MUC * RCSe ) / Min( MUC ,MUM ) ) + Max( ( ( MUC / Min( MUM ,MLU ) ) + RRSe ),MUM ) )", "obj1": 0.7066381156316917, "obj2": 0.14957658243311148}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,Min( ( ACS + FirstVNF_RAM ) ,CRS ) ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / FirstVNF_Mem_Server ) ) - ( ( ( PN / ( RRS - FirstVNF_CPU_Server ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( Max( ( MUR - MLU ),( DS * CS ) ) ,( RRSe / ( MUM - RMSe ) ) ) / RRSe ) + MUM ) + DS )", "obj1": 0.6702355460385439, "obj2": 0.18809343937356365}, {"determining": "( ( ( DDR * ( ( ( ( PN + Const ) - FirstVNF_Mem ) / FirstVNF_RAM_Server ) - CRS ) ) * ( Max( Max( FirstVNF_RAM,Min( ( ACS + FirstVNF_RAM ) ,CRS ) ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( ( DDR / BR ) - CRS ) ,( ( Const * MRS ) / FirstVNF_Mem_Server ) ) - ( ( ( PN / ( RRS - FirstVNF_CPU_Server ) ) + DDR ) + Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / CRS ) ) )", "choosing": "( ( ( ( Max( ( ( DS * Max( MUR,CS ) ) * DS ),( DS * CS ) ) * ( RRSe / ( MUM - RMSe ) ) ) / RRSe ) + MUM ) + DS )", "obj1": 0.6702355460385439, "obj2": 0.18809343937356365}], "28": [{"determining": "( ( ( DDR - PN ) * DDR ) - ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) / ( ( RRS + DDR ) + ( RRS / FirstVNF_Mem ) ) ) + ( ( Const - PN ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( ( FirstVNF_Mem_Server - CRS ),Max( FirstVNF_CPU,ACS ) ) ) - ( ( Min( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + Const ) ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,ACS ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( ( Min( Min( MUM ,( ( DS - ( MUC - MUC ) ) * ( ( DS - RMSe ) / ( MUC / MUC ) ) ) ) ,DS ) - Min( MUC ,RMSe ) ) ,MUM ) - ( RRSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( Min( FirstVNF_CPU_Server ,( CRS * ( FirstVNF_Mem - PN ) ) ),Const ) - FirstVNF_Mem ) - ( ( MDR - AMS ) - ( ( ( Max( RRS,Const ) / FirstVNF_Mem ) - ( MRS / ( CRS - DDR ) ) ) - Const ) ) ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) / Max( FirstVNF_CPU_Server,( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( ( ( CS - MUC ) + DS ) * RCSe ) - ( Max( Max( RMSe,MUM ),MUC ) / ( ( CS * MLU ) / CS ) ) ) ) + ( MUM * MUC ) ) / ( MUM + CS ) ) / Min( MUR ,( ( MUM - CS ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - BR ) + Max( FirstVNF_CPU,( Const * Min( ( AMS + FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( CRS / Min( Const ,MRS ) ) ) - ( AMS - FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( DS - ( Max( MUR,( ( MUM / CS ) + MUM ) ) * Min( DS ,MLU ) ) ) ) ) + ( CS / DS ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUR ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06702592431672236}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU - RRSe ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.8758029978586723, "obj2": 0.059292406062507894}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( RCSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( MUR * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( RMSe - RMSe ) ,MUR ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.21381227244098616}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17537914826532322}, {"determining": "( ( ( ARS * ( ( FirstVNF_Mem * PN ) - ( MDR * ARS ) ) ) - Const ) - ( Const - MDR ) )", "choosing": "( ( Min( MUM ,( RMSe + MUC ) ) * ( ( ( RRSe - MLU ) * RRSe ) + RCSe ) ) + Min( MUR ,RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.04109253149856394}, {"determining": "( ( Min( PN ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) - ( AMS + MDR ) )", "choosing": "( Max( DS,Min( Min( MLU ,Min( ( RMSe / ( ( MUR - MUC ) - ( CS + CS ) ) ) ,RRSe ) ) ,Min( DS ,Max( CS,MUR ) ) ) ) - ( ( ( CS / ( ( RMSe + RRSe ) * RRSe ) ) * RRSe ) * DS ) )", "obj1": 0.702355460385439, "obj2": 0.1615450913741842}, {"determining": "( ( Min( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( MUR ,( ( ( ( RMSe * RMSe ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) - ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) )", "obj1": 0.7815845824411135, "obj2": 0.10745163405915034}, {"determining": "( Min( MDR ,AMS ) - ( BR / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - ( RCSe - RRSe ) ) + Max( ( RMSe - ( Max( RRSe,RRSe ) / ( CS - MUC ) ) ),MLU ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( ( CRS - ( PN / FirstVNF_Mem ) ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( MDR - ( ( ARS - AMS ) * ( Const - CRS ) ) ) )", "choosing": "Min( RMSe ,( MUR + Max( ( ( RMSe - RRSe ) + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ),MUM ) ) )", "obj1": 0.892933618843683, "obj2": 0.05144901732757527}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( Min( ( ( MRS * ( PN / Min( RRS ,DDR ) ) ) / FirstVNF_RAM ) ,( AMS - CRS ) ) * ( Max( ACS,MRS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( Min( RCSe ,( MUM + RRSe ) ) ,RRSe ) ,( ( ( MUC / MUC ) - RCSe ) - RCSe ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( CRS - Const ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8372591006423983, "obj2": 0.08112831079090736}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( Max( PN,Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / Max( Const,( FirstVNF_RAM_Server * AMS ) ) ) + DDR ) + ( ( ( AMS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( Min( MLU ,Max( RRSe,MUM ) ) - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR * ( CS * RMSe ) ) / DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( RRSe ,( MUM * MUC ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04536611011120292}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( ( FirstVNF_Mem_Server - CRS ),Max( FirstVNF_CPU,ACS ) ) ) - ( ( Min( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + Const ) ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,ACS ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( ( Min( Min( MUM ,( ( DS - ( MUC - MUC ) ) * ( ( DS - RMSe ) / ( MUC / MUC ) ) ) ) ,DS ) - Min( MUC ,RMSe ) ) ,MUM ) - ( RRSe * RMSe ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( BR / FirstVNF_CPU ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ( Max( BR,DDR ) * Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( Min( Min( Max( ( RCSe * MUM ),( MUR * DS ) ) ,RCSe ) ,( MLU - RCSe ) ) + ( MUM - Max( ( Min( MUM ,( ( RMSe - Min( MUR ,RMSe ) ) * CS ) ) / MLU ),MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( ( PN * RRS ) * ( Max( Max( Const,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / FirstVNF_Mem_Server ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MLU - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( ( MLU - RRSe ) ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,MLU ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09648948557948861}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( MUR * ( MUC + ( Min( ( RMSe * MUM ) ,MLU ) * RRSe ) ) ) * DS ) )", "obj1": 0.7751605995717344, "obj2": 0.11155801570847645}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,( DS / ( ( ( RCSe * Max( ( DS + RMSe ),MUC ) ) * ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) + MUM ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11578673499003803}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MUM ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.024018699321358732}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS - CRS ) ,( ( Const * AMS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) / CRS ) ) )", "choosing": "( Min( Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ,( Max( CS,MUR ) - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( RRSe * MUC ) ) ) ) + ( RMSe - Min( MUR ,RMSe ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02111369673818623}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + Min( ( MUR / DS ) ,RRSe ) ),MUR ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( ( Min( ( Const - MRS ) ,CRS ) + ( ( CRS - MRS ) - ( ( MDR + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * ACS ) ,Max( FirstVNF_RAM,Const ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( Min( CS ,( CS * ( MUC / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU / ( MUC / RMSe ) ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) + Min( MUM ,( ( CS - MUR ) * DS ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09709165324555027}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ( Min( ( AMS - CRS ) ,CRS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MUM ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * RMSe ) + Min( DS ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18156101245222953}, {"determining": "( Min( BR ,AMS ) + ( ( Const - ( Min( ( Max( ( MRS / BR ),Max( AMS,FirstVNF_CPU ) ) * Min( DDR ,DDR ) ) ,FirstVNF_CPU_Server ) * ( MRS + ( BR / CRS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Max( RMSe,CS ) ) - Max( RCSe,Max( ( RMSe + CS ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( ( MUC + ( ( MUR / CS ) - ( MLU + RCSe ) ) ) * RRSe ) ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * ( ( MUC + ( ( CS + ( RRSe - RCSe ) ) / RRSe ) ) * MUC ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( RRS + BR ) ) - ( FirstVNF_Mem_Server + ACS ) ) + ( ( Const - Min( AMS ,FirstVNF_CPU ) ) / CRS ) ) - ( Const - MRS ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( ( RMSe / DS ),CS ) ) - ( ( ( ( ( ( MUR / RRSe ) - ( MLU - DS ) ) + ( DS * ( DS * MUR ) ) ) * RRSe ) * DS ) - Min( ( RRSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6723768736616702, "obj2": 0.18610912524206827}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( Const + PN ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MLU ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * MUM ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( ( MUR * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( DS ,MLU ) ) - DS ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.6659528907922913, "obj2": 0.21381227244098616}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,( Max( RCSe,RRSe ) * ( Max( MUC,MLU ) + RRSe ) ) ) - Min( MUR ,( CS * MLU ) ) )", "obj1": 0.9421841541755889, "obj2": 0.028333373781624222}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( BR / DDR ),( AMS / DDR ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( Max( AMS,CRS ) - PN ) ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( RCSe - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( ( RCSe / Min( CS ,CS ) ) + ( ( ( RCSe + MUC ) + ( MUC / MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12178744528331217}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) + ( ( Const - ( Min( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * ( Max( MDR,PN ) - DDR ) ) ,FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Min( RCSe ,( MLU + RCSe ) ) ) - Max( RCSe,Max( ( RRSe / ( MUC / CS ) ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( RRSe * ( MUC + ( MUR - ( CS + RCSe ) ) ) ) ) - Max( ( RMSe * RMSe ),RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.7623126338329764, "obj2": 0.11818888227565444}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + DDR )", "choosing": "( ( Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( ( ( ( DDR + RRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( ( AMS - FirstVNF_CPU_Server ) - ( MDR - AMS ) ) ) ) ,Min( ( AMS / ( FirstVNF_RAM_Server / DDR ) ) ,Min( BR ,AMS ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - AMS )", "choosing": "( ( MUM + Max( ( MUM * ( RCSe + MUM ) ),MLU ) ) - ( ( MUR * ( MUC + ( ( RRSe + Max( MUR,MUM ) ) * RRSe ) ) ) * ( Min( ( CS + DS ) ,( MUC - Min( CS ,( CS - Min( MUM ,MUM ) ) ) ) ) + CS ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1134817792929335}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * Min( Min( Max( FirstVNF_RAM,AMS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) * ( Min( Max( MRS,( MDR + FirstVNF_CPU ) ) ,RRS ) + ( ( AMS - ( ACS * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) - ARS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUR,( MUM - Max( Min( ( ( MUM + RMSe ) - MUC ) ,( CS + Max( MUC,MLU ) ) ),MUM ) ) ) ) + ( ( MLU - ( RCSe / Min( RCSe ,( ( Max( RRSe,MUM ) / RMSe ) / RCSe ) ) ) ) + ( ( ( MLU + Min( DS ,RRSe ) ) * ( Min( ( CS + MUM ) ,( MUC - Min( CS ,RRSe ) ) ) + CS ) ) * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08839181479307313}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( Max( RRSe,( ( ( Max( RMSe,MUR ) * RRSe ) - ( ( ( CS + MLU ) - MLU ) * RCSe ) ) - Min( RRSe ,DS ) ) ) * Max( MUM,( ( Min( RCSe ,( RMSe / Min( DS ,MUM ) ) ) * Min( MLU ,RMSe ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( Max( FirstVNF_CPU,ACS ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RCSe + RRSe ) + Min( RRSe ,MLU ) ) ),( ( MUR / MUR ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / ( MUR / MUR ) ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.9014989293361885, "obj2": 0.0463844842516908}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,ACS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( ( MUM * DS ) * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10174417296326382}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Max( ( AMS / DDR ),Max( AMS,FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( MLU - ( ( ( ( RCSe / Min( CS ,CS ) ) + MUR ) - ( MUR - RRSe ) ) / ( RRSe * MUC ) ) ) * Max( MUM,( ( ( RCSe * ( ( RRSe * DS ) / DS ) ) * Min( DS ,MLU ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09321165049870242}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + ( ( Const - MRS ) / CRS ) ) ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,Min( ( ACS + FirstVNF_RAM ) ,CRS ) ),FirstVNF_Mem_Server ) + ( DDR / ( ( AMS / ARS ) - ( Min( Min( DDR ,FirstVNF_RAM_Server ) ,MDR ) / AMS ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / FirstVNF_Mem_Server ) ) - ( ( ( PN / ( RRS - FirstVNF_CPU_Server ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( RRS - MRS ) / CRS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),( Min( RCSe ,MUM ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( MUM + MLU ) ) ) * RRSe ) * DS ) - Min( ( MUR * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6702355460385439, "obj2": 0.18771669386252382}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,( DS / ( ( ( RCSe * Max( ( DS + RMSe ),MUC ) ) * DS ) + MUM ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10402643818474572}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( Min( MRS ,RRS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const + MRS ) / CRS ) ) * ( FirstVNF_CPU * PN ) )", "choosing": "( ( ( ( MUM - RRSe ) + RRSe ) * Max( MUM,MUM ) ) + ( ( Max( RRSe,CS ) + Min( DS ,MUM ) ) + ( MUR / ( ( MUC / RMSe ) + DS ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10402643818474572}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( FirstVNF_CPU,ARS ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( ( Max( RMSe,MUM ) * MUC ) / Max( ( MLU * RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / ( MLU - RCSe ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Min( MRS ,RRS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( ARS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14301822456575125}, {"determining": "( ( ( Max( ( Max( ( AMS / DDR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * ( ( Min( Max( AMS,CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Min( AMS ,Max( DDR,MRS ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / Max( MLU,CS ) ) ) ) ) ,( ( Max( MUR,MLU ) * RMSe ) * ( RRSe * RCSe ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09321165049870242}, {"determining": "( ( DDR * ARS ) * ( ( ( MDR - ARS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) / ( ( Max( ARS,PN ) * Const ) / FirstVNF_Mem ) ) ) / ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) * DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( ( Max( DS,( DS + Min( MUM ,( DS + MUM ) ) ) ) + ( ( Max( RRSe,RRSe ) - Min( CS ,( MUR * RMSe ) ) ) * MUR ) ) ,( MUC * ( ( ( ( RRSe / MUM ) - RMSe ) / MUR ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12779989824598154}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( ( FirstVNF_Mem / MRS ) + CRS ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU - ( MUC - Max( ( MUR / Max( ( MUC * DS ),RMSe ) ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( Min( RCSe ,CS ) + CS ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( DDR * ( Max( Max( AMS,FirstVNF_CPU ),( DDR / BR ) ) * FirstVNF_CPU_Server ) ) * ( Min( Max( FirstVNF_RAM,Max( DDR,( Max( AMS,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) / MUC ) ) + ( MLU + DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1350894481366565}, {"determining": "( ( ( MDR - ACS ) * ( FirstVNF_RAM * BR ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) * ( ( ( Max( ( DDR / AMS ),( AMS - FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( RRSe,( Min( MUR ,Max( DS,Max( Max( MLU,( CS + MUC ) ),RCSe ) ) ) * MUM ) ) + ( ( MUM - DS ) + ( MLU - DS ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08710438393383411}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) + ( ( Min( FirstVNF_Mem ,Max( RRS,( BR - FirstVNF_RAM ) ) ) - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( Max( Max( Max( ( ( Min( ( MUC - MUC ) ,( RRSe - RCSe ) ) * DS ) / RCSe ),Max( RCSe,MUM ) ),( ( CS + RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( CS * DS ),RMSe ) - ( Max( ( RMSe + MUR ),Min( DS ,RRSe ) ) * ( DS - RCSe ) ) ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( CS - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7237687366167024, "obj2": 0.1389258224715384}, {"determining": "( Min( ( DDR + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,MUR ),MUM ) ) + ( DS * ( MLU - RRSe ) ) ) + ( ( ( MLU / MUM ) * ( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( Min( FirstVNF_Mem ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( ( MRS + FirstVNF_CPU_Server ) * CRS ) ) ) - ( Max( FirstVNF_RAM,MRS ) / ( FirstVNF_Mem_Server / ( Max( FirstVNF_CPU_Server,AMS ) - PN ) ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( FirstVNF_Mem ,DDR ) ) + ( ( Const - MRS ) / CRS ) ) ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.9700214132762313, "obj2": 0.014640470063643383}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_RAM ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( FirstVNF_Mem / ( ARS - CRS ) ) * MRS ) / CRS ) ) - ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( ( DDR / FirstVNF_RAM_Server ) + DDR ) ) ) + ( Min( Const ,MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUR * MUR ) ) ) ) ) ,( DS + Min( CS ,MUM ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10112888077939274}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_RAM ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( FirstVNF_Mem / ( ARS - CRS ) ) * MRS ) / CRS ) ) - ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( ( DDR / FirstVNF_RAM_Server ) + DDR ) ) ) + ( Min( Const ,MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUR * MUR ) ) ) ) ) ,( DS + Min( CS ,MUM ) ) )", "obj1": 0.7387580299785867, "obj2": 0.130882857667694}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.140952569576909}, {"determining": "( ( ARS + AMS ) / ( ACS + ( ( RRS * ARS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RMSe - ( Max( MLU,Min( DS ,RCSe ) ) - Max( RCSe,RMSe ) ) ),Min( DS ,MUM ) ) + ( ( ( ( DS * ( ( ( RMSe / RCSe ) / RCSe ) - DS ) ) * ( ( RRSe - RCSe ) - ( MLU / MLU ) ) ) * ( CS / Max( RRSe,( ( ( RMSe / MLU ) + DS ) - MUR ) ) ) ) + ( MLU - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( Const + FirstVNF_RAM_Server ) ) ),ARS ) ) - ( DDR + FirstVNF_RAM_Server ) ) - Max( ( Min( MDR ,BR ) / AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) + ( MUC * ( DS / ( ( ( RCSe * RCSe ) * DS ) + MUM ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( RRS / ( RRS - FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM + ( PN * ( ( ARS - ARS ) / ACS ) ) ) - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MLU - Max( MLU,MUR ) ) ,( ( ( ( Max( MUC,( CS - MUC ) ) / MUR ) + RMSe ) + MUM ) - ( RMSe / RCSe ) ) )", "obj1": 0.9914346895074947, "obj2": 0.003766036430200043}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( Min( Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server * ( MDR / Min( MDR ,MDR ) ) ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14191213456735555}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( FirstVNF_Mem_Server - CRS ) ,( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( ( ( MUR + ( DS + MLU ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MUR / ( MLU / Max( MUM,( MUM - Min( RMSe ,MUM ) ) ) ) ) + ( ( ( MUM + MUR ) / Max( DS,DS ) ) + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13219673123067574}, {"determining": "( ( ( Const - ( Max( ( Max( ( BR / ARS ),Min( AMS ,ARS ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( ARS + ARS ) ) ) ) / CRS ) + ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - MUR ) + ( MUC / ( CS / ( RMSe + Min( ( RMSe - MUR ) ,( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12632849008809238}, {"determining": "( ( ( Min( ( Max( ( BR + Min( PN ,Const ) ),PN ) / ( FirstVNF_Mem_Server / ( PN - Max( AMS,Const ) ) ) ) ,Min( ( AMS - CRS ) ,Max( ACS,FirstVNF_CPU ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / MDR ) ) ) + ( ( Const - MRS ) + CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( DS - Max( DS,( ( CS + ( ( RMSe / RRSe ) / RRSe ) ) + Max( CS,Min( MUR ,( MUC * MUC ) ) ) ) ) ) * DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11244529984803632}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) / CRS ) ) )", "choosing": "( Min( Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ,( Max( CS,MUR ) - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( RRSe * MUC ) ) ) ) + DS )", "obj1": 0.9528907922912205, "obj2": 0.02111369673818623}, {"determining": "( ( RRS - ( FirstVNF_CPU_Server - ( RRS / ACS ) ) ) - ( MDR - AMS ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( PN * AMS ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( DS ,DS ) - MUR ) )", "obj1": 0.728051391862955, "obj2": 0.1368245964953443}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( ( FirstVNF_CPU + ACS ),AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( CRS - Const ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( MLU * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8372591006423983, "obj2": 0.08112831079090736}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_CPU ) ),BR ),MRS ) ) ) + ( ( Const - Max( CRS,FirstVNF_CPU_Server ) ) / CRS ) )", "choosing": "Min( ( MUR + Min( MLU ,DS ) ) ,( ( ( ( MUM * MUM ) / MLU ) / RRSe ) + ( ( RCSe - ( Min( Min( RMSe ,( MLU * RMSe ) ) ,RMSe ) + CS ) ) + DS ) ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( ( Max( MDR,( ACS * ( FirstVNF_RAM + DDR ) ) ) + ( CRS - Const ) ) - Min( Max( ACS,Const ) ,MRS ) ) - ( Max( ( FirstVNF_RAM * AMS ),( BR * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - ( BR / DDR ) ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MLU ) ) - ( MUR - RRSe ) ) + Max( CS,( Min( RCSe ,MUR ) + ( ( ( MUM + MUR ) / Max( DS,DS ) ) + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) + CRS ) ) * ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( ( PN / ( ARS - FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / CRS ) ) )", "choosing": "( Min( ( ( DS - RMSe ) * ( Min( DS ,( MLU - MLU ) ) * Min( Min( ( Max( MUR,RRSe ) - MLU ) ,Min( RRSe ,Max( RRSe,RCSe ) ) ) ,CS ) ) ) ,Max( RCSe,( RMSe * Max( MUC,Min( MUR ,( MUC - MUM ) ) ) ) ) ) + ( ( RCSe - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.12676341880108435}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) + ( ( Const - ( Min( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * ( Max( MDR,PN ) - DDR ) ) ,FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Min( RCSe ,( MLU + RCSe ) ) ) - Max( RCSe,Max( ( RRSe / ( MUC / CS ) ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( RRSe * ( MUC + ( MUR - ( CS + RCSe ) ) ) ) ) - Max( ( RMSe * RMSe ),RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.7601713062098501, "obj2": 0.11922536172055162}, {"determining": "( Min( BR ,AMS ) + ( ( Const - ( Min( ( Max( ( MRS / BR ),Max( AMS,FirstVNF_CPU ) ) * Min( DDR ,DDR ) ) ,FirstVNF_CPU_Server ) * ( MRS + ( BR / CRS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Max( RMSe,CS ) ) - Max( RCSe,Max( ( RMSe + CS ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( ( MUC + ( ( MUR / CS ) - ( MLU + RCSe ) ) ) * RRSe ) ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * ( ( MUC + ( ( CS + ( RRSe - RCSe ) ) / RRSe ) ) * MUC ) )", "obj1": 0.7601713062098501, "obj2": 0.11922536172055162}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( Max( FirstVNF_CPU,ACS ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RCSe + RRSe ) + Min( RRSe ,MLU ) ) ),( ( MUR / MUR ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / ( MUR / MUR ) ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * MLU ) ) )", "obj1": 0.9014989293361885, "obj2": 0.0463844842516908}, {"determining": "( ( ( ( Const - MRS ) / CRS ) + ( Min( ( AMS - CRS ) ,Min( ( ARS - Max( ( Const / CRS ),Max( FirstVNF_Mem_Server,Const ) ) ) ,( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + DDR ) ) ) ) - ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) / PN ) - MDR ) )", "choosing": "( ( ( ( RMSe + MUC ) + Min( ( Max( DS,RCSe ) * MUC ) ,( Max( RCSe,RRSe ) * ( Max( MUC,MLU ) + RRSe ) ) ) ) * DS ) - Min( MUM ,MLU ) )", "obj1": 0.708779443254818, "obj2": 0.14758268686549475}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,( ( ( ( DS * MUR ) * DS ) / ( RRSe * MUC ) ) * MUR ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,( ( ( ( DS * MUR ) * DS ) / ( RRSe * MUC ) ) * MUR ) ) )", "obj1": 0.9935760171306209, "obj2": 0.0031094383346915357}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) - Min( Max( Max( FirstVNF_RAM_Server,CRS ),Min( BR ,FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( BR * ( BR + Max( DDR,MDR ) ) ) / CRS ) ) - Max( ( DDR - BR ),FirstVNF_Mem ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( MUC * RCSe ) / Min( MUC ,MUM ) ) + Max( ( ( MUC / Min( MUM ,MLU ) ) + RRSe ),MUM ) )", "obj1": 0.7066381156316917, "obj2": 0.14957658243311148}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( FirstVNF_Mem_Server - CRS ) ,Max( ( FirstVNF_RAM_Server - MRS ),ACS ) ) ) - ( ( ARS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ACS * Const ) )", "choosing": "( Min( MUM ,Max( ( MUM - DS ),DS ) ) - ( DS * MUC ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / MRS )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( CS,MUM ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( MLU - DS ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( FirstVNF_Mem - MRS ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( FirstVNF_Mem - MRS ) / CRS ) ) )", "choosing": "Min( Max( Min( MUM ,DS ),MUR ) ,( DS * CS ) )", "obj1": 0.7259100642398287, "obj2": 0.13692127002785404}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) - ( ( DDR + Const ) + ( FirstVNF_RAM_Server / Const ) ) ) + ( ( Const - MRS ) / CRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + BR ) ) )", "choosing": "Min( ( ( MLU - ( MLU / ( Min( MUR ,( CS + MUM ) ) / Min( ( ( MUR * DS ) - DS ) ,( ( DS * MUM ) * MUM ) ) ) ) ) / CS ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( Max( ( DS * MUR ),DS ) ,Min( Max( MUR,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}], "29": [{"determining": "( ( ( DDR - PN ) * DDR ) - ( ( Min( Max( FirstVNF_CPU,ACS ) ,( AMS - CRS ) ) / ( ( RRS + DDR ) + ( RRS / FirstVNF_Mem ) ) ) + ( ( Const - PN ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( RRS / ( RRS - FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM + ( PN * ( ( ARS - ARS ) / ACS ) ) ) - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( ( FirstVNF_Mem_Server - CRS ),Max( FirstVNF_CPU,ACS ) ) ) - ( ( Min( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + Const ) ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,ACS ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( ( Min( Min( MUM ,( ( DS - ( MUC - MUC ) ) * ( ( DS - RMSe ) / ( MUC / MUC ) ) ) ) ,DS ) - Min( MUC ,RMSe ) ) ,MUM ) - ( RRSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( AMS - BR ) + Max( FirstVNF_CPU,( Const * Min( ( AMS + FirstVNF_CPU ) ,FirstVNF_RAM ) ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( CRS / Min( Const ,MRS ) ) ) - ( AMS - FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUM,( DS - ( Max( MUR,( ( MUM / CS ) + MUM ) ) * Min( DS ,MLU ) ) ) ) ) + ( CS / DS ) )", "obj1": 0.6638115631691649, "obj2": 0.22070106607561132}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( RCSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( MUR * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( RMSe - RMSe ) ,MUR ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.21381227244098616}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU - RRSe ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.8758029978586723, "obj2": 0.059292406062507894}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17537914826532322}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06702592431672236}, {"determining": "( ( ( ARS * ( ( FirstVNF_Mem * PN ) - ( MDR * ARS ) ) ) - Const ) - ( Const - MDR ) )", "choosing": "( ( Min( MUM ,( RMSe + MUC ) ) * ( ( ( RRSe - MLU ) * RRSe ) + RCSe ) ) + Min( MUR ,RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.04109253149856394}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUR ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06702592431672236}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( Max( AMS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / Max( FirstVNF_CPU,AMS ) ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( ( ( CS / ( RCSe * RCSe ) ) / RRSe ) - Min( MUR ,( ( RCSe / RMSe ) + DS ) ) ) / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.69593147751606, "obj2": 0.15960267625169508}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( BR / FirstVNF_CPU ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ( Max( BR,DDR ) * Min( FirstVNF_Mem ,Const ) ) ) )", "choosing": "( Min( Min( Max( ( RCSe * MUM ),( MUR * DS ) ) ,RCSe ) ,( MLU - RCSe ) ) + ( MUM - Max( ( Min( MUM ,( ( RMSe - Min( MUR ,RMSe ) ) * CS ) ) / MLU ),MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( BR / DDR ),( AMS / DDR ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( Max( AMS,CRS ) - PN ) ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( RCSe - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( ( RCSe / Min( CS ,CS ) ) + ( ( ( RCSe + MUC ) + ( MUC / MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12178744528331217}, {"determining": "( ( ( ( CRS - ( PN / FirstVNF_Mem ) ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( MDR - ( ( ARS - AMS ) * ( Const - CRS ) ) ) )", "choosing": "Min( RMSe ,( MUR + Max( ( ( RMSe - RRSe ) + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ),MUM ) ) )", "obj1": 0.892933618843683, "obj2": 0.05144901732757527}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( CRS - Const ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8372591006423983, "obj2": 0.08112831079090736}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( Max( PN,Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / Max( Const,( FirstVNF_RAM_Server * AMS ) ) ) + DDR ) + ( ( ( AMS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( Min( MLU ,Max( RRSe,MUM ) ) - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR * ( CS * RMSe ) ) / DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( RRSe ,( MUM * MUC ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04536611011120292}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + DDR )", "choosing": "( ( Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( ( ( MRS - CRS ) - ( ( ( ( FirstVNF_RAM_Server / DDR ) + DDR ) + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS / MDR ) )", "choosing": "( ( ( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( RRSe - ( Max( RRSe,MUM ) + MUC ) ) ,Min( Max( CS,MLU ) ,Max( DS,MLU ) ) ) ) ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MUR ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013455905594631931}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( Min( MDR ,AMS ) - ( BR / ( RRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe - ( RCSe - RRSe ) ) + Max( ( RMSe - ( Max( RRSe,RRSe ) / ( CS - MUC ) ) ),MLU ) )", "obj1": 0.841541755888651, "obj2": 0.07529888706060343}, {"determining": "( Min( ( ( MRS * ( PN / Min( RRS ,DDR ) ) ) / FirstVNF_RAM ) ,( AMS - CRS ) ) * ( Max( ACS,MRS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( Min( RCSe ,( MUM + RRSe ) ) ,RRSe ) ,( ( ( MUC / MUC ) - RCSe ) - RCSe ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( Min( ( Const - MRS ) ,CRS ) + ( ( CRS - MRS ) - ( ( MDR + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * ACS ) ,Max( FirstVNF_RAM,Const ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( Min( CS ,( CS * ( MUC / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU / ( MUC / RMSe ) ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) + Min( MUM ,( ( CS - MUR ) * DS ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09709165324555027}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MUM ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.024018699321358732}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS - CRS ) ,( ( Const * AMS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( ( CRS - MRS ) / ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( MRS - ( RRS + CRS ) ) / CRS ) ) / CRS ) ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( CS * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + ( CS + Min( RCSe ,Min( Min( MUM ,( ( MUM + MUM ) - CS ) ) ,Min( RMSe ,DS ) ) ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02111369673818623}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,( Max( RCSe,RRSe ) * ( Max( MUC,MLU ) + RRSe ) ) ) - Min( MUR ,( CS * MLU ) ) )", "obj1": 0.9421841541755889, "obj2": 0.028333373781624222}, {"determining": "( ( ARS + AMS ) / ( ACS + ( ( RRS * ARS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RMSe - ( Max( MLU,Min( DS ,RCSe ) ) - Max( RCSe,RMSe ) ) ),Min( DS ,MUM ) ) + ( ( ( ( DS * ( ( ( RMSe / RCSe ) / RCSe ) - DS ) ) * ( ( RRSe - RCSe ) - ( MLU / MLU ) ) ) * ( CS / Max( RRSe,( ( ( RMSe / MLU ) + DS ) - MUR ) ) ) ) + ( MLU - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( FirstVNF_Mem_Server - CRS ) ,Max( ( FirstVNF_RAM_Server - MRS ),ACS ) ) ) - ( ( ARS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ACS * Const ) )", "choosing": "( Min( MUM ,Max( ( MUM - DS ),DS ) ) - ( DS * MUC ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ( Min( ( AMS - CRS ) ,CRS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MUM ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * RMSe ) + Min( DS ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18156101245222953}, {"determining": "( Min( BR ,AMS ) + ( ( Const - ( Min( ( Max( ( MRS / BR ),Max( AMS,FirstVNF_CPU ) ) * Min( DDR ,DDR ) ) ,FirstVNF_CPU_Server ) * ( MRS + ( BR / CRS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Max( RMSe,CS ) ) - Max( RCSe,Max( ( RMSe + CS ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( ( MUC + ( ( MUR / CS ) - ( MLU + RCSe ) ) ) * RRSe ) ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * ( ( MUC + ( ( CS + ( RRSe - RCSe ) ) / RRSe ) ) * MUC ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( RRS + BR ) ) - ( FirstVNF_Mem_Server + ACS ) ) + ( ( Const - Min( AMS ,FirstVNF_CPU ) ) / CRS ) ) - ( Const - MRS ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( ( RMSe / DS ),CS ) ) - ( ( ( ( ( ( MUR / RRSe ) - ( MLU - DS ) ) + ( DS * ( DS * MUR ) ) ) * RRSe ) * DS ) - Min( ( RRSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6723768736616702, "obj2": 0.18610912524206827}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( Max( RRSe,( ( ( Max( RMSe,MUR ) * RRSe ) - ( ( ( CS + MLU ) - MLU ) * RCSe ) ) - Min( RRSe ,DS ) ) ) * Max( MUM,( ( Min( RCSe ,( RMSe / Min( DS ,MUM ) ) ) * Min( MLU ,RMSe ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( MDR - ACS ) * ( FirstVNF_RAM * BR ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) * ( ( ( Max( ( DDR / AMS ),( AMS - FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( RRSe,( Min( MUR ,Max( DS,Max( Max( MLU,( CS + MUC ) ),RCSe ) ) ) * MUM ) ) + ( ( MUM - DS ) + ( MLU - DS ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08710438393383411}, {"determining": "( ( ( Min( ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( MUR * ( MUC + ( ( RRSe + Max( MUR,CS ) ) * RRSe ) ) ) * DS ) )", "obj1": 0.7773019271948608, "obj2": 0.110331007551349}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.6659528907922913, "obj2": 0.21381227244098616}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ( ACS + ARS ) - FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - MUM ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( RCSe / RMSe ) + DS ) ) ) / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13809670349117006}, {"determining": "( ( ( DDR * ( Max( Max( AMS,FirstVNF_CPU ),( DDR / BR ) ) * FirstVNF_CPU_Server ) ) * ( Min( Max( FirstVNF_RAM,Max( DDR,( Max( AMS,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) / MUC ) ) + ( MLU + DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1350894481366565}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.140952569576909}, {"determining": "( ( ( RRS / ( RRS - FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM + ( PN * ( ( ARS - ARS ) / ACS ) ) ) - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MLU - Max( MLU,MUR ) ) ,( ( ( ( Max( MUC,( CS - MUC ) ) / MUR ) + RMSe ) + MUM ) - ( RMSe / RCSe ) ) )", "obj1": 0.9914346895074947, "obj2": 0.003766036430200043}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( ( FirstVNF_Mem_Server - CRS ),Max( FirstVNF_CPU,ACS ) ) ) - ( ( Min( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + Const ) ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,ACS ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( ( Min( Min( MUM ,( ( DS - ( MUC - MUC ) ) * ( ( DS - RMSe ) / ( MUC / MUC ) ) ) ) ,DS ) - Min( MUC ,RMSe ) ) ,MUM ) - ( RRSe * RMSe ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) - ( ( DDR + Const ) + ( FirstVNF_RAM_Server / Const ) ) ) + ( ( Const - MRS ) / CRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + BR ) ) )", "choosing": "Min( ( ( MLU - ( MLU / ( Min( MUR ,( CS + MUM ) ) / Min( ( ( MUR * DS ) - DS ) ,( ( DS * MUM ) * MUM ) ) ) ) ) / CS ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( Max( ( DS * MUR ),DS ) ,Min( Max( MUR,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * Min( Min( Max( FirstVNF_RAM,AMS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) * ( Min( Max( MRS,( MDR + FirstVNF_CPU ) ) ,RRS ) + ( ( AMS - ( ACS * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) - ARS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUR,( MUM - Max( Min( ( ( MUM + RMSe ) - MUC ) ,( CS + Max( MUC,MLU ) ) ),MUM ) ) ) ) + ( ( MLU - ( RCSe / Min( RCSe ,( ( Max( RRSe,MUM ) / RMSe ) / RCSe ) ) ) ) + ( ( ( MLU + Min( DS ,RRSe ) ) * ( Min( ( CS + MUM ) ,( MUC - Min( CS ,RRSe ) ) ) + CS ) ) * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08839181479307313}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + Min( ( MUR / DS ) ,RRSe ) ),MUR ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( Max( FirstVNF_CPU,ACS ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.0463844842516908}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( Min( ( ( PN / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( MDR - ( MDR * RRS ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( MLU - RMSe ) + ( MUC * Max( ( ( RRSe * RCSe ) + MLU ),DS ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10745163405915034}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * ( ( Min( Max( AMS,CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Max( ( AMS / DDR ),( RRS * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / Max( MLU,CS ) ) ) ) ) ,( ( Max( MUM,MLU ) * RMSe ) * Max( CS,MUM ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09233064948347444}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) - Min( Max( Max( FirstVNF_RAM_Server,CRS ),Min( BR ,FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( BR * ( BR + Max( DDR,MDR ) ) ) / CRS ) ) - Max( ( DDR - BR ),FirstVNF_Mem ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( MUC * RCSe ) / Min( MUC ,MUM ) ) + Max( ( ( MUC / Min( MUM ,MLU ) ) + RRSe ),MUM ) )", "obj1": 0.7066381156316917, "obj2": 0.14957658243311148}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,Min( ( ACS + FirstVNF_RAM ) ,CRS ) ),FirstVNF_Mem_Server ) + ( DDR / ( ( AMS / ARS ) - ( Min( Min( DDR ,FirstVNF_RAM_Server ) ,MDR ) / AMS ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / FirstVNF_Mem_Server ) ) - ( ( ( PN / ( RRS - FirstVNF_CPU_Server ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( RRS - MRS ) / CRS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),( Min( RCSe ,MUM ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( MUM + MLU ) ) ) * RRSe ) * DS ) - Min( ( MUR * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6702355460385439, "obj2": 0.18771669386252382}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * ( ( Min( Max( AMS,CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Min( AMS ,Max( DDR,MRS ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / Max( MLU,CS ) ) ) ) ) ,( ( Max( MUR,MLU ) * RMSe ) * ( RRSe * RCSe ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09574362530655407}, {"determining": "( ( Min( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( MUR ,( ( ( ( RMSe * RMSe ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) - ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) )", "obj1": 0.7815845824411135, "obj2": 0.10745163405915034}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_CPU ) ),BR ),MRS ) ) ) + ( ( Const - Max( CRS,FirstVNF_CPU_Server ) ) / CRS ) )", "choosing": "Min( ( MUR + Min( MLU ,DS ) ) ,( ( ( ( MUM * MUM ) / MLU ) / RRSe ) + ( ( RCSe - ( Min( Min( RMSe ,( MLU * RMSe ) ) ,RMSe ) + CS ) ) + DS ) ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Min( MRS ,RRS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( ARS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14301822456575125}, {"determining": "( ( ( Max( ( Max( ( AMS / DDR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,AMS ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( ( ( ( ( ( DS * MUR ) * DS ) / ( RRSe * MUC ) ) / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( MRS * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( ARS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( RRSe ,MUM ) ) ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - MUR ) + ( MUC / ( CS / ( RMSe + Min( ( RMSe * MUR ) ,RRSe ) ) ) ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12632849008809238}, {"determining": "( ( ( Const - ( Max( ( Max( ( BR / ARS ),Min( AMS ,ARS ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( ARS + ARS ) ) ) ) / CRS ) + ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - MUR ) + ( MUC / ( CS / ( RMSe + Min( ( RMSe - MUR ) ,( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.7473233404710921, "obj2": 0.12632849008809238}, {"determining": "( ( DDR * ARS ) * ( ( ( MDR - ARS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) / ( ( Max( ARS,PN ) * Const ) / FirstVNF_Mem ) ) ) / ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) * DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( ( Max( DS,( DS + Min( MUM ,( DS + MUM ) ) ) ) + ( ( Max( RRSe,RRSe ) - Min( CS ,( MUR * RMSe ) ) ) * MUR ) ) ,( MUC * ( ( ( ( RRSe / MUM ) - RMSe ) / MUR ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12779989824598154}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( ( FirstVNF_Mem / MRS ) + CRS ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU - ( MUC - Max( ( MUR / Max( ( MUC * DS ),RMSe ) ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( Min( RCSe ,CS ) + CS ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( ( Max( MDR,( ACS * ( FirstVNF_RAM + DDR ) ) ) + ( CRS - Const ) ) - Min( Max( ACS,Const ) ,MRS ) ) - ( Max( ( FirstVNF_RAM * AMS ),( BR * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - ( BR / DDR ) ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MLU ) ) - ( MUR - RRSe ) ) + Max( CS,( Min( RCSe ,MUR ) + ( ( ( MUM + MUR ) / Max( DS,DS ) ) + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( Const + PN ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MLU ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * MUM ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS - CRS ) ,Min( BR ,MDR ) ) - ( ( Const - Min( AMS ,FirstVNF_CPU ) ) / CRS ) ) + ( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS + ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) / CRS ) ) )", "choosing": "( Min( Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ,( Max( CS,MUR ) - ( ( RRSe * MUC ) / ( Min( ( RMSe / RMSe ) ,Min( ( MLU - DS ) ,RMSe ) ) * ( MUM * ( RCSe + RRSe ) ) ) ) ) ) + DS )", "obj1": 0.8779443254817987, "obj2": 0.05823597600161007}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,( DS / ( ( ( RCSe * Max( ( DS + RMSe ),MUC ) ) * DS ) + MUM ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10402643818474572}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_RAM ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( FirstVNF_Mem / ( ARS - CRS ) ) * MRS ) / CRS ) ) - ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( ( DDR / FirstVNF_RAM_Server ) + DDR ) ) ) + ( Min( Const ,MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUR * MUR ) ) ) ) ) ,( DS + Min( CS ,MUM ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10112888077939274}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,( DS / ( ( ( RCSe * Max( ( DS + RMSe ),MUC ) ) * ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) + MUM ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11578673499003803}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,( DS / ( ( ( RCSe * Max( ( DS + RMSe ),MUC ) ) * ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) + MUM ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.11709505150457879}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_RAM ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( FirstVNF_Mem / ( ARS - CRS ) ) * MRS ) / CRS ) ) - ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( ( DDR / FirstVNF_RAM_Server ) + DDR ) ) ) + ( Min( Const ,MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUR * MUR ) ) ) ) ) ,( DS + Min( CS ,MUM ) ) )", "obj1": 0.7387580299785867, "obj2": 0.130882857667694}, {"determining": "( ( ( Max( ( Max( ( AMS / DDR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Max( MUR,CS ) ) - Max( RCSe,Max( ( RMSe + CS ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.7687366167023555, "obj2": 0.11465066863712467}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + Min( MRS ,( ACS + ARS ) ) ),BR ),MRS ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( ( MLU * RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Min( MUR ,( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) ) )", "obj1": 0.7109207708779444, "obj2": 0.1457633263141723}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( ( ( PN * MDR ) * FirstVNF_RAM ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,( DS / ( ( ( ( MUM * MLU ) * Max( ( RRSe + RMSe ),MUC ) ) * DS ) + MUM ) ) ) )", "obj1": 0.7901498929336188, "obj2": 0.10291796321071711}, {"determining": "( ( ( ( ( DDR + RRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( ( AMS - FirstVNF_CPU_Server ) - ( MDR - AMS ) ) ) ) ,Min( ( AMS / ( FirstVNF_RAM_Server / DDR ) ) ,Min( BR ,AMS ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - AMS )", "choosing": "( ( MUM + Max( ( MUM * ( RCSe + MUM ) ),MLU ) ) - ( ( MUR * ( MUC + ( ( RRSe + Max( MUR,MUM ) ) * RRSe ) ) ) * ( Min( ( CS + DS ) ,( MUC - Min( CS ,( CS - Min( MUM ,MUM ) ) ) ) ) + CS ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1134817792929335}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) + ( ( Const - ( Min( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * ( Max( MDR,PN ) - DDR ) ) ,FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Min( RCSe ,( MLU + RCSe ) ) ) - Max( RCSe,Max( ( RRSe / ( MUC / CS ) ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( RRSe * ( MUC + ( MUR - ( CS + RCSe ) ) ) ) ) - Max( ( RMSe * RMSe ),RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.7623126338329764, "obj2": 0.11818888227565444}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( MUR * ( MUC + ( Min( ( RMSe * MUM ) ,MLU ) * RRSe ) ) ) * DS ) )", "obj1": 0.7751605995717344, "obj2": 0.11155801570847645}, {"determining": "( ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( Const + FirstVNF_RAM_Server ) ) ),ARS ) ) - ( DDR + FirstVNF_RAM_Server ) ) - Max( ( Min( MDR ,BR ) / AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) + ( MUC * ( DS / ( ( ( RCSe * RCSe ) * DS ) + MUM ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( Min( Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server * ( MDR / Min( MDR ,MDR ) ) ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14191213456735555}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( Min( MRS ,RRS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const + MRS ) / CRS ) ) * ( FirstVNF_CPU * PN ) )", "choosing": "( ( ( ( MUM - RRSe ) + RRSe ) * Max( MUM,MUM ) ) + ( ( Max( RRSe,CS ) + Min( DS ,MUM ) ) + ( MUR / ( ( MUC / RMSe ) + DS ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10402643818474572}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.7366167023554604, "obj2": 0.13219673123067574}, {"determining": "( ( ( Min( ( Max( ( BR + Min( PN ,Const ) ),PN ) / ( FirstVNF_Mem_Server / ( PN - Max( AMS,Const ) ) ) ) ,Min( ( AMS - CRS ) ,Max( ACS,FirstVNF_CPU ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / MDR ) ) ) + ( ( Const - MRS ) + CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( DS - Max( DS,( ( CS + ( ( RMSe / RRSe ) / RRSe ) ) + Max( CS,Min( MUR ,( MUC * MUC ) ) ) ) ) ) * DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11244529984803632}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS - CRS ) ,( ( Const * AMS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) / CRS ) ) )", "choosing": "( Min( Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ,( Max( CS,MUR ) - ( ( Min( ( RMSe / RMSe ) ,Min( MUM ,RRSe ) ) * ( MUM * ( MLU + RRSe ) ) ) / ( RRSe * MUC ) ) ) ) + ( RMSe - Min( MUR ,RMSe ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02111369673818623}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( PN * AMS ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( DS ,DS ) - MUR ) )", "obj1": 0.728051391862955, "obj2": 0.1368245964953443}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,ACS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( ( MUM * DS ) * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10174417296326382}, {"determining": "( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( ( ( CRS - FirstVNF_Mem_Server ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( FirstVNF_CPU - Min( FirstVNF_CPU ,BR ) ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,( MUR + ( Max( ( ( ( Min( RMSe ,CS ) - Max( MUC,MUR ) ) * RCSe ) + Max( Min( MLU ,MUM ),RCSe ) ),Max( DS,MUR ) ) / MUC ) ) )", "obj1": 0.8372591006423983, "obj2": 0.08112831079090736}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( FirstVNF_CPU,ARS ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( ( Max( RMSe,MUM ) * MUC ) / Max( ( MLU * RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / ( MLU - RCSe ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) + CRS ) ) * ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( ( PN / ( ARS - FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / CRS ) ) )", "choosing": "( Min( ( ( DS - RMSe ) * ( Min( DS ,( MLU - MLU ) ) * Min( Min( ( Max( MUR,RRSe ) - MLU ) ,Min( RRSe ,Max( RRSe,RCSe ) ) ) ,CS ) ) ) ,Max( RCSe,( RMSe * Max( MUC,Min( MUR ,( MUC - MUM ) ) ) ) ) ) + ( ( RCSe - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.12676341880108435}, {"determining": "( Min( ( DDR + FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) - ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,MUR ),MUM ) ) + ( DS * ( MLU - RRSe ) ) ) + ( ( ( MLU / MUM ) * ( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * ( ( Min( Max( AMS,CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Min( AMS ,Max( DDR,MRS ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / Max( MLU,CS ) ) ) ) ) ,( ( Max( MUR,MLU ) * RMSe ) * ( RRSe * RCSe ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09574362530655407}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / MRS )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( RCSe / RMSe ) + DS ) ) ) / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( ( Max( ( Max( ( AMS / DDR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Min( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * Min( DDR ,DDR ) ) ,FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( Min( Min( Max( ( RCSe * MUM ),( MUR * DS ) ) ,RCSe ) ,( MLU - RCSe ) ) + ( MUM - Max( ( Min( MUM ,( ( RMSe - Min( MUR ,RMSe ) ) * CS ) ) / MLU ),MUM ) ) )", "obj1": 0.7601713062098501, "obj2": 0.11922536172055162}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * ( ( Min( Max( AMS,CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Min( AMS ,Max( DDR,MRS ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / Max( MLU,CS ) ) ) ) ) ,( ( Max( MUR,MLU ) * RMSe ) * ( RRSe * RCSe ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09321165049870242}], "30": [{"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - MUC ),MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / ( RRS - FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM + ( PN * ( ( ARS - ARS ) / ACS ) ) ) - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21627350531508344}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( AMS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * RRSe ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07475108427866028}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( RCSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( MUR * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( RMSe - RMSe ) ,MUR ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.21381227244098616}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17537914826532322}, {"determining": "( ( ( ARS * ( ( FirstVNF_Mem * PN ) - ( MDR * ARS ) ) ) - Const ) - ( Const - MDR ) )", "choosing": "( ( Min( MUM ,( RMSe + MUC ) ) * ( ( ( RRSe - MLU ) * RRSe ) + RCSe ) ) + Min( MUR ,RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.04109253149856394}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( Max( AMS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / Max( FirstVNF_CPU,AMS ) ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( ( ( CS / ( RCSe * RCSe ) ) / RRSe ) - Min( MUR ,( ( RCSe / RMSe ) + DS ) ) ) / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.69593147751606, "obj2": 0.15960267625169508}, {"determining": "( ( ( ( CRS - ( PN / FirstVNF_Mem ) ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( MDR - ( ( ARS - AMS ) * ( Const - CRS ) ) ) )", "choosing": "Min( RMSe ,( MUR + Max( ( ( RMSe - RRSe ) + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ),MUM ) ) )", "obj1": 0.892933618843683, "obj2": 0.05144901732757527}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU - RRSe ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.8758029978586723, "obj2": 0.059292406062507894}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06702592431672236}, {"determining": "( ( ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( FirstVNF_Mem_Server - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) ) + ( ( Const - ( Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( ( MRS + RRS ),FirstVNF_CPU_Server ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( ( ( ( Min( MUR ,CS ) / Min( CS ,MUC ) ) * RCSe ) * Min( ( RMSe / MUM ) ,MLU ) ) - DS ) ) + Min( ( RMSe * MUR ) ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( RMSe + ( ( ( RCSe + MUC ) + ( MUC / MUR ) ) * DS ) ) ) ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( Max( DDR,PN ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ( FirstVNF_Mem / ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( Max( MLU,RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Max( MUM,( DS / ( CS + ( ( ( ( MUC - RCSe ) / DS ) * MUC ) - Max( MUC,( Min( MUR ,RMSe ) + RCSe ) ) ) ) ) ) )", "obj1": 0.9293361884368309, "obj2": 0.033391027021794896}, {"determining": "( ( ( ( MRS - CRS ) - ( ( ( ( FirstVNF_RAM_Server / DDR ) + DDR ) + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS / MDR ) )", "choosing": "( ( ( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( RRSe - ( Max( RRSe,MUM ) + MUC ) ) ,Min( Max( CS,MLU ) ,Max( DS,MLU ) ) ) ) ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MUR ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013455905594631931}, {"determining": "( ( ( ( MRS - CRS ) - ( ( DDR + RRS ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( FirstVNF_CPU * ( FirstVNF_Mem + ARS ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - RCSe ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( ( ( Min( Min( RMSe ,MUM ) ,Min( MLU ,RMSe ) ) - Min( RCSe ,DS ) ) + ( RMSe / CS ) ) ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUR ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06702592431672236}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( Min( ( Const - MRS ) ,CRS ) + ( ( CRS - MRS ) - ( ( MDR + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * ACS ) ,Max( FirstVNF_RAM,Const ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( Min( CS ,( CS * ( MUC / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU / ( MUC / RMSe ) ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) + Min( MUM ,( ( CS - MUR ) * DS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06374757365233535}, {"determining": "( Min( ( ( MRS * ( PN / Min( RRS ,DDR ) ) ) / FirstVNF_RAM ) ,( AMS - CRS ) ) * ( Max( ACS,MRS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( Min( RCSe ,( MUM + RRSe ) ) ,RRSe ) ,( ( ( MUC / MUC ) - RCSe ) - RCSe ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( BR / DDR ),( AMS / DDR ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( Max( AMS,CRS ) - PN ) ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( RCSe - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( ( RCSe / Min( CS ,CS ) ) + ( ( ( RCSe + MUC ) + ( MUC / MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12178744528331217}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MUM ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.024018699321358732}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) - Min( Max( Max( FirstVNF_RAM_Server,CRS ),Min( BR ,FirstVNF_RAM_Server ) ) ,FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,( ( BR * ( BR + Max( DDR,MDR ) ) ) / CRS ) ) - Max( ( DDR - BR ),FirstVNF_Mem ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( MUC * RCSe ) / Min( MUC ,MUM ) ) + Max( ( ( MUC / Min( MUM ,MLU ) ) + RRSe ),MUM ) )", "obj1": 0.7066381156316917, "obj2": 0.14957658243311148}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS - CRS ) ,( ( Const * AMS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) / CRS ) ) )", "choosing": "Min( RMSe ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02111369673818623}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( Max( PN,Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / Max( Const,( FirstVNF_RAM_Server * AMS ) ) ) + DDR ) + ( ( ( AMS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( Min( MLU ,Max( RRSe,MUM ) ) - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR * ( CS * RMSe ) ) / DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( RRSe ,( MUM * MUC ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04536611011120292}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ( ACS + ARS ) - FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - MUM ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( RCSe / RMSe ) + DS ) ) ) / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13809670349117006}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) - ( ( DDR + Const ) + ( FirstVNF_RAM_Server / Const ) ) ) + ( ( Const - MRS ) / CRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + BR ) ) )", "choosing": "Min( ( ( MLU - ( MLU / ( Min( MUR ,( CS + MUM ) ) / Min( ( ( MUR * DS ) - DS ) ,( ( DS * MUM ) * MUM ) ) ) ) ) / CS ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( Max( ( DS * MUR ),DS ) ,Min( Max( MUR,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Max( ( FirstVNF_Mem_Server - CRS ),Max( FirstVNF_CPU,ACS ) ) ) - ( ( Min( ( Min( FirstVNF_RAM_Server ,ARS ) / ( FirstVNF_CPU_Server + Const ) ) ,Min( ( FirstVNF_RAM_Server / FirstVNF_CPU ) ,ACS ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( ( Min( Min( MUM ,( ( DS - ( MUC - MUC ) ) * ( ( DS - RMSe ) / ( MUC / MUC ) ) ) ) ,DS ) - Min( MUC ,RMSe ) ) ,MUM ) - ( RRSe * RMSe ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( CRS - Const ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8372591006423983, "obj2": 0.08112831079090736}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( RRS + BR ) ) - ( FirstVNF_Mem_Server + ACS ) ) + ( ( Const - Min( AMS ,FirstVNF_CPU ) ) / CRS ) ) - ( Const - MRS ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( ( RMSe / DS ),CS ) ) - ( ( ( ( ( ( MUR / RRSe ) - ( MLU - DS ) ) + ( DS * ( DS * MUR ) ) ) * RRSe ) * DS ) - Min( ( RRSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6723768736616702, "obj2": 0.18610912524206827}, {"determining": "( Min( BR ,AMS ) + ( ( Const - ( Min( ( Max( ( MRS / BR ),Max( AMS,FirstVNF_CPU ) ) * Min( DDR ,DDR ) ) ,FirstVNF_CPU_Server ) * ( MRS + ( BR / CRS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Max( RMSe,CS ) ) - Max( RCSe,Max( ( RMSe + CS ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( ( MUC + ( ( MUR / CS ) - ( MLU + RCSe ) ) ) * RRSe ) ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * ( ( MUC + ( ( CS + ( RRSe - RCSe ) ) / RRSe ) ) * MUC ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( FirstVNF_CPU,ARS ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( ( Max( RMSe,MUM ) * MUC ) / Max( ( MLU * RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / ( MLU - RCSe ) )", "obj1": 0.8329764453961456, "obj2": 0.0819208269283406}, {"determining": "( ( Min( ( Const - MRS ) ,CRS ) + ( ( CRS - MRS ) - ( ( MDR + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * ACS ) ,Max( FirstVNF_RAM,Const ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( Min( CS ,( CS * ( MUC / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU / ( MUC / RMSe ) ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) + Min( MUM ,( ( CS - MUR ) * DS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06374757365233535}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( Max( RRSe,( ( ( Max( RMSe,MUR ) * RRSe ) - ( ( ( CS + MLU ) - MLU ) * RCSe ) ) - Min( RRSe ,DS ) ) ) * Max( MUM,( ( Min( RCSe ,( RMSe / Min( DS ,MUM ) ) ) * Min( MLU ,RMSe ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( MDR - ACS ) * ( FirstVNF_RAM * BR ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) * ( ( ( Max( ( DDR / AMS ),( AMS - FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( RRSe,( Min( MUR ,Max( DS,Max( Max( MLU,( CS + MUC ) ),RCSe ) ) ) * MUM ) ) + ( ( MUM - DS ) + ( MLU - DS ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08710438393383411}, {"determining": "( ( Min( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( MUR ,( ( ( ( RMSe * RMSe ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) - ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) )", "obj1": 0.7773019271948608, "obj2": 0.1092863371543289}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( DDR * ( Max( Max( AMS,FirstVNF_CPU ),( DDR / BR ) ) * FirstVNF_CPU_Server ) ) * ( Min( Max( FirstVNF_RAM,Max( DDR,( Max( AMS,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) / MUC ) ) + ( MLU + DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1350894481366565}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.140952569576909}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( FirstVNF_Mem_Server - CRS ) ,Max( ( FirstVNF_RAM_Server - MRS ),ACS ) ) ) - ( ( ARS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ACS * Const ) )", "choosing": "( Min( MUM ,Max( ( MUM - DS ),DS ) ) - ( DS * MUC ) )", "obj1": 0.7044967880085653, "obj2": 0.1516350227282883}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * ( ( Min( Max( AMS,CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Min( AMS ,Max( DDR,MRS ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / Max( MLU,CS ) ) ) ) ) ,( ( Max( MUR,MLU ) * RMSe ) * ( RRSe * RCSe ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09321165049870242}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * Min( Min( Max( FirstVNF_RAM,AMS ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) ) * ( Min( Max( MRS,( MDR + FirstVNF_CPU ) ) ,RRS ) + ( ( AMS - ( ACS * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) - ARS ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUR,( MUM - Max( Min( ( ( MUM + RMSe ) - MUC ) ,( CS + Max( MUC,MLU ) ) ),MUM ) ) ) ) + ( ( MLU - ( RCSe / Min( RCSe ,( ( Max( RRSe,MUM ) / RMSe ) / RCSe ) ) ) ) + ( ( ( MLU + Min( DS ,RRSe ) ) * ( Min( ( CS + MUM ) ,( MUC - Min( CS ,RRSe ) ) ) + CS ) ) * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08839181479307313}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + Min( ( MUR / DS ) ,RRSe ) ),MUR ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( ( ( RRS / ( RRS - FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM + ( PN * ( ( ARS - ARS ) / ACS ) ) ) - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MLU - Max( MLU,MUR ) ) ,( ( ( ( Max( MUC,( CS - MUC ) ) / MUR ) + RMSe ) + MUM ) - ( RMSe / RCSe ) ) )", "obj1": 0.9914346895074947, "obj2": 0.003766036430200043}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( FirstVNF_Mem * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( Max( FirstVNF_CPU,ACS ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.0463844842516908}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( PN * AMS ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( DS ,DS ) - MUR ) )", "obj1": 0.728051391862955, "obj2": 0.1368245964953443}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( DDR * ARS ) * ( ( ( MDR - ARS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) / ( ( Max( ARS,PN ) * Const ) / FirstVNF_Mem ) ) ) / ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) * DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( ( Max( DS,( DS + Min( MUM ,( DS + MUM ) ) ) ) + ( ( Max( RRSe,RRSe ) - Min( CS ,( MUR * RMSe ) ) ) * MUR ) ) ,( MUC * ( ( ( ( RRSe / MUM ) - RMSe ) / MUR ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0022346293007595094}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,Min( ( ACS + FirstVNF_RAM ) ,CRS ) ),FirstVNF_Mem_Server ) + ( DDR / ( ( AMS / ARS ) - ( Min( Min( DDR ,FirstVNF_RAM_Server ) ,MDR ) / AMS ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / FirstVNF_Mem_Server ) ) - ( ( ( PN / ( RRS - FirstVNF_CPU_Server ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( RRS - MRS ) / CRS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),( Min( RCSe ,MUM ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( MUM + MLU ) ) ) * RRSe ) * DS ) - Min( ( MUR * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6702355460385439, "obj2": 0.18771669386252382}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * ( ( Min( Max( AMS,CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Min( AMS ,Max( DDR,MRS ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / Max( MLU,CS ) ) ) ) ) ,( ( Max( MUR,MLU ) * RMSe ) * ( RRSe * RCSe ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09574362530655407}, {"determining": "( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( ( ( CRS - FirstVNF_Mem_Server ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( FirstVNF_CPU - Min( FirstVNF_CPU ,( Const * FirstVNF_CPU ) ) ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( Min( CS ,( CS * ( RRSe / MUM ) ) ) + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,( MUR + ( Max( ( ( ( Min( RMSe ,CS ) - Max( MUC,MUR ) ) * RCSe ) + Max( Min( MLU ,MUM ),RCSe ) ),Max( DS,MUR ) ) / MUC ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007532072860400086}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + DDR )", "choosing": "( ( Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + ( ( Max( RRSe,CS ) + Min( DS ,MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09709165324555027}, {"determining": "( ( Min( ( ( PN / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( BR,FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + ( MDR - ( MDR * RRS ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( MLU - RMSe ) + ( MUC * Max( ( ( RRSe * RCSe ) + MLU ),DS ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10745163405915034}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ACS / ARS ) ),BR ),MRS ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( ( MLU * RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Min( MUR ,( ( MUM - CS ) * MUR ) ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Min( MRS ,RRS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( ARS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14301822456575125}, {"determining": "( ( ( Max( ( Max( ( AMS / DDR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,AMS ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( ( ( ( ( ( DS * MUR ) * DS ) / ( RRSe * MUC ) ) / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( ( Min( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( Max( Max( ( DS / RCSe ),Max( MUM,RCSe ) ),( ( RCSe + RRSe ) + Min( Max( RCSe,MUM ) ,MLU ) ) ),( ( RRSe / MUR ) + ( Min( RRSe ,DS ) / ( ( ( MLU / DS ) * ( RRSe + DS ) ) - DS ) ) ) ) + Min( ( RRSe - MLU ) ,( ( RCSe - CS ) / DS ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10745163405915034}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ( Min( ( AMS - CRS ) ,CRS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( RRSe ,( MUM * MUC ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18156101245222953}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( MUR * ( MUC + ( Min( ( RMSe * MUM ) ,MLU ) * RRSe ) ) ) * DS ) )", "obj1": 0.7751605995717344, "obj2": 0.11155801570847645}, {"determining": "( ( ARS + AMS ) / ( ACS + ( ( RRS * ARS ) * FirstVNF_RAM ) ) )", "choosing": "( Max( ( RMSe - ( Max( MLU,Min( DS ,RCSe ) ) - Max( RCSe,RMSe ) ) ),Min( DS ,MUM ) ) + ( ( ( ( DS * ( ( ( RMSe / RCSe ) / RCSe ) - DS ) ) * ( ( RRSe - RCSe ) - ( MLU / MLU ) ) ) * ( CS / Max( RRSe,( ( ( RMSe / MLU ) + DS ) - MUR ) ) ) ) + ( MLU - RRSe ) ) )", "obj1": 0.9807280513918629, "obj2": 0.00901206171536402}, {"determining": "( ( DDR * ARS ) * ( ( ( MDR - ARS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) / ( ( Max( ARS,PN ) * Const ) / FirstVNF_Mem ) ) ) / ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) * DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( ( Max( DS,( DS + Min( MUM ,( DS + MUM ) ) ) ) + ( ( Max( RRSe,RRSe ) - Min( CS ,( MUR * RMSe ) ) ) * MUR ) ) ,( MUC * ( ( ( ( RRSe / MUM ) - RMSe ) / MUR ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12779989824598154}, {"determining": "( ( ( ( FirstVNF_Mem / MRS ) + CRS ) - ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) + ( RRS + FirstVNF_CPU_Server ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( ( MLU - ( MUC - Max( ( MUR / Max( ( MUC * DS ),RMSe ) ),( ( RRSe - MUR ) / MUC ) ) ) ) - Min( CS ,MUC ) ) / ( Min( RCSe ,CS ) + CS ) )", "obj1": 0.9271948608137045, "obj2": 0.03660676255836643}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( ( Max( MDR,( ACS * ( FirstVNF_RAM + DDR ) ) ) + ( CRS - Const ) ) - Min( Max( ACS,Const ) ,MRS ) ) - ( Max( ( FirstVNF_RAM * AMS ),( BR * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - ( BR / DDR ) ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MLU ) ) - ( MUR - RRSe ) ) + Max( CS,( Min( RCSe ,MUR ) + ( ( ( MUM + MUR ) / Max( DS,DS ) ) + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( Min( MUM ,( ( DS - ( MUC - MUC ) ) * ( ( DS - RMSe ) / ( MUC / MUC ) ) ) ) ,DS ) - Min( MUC ,RMSe ) ) ,MUM ) - ( RRSe * RMSe ) )", "obj1": 0.9421841541755889, "obj2": 0.028333373781624222}, {"determining": "( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( ( ( CRS - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) / FirstVNF_Mem ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUR ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005344067635451045}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( Const + PN ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MLU ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * MUM ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS - CRS ) ,Min( BR ,MDR ) ) - ( ( Const - Min( AMS ,FirstVNF_CPU ) ) / CRS ) ) + ( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS + ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) / CRS ) ) )", "choosing": "( Min( Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ,( Max( CS,MUR ) - ( ( RRSe * MUC ) / ( Min( ( RMSe / RMSe ) ,Min( ( MLU - DS ) ,RMSe ) ) * ( MUM * ( RCSe + RRSe ) ) ) ) ) ) + DS )", "obj1": 0.8779443254817987, "obj2": 0.05823597600161007}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,( DS / ( ( ( RCSe * Max( ( DS + RMSe ),MUC ) ) * DS ) + MUM ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.10402643818474572}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_RAM ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( FirstVNF_Mem / ( ARS - CRS ) ) * MRS ) / CRS ) ) - ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( ( DDR / FirstVNF_RAM_Server ) + DDR ) ) ) + ( Min( Const ,MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUR * MUR ) ) ) ) ) ,( DS + Min( CS ,MUM ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10112888077939274}, {"determining": "( ( ( Const - ( Max( ( Max( ( BR / ARS ),Min( AMS ,ARS ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( ARS + ARS ) ) ) ) / CRS ) + ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - MUR ) + ( MUC / ( CS / ( RMSe + Min( ( RMSe - MUR ) ,( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12386164412351526}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) - MRS ) / CRS ) ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + Max( RRSe,( DS / ( ( ( RCSe * Max( ( DS + RMSe ),MUC ) ) * ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) + MUM ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.11578673499003803}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + Min( MRS ,( ACS + ARS ) ) ),BR ),MRS ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( ( MLU * RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Min( MUR ,( ( MLU + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) ) )", "obj1": 0.7109207708779444, "obj2": 0.1457633263141723}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_RAM ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( FirstVNF_Mem / ( ARS - CRS ) ) * MRS ) / CRS ) ) - ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( ( DDR / FirstVNF_RAM_Server ) + DDR ) ) ) + ( Min( Const ,MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUR * MUR ) ) ) ) ) ,( DS + Min( CS ,MUM ) ) )", "obj1": 0.7387580299785867, "obj2": 0.130882857667694}, {"determining": "( ( ( Max( ( Max( ( AMS / DDR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( ( FirstVNF_Mem_Server / ( Max( AMS,FirstVNF_CPU_Server ) - PN ) ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Max( MUR,CS ) ) - Max( RCSe,Max( ( RMSe + CS ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.7687366167023555, "obj2": 0.11465066863712467}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( ( DDR + RRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( ( AMS - FirstVNF_CPU_Server ) - ( MDR - AMS ) ) ) ) ,Min( ( AMS / ( FirstVNF_RAM_Server / DDR ) ) ,Min( BR ,AMS ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - AMS )", "choosing": "( ( MUM + Max( ( MUM * ( RCSe + MUM ) ),MLU ) ) - ( ( MUR * ( MUC + ( ( RRSe + Max( MUR,MUM ) ) * RRSe ) ) ) * ( Min( ( CS + DS ) ,( MUC - Min( CS ,( CS - Min( MUM ,MUM ) ) ) ) ) + CS ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1134817792929335}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) + ( ( Const - ( Min( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * ( Max( MDR,PN ) - DDR ) ) ,FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Min( RCSe ,( MLU + RCSe ) ) ) - Max( RCSe,Max( ( RRSe / ( MUC / CS ) ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( RRSe * ( MUC + ( MUR - ( CS + RCSe ) ) ) ) ) - Max( ( RMSe * RMSe ),RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.7623126338329764, "obj2": 0.11818888227565444}, {"determining": "( ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( Const + FirstVNF_RAM_Server ) ) ),ARS ) ) - ( DDR + FirstVNF_RAM_Server ) ) - Max( ( Min( MDR ,BR ) / AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) + ( MUC * ( DS / ( ( ( RCSe * RCSe ) * DS ) + MUM ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( Const - ( Max( ( Max( ( BR / ARS ),Min( AMS ,ARS ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( ARS + ARS ) ) ) ) / CRS ) + ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - MUR ) + ( MUC / ( CS / ( RMSe + Min( ( RMSe - MUR ) ,( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12386164412351526}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( Min( Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server * ( MDR / Min( MDR ,MDR ) ) ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14191213456735555}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( Min( MRS ,RRS ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( MUM ,( ( Max( MUR,MUC ) / MLU ) - CS ) ) - ( MUC * DS ) )", "obj1": 0.7880085653104925, "obj2": 0.10402643818474572}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * ( ( Min( Max( AMS,CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Max( ( AMS / DDR ),( RRS * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / Max( MLU,CS ) ) ) ) ) ,( ( Max( MUM,MLU ) * RMSe ) * Max( CS,MUM ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09233064948347444}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS - CRS ) ,( ( Const * AMS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( ( CRS - MRS ) / ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( MRS - ( RRS + CRS ) ) / CRS ) ) / CRS ) ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( CS * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + ( CS + Min( RCSe ,Min( Min( MUM ,( ( MUM + MUM ) - CS ) ) ,Min( RMSe ,DS ) ) ) ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02111369673818623}, {"determining": "( ( ( Min( ( Max( ( BR + Min( PN ,Const ) ),PN ) / ( FirstVNF_Mem_Server / ( PN - Max( AMS,Const ) ) ) ) ,Min( ( AMS - CRS ) ,Max( ACS,FirstVNF_CPU ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / MDR ) ) ) + ( ( Const - MRS ) + CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( DS - Max( DS,( ( CS + ( ( RMSe / RRSe ) / RRSe ) ) + Max( CS,Min( MUR ,( MUC * MUC ) ) ) ) ) ) * DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11244529984803632}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,ACS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( ( MUM * DS ) * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10174417296326382}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_CPU ) ),BR ),MRS ) ) ) + ( ( Const - Max( CRS,FirstVNF_CPU_Server ) ) / CRS ) )", "choosing": "Min( ( MUR + Min( MLU ,DS ) ) ,( ( ( ( MUM * MUM ) / MLU ) / RRSe ) + ( ( RCSe - ( Min( Min( RMSe ,( MLU * RMSe ) ) ,RMSe ) + CS ) ) + DS ) ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) + CRS ) ) * ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( ( PN / ( ARS - FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / CRS ) ) )", "choosing": "( Min( ( ( DS - RMSe ) * ( Min( DS ,( MLU - MLU ) ) * Min( Min( ( Max( MUR,RRSe ) - MLU ) ,Min( RRSe ,Max( RRSe,RCSe ) ) ) ,CS ) ) ) ,Max( RCSe,( RMSe * Max( MUC,Min( MUR ,( MUC - MUM ) ) ) ) ) ) + ( ( RCSe - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.12676341880108435}, {"determining": "( ( ( Max( Min( ( AMS - CRS ) ,Min( ( FirstVNF_Mem_Server - CRS ) ,Max( ( FirstVNF_RAM_Server - MRS ),ACS ) ) ),FirstVNF_Mem_Server ) - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - BR ) ) - Min( ( DDR / FirstVNF_Mem_Server ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / DS ) * ( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * ( ( Min( Max( AMS,CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Max( ( AMS / DDR ),( RRS * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / Max( AMS,FirstVNF_CPU ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( ( Min( RCSe ,CS ) + CS ) + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / Max( MLU,CS ) ) ) ) ) ,( ( Max( MUM,MLU ) * RMSe ) * Max( CS,MUM ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09574362530655407}, {"determining": "( ( Min( ( Const - MRS ) ,CRS ) + ( ( CRS - MRS ) - ( ( MDR + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * ACS ) ,Max( FirstVNF_RAM,Const ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( Min( CS ,( CS * ( MUC / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU / ( MUC / RMSe ) ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) + Min( MUM ,( ( CS - MUR ) * DS ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09709165324555027}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,( Max( RCSe,RRSe ) * ( Max( MUC,MLU ) + RRSe ) ) ) - Min( MUR ,( CS * MLU ) ) )", "obj1": 0.9421841541755889, "obj2": 0.028333373781624222}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / MRS )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( RCSe / RMSe ) + DS ) ) ) / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}], "31": [{"determining": "( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( ( ( CRS - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) / FirstVNF_RAM_Server ) / FirstVNF_Mem ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,Min( RRSe ,( MUC - ( ( ( ( RRSe - DS ) - RMSe ) / MUR ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - MUC ),MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.6638115631691649, "obj2": 0.21627350531508344}, {"determining": "( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - ( Max( ( Max( ( CRS / FirstVNF_Mem_Server ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,MDR ) ) ) / CRS ) )", "choosing": "( ( RCSe - ( MUR - RRSe ) ) + Max( CS,( ( MLU / ( ( Max( MUR,( MUR * RRSe ) ) + RRSe ) / MUM ) ) + Min( ( RMSe - RMSe ) ,MUR ) ) ) )", "obj1": 0.6659528907922913, "obj2": 0.21381227244098616}, {"determining": "( ( ( ( Const + ( Min( FirstVNF_CPU ,CRS ) / ARS ) ) / CRS ) + ( Min( ( AMS - CRS ) ,( FirstVNF_RAM_Server - ARS ) ) - Max( ( RRS + DDR ),( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM_Server / Const ) )", "choosing": "( ( ( Max( CS,MUM ) / ( Min( RCSe ,MUM ) - Min( RMSe ,( Max( RCSe,DS ) - RMSe ) ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,Min( RRSe ,MLU ) ) ,DS ) )", "obj1": 0.6680942184154176, "obj2": 0.19006101667003103}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.17537914826532322}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + Min( MRS ,( ACS + ARS ) ) ),BR ),MRS ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( ( MLU * RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Min( MUR ,( ( MLU + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) ) )", "obj1": 0.7044967880085653, "obj2": 0.14884977365830573}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( Max( AMS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / Max( FirstVNF_CPU,AMS ) ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( ( ( CS / ( RCSe * RCSe ) ) / RRSe ) - Min( MUR ,( ( RCSe / RMSe ) + DS ) ) ) / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.69593147751606, "obj2": 0.15960267625169508}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + ( DDR / FirstVNF_RAM_Server ) ) + ( ( ( AMS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * ( DS * MUR ) ) ) / DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( RRSe ,( MUM * MUC ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03791994797484885}, {"determining": "( ( ( ARS * ( ( FirstVNF_Mem * PN ) - ( MDR * ARS ) ) ) - Const ) - ( Const - MDR ) )", "choosing": "( ( Min( MUM ,( RMSe + MUC ) ) * ( ( ( RRSe - MLU ) * RRSe ) + RCSe ) ) + Min( MUR ,RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.04109253149856394}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( AMS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * RRSe ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07475108427866028}, {"determining": "( ( ( ( CRS - ( PN / FirstVNF_Mem ) ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( MDR - ( ( ARS - AMS ) * ( Const - CRS ) ) ) )", "choosing": "Min( RMSe ,( MUR + Max( ( ( RMSe - RRSe ) + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ),MUM ) ) )", "obj1": 0.892933618843683, "obj2": 0.05144901732757527}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU - RRSe ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.8758029978586723, "obj2": 0.059292406062507894}, {"determining": "( ( ( ( CRS - MRS ) - ( ( MDR + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * ACS ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - Min( Min( ( ( Max( MRS,Const ) * ( MRS - CRS ) ) / CRS ) ,( ( FirstVNF_Mem_Server - ( CRS - Min( MRS ,FirstVNF_Mem ) ) ) - CRS ) ) ,( ( MRS / DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU / ( MUC / RCSe ) ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) + ( Min( MUM ,DS ) - DS ) )", "obj1": 0.9271948608137045, "obj2": 0.033045850444409476}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) )", "choosing": "Min( ( ( Min( ( Min( MLU ,DS ) / ( RRSe + Max( MUR,CS ) ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( RCSe * Min( ( RRSe + Max( ( RRSe + RMSe ),( RRSe / RMSe ) ) ) ,( RCSe + MUC ) ) ) ) + ( ( MUC - RMSe ) * MLU ) ) ,( MUR + Min( ( RMSe + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06702592431672236}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( CRS - Const ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8372591006423983, "obj2": 0.08112831079090736}, {"determining": "( ( Min( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) * Max( Max( MLU,MUR ),RMSe ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10735233228295338}, {"determining": "( ( ( ( MRS - CRS ) - ( ( DDR + RRS ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,( FirstVNF_CPU * ( FirstVNF_Mem + ARS ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - RCSe ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( ( ( Min( Min( RMSe ,MUM ) ,Min( MLU ,RMSe ) ) - Min( RCSe ,DS ) ) + ( RMSe / CS ) ) ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUR ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.8565310492505354, "obj2": 0.06702592431672236}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( ( ( CRS - MRS ) - ( ( MDR + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) + ( Min( MUM ,DS ) - DS ) )", "obj1": 0.8629550321199143, "obj2": 0.06374757365233535}, {"determining": "( ( FirstVNF_Mem * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( ( AMS - FirstVNF_CPU ) - ( ( Max( FirstVNF_CPU,ACS ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) ) )", "obj1": 0.9014989293361885, "obj2": 0.0463844842516908}, {"determining": "( Min( ( ( MRS * ( PN / Min( RRS ,DDR ) ) ) / FirstVNF_RAM ) ,( AMS - CRS ) ) * ( Max( ACS,MRS ) + ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Min( Min( RCSe ,( MUM + RRSe ) ) ,RRSe ) ,( ( ( MUC / MUC ) - RCSe ) - RCSe ) ) + DS )", "obj1": 0.6937901498929336, "obj2": 0.16209678300509572}, {"determining": "( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ( PN * ( RRS * ARS ) ) ) ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) + ( ( Max( ( PN * AMS ),Const ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / CRS ) ) - ( AMS - ( RRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Max( ( MUR / Max( ( CS * MUM ),MLU ) ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.08283171448933775}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( AMS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * RRSe ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.07475108427866028}, {"determining": "( ( ( Min( ( AMS - CRS ) ,( MRS + ( ( ( DDR / ARS ) * PN ) - RRS ) ) ) - Min( MRS ,( FirstVNF_CPU_Server * MRS ) ) ) + ( ( Const - FirstVNF_CPU_Server ) / CRS ) ) - Max( AMS,ARS ) )", "choosing": "( ( ( ( RMSe * ( MUM * DS ) ) - RRSe ) * Max( MLU,MUM ) ) + Max( ( MUC * Min( RMSe ,MUC ) ),Min( RCSe ,( MUM - Max( ( Max( ( MUC / RRSe ),( MLU - MLU ) ) - ( RMSe + CS ) ),MUM ) ) ) ) )", "obj1": 0.6766595289079229, "obj2": 0.17993107537824626}, {"determining": "( ( FirstVNF_RAM_Server * ACS ) + ( ( Const - ( Min( ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * ( Max( MDR,PN ) - DDR ) ) ,FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Min( RCSe ,( MLU + RCSe ) ) ) - Max( RCSe,Max( ( RRSe / ( MUC / CS ) ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( RRSe * ( MUC + ( MUR - ( CS + RCSe ) ) ) ) ) - Max( ( RMSe * RMSe ),RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.7623126338329764, "obj2": 0.11818888227565444}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MUM ) ) - ( MUR - RRSe ) ) + Max( CS,( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9507494646680942, "obj2": 0.024018699321358732}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( Min( MRS ,RRS ),FirstVNF_CPU ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( MUM ,( ( Max( MUR,MUC ) / MLU ) - CS ) ) - ( MUC * DS ) )", "obj1": 0.7880085653104925, "obj2": 0.10394560297926315}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU,AMS ) ) + FirstVNF_Mem ) ) * ( ( Max( AMS,( FirstVNF_RAM / FirstVNF_RAM ) ) / FirstVNF_RAM ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( DS - Min( RRSe ,Max( ( ( MUM - MUC ) - MUC ),( Max( ( RRSe * MUR ),( DS / RCSe ) ) + RMSe ) ) ) ) * Min( Min( RRSe ,( MUR / RRSe ) ) ,( RCSe / ( MUC / ( Max( RMSe,( ( MLU / RMSe ) + CS ) ) - ( Max( RCSe,( MUR * RCSe ) ) / ( Min( MUM ,RRSe ) + Max( RCSe,CS ) ) ) ) ) ) ) )", "obj1": 0.6895074946466809, "obj2": 0.16638101292468097}, {"determining": "( ( Min( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) / CRS ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) * Max( Max( MLU,MUR ),MUM ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02111369673818623}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( Max( PN,Min( RRS ,DDR ) ) * MRS ) / CRS ) ) - ( ( ( DDR / Max( Const,( FirstVNF_RAM_Server * AMS ) ) ) + DDR ) + ( ( ( AMS / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( Min( MLU ,Max( RRSe,MUM ) ) - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR * ( CS * RMSe ) ) / DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( RRSe ,( MUM * MUC ) ) ) )", "obj1": 0.9100642398286938, "obj2": 0.04536611011120292}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) - ( ( DDR + Const ) + ( FirstVNF_RAM_Server / Const ) ) ) + ( ( Const - MRS ) / CRS ) ) * ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + BR ) ) )", "choosing": "Min( ( ( MLU - ( MLU / ( Min( MUR ,( CS + MUM ) ) / Min( ( ( MUR * DS ) - DS ) ,( ( DS * MUM ) * MUM ) ) ) ) ) / CS ) ,( MUR + Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( Max( ( DS * MUR ),DS ) ,Min( Max( MUR,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.815845824411135, "obj2": 0.0889813239595097}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * Min( ( ARS - ACS ) ,MRS ) )", "choosing": "( ( Min( MUC ,( Min( MUM ,( ( RRSe - MUM ) - MUM ) ) * MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.734475374732334, "obj2": 0.13286766542855738}, {"determining": "( ( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) * ( Max( Max( FirstVNF_RAM,Max( DDR,( ( ACS + ARS ) - FirstVNF_CPU_Server ) ) ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( DDR + ( DDR / FirstVNF_RAM_Server ) ) + ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - MUM ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( RCSe / RMSe ) + DS ) ) ) / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.7237687366167024, "obj2": 0.13809670349117006}, {"determining": "( ( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( DDR * FirstVNF_Mem_Server ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( PN / Min( RRS ,DDR ) ) * MRS ) + CRS ) ) * ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( ( PN / ( ARS - FirstVNF_RAM_Server ) ) + DDR ) / FirstVNF_Mem ) ) ) + ( ( MRS - Const ) / CRS ) ) )", "choosing": "( Min( ( ( DS - RMSe ) * ( Min( DS ,( MLU - MLU ) ) * Min( Min( ( Max( MUR,RRSe ) - MLU ) ,Min( RRSe ,Max( RRSe,RCSe ) ) ) ,CS ) ) ) ,Max( RCSe,( RMSe * Max( MUC,Min( MUR ,( MUC - MUM ) ) ) ) ) ) + ( ( RCSe - DS ) + ( RCSe * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.12676341880108435}, {"determining": "( ( ( DDR / FirstVNF_RAM_Server ) - ( ( Max( Const,( ( ( FirstVNF_RAM - Const ) - BR ) / Min( Const ,MDR ) ) ) / FirstVNF_Mem ) - ( ( MDR - AMS ) * ( Const - CRS ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( DS / ( ( ( RMSe + ( ( RCSe * ( MUM - MUM ) ) / RCSe ) ) / RMSe ) - ( ( ( DS + MLU ) / ( DS - ( RMSe * RCSe ) ) ) + ( RRSe * Max( RCSe,( MUM / ( MUM / DS ) ) ) ) ) ) ) + ( ( CS / ( RMSe + RRSe ) ) + RRSe ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( RRS + BR ) ) - ( FirstVNF_Mem_Server + ACS ) ) + ( ( Const - Min( AMS ,FirstVNF_CPU ) ) / CRS ) ) - ( Const - MRS ) )", "choosing": "( ( Max( ( ( RCSe + MUM ) - Min( ( ( RMSe * Min( MUR ,CS ) ) - RMSe ) ,RMSe ) ),Max( ( RMSe / DS ),CS ) ) - ( ( ( ( ( ( MUR / RRSe ) - ( MLU - DS ) ) + ( DS * ( DS * MUR ) ) ) * RRSe ) * DS ) - Min( ( RRSe * RMSe ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6723768736616702, "obj2": 0.18610912524206827}, {"determining": "( Min( BR ,AMS ) + ( ( Const - ( Min( ( Max( ( MRS / BR ),Max( AMS,FirstVNF_CPU ) ) * Min( DDR ,DDR ) ) ,FirstVNF_CPU_Server ) * ( MRS + ( BR / CRS ) ) ) ) / CRS ) )", "choosing": "( ( Max( ( Max( DS,Max( RMSe,CS ) ) - Max( RCSe,Max( ( RMSe + CS ),RCSe ) ) ),Max( CS,MUM ) ) - ( ( DS * ( ( MUC + ( ( MUR / CS ) - ( MLU + RCSe ) ) ) * RRSe ) ) - Min( ( RMSe * RMSe ) ,RRSe ) ) ) * ( ( MUC + ( ( CS + ( RRSe - RCSe ) ) / RRSe ) ) * MUC ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( FirstVNF_CPU,ARS ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( ( Max( RMSe,MUM ) * MUC ) / Max( ( MLU * RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / ( MLU - RCSe ) )", "obj1": 0.8329764453961456, "obj2": 0.0819208269283406}, {"determining": "( ( Min( ( Const - MRS ) ,CRS ) + ( ( CRS - MRS ) - ( ( MDR + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * ACS ) ,Max( FirstVNF_RAM,Const ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( Min( CS ,( CS * ( MUC / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU / ( MUC / RMSe ) ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) + Min( MUM ,( ( CS - MUR ) * DS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.06374757365233535}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) * ( FirstVNF_RAM - ARS ) )", "choosing": "( ( Max( RRSe,( ( ( Max( RMSe,MUR ) * RRSe ) - ( ( ( CS + MLU ) - MLU ) * RCSe ) ) - Min( RRSe ,DS ) ) ) * Max( MUM,( ( Min( RCSe ,( RMSe / Min( DS ,MUM ) ) ) * Min( MLU ,RMSe ) ) - DS ) ) ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.9678800856531049, "obj2": 0.015852831708252347}, {"determining": "( ( Min( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( MUR ,( ( ( ( RMSe * RMSe ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) - ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) )", "obj1": 0.7773019271948608, "obj2": 0.1092863371543289}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - ( DDR + ( MRS / ACS ) ) ) )", "choosing": "( Min( ( MLU / MUM ) ,( Max( RCSe,RRSe ) * ( Max( MUC,MLU ) + RRSe ) ) ) - Min( MUR ,( CS * MLU ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011390711804513776}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + ( FirstVNF_CPU * MRS ) ) + ( FirstVNF_CPU / Min( FirstVNF_RAM_Server ,Min( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ,( BR * Const ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( ( CS * ( RRSe / MUM ) ) ,CS ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MLU ) ) ) ) + Max( ( Max( ( Min( Max( DS,CS ) ,RCSe ) + ( MLU - ( MLU / RMSe ) ) ),MUM ) - MLU ),RCSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.09926488481108163}, {"determining": "( ( ( DDR * ( Max( Max( AMS,FirstVNF_CPU ),( DDR / BR ) ) * FirstVNF_CPU_Server ) ) * ( Min( Max( FirstVNF_RAM,Max( DDR,( Max( AMS,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) ) ,FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * Min( FirstVNF_Mem_Server ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( ( MUM / RMSe ) / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) / MUC ) ) + ( MLU + DS ) ) )", "obj1": 0.7301927194860813, "obj2": 0.1350894481366565}, {"determining": "( ( ( MDR - ACS ) * ( FirstVNF_RAM * BR ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) * ( ( ( Max( ( DDR / AMS ),( AMS - FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( RRSe,( Min( MUR ,Max( DS,Max( Max( MLU,( CS + MUC ) ),RCSe ) ) ) * MUM ) ) + ( ( MUM - DS ) + ( MLU - DS ) ) )", "obj1": 0.8244111349036403, "obj2": 0.08710438393383411}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( ( Min( Max( ACS,FirstVNF_Mem ) ,Max( Max( PN,RRS ),Const ) ) - MRS ) / CRS ) ) - ( AMS - FirstVNF_RAM ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),( ( CS - RRSe ) + Min( RRSe ,MLU ) ) ),( ( ( Max( ( DS * CS ),( MUR * MUR ) ) - ( Max( ( RMSe + MUR ),Min( RRSe ,DS ) ) * ( DS - RCSe ) ) ) * ( MUM * MUM ) ) + ( Min( RRSe ,MUM ) / ( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) ) ) ) + Min( ( MLU - RRSe ) ,( CS * ( MUR - RRSe ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.140952569576909}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * ( ( Min( Max( AMS,CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Min( AMS ,Max( DDR,MRS ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / Max( MLU,CS ) ) ) ) ) ,( ( Max( MUR,MLU ) * RMSe ) * ( RRSe * RCSe ) ) )", "obj1": 0.8115631691648822, "obj2": 0.09321165049870242}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( FirstVNF_RAM * BR ) ) * ( ( Min( ( AMS - CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Max( ( AMS / DDR ),( AMS - FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - MRS ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Max( RRSe,MUM ) + ( ( MUC - MUM ) + ( MLU - DS ) ) )", "obj1": 0.8222698072805139, "obj2": 0.08808247747721683}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( FirstVNF_RAM_Server,BR ),( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( Min( DS ,RRSe ) - Max( ( RRSe + Min( ( MUR / DS ) ,RRSe ) ),MUR ) )", "obj1": 0.880085653104925, "obj2": 0.05672191693850759}, {"determining": "( ( ( RRS / ( RRS - FirstVNF_CPU ) ) + ( ( ( FirstVNF_RAM + ( PN * ( ( ARS - ARS ) / ACS ) ) ) - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) ) - ( AMS - MDR ) )", "choosing": "Min( ( MLU - Max( MLU,MUR ) ) ,( ( ( ( Max( MUC,( CS - MUC ) ) / MUR ) + RMSe ) + MUM ) - ( RMSe / RCSe ) ) )", "obj1": 0.9914346895074947, "obj2": 0.003766036430200043}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / ( MDR + DDR ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( PN * AMS ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( DS ,( MLU / ( MUC / RMSe ) ) ) - MUR ) )", "obj1": 0.708779443254818, "obj2": 0.14754354157389}, {"determining": "( ( ( Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) - Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( PN * AMS ) )", "choosing": "( Min( MUM ,RRSe ) - ( Min( DS ,DS ) - MUR ) )", "obj1": 0.728051391862955, "obj2": 0.1368245964953443}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_RAM ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( FirstVNF_Mem / ( ARS - CRS ) ) * MRS ) / CRS ) ) - ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( ( DDR / FirstVNF_RAM_Server ) + DDR ) ) ) + ( Min( Const ,MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUR * MUR ) ) ) ) ) ,( DS + Min( CS ,MUM ) ) )", "obj1": 0.7387580299785867, "obj2": 0.130882857667694}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * ( ( Min( Max( AMS,CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Min( AMS ,Max( DDR,MRS ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / Max( MLU,CS ) ) ) ) ) ,( ( Max( MUR,MLU ) * RMSe ) * ( RRSe * RCSe ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09574362530655407}, {"determining": "( ( ( ( MRS - CRS ) - ( ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( Min( MUM ,( RMSe + MUC ) ) * ( ( ( RRSe - MLU ) * RRSe ) + RCSe ) ) + Min( MUR ,RMSe ) )", "obj1": 0.9700214132762313, "obj2": 0.013455905594631931}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( BR / DDR ),( AMS / DDR ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( Max( AMS,CRS ) - PN ) ) ) ) / CRS ) )", "choosing": "( ( Max( MUM,( RCSe - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - DS ) + ( MUC / ( CS / ( ( RCSe / Min( CS ,CS ) ) + ( ( ( RCSe + MUC ) + ( MUC / MUC ) ) * DS ) ) ) ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12178744528331217}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + DDR )", "choosing": "( ( Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( Min( ( Const - MRS ) ,CRS ) + ( ( CRS - MRS ) - ( ( MDR + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * ACS ) ,Max( FirstVNF_RAM,Const ) ) ) ) ) ) ) - ( AMS - MDR ) )", "choosing": "( ( ( Min( CS ,( CS * ( MUC / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( MLU / ( MUC / RMSe ) ) / RRSe ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) + Min( MUM ,( ( CS - MUR ) * DS ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09709165324555027}, {"determining": "( ( ( Const - ( Max( ( Max( ( BR / ARS ),Min( AMS ,ARS ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( ARS + ARS ) ) ) ) / CRS ) + ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - MUR ) + ( MUC / ( CS / ( RMSe + Min( ( RMSe - MUR ) ,( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12386164412351526}, {"determining": "( ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( BR / DDR ),( AMS / DDR ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( Max( AMS,CRS ) - PN ) ) ) ) / CRS ) )", "choosing": "( ( Min( RRSe ,RRSe ) * Max( MUR,( MUM - Max( Min( ( ( MUM + RMSe ) - MUC ) ,( CS + Max( MUC,MLU ) ) ),MUM ) ) ) ) + ( ( MLU - ( RCSe / Min( RCSe ,( ( Max( RRSe,MUM ) / RMSe ) / RCSe ) ) ) ) + ( ( ( MLU + Min( DS ,RRSe ) ) * ( Min( ( CS + MUM ) ,( MUC - Min( CS ,RRSe ) ) ) + CS ) ) * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.7558886509635975, "obj2": 0.12178744528331217}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ( FirstVNF_Mem_Server * CRS ) / FirstVNF_CPU ) ),BR ),MRS ) ) ) + ( ( Const - Max( CRS,FirstVNF_CPU_Server ) ) / CRS ) )", "choosing": "Min( ( MUR + Min( MLU ,DS ) ) ,( ( ( ( MUM * MUM ) / MLU ) / RRSe ) + ( ( RCSe - ( Min( Min( RMSe ,( MLU * RMSe ) ) ,RMSe ) + CS ) ) + DS ) ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Min( MRS ,RRS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) ) - ( ARS - Max( DDR,ACS ) ) )", "choosing": "Min( ( CS - DS ) ,( RCSe + ( MLU - Min( ( ( MUM + ( DS / MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) ,DS ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14301822456575125}, {"determining": "( ( ( Max( ( Max( ( AMS / DDR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - ( Max( ( Max( ( DDR / BR ),Max( AMS,AMS ) ) * FirstVNF_CPU_Server ),FirstVNF_CPU_Server ) * Min( MRS ,( ACS + ARS ) ) ) ) / CRS ) )", "choosing": "( ( ( ( ( ( ( DS * MUR ) * DS ) / ( RRSe * MUC ) ) / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) + ( ( MLU - DS ) + ( MUC * ( CS / ( RRSe * RMSe ) ) ) ) )", "obj1": 0.9635974304068522, "obj2": 0.01781053188543846}, {"determining": "( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( ( ( CRS - FirstVNF_Mem_Server ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( ( FirstVNF_CPU - Min( FirstVNF_CPU ,( Const * FirstVNF_CPU ) ) ) / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( Min( CS ,( CS * ( RRSe / MUM ) ) ) + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,( MUR + ( Max( ( ( ( Min( RMSe ,CS ) - Max( MUC,MUR ) ) * RCSe ) + Max( Min( MLU ,MUM ),RCSe ) ),Max( DS,MUR ) ) / MUC ) ) )", "obj1": 0.9828693790149893, "obj2": 0.007532072860400086}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ( Min( ( AMS - CRS ) ,( Const - MRS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( DS * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( RRSe ,( MUM * MUC ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18156101245222953}, {"determining": "( ( ( Min( ( AMS - CRS ) ,Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( MUR * ( MUC + ( Min( ( RMSe * MUM ) ,MLU ) * RRSe ) ) ) * DS ) )", "obj1": 0.7751605995717344, "obj2": 0.11155801570847645}, {"determining": "( ( DDR * ARS ) * ( ( ( MDR - ARS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) / ( ( Max( ARS,PN ) * Const ) / FirstVNF_Mem ) ) ) / ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) * DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( ( Max( DS,( DS + Min( MUM ,( DS + MUM ) ) ) ) + ( ( Max( RRSe,RRSe ) - Min( CS ,( MUR * RMSe ) ) ) * MUR ) ) ,( MUC * ( ( ( ( RRSe / MUM ) - RMSe ) / MUR ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.7430406852248393, "obj2": 0.12779989824598154}, {"determining": "( ( ( ( Max( MDR,( ACS * ( FirstVNF_RAM + DDR ) ) ) + ( CRS - Const ) ) - Min( Max( ACS,Const ) ,MRS ) ) - ( Max( ( FirstVNF_RAM * AMS ),( BR * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - ( BR / DDR ) ) ) ) ) / ( ARS * PN ) )", "choosing": "( ( ( MUR + ( DS + MLU ) ) - ( MUR - RRSe ) ) + Max( CS,( Min( RCSe ,MUR ) + ( ( ( MUM + MUR ) / Max( DS,DS ) ) + Min( ( MUC * MUM ) ,DS ) ) ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( Min( MUM ,( MLU - RMSe ) ) ,DS ) - Min( MUC ,RMSe ) ) ,MUM ) - ( RRSe * RMSe ) )", "obj1": 0.9421841541755889, "obj2": 0.028333373781624222}, {"determining": "( ( ( Const - ( Max( ( Max( ( BR / ARS ),Min( AMS ,ARS ) ) * FirstVNF_Mem ),FirstVNF_CPU_Server ) * Min( MRS ,( ARS + ARS ) ) ) ) / CRS ) + ( Min( ( AMS - ( DDR * ARS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( MUM,( ( ( RCSe * ( ( MUC * DS ) / Min( MUC ,MUM ) ) ) * Min( ( RMSe * MUM ) ,MLU ) ) - DS ) ) + Min( RRSe ,RRSe ) ) + ( ( MLU - MUR ) + ( MUC / ( CS / ( RMSe + Min( ( RMSe - MUR ) ,( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.12386164412351526}, {"determining": "( ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + Const ) * ( ( ( CRS - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) / FirstVNF_Mem ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR / ( MLU / Max( MUM,( Min( RMSe ,MUM ) - MUM ) ) ) ) + ( MUR + Min( ( MUC * MUM ) ,DS ) ) ) ) ,Min( RRSe ,( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUR ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.005344067635451045}, {"determining": "( ( Min( ( AMS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) + Max( Max( FirstVNF_RAM_Server,BR ),( MDR / FirstVNF_Mem_Server ) ) ) ) + ( Const + PN ) )", "choosing": "Min( Max( Min( ( ( CS * RCSe ) * MLU ) ,RRSe ),( Min( MUR ,( ( ( ( RMSe * MUM ) + Min( MLU ,MLU ) ) + Max( RCSe,DS ) ) + MUM ) ) * RRSe ) ) ,( MUR + Min( MUM ,DS ) ) )", "obj1": 0.7130620985010707, "obj2": 0.14528403580919177}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS - CRS ) ,Min( BR ,MDR ) ) - ( ( Const - Min( AMS ,FirstVNF_CPU ) ) / CRS ) ) + ( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS + ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) / CRS ) ) )", "choosing": "( Min( Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ,( Max( CS,MUR ) - ( ( RRSe * MUC ) / ( Min( ( RMSe / RMSe ) ,Min( ( MLU - DS ) ,RMSe ) ) * ( MUM * ( RCSe + RRSe ) ) ) ) ) ) + DS )", "obj1": 0.8779443254817987, "obj2": 0.05823597600161007}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_RAM ) + Const ) ) * ( ( Min( ( AMS - CRS ) ,( ( ( FirstVNF_Mem / ( ARS - CRS ) ) * MRS ) / CRS ) ) - ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) + ( ( DDR / FirstVNF_RAM_Server ) + DDR ) ) ) + ( Min( Const ,MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / ( MUR * MUR ) ) ) ) ) ,( DS + Min( CS ,MUM ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10112888077939274}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( AMS ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - Max( ( Max( DDR,PN ) - FirstVNF_RAM_Server ),Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * RRSe ) / MLU ) / RRSe ) ) ) ) + Max( ( DS - MLU ),Min( MUR ,RMSe ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.1169925849615251}, {"determining": "Max( ( Min( ( Min( RRS ,RRS ) / MDR ) ,Const ) * FirstVNF_Mem ),( RRS / ( FirstVNF_CPU_Server - MDR ) ) )", "choosing": "( ( Min( RRSe ,DS ) * Min( ( ( Max( ( MUC * ( MLU - MLU ) ),( RCSe / Max( RMSe,MUR ) ) ) - MUC ) * MUR ) ,( Min( DS ,RRSe ) * MUR ) ) ) + Max( RRSe,Min( RCSe ,Max( Min( RMSe ,RRSe ),( DS + MUM ) ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( ( DDR + RRS ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) ) - Min( ( Max( FirstVNF_RAM,PN ) / ( FirstVNF_Mem_Server / ( ( AMS - FirstVNF_CPU_Server ) - ( MDR - AMS ) ) ) ) ,Min( ( AMS / ( FirstVNF_RAM_Server / DDR ) ) ,Min( BR ,AMS ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - AMS )", "choosing": "( ( MUM + Max( ( MUM * ( RCSe + MUM ) ),MLU ) ) - ( ( MUR * ( MUC + ( ( RRSe + Max( MUR,MUM ) ) * RRSe ) ) ) * ( Min( ( CS + DS ) ,( MUC - Min( CS ,( CS - Min( MUM ,MUM ) ) ) ) ) + CS ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1134817792929335}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,AMS ),FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( Min( MRS ,RRS ),Max( FirstVNF_CPU,ACS ) ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( Min( MUM ,( ( Max( MUR,MUC ) / MLU ) - CS ) ) - ( ( RMSe * MUM ) * DS ) )", "obj1": 0.7901498929336188, "obj2": 0.10285264793729243}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,DDR ) ) + Max( FirstVNF_Mem,( Max( DDR,( MRS / ACS ) ) / ( CRS - ( ACS + FirstVNF_Mem_Server ) ) ) ) ) ) ) * ( ( Min( Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server * ( MDR / Min( MDR ,MDR ) ) ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( MUC ,Max( Min( MUM ,CS ),MUM ) ) + ( DS * RCSe ) ) + ( ( ( MLU / MUM ) * ( CS / Max( RRSe,( ( Min( MLU ,RCSe ) + DS ) - MUR ) ) ) ) + ( MLU - DS ) ) )", "obj1": 0.7173447537473233, "obj2": 0.14191213456735555}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * ( ( Min( Max( AMS,CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Max( ( AMS / DDR ),( RRS * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( RCSe + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / Max( MLU,CS ) ) ) ) ) ,( ( Max( MUM,MLU ) * RMSe ) * Max( CS,MUM ) ) )", "obj1": 0.8137044967880086, "obj2": 0.09233064948347444}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS - CRS ) ,( ( Const * AMS ) / CRS ) ) - ( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS / ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) / CRS ) ) )", "choosing": "Min( RMSe ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ) )", "obj1": 0.9528907922912205, "obj2": 0.02111369673818623}, {"determining": "( ( ( Min( ( Max( ( BR + Min( PN ,Const ) ),PN ) / ( FirstVNF_Mem_Server / ( PN - Max( AMS,Const ) ) ) ) ,Min( ( AMS - CRS ) ,Max( ACS,FirstVNF_CPU ) ) ) - ( ( RRS + DDR ) + ( FirstVNF_Mem / MDR ) ) ) + ( ( Const - MRS ) + CRS ) ) - ( ( MDR + FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - ( ( DS - Max( DS,( ( CS + ( ( RMSe / RRSe ) / RRSe ) ) + Max( CS,Min( MUR ,( MUC * MUC ) ) ) ) ) ) * DS ) )", "obj1": 0.7730192719486081, "obj2": 0.11244529984803632}, {"determining": "( ( Min( AMS ,Max( ( FirstVNF_CPU * ( DDR - ( Const + FirstVNF_RAM_Server ) ) ),ARS ) ) - ( DDR + FirstVNF_RAM_Server ) ) - Max( ( Min( MDR ,BR ) / AMS ),FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Min( CS ,RMSe ) ,( MLU - RCSe ) ) + ( MUC - RRSe ) ) + ( MUC * ( DS / ( ( ( RCSe * RCSe ) * DS ) + MUM ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031278915200518335}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU_Server * MRS ) + FirstVNF_Mem ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( Max( FirstVNF_CPU,ACS ) / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( ( Min( ( ( RRSe / RMSe ) / Min( MLU ,DS ) ) ,Min( Max( RRSe,RCSe ) ,Min( ( MLU - Max( MLU,MLU ) ) ,RCSe ) ) ) / ( ( MUM * DS ) * Min( ( RRSe + Max( ( DS + RMSe ),MUC ) ) ,( RCSe + MUC ) ) ) ) + ( RCSe + RMSe ) ) ,( MUR + Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,CS ) ) )", "obj1": 0.7922912205567452, "obj2": 0.10174417296326382}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( Const + ( ACS / ARS ) ),BR ),MRS ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( ( MLU * RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Min( MUR ,( ( MUM - CS ) * MUR ) ) )", "obj1": 0.8972162740899358, "obj2": 0.04804011619327267}, {"determining": "( ( ( Min( FirstVNF_Mem ,( RRS - Const ) ) - ( ( MDR - AMS ) + ( Const - CRS ) ) ) - ( Max( FirstVNF_RAM,CRS ) / Min( FirstVNF_RAM ,BR ) ) ) / Max( FirstVNF_CPU_Server,Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) )", "choosing": "( ( RMSe - ( MUR - RRSe ) ) + Max( CS,( ( MUM / ( MLU / MUM ) ) + Min( ( Min( Max( ( RCSe / DS ),DS ) ,( ( MUR * MUM ) * ( DS / MUM ) ) ) * Min( MUM ,Min( CS ,( RCSe / MLU ) ) ) ) ,MUR ) ) ) )", "obj1": 0.8865096359743041, "obj2": 0.05646846122098144}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( FirstVNF_Mem_Server,Max( FirstVNF_RAM,AMS ) ) + FirstVNF_Mem ) ) * ( ( Min( Max( AMS,CRS ) ,( FirstVNF_CPU + ACS ) ) - ( ( ( Max( ( AMS / DDR ),( RRS * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) + DDR ) + ( ( Const - Const ) / Max( AMS,FirstVNF_CPU ) ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( Max( ( ( Min( RCSe ,CS ) + CS ) + ( RRSe * RCSe ) ),( RMSe - Max( RMSe,( MUR / Max( MLU,CS ) ) ) ) ) ,( ( Max( MUM,MLU ) * RMSe ) * Max( CS,MUM ) ) )", "obj1": 0.8072805139186295, "obj2": 0.09574362530655407}, {"determining": "( ( ( ( MRS - CRS ) - ( ( RRS + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS - MDR ) )", "choosing": "( ( ( RRSe - DS ) * Max( MUM,MUM ) ) + ( ( Max( RRSe,CS ) + Min( DS ,MUM ) ) + Min( MUR ,( ( MUC / RMSe ) + DS ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.09709165324555027}, {"determining": "( ( ( Min( ( AMS - Max( FirstVNF_RAM,AMS ) ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( Max( Max( ( DDR * ( Max( ( DDR / BR ),Max( AMS,FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ),FirstVNF_RAM_Server ),( Min( FirstVNF_Mem ,Const ) - FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( Min( Min( MUM ,( ( DS - ( MUC - MUC ) ) * ( ( DS - RMSe ) / ( MUC / MUC ) ) ) ) ,DS ) - Min( MUC ,RMSe ) ) ,MUM ) - ( RRSe * RMSe ) )", "obj1": 0.9421841541755889, "obj2": 0.028333373781624222}, {"determining": "( ( ( Min( MRS ,Max( RRS,Const ) ) - ( ( MDR - AMS ) + ( CRS - Const ) ) ) - ( Max( ( FirstVNF_RAM * AMS ),( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Max( AMS,CRS ) - PN ) ) ) ) / MRS )", "choosing": "Min( ( MUR + Min( MUM ,DS ) ) ,( Min( Max( ( MLU - Min( MUR ,( ( MUC / RMSe ) + DS ) ) ),( ( MUC * ( CS / ( RRSe * RMSe ) ) ) + ( ( MLU / RMSe ) / MUM ) ) ) ,( ( MLU - Min( MUR ,( ( RCSe / RMSe ) + DS ) ) ) / RCSe ) ) + ( MLU + DS ) ) )", "obj1": 0.9464668094218416, "obj2": 0.02701134441858794}, {"determining": "( ( DDR * ARS ) * ( ( ( MDR - ARS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) / ( ( Max( ARS,PN ) * Const ) / FirstVNF_Mem ) ) ) / ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) * DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( ( Max( DS,( DS + Min( MUM ,( DS + MUM ) ) ) ) + ( ( Max( RRSe,RRSe ) - Min( CS ,( MUR * RMSe ) ) ) * MUR ) ) ,( MUC * ( ( ( ( RRSe / MUM ) - RMSe ) / MUR ) / Min( ( ( DS * MUR ) * DS ) ,Min( Max( CS,CS ) ,Max( DS,MLU ) ) ) ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0022346293007595094}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * ( Max( Max( FirstVNF_RAM,Min( ( ( AMS - CRS ) + FirstVNF_RAM ) ,CRS ) ),FirstVNF_Mem_Server ) + ( DDR / FirstVNF_RAM_Server ) ) ) * ( ( Min( ( AMS - CRS ) ,( ( Const * MRS ) / FirstVNF_Mem_Server ) ) - ( ( ( PN / ( RRS - FirstVNF_CPU_Server ) ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Max( Max( CS,MUM ),( Min( RCSe ,MUM ) - Min( ( Max( RCSe,DS ) - RMSe ) ,RMSe ) ) ) - ( ( ( ( MUC + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) * DS ) - Min( ( ( CS + ( ( RMSe / RRSe ) / RRSe ) ) + Max( CS,Min( MUR ,( MUC * MUC ) ) ) ) ,RRSe ) ) ) * Min( Min( DS ,( MUM + MUM ) ) ,DS ) )", "obj1": 0.6702355460385439, "obj2": 0.18771669386252382}, {"determining": "( FirstVNF_CPU * ( ( Min( ( AMS - CRS ) ,Min( BR ,MDR ) ) - ( ( Const - Min( AMS ,FirstVNF_CPU ) ) / CRS ) ) + ( ( ( ( CRS - MRS ) - ( ( RRS + ( ARS + ARS ) ) + ( FirstVNF_CPU / MDR ) ) ) + ( ( Const - MRS ) / CRS ) ) / CRS ) ) )", "choosing": "( Min( Min( ( MUM + Max( Max( Max( ( MUM * RCSe ),( MUR * DS ) ),DS ),MUC ) ) ,MUM ) ,( Max( CS,MUR ) - ( ( RRSe * MUC ) / ( Min( ( RMSe / RMSe ) ,Min( ( MLU - DS ) ,RMSe ) ) * ( MUM * ( RCSe + RRSe ) ) ) ) ) ) + DS )", "obj1": 0.9807280513918629, "obj2": 0.008489488983119615}, {"determining": "( ( ( Max( ARS,Min( ( ( Const * FirstVNF_CPU ) * ARS ) ,( FirstVNF_CPU + MDR ) ) ) / FirstVNF_Mem ) / Max( RRS,PN ) ) - ( ( PN - FirstVNF_Mem_Server ) - ( DDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( MUM ,( Min( Min( MLU ,( MLU / MUC ) ) ,Max( Min( MUR ,MUM ),CS ) ) + ( ( MLU + MUC ) + ( RMSe - MUM ) ) ) ) / MLU ) + CS ) + ( MUC * Max( ( ( RCSe * CS ) + MLU ),DS ) ) )", "obj1": 0.9785867237687366, "obj2": 0.010677508251233427}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem + PN ) / RRS ),( Max( BR,Min( Max( ( FirstVNF_CPU_Server + FirstVNF_Mem ),RRS ) ,DDR ) ) + Max( AMS,( ( DDR + ( MRS / ACS ) ) / ( ( ACS + FirstVNF_Mem_Server ) - AMS ) ) ) ) ) ) * ( ( Min( ( AMS - CRS ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) + ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "( ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) - ( ( DS + ( ( MUC + MLU ) * CS ) ) * RRSe ) )", "obj1": 0.7408993576017131, "obj2": 0.1298877283436056}, {"determining": "( ( ( ( MRS - CRS ) - ( ( ( ( FirstVNF_RAM_Server / DDR ) + DDR ) + DDR ) + ( FirstVNF_CPU / Max( FirstVNF_RAM_Server,Min( ( BR * Const ) ,Max( MRS,FirstVNF_RAM_Server ) ) ) ) ) ) + ( ( Const - MRS ) / CRS ) ) - ( AMS / MDR ) )", "choosing": "( ( ( MUC - ( ( ( ( RMSe / RRSe ) - RMSe ) / MUC ) / Min( ( RRSe - ( Max( RRSe,MUM ) + MUC ) ) ,Min( Max( CS,MLU ) ,Max( DS,MLU ) ) ) ) ) - DS ) + ( ( Min( CS ,( CS * ( RRSe / MUM ) ) ) - Min( DS ,( ( ( RRSe * RMSe ) / MUM ) / ( ( ( MUM * MUM ) / MLU ) / MUR ) ) ) ) + Max( ( DS - MLU ),RCSe ) ) )", "obj1": 0.9700214132762313, "obj2": 0.013455905594631931}, {"determining": "( ( Min( ( MRS - DDR ) ,Max( FirstVNF_CPU,ACS ) ) - ( ( RRS + DDR ) + Max( Max( ( ( PN / Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ) + Min( MRS ,CRS ) ),BR ),MRS ) ) ) + ( ( Const - Min( FirstVNF_CPU_Server ,CRS ) ) / CRS ) )", "choosing": "( ( ( Min( RRSe ,( ( RCSe * ( ( CS - MUC ) + DS ) ) - ( Max( Max( RMSe,MUM ),MUC ) / Max( ( MLU * RMSe ),RRSe ) ) ) ) + ( MUM * MUC ) ) / ( CS + CS ) ) / Min( MUR ,( ( Min( ( RMSe * MUM ) ,MLU ) + ( ( MUR / DS ) - ( CS + RCSe ) ) ) * RRSe ) ) )", "obj1": 0.7109207708779444, "obj2": 0.1457633263141723}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ( Min( ( AMS - CRS ) ,CRS ) - ( ( ( DDR / FirstVNF_RAM_Server ) + DDR ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) + ( ( Const - MRS ) / CRS ) ) )", "choosing": "Min( ( Max( ( MUR - RCSe ),( MUR + Min( DS ,MUR ) ) ) * ( ( MUR + ( CS * RMSe ) ) / DS ) ) ,( ( MUM * ( MLU + RRSe ) ) + Min( RRSe ,( MUM * MUC ) ) ) )", "obj1": 0.6745182012847966, "obj2": 0.18156101245222953}]}